quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Availability,Looks good despite the failures (they are due to another issue).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/447#issuecomment-287751151:23,failure,failures,23,https://root.cern,https://github.com/root-project/root/pull/447#issuecomment-287751151,1,['failure'],['failures']
Availability,Looks good with the tests now! The `roottest` failure has probably nothing to do with this PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12536#issuecomment-1484583302:46,failure,failure,46,https://root.cern,https://github.com/root-project/root/pull/12536#issuecomment-1484583302,1,['failure'],['failure']
Availability,"Looks good, I do not see either how this can be implemented without the extra regex search. Let's put it in?; Are the test failures related to these changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1903#issuecomment-383869003:123,failure,failures,123,https://root.cern,https://github.com/root-project/root/pull/1903#issuecomment-383869003,1,['failure'],['failures']
Availability,"Looks like @peremato ninja'd me already, saw the failing build through email and recognized the cmake error through the exit status code on the Jenkins log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/784#issuecomment-316723597:102,error,error,102,https://root.cern,https://github.com/root-project/root/pull/784#issuecomment-316723597,1,['error'],['error']
Availability,Looks like Apple / libc++ broke things:; ```; $ cat repro.cxx; #include <cuchar>; #include <iosfwd>; std::mbstate_t *s;; $ clang -std=c++17 -c repro.cxx; In file included from repro.cxx:2:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iosfwd:99:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__mbstate_t.h:44:9: error: target of using declaration conflicts with declaration already in scope; using ::mbstate_t _LIBCPP_USING_IF_EXISTS;; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_mbstate_t.h:32:28: note: target of using declaration; typedef __darwin_mbstate_t mbstate_t;; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cuchar:49:1: note: conflicting declaration; using ::mbstate_t _LIBCPP_USING_IF_EXISTS;; ^; In file included from repro.cxx:2:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iosfwd:230:14: error: reference to unresolved using declaration; typedef fpos<mbstate_t> streampos;; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cuchar:49:1: note: using declaration annotated with 'using_if_exists' here; using ::mbstate_t _LIBCPP_USING_IF_EXISTS;; ^; ```; (etc). So - just don't upgrade macOS 🤣 Let [me see with the libc++ folks](https://github.com/llvm/llvm-project/issues/62573).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12762#issuecomment-1536464646:472,error,error,472,https://root.cern,https://github.com/root-project/root/issues/12762#issuecomment-1536464646,2,['error'],['error']
Availability,Looks like CDash is down.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5843#issuecomment-642034635:20,down,down,20,https://root.cern,https://github.com/root-project/root/pull/5843#issuecomment-642034635,1,['down'],['down']
Availability,Looks like Jenkins setup failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4562#issuecomment-544518583:25,failure,failure,25,https://root.cern,https://github.com/root-project/root/pull/4562#issuecomment-544518583,1,['failure'],['failure']
Availability,"Looks like errors are due to the infrastructure, not this PR. I will restart the build once that is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1658#issuecomment-367683858:11,error,errors,11,https://root.cern,https://github.com/root-project/root/pull/1658#issuecomment-367683858,1,['error'],['errors']
Availability,"Looks like the builds and tests are happy, not sure what that error is...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10498#issuecomment-1114149611:62,error,error,62,https://root.cern,https://github.com/root-project/root/pull/10498#issuecomment-1114149611,1,['error'],['error']
Availability,Looks like the failure is not modules-related. Shall we close that PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2022#issuecomment-389660341:15,failure,failure,15,https://root.cern,https://github.com/root-project/root/pull/2022#issuecomment-389660341,1,['failure'],['failure']
Availability,Looks like the jenkins build is having problems with the checkout ? Its failing with. ```; ERROR: Timeout after 10 minutes; ERROR: Error fetching remote repo 'origin'; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/453#issuecomment-288187928:91,ERROR,ERROR,91,https://root.cern,https://github.com/root-project/root/pull/453#issuecomment-288187928,3,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,Looks like the windows failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3616#issuecomment-479208807:23,failure,failure,23,https://root.cern,https://github.com/root-project/root/pull/3616#issuecomment-479208807,1,['failure'],['failure']
Availability,"Looks like we need SDKROOT workaround used for 6.22 back:; git diff bump-root-6.22.06 Formula/root.rb; ```diff; ...; def install; - # Work around ""error: no member named 'signbit' in the global namespace""; - ENV.delete(""SDKROOT"") if DevelopmentTools.clang_build_version >= 900; -; # Freetype/afterimage/gl2ps/lz4 are vendored in the tarball, so are fine.; # However, this is still permitting the build process to make remote; # connections. As a hack, since upstream support it, we inreplace; @@ -96,6 +81,10 @@ class Root < Formula; cxx_version = (MacOS.version < :mojave) ? 14 : 17; args << ""-DCMAKE_CXX_STANDARD=#{cxx_version}""; ; + # TODO: probably can be removed; + runtime_cxxmodules = (MacOS.version >= :catalina) ? ""ON"" : ""OFF""; + args << ""-Druntime_cxxmodules=#{runtime_cxxmodules}""; +; # Homebrew now sets CMAKE_INSTALL_LIBDIR to /lib, which is incorrect; # for ROOT with gnuinstall, so we set it back here.; args << ""-DCMAKE_INSTALL_LIBDIR=lib/root""; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881#issuecomment-843430390:147,error,error,147,https://root.cern,https://github.com/root-project/root/issues/7881#issuecomment-843430390,1,['error'],['error']
Availability,Looks like we one of the failures is due to infrastructure and the other fails elsewhere too.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6770#issuecomment-803646768:25,failure,failures,25,https://root.cern,https://github.com/root-project/root/pull/6770#issuecomment-803646768,1,['failure'],['failures']
Availability,"Looks really great, thank you very much. There is only one issue. The history is not being added. I tracked it down to here:. ![image](https://user-images.githubusercontent.com/10653970/108262954-990d7980-7133-11eb-8a03-e76a0c8e9619.png). The command is about to be added, but the history file name is empty, thus it returns on line 73. `fContext->GetHistory()` on TextInput.cpp has an empty history filename. I would suggest that, if SetHistAdd() is called, then it would set the default hist file name in the fContext. Or alternatively, a second parameter in the SetHistAdd function in order to set a custom hist file name. The function to set the hist name is:; `Gl_histinit`. ![image](https://user-images.githubusercontent.com/10653970/108263494-5b5d2080-7134-11eb-9d31-59686ef475c5.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7180#issuecomment-780829052:111,down,down,111,https://root.cern,https://github.com/root-project/root/issues/7180#issuecomment-780829052,1,['down'],['down']
Availability,"Lowering.h(1982): message : see declaration of 'llvm::TargetLoweringBase::isTruncateFree' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXAsmPrinter.cpp)C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocale(1992,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_2c11ad25sy': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXReplaceImageHandles.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2020-08-13T07:46:32.521Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/CodeGen/MachineValueType.h(895,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_de9335b2ex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXISelDAGToDAG.cpp)C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Target/TargetLowering.h(107): note: see declaration of 'llvm::TargetLoweringBase' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXAsmPrinter.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2020-08-13T07:46:32.521Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXAssignValidGlobalNames.cpp : fatal error C1083: Cannot open compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.dir\Release\NVPTXAssignValidGlobalNames.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6175#issuecomment-673320756:1662,error,error,1662,https://root.cern,https://github.com/root-project/root/pull/6175#issuecomment-673320756,1,['error'],['error']
Availability,"MBinaryFormat.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(60,45): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\TableGen\StringMatcher.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\TableGen\LLVMTableGen.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(70,46): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\TableGen\StringMatcher.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\TableGen\LLVMTableGen.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(77,49): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\TableGen\StringMatcher.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\TableGen\LLVMTableGen.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(60,45): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\MSF\MappedBlockStream.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\MSF\LLVMDebugInfoMSF.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(70,46): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\MSF\MappedBlockStream.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\MSF\LL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4491#issuecomment-541437877:2230,error,error,2230,https://root.cern,https://github.com/root-project/root/pull/4491#issuecomment-541437877,2,['error'],['error']
Availability,"ME2_(name,_c)() { if (name) { } } }; ^~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~; /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’; class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }; ~ ^~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~; /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’; class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }; ^~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope; SP_TClassManip(theClass);; ^~~~~~~~~~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: note: ‘ROOT::S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6837#issuecomment-731577667:18961,error,error,18961,https://root.cern,https://github.com/root-project/root/issues/6837#issuecomment-731577667,1,['error'],['error']
Availability,"MSVC\14.23.28105\include\xtree(630,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\LiveInterval.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2021-05-04T07:51:52.743Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocnum(1247,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Analysis\PostOrderCFGView.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Analysis\obj.clangAnalysis.vcxproj] ; - [2021-05-04T07:51:52.743Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/ExprCXX.h(3039,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseDeclCXX.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2021-05-04T07:51:53.144Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/StringMap.h(237,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseTemplate.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2021-05-04T07:51:53.144Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/Instructions.h(4387,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Analysis\SyncDependenceAnalysis.cpp) [C:\build\workspace\root-pu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8082#issuecomment-831753444:2140,error,error,2140,https://root.cern,https://github.com/root-project/root/pull/8082#issuecomment-831753444,1,['error'],['error']
Availability,"MTableGen.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(70,46): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\TableGen\StringMatcher.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\TableGen\LLVMTableGen.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(77,49): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\TableGen\StringMatcher.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\TableGen\LLVMTableGen.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(60,45): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\MSF\MappedBlockStream.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\MSF\LLVMDebugInfoMSF.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(70,46): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\MSF\MappedBlockStream.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\MSF\LLVMDebugInfoMSF.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(77,49): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\MSF\MappedBlockStream.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Deb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4491#issuecomment-541437877:2623,error,error,2623,https://root.cern,https://github.com/root-project/root/pull/4491#issuecomment-541437877,2,['error'],['error']
Availability,Mac has a strange failure:; ```; 14:37:56 CMake Error at interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt:120 (file):; 14:37:56 file failed to open for reading (No such file or directory):; 14:37:56 ; 14:37:56 /build/jenkins/workspace/root-pullrequests-build/build/interpreter/llvm/src/tools/clang/clang.order; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4299#issuecomment-526588086:18,failure,failure,18,https://root.cern,https://github.com/root-project/root/pull/4299#issuecomment-526588086,2,"['Error', 'failure']","['Error', 'failure']"
Availability,MacOS failure is pre-existing (and about to be fixed by a PR in roottest),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11693#issuecomment-1312520980:6,failure,failure,6,https://root.cern,https://github.com/root-project/root/pull/11693#issuecomment-1312520980,1,['failure'],['failure']
Availability,MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_interface.cxx:13:4: error: unknown type name 'RDataFrame'; did you mean 'ROOT::RDataFrame'? ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_interface.cxx:19:4: error: unknown type name 'RDataFrame'; did you mean 'ROOT::RDataFrame'? ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_interface.cxx:26:4: error: unknown type name 'RDataFrame'; did you mean 'ROOT::RDataFrame'? ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_interface.cxx:31:4: error: unknown type name 'RDataFrame'; did you mean 'ROOT::RDataFrame'? ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_interface.cxx:38:7: error: unknown type name 'RDataFrame'; did you mean 'ROOT::RDataFrame'? ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_interface.cxx:49:7: error: unknown type name 'RDataFrame'; did you mean 'ROOT::RDataFrame'? ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_interface.cxx:60:4: error: unknown type name 'RDataFrame'; did you mean 'ROOT::RDataFrame'? ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_interface.cxx:67:4: error: unknown type name 'RDataFrame'; did you mean 'ROOT::RDataFrame'? ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_interface.cxx:99:4: error: unknown type name 'RDataFrame'; did you mean 'ROOT::RDataFrame'? ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_interface.cxx:120:4: error: unknown type name 'RDataFrame'; did you mean 'ROOT::RDataFrame'? . And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2058#issuecomment-391319293:1068,error,error,1068,https://root.cern,https://github.com/root-project/root/pull/2058#issuecomment-391319293,6,['error'],['error']
Availability,"Macro can run in batch, but one cannot really test result of the running macro.; Problem is missing drawing of TGraph2D points. We do not have reliable methods to check if these drawing done or not. Very inaccurate method is size of produced png or gif image. Probably it will be larger with correct drawing, but not sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13919#issuecomment-1778864629:143,reliab,reliable,143,https://root.cern,https://github.com/root-project/root/pull/13919#issuecomment-1778864629,1,['reliab'],['reliable']
Availability,Makes sense. What about adding a //NOLINT comment to suppress error on T tab[maxFound] ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7430#issuecomment-800069888:62,error,error,62,https://root.cern,https://github.com/root-project/root/issues/7430#issuecomment-800069888,1,['error'],['error']
Availability,"Managed to fix the file path thing, however it creates one annotation per platform. Will add an additional matrix option to enable/disable annotations so that only one build displays errors (probably the image with the latest gcc); ![image](https://user-images.githubusercontent.com/82065181/225619699-2781b334-7287-4660-95c4-9ddb63afd479.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12185#issuecomment-1471893240:183,error,errors,183,https://root.cern,https://github.com/root-project/root/issues/12185#issuecomment-1471893240,1,['error'],['errors']
Availability,Many CI failures has nothing to do with the PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16461#issuecomment-2358968241:8,failure,failures,8,https://root.cern,https://github.com/root-project/root/pull/16461#issuecomment-2358968241,1,['failure'],['failures']
Availability,Many thanks Simon. That worked. . Axel:. ***@***.*** ~]$ curl -v --show-error --cacert /tmp/x509up_u`id -u` --connect-timeout 300 --max-time 3600 --capath /etc/grid-security/certificates --cert /tmp/x509up_u`id -u` --key /tmp/x509up_u`id -u` -L https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root -o /dev/null; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0* About to connect() to webdav.lcg.triumf.ca port 2880 (#0); * Trying 2607:f8f0:660:3::40...; * Connected to webdav.lcg.triumf.ca (2607:f8f0:660:3::40) port 2880 (#0); * Initializing NSS with certpath: sql:/etc/pki/nssdb; * failed to load '/etc/grid-security/certificates/7022e3c4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/69105f4f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/69105f4f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/edca0fc0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.signi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:72,error,error,72,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['error'],['error']
Availability,"Map': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2783: 'std::vector&lt;std::result_of&lt;F(void)&gt;::type,std::allocator&lt;_Ty&gt;&gt; ROOT::TThreadExecutor::Map(F,unsigned int)': could not deduce template argument for 'Cond' [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2783: with [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2783: [ [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2783: _Ty=std::result_of&lt;F(void)&gt;::type [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2783: ] [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2784: 'std::vector&lt;std::result_of&lt;F(INTEGER)&gt;::type,std::allocator&lt;_Ty&gt;&gt; ROOT::TExecutor&lt;ROOT::TThreadExecutor&gt;::Map(F,std::initializer_list&lt;T&gt;)': could not deduce template argument for 'std::initializer_list&lt;T&gt;' fro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6266#issuecomment-682883281:2168,error,error,2168,https://root.cern,https://github.com/root-project/root/pull/6266#issuecomment-682883281,1,['error'],['error']
Availability,"Map.h(122,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\SelectionDAGAddressAnalysis.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2022-05-18T13:44:26.116Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtr1common(65,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\InstCombine\InstCombineCalls.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\InstCombine\LLVMInstCombine.vcxproj] ; - [2022-05-18T13:44:26.116Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/DenseMap.h(671,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\LoopUnswitch.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-05-18T13:44:26.116Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory(1636,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\LowerSwitch.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-05-18T13:44:38.555Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\LoopVersioning.cpp(327,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] . And 23 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10575#issuecomment-1130042523:2314,error,error,2314,https://root.cern,https://github.com/root-project/root/pull/10575#issuecomment-1130042523,3,['error'],['error']
Availability,"Master is broken after this merge. There is a header missing in git.; ```; [ 65%] Built target XMLIO; gmake[2]: *** No rule to make target '/home/amadio/src/root/net/http/inc/TCivetweb.h', needed by 'net/http/G__RHTTP.cxx'. Stop.; gmake[1]: *** [CMakeFiles/Makefile2:16748: net/http/CMakeFiles/RHTTP.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs.... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1886#issuecomment-382733926:309,Error,Error,309,https://root.cern,https://github.com/root-project/root/pull/1886#issuecomment-382733926,1,['Error'],['Error']
Availability,"Matevz, could you fix the errors reported by Travis? (clang-format and clang-tidy) Thanks! (I don't know why the Jenkins CI builds are failing...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/566#issuecomment-300737655:26,error,errors,26,https://root.cern,https://github.com/root-project/root/pull/566#issuecomment-300737655,1,['error'],['errors']
Availability,MathCore.h Math/ProbFuncMathCore.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RanluxppEngine.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:30: error: unknown type name 'T' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:36: error: unknown type name 'T' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:42: error: unknown type name 'T' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:49: error: non-member function cannot have 'const' qualifier ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:7: error: 'virtual' can only appear on non-static member functions ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:327:13: error: use of undeclared identifier 'BaseFunc' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:331:53: error: non-member function cannot have 'const' qualifier ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:331:7: error: 'virtual' can only appear on non-static member functions ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:353:25: error: expected ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8369#issuecomment-866798208:6913,error,error,6913,https://root.cern,https://github.com/root-project/root/pull/8369#issuecomment-866798208,1,['error'],['error']
Availability,MathCore.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RanluxppEngine.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:30: error: unknown type name 'T' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:36: error: unknown type name 'T' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:42: error: unknown type name 'T' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:49: error: non-member function cannot have 'const' qualifier ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:7: error: 'virtual' can only appear on non-static member functions ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:327:13: error: use of undeclared identifier 'BaseFunc' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:331:53: error: non-member function cannot have 'const' qualifier ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:331:7: error: 'virtual' can only appear on non-static member functions ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:353:25: error: expected class name . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8369#issuecomment-866798208:7057,error,error,7057,https://root.cern,https://github.com/root-project/root/pull/8369#issuecomment-866798208,6,['error'],['error']
Availability,Maybe I was not precise - compiler cannot find `snprintf`. It is seen in error messages,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11861#issuecomment-1348105789:73,error,error,73,https://root.cern,https://github.com/root-project/root/pull/11861#issuecomment-1348105789,1,['error'],['error']
Availability,"Maybe a few more notes to make the review easier, because this is a huge patch. * The previous code used macros to log things. I found that the macros are not needed, so I replaced all the macros with method calls to MnPrint::Error, MnPrint::Info, ....; * The old logging made a useful habit of prefixing messages with a string to indicate the origin, e.g. when you logged from MnHesse, messages would be prefixed with ""MnHesse:"". Inside ``MnHesse``, to stay with the example, you might have seen code like this; ```c++; MN_INFO_MSG(""MnHesse: Some foo happened"");; [...]; MN_INFO_MSG(""MnHesse: Some bar happened"");; [...]; int n = 5;; MN_INFO_MSG(""MnHesse: Frobinated"", n, ""glorps"");; ```; Setting the prefix by hand was error prone and repetetive and made the logging code more distractive from the actual code. Especially now, since all the debug messages should also have this prefix, I wanted to automate this. So I turned MnPrint into a class that one can instantiate with a prefix for a given scope.; ```c++; MnPrint print(""MnHesse""); // appears once at the beginning of a long method; [...]; print.Info(""Some foo happened"");; [...]; print.Info(""Some bar happened"");; [...]; int n = 5;; print.Info(""Frobinated"", n, ""glorps"");; ```; The method ``MnPrint::Info`` uses the prefix set in the MnPrint ctor. The ctor of MnPrint also has an optional argument to print with a local print level. If this is not set, the global print level is used. In the long run (not in this patch), we should get rid of the global print level, because global mutable variables are difficult to reason about and in particular do not play nice with multi-threading. This design prepares for that step.; * I generally made sure that the logging messages contain the same information as the previous ones, but I reduced excess whitespace and improved the formatting. Some debug messages added several empty lines to the output, which made the logs hard to read.; * In very few isolated cases I removed redundant messages. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-719713799:226,Error,Error,226,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-719713799,2,"['Error', 'error']","['Error', 'error']"
Availability,"Maybe check first the log file of the Doxygen build. Close to the end, it will say output an error like:; ```; Running dot...; Patching output file 1/1; Running qhelpgenerator...; qhelpgenerator: could not exec '/usr/lib/qt5/bin/qhelpgenerator': No such file or directory; error: failed to run qhelpgenerator on index.qhp; lookup cache used 1000/65536 hits=4591 misses=1060; finished...; [100%] Built target doc; ```. If that's the case, then yes, it must be relaunched.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1009990569:93,error,error,93,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1009990569,2,['error'],['error']
Availability,Maybe it can be made more clear but the message comes from [here](https://github.com/root-project/root/blob/bd200315c50ac1520f75f959a852c6d3333f8aa9/core/base/src/TApplication.cxx#L147). I guess this error can occur for many more reasons than a macro called `main.cpp`. So it will not be easy to make it clearer there. Maybe @Axel-Naumann or @pcanal can comment.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11707#issuecomment-1315426448:200,error,error,200,https://root.cern,https://github.com/root-project/root/issues/11707#issuecomment-1315426448,1,['error'],['error']
Availability,Maybe related with thread safety? Can you run it with helgrind? Or do you get the same error with ROOT::EnableThreadSafety() activated?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8767#issuecomment-888648258:87,error,error,87,https://root.cern,https://github.com/root-project/root/issues/8767#issuecomment-888648258,1,['error'],['error']
Availability,"Maybe the connections were from commodity network? Are you able to ping webdav.lcg.triumf.ca?. Thanks,. Di. > On May 12, 2021, at 10:29 AM, Asoka De Silva ***@***.***> wrote:; > ; > ﻿ Hi Axel,; > ; > I don't know but I'll add Simon and Di who are the Tier-1 experts and may have ideas.; > ; > Simon and Di, Axel has this issue and me a similar one - any ideas ?; > ; >>> s I crosscheck (to see whether it's related to the Davix redirect issue #8155 ) I tried with curl but I get; >>> ; >>> $ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; >>> * Trying 206.12.9.197:2880...; >>> * TCP_NODELAY set; >>> * Trying 2607:f8f0:660:3::36:2880...; >>> * TCP_NODELAY set; >>> * Immediate connect fail for 2607:f8f0:660:3::36: Network is unreachable; >>> Is that expected?; >>> ; > ; >> ***@***.*** t5]$ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; >> * About to connect() to webdav.lcg.triumf.ca port 2880 (#0); >> * Trying 2607:f8f0:660:3::36...; >> * Connected to webdav.lcg.triumf.ca (2607:f8f0:660:3::36) port 2880 (#0); >> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >> * CAfile: /etc/pki/tls/certs/ca-bundle.crt; >> CApath: none; >> * Server certificate:; >> * 	subject: CN=dpool46.lcg.triumf.ca,OU=triumf.ca,O=Grid,C=CA; >> * 	start date: Apr 08 16:29:03 2021 GMT; >> * 	expire date: May 08 16:29:03 2022 GMT; >> * 	common name: dpool46.lcg.triumf.ca; >> * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >> * Peer's Certificate issuer is not recognized.; >> * Closing connection 0; >> curl: (60) Peer's Certificate issuer is not recognized.; >> More details here: http://curl.haxx.se/docs/sslcerts.html; >> ; >> curl performs SSL certificate verification by default, using a ""bundle""; >> of Certificate Authority (CA) public keys (CA certs). If the default; >> bundle file isn't adequate, you can specify an a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839967983:67,ping,ping,67,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839967983,1,['ping'],['ping']
Availability,"Maybe to be clearer, I would expect the output to be:; ```; TypeError: none of the 2 overloaded methods succeeded. Full details:; void MyClass::MyMethod(const MyClass::MyObj& x, bool another) =>; TypeError: takes at least 2 arguments (1 given); void MyClass::MyMethod(const MyClass::MyObj& x = """") =>; RuntimeError: My exception; ```; I.e. the second method didn't fail because of a conversion type error, it failed because the method threw a runtime exception",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16405#issuecomment-2345639881:399,error,error,399,https://root.cern,https://github.com/root-project/root/issues/16405#issuecomment-2345639881,1,['error'],['error']
Availability,"Maybe, see https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/16",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10271#issuecomment-1152383332:62,error,error-rint-pcm-is-out-of-date-cannot-read-module-signature,62,https://root.cern,https://github.com/root-project/root/issues/10271#issuecomment-1152383332,1,['error'],['error-rint-pcm-is-out-of-date-cannot-read-module-signature']
Availability,"Maybe. If I just run `ping.cxx` test, I see that chromium uses more than `1G` of virtual memory. May be one should also set/increase this parameter for the docker?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13466#issuecomment-1682216608:22,ping,ping,22,https://root.cern,https://github.com/root-project/root/pull/13466#issuecomment-1682216608,1,['ping'],['ping']
Availability,"Merged, apologies for the delay and thanks for pinging me by means of a PR! :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6465#issuecomment-721263236:47,ping,pinging,47,https://root.cern,https://github.com/root-project/root/issues/6465#issuecomment-721263236,1,['ping'],['pinging']
Availability,"Merged, since failures are not related.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2800#issuecomment-430196811:14,failure,failures,14,https://root.cern,https://github.com/root-project/root/pull/2800#issuecomment-430196811,1,['failure'],['failures']
Availability,Merging (errors are unrelated),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3700#issuecomment-483580447:9,error,errors,9,https://root.cern,https://github.com/root-project/root/pull/3700#issuecomment-483580447,1,['error'],['errors']
Availability,"Merging since this is anyway needed, the 2 test failures seem unrelated for now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13251#issuecomment-1635528552:48,failure,failures,48,https://root.cern,https://github.com/root-project/root/pull/13251#issuecomment-1635528552,1,['failure'],['failures']
Availability,"Merging this depends on https://github.com/root-project/root/pull/13273, so marking as draft. FWIW the roottest failures are because some references need updates (https://github.com/root-project/roottest/pull/992), but not needed for testing here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1761301310:112,failure,failures,112,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1761301310,1,['failure'],['failures']
Availability,"Merging this since the `master` nightlies went well, besides the unrelated Windows build failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16052#issuecomment-2238581904:89,failure,failures,89,https://root.cern,https://github.com/root-project/root/pull/16052#issuecomment-2238581904,1,['failure'],['failures']
Availability,Merging to fix failures in master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7860#issuecomment-820282481:15,failure,failures,15,https://root.cern,https://github.com/root-project/root/pull/7860#issuecomment-820282481,1,['failure'],['failures']
Availability,"Merging, as failure of `roottest-python-numba-numba` on windows is unrelated",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16334#issuecomment-2321264303:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/pull/16334#issuecomment-2321264303,1,['failure'],['failure']
Availability,"Merging, because dataframe test failures should be unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3325#issuecomment-458168269:32,failure,failures,32,https://root.cern,https://github.com/root-project/root/pull/3325#issuecomment-458168269,2,['failure'],['failures']
Availability,"Merging, since error is unrelated to changes that was done in this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5666#issuecomment-631989230:15,error,error,15,https://root.cern,https://github.com/root-project/root/pull/5666#issuecomment-631989230,1,['error'],['error']
Availability,Merging. Error is unrelated (Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5688#issuecomment-634576526:9,Error,Error,9,https://root.cern,https://github.com/root-project/root/pull/5688#issuecomment-634576526,1,['Error'],['Error']
Availability,Message from Windows build is misleading - build was done without any error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10688#issuecomment-1144545822:70,error,error,70,https://root.cern,https://github.com/root-project/root/pull/10688#issuecomment-1144545822,1,['error'],['error']
Availability,"MetaCommand (this=0x7fffffffa138, actionResult=@0x7fffffffa11c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa830); at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:96; --Type <RET> for more, q to quit, c to continue without paging--; #139 0x00007fffefbf7506 in cling::MetaProcessor::process (this=0x555556018a10, input_line=..., compRes=@0x7fffffffa82c: cling::Interpreter::kSuccess, result=0x7fffffffa830, disableValuePrinting=false); at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #140 0x00007fffef6789ae in HandleInterpreterException (metaProcessor=0x555556018a10, input_line=0x5555564c5110 "".X /home/jun/dev/root/Debug/./Demo2.C"", compRes=@0x7fffffffa82c: cling::Interpreter::kSuccess,; result=0x7fffffffa830) at /home/jun/dev/root/core/metacling/src/TCling.cxx:2517; #141 0x00007fffef6783b9 in TCling::ProcessLine (this=0x5555555eea60, line=0x5555555d6dc0 "".X /home/jun/dev/root/Debug/./Demo2.C"", error=0x7fffffffdb74) at /home/jun/dev/root/core/metacling/src/TCling.cxx:2661; #142 0x00007fffef67ad44 in TCling::ProcessLineSynch (this=0x5555555eea60, line=0x5555555d6dc0 "".X /home/jun/dev/root/Debug/./Demo2.C"", error=0x7fffffffdb74); at /home/jun/dev/root/core/metacling/src/TCling.cxx:3593; #143 0x00007ffff7b1d58c in TApplication::ExecuteFile (file=0x7fffffffbae3 ""Demo2.C"", error=0x7fffffffdb74, keep=false) at /home/jun/dev/root/core/base/src/TApplication.cxx:1675; #144 0x00007ffff7b1c9e0 in TApplication::ProcessFile (this=0x5555555d5890, file=0x7fffffffbae3 ""Demo2.C"", error=0x7fffffffdb74, keep=false) at /home/jun/dev/root/core/base/src/TApplication.cxx:1547; #145 0x00007ffff7b1c713 in TApplication::ProcessLine (this=0x5555555d5890, line=0x7fffffffbae0 "".x Demo2.C"", sync=false, err=0x7fffffffdb74) at /home/jun/dev/root/core/base/src/TApplication.cxx:1520; #146 0x00007ffff7f9cbe3 in TRint::ProcessLineNr (this=0x5555555d5890, filestem=0x7ffff7fb0449 ""ROOT_cli_"", line=0x7fffffffbae0 "".x Demo2.C"", error=0x7fffffffdb7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1253760320:38340,error,error,38340,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320,1,['error'],['error']
Availability,"Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\bin\HostX64\x86\cl.EXE""' : return code '0x2' [C:\build\workspace\root-pullrequests-build\build\graf2d\win32gdk\GDKLIB.vcxproj] ; - [2020-10-27T10:57:18.491Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xloctime(366,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_c3f47572db': No space left on device [C:\build\workspace\root-pullrequests-build\build\tmva\tmva\test\DNN\testBatchNormalizationCpu.vcxproj] ; - [2020-10-27T10:57:18.492Z] C:\build\workspace\root-pullrequests-build\root\roofit\roostats\src\PointSetInterval.cxx(170,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_4d825f1fdb': No space left on device [C:\build\workspace\root-pullrequests-build\build\roofit\roostats\RooStats.vcxproj] ; - [2020-10-27T10:57:19.173Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocinfo(103,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_f4cb1d1csy': No space left on device [C:\build\workspace\root-pullrequests-build\build\roofit\roostats\RooStats.vcxproj] ; - [2020-10-27T10:57:19.173Z] C:\Python38-32\include\object.h(444,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_05fabc68ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot\pythonizations\ROOTPythonizations3_8.vcxproj] ; - [2020-10-27T10:57:19.173Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h(59,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_3cc13f73ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\graf3d\eve\Eve.vcxproj] . And 6 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6710#issuecomment-717161391:2531,error,error,2531,https://root.cern,https://github.com/root-project/root/pull/6710#issuecomment-717161391,3,['error'],['error']
Availability,"Minimal reproducer for the stressMathCore failure:; ```cpp; cat repro.cxx; #include ""TF1.h"". std::string Type() { return """"; }. template<class Func>; class StatFunction : public ROOT::Math::IParamFunction {; public:; unsigned int NPar() const { return 0; }; const double * Parameters() const { return 0; }; ROOT::Math::IGenFunction * Clone() const { return 0; }; void SetParameters(const double * p) { }; // test cumulative function; int Test() {; TF1 * f = new TF1(""ftemp"", ROOT::Math::ParamFunctor(*this));; return 0;; }. private:; double DoEvalPar(double x, const double * ) const {; // implement explicitly using cached parameter values; return 0;; }; };. // typedef defining the functions; typedef double ( * F2) (double);. typedef StatFunction<F2> Dist_beta;; Dist_beta dist;; int iret = dist.Test();. template<int Dim>; struct VectorTest {; void genData() {; TRandom3 r(111);; double phi = r.Rndm();; }; };. int repro() {; return 0;; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5884#issuecomment-650075454:42,failure,failure,42,https://root.cern,https://github.com/root-project/root/pull/5884#issuecomment-650075454,1,['failure'],['failure']
Availability,"Model& model, experimental::__ROOT::basic_string_view<char,char_traits<char> > vName, experimental::__ROOT::basic_string_view<char,char_traits<char> > wName) =>; 887: TypeError: takes at least 3 arguments (2 given); 887: ROOT::RDF::RResultPtr<TH1D> ROOT::RDF::RInterface<ROOT::Detail::RDF::RJittedFilter,void>::Histo1D(experimental::__ROOT::basic_string_view<char,char_traits<char> > vName, experimental::__ROOT::basic_string_view<char,char_traits<char> > wName) =>; 887: TypeError: could not convert argument 1; 887: ROOT::RDF::RResultPtr<TH1D> ROOT::RDF::RInterface<ROOT::Detail::RDF::RJittedFilter,void>::Histo1D(const ROOT::RDF::TH1DModel& model = {"""", """", 128U, 0., 0.}, experimental::__ROOT::basic_string_view<char,char_traits<char> > vName = """") =>; 887: TypeError: could not convert argument 2; 887: Failed to instantiate ""Histo1D(ROOT::RDF::TH1DModel*,std::string)""; 887: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 887: error code: 1; 887:; 887:; 10/16 Test #887: tutorial-dataframe-df014_CSVDataSource-py ................***Failed 5.75 sec; test 888; Start 888: tutorial-dataframe-df016_vecOps-py. 888: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df016_vecOps.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 888: Environment variables:; 888: ROOT_HIST=0; 888: Test timeout computed to be: 1500; 888: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 888: error code: -529697949; 888:; 888:; 11/16 Test #888: tutorial-dataframe-df016_vecOps-py .......................***Failed 4.51 sec; test 889; Start 889: tutorial-dataframe-df017_vecOpsHEP-py. 889: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:10753,error,error,10753,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['error'],['error']
Availability,"Model.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooGExpModel.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooHistConstraint.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooIntegralMorph.cxx.o; /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(32): error: ""basic_string_view"" has already been declared in the current scope. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(35): error: invalid redeclaration of type name ""std::string_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(589): here. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(36): error: invalid redeclaration of type name ""std::u16string_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(596): here. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(37): error: invalid redeclaration of type name ""std::u32string_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(597): here. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(38): error: invalid redeclaration of type name ""std::wstring_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(591): here. 5 errors detected in the compilation of ""/build/root/src/root-6.22.00-cuda/tmva/tmva/src/DNN/Architectures/Cuda.cu"".; make[2]: *** [tmva/tmva/CMakeFiles/TMVA.dir/build.make:2227: tmva/tmva/CMakeFiles/TMVA.dir/src/DNN/Architectures/Cuda.cu.o] Error 1; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooJeffreysPrior.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooKeysPdf.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooLandau.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooLognormal.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooMathCoreReg.cxx.o; /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6058#issuecomment-663594675:4417,error,error,4417,https://root.cern,https://github.com/root-project/root/pull/6058#issuecomment-663594675,1,['error'],['error']
Availability,"Modules is broken now, and we're still working on this PR because we cannot reproduce the error locally.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2628#issuecomment-421989144:90,error,error,90,https://root.cern,https://github.com/root-project/root/pull/2628#issuecomment-421989144,1,['error'],['error']
Availability,"More details:. Build error; ```; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'; __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());; ^~~; /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here; return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));; ^; /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor; std::unique_ptr<RFieldBase::RDeleter> fDeleter;; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor; unique_ptr(unique_ptr&& __u) _NOEXCEPT; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here; __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a); ^; ```. Compiler version:. ```; % clang -v; Homebrew clang version 16.0.1; Target: x86_64-apple-darwin20.6.0; Thread model: posix; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14664#issuecomment-1940795175:21,error,error,21,https://root.cern,https://github.com/root-project/root/issues/14664#issuecomment-1940795175,2,['error'],['error']
Availability,"More info for the llvm experts: this is due to an assertion failure, visible with dbg builds: ```interpreter/llvm-project/clang/include/clang/AST/Type.h:752: const clang::ExtQualsTypeCommonBase* clang::QualType::getCommonPtr() const: Assertion `!isNull() && ""Cannot retrieve a NULL type pointer""' failed.```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13252#issuecomment-1966302886:60,failure,failure,60,https://root.cern,https://github.com/root-project/root/issues/13252#issuecomment-1966302886,1,['failure'],['failure']
Availability,"More info to add:. On godbolt, clang 16.0.0 (unfortunately no 16.0.6 available) aborts with SIGSEGV, but clang 18.1.0 is fine. https://godbolt.org/z/dKfsfh44j. Also just for reference, the number of times `var0` is summed is 4096.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15818#issuecomment-2162404947:69,avail,available,69,https://root.cern,https://github.com/root-project/root/issues/15818#issuecomment-2162404947,1,['avail'],['available']
Availability,More work is needed for errors...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11938#issuecomment-1373911396:24,error,errors,24,https://root.cern,https://github.com/root-project/root/issues/11938#issuecomment-1373911396,1,['error'],['errors']
Availability,"Most often this type of error is due to uninitialized value in the user data. Try using --track-origins=yes and if no information, try to disable compression.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2182#issuecomment-396381288:24,error,error,24,https://root.cern,https://github.com/root-project/root/pull/2182#issuecomment-396381288,1,['error'],['error']
Availability,"Multiple reasons:; - because we didn't have Windows builds of ROOT 6 for too long; - ROOT re-implements snprintf for Windows to support %p for TString. That said - my fault, I should have noticed that this is only for GlobusAuth where MSVC isn't an issue AFAIK. LGTM, thanks, Mattias and apologies for this errant!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/376#issuecomment-283044607:167,fault,fault,167,https://root.cern,https://github.com/root-project/root/pull/376#issuecomment-283044607,1,['fault'],['fault']
Availability,"My 2 cents:. 1. It is extremly weird/ a bug that the webgui needs to depend on `TObject`.; 2. `RBrowserDataCleanup` derives from `TObject`, so it *must* have a `ClassDef` as per https://root.cern/manual/io_custom_classes/#the-classdef-macro . I am not sure about what using `ClassDefInline` as suggested by @pcanal would change; 2a. Can `RBrowserDataCleanup` just avoid inheriting from `TObject` completely? ; 3. `RBrowserData` has a dictionary and allows I/O, as it is defined in `LinkDef.h`, so it is only natural that its data members need a dictionary as well. As @hahnjo commented, the particular error coming from a `std::tuple` is due to the fact that the class uses ` std::unique_ptr<RBrowserDataCleanup>`. Bottom line, to me everything looks very clear and I don't understand the comments regarding looking for a deeper reason behind the error. The only thing I don't understand is the dependency from `TObject` itself, but that's beyond the scope of this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1637626198:602,error,error,602,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1637626198,2,['error'],['error']
Availability,My fault. https://github.com/root-project/root/pull/811 should solve this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/793#issuecomment-317991711:3,fault,fault,3,https://root.cern,https://github.com/root-project/root/pull/793#issuecomment-317991711,1,['fault'],['fault']
Availability,"My mistake, it looks like it was actually the PR description that caused the failure!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8172#issuecomment-840672497:77,failure,failure,77,https://root.cern,https://github.com/root-project/root/pull/8172#issuecomment-840672497,1,['failure'],['failure']
Availability,"My personal preference is to store std::string instead of a hash, as it's simpler and hashing anyway doesn't give us any improvement in performance. About transaction, I'm testing something like what I asked but it gives me an error like this which seems very cryptic to me, have you ever seen this error before?; https://gist.github.com/yamaguchi1024/b137f5313dfca23abbe890a5c4440a7d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2434#issuecomment-411910183:227,error,error,227,https://root.cern,https://github.com/root-project/root/pull/2434#issuecomment-411910183,2,['error'],['error']
Availability,"My version of os/compiler/valgrind seems to work better and I got some useful information. For `root.exe -b -l -q callfuncbench.cxx+(1000)`. The new code is a big faster: `42,696,463,692` instead of `45,892,859,389`. Some of the calculation are shifted to `Value::Value`: `5,000,000,988` vs `3,100,001,703` (it grows by 2 billions when the overall goes down by 3 billions). The gains comes from the disappearance of `TClingCallFunc::InitRefAndExec` (minus 3.8 billions) and the simplifications of `std::function_handler (removed) and TClingCallFunc::exec` (minus 1.2 billions). So it is getting better and `Value::Value` is a potential source of further optimization (see related comment). [callgrind-callfund.tar.gz](https://github.com/root-project/root/files/9665974/callgrind-callfund.tar.gz)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1261020879:353,down,down,353,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1261020879,1,['down'],['down']
Availability,"NAME3_’; # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y); ^~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__); ^~~~~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__); ^~~~~~~~~~~~~~~~~~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program; #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict; ^; /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’; # define _NAME2_(name1,name2) name1##name2; ^~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’; # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y); ^~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__); ^~~~~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6837#issuecomment-731577667:6792,error,error,6792,https://root.cern,https://github.com/root-project/root/issues/6837#issuecomment-731577667,1,['error'],['error']
Availability,"NAME3_’; # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y); ^~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__); ^~~~~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__); ^~~~~~~~~~~~~~~~~~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program; #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict; ^; /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’; # define _NAME2_(name1,name2) name1##name2; ^~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’; # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y); ^~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__); ^~~~~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6837#issuecomment-731577667:5172,error,error,5172,https://root.cern,https://github.com/root-project/root/issues/6837#issuecomment-731577667,2,['error'],['error']
Availability,"NB: This is maybe not the best solution, but it solves the compilation error...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4457#issuecomment-537080646:71,error,error,71,https://root.cern,https://github.com/root-project/root/pull/4457#issuecomment-537080646,1,['error'],['error']
Availability,"NE&gt;[0-9]*)(,(?&lt;COLUMN&gt;[0-9]*))?\))?\s*:\s*((?&lt;SUBCATEGORY&gt;([^:]*?))\s?)(?&lt;CATEGORY&gt;error|warning|note)\s*((?&lt;CODE&gt;[A-Za-z0-9]*))?\s*:\s*(?&lt;TEXT&gt;.*)$': Exception of type 'System.OutOfMemoryException' was thrown. [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-02-05T01:49:05.646Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Format.h(130,50): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\MachineFunctionPass.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-02-05T01:49:05.646Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\tuple(448,29): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\ASTTypeTraits.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-02-05T01:49:06.040Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector(1764,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\Reg2Mem.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-02-05T01:49:06.393Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree(192,16): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Analysis\CocoaConventions.cpp) [C:\build\work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9822#issuecomment-1030494161:3151,error,error,3151,https://root.cern,https://github.com/root-project/root/pull/9822#issuecomment-1030494161,1,['error'],['error']
Availability,"NING: sum of PDF coefficients not in range [0-1], value=1.3; [#0] WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3; [#0] WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3; [#0] WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3; [#0] WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3; [#0] WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3; [#0] WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3; [#0] WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3 (no more will be printed); ../roofit/roofitcore/test/testNaNPacker.cxx:228: Failure; Warning in <ROOT::Math::Fitter::CalculateHessErrors>: Error when calculating Hessian; Value of: a1Final.getVal() < 0. || a1Final.getVal() > 1. || a2Final.getVal() < 0. || a2Final.getVal() > 1.; Actual: false; Expected: true; Recovery strength=0; ```. RooFit stress tests give the following output:. ```; /Users/pbos/projects/apcocsm/roofit-dev/root/cmake-build-debug/test/stressRooFit. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. ******************************************************************; * RooFit - S T R E S S suite *; ******************************************************************; ******************************************************************; * Starting S T R E S S basic suite *; ******************************************************************; Test 1 : Fitting,plotting & event generation of basic p.d.f.....OK; Test 2 : Data import method",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596#issuecomment-881412597:1465,Failure,Failure,1465,https://root.cern,https://github.com/root-project/root/pull/8596#issuecomment-881412597,2,"['Error', 'Failure']","['Error', 'Failure']"
Availability,NNode::val_t() const’ in different namespace [-fpermissive] ; - [2022-01-21T10:20:57.899Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/inc/RooFitHS3/JSONInterface.h:84:6: error: from definition of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ [-fpermissive] ; - [2022-01-21T10:20:57.899Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONInterface.cxx:17:32: error: specialization of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ in different namespace [-fpermissive] ; - [2022-01-21T10:20:57.899Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/inc/RooFitHS3/JSONInterface.h:84:6: error: from definition of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ [-fpermissive] ; - [2022-01-21T10:20:57.899Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONInterface.cxx:22:34: error: specialization of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ in different namespace [-fpermissive] ; - [2022-01-21T10:20:57.899Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/inc/RooFitHS3/JSONInterface.h:84:6: error: from definition of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ [-fpermissive] ; - [2022-01-21T10:20:57.899Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONInterface.cxx:27:30: error: specialization of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ in different namespace [-fpermissive] ; - [2022-01-21T10:20:57.899Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/inc/RooFitHS3/JSONInterface.h:84:6: error: from definition of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ [-fpermissive] ; - [2022-01-21T10:20:57.899Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONInterface.cxx:32:44: error: specialization of ‘template&lt;class T&gt; T RooFit::Experimental::,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9482#issuecomment-1018372839:4795,error,error,4795,https://root.cern,https://github.com/root-project/root/pull/9482#issuecomment-1018372839,1,['error'],['error']
Availability,NNode::val_t() const’ in different namespace [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/inc/RooFitHS3/JSONInterface.h:84:6: error: from definition of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONInterface.cxx:15:54: error: specialization of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ in different namespace [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/inc/RooFitHS3/JSONInterface.h:84:6: error: from definition of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONInterface.cxx:20:56: error: specialization of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ in different namespace [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/inc/RooFitHS3/JSONInterface.h:84:6: error: from definition of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONInterface.cxx:25:52: error: specialization of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ in different namespace [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/inc/RooFitHS3/JSONInterface.h:84:6: error: from definition of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONInterface.cxx:30:66: error: specialization of ‘template&lt;class T&gt; T RooFit::Experimental::,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9482#issuecomment-1020225394:4795,error,error,4795,https://root.cern,https://github.com/root-project/root/pull/9482#issuecomment-1020225394,1,['error'],['error']
Availability,NNode::val_t() const’ in different namespace [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/inc/RooFitHS3/JSONInterface.h:84:6: error: from definition of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONInterface.cxx:20:56: error: specialization of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ in different namespace [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/inc/RooFitHS3/JSONInterface.h:84:6: error: from definition of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONInterface.cxx:25:52: error: specialization of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ in different namespace [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/inc/RooFitHS3/JSONInterface.h:84:6: error: from definition of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONInterface.cxx:30:66: error: specialization of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ in different namespace [-fpermissive] . And 1 more. ### Warnings:; - [2022-01-24T15:21:08.780Z] /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/inc/FTFont.h:125:35: warning: unused parameter ‘depth’ [-Wunused-parameter] ; - [2022-01-24T15:21:08.780Z] /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/inc/FTFont.h:125:35: warning: unused parameter ‘depth’ [-Wunused-parameter] ; - [2022-01-24T15:21:09.151Z] /mnt/build/workspace/root-pullrequests-bui,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9482#issuecomment-1020225394:5296,error,error,5296,https://root.cern,https://github.com/root-project/root/pull/9482#issuecomment-1020225394,1,['error'],['error']
Availability,"NP! FYI that's `just` inplace of `also`. But it's good you tried to build everywhere, to check the config failure!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5919#issuecomment-669180037:106,failure,failure,106,https://root.cern,https://github.com/root-project/root/pull/5919#issuecomment-669180037,1,['failure'],['failure']
Availability,NSFVARBPROC’? ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:639:1: error: unknown type name ‘PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC’; did you mean ‘PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC’? ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:640:1: error: unknown type name ‘PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC’; did you mean ‘PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC’? ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:641:1: error: unknown type name ‘PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC’; did you mean ‘PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC’? ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:698:1: error: unknown type name ‘PFNGLCOPYTEXTURELEVELSAPPLEPROC’; did you mean ‘PFNGLCOPYTEXTURESUBIMAGE3DPROC’? ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:718:1: error: unknown type name ‘PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC’; did you mean ‘PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC’? . And 193 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:622:76: warning: initialization makes integer from pointer without a cast [-Wint-conversion] ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:623:80: warning: initialization makes integer from pointer without a cast [-Wint-conversion] ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:624:52: warning: initialization makes integer from pointer without a cast [-Wint-conversion] ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:638:82: warning: initialization makes integer from pointer without a cast [-Wint-conversion] ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:639:76: warning: initialization makes integer from pointer without a cast [-Wint-conversion] ; - /mnt/build/workspace/root-pullreques,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4095#issuecomment-532666543:1946,error,error,1946,https://root.cern,https://github.com/root-project/root/pull/4095#issuecomment-532666543,1,['error'],['error']
Availability,"NT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so; ```; `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`; ```; In file included from input_line_9:6:; In file included from ././aa1.cpp:1:; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace; using ::signbit;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace; using ::fpclassify;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace; using ::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no me",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8418#issuecomment-860830509:12842,error,error,12842,https://root.cern,https://github.com/root-project/root/issues/8418#issuecomment-860830509,1,['error'],['error']
Availability,"N_INFO; [I] Using the user supplied version: v5.4.1; [I] src/XrdVersion.hh successfully generated; In file included from /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/XrdSys/XrdSysE2T.cc:35:; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh: In constructor 'XrdSysRWLock::XrdSys; RWLock(XrdSysRWLock::PrefType)':; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh:357:30: error: 'PTHREAD_RWLOCK_PREFER; _WRITER_NONRECURSIVE_NP' was not declared in this scope; 357 | PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP);; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh:356:22: error: 'pthread_rwlockattr_se; tkind_np' was not declared in this scope; did you mean 'pthread_rwlockattr_setpshared'?; 356 | pthread_rwlockattr_setkind_np(&attr,; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~; | pthread_rwlockattr_setpshared; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh: In member function 'void XrdSysRWLoc; k::ReInitialize(XrdSysRWLock::PrefType)':; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh:373:22: error: 'PTHREAD_RWLOCK_PREFER; _WRITER_NONRECURSIVE_NP' was not declared in this scope; 373 | PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP);; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh:372:3: error: 'pthread_rwlockattr_set; kind_np' was not declared in this scope; did you mean 'pthread_rwlockattr_setpshared'?; 372 | pthread_rwlockattr_setkind_np(&attr,; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~; | pthread_rwlockattr_setpshared; make[5]: *** [src/CMakeFiles/XrdUtils.dir/build.make:104: src/CMakeFiles/XrdUtils.dir/XrdSys/XrdSysE2T.cc.o] Error 1; make[4]: *** [CMakeFiles/Makefile2:814: src/CMakeFiles/XrdUtils.dir/all] Error 2; make[3]: *** [Makefile:136: all] Error 2; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9173#issuecomment-1062037565:1845,error,error,1845,https://root.cern,https://github.com/root-project/root/issues/9173#issuecomment-1062037565,5,"['Error', 'error']","['Error', 'error']"
Availability,"Narrowed it down to the use of the custom Sqlite3 VFS module. Apparently, in some case such as complex queries / many rows, sqlite would like to use a ""temporary journal"" and create a temporary file for it. That is currently unsupported by the VFS module.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9231#issuecomment-963980483:12,down,down,12,https://root.cern,https://github.com/root-project/root/issues/9231#issuecomment-963980483,1,['down'],['down']
Availability,"Nevermind the error I was seeing with the first examples, it was completely my fault (commented an essential line with offsets when I tried to build without the GSL and forgot to put back later) :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11853#issuecomment-1343202565:14,error,error,14,https://root.cern,https://github.com/root-project/root/issues/11853#issuecomment-1343202565,2,"['error', 'fault']","['error', 'fault']"
Availability,New CI's Windows builds are happy so old CI's failures are probably spurious. Re-running new CI's failed jobs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13902#issuecomment-1783243184:46,failure,failures,46,https://root.cern,https://github.com/root-project/root/pull/13902#issuecomment-1783243184,1,['failure'],['failures']
Availability,"New insights:. * when adding the reproducer to `roottest`, most of the Jenkins platforms will fail:; https://github.com/root-project/roottest/pull/1052. * when testing the reproducer together with the CPyCppyy upgrade, the test `projectroot.roottest.python.cpp.roottest_python_cpp_cpp11` will instead pass on all platforms:; https://github.com/root-project/roottest/pull/1071; (note that there are other failures related to the CPyCppyy upgrade that are unrelated to the issue). Therefore, I can attest that this issue will be fixed with the CPyCppyy upgrade. This makes total sense, because the upgrade includes a patch that fixes the conversion of initializer lists:; https://github.com/wlav/CPyCppyy/pull/14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11411#issuecomment-1971062709:404,failure,failures,404,https://root.cern,https://github.com/root-project/root/issues/11411#issuecomment-1971062709,1,['failure'],['failures']
Availability,"Next problem is that musl [apparently](https://www.gnu.org/software/gnulib/manual/html_node/fpu_005fcontrol_002eh.html) does not provide `fpu_control.h`. According to this [forum post](https://root-forum.cern.ch/t/compiling-error-conflicting-types-alpine-linux/28193/3), nothing from this file is in fact used and thus it should be possible to remove the include - based on the `fpu_control.h` [source code](https://code.woboq.org/userspace/glibc/sysdeps/x86/fpu_control.h.html) and a simple `grep`, this should hold for all ROOT components, except `math/mathcore/src/triangle.c`, which uses `_FPU_SETCW` at line 4888. I am not familiar with what `fpu_control.h` does (apparently it has something to do with float precision), but according to [this](https://sourceforge.net/p/jamvm/patches/6/), it should be replaceable by a standard `fenv.h` header file, which I suggest to do (I have not tested it yet, but I will).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9253#issuecomment-963066852:224,error,error-conflicting-types-alpine-linux,224,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963066852,1,['error'],['error-conflicting-types-alpine-linux']
Availability,No sure what is wrong (errors are new/related) but one important missing feature is the invalidation of (some of) the cache upon transaction/file unloading.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9284#issuecomment-967473793:23,error,errors,23,https://root.cern,https://github.com/root-project/root/pull/9284#issuecomment-967473793,1,['error'],['errors']
Availability,No valgrind necessary. The failure is a call to `R__ASSERT`. There is not really any other means to inspect that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9750#issuecomment-1025861675:27,failure,failure,27,https://root.cern,https://github.com/root-project/root/pull/9750#issuecomment-1025861675,1,['failure'],['failure']
Availability,"No, I can't. I meant though of the problematic code, I can compile and run it without any error if there is no draw statement. I want to know why it looks like the draw statement triggers the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8256#issuecomment-850852605:90,error,error,90,https://root.cern,https://github.com/root-project/root/issues/8256#issuecomment-850852605,2,['error'],['error']
Availability,"No, I didn't try anything besides the unit tests in `roottest` (which are actually deactivated in the `CMakeLists.txt`). What do you mean with Python 3 problems? We don't support Python 2 anymore, so all code only needs to run in Python 3. Which is does, right? Sorry, maybe I didn't get the problem. If you mean with Python 3 problems the error you have screenshot: I get the same error also without your PR. So given that JsROOT is not working very well and no user complained, I would not spend more time on this and suggest to merge this PR and close the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12484#issuecomment-2125800188:340,error,error,340,https://root.cern,https://github.com/root-project/root/pull/12484#issuecomment-2125800188,2,['error'],['error']
Availability,"No, I don't know how to do that. I use sphinx when I have *rst* pages.; Pdf is not so necessary, html for downloading would be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7421#issuecomment-844180284:106,down,downloading,106,https://root.cern,https://github.com/root-project/root/issues/7421#issuecomment-844180284,1,['down'],['downloading']
Availability,"No, I'm afraid not. It would be nice if the manual could be downloaded easier from the site, preferably with images. Ideally it should be included into other documentation package (the lesser files to download, the better).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7421#issuecomment-823511702:60,down,downloaded,60,https://root.cern,https://github.com/root-project/root/issues/7421#issuecomment-823511702,2,['down'],"['download', 'downloaded']"
Availability,"No, it seems I have no interactive (and maybe any) graphs. However, it's fine, because I need mostly only commands. Just for reference, this is a command to download all pages until they are not made for download elsewhere:. wget -c -np -E -p -r -l 0 -k -nH https://root.cern/manual/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7421#issuecomment-823416843:157,down,download,157,https://root.cern,https://github.com/root-project/root/issues/7421#issuecomment-823416843,2,['down'],['download']
Availability,"No, the Jenkins failures are fortunately not related to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8567#issuecomment-881229915:16,failure,failures,16,https://root.cern,https://github.com/root-project/root/pull/8567#issuecomment-881229915,1,['failure'],['failures']
Availability,"No, the build bot looks for a fork of roottest in your account to possibly take a matching branch and use for the pull request, but it errors out if you don't have roottest forked. @vgvassilev you may want to have a look at this when you have time. Cheers,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3405#issuecomment-462286562:135,error,errors,135,https://root.cern,https://github.com/root-project/root/pull/3405#issuecomment-462286562,1,['error'],['errors']
Availability,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:; ```; 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec; 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py; 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec; 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py; 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec; 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py; 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec; 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py; 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec; 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py; 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec; 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py; 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec; 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py; 17:06:49 1259/2373 Test #1168: tuto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12536#issuecomment-1482508642:271,Error,Error,271,https://root.cern,https://github.com/root-project/root/pull/12536#issuecomment-1482508642,4,['Error'],['Error']
Availability,"No. I dont think the problem is understood. In my software I link with another library compiled with the system libraries which have a recent libpng.; At run time ROOT finds the old ones from libpng inside imagemagic. It is not too hard to update the lib png. Do you want me to write what I do?. G. > On Dec 5, 2023, at 2:52 PM, Axel Naumann ***@***.***> wrote:; > ; > ; > @unelg <https://github.com/unelg> just FYI your error message is independent of whether ROOT's png is too old or not: you are mixing library and header of libpng from two different versions, likely in your own build? Please don't :-) If what I say here doesn't make sense please post a reproducer of this error at https://root-forum.cern.ch <https://root-forum.cern.ch/> - thanks!; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/issues/13825#issuecomment-1840834891>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AAVOOJIRSHYYX74ALYJ55JLYH4RIZAVCNFSM6AAAAAA5W3TU4SVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTQNBQHAZTIOBZGE>.; > You are receiving this because you were mentioned.; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13825#issuecomment-1840841385:421,error,error,421,https://root.cern,https://github.com/root-project/root/issues/13825#issuecomment-1840841385,2,['error'],['error']
Availability,None of the build errors seem related to this PR if I see correctly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/432#issuecomment-287136526:18,error,errors,18,https://root.cern,https://github.com/root-project/root/pull/432#issuecomment-287136526,1,['error'],['errors']
Availability,None of the failures above seem due to this PR... [They are due to xrootd AUTH failure],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5917#issuecomment-648330885:12,failure,failures,12,https://root.cern,https://github.com/root-project/root/pull/5917#issuecomment-648330885,2,['failure'],"['failure', 'failures']"
Availability,None of the failures have anything to do with the PyROOT changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14294#issuecomment-1866975752:12,failure,failures,12,https://root.cern,https://github.com/root-project/root/pull/14294#issuecomment-1866975752,1,['failure'],['failures']
Availability,None of these errors are related to your change; they're all in the works!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3063#issuecomment-443120738:14,error,errors,14,https://root.cern,https://github.com/root-project/root/pull/3063#issuecomment-443120738,1,['error'],['errors']
Availability,"Nope, because my change enable C++1z in Cling (otherwise CMSSW wouldn't work). If I print __cplusplus from rootcling_stage1 I get C++14, which would explain the error about optional, I guess.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/522#issuecomment-298983124:161,error,error,161,https://root.cern,https://github.com/root-project/root/pull/522#issuecomment-298983124,1,['error'],['error']
Availability,"Nope, real error is; ```; 11:31:21 CMake Error at cmake/modules/RootMacros.cmake:1323 (get_target_property):; 11:31:21 INTERFACE_LIBRARY targets may only have whitelisted properties. The; 11:31:21 property ""INCLUDE_DIRECTORIES"" is not allowed.; 11:31:21 Call Stack (most recent call first):; 11:31:21 core/rootcling_stage1/CMakeLists.txt:31 (ROOT_EXECUTABLE); ```; which is caused by the changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6405#issuecomment-696613191:11,error,error,11,https://root.cern,https://github.com/root-project/root/pull/6405#issuecomment-696613191,2,"['Error', 'error']","['Error', 'error']"
Availability,"Nope: [clad-configure-out.log](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/168645/parsed_console/job/root-pullrequests-build/168645/parsed_console/log_content.html#ERROR1) says. ```; CMake Warning:; Ignoring extra path from command line:. ""/mnt/build/workspace/root-pullrequests-build/build/interpreter/llvm/src/tools/clang/include"". CMake Warning:; Ignoring extra path from command line:. ""/mnt/build/workspace/root-pullrequests-build/build/interpreter/llvm/src/tools/clang/include"". CMake Error at CMakeLists.txt:110 (find_package):; Could not find a package configuration file provided by ""Clang"" with any of; the following names:. ClangConfig.cmake; clang-config.cmake. Add the installation prefix of ""Clang"" to CMAKE_PREFIX_PATH or set; ""Clang_DIR"" to a directory containing one of the above files. If ""Clang""; provides a separate development package or SDK, be sure it has been; installed.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12333#issuecomment-1433191981:520,Error,Error,520,https://root.cern,https://github.com/root-project/root/pull/12333#issuecomment-1433191981,1,['Error'],['Error']
Availability,"Norm}, {""Reshape"", TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasReshape}, {""Concatenate"", TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasConcat}, {""Add"", TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasBinary}, {""Subtract"", TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasBinary}, {""Multiply"", TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasBinary}, {""Softmax"", TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSoftmax}, {""tanh"", TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasTanh}, {""LeakyReLU"", TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasLeakyRelu}, {""Dropout"", &lt;expression error&gt;}}’ from ‘&lt;brace-enclosed initializer list&gt;’ to ‘const KerasMethodMap’ {aka ‘const std::unordered_map&lt;std::__cxx11::basic_string&lt;char&gt;, std::unique_ptr&lt;TMVA::Experimental::SOFIE::ROperator&gt; (*)(_object*)&gt;’} ; - [2023-01-20T19:22:00.308Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_Keras.cxx:82:28: error: expected unqualified-id before ‘,’ token ; - [2023-01-20T19:22:00.308Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_Keras.cxx:85:4: error: expected unqualified-id before ‘{’ token ; - [2023-01-20T19:22:00.308Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_Keras.cxx:85:28: error: expected unqualified-id before ‘,’ token ; - [2023-01-20T19:22:00.308Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_Keras.cxx:86:4: error: expected unqualified-id before ‘{’ token ; - [2023-01-20T19:22:00.308Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_Keras.cxx:86:28: error: expected unqualified-id before ‘,’ token ; - [2023-01-20T19:22:00.308Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_Keras.cxx:87:4: error: expected unqualified-id before ‘{’ token . And 17 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12076#issuecomment-1398831265:2184,error,error,2184,https://root.cern,https://github.com/root-project/root/pull/12076#issuecomment-1398831265,6,['error'],['error']
Availability,Not associating to any ROOT release because this was a temporary error in `master`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16506#issuecomment-2399660691:65,error,error,65,https://root.cern,https://github.com/root-project/root/issues/16506#issuecomment-2399660691,1,['error'],['error']
Availability,"Not everything will be covered by modules, for a long time. Thus we will have to keep the rdict file feature alive for years to come. What's the benefit of optimizing this then - is it only to accelerate roottest? (I'm trying to understand whether it's important to invest dev hours here vs in other areas, taking as main criteria, as always, relevance to our users.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012#issuecomment-650953383:109,alive,alive,109,https://root.cern,https://github.com/root-project/root/pull/3012#issuecomment-650953383,1,['alive'],['alive']
Availability,"Not quite. The issues was seen as result differing on two different machine but being always the same on the same machine. The two machines have different number of core and thus the chunking was different even in the case where the user requested only a single core to be used on both machine. The related issue is, of course, the question of *why* the end result depends on the chunking and whether this indicates a severe flaw in the algorithm used or is 'simply' case of visible but 'normal' numerical error/uncertainty being propagated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2039#issuecomment-390711669:506,error,error,506,https://root.cern,https://github.com/root-project/root/pull/2039#issuecomment-390711669,1,['error'],['error']
Availability,"Not sure about the CI failure, but may be related to:. `get_filename_component(ROOT_LIBRARY_DIR ""${ROOTSYS}/lib"" ABSOLUTE)`. in [roottest/CMakeLists.txt#L200](https://github.com/root-project/roottest/blob/e7c9a5cbc969fa99b668684cbebc59d554ceebc8/CMakeLists.txt#L200)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14176#issuecomment-1840712162:22,failure,failure,22,https://root.cern,https://github.com/root-project/root/pull/14176#issuecomment-1840712162,1,['failure'],['failure']
Availability,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```; ...; FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx; ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory; FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx; ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory; FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/380#issuecomment-286498843:746,error,error,746,https://root.cern,https://github.com/root-project/root/pull/380#issuecomment-286498843,1,['error'],['error']
Availability,Not sure if that'd help but can you try with this version of the modulemap https://github.com/root-project/root/pull/11874/commits/b4af76caef9ea4504f99486f047d88b03b021d2d available in PR #11874?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10291#issuecomment-1397515091:172,avail,available,172,https://root.cern,https://github.com/root-project/root/issues/10291#issuecomment-1397515091,1,['avail'],['available']
Availability,"Note that I'm completely unsure if this is really Cling's fault. If not, we have to re-assign accordingly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10010#issuecomment-1056678834:58,fault,fault,58,https://root.cern,https://github.com/root-project/root/issues/10010#issuecomment-1056678834,1,['fault'],['fault']
Availability,"Note that `v[v >0]` is meant to return a reference to a masked vector so that one can do `v[v > 0] = 2;`, so maybe that's what we need to fix. What you mention above looks like targeted at creating copies of parts of a vector, which may lead to surprising behavior from user's point of view.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2147#issuecomment-395714718:56,mask,masked,56,https://root.cern,https://github.com/root-project/root/pull/2147#issuecomment-395714718,1,['mask'],['masked']
Availability,"Note that https://github.com/root-project/root/pull/8093 is to be merged first, which should avoid the above test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8094#issuecomment-832165555:114,failure,failures,114,https://root.cern,https://github.com/root-project/root/pull/8094#issuecomment-832165555,1,['failure'],['failures']
Availability,Note that if we want to download at configuration time we should use FetchContent_Declare which seems to take similar arguments.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16296#issuecomment-2306368651:24,down,download,24,https://root.cern,https://github.com/root-project/root/pull/16296#issuecomment-2306368651,1,['down'],['download']
Availability,"Note that some OpenSSL binaries are available for Windows, but I'll have to try them",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10380#issuecomment-1134312995:36,avail,available,36,https://root.cern,https://github.com/root-project/root/pull/10380#issuecomment-1134312995,1,['avail'],['available']
Availability,Note that the error is relatively odd/unusual.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5762#issuecomment-637773719:14,error,error,14,https://root.cern,https://github.com/root-project/root/pull/5762#issuecomment-637773719,1,['error'],['error']
Availability,"Note that the error on ""mac11.0/cxx17"" is unrelated but reproducible (1 out 10 runs).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7073#issuecomment-764822781:14,error,error,14,https://root.cern,https://github.com/root-project/root/pull/7073#issuecomment-764822781,1,['error'],['error']
Availability,Note that the projectroot.test.test_stressHistFactory failures are likely real - an indication of an inf loop.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4675#issuecomment-567587643:54,failure,failures,54,https://root.cern,https://github.com/root-project/root/pull/4675#issuecomment-567587643,1,['failure'],['failures']
Availability,"Note that this PR (?) seems to cause new errors in the new CI - we were at 0 test failures before, thanks to all your work!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13072#issuecomment-1603956972:41,error,errors,41,https://root.cern,https://github.com/root-project/root/pull/13072#issuecomment-1603956972,2,"['error', 'failure']","['errors', 'failures']"
Availability,"Note that we observed the same type of crash in some other places as well in ATLAS, which could also be handled by cleaning up the dictionaries of the affected libraries. So the error has an upside as well. (Though a simple error message from ROOT would've been more welcome. :stuck_out_tongue:). (I mainly just wrote this comment to get notifications about this issue's evolution... :wink:)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657#issuecomment-805575762:178,error,error,178,https://root.cern,https://github.com/root-project/root/issues/7657#issuecomment-805575762,2,['error'],['error']
Availability,"Note to self: the error (visible on Mac 10.15 with C++17) is triggered by rebasing this branch on top of master. I force-pushed the rebased branch. It's real, caused by inconsistent exception spec type (""EST"") for redeclarables, and earlier my attempt at fixing it not updating the to-be-codegened decl for its EST.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5903#issuecomment-670005388:18,error,error,18,https://root.cern,https://github.com/root-project/root/pull/5903#issuecomment-670005388,1,['error'],['error']
Availability,"Note, in my opinion the current behavior is to replace:; ```; expression_not_ending_with_semi_colon; ```; with the moral equivalent of ; ```; auto tobeprinted = expression_not_ending_with_semi_colon;; std::cout << tobeprinted << std::endl;; ```; which the current implementation handles as expected: (for example by rejected the `if` statement (as in the original report) but accepting the tertiary operator); ```; root [0] auto x = if (true) 1;; ROOT_prompt_0:1:10: error: expected expression; auto x = if (true) 1;; ^; root [1] true ? 1 : 0; (int) 1; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6644#issuecomment-2075526475:467,error,error,467,https://root.cern,https://github.com/root-project/root/issues/6644#issuecomment-2075526475,1,['error'],['error']
Availability,"Note: if I ""source"" root before calling cmake, then the VDT error disappears.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14163#issuecomment-1837198099:60,error,error,60,https://root.cern,https://github.com/root-project/root/issues/14163#issuecomment-1837198099,1,['error'],['error']
Availability,"Note: if I build from source, it works fine. It fails only when downloading the binary release. So it seems a packaging issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14247#issuecomment-1878784871:64,down,downloading,64,https://root.cern,https://github.com/root-project/root/issues/14247#issuecomment-1878784871,1,['down'],['downloading']
Availability,"Note: some of the reference files were updated with 'best guesses' and over-shot the correction. ; The only case I found of increase is https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169840/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_testForeignDraw/; where the actual increase is:; ```; --- a/root/io/treeForeign/testForeignDrawZLIB_builtinzlib.ref; +++ b/root/io/treeForeign/testForeignDrawZLIB_builtinzlib.ref; @@ -4,7 +4,7 @@ Warning in <TClass::Init>: no dictionary for class Wrapper is available; Warning in <TClass::Init>: no dictionary for class MyClass is available; ******************************************************************************; *Tree :T : T *; -*Entries : 2 : Total = 4215 bytes File Size = 1465 *; +*Entries : 2 : Total = 4215 bytes File Size = 1470 *; * : : Tree compression factor = 1.08 *; ******************************************************************************; ```; I am not sure whether it is worth trying to investigate (since it is small, it is the only case and it is the (older?) buitin zlib)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12439#issuecomment-1458508601:555,avail,available,555,https://root.cern,https://github.com/root-project/root/pull/12439#issuecomment-1458508601,2,['avail'],['available']
Availability,"Note: the failure in the TTabCom test indicates that as a consequence of this PR, more AST nodes are loaded in memory at startup.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1312#issuecomment-344217460:10,failure,failure,10,https://root.cern,https://github.com/root-project/root/pull/1312#issuecomment-344217460,1,['failure'],['failure']
Availability,"Note: this was intentionally not rebased on master for now, I will rebase before merging (incrementals currently show a test failure I want to avoid).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1058#issuecomment-332520777:125,failure,failure,125,https://root.cern,https://github.com/root-project/root/pull/1058#issuecomment-332520777,1,['failure'],['failure']
Availability,Note:. Such big PR is not good because they are hard to debug in case of problem. The recent recent example with the PR testing IsBatch in TCanvas::Close prove it. It was easy to track down because it was a single simple PR. This faulty code is present in this big PR. I suggest you remove this big PR. We cannot be confident with it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6469#issuecomment-704312614:185,down,down,185,https://root.cern,https://github.com/root-project/root/pull/6469#issuecomment-704312614,2,"['down', 'fault']","['down', 'faulty']"
Availability,"Note:. When histograms are added to the directory, there will still be a slow down. This is because for histogram we can not assume that they are not shared. There is 2 patterns that can be used to speed up the file closing *if and only if* the histograms are not shared between the `TFile` and other containers/code (or if the double delete is avoided through other means):. (a) Detach the `TFile` from the `ROOT` list of files, which (indirectly) tells the clean up system that it does not need to inform the directories of that file of any deletion.; ```; std::unique_ptr<TFile> out(TFile::Open(""example.root"", ""RECREATE""));; gROOT->GetListOfFiles()->Remove(out.get());; ```. (b) Tell the histogram that they will not be shared and that they don't need to inform any entities that they are being deleted.; ```; auto h = new TH1F(histo_name, histo_title, 100, 0, 100);; h->ResetBit(kMustCleanup); // This is necessary to avoid scanning all the directories when deleting this histogram; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13449#issuecomment-1872379242:78,down,down,78,https://root.cern,https://github.com/root-project/root/issues/13449#issuecomment-1872379242,1,['down'],['down']
Availability,Now I get:; ```; ...; [100%] Built target modules_idx; [100%] Generating tutorials/hsimple.root. Processing hsimple.C...; hsimple : Real Time = 0.22 seconds Cpu Time = 0.07 seconds; (TFile *) 0x7fccdab5e360; [100%] Built target hsimple; filter.cxx:74:10: fatal error: 'unistd.h' file not found; #include <unistd.h>; ^~~~~~~~~~; [100%] Built target PreparationPyz; 1 error generated.; make[2]: *** [documentation/doxygen/CMakeFiles/Preparation] Error 1; make[1]: *** [documentation/doxygen/CMakeFiles/Preparation.dir/all] Error 2; make: *** [all] Error 2. ```. I am on MacOS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15160#issuecomment-2075185149:261,error,error,261,https://root.cern,https://github.com/root-project/root/pull/15160#issuecomment-2075185149,5,"['Error', 'error']","['Error', 'error']"
Availability,"Now I'm doing another thing, and return again to this issue. I want to make a 3-dimensional fit, but some pdfs depend only on z, so I multiply them by uniform pdfs on x and y. I mean RooUniform for the whole domain of a variable, not what I proposed in https://github.com/root-project/root/issues/7880. So I create a uniform distribution like that. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);; RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);; RooProdPdf uxy_nt(""uxy_nt"", ""uxy_nt"", RooArgList(u_nt_x, u_nt_y));. So I have 5 pdfs for which I need to create a separate uniform distribution on (x, y), which in turn requires creation of new pdfs on x (and on y), which are all uniform and absolutely the same. This leads to 15 new lines of code, which is not that much, but seems redundant (as names and titles of the uniform distribution on all x) and even more error-prone (because of very similar code). Maybe there must be a way to explicitly allow same pdfs, if you know that they are really identical ones with same parameters? Say a new class, RooRefPdf, RooCopyPdf, ... .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8000#issuecomment-830081883:768,redundant,redundant,768,https://root.cern,https://github.com/root-project/root/issues/8000#issuecomment-830081883,2,"['error', 'redundant']","['error-prone', 'redundant']"
Availability,"Now this PR is blocked by https://github.com/root-project/roottest/pull/762, which will fix the test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8769#issuecomment-892981611:101,failure,failures,101,https://root.cern,https://github.com/root-project/root/pull/8769#issuecomment-892981611,1,['failure'],['failures']
Availability,"Now, progress is blocked by [ROOT-10671](https://sft.its.cern.ch/jira/browse/ROOT-10671). The test failure is a direct consequence of that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5219#issuecomment-614517483:99,failure,failure,99,https://root.cern,https://github.com/root-project/root/pull/5219#issuecomment-614517483,1,['failure'],['failure']
Availability,"Now, the verbose reponse of the tests looks like this:. ```; test 73; Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake""; 73: Test timeout computed to be: 1500; 73: Get test data...; 73: Generate keras model...; 73: Using Theano backend.; 73: Setup TMVA...; 73: Using Theano backend.; 73: Train model...; 73: Run reader and classify 100 events...; 73: Mean MVA response on signal: 0.747554; 73: Mean MVA response on background: 0.290326; 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec; test 74; Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake""; 74: Test timeout computed to be: 1500; 74: Get test data...; 74: Generate keras model...; 74: Using Theano backend.; 74: Setup TMVA...; 74: Using Theano backend.; 74: Train model...; 74: Run reader and estimate target of 100 events...; 74: Mean squared error: 1.28006; 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:; PyMVA-Keras-Classification; PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/280#issuecomment-253739525:1213,error,error,1213,https://root.cern,https://github.com/root-project/root/pull/280#issuecomment-253739525,1,['error'],['error']
Availability,O right I forgot - we have automatic downcasting. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/371#issuecomment-282693125:37,down,downcasting,37,https://root.cern,https://github.com/root-project/root/pull/371#issuecomment-282693125,1,['down'],['downcasting']
Availability,"O.pcm ; - Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TBufferFile.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TString.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObjArray.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TXMLEngine.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TKey.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TXMLEngine.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TFile.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TXMLSetup.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TList.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TXMLSetup.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module root_std_complex.h resolved but not visible![5557/8175] Generating G__XMLParser.cxx, ../../lib/libXMLParser_rdict.pcm, ../../lib/libXMLParser.rootmap, ../../lib/XMLParser.pcm ; - Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TQObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TString.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TXMLParser.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347255787:2051,Error,Error,2051,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347255787,1,['Error'],['Error']
Availability,"OK for adjusting the test to not use `Declare()`, but the current behavior of this PR renders the tab completion close to useless. Can we somehow expose to TTabCom the identifiers available to the GMI?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-640384639:180,avail,available,180,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-640384639,1,['avail'],['available']
Availability,OK please ping me on Wed should you not have my review by then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6606#issuecomment-715399696:10,ping,ping,10,https://root.cern,https://github.com/root-project/root/pull/6606#issuecomment-715399696,1,['ping'],['ping']
Availability,"OK so you recommend to use `__cplusplus` instead of `__cpp_lib_three_way_comparison`, @hahnjo ? @bellenot could you do this? and **thank you** for tracking this down!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12525#issuecomment-1540478040:161,down,down,161,https://root.cern,https://github.com/root-project/root/pull/12525#issuecomment-1540478040,1,['down'],['down']
Availability,OK thanks for the update (and your helpful attitude of looking for a workaround). I will be looking at that source of this error - first I need to reproduce it. Do you happen to have a reproducer for this outside your build? Is this a C++20 build?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12762#issuecomment-1536249315:123,error,error,123,https://root.cern,https://github.com/root-project/root/issues/12762#issuecomment-1536249315,1,['error'],['error']
Availability,"OK thanks, I understand better now. When you invalidate the contract with the linker, just as when you rely on undefined behavior, the results are not reliable anymore. Even though your code seems to suggest that it's because of ROOT that's *not* the case: the use of some other library, other code, might just as well cause problems. Please remove the two symbols with the same name and your problems will vanish. The fact that ROOT is triggering it doesn't mean that it's causing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8256#issuecomment-851285161:151,reliab,reliable,151,https://root.cern,https://github.com/root-project/root/issues/8256#issuecomment-851285161,1,['reliab'],['reliable']
Availability,"OK thanks. I believe that ""there is no other way to get reliable results"" is a bit of an exaggeration - many numerical libraries and programs do not turn fp exceptions on. IEEE 754 allows them to survive just fine the cases you are hunting down, because (as you certainly know) IEEE 754 brings defined behavior to ""degenerate"" (not in the IEEE 754 sense) cases. As a matter of fact, I believe you have just proven to yourself that ""there is no other way to get reliable results"" is also incorrect, as the optimizer might change fp operations. Yes, GCC tries to keep them ""fp-safe"" but that might change in any of the upcoming versions, just like it did for instance for clang, the Intel compiler, and - if I remember correctly - MSVC. Our approach is not to rely on fp exceptions but on coverage in regression tests. That has limited reach (as would fp exceptions) but it allows us to detect when results change in a visible, ""unreliable"" way. Shall we close this then or is there something left to be clarified?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6677#issuecomment-713528820:56,reliab,reliable,56,https://root.cern,https://github.com/root-project/root/issues/6677#issuecomment-713528820,3,"['down', 'reliab']","['down', 'reliable']"
Availability,"OK that RooFit error is for me. But we would have seen a compilation error in `TString.h`, so regarding this PR it looks fine: please go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12525#issuecomment-1494210008:15,error,error,15,https://root.cern,https://github.com/root-project/root/pull/12525#issuecomment-1494210008,2,['error'],['error']
Availability,"OK, I force-pushed a new version, now there are no SDF fonts in the repo -- but I have added two ttf fonts that have all the accented and greek characters. The creator of sdf font stuff is in `graf3d/gl` as it requires open-gl for rendering of the glyphs. `texts.C` demo will now make sure the fonts are available in the web server repo under `ui5/eve7/fonts/`. There is only one thing I couldn't figure out -- how to link against libpng ... so I just added `-lpng` into cmake file for `graf3d/gl/`. Please help me figure out how to do this correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2168748123:304,avail,available,304,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2168748123,1,['avail'],['available']
Availability,"OK, I ran with XRD_LOGLEVEL=Dump, and you can see the response after. === stderr ===. saying:. Unable to process directory /alrb/.xrootd/client.plugins.d: [ERROR] OS Error: No such file or directory. Log file:. [xrootd_error_on_grid.pdf](https://github.com/root-project/root/files/5702981/xrootd_error_on_grid.pdf). The file:. root://marsedpm.in2p3.fr:1094//dpm/in2p3.fr/home/atlas/atlasdatadisk/rucio/mc16_13TeV/9c/ab/DAOD_HIGG2D1.23315577._000001.pool.root.1. of course opens correctly for a simple TOpen in any interactive ROOT session. see you, RD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-746292691:156,ERROR,ERROR,156,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-746292691,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11865#issuecomment-1344487224:93,avail,available,93,https://root.cern,https://github.com/root-project/root/pull/11865#issuecomment-1344487224,1,['avail'],['available']
Availability,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11863#issuecomment-1344487042:93,avail,available,93,https://root.cern,https://github.com/root-project/root/pull/11863#issuecomment-1344487042,2,['avail'],['available']
Availability,"OK, back to this. For the record, the working syntax (for me) is:; ```; set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug; set ASAN_OPTIONS=detect_odr_violation=0; ```; And at the end of the build I got:; ```; Generating tutorials/hsimple.root; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets; (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31; 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim; ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]; Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED.; ```; So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-1192296623:498,error,error,498,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-1192296623,3,['error'],"['error', 'errors']"
Availability,"OK, latest version of Visual Studio (v16.10.0) is broken again, and this will not be the last time. I close this issue since it is not up to date anyway (the failures are different at each VS update...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6820#issuecomment-852071998:158,failure,failures,158,https://root.cern,https://github.com/root-project/root/issues/6820#issuecomment-852071998,1,['failure'],['failures']
Availability,"OK, so I can reproduce the error, I'm investigating. It looks like the only solution for the time being is to rebuild ROOT from source...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14302#issuecomment-1882760886:27,error,error,27,https://root.cern,https://github.com/root-project/root/issues/14302#issuecomment-1882760886,1,['error'],['error']
Availability,"OK, so I got it right :). I'm not going to change formatting, it's consistent with the rest of eve/gl and what it's proposing to do is adding 4 lines 8 times with final effect of decreasing readability of the code. The tidy errors are coming from TMath ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/566#issuecomment-300844946:224,error,errors,224,https://root.cern,https://github.com/root-project/root/pull/566#issuecomment-300844946,1,['error'],['errors']
Availability,"OK, so all the test failures seem to be tests failing to find math functions like sqrt(). ```; pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/math/genvector/test/testGenVector.cxx+...; Info in <TUnixSystem::ACLiC>: creating shared library /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/roottest/root/math/genvector/testGenVector_cxx.so; In file included from input_line_11:21:; In file included from /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/etc/dictpch/allHeaders.h:680:; In file included from /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/Math/Vector3D.h:11:; /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/Math/GenVector/Cartesian3D.h:121:14: error: no matching function for call to 'sqrt'; return sqrt(Mag2());; ```. All the failures seem to be in tests where the interpreter is being used to compile, so it looks like in this case the match functions are not being found via the 'using namespace' syntax. It works fine with clang, and also when compiled natively. Note, to answer a previous question, just sticking with the likes of `std::sqrt` indeed does not work with Vc types. Trying going back to this I get. ```; [100%] Linking CXX shared library libTrackMathCoreDict.so; [100%] Built target TrackMathCoreDict; In file included from /Users/chris/Projects/ROOT/source/test/testGenVectorVc.cxx:3:; In file included from /Users/chris/Projects/ROOT/build/include/Math/GenVector/PositionVector3D.h:22:; /Users/chris/Projects/ROOT/build/include/Math/GenVector/Cartesian3D.h:119:13: error: no matching function for call to 'sqrt'; return std::sqrt(Mag2());; ^~~~~~~~~; ```. So something needs to be changed, and my `using namespace` trick really should work. Any ideas why the interpreter seems unhappy with this, with gcc ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-286150016:20,failure,failures,20,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-286150016,4,"['error', 'failure']","['error', 'failures']"
Availability,"OK, so it seems I am blind.... I had missed an additional opening brace in one of the above methods that was leading to the errors. I will delete my last comment after posting this... So, OK, I can get things to work with the hidden parameter approach. The question then is do you guys *really* prefer this to templating on the return type ? To my eye the hidden parameter is the worse evil, so I would stick with how things are now ?. For completeness here is what the hidden parameter versions of the two `Unit()` methods would look like. Do you really prefer this ?. ``` ; template < typename SCALAR = Scalar >; DisplacementVector3D Unit( typename std::enable_if<std::is_arithmetic<SCALAR>::value,SCALAR>::type* = nullptr ) const {; const auto tot = R();; return tot == 0 ? *this : DisplacementVector3D(*this) / tot;; }. template < typename SCALAR = Scalar >; DisplacementVector3D Unit( typename std::enable_if<!std::is_arithmetic<SCALAR>::value,void>::type* = nullptr ) const {; SCALAR tot = R();; tot(tot == SCALAR(0)) = SCALAR(1);; return DisplacementVector3D(*this) / tot;; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-286495191:124,error,errors,124,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-286495191,1,['error'],['errors']
Availability,"OK, so this time the errors are (finally) unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7778#issuecomment-815475383:21,error,errors,21,https://root.cern,https://github.com/root-project/root/pull/7778#issuecomment-815475383,1,['error'],['errors']
Availability,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:; ```; With the provided path, there will be 1 file uploaded; Starting artifact upload; For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging; Artifact name is valid!; Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s); Total size of all the files uploaded is 661143 bytes; File upload process has finished. Finalizing the artifact upload; Artifact has been finalized. All files have been successfully uploaded!. The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes; The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded!; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14657#issuecomment-1947882129:8,error,error,8,https://root.cern,https://github.com/root-project/root/pull/14657#issuecomment-1947882129,3,"['down', 'error']","['downloaded', 'downloads', 'error']"
Availability,"OK, then I will change the code. Note that I have to physically download a file on the client to have a return code of 0, and then delete it. That's why I wanted to do it differently, but anyway, if it's needed then let's do it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-867641484:64,down,download,64,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-867641484,1,['down'],['download']
Availability,"OK, there are errors already in LLVM/Clang, and as I said, there is no way I can test on ARM64, so there is not much I can do...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787#issuecomment-2238682170:14,error,errors,14,https://root.cern,https://github.com/root-project/root/issues/11787#issuecomment-2238682170,1,['error'],['errors']
Availability,"OK, this might be an option but currently does not work. Adding. ```; #ifdef R__HAS_VC; #include <Vc/Vc>; #endif; ```. to `DisplacementVector3D.h` leads to the build time errors when rebuilding ROOT like,. ```; In file included from /Users/chris/Projects/ROOT/build/math/genvector/G__GenVector32.cxx:42:; In file included from /Users/chris/Projects/ROOT/build/include/Math/Vector3D.h:17:; /Users/chris/Projects/ROOT/build/include/Math/GenVector/DisplacementVector3D.h:24:10: fatal error: 'Vc/Vc' file not found; #include <Vc/Vc>; ```. I guess that particular compilation unit is not including the Vc header location. Note, my test ROOT build is built with the builtin_vc option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-286432162:171,error,errors,171,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-286432162,2,['error'],"['error', 'errors']"
Availability,"OK, well, it doesn't work for me:; ```; [bellenot@bbcc7x64 gui]$ root -l games.C; root [0]; Processing games.C...; input_line_14:1:10: fatal error: 'Hello.h' file not found; #include ""Hello.h""; ^~~~~~~~~; input_line_15:1:10: fatal error: 'Aclock.h' file not found; #include ""Aclock.h""; ^~~~~~~~~~; input_line_16:1:10: fatal error: 'Tetris.h' file not found; #include ""Tetris.h""; ^~~~~~~~~~; In file included from input_line_17:1:; ./games.C:72:23: error: allocation of incomplete type 'Hello'; Hello *hello = new Hello();; ^~~~~; ./games.C:65:7: note: forward declaration of 'Hello'; class Hello;; ^; input_line_19:2:3: error: use of undeclared identifier 'rungames'; (rungames()); ^; Error in <HandleInterpreterException>: Error evaluating expression (rungames()).; Execution of your code was aborted.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7184#issuecomment-778226348:141,error,error,141,https://root.cern,https://github.com/root-project/root/pull/7184#issuecomment-778226348,7,"['Error', 'error']","['Error', 'error']"
Availability,"OK, what about; ```; do 1 while (true)`; ```; ? I.e. where do we stop? (Note that this isn't parsable, and appending a trailing ';' doesn't help.). For me, an inner block (even if the '{}' are omitted) is not considered by the value printer; changing that is likely not work it and will create many more inconsistencies than is warranted by ""repairing"" the seemingly inconsistent behavior of this ticket. To be more precise, why isn't; ```; if (true) { 1 }; ```; considered to print? What is; ```; switch (a) case 1: 42; ```; supposed to print? I think the current mental model of the ""outer-most expression"" is compatible with the syntax (""add a ';' to make it valid C++"") and comprehensible for users; changing this is a design change that I am not convinced of as it might hurt more than it heals, and causes confusion on the user side plus lots of added complexity.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6644#issuecomment-713457299:342,repair,repairing,342,https://root.cern,https://github.com/root-project/root/issues/6644#issuecomment-713457299,1,['repair'],['repairing']
Availability,"OK. We `dlopen` `libCling` into the process, some other files (`.pcm`, headers, plugin files) must be available as well. Because of this we never invested energy in static builds: you won't get a ""one file packaged ROOT"" anyway. I'd like to understand your use case a bit - what is it that you are trying to solve? How is the deployment of a regular ROOT build inappropriate / not easy enough?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8448#issuecomment-865021898:102,avail,available,102,https://root.cern,https://github.com/root-project/root/issues/8448#issuecomment-865021898,1,['avail'],['available']
Availability,"OK: `Mod` is not valid, so with the diagnostic the error occurs in `Mod->Name` rather than the `assert()` in the following line: hence, no diagnostic indicating the submodule.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377668083:51,error,error,51,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377668083,1,['error'],['error']
Availability,OOM on fed29 and the pcanal-v6-18-00-patches error should be fixed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4850#issuecomment-589575257:45,error,error,45,https://root.cern,https://github.com/root-project/root/pull/4850#issuecomment-589575257,1,['error'],['error']
Availability,OOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5986-mac1015-cxx17&date=2020-07-06).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89016/console).; ### Errors:; - [2020-07-06T16:44:28.652Z] FAILED: hist/histv7/G__ROOTHist.cxx lib/ROOTHist.pcm ; - [2020-07-06T16:44:30.552Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RHist.hxx:105:31: error: expected expression ; - [2020-07-06T16:44:30.552Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RHist.hxx:142:55: error: reference to non-static member function must be called ; - [2020-07-06T16:44:30.552Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RHist.hxx:170:47: error: reference to non-static member function must be called ; - [2020-07-06T16:44:30.552Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RHist.hxx:183:47: error: reference to non-static member function must be called ; - [2020-07-06T16:44:30.552Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RHistImpl.hxx:34:1: error: too few template parameters in template redeclaration ; - [2020-07-06T16:44:30.552Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RHistImpl.hxx:74:31: error: no template named 'CoordArray_t' in namespace 'ROOT::Experimental::Hist' ; - [2020-07-06T16:44:30.552Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RHistImpl.hxx:102:34: error: unknown type name 'CoordArray_t' ; - [2020-07-06T16:44:30.552Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RHistImpl.hxx:105:41: error: unknown type name 'CoordArray_t' ; - [2020-07-06T16:44:30.552Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RHistImpl.hxx:113:12: error: unknown type name 'CoordArray_t' . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5986#issuecomment-654347587:1173,error,error,1173,https://root.cern,https://github.com/root-project/root/pull/5986#issuecomment-654347587,6,['error'],['error']
Availability,OOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-4.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/138964/console).; ### Errors:; - [2022-03-08T17:53:08.558Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/tree/tree/test && /usr/local/bin/cmake -E env LD_LIBRARY_PATH=/mnt/build/workspace/root-pullrequests-build/build/lib: ROOTIGNOREPREFIX=1 /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling -rootbuild -v2 -f ElementStructDict.cxx -s /mnt/build/workspace/root-pullrequests-build/build/tree/tree/test/libElementStructDict.so -excludePath /mnt/build/workspace/root-pullrequests-build/root -excludePath /mnt/build/workspace/root-pullrequests-build/build -rml libElementStructDict.so -rmf /mnt/build/workspace/root-pullrequests-build/build/tree/tree/test/libElementStructDict.rootmap -inlineInputHeader -compilerI/usr/include/c++/5 -compilerI/usr/include/x86_64-linux-gnu/c++/5 -compilerI/usr/include/c++/5/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/5/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/5/include-fixed -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/5/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/5/include-fixed -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/include -I/mnt/build/workspace/root-pullrequests-build/root/tree/tree/test -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullrequests-build/build/etc/cling ElementStruct.h /mnt/build/workspace/root-pullrequests-build/root/tree/tree/test/ElementStructLinkDef.h ; - [2022-03-08T17:53:08.558Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RConfig.hxx:22:10: fatal error: 'ROOT/RVersion.hxx' file not found ; - [2022-03-08T17:53:08.558Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RConfig.hxx:22:10: fatal error: 'ROOT/RVersion.hxx' file not found,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10077#issuecomment-1062046774:1814,error,error,1814,https://root.cern,https://github.com/root-project/root/pull/10077#issuecomment-1062046774,2,['error'],['error']
Availability,"OOT::TVirtualRWMutex::State; _Dp = std::default_delete&lt;ROOT::TVirtualRWMutex::State&gt;]’ ; - /data/sftnight/workspace/root-pullrequests-build/root/core/thread/src/TReentrantRWLock.cxx:276:11: error: cannot bind ‘std::unique_ptr&lt;{anonymous}::TReentrantRWLockState&lt;std::mutex, ROOT::Internal::RecurseCounts&gt;, std::default_delete&lt;{anonymous}::TReentrantRWLockState&lt;std::mutex, ROOT::Internal::RecurseCounts&gt; &gt; &gt;’ lvalue to ‘std::unique_ptr&lt;{anonymous}::TReentrantRWLockState&lt;std::mutex, ROOT::Internal::RecurseCounts&gt;, std::default_delete&lt;{anonymous}::TReentrantRWLockState&lt;std::mutex, ROOT::Internal::RecurseCounts&gt; &gt; &gt;&&’ ; - /usr/include/c++/4.8.2/bits/unique_ptr.h:169:2: error: initializing argument 1 of ‘std::unique_ptr&lt;_Tp, _Dp&gt;::unique_ptr(std::unique_ptr&lt;_Up, _Ep&gt;&&) [with _Up = {anonymous}::TReentrantRWLockState&lt;std::mutex, ROOT::Internal::RecurseCounts&gt;; _Ep = std::default_delete&lt;{anonymous}::TReentrantRWLockState&lt;std::mutex, ROOT::Internal::RecurseCounts&gt; &gt;; &lt;template-parameter-2-3&gt; = void; _Tp = ROOT::TVirtualRWMutex::State; _Dp = std::default_delete&lt;ROOT::TVirtualRWMutex::State&gt;]’ ; - /data/sftnight/workspace/root-pullrequests-build/root/core/thread/src/TReentrantRWLock.cxx:276:11: error: cannot bind ‘std::unique_ptr&lt;{anonymous}::TReentrantRWLockState&lt;ROOT::TSpinMutex, ROOT::Internal::UniqueLockRecurseCount&gt;, std::default_delete&lt;{anonymous}::TReentrantRWLockState&lt;ROOT::TSpinMutex, ROOT::Internal::UniqueLockRecurseCount&gt; &gt; &gt;’ lvalue to ‘std::unique_ptr&lt;{anonymous}::TReentrantRWLockState&lt;ROOT::TSpinMutex, ROOT::Internal::UniqueLockRecurseCount&gt;, std::default_delete&lt;{anonymous}::TReentrantRWLockState&lt;ROOT::TSpinMutex, ROOT::Internal::UniqueLockRecurseCount&gt; &gt; &gt;&&’ ; - /usr/include/c++/4.8.2/bits/unique_ptr.h:169:2: error: initializing argument 1 of ‘std::unique_ptr&lt;_Tp, _Dp&gt;::unique_ptr(std::unique_ptr&lt;_Up, _Ep&gt;&&) [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3873#issuecomment-497466626:3014,error,error,3014,https://root.cern,https://github.com/root-project/root/pull/3873#issuecomment-497466626,2,['error'],['error']
Availability,"OOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 888: Environment variables:; 888: ROOT_HIST=0; 888: Test timeout computed to be: 1500; 888: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 888: error code: -529697949; 888:; 888:; 11/16 Test #888: tutorial-dataframe-df016_vecOps-py .......................***Failed 4.51 sec; test 889; Start 889: tutorial-dataframe-df017_vecOpsHEP-py. 889: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df017_vecOpsHEP.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 889: Environment variables:; 889: ROOT_HIST=0; 889: Test timeout computed to be: 1500; 889: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 889: error code: -529697949; 889:; 889:; 12/16 Test #889: tutorial-dataframe-df017_vecOpsHEP-py ....................***Failed 5.05 sec; test 890; Start 890: tutorial-dataframe-df019_Cache-py. 890: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df019_Cache.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 890: Environment variables:; 890: ROOT_HIST=0; 890: Test timeout computed to be: 1500; 890: Error in <TChain::LoadTree>: Cannot find tree with name ÉB D═ in file C:\Users\sftnight\build\release\tutorials\hsimple.root; 890: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (messa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:12213,Error,Error,12213,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['Error'],['Error']
Availability,ORMAT_MACROS -D__STDC_LIMIT_MACROS -Wno-maybe-uninitialized -O3 -DNDEBUG -fPIC -std=c++11 -MD -MT core/metacling/src/CMakeFiles/MetaCling.dir/TClingDataMemberInfo.cxx.o -MF core/metacling/src/CMakeFiles/MetaCling.dir/TClingDataMemberInfo.cxx.o.d -o core/metacling/src/CMakeFiles/MetaCling.dir/TClingDataMemberInfo.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingDataMemberInfo.cxx ; - [2020-08-28T16:33:06.521Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingMemberIter.h:92:15: error: ‘Iter’ function uses ‘auto’ type specifier without trailing return type ; - [2020-08-28T16:33:06.521Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingMemberIter.h:93:23: error: ‘Iter’ function uses ‘auto’ type specifier without trailing return type ; - [2020-08-28T16:33:06.521Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingMemberIter.h:94:22: error: ‘End’ function uses ‘auto’ type specifier without trailing return type ; - [2020-08-28T16:33:07.724Z] FAILED: /usr/bin/ccache /usr/bin/c++ -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/include -I/mnt/build/workspace/root-pullrequests-build/root/core/metacling/res -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/res -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/res -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/res -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6277#issuecomment-682840299:3008,error,error,3008,https://root.cern,https://github.com/root-project/root/pull/6277#issuecomment-682840299,1,['error'],['error']
Availability,"OS: Ubuntu 18.04.6; ROOT: 6.13.08 (binary); Make error; ROOT: 6.14.06 (binary); Make error; ROOT: 6.16.00 (binary): TMapFile: works, TApplication: failed; ```; Error in <TExMap::Add>: key 140702651440656 is not unique; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007ff7e1a5e337 in __GI___waitpid (pid=4208, stat_loc=stat_loc; entry=0x7ffd6b4ee5e8, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30; #1 0x00007ff7e19c9047 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149; #2 0x00007ff7e40dde83 in TUnixSystem::StackTrace() () from /home/koala/root/6.16.00.bin/lib/libCore.so.6.16; #3 0x00007ff7e40e0874 in TUnixSystem::DispatchSignals(ESignals) () from /home/koala/root/6.16.00.bin/lib/libCore.so.6.16; #4 <signal handler called>; #5 0x00007ff7dbd7bc73 in TClingCallFunc::SetArg(long) () from /home/koala/root/6.16.00.bin/lib/libCling.so; #6 0x00007ff7e3f89fef in TApplication::LoadGraphicsLibs() () from /home/koala/root/6.16.00.bin/lib/libCore.so.6.16; #7 0x00007ff7e3f895bc in TApplication::InitializeGraphics() () from /home/koala/root/6.16.00.bin/lib/libCore.so.6.16; #8 0x00007ff7e3f8f54b in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/koala/root/6.16.00.bin/lib/libCore.so.6.16; #9 0x0000560cc64cfdde in main (); ===========================================================; The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007ff7dbd7bc73 in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1710742916:49,error,error,49,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1710742916,3,"['Error', 'error']","['Error', 'error']"
Availability,"OS: Ubuntu 20.04.4. Only ROOT 6.28.04 works with the proposed ROOT-CONFIG. ROOT: 6.13.08 (binary); Compiling works, but missing libtinfo.so.5 for running. ; ```; huagen@ikp191:~/Codes/root_debug$ ./appdemo ; Fatal in <TROOT::InitInterpreter>: cannot load library libtinfo.so.5: cannot open shared object file: No such file or directory. ROOT: 6.14.06 (binary); Compiling works, but missing libtinfo.so.5 for running. ; ROOT: 6.16.00 (binary); Compiling works, but missing libtinfo.so.5 for running. ; ROOT: 6.18.04 (binary); Compiling works, but missing libtinfo.so.5 for running.; ROOT: 6.20.00 (binary); Compiling works, TMapFile works, but TApplication failed with error,; huagen@ikp191:~/Codes/root_debug$ ./appdemo ; ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths!; Invoking:; x86_64-linux-gnu-g++-8 -O3 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'; Results was:; With exit code 0; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fd1435d9c3a in __GI___wait4 (pid=47601, stat_loc=stat_loc; entry=0x7fffc08d2908, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007fd1435d9bfb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffc08d2908, options=options; entry=0) at waitpid.c:38; #2 0x00007fd143548f67 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007fd1444a57e0 in TUnixSystem::StackTrace() () from /home/huagen/root/6.20.00.bin/lib/libCore.so.6.20; #4 0x00007fd1444a8244 in TUnixSystem::DispatchSignals(ESignals) () from /home/huagen/root/6.20.00.bin/lib/libCore.so.6.20; #5 <signal handler called>; #6 0x00007fd13fdbd1d8 in TCling::CallFunc_Factory() const () from /home/huagen/root/6.20.00.bin/lib/libCling.so; #7 0x0000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1710747993:668,error,error,668,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1710747993,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"OT 6.23/01 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 18 2020, 17:03:24 |; | From heads/master@v6-23-01-RF-binSampling-155-g2cc56b30d2 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. Processing compare_Compton3.cpp+(""XYZ_1209"",""RangePMMA"",27)...; Info in <TUnixSystem::ACLiC>: creating shared library /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so; In file included from /opt/root_bld/include/RConfig.h:23,; from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program; #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict; ^; /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’; # define _NAME3_(name1,name2,name3) name1##name2##name3; ^~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__); ^~~~~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__); ^~~~~~~~~~~~~~~~~~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6837#issuecomment-731577667:1208,error,error,1208,https://root.cern,https://github.com/root-project/root/issues/6837#issuecomment-731577667,1,['error'],['error']
Availability,"OT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5610-windows10-cxx14&date=2020-05-14).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82112/console).; ### Errors:; - [2020-05-14T13:08:58.074Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Casting.h(256,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_e22b9dfadb': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\CommentSema.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\clangAST.vcxproj] ; - [2020-05-14T13:08:58.074Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(4137,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_a32e7b53ex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Driver\Action.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Driver\clangDriver.vcxproj] ; - [2020-05-14T13:08:58.074Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/CommandLine.h(894,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_a36a1dd9sy': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\TailRecursionElimination.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2020-05-14T13:08:58.074Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/FileSystem.h(958,1): fatal error C1088: Cannot flush compiler intermed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5610#issuecomment-628624829:1038,error,error,1038,https://root.cern,https://github.com/root-project/root/pull/5610#issuecomment-628624829,1,['error'],['error']
Availability,OT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-6385-ROOT-performance-centos7-multicore-default&date=2020-09-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96328/console).; ### Errors:; - [2020-09-21T12:14:07.863Z] /data/sftnight/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.h:12:52: fatal error: cling/Interpreter/InterpreterCallbacks.h: No such file or directory ; - [2020-09-21T12:14:08.121Z] /data/sftnight/workspace/root-pullrequests-build/root/core/metacling/src/TClingValue.cxx:18:37: fatal error: cling/Interpreter/Value.h: No such file or directory ; - [2020-09-21T12:14:08.121Z] /data/sftnight/workspace/root-pullrequests-build/root/core/dictgen/src/rootcling_impl.cxx:63:43: fatal error: cling/Interpreter/Interpreter.h: No such file or directory ; - [2020-09-21T12:14:08.121Z] /data/sftnight/workspace/root-pullrequests-build/root/core/dictgen/src/TModuleGenerator.cxx:25:41: fatal error: cling/Interpreter/CIFactory.h: No such file or directory ; - [2020-09-21T12:14:08.121Z] /data/sftnight/workspace/root-pullrequests-build/root/core/metacling/src/TClingTypedefInfo.h:31:43: fatal error: cling/Interpreter/Interpreter.h: No such file or directory ; - [2020-09-21T12:14:08.121Z] /data/sftnight/workspace/root-pullrequests-build/root/core/metacling/src/TClingTypeInfo.cxx:30:43: fatal error: cling/Interpreter/Interpreter.h: No such file or directory ; - [2020-09-21T12:14:08.121Z] /data/sftnight/workspace/root-pullrequests-build/root/core/dictgen/src/SelectionRules.cxx:35:43: fatal error: cling/Interpreter/Interpreter.h: No such file or directory ; - [2020-09-21T12:14:08.121Z] /data/sftnight/workspace/root-pullrequests-build/root/core/dictgen/src/DictSelectionReader.cxx:5:43: fatal error: cling/Interpreter/Interpreter.h: No such file or directory ; - [2020-09-21T12:14:08.380Z] /data/sftnight/workspace/root-pullrequests-build/root/core/dictgen/src/LinkdefReader.cxx:43:41: fatal err,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-696075693:1184,error,error,1184,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-696075693,1,['error'],['error']
Availability,OT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/103008/console).; ### Errors:; - [2020-11-30T21:43:06.557Z] FAILED: /usr/bin/ccache /usr/bin/c++ -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/res -I/mnt/build/workspace/root-pullrequests-build/root/builtins -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT io/io/CMakeFiles/RIO.dir/src/TStreamerInfo.cxx.o -MF io/io/CMakeFiles/RIO.dir/src/TStreamerInfo.cxx.o.d -o io/io/CMakeFiles/RIO.dir/src/TStreamerInfo.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TStreamerInfo.cxx ; - [2020-11-30T21:43:06.557Z] /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TStreamerInfo.cxx:5684:11: error: ‘int_pair_offset’ was not declared in this scope ; - [2020-11-30T21:43:06.557Z] /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TStreamerInfo.cxx:5686:7: error: expected ‘;’ before ‘else’,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6893#issuecomment-736074096:1812,error,error,1812,https://root.cern,https://github.com/root-project/root/pull/6893#issuecomment-736074096,2,['error'],['error']
Availability,OT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106404/console).; ### Errors:; - [2021-02-11T13:33:20.040Z] FAILED: /usr/bin/ccache /usr/bin/c++ -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Ibuiltins/pcre/PCRE-prefix/src/PCRE-build -I/mnt/build/workspace/root-pullrequests-build/root/core/base/res -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/res -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -Iginclude -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT core/base/CMakeFiles/Base.dir/src/TString.cxx.o -MF core/base/CMakeFiles/Base.dir/src/TString.cxx.o.d -o core/base/CMakeFiles/Base.dir/src/TString.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TString.cxx ; - [2021-02-11T13:33:20.041Z] /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TString.cxx:283:28: error: qualified-id in declaration before ‘(’ token ; - [2021-02-11T13:33:20.041Z] /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TString.cxx:283:29: error: expected primary-expression before ‘char’ ; - [2021-02-11T13:33:20.041Z] /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TString.cxx:2645:1: error: expected ‘}’ at end of input . ### Warnings:; - [2021-02-11T13:33:20.041Z] /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TString.cxx:2645:1: warning: control reaches end of non-void function [-Wreturn-type],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7132#issuecomment-777460626:1456,error,error,1456,https://root.cern,https://github.com/root-project/root/pull/7132#issuecomment-777460626,3,['error'],['error']
Availability,"OT::Math::IBaseFunctionMultiDimTempl&lt;double&gt;; ModelFunType = ROOT::Math::IParametricFunctionMultiDimTempl&lt;double&gt;]’ marked ‘override’, but does not override ; - [2020-08-05T11:32:05.176Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/PoissonLikelihoodFCN.h:130:9: error: ‘void ROOT::Fit::PoissonLikelihoodFCN&lt;DerivFunType, ModelFunType&gt;::Gradient(const double*, double*) const [with DerivFunType = ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt;; ModelFunType = ROOT::Math::IParametricFunctionMultiDimTempl&lt;Vc_1::Vector&lt;double, Vc_1::VectorAbi::Sse&gt; &gt;]’ marked ‘override’, but does not override ; - [2020-08-05T11:32:05.176Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/PoissonLikelihoodFCN.h:173:11: error: ‘double ROOT::Fit::PoissonLikelihoodFCN&lt;DerivFunType, ModelFunType&gt;::DoDerivative(const double*, unsigned int) const [with DerivFunType = ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt;; ModelFunType = ROOT::Math::IParametricFunctionMultiDimTempl&lt;Vc_1::Vector&lt;double, Vc_1::VectorAbi::Sse&gt; &gt;]’ marked ‘override’, but does not override ; - [2020-08-05T11:32:05.176Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/PoissonLikelihoodFCN.h:130:9: error: ‘void ROOT::Fit::PoissonLikelihoodFCN&lt;DerivFunType, ModelFunType&gt;::Gradient(const double*, double*) const [with DerivFunType = ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt;; ModelFunType = ROOT::Math::IParametricFunctionMultiDimTempl&lt;double&gt;]’ marked ‘override’, but does not override ; - [2020-08-05T11:32:05.176Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/PoissonLikelihoodFCN.h:173:11: error: ‘double ROOT::Fit::PoissonLikelihoodFCN&lt;DerivFunType, ModelFunType&gt;::DoDerivative(const double*, unsigned int) const [with DerivFunType = ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt;; ModelFunType = ROOT::M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6007#issuecomment-669141294:2968,error,error,2968,https://root.cern,https://github.com/root-project/root/pull/6007#issuecomment-669141294,1,['error'],['error']
Availability,OT::Math::MixMaxEngineImpl&lt;256&gt;’ ; - include/Math/MixMaxEngine.icc:38:12: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;17&gt;’ ; - include/Math/MixMaxEngine.icc:38:12: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;17&gt;’ ; - include/Math/MixMaxEngine.icc:38:12: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;17&gt;’ ; - include/Math/MixMaxEngine.icc:38:12: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;256&gt;’ ; - include/Math/MixMaxEngine.icc:38:12: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;256&gt;’ ; - include/Math/MixMaxEngine.icc:55:7: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;240&gt;’ ; - include/Math/MixMaxEngine.icc:55:7: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;17&gt;’ ; - include/Math/MixMaxEngine.icc:55:7: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;256&gt;’ . And 24 more. ### Warnings:; - include/Math/MixMaxEngine.icc:43:17: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete] ; - include/Math/MixMaxEngine.icc:43:17: warning: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;240&gt;’ ; - include/Math/MixMaxEngine.icc:43:17: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete] ; - include/Math/MixMaxEngine.icc:43:17: warning: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;17&gt;’ ; - include/Math/MixMaxEngine.icc:43:17: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete] ; - include/Math/MixMaxEngine.icc:43:17: warning: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;17&gt;’ ; - include/Math/MixMaxEngine.icc:43:17: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete] ; - include/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1932#issuecomment-384663627:1318,error,error,1318,https://root.cern,https://github.com/root-project/root/pull/1932#issuecomment-384663627,2,['error'],['error']
Availability,"OT::RDF::RDisplay&gt;&, std::shared_ptr&lt;std::pair&lt;long unsigned int, std::shared_ptr&lt;ROOT::RDF::RDisplay&gt; &gt; &gt;, std::shared_ptr&lt;ROOT::Detail::RDF::RLoopManager&gt;&)’ ; - [2022-10-05T14:54:02.161Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:3140:85: error: no type named ‘type’ in ‘struct std::enable_if&lt;false, int&gt;’ ; - [2022-10-05T14:54:02.161Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:3006:109: error: no matching function for call to ‘ROOT::RDF::RInterface&lt;ROOT::Detail::RDF::RLoopManager&gt;::CreateAction&lt;ROOT::Internal::RDF::ActionTags::Display, ULong64_t, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;(std::remove_reference&lt;std::vector&lt;std::__cxx11::basic_string&lt;char&gt; &gt;&&gt;::type, std::shared_ptr&lt;ROOT::RDF::RDisplay&gt;&, std::shared_ptr&lt;std::pair&lt;long unsigned int, std::shared_ptr&lt;ROOT::RDF::RDisplay&gt; &gt; &gt;, std::shared_ptr&lt;ROOT::Detail::RDF::RLoopManager&gt;&)’ ; - [2022-10-05T14:54:02.161Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:3140:85: error: no type named ‘type’ in ‘struct std::enable_if&lt;false, int&gt;’ ; - [2022-10-05T14:54:02.161Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:3006:109: error: no matching function for call to ‘ROOT::RDF::RInterface&lt;ROOT::Detail::RDF::RLoopManager&gt;::CreateAction&lt;ROOT::Internal::RDF::ActionTags::Display, ULong64_t, std::vector&lt;int, std::a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11498#issuecomment-1268554722:3196,error,error,3196,https://root.cern,https://github.com/root-project/root/pull/11498#issuecomment-1268554722,1,['error'],['error']
Availability,OTOH I really don't understand the 10.14 failure - the node has numpy installed just fine at /Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/numpy.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7635#issuecomment-804066187:41,failure,failure,41,https://root.cern,https://github.com/root-project/root/pull/7635#issuecomment-804066187,1,['failure'],['failure']
Availability,Of course you need internet at least once to download the pages on your local machine. That's also true if we would provide a tar ball of the html pages. I pointed you some recipes to download the Manual locally. The Manual is Web only. If you want it locally use the tools available on the web (you need internet at least once...) . I will close this issue I guess.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7421#issuecomment-865952020:45,down,download,45,https://root.cern,https://github.com/root-project/root/issues/7421#issuecomment-865952020,3,"['avail', 'down']","['available', 'download']"
Availability,"Oh ok, so `Clone` only copies the metadata and is expected to yield broken trees as the data stays behind in a different file that the cloned tree does not know how to access. I find this confusing and error-prone, but if it is things working as intended then nothing to do here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9757#issuecomment-1196884915:202,error,error-prone,202,https://root.cern,https://github.com/root-project/root/issues/9757#issuecomment-1196884915,1,['error'],['error-prone']
Availability,"Oh, I see. Maybe something is different in Windows with the masks. What if you change to:; `kButtonPressMask | kButtonReleaseMask | kPointerMotionMask` ?; thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7272#issuecomment-784237454:60,mask,masks,60,https://root.cern,https://github.com/root-project/root/pull/7272#issuecomment-784237454,1,['mask'],['masks']
Availability,"Oh, I was not on my mind that I introduced this new dependecy on `gtest`! I have to discuss with the other ROOT core team members if we really want this. But I think nowadays, `gtest` is available basically everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16612#issuecomment-2396288139:187,avail,available,187,https://root.cern,https://github.com/root-project/root/issues/16612#issuecomment-2396288139,1,['avail'],['available']
Availability,"Oh, and the Windows 10 failures seem unrelated to this PR, right @bellenot? In any case, this PR should *not* be merged before we see any green Windows build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13993#issuecomment-1788545523:23,failure,failures,23,https://root.cern,https://github.com/root-project/root/pull/13993#issuecomment-1788545523,1,['failure'],['failures']
Availability,"Oh, and the order. If you call `add42(1)` after the `Declare()`, then there is no error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12277#issuecomment-1424647611:82,error,error,82,https://root.cern,https://github.com/root-project/root/issues/12277#issuecomment-1424647611,1,['error'],['error']
Availability,"Ok fine we leave it open. . BTW I am not sure tu understand _""Ideally it should be included into other documentation package (the lesser files to download, the better).""_... What do you mean by ""other documentation package"" ????",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7421#issuecomment-823824168:146,down,download,146,https://root.cern,https://github.com/root-project/root/issues/7421#issuecomment-823824168,1,['down'],['download']
Availability,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member; 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning; 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp; #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {; TestMember data_;; };. class Test3 {; TestMember *data_ = nullptr;; };. void testio() {. Test tb;; Test t;; Test2 t2;; Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");; fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");; fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");; fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }; ```. ```; root -l testio.cpp ; root [0] ; Processing testio.cpp...; Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved; Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9371#issuecomment-997489052:282,Error,Error,282,https://root.cern,https://github.com/root-project/root/issues/9371#issuecomment-997489052,3,"['Error', 'error']","['Error', 'error']"
Availability,Ok now it compiles but we get the following error in the new test; ```cpp; input_line_49:1:21: error: unknown type name 'ROOT_7459'; int ROOT_7459 = 42; ROOT_7459++;; ^; input_line_49:1:30: error: expected unqualified-id; int ROOT_7459 = 42; ROOT_7459++;; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14358#issuecomment-1894008821:44,error,error,44,https://root.cern,https://github.com/root-project/root/pull/14358#issuecomment-1894008821,3,['error'],['error']
Availability,"Ok so the errors are due to the fact that keeping the `graph_prune` part in the `get_callable` function we're making sure to prune the unneeded DistRDF node *on the client* so that when we're in the distributed workers we don't need to repeat the graph pruning everytime. Plus the unserialized nodes in the workers are missing some attribute needed for the pruning. Overall, I'd prefer to keep the pruning on the client",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9153#issuecomment-949414839:10,error,errors,10,https://root.cern,https://github.com/root-project/root/pull/9153#issuecomment-949414839,1,['error'],['errors']
Availability,"Ok so there are few different issues here. Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is; 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```; 2) If no template is successfully instantiated then print the stored warnings and errors for each case; 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*; ```gdb; Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so; (gdb) bt; #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (); from /home/b/bendavid/rootdev28/install/lib/libCling.so; #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so; #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::Decl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11854#issuecomment-1455272493:90,error,error,90,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1455272493,3,['error'],"['error', 'errors']"
Availability,"Ok so we do import every time. What is strange is that we don't hit this always, we should see the error every time e.g. there is no Spark on the worker side. Another option would be to keep the imports at module level as they are now, but make the import of the backend modules lazy?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9972#issuecomment-1050728712:99,error,error,99,https://root.cern,https://github.com/root-project/root/pull/9972#issuecomment-1050728712,1,['error'],['error']
Availability,"Ok, I am surprised I do not see such failures in the ROOT nightlies ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15735#issuecomment-2162366014:37,failure,failures,37,https://root.cern,https://github.com/root-project/root/pull/15735#issuecomment-2162366014,1,['failure'],['failures']
Availability,"Ok, I found the issue why qhelpgenerator is failing, it is due to:. ```; /opt/root_src/documentation/doxygen/mainpage.md:4: warning: found subsubsection command outside of subsection context!; /opt/root_src/documentation/doxygen/mainpage.md:10: warning: found subsubsection command outside of subsection context!; /opt/root_src/documentation/doxygen/mainpage.md:18: warning: found subsubsection command outside of subsection context!; ```. If I change in `mainpage.md` to:; ```; \mainpage %ROOT Reference Documentation. # Introduction; Welcome to %ROOT!. This is the reference manual of the ROOT software tooklit.; You can find in the [reference documentation page](https://root.cern/reference/) pointers to reference manuals for all %ROOT versions. ## Other types of documentation:. - [ROOT Primer](https://root.cern/primer/).; - [ROOT Introductory Course](https://github.com/root-project/training/tree/master/BasicCourse).; - A rich set of %ROOT [tutorials and code examples](https://root.cern/doc/master/group__Tutorials.html) are offered to developers to exercise specific functionality.; - A general [Manual](https://root.cern/manual/) is provided for a more in depth explanation of concepts and functionality available in the %ROOT system.; - A number of topical [User Guides and Manuals](https://root.cern/topical/) for various components of the system. ## Provide your feedback; If you have suggestions about how to improve this documentation, you can let us know:. - With a [PR](https://github.com/root-project/root); - On the [ROOT Forum](https://root-forum.cern.ch); - On [our tracker](https://github.com/root-project/root/issues); ```; then `ROOT.qch` is correctly generated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-910397486:1215,avail,available,1215,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-910397486,1,['avail'],['available']
Availability,"Ok, I talked to René, it seems that what we get is correct. This functionality shows where the objects in a file are, and their occupancy. It makes sense only if you turn on the ""Event Statusbar"" (as said in the doc). Then moving the mouse on the canvas you see where the objects are. According to René, this functionality makes sense only for big files with many objects. I cannot tell whether it can be improved or not. There is no picture reference available. . Edit: I am investigating where the boxes' colors are coming from and also why there are no labels on the axis (it seems there must be some according to the doc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11723#issuecomment-1318401891:452,avail,available,452,https://root.cern,https://github.com/root-project/root/issues/11723#issuecomment-1318401891,1,['avail'],['available']
Availability,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`; For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16552#issuecomment-2384887730:76,error,errors,76,https://root.cern,https://github.com/root-project/root/issues/16552#issuecomment-2384887730,1,['error'],['errors']
Availability,"Ok, I've had a first quick look. This is rather a feature than a bug. During alignment, some bounding boxes and voxels need to be recomputed (see the logic in [TGeoPhysicalNode::Align](https://github.com/root-project/root/blob/7c81a10d9fa965b25f35b0ec709d6095a209ac16/geom/geom/src/TGeoPhysicalNode.cxx#L293#L306)). Since a given volume may be changed by many physical node alignments, their bounding boxes and voxels are only marked to be recomputed, otherwise the operation takes too long for complex cases. This lazy recomputation occurs only when any navigation function is called for the given volume, but not when calling just the getter of the box dimensions. So the behavior runtime should be OK, even if you see that some bounding boxes appear to be zero just after alignment. The recomputation of boxes/voxels can be however triggered manually using the following code:; ```; TIter nextv(gGeoManager->GetListOfVolumes());; TGeoVolume *vol;; while ((vol = (TGeoVolume*)nextv())) {; if (vol->IsAssembly()) vol->GetShape()->ComputeBBox();; auto finder = vol->GetVoxels();; if (finder && finder->NeedRebuild()) {; finder->Voxelize();; vol->FindOverlaps();; }; }; ```; I guess this code could be automatically called inside TGeoManager::RefreshPhysicalNodes() which needs to be called anyway by the user to recover pointer consistency after all alignments are applied. Let me know if this code does the job for you and I'll put it there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12242#issuecomment-1431352951:1312,recover,recover,1312,https://root.cern,https://github.com/root-project/root/issues/12242#issuecomment-1431352951,1,['recover'],['recover']
Availability,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:; * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`.; * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/323#issuecomment-273022008:659,redundant,redundant,659,https://root.cern,https://github.com/root-project/root/pull/323#issuecomment-273022008,1,['redundant'],['redundant']
Availability,"Ok, all platforms seem to be working fine (in particular Windows) - the failure on Ubuntu 20.04 looks unrelated. I will wait for https://github.com/root-project/root/pull/12117 to be approved and merged, then rebase this PR and update the tag referencing the monorepo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12074#issuecomment-1406337043:72,failure,failure,72,https://root.cern,https://github.com/root-project/root/pull/12074#issuecomment-1406337043,1,['failure'],['failure']
Availability,"Ok, applied your suggestions @guitargeek and also those of the DeepCode bot. Am now looking at the Travis results, but clang-tidy fails because it can't find the headers that are installed with the ZeroMQ builtin. I guess that makes sense, since they will only become available after they have been built/installed https://travis-ci.org/github/root-project/root/jobs/774177761. I see that a few other built-ins are built in the CI run. Should I add ZeroMQ to some list to trigger that as well for clang-tidy? Though I don't see any explicit built-ins here: https://github.com/root-project/root/blob/master/.ci/copy_headers.sh#L13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-859505320:268,avail,available,268,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-859505320,1,['avail'],['available']
Availability,"Ok, everything seems fine now.; The two failed builds seem to be related to the error @vgvassilev mentioned.; I will keep watching whether further problems occur.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4698#issuecomment-566615490:80,error,error,80,https://root.cern,https://github.com/root-project/root/pull/4698#issuecomment-566615490,1,['error'],['error']
Availability,"Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case. Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1192957714:158,down,down,158,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1192957714,2,"['down', 'error']","['down', 'error-test-case']"
Availability,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)?. In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9366#issuecomment-1006432767:175,error,errors,175,https://root.cern,https://github.com/root-project/root/issues/9366#issuecomment-1006432767,1,['error'],['errors']
Availability,"Ok, no failures, let me push a test ~~here~~ to roottest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8314#issuecomment-852814723:7,failure,failures,7,https://root.cern,https://github.com/root-project/root/pull/8314#issuecomment-852814723,1,['failure'],['failures']
Availability,"Ok, other than the dataframe tests, which are reported in https://github.com/root-project/root/issues/7366, the other tests have either been fixed, are being worked on (#7942), or the failure was a configuration issue on my machine (JupyROOT). I am closing this issue then, as it's not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-825672249:184,failure,failure,184,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-825672249,1,['failure'],['failure']
Availability,"Ok, problem solved. I removed the faulty GL on my MacBook , cmake again and recomplie. I will now to the same operetion on the SFT mac minis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16523#issuecomment-2376408200:34,fault,faulty,34,https://root.cern,https://github.com/root-project/root/issues/16523#issuecomment-2376408200,1,['fault'],['faulty']
Availability,"Ok, roottest has some failures too. I'll see whether I can fix those too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11941#issuecomment-1361262119:22,failure,failures,22,https://root.cern,https://github.com/root-project/root/pull/11941#issuecomment-1361262119,1,['failure'],['failures']
Availability,"Ok, so to sum up. User requests the following file:. ```; alien://path/AliESDs.FILTER_ESDMUON_WITH_ALIPHYSICS_vAN-20150213.root; ```. This is not an actual file: it contains a special string that tells the dataset stager (`afdsmgrd`: or more precisely, the download script it invokes for each file) to:; - Take the source file `alien://path/AliESDs.root` from AliEn; - Apply filtering of type `ESDMUON`; - Use AliPhysics `vAN-20150213` for that purpose; - Stage a file called `root://path/AliESDs.FILTER_ESDMUON_WITH_ALIPHYSICS_vAN-20150213.root` on your local cluster. (Please correct me if I am wrong.). I remember that some time ago we have agreed on having 34bb2e2b5f addressing the problem: `Query=<string>` was used to append an arbitrary `?<string>` to the generated filename. For instance:. ```; Find;FileName=AliESDs.root;BasePath=/alice/data/2011/LHC11h/000169838/ESDs/pass2_muon;Query=ESDMUON_vAN-20150213; ```. would generate filenames in the form:. ```; proto://path/root_archive.zip?ESDMUON_vAN-20150213#AliESDs.root; ```. **Question:** did this approach work for you (again, see this: 34bb2e2b5f)? If it did not, why? If it is just a matter of typing less awkward strings for an extremely custom use case, then your patch cannot be accepted and I suggest replacing it with some good documentation for the end user :-). As an alternative, you can provide them with a macro that generates the `Query=` part for you, if it is less awkward for them. Ah, I also see that between your patches there is an option to ""stat"" the file if filtered. I can see the point there: stating a file which is not there would trigger a download on a specifically configured xrootd storage. This specific patch cannot be accepted by any means as it goes against a concept we have been trying to establish since a long time: ROOT's dataset manager is about _managing lists of files_. Staging files is a job that must be done elsewhere, for instance by a storage system or by a mechanism interacting with it. T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/63#issuecomment-99362824:257,down,download,257,https://root.cern,https://github.com/root-project/root/pull/63#issuecomment-99362824,1,['down'],['download']
Availability,"Ok, thanks for the explanations. I started to use ROOT near 2005, and I mostly used the User's Guide since then (sometimes consulting Class Reference). I found that there is probably no Manual in pdf (or other format for downloading), which is a pity. I'm not sure whether I shall make a separate improvement issue about that (I already made several ones). I also think that if it's decided that the User's Guide will no longer be used, its .md files should be deleted from active repository (and remain in old versions, if one really needs them). Its links should be removed from the site (and the old site should probably removed as well), and it should be stated that that User's Guide is outdated. Otherwise it would lead to confusion (among those who used the User's Guide) and desynchronization (though most API I see in the manual remains pretty the same).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284#issuecomment-785880634:221,down,downloading,221,https://root.cern,https://github.com/root-project/root/issues/7284#issuecomment-785880634,1,['down'],['downloading']
Availability,"Ok, that's close. @etejedor or @vepadulano are the experts in any case. ROOT itself does the job regarding error messages in case of NaN.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12296#issuecomment-1438633131:107,error,error,107,https://root.cern,https://github.com/root-project/root/issues/12296#issuecomment-1438633131,1,['error'],['error']
Availability,"Ok, the code is broken beyond repair, let's just kill it with fire. I updated the PR to remove the code, the previous failed builds were trying to see if anything behind this define is still serving some purpose.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/794#issuecomment-316989320:30,repair,repair,30,https://root.cern,https://github.com/root-project/root/pull/794#issuecomment-316989320,1,['repair'],['repair']
Availability,"Ok, the errors above are expected, since Davix is outdated in the externals (0.6.2 vs newly required 0.6.4).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1845#issuecomment-380455866:8,error,errors,8,https://root.cern,https://github.com/root-project/root/pull/1845#issuecomment-380455866,1,['error'],['errors']
Availability,"Ok, the warnings are for the obvious modulemap mismatches we have and the errors are due to the yet missing VFS mapping. Can we get this in that I can make the follow up PRs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/930#issuecomment-329452395:74,error,errors,74,https://root.cern,https://github.com/root-project/root/pull/930#issuecomment-329452395,1,['error'],['errors']
Availability,"Ok, then we should not assert failure from in test case. Let's just print out the information for reference.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-286571830:30,failure,failure,30,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-286571830,1,['failure'],['failure']
Availability,"Ok, this seems to reproduce it for me: [pairdict.tar.gz](https://github.com/root-project/root/files/6392968/pairdict.tar.gz). ```; sh make.sh ; root [0] ; Attaching file test.root as _file0...; Warning in <TClass::Init>: no dictionary for class pair<int,MyClass::MyEnum> is available; (TFile *) 0x61800003d880; root [1]; ```. Let me know what I did wrong :D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7960#issuecomment-828547023:274,avail,available,274,https://root.cern,https://github.com/root-project/root/issues/7960#issuecomment-828547023,1,['avail'],['available']
Availability,"Ok, we reached the first milestone: the upgrade builds on all platforms :tada: . The next step is to investigate the failures in ROOT's tests (but please don't look at the last test report from the new CI, it's incomplete because I messed up the paths when uploading the results; it was done properly in https://github.com/root-project/root/pull/13310). We have a couple of failures across all platforms, and the easiest to understand is that LLVM 16 prepends `class` or `struct` less often for C++ class types. Eventually this comes down to (on `master`):; ```; root [0] struct A { A f(); };; root [1] A a; (A &) @0x7f8a3ca38000; root [2] struct A b; (struct A &) @0x7f8a33db2000; ```; whereas LLVM 16 now prints; ```; root [0] struct A { A f(); };; root [1] A a; (A &) @0x7f025c5a6000; root [2] struct A b; (A &) @0x7f025c5a0000; ```. Similarly the following used to output (on `master`):; ```; root [0] struct A { A f(); };; root [1] .Class A; ===========================================================================; struct A; SIZE: 1 FILE: ROOT_prompt_0 LINE: 1; List of member variables: -------------------------------------------------; List of member functions: -------------------------------------------------; filename line:size busy function type and name; (compiled) (NA):(NA) 0 public: struct A f();; ```; while with LLVM 16 we get; ```; (compiled) (NA):(NA) 0 public: A f();; ```; (funnily enough, `struct A { struct A f(); };` still outputs `public: struct A f();` for LLVM 16). This affects a couple of Cling tests and 3 ROOT tests: `roottest-cling-operator-runEqualTest`, `roottest-cling-template-separateDict-make`, and `roottest-cling-template-separateDictNamespace-make`. I propose we just update the expected reference output and be done with it. Is this fine with everyone? @pcanal @vgvassilev . edit: It's also the underlying reason for `roottest-cling-array-runarray1`, even though that test's `array1test_convert.sh` is really questionable to begin with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13273#issuecomment-1649415992:117,failure,failures,117,https://root.cern,https://github.com/root-project/root/pull/13273#issuecomment-1649415992,3,"['down', 'failure']","['down', 'failures']"
Availability,"Ok, 👍 for only running on 3G. Is it possible to cut this down even more by pre-filtering? Review coming soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6107#issuecomment-667110874:57,down,down,57,https://root.cern,https://github.com/root-project/root/pull/6107#issuecomment-667110874,1,['down'],['down']
Availability,"Ok. Fair enough. The 'dead-lock' is a red-herring. It is due to the sig-fault handler attempting to allocate memory (we have a proposal to fix that which is waiting on me to do some cleanups). The 'real' problem is:; ```; #12 malloc_consolidate (av=av@entry=0x7fd4402c9b00 <main_arena>) at malloc.c:4211; #13 0x00007fd43ffa8dca in _int_malloc (av=av@entry=0x7fd4402c9b00 <main_arena>, bytes=bytes@entry=1536) at malloc.c:3488; #14 0x00007fd43ffaaf34 in __GI___libc_malloc (bytes=1536) at malloc.c:2928; #15 0x00007fd440a967a8 in operator new(unsigned long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6; #16 0x00007fd43bfb375a in llvm::DenseMap<clang::Decl const*, clang::CodeGen::Address, llvm::DenseMapInfo<clang::Decl const*>, llvm::detail::DenseMapPair<clang::Decl const*, clang::CodeGen::Address> >::grow(unsigned int) () from /home/eguiraud/ROOT/root_build/lib/libCling.so; #17 0x00007fd43c0c386a in clang::CodeGen::CodeGenFunction::EmitParmDecl(clang::VarDecl const&, clang::CodeGen::CodeGenFunction::ParamValue, unsigned int) () from /home/eguiraud/ROOT/root_build/lib/libCling.so; #18 0x00007fd43c09b812 in clang::CodeGen::CodeGenFunction::EmitFunctionProlog(clang::CodeGen::CGFunctionInfo const&, llvm::Function*, clang::CodeGen::FunctionArgList const&) (); from /home/eguiraud/ROOT/root_build/lib/libCling.so; ```. I.e. a crash (out-of-memory?) during malloc during JIT compilation. I recommend running with valgrind to get some more information. (And/or disabling the ROOT signal handler to see the real issue a little better).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/972#issuecomment-328856964:72,fault,fault,72,https://root.cern,https://github.com/root-project/root/pull/972#issuecomment-328856964,1,['fault'],['fault']
Availability,"Ok. Is that possible to remake the std.pcm?; rm /Users/couet/git/couet-root-bin/lib/std.pcm ; make -C /Users/couet/git/couet-root-bin/ . or similar?. There are similar reports of this error message, I haven't found anything that is close enough.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-693433582:184,error,error,184,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-693433582,1,['error'],['error']
Availability,"Okay looks like there is a general problem with the RDataFrame data sources, so the previous failure also didn't relate to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10746#issuecomment-1157704448:93,failure,failure,93,https://root.cern,https://github.com/root-project/root/pull/10746#issuecomment-1157704448,1,['failure'],['failure']
Availability,"Okay, I just found where I made the mistake: While deleting `interpreter/cling/tools/plugins/clad/clad-prefix/` rebuilds Clad, it does *NOT* rebuild `libCling.so` which includes the statically built plugin (as far as I understand). It's now passing all tests with an incremental build when taking this into consideration. I'll do a clean build over the night and re-think tomorrow morning, but I think the failures were indeed caused by the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7488#issuecomment-825113424:406,failure,failures,406,https://root.cern,https://github.com/root-project/root/pull/7488#issuecomment-825113424,1,['failure'],['failures']
Availability,"Okay, getting closer, it seems.; Debian seems to have some special ideas about running `cmake`, and would use; ```; cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=None -DCMAKE_INSTALL_SYSCONFDIR=/etc -DCMAKE_INSTALL_LOCALSTATEDIR=/var -DCMAKE_EXPORT_NO_PACKAGE_REGISTRY=ON -DCMAKE_FIND_USE_PACKAGE_REGISTRY=OFF -DCMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY=ON ""-GUnix Makefiles"" -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_LIBDIR=lib/x86_64-linux-gnu -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_SYSCONFDIR=/etc/root -Dgnuinstall=ON ..; ```; with the failure above. Running ; ```; cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_SYSCONFDIR=/etc/root -Dgnuinstall=ON ..; ```; (_only_ using the explicit -D options provided to `dh_auto_configure`) makes the build succeed. Time to bisect...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777#issuecomment-1162858397:551,failure,failure,551,https://root.cern,https://github.com/root-project/root/issues/10777#issuecomment-1162858397,1,['failure'],['failure']
Availability,"Okay, here are the dependencies at the moment (and users for the first few); ```; Fit; ParameterSettings.h (Minuit, Minuit2, RooFit, and MathCore). Math; Error.h (Hist) -> Might not be used in Minuit2?; FitMethodFunction.h (MathCore, MathMore, Minuit2); Functor.h (Lots of uses, including tutorial); GenAlgoOptions.h (MathCore, MathMore); IFunction.h; IFunctionfwd.h; IOptions.h; Minimizer.h; MinimizerOptions.h; Util.h; WrappedFunction.h; WrappedParamFunction.h. Math; GenAlgoOptions.cxx; MinimizerOptions.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-369583839:154,Error,Error,154,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-369583839,1,['Error'],['Error']
Availability,"Okay, so it seems to be some setup issue as the `signbit` error was in v6.22. I would recommend to build v6.22 and v6.24 and compare the CMake files in the builddir. It may be that, for some reason, homebrew setup makes rootcling prepend `/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include`. PS: I will put my money on the -[i]sysroot compiler flags ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881#issuecomment-843786174:58,error,error,58,https://root.cern,https://github.com/root-project/root/issues/7881#issuecomment-843786174,1,['error'],['error']
Availability,"Okay, something is weird here: The test now fails down to 6.22, maybe even more since I didn't test 6.20. But differently, here's a backtrace from 6.22:; ```; 2018: #0 0x00007f983e185eca llvm::sys::PrintStackTrace(llvm::raw_ostream&) (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0x2693eca) ; 2018: #1 0x00007f983c03b341 (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0x549341) ; 2018: #2 0x00007f983c03b7af (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0x5497af) ; 2018: #3 0x00007f983c61b3cc clang::ASTReader::PassInterestingDeclsToConsumer() (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0xb293cc) ; 2018: #4 0x00007f983c5f2336 clang::ASTReader::FinishedDeserializing() (.part.2293) ASTReader.cpp:0:0 ; 2018: #5 0x00007f983c6ed089 clang::MultiplexExternalSemaSource::FinishedDeserializing() (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0xbfb089) ; 2018: #6 0x00007f983dcc138f clang::DeclContext::LoadLexicalDeclsFromExternalStorage() const (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0x21cf38f) ; 2018: #7 0x00007f983dcc1445 clang::DeclContext::decls_begin() const (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0x21cf445) ; 2018: #8 0x00007f983be59a41 ROOT::TMetaUtils::CheckIOConstructor(clang::CXXRecordDecl const*, char const*, clang::CXXRecordDecl const*, cling::Interpreter const&) (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0x367a41) ; 2018: #9 0x00007f983bef5821 TClingClassInfo::HasDefaultConstructor(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const (.part.271) TClingClassInfo.cxx:0:0 ; 2018: #10 0x00007f983befb564 TClingClassInfo::New(void*, ROOT::TMetaUtils::TNormalizedCtxt const&) const (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0x409564) ; 2018: #11 0x00007f984223a62f TClass::NewObject(void*, TClass::ENewType) const (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCore.so+0x28562f) ; 2018: #12 0x00",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9543#issuecomment-1010259909:50,down,down,50,https://root.cern,https://github.com/root-project/root/issues/9543#issuecomment-1010259909,1,['down'],['down']
Availability,"Okay, this is mostly a configuration problem from my side: I didn't install the `libssl-dev` package, so ROOT's configuration defaulted to `builtin_openssl` because `ssl` is `ON` but it couldn't find the OpenSSL headers. On Debian Unstable and Testing, this is a serious problem because it means we effectively end up with OpenSSL 1.1.1g (from the builtin, linked statically) *and* OpenSSL 3.0.8 (from the system, linked as a shared library) in *one process*. We are rather lucky that it doesn't blow up harder... @bellenot do you think we should add a check to detect this configuration (`xrootd AND NOT builtin_xrootd AND builtin_openssl`) and emit a hard error? The tricky part is that this can end up being the automatic choice, as I witnessed...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12231#issuecomment-1435932572:658,error,error,658,https://root.cern,https://github.com/root-project/root/issues/12231#issuecomment-1435932572,1,['error'],['error']
Availability,"Okay, very good! Just FYI, the pythonizations are implemented in these ""mirror classes"" that I declared here:; https://github.com/root-project/root/tree/21fbd344e60a849622991a92d3230681e257c3b9/bindings/pyroot/pythonizations/python/ROOT/pythonization/_roofit. Every function that is defined in a mirror class is then bound to the actual RooFit class, with the original cppyy function name changed to have an underscore prefix. I have already a PR open with some more pythonizations of RooAbsCollection: https://github.com/root-project/root/pull/8179. I can just add one more commit with the element access. But in general, I'm not working too much on these pythonizations because we will most likely get a Google summer of code student for that project! So if you have any further nice ideas for RooFit pythonizations, feel free to write them down in [this issue](https://github.com/root-project/root/issues/7217) and I will what can be implemented with the student.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8174#issuecomment-842226228:843,down,down,843,https://root.cern,https://github.com/root-project/root/pull/8174#issuecomment-842226228,1,['down'],['down']
Availability,"Okay. I think I found a difference. When comparing libRGL.so the working version links to the system OpenGL, whereas my version compiled from sources links to to the mesa installation from Homebrew. Working:; ```; 	/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib (compatibility version 1.0.0, current version 1.0.0); 	/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib (compatibility version 1.0.0, current version 1.0.0); ```. Error:	; ```; /usr/local/opt/mesa/lib/libGL.1.dylib (compatibility version 4.0.0, current version 4.0.0); 	/usr/local/opt/mesa-glu/lib/libGLU.1.dylib (compatibility version 5.0.0, current version 5.1.0); ```. I will try to deinstall mesa from brew and recompile root to see if this fixes the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16523#issuecomment-2376119029:484,Error,Error,484,https://root.cern,https://github.com/root-project/root/issues/16523#issuecomment-2376119029,1,['Error'],['Error']
Availability,"Okay. So basically, if std::span is available, you want to use the system version, and if it is not available, you want to provide a fallback implementation. Using the inline namespace will mean that the linker will refuse to link if different definitions of span were used. . Your PR fixes any complaints I might have had. . I am looking forward to C++20 support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11968#issuecomment-1370253279:36,avail,available,36,https://root.cern,https://github.com/root-project/root/pull/11968#issuecomment-1370253279,2,['avail'],['available']
Availability,"Olivier, provided PR is only workaround, which can fail - especially if so many objects destroyed before `TRatioPlot` destructor. I recommend in addition use `TObject::RecursiveRemove(TObject *)` functionality; `TRatioPlot` already registered in list of cleanups - see `gROOT->GetListOfCleanups()->Add(this);` in several constructors. ; One need to call it also for default constructor - which used in case of I/O. Then in `TRatioPlot::RecursiveRemove(TObject *)` one can catch all objects which are destroyed with the pad list of primitives. This is more reliable solution. Something like:. ```; void TRatioPlot::RecursiveRemove(TObject *obj) ; {; if (obj == fSharedXAxis) fSharedXAxis = nullptr; else; if (obj == fUpperGXaxis) fUpperGXaxis = nullptr; else ; ...; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5312#issuecomment-610301842:556,reliab,reliable,556,https://root.cern,https://github.com/root-project/root/pull/5312#issuecomment-610301842,1,['reliab'],['reliable']
Availability,"On Ubuntu 18, (Linux Mint), at least for me, sh is redirected to dash. `lrwxrwxrwx 1 root root 4 Sep 23 2018 /bin/sh -> dash`. On dash, neither neither `--help` nor `-V` exist. `man dash` --> https://linux.die.net/man/1/dash. ```; dash:; Installed: 0.5.8-2.10; Candidate: 0.5.8-2.10; Version table:; *** 0.5.8-2.10 500; 500 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages; 100 /var/lib/dpkg/status; ```. I get the same as raistmer if I start dash directly and try to assign `BASH_ARGV`:; ```; $ dash; $ SOURCE=${BASH_ARGV[0]}; dash: 1: Bad substitution; ```. Same if I do:; ```; dash /opt/root_bld/bin/thisroot.sh; /opt/root_bld/bin/thisroot.sh: 166: /opt/root_bld/bin/thisroot.sh: Bad substitution; ```; (same result if I use sh instead of dash). I normally use the ""dot"".; `. /opt/root_bld/bin/thisroot.sh` --> This works without problem. `source /opt/root_bld/bin/thisroot.sh` --> This works without problem, too. `zsh /opt/root_bld/bin/thisroot.sh` --> works too. `bash /opt/root_bld/bin/thisroot.sh` --> this one fails with:; ```; /opt/root_bld/bin/thisroot.sh: line 168: ${(%):-%N}: bad substitution; ERROR: must cd where/root/is before calling . bin/thisroot.sh for this version of bash!; /opt/root_bld/bin/thisroot.sh: line 179: return: can only `return' from a function or sourced script; /opt/root_bld/bin/thisroot.sh: line 195: root-config: command not found; ```; Bash version is:; `GNU bash, version 4.4.20(1)-release (x86_64-pc-linux-gnu)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10298#issuecomment-1088356955:1119,ERROR,ERROR,1119,https://root.cern,https://github.com/root-project/root/issues/10298#issuecomment-1088356955,1,['ERROR'],['ERROR']
Availability,"On linux vector with custom allocator do indeed have a different layout that vector with the default allocator, The reason is that std::vector is that case ""starts' with an embedded instance of the allocator ... I am guessing that on MacOS the allocator is at the end instead .... I corrected the behavior of TStreamerInfo to not use the 'vector-shortcut' in the case of vector with custom allocator. This makes is go somewhat slower but at least works correctly. Since all vectors with the same custom allocator have the same layout, we could recover the performance by embedded support for VecOps::TAdoptAllocator directly in TStreamerInfo's actions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1707#issuecomment-371299491:544,recover,recover,544,https://root.cern,https://github.com/root-project/root/pull/1707#issuecomment-371299491,1,['recover'],['recover']
Availability,"On my machine both commands produce a 0-sized module. Eg:; ```bash; rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h; Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap!; du classes.pcm ; 0	classes.pcm; ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash; echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap; rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h ; vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm ; 400K	classes.pcm; ```. If you want to use the selection xml file you could still do it like:; ```bash; rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml ; du classes.pcm ; 404	classes.pcm; ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112; Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9448#issuecomment-997459562:149,Error,Error,149,https://root.cern,https://github.com/root-project/root/issues/9448#issuecomment-997459562,2,"['Error', 'echo']","['Error', 'echo']"
Availability,"On second thought, is it possible to replace this by an explicit check if std::not_fn is available?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3096#issuecomment-446506529:89,avail,available,89,https://root.cern,https://github.com/root-project/root/pull/3096#issuecomment-446506529,1,['avail'],['available']
Availability,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):; ```; {; gROOT->ProcessLine("".L loadcode.C+"");; ...; TTree *t; _file0->GetObject(""t"",t);; }; ```; The use of TTree means that before executing the script libTree is laoded.; During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) .; And in this case the result is:; ```; loadcode_C.so libTree.6.21.01.so libTree.so; ```; which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library?. 2) When should gSystem->Load automatically reload a library, if ever?. @Axel-Naumann @vgvassilev opinions?. PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5420#issuecomment-618042721:30,error,error,30,https://root.cern,https://github.com/root-project/root/pull/5420#issuecomment-618042721,1,['error'],['error']
Availability,"On the one hand I agree with @bluehood, on the other hand I hate writing to stdout or stderr without any logging mechanism ... But I agree that it could fall back to the generic impl and shoot down your MT scenario silently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488#issuecomment-480271507:193,down,down,193,https://root.cern,https://github.com/root-project/root/pull/3488#issuecomment-480271507,1,['down'],['down']
Availability,"On windows:; ```; 11:06:03 MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]; 11:06:03 ParallelTest.cxx; 11:06:03 Creating library C:/build/workspace/root-pullrequests-build/build/core/base/test/Release/CoreBaseTests.lib and object C:/build/workspace/root-pullrequests-build/build/core/base/test/Release/CoreBaseTests.exp; 11:06:03 PaulTest.cxx; 11:06:03 REveTreeTools.cxx; 11:06:03 C:\build\workspace\root-pullrequests-build\build\core\base\test\Release\CoreBaseTests.exe : fatal error LNK1169: one or more multiply defined symbols found [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7132#issuecomment-780824959:55,error,error,55,https://root.cern,https://github.com/root-project/root/pull/7132#issuecomment-780824959,2,['error'],['error']
Availability,"Once #13370 is merged, the only remaining thing to do for this PR would be to disable the windows tests, as it is unclear why windows corrupts the tree name strings as seen in the failed tests:; ```; Error in <TChain::LoadTree>: Cannot find tree with name áÐ-[NON-XML-CHAR-0xF]d╩~ in file C:\build\workspace\root-pullrequests-build\build\tutorials/tmva/RBatchGenerator_filters_vectors_hvector.root; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13302#issuecomment-1665795587:200,Error,Error,200,https://root.cern,https://github.com/root-project/root/pull/13302#issuecomment-1665795587,1,['Error'],['Error']
Availability,One failure of the system in one cell.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/480#issuecomment-292807593:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/480#issuecomment-292807593,1,['failure'],['failure']
Availability,"One just needs to move the places where `unique_ptr` needs to have the definitions (c'tors, d'tor) to where the definition is available. As as you can guess by looking at the *fwd* decl of `task_arena` that was already the case before. Have more trust in us, @krasznaa ! ;-). (Your example is missing the move ctors and dtor: they need to be defined in the source, too.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7062#issuecomment-762858839:126,avail,available,126,https://root.cern,https://github.com/root-project/root/pull/7062#issuecomment-762858839,1,['avail'],['available']
Availability,"One more explicit example, on Ubuntu 18.04 LTS, ; with root-config options w/o -lNew, i.e. ROOTGLIBS = $(shell root-config --glibs) -lNew, the TMapFile did not work but TApplication works fine. ; If with ""-Wl,--no-as-needed -lNew"", the TMapFile works but TApplication fails with segmentation violation. Since TApplicatioin is always available for ROOT, is there any solution to make TApplication work when the option ""-Wl,--no-as-needed -lNew"" is introduced?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1726027722:333,avail,available,333,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1726027722,1,['avail'],['available']
Availability,"One more ping, apologies for this. @greenc-FNAL @vgvassilev could we close the item?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1925610601:9,ping,ping,9,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1925610601,1,['ping'],['ping']
Availability,One more update from forum:. ` 98%] Linking CXX shared library …/…/lib/libRGL.so. ld: library not found for -lGLEW. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libRGL.so] Error 1. make[1]: *** [graf3d/gl/CMakeFiles/RGL.dir/all] Error 2. make: *** [all] Error 2`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5203#issuecomment-603094380:123,error,error,123,https://root.cern,https://github.com/root-project/root/pull/5203#issuecomment-603094380,4,"['Error', 'error']","['Error', 'error']"
Availability,"One of the features of these exports is that they are supposed to be humanly readable, in contrast with binary formats. Don't ask me why, but there are people looking in the GDML after discovering some geometry error...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1901#issuecomment-383467936:211,error,error,211,https://root.cern,https://github.com/root-project/root/pull/1901#issuecomment-383467936,1,['error'],['error']
Availability,"One thing that needs to be addressed is that `ROOT::Double_v` is simply `double` when VecCore is disabled, so the way you are implementing it, the vectorized functions have the same signature as the scalar ones, therefore you get errors like this:; ```; TMath.cxx:846:37: error: call of overloaded ‘KolmogorovProb(Double_t&)’ is ambiguous; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-400722627:230,error,errors,230,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-400722627,2,['error'],"['error', 'errors']"
Availability,Only 'failure' is the missing Windows nodes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3714#issuecomment-485442082:6,failure,failure,6,https://root.cern,https://github.com/root-project/root/pull/3714#issuecomment-485442082,1,['failure'],['failure']
Availability,"Only a rebase, checking that the failure in `gtest-hist-histdrawv7-test-histhistdrawv7testUnit` is still there for all platforms (it is in my Linux setup). Also there seems to be a new failure in `roottest-root-meta-tuple-exec_configtype_unload-auto`, let's see how many platforms that affects...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1492106592:33,failure,failure,33,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1492106592,2,['failure'],['failure']
Availability,"Only first try to clone failed, but PR was marked as failure in any case...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1617#issuecomment-364956035:53,failure,failure,53,https://root.cern,https://github.com/root-project/root/pull/1617#issuecomment-364956035,1,['failure'],['failure']
Availability,Only ui5/jsroot code is changed - any kind of failures has nothing todo with PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4319#issuecomment-526610947:46,failure,failures,46,https://root.cern,https://github.com/root-project/root/pull/4319#issuecomment-526610947,1,['failure'],['failures']
Availability,Ops! Thanks you so much! it is totally my fault!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6236#issuecomment-678150277:42,fault,fault,42,https://root.cern,https://github.com/root-project/root/pull/6236#issuecomment-678150277,1,['fault'],['fault']
Availability,"Opts.vcxproj] ; - [2022-09-21T16:15:07.645Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/PointerLikeTypeTraits.h(84,57): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXPrologEpilogPass.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2022-09-21T16:15:10.022Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\PartiallyInlineLibCalls.cpp(186,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-09-21T16:15:10.022Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector(56,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\SelectionDAG.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2022-09-21T16:15:10.022Z] cl : command line error D8027: C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXGenericToNVVM.cpp : fatal error C1001: Internal compiler error. [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2022-09-21T16:15:10.022Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility(211,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\NewGVN.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11407#issuecomment-1253937552:2689,error,error,2689,https://root.cern,https://github.com/root-project/root/pull/11407#issuecomment-1253937552,1,['error'],['error']
Availability,Or maybe the Error caused some visible difference in the output file?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4964#issuecomment-585259464:13,Error,Error,13,https://root.cern,https://github.com/root-project/root/pull/4964#issuecomment-585259464,1,['Error'],['Error']
Availability,"Originally, I used https://github.com/GooFit/Minuit2 - that uses a python script to re-copy the changed files from the ROOT sources. Being a git repository, it also easily is included as a submodule in the `/extern` folder for GooFit, for example. After meeting and talking with @lmoneta a couple of days ago over a coffee, he outlined the procedure I initially implemented. He showed me the old ""build"" directory, with an old bash script that copied the necessary files out. He wanted me to make a new folder to eventually replace his build folder. The idea is that you could create source distributions that would be packaged and made available as downloads to continue the outdated ones available here: http://project-mathlibs.web.cern.ch/project-mathlibs/minuit/release/download.html. I added this though `make package_source`, and included `make package` for binary distributions as well. The integrated version does look a bit better, though it is a bit more invasive and not nearly as well separated. I do need to copy to `/inc/Math`, etc, since a source distribution needs to be in the source directory. Everything is copied to `INSTALL_PREFIX/include` when it's installed or packaged for a binary distribution. As for use, a git only solution really is not feasible, unfortunately, with any method that does not include git submodules. The current methods for a user are:. * Install beforehand from one of the downloadable packages, either building a source package or installing a binary package. This is the way some people will get it, but not ideal for a modern package that wants to have minimal dependencies.; * Have CMake download and build the package with `ExternalProject` - probably the best solution for now, still not as nice for something like GooFit that already has all dependencies as git submodules.; * Check out all of ROOT as a submodule, then `add_subdirectory(extern/root/math/minuit2)`. Much more disk space usage that needed, but otherwise also a decent solution. Migh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-369601161:637,avail,available,637,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-369601161,4,"['avail', 'down']","['available', 'download', 'downloads']"
Availability,"Ouch, that's painful! I totally fell for this, totally my fault. I suggested to increase the class number in this PR. Now I will always use this as an example for why magic numbers are dangerous :D. Don't worry about this, @egpbos, I'll make a PR to revert the version number increase myself. I'll also add a comment to all RooFit classes with `ClassDef(..., 0)` so this mistake doesn't happen again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8569#issuecomment-878862510:58,fault,fault,58,https://root.cern,https://github.com/root-project/root/pull/8569#issuecomment-878862510,1,['fault'],['fault']
Availability,"Our PR builds do an automatic rebase onto master. What you see is a (known...) temporary current failure in master. Should be fixed shortly, sorry about that! Please simply ignore the failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5062#issuecomment-591456445:97,failure,failure,97,https://root.cern,https://github.com/root-project/root/pull/5062#issuecomment-591456445,2,['failure'],['failure']
Availability,"Our builds break at; ```; [100%] Generating lib/modules.idx; [snip]; make[6]: *** [lib/modules.idx] Error 139; make[5]: *** [CMakeFiles/modules_idx.dir/all] Error 2; make[4]: *** [all] Error 2; ```; I think this comes from https://github.com/root-project/root/blob/5d69eca85a2be137684807446878f782e4a368eb/CMakeLists.txt#L508-L519 which isn't part of the branch in this PR, but after a rebase to the ROOT master branch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9765#issuecomment-1026900510:100,Error,Error,100,https://root.cern,https://github.com/root-project/root/pull/9765#issuecomment-1026900510,3,['Error'],['Error']
Availability,"Out of curiosity, is the failure on Windows understood (at least to a certain extent)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12818#issuecomment-1547511722:25,failure,failure,25,https://root.cern,https://github.com/root-project/root/pull/12818#issuecomment-1547511722,1,['failure'],['failure']
Availability,"Output of `valgrind` with the original report of just `#include <LoKi/ParticleCuts.h>`, replacing `1519` in the paths with `1529`:; ```; $ VALGRIND_LIB=/cvmfs/lhcb.cern.ch/lib/lcg/releases/valgrind/3.22.0-113bc/x86_64-el9-gcc13-dbg/libexec/valgrind/ valgrind --leak-check=full --suppressions=/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/valgrind-root.supp root.exe -q -e ""#include <LoKi/ParticleCuts.h>""; ==652727== Memcheck, a memory error detector; ==652727== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.; ==652727== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info; ==652727== Command: root.exe -q -e #include\ \<LoKi/ParticleCuts.h\>; ==652727== ; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |; | From heads/master@tags/v6-30-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s); ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so); ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so); ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2166043260:471,error,error,471,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2166043260,1,['error'],['error']
Availability,"Over the years the AST has been very good in terms of printing compileable code. We have contributed number of improvements for template parameters and we are also now contributing preserving of type sugar. All of this is very important for us but also for clang when issuing diagnostics. > ; > That said, I think that internal consumers of the semantic attribute node will expect the contents to be whatever the raw string literal specifies. e.g., `-ast-print` should print the raw prefix and suffix if the user used one, and for things like `*SomeAnnotateAttr->args_begin()` to be a `StringRef` with the raw literal contents but not the prefix/suffix. That would probably fix a few cases in clang but it may not fix ours in which we create an attribute and pass a StringRef. > ; > > @AaronBallman, after looking some more, the question boils down to: Would it be acceptable if writing an implicitly created annotate attribute (via`AnnotateAttr::CreateImplicit`) contains the raw string literal in the form: `class __attribute__((annotate(R""(3D scaling ""projection"")""))) C;`; > > If that is the case, then @junaire I'd propose to modify the current patch to synthesize the raw string literal if it was marked as ""implicit"".; > ; > I don't think the attribute being implicit or not should control the behavior here; I think the parsed string literal should control it. However, due to adjacent string concatenation, doing this properly may take a bit more work than you'd initially think. I think we'll need to inspect the `StringLiteral` expression object, loop over `tokloc_begin()/tokloc_end()` to get each component of the full string literal expression, call `Lexer::getSpelling()` to get the source of the token at that source location, and see whether the start of the string is a raw string literal. . That won't work for us as we are synthesizing code and there are no source locations, neither a StringLiteral. We create an implicit attribute out of thin air. > All this mess would get call",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10830#issuecomment-1169568670:3085,down,down,3085,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1169568670,1,['down'],['down']
Availability,"P.S. @olifre Note that there are still some potential issues without my changes:; ```; root [1] TBrowser b; (TBrowser &) Name: Browser Title: ROOT Object Browser; root [2] Error in <TTreeFormula::DefinedVariable>: operator is not a datamember of ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >; Error in <TTreeFormula::Compile>: Bad numerical expression : ""tracks.operator""; Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {tracks.operator-().operator+().Py(),}; Error in <TTreeFormula::DefinedVariable>: operator is not a datamember of ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >; Error in <TTreeFormula::Compile>: Bad numerical expression : ""tracks.operator""; Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {tracks.operator-().Vect().unit().unit().Rho(),}; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13284#issuecomment-1642707327:172,Error,Error,172,https://root.cern,https://github.com/root-project/root/pull/13284#issuecomment-1642707327,4,['Error'],['Error']
Availability,"PFloat.h(1080,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_1d7fb132sy': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseOpenMP.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\clangParse.vcxproj] ; - [2020-08-13T07:46:33.095Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/CodeGen/MachineBasicBlock.h(184,53): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_380540aasy': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXRegisterInfo.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2020-08-13T07:46:33.095Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm(438,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_c2be8b0bsy': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\PrologEpilogInserter.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2020-08-13T07:46:33.095Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(4182,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_cc82f55bex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Rewrite\HTMLRewrite.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Rewrite\clangRewrite.vcxproj] . And 52 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6175#issuecomment-673320756:4957,error,error,4957,https://root.cern,https://github.com/root-project/root/pull/6175#issuecomment-673320756,2,['error'],['error']
Availability,"PInt.h(107,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_91ad5f6adb': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\TextNodeDumper.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-02-25T09:32:12.898Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits(2206,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_5c5fd103ex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXProxyRegErasure.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2022-02-25T09:32:12.898Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory(1633,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_7bf7d7e9ex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseAST.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2022-02-25T09:32:12.898Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/DenseMap.h(652,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_9199cd81ex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Lex\TokenConcatenation.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Lex\obj.clangLex.vcxproj] . And 38 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9984#issuecomment-1050689315:4589,error,error,4589,https://root.cern,https://github.com/root-project/root/pull/9984#issuecomment-1050689315,2,['error'],['error']
Availability,PR and description updated addressing also the diagnostic capture and printing. I'm still not totally sure about how the catching of errors and rollback of the transaction is handled in LookupHelper as said in the description.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449#issuecomment-1479781349:133,error,errors,133,https://root.cern,https://github.com/root-project/root/pull/12449#issuecomment-1479781349,2,"['error', 'rollback']","['errors', 'rollback']"
Availability,"PR builds without errors or warnings, nice!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2309#issuecomment-405222982:18,error,errors,18,https://root.cern,https://github.com/root-project/root/pull/2309#issuecomment-405222982,1,['error'],['errors']
Availability,"PR fixes broken Travis, since vecgeom is not tested in CI, all failure should be unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5509#issuecomment-621728604:63,failure,failure,63,https://root.cern,https://github.com/root-project/root/pull/5509#issuecomment-621728604,1,['failure'],['failure']
Availability,"PR-5324-mac1014-python3&date=2020-08-20).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93446/console).; ### Errors:; - [2020-08-20T17:26:40.736Z] FAILED: roofit/hs3/CMakeFiles/HS3.dir/src/RYMLParser.cxx.o ; - [2020-08-20T17:26:41.322Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/hs3/src/RYMLParser.cxx:5:10: fatal error: 'ryml.hpp' file not found ; - [2020-08-20T17:26:41.322Z] FAILED: roofit/hs3/CMakeFiles/HS3.dir/src/JSONFactories_RooFitCore.cxx.o ; - [2020-08-20T17:26:41.900Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_RooFitCore.cxx:127:41: error: member reference type 'const std::__1::pair&lt;const std::__1::basic_string&lt;char&gt;, int&gt;' is not a pointer; did you mean to use '.'? ; - [2020-08-20T17:26:41.900Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_RooFitCore.cxx:127:43: error: no member named 'GetName' in 'std::__1::pair&lt;const std::__1::basic_string&lt;char&gt;, int&gt;' ; - [2020-08-20T17:26:41.900Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_RooFitCore.cxx:129:32: error: member reference type 'const std::__1::pair&lt;const std::__1::basic_string&lt;char&gt;, int&gt;' is not a pointer; did you mean to use '.'? ; - [2020-08-20T17:26:41.900Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_RooFitCore.cxx:129:34: error: no member named 'GetName' in 'std::__1::pair&lt;const std::__1::basic_string&lt;char&gt;, int&gt;' . ### Warnings:; - [2020-08-20T17:26:41.900Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/hs3/src/HistFactoryJSONTool.cxx:171:64: warning: unused parameter 'os' [-Wunused-parameter] ; - [2020-08-20T17:26:42.730Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONParser.cxx:61:27: warning: 'get' overrides a member function but is not marked 'override' [-Winconsistent-missing-override]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5324#issuecomment-677797697:1175,error,error,1175,https://root.cern,https://github.com/root-project/root/pull/5324#issuecomment-677797697,1,['error'],['error']
Availability,"PS: Speaking of this code, it seems very odd to me that in the case of `delgam < 0`, the `DavidonErrorUpdator` still tries to use the given input to update the Hesse matrix. That just seems like an obvious situation in which the error estimation is definitely not working and sure enough, directly after `delgam < 0`, I am used to getting `non-positive diagonal element in covariance matrix`-type warnings.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11652#issuecomment-1299555531:229,error,error,229,https://root.cern,https://github.com/root-project/root/pull/11652#issuecomment-1299555531,1,['error'],['error']
Availability,"PS: The underlying problem may be that both a const and non-const access to the reference should be available. I haven't looked into this particular problem as much as you have, I'm just warning you about the things that seem problematic to me with the current approach.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1677#issuecomment-384983455:100,avail,available,100,https://root.cern,https://github.com/root-project/root/pull/1677#issuecomment-384983455,1,['avail'],['available']
Availability,"PTXPrologEpilogPass.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2022-09-21T16:15:10.022Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\PartiallyInlineLibCalls.cpp(186,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-09-21T16:15:10.022Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector(56,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\SelectionDAG.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2022-09-21T16:15:10.022Z] cl : command line error D8027: C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXGenericToNVVM.cpp : fatal error C1001: Internal compiler error. [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2022-09-21T16:15:10.022Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility(211,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\NewGVN.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-09-21T16:15:10.022Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/InitializePasses.h(162,54): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\APValue.cpp) [C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11407#issuecomment-1253937552:3038,error,error,3038,https://root.cern,https://github.com/root-project/root/pull/11407#issuecomment-1253937552,1,['error'],['error']
Availability,"Parser_rdict.pcm, ../../lib/libXMLParser.rootmap, ../../lib/XMLParser.pcm ; - Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TQObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TString.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TXMLParser.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TString.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module root_std_complex.h resolved but not visible![5558/8175] Generating G__Net.cxx, ../../lib/libNet_rdict.pcm, ../../lib/libNet.rootmap, ../../lib/Net.pcm ; - Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module Rtypes.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module Rtypes.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module RRemoteProtocol.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TApplication.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TMD5.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TUrl.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TBufferFile.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module MessageTypes.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TBits.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TSysEvtHandler.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347255787:3471,Error,Error,3471,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347255787,1,['Error'],['Error']
Availability,"Partial revert: https://github.com/root-project/root/pull/12516. This PR causes errors, see https://github.com/root-project/cling/commit/782cc41a6c3c48c697cf4ae43c44d18ddaa46aa9#commitcomment-105357940",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12295#issuecomment-1477751751:80,error,errors,80,https://root.cern,https://github.com/root-project/root/pull/12295#issuecomment-1477751751,1,['error'],['errors']
Availability,Passes all the tests. Ping.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11704#issuecomment-1347568526:22,Ping,Ping,22,https://root.cern,https://github.com/root-project/root/pull/11704#issuecomment-1347568526,1,['Ping'],['Ping']
Availability,"Passes.vcxproj] ; - [2022-09-13T07:52:15.959Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/Basic/OpenMPKinds.def(303,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Analysis\ConstructionContext.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Analysis\obj.clangAnalysis.vcxproj] ; - [2022-09-13T07:52:15.959Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\RegAllocPBQP.cpp(943,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-09-13T07:52:15.959Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/PointerUnion.h(205,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\RenameIndependentSubregs.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-09-13T07:52:15.959Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/ArrayRef.h(137,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\RegisterUsageInfo.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-09-13T07:52:15.959Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility(3986,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SafeStackColoring.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11350#issuecomment-1245043134:3327,error,error,3327,https://root.cern,https://github.com/root-project/root/pull/11350#issuecomment-1245043134,1,['error'],['error']
Availability,Passing tests; * [ubu22](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/184277/testReport/projectroot.tmva.pymva/test/gtest_tmva_pymva_test_TestRModelParserPyTorch/); * [ubu20](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/184278/testReport/projectroot.tmva.pymva/test/gtest_tmva_pymva_test_TestRModelParserPyTorch/). This should fix the visible errors in the Jenkins builds,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13613#issuecomment-1708257157:399,error,errors,399,https://root.cern,https://github.com/root-project/root/pull/13613#issuecomment-1708257157,1,['error'],['errors']
Availability,Patch removed; failure remains. Could you provide details of the ROOT source and build configuration you used in the Docker environment to test the `export std_config` removal?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1398624677:15,failure,failure,15,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1398624677,1,['failure'],['failure']
Availability,"Patch to handle template instantiation error recovery:; The current class SavePendingInstantiationsRAII ([L8109 -L8125](https://github.com/root-project/root/blob/a402af862ace9573193500bcccaa8b4d56cc6632/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h#L8109)) in clang/Sema.h which is called from cling/InterpreterParser.cpp [L920](https://github.com/root-project/root/blob/a402af862ace9573193500bcccaa8b4d56cc6632/interpreter/cling/lib/Interpreter/IncrementalParser.cpp#L920) can be replaced with the following patch in Sema.h; ```class PerformPendingInstantiationsRAII {; Sema &S;; public:; PerformPendingInstantiationsRAII(Sema &S): S(S) {} ;. ~PerformPendingInstantiationsRAII() {; S.PerformPendingInstantiations();; assert(S.PendingInstantiations.empty() &&; ""there shouldn't be any pending instantiations"");; }; };; ```; ; Change in InterpreterParser.cpp L902:; ```Sema::PerformPendingInstantiationsRAII PerformPendingInstantiations(S);```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1145689988:39,error,error,39,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145689988,2,"['error', 'recover']","['error', 'recovery']"
Availability,"Pdf.h RooRealVar.h RooRealVarSharedProperties.h RooRecursiveFraction.h RooRefCountList.h RooSTLRefCountList.h RooResolutionModel.h RooScaledFunc.h RooSecondMoment.h RooSegmentedIntegrator1D.h RooSegmentedIntegrator2D.h RooSentinel.h RooSetPair.h RooSetProxy.h RooSharedProperties.h RooSharedPropertiesList.h RooSimGenContext.h RooSimPdfBuilder.h RooSimSplitGenContext.h RooSimultaneous.h RooSimWSTool.h RooStreamParser.h RooStringVar.h RooStudyManager.h RooStudyPackage.h RooSuperCategory.h RooTable.h RooTFoamBinding.h RooThresholdCategory.h RooTObjWrap.h RooTrace.h RooTreeData.h RooTreeDataStore.h RooTruthModel.h RooUniformBinning.h RooUnitTest.h RooVectorDataStore.h RooWorkspace.h RooWorkspaceHandle.h RooXYChi2Var.h RooHelpers.h RooSpan.h BatchData.h RooVDTHeaders.h /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/LinkDef.h ; - /mnt/build/workspace/root-pullrequests-build/build/include/RooVDTHeaders.h:40:15: error: no member named 'exp' in namespace 'std' ; - /mnt/build/workspace/root-pullrequests-build/build/include/RooVDTHeaders.h:44:15: error: no member named 'exp' in namespace 'std' ; - Error: /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/workspace/root-pullrequests-build/build/lib/libRooFitCoreb2d9d7abc8_dictUmbrella.h) . ### Warnings:; - CMake Warning at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:864 (message): ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:39:47: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:40:61: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4283#issuecomment-527491490:8280,error,error,8280,https://root.cern,https://github.com/root-project/root/pull/4283#issuecomment-527491490,1,['error'],['error']
Availability,"Per https://github.com/root-project/root/pull/2917#issuecomment-441813991 (and further), the 4 sets of failures are pre-existing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3046#issuecomment-441873583:103,failure,failures,103,https://root.cern,https://github.com/root-project/root/pull/3046#issuecomment-441873583,1,['failure'],['failures']
Availability,"Performance-wise and functionality-wise would still work if for the duration of the trials, the state needed to do the matching is kept alive. That was mostly the idea with the code above, but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-696817778:136,alive,alive,136,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-696817778,1,['alive'],['alive']
Availability,"Perhaps even an `Error` would be appropriate instead of a `Warn`. The code still works, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6762#issuecomment-739035566:17,Error,Error,17,https://root.cern,https://github.com/root-project/root/pull/6762#issuecomment-739035566,1,['Error'],['Error']
Availability,Perhaps it would be possible to throw up an error or warning when this type of issue is encountered? as it took me an embarrassingly long time to find the source of the segfault!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10965#issuecomment-1187635456:44,error,error,44,https://root.cern,https://github.com/root-project/root/issues/10965#issuecomment-1187635456,1,['error'],['error']
Availability,"Philippe,. I am not sure if I understand ""fallback"" correctly. But I tried two different experiments and get more solid analysis:; 1. I run ""TString::ReadFile(std::istream& strm)"" function in Stringio.cxx and parse a file (ifstream) as a input, it works fine. If I parse std::cin as input, it has the same problem as ROOT-7588 described. The reason is because in the function it uses ""strm.tellg()"" to manipulate the std::cin, which always return -1 and set failure flag.; 2. I run ""TString::ReadLine(std::istream& strm, Bool_t skipWhite)"" and ""TString::ReadString(std::istream& strm)"" in Stringio.cxx. I re-run the same kind of experiments as ROOT-7588. It works fine. These functions internally call ReadToDelim() which reserves memory for TString and read std::cin into TString memory buffer. I think this implementation is a smoother way rather than creating a temporary sstream to buffer std::cin. Anyway, I think we can either create a sstream to hold std::cin or find a new way to reserve a memory buffer for std::cin. . Does this answer the question of fallback you mentioned?. Regards,. Zhe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/84#issuecomment-166164032:458,failure,failure,458,https://root.cern,https://github.com/root-project/root/pull/84#issuecomment-166164032,1,['failure'],['failure']
Availability,"Phillipe just pushed last evening his read/write lock updates, so I'm going to rebase and push. However, I still see the crash after his changes when compiling and running the code below. ```cpp; #include <iostream>; #include <string>; #include <thread>; #include <vector>; #include ""TH1F.h""; #include ""TMemFile.h""; #include ""TROOT.h"". void test(int i); {; std::string name = ""test-"" + std::to_string(i);; TMemFile f(name.c_str(), ""create"");; TH1F h(""a"",""a"",60,0,10);; h.FillRandom(""gaus"");; f.Write();; }. int main(); {; auto nthreads = 100;; ROOT::EnableThreadSafety();; std::vector<std::thread> threads;. for (auto i = 0; i < nthreads; ++i); threads.emplace_back(test, i);. for (auto& thread : threads); thread.join();. return 0;; }; ```. I compile and run with; ```bash; $ g++ $(root-config --cflags --libs) test.cc; $ while [[ $? == 0 ]]; do echo -n .; ./a.out; done; ```. Note that the TMemFiles have different names and are created and destroyed in the same thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/719#issuecomment-312199140:847,echo,echo,847,https://root.cern,https://github.com/root-project/root/pull/719#issuecomment-312199140,1,['echo'],['echo']
Availability,Ping,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9310#issuecomment-1058093713:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/issues/9310#issuecomment-1058093713,1,['Ping'],['Ping']
Availability,Ping - problem is still there.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11190#issuecomment-1424415631:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/issues/11190#issuecomment-1424415631,1,['Ping'],['Ping']
Availability,Ping :) it would be nice to fix this for v6.26,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108#issuecomment-995975448:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/issues/7108#issuecomment-995975448,1,['Ping'],['Ping']
Availability,"Ping @Axel-Naumann - XrootD now have [musl c library support](https://github.com/xrootd/xrootd/pull/1908) support that may solve this issue, making it more feasible that Root may be buildable also on Alpine Linux.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9173#issuecomment-1435500562:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/issues/9173#issuecomment-1435500562,1,['Ping'],['Ping']
Availability,"Ping @Axel-Naumann. Clearly I have nothing to do with these test failures, so what should I do next?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4688#issuecomment-565079915:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/4688#issuecomment-565079915,2,"['Ping', 'failure']","['Ping', 'failures']"
Availability,Ping @Teemperor @vgvassilev,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1354#issuecomment-366981901:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/1354#issuecomment-366981901,1,['Ping'],['Ping']
Availability,Ping @lmoneta,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3061#issuecomment-443162125:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/3061#issuecomment-443162125,1,['Ping'],['Ping']
Availability,Ping @lmoneta ? :-),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2132#issuecomment-396060390:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/2132#issuecomment-396060390,2,['Ping'],['Ping']
Availability,Ping @lmoneta. Any reason not to merge this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3493#issuecomment-479960789:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/3493#issuecomment-479960789,1,['Ping'],['Ping']
Availability,Ping @lmoneta. Updated according to our discussion.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/705#issuecomment-316728953:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/705#issuecomment-316728953,1,['Ping'],['Ping']
Availability,Ping what? I reviewed 8 days ago.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/767#issuecomment-318620270:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/767#issuecomment-318620270,1,['Ping'],['Ping']
Availability,Ping.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/606#issuecomment-330846690:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/606#issuecomment-330846690,3,['Ping'],['Ping']
Availability,"Ping. Fedora 32 is released now, which uses gcc 10. So this needs to be fixed now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5159#issuecomment-625721628:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/5159#issuecomment-625721628,1,['Ping'],['Ping']
Availability,Ping. What's the fate of this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11096#issuecomment-1407684426:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1407684426,1,['Ping'],['Ping']
Availability,Ping... Shall we close that one?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1007#issuecomment-342619382:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/1007#issuecomment-342619382,1,['Ping'],['Ping']
Availability,Ping...?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6609#issuecomment-725975118:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/6609#issuecomment-725975118,1,['Ping'],['Ping']
Availability,Ping?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3434#issuecomment-480750686:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/3434#issuecomment-480750686,1,['Ping'],['Ping']
Availability,"Pinging @amadio in case this is specific to the early packaging of 6.30.00 on Gentoo (but I believe it is not, without looking to deeply, though).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14068#issuecomment-1814941966:0,Ping,Pinging,0,https://root.cern,https://github.com/root-project/root/issues/14068#issuecomment-1814941966,1,['Ping'],['Pinging']
Availability,Pinging because I think 6.30 is coming and it would be nice to have this change in the API,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13642#issuecomment-1744899783:0,Ping,Pinging,0,https://root.cern,https://github.com/root-project/root/pull/13642#issuecomment-1744899783,1,['Ping'],['Pinging']
Availability,Pinging other interested parties @aalkin @jgrosseo @pzhristov.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11853#issuecomment-1341780754:0,Ping,Pinging,0,https://root.cern,https://github.com/root-project/root/issues/11853#issuecomment-1341780754,1,['Ping'],['Pinging']
Availability,Please always add comment explaining why it's alright to ignore the build error (usually because it was checked they pre-existing) and/or merging before the PR builds are finished (you probably need to note explicit which platform worked and which one are still pending). Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3709#issuecomment-484268660:74,error,error,74,https://root.cern,https://github.com/root-project/root/pull/3709#issuecomment-484268660,1,['error'],['error']
Availability,"Please note that I don't touch any existing code, just add some scripts which are independent from the rest, so the CI failures are not related to my changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14999#issuecomment-2003990426:119,failure,failures,119,https://root.cern,https://github.com/root-project/root/pull/14999#issuecomment-2003990426,1,['failure'],['failures']
Availability,"Please rebase your commits on top of master, rather than having merge commits. (This will also improve the check failures.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13066#issuecomment-1665396333:113,failure,failures,113,https://root.cern,https://github.com/root-project/root/pull/13066#issuecomment-1665396333,1,['failure'],['failures']
Availability,"Please see a proof of what I say :. minimum program : minimal.C. ```; #include <RooCategory.h>. int minimal(); {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13; cat.defineType(mystring,1);. //next line is line 16; cat.defineType(mystring.c_str(),1);. return 0;; }; ```; Then just do :; ```; [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+; ------------------------------------------------------------; | Welcome to ROOT 6.18/00 https://root.cern |; | (c) 1995-2019, The ROOT Team |; | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |; | From tag v6-18-00, 25 June 2019 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------. root [0]; Processing minimal.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so; In file included from input_line_12:6:; ././minimal.C:13:5: error: no matching member function for call to 'defineType'; cat.defineType(mystring,1);; ~~~~^~~~~~~~~~; /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument; Bool_t defineType(const char* label, Int_t index) ;; ^; /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided; Bool_t defineType(const char* label) ;; ^; Error in <ACLiC>: Dictionary generation failed!. -->so the correct type is not a string : it is a char *.; (indeed the compilation complains for line 13, but not for line 16); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6625#issuecomment-708453687:1068,error,error,1068,https://root.cern,https://github.com/root-project/root/issues/6625#issuecomment-708453687,2,"['Error', 'error']","['Error', 'error']"
Availability,"PlotWrapper*&gt;::mapped_type {aka EfficiencyPlotWrapper*}’ to ‘TMVA::EfficiencyPlotWrapper*’ in initialization ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:239:54: error: ‘void TMVA::efficienciesMulticlass1vsRest(TString, TString, TMVA::EEfficiencyPlotType, Bool_t)’ should have been declared inside ‘TMVA’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:243:71: error: ‘plotEfficienciesMulticlass1vsRest’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:254:115: error: ‘void TMVA::plotEfficienciesMulticlass1vsRest(TString, TMVA::EEfficiencyPlotType, TString)’ should have been declared inside ‘TMVA’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:279:100: error: no matching function for call to ‘TMVA::EfficiencyPlotWrapper::EfficiencyPlotWrapper(TString&, TString&, TString&, size_t)’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:298:67: error: ‘void TMVA::efficienciesMulticlass1vs1(TString, TString)’ should have been declared inside ‘TMVA’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:332:94: error: ‘void TMVA::plotEfficienciesMulticlass1vs1(TString, TString, TString)’ should have been declared inside ‘TMVA’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:353:100: error: no matching function for call to ‘TMVA::EfficiencyPlotWrapper::EfficiencyPlotWrapper(TString&, TString&, TString&, size_t)’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:365:75: error: cannot convert ‘std::map&lt;TString, EfficiencyPlotWrapper*&gt;::mapped_type {aka EfficiencyPlotWrapper*}’ to ‘TMVA::EfficiencyPlotWrapper*’ in initialization ; - /usr/include/c++/4.8/bits/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/707#issuecomment-311796846:1194,error,error,1194,https://root.cern,https://github.com/root-project/root/pull/707#issuecomment-311796846,1,['error'],['error']
Availability,"PoissonLogL.cxx:70:8: error: template-id ‘Eval&lt;&gt;’ for ‘double ROOT::Fit::FitUtil::PoissonLogL&lt;double&gt;::Eval(ROOT::Fit::FitUtil::IModelFunctionTempl&lt;double&gt;&, const ROOT::Fit::BinData&, const double*, int, bool, unsigned int&, ROOT::Fit::ExecutionPolicy, unsigned int)’ does not match any template declaration ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/EvaluatePoissonLogL.cxx:255:8: error: template-id ‘EvalBinPdf&lt;&gt;’ for ‘double ROOT::Fit::FitUtil::PoissonLogL&lt;double&gt;::EvalBinPdf(ROOT::Fit::FitUtil::IModelFunctionTempl&lt;double&gt;&, const ROOT::Fit::BinData&, const double*, unsigned int, double*)’ does not match any template declaration ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/EvaluatePoissonLogL.cxx:361:6: error: template-id ‘EvalGradient&lt;&gt;’ for ‘void ROOT::Fit::FitUtil::PoissonLogL&lt;double&gt;::EvalGradient(ROOT::Fit::FitUtil::IModelFunctionTempl&lt;double&gt;&, const ROOT::Fit::BinData&, const double*, double*, unsigned int&, ROOT::Fit::ExecutionPolicy, unsigned int)’ does not match any template declaration ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/EvaluateChi2.cxx:51:8: error: template-id ‘Eval&lt;&gt;’ for ‘double ROOT::Fit::FitUtil::Chi2&lt;double&gt;::Eval(const IModelFunction&, const ROOT::Fit::BinData&, const double*, unsigned int&, ROOT::Fit::ExecutionPolicy, unsigned int)’ does not match any template declaration ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/EvaluateChi2.cxx:228:8: error: template-id ‘EvalEffective&lt;&gt;’ for ‘double ROOT::Fit::FitUtil::Chi2&lt;double&gt;::EvalEffective(ROOT::Fit::FitUtil::IModelFunctionTempl&lt;double&gt;&, const ROOT::Fit::BinData&, const double*, unsigned int&)’ does not match any template declaration ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/EvaluateChi2.cxx:336:6: error: template-id ‘EvalGradient&lt;&gt;’ for ‘void ROOT::Fit::FitUtil::Chi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2690#issuecomment-424709808:1830,error,error,1830,https://root.cern,https://github.com/root-project/root/pull/2690#issuecomment-424709808,1,['error'],['error']
Availability,"Possible reason for the problem, in Cling (also Clang) some headers are included automatically at startup to simplify the operation. In the case of CUDA, the order of the headers is really important because CUDA has to annotate the `stl` functions to be available on CPU and GPU (e.g. `int std::abs(int n)` -> `__device__ __host__ std::abs(int n))`. If the order is not correct, various things can happen (no GPU version available, redefinition errors, error messages that have nothing to do with the actual problem ...). A good starting point for bug hunting is to compare the startup process of vanilla cling and ROOT cling.; * A good starting point for Cling the is the function [`CIFactory::createCIImpl()`](https://github.com/root-project/root/blob/de3514c2a88f653584108d2be64e28f50a2b29da/interpreter/cling/lib/Interpreter/CIFactory.cpp#L1214); * In ROOT, some extra headers are injected (before?) in the [TCling](https://github.com/root-project/root/blob/a56901942dfefa6e7e2e7df397a60c9d1cda31a0/core/metacling/src/TCling.cxx#L1327) class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518#issuecomment-808738232:254,avail,available,254,https://root.cern,https://github.com/root-project/root/issues/7518#issuecomment-808738232,4,"['avail', 'error']","['available', 'error', 'errors']"
Availability,"Potentially related failure on macbeta: https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/3525/testReport/junit/projectroot.roottest.python/stl/roottest_python_stl_stl/. ```; ../../../../roottest/python/stl/PyROOT_stltests.py .....Fatal Python error: Segmentation fault. Current thread 0x00007ff851579c80 (most recent call first):; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/python.py"", line 1789 in runtest; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/runner.py"", line 167 in pytest_runtest_call; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pluggy/_callers.py"", line 39 in _multicall; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pluggy/_manager.py"", line 80 in _hookexec; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pluggy/_hooks.py"", line 265 in __call__; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/runner.py"", line 260 in <lambda>; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/runner.py"", line 339 in from_call; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/runner.py"", line 259 in call_runtest_hook; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/runner.py"", line 220 in call_and_report; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/runner.py"", line 131 in runtestprotocol; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/runner.py"", line 112 in pytest_runtest_protocol; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pluggy/_callers.py"", line 39 in _multicall; File ""/Library/Frameworks/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12874#issuecomment-1590689514:20,failure,failure,20,https://root.cern,https://github.com/root-project/root/issues/12874#issuecomment-1590689514,3,"['error', 'failure', 'fault']","['error', 'failure', 'fault']"
Availability,Pre-existing errors.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9121#issuecomment-944092070:13,error,errors,13,https://root.cern,https://github.com/root-project/root/pull/9121#issuecomment-944092070,1,['error'],['errors']
Availability,Preexisting failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9085#issuecomment-938525483:12,failure,failures,12,https://root.cern,https://github.com/root-project/root/pull/9085#issuecomment-938525483,1,['failure'],['failures']
Availability,"Pretty sure that failures are unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6072#issuecomment-664383715:17,failure,failures,17,https://root.cern,https://github.com/root-project/root/pull/6072#issuecomment-664383715,1,['failure'],['failures']
Availability,"Previous failures were expected (could not find Davix 0.6.4, because externals has version 0.6.2 only, which fails tests).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1766#issuecomment-374956840:9,failure,failures,9,https://root.cern,https://github.com/root-project/root/pull/1766#issuecomment-374956840,1,['failure'],['failures']
Availability,"Probably the previous ROOT installation was clashing with the new one you downloaded through conda, glad that you can now run the example :+1: Can this issue be closed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676#issuecomment-1142104360:74,down,downloaded,74,https://root.cern,https://github.com/root-project/root/issues/10676#issuecomment-1142104360,1,['down'],['downloaded']
Availability,Probably there are two spurious failures in the CI. LGTM after formatting!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15372#issuecomment-2203620261:32,failure,failures,32,https://root.cern,https://github.com/root-project/root/pull/15372#issuecomment-2203620261,1,['failure'],['failures']
Availability,"Probably, but I'm a bit confused about the error message: Why would Cling output MSVC style error messages?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15321#issuecomment-2082084564:43,error,error,43,https://root.cern,https://github.com/root-project/root/issues/15321#issuecomment-2082084564,2,['error'],['error']
Availability,Problem is not only labels offset itself in the axis. ; It is very small - just 0.005 and therefore labels are very close to axis.; And ROOT adds extra offset to labels that they not touching axis line even when `offset == 0`.; I have to add such extras to web graphic. . But main problem was significant difference in labels size for X axis.; Only now I found that `TGaxis` scale down labels size by factor 0.66666 - for custom labels.; This was not handled by web canvas. ; Once it is there - position and size of X axis labels will be ok.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13719#issuecomment-1737555150:381,down,down,381,https://root.cern,https://github.com/root-project/root/issues/13719#issuecomment-1737555150,1,['down'],['down']
Availability,"Progress (@oshadura ). When doing the request ""does that file exist (and do I need to follow a redirect) in; ```; #0 Davix::NEONRequest::negotiateRequest (this=0x555557146380, err=0x7fffffff90d0); at $ROOTSYS/builtins/davix/DAVIX-prefix/src/DAVIX/src/neon/neonrequest.cpp:425; ```; with; ```; (gdb) p *_req; $42 = {; method = 0x55555822e440 ""HEAD"",; uri = 0x55555822e460 ""/iml-wg/tmvatutorials/master/inputdata.root"",; headers = 0x55555822e420,; ```; v6.22 has:; ```; $44 = {; data = 0x555557bb6180 ""User-Agent: ROOT/6.22/09 TDavixFile/0.2.0 davix/0.7.5 neon/0.0.29\r\nKeep-Alive: \r\nConnection: Keep-Alive\r\nTE: trailers\r\nHost: raw.githubusercontent.com\r\n"",; ```; while v6.24 has:; ```; (gdb) p *_req->headers; $48 = {; data = 0x555556bfa160 ""User-Agent: ROOT/6.24/01 TDavixFile/0.2.0 davix/0.7.5 neon/0.0.29\r\nKeep-Alive: \r\nConnection: Keep-Alive\r\nTE: trailers\r\nHost: raw.githubusercontent.com\r\nAuthorization: Bearer \r\n"",; ```; I.e. adding `Authorization: Bearer` seems to break this. I can reproduce this with. ```; curl -v -H 'Authorization: Bearer' https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; ```; giving 404, while not passing `-H` makes the redirect work. That's it from my side, more news from @oshadura after vCHEP!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8155#issuecomment-843327087:574,Alive,Alive,574,https://root.cern,https://github.com/root-project/root/issues/8155#issuecomment-843327087,4,['Alive'],['Alive']
Availability,"Protecting all interpreter call with another guard results rather reliably in a deadlock, remove the respective commit again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6266#issuecomment-685361255:66,reliab,reliably,66,https://root.cern,https://github.com/root-project/root/pull/6266#issuecomment-685361255,1,['reliab'],['reliably']
Availability,"Pull request:\r\n\r\nFixes compilation error with gcc 13.\r\n\r\n## Changes or fixes:\r\n~~~\r\nIn file included from .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.cxx:1: .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:40:24: error: 'uint32_t' does not name a type\r\n 40 | namespace SG { typedef uint32_t sgkey_t; }\r\n | ^~~~~~~~\r\n.../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:6:1: note: 'uint32_t' is defined in header '&lt;cstdint&gt;'; did you forget to '#include &lt;cstdint&gt;'?\r\n 5 | #include &lt;vector&gt;\r\n +++ |+#include &lt;cstdint&gt;\r\n 6 |\r\n.../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:43:4: error: 'uint8_t' does not name a type\r\n 43 | uint8_t m_nbits, m_nmantissa;\r\n | ^~~~~~~\r\n.../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:43:4: note: 'uint8_t' is defined in header '&lt;cstdint&gt;'; did you forget to '#include &lt;cstdint&gt;'?\r\n.../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:45:4: error: 'uint8_t' does not name a type\r\n 45 | uint8_t m_flags;\r\n | ^~~~~~~\r\n.../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:45:4: note: 'uint8_t' is defined in header '&lt;cstdint&gt;'; did you forget to '#include &lt;cstdint&gt;'?\r\n.../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:46:8: error: 'sgkey_t' in namespace 'SG' does not name a type\r\n 46 | SG::sgkey_t m_sgkey = 123;\r\n | ^~~~~~~\r\n.../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:47:10: error: 'uint8_t' does not name a type\r\n 47 | const uint8_t c_uint = 10;\r\n | ^~~~~~~\r\n.../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:47:10: note: 'uint8_t' is defined in header '&lt;cstdint&gt;'; did you forget to '#include &lt;cstdint&gt;'?\r\ngmake[2]: *** [tree/ntuple/v7/test/CMakeFiles/CustomStruct.dir/build.make:79: tree/ntuple/v7/test/CMakeFiles/CustomStruct.dir/CustomStruct.cxx.o] Error 1\r\ngmake[2]: Leaving directory '.../root-6.26.10/redhat-linux-build'\r\ngmake[1]: *** [CMakeFiles/Makefile2:53506: tree/ntuple/v7/test/CMakeFiles/Cus",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12065#issuecomment-1397621703:1244,error,error,1244,https://root.cern,https://github.com/root-project/root/pull/12065#issuecomment-1397621703,2,['error'],['error']
Availability,"Putting something like this in TCling and calling it in the TCling ctor should do:; ```cpp; static bool IsSymbolVisibilityHidden() {; static const std::string libClingLocation = FindLibraryName(&IsFromRootCling());; auto ObjF = llvm::object::ObjectFile::createObjectFile(ROOT::TMetaUtils::GetRealPath(libClingLocation));; if (!ObjF) {; Warn(""TCling__IsSymbolVisibilityHidden"",; ""Failed to read object file %s"", libClingLocation.c_str());; return false;; }. llvm::object::ObjectFile *BinObjFile = ObjF.get().getBinary();. for (const auto &S : BinObjFile->symbols()) {; #ifdef NDEBUG; if (S.getFlags() & llvm::object::SymbolRef::SF_Hidden); return true;; else; Error(""TCling__IsSymbolVisibilityHidden"",; ""Symbol %s is exported. Please compile LLVM with -fvisibility=hidden!\n"", S.getName().data() );; return false;; #else // debug; // In debug mode we make sure all symbols are hidden.; if (!(S.getFlags() & llvm::object::SymbolRef::SF_Hidden)) {; Error(""TCling__IsSymbolVisibilityHidden"",; ""Symbol %s is exported. Please compile LLVM with -fvisibility=hidden!\n"", S.getName().data() );; return false;; }; #endif // NDEBUG; }; return true;; }. ```. Needless to say that I did not compile this code. It may need some adjustments... :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4736#issuecomment-572032639:659,Error,Error,659,https://root.cern,https://github.com/root-project/root/pull/4736#issuecomment-572032639,2,['Error'],['Error']
Availability,"Python 3 was 6.22.2, Python 2.7 used 6.22.0. (Python 2.7 isn't supported in conda-forge any more and I rarely make the effort to rebuild the py2k branch.). I've stopped looking now as I think you're in a much better position than me to make sense of what the issue is but ping me if I can be useful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6467#issuecomment-702627726:272,ping,ping,272,https://root.cern,https://github.com/root-project/root/issues/6467#issuecomment-702627726,1,['ping'],['ping']
Availability,Quick question about the examples in the `TSpectrum` documentation. Most of them reference the `spectra/TSpectrum.root` file ([example](https://github.com/root-mirror/root/blob/1eb2c675f464dbd8c85eaef110961f5fb86bf964/hist/spectrum/src/TSpectrum.cxx#L434)). Is this file available somewhere?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/151#issuecomment-248958581:271,avail,available,271,https://root.cern,https://github.com/root-project/root/pull/151#issuecomment-248958581,1,['avail'],['available']
Availability,"R-5643-windows10-cxx14&date=2020-06-04).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85048/console).; ### Errors:; - [2020-06-04T11:49:50.479Z] C:\build\workspace\root-pullrequests-build\root\bindings\pyroot\pythonizations\src\PyROOTStrings.h(16,10): fatal error C1083: Cannot open include file: 'DllImport.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot\pythonizations\ROOTPythonizations3_8.vcxproj] ; - [2020-06-04T11:49:51.481Z] C:\build\workspace\root-pullrequests-build\root\bindings\pyroot\pythonizations\src\PyROOTStrings.cxx(13,10): fatal error C1083: Cannot open include file: 'CPyCppyy.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot\pythonizations\ROOTPythonizations3_8.vcxproj] ; - [2020-06-04T11:49:52.132Z] C:\build\workspace\root-pullrequests-build\root\bindings\pyroot\pythonizations\src\TMemoryRegulator.h(37,10): fatal error C1083: Cannot open include file: 'CPyCppyy.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot\pythonizations\ROOTPythonizations3_8.vcxproj] ; - [2020-06-04T11:49:52.769Z] C:\build\workspace\root-pullrequests-build\root\bindings\pyroot\pythonizations\src\RPyROOTApplication.cxx(14,10): fatal error C1083: Cannot open include file: 'CPyCppyy.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot\pythonizations\ROOTPythonizations3_8.vcxproj] ; - [2020-06-04T11:49:53.122Z] C:\build\workspace\root-pullrequests-build\root\bindings\pyroot\pythonizations\src\GenericPyz.cxx(14,10): fatal error C1083: Cannot open include file: 'CPyCppyy.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot\pythonizations\ROOTPythonizations3_8.vcxproj] ; - [2020-06-04T11:49:53.433Z] C:\build\workspace\root-pullrequests-build\root\bindings\pyroot\pythonizations\src\RVecPyz.cxx(12,10): fatal error C108",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5643#issuecomment-638801289:1192,error,error,1192,https://root.cern,https://github.com/root-project/root/pull/5643#issuecomment-638801289,1,['error'],['error']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:12:58.149Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:12:58.149Z] /usr/include/c++/9/bits/hashtable_policy.h:1822:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:12:58.149Z] /usr/include/c++/9/bits/hashtable_policy.h:1373:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553437110:2326,error,error,2326,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553437110,1,['error'],['error']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/hashtable_policy.h:1824:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/hashtable_policy.h:1379:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553441066:2380,error,error,2380,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553441066,1,['error'],['error']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:15:37.088Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:15:37.088Z] /usr/include/c++/9/bits/hashtable_policy.h:1822:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:15:37.088Z] /usr/include/c++/9/bits/hashtable_policy.h:1373:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553440181:2326,error,error,2326,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553440181,1,['error'],['error']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:18:09.069Z] /usr/include/c++/8/bits/hashtable.h:408:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:18:09.069Z] /usr/include/c++/8/bits/hashtable_policy.h:1832:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:18:09.069Z] /usr/include/c++/8/bits/hashtable_policy.h:1383:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553443733:2212,error,error,2212,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553443733,1,['error'],['error']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/hashtable_policy.h:1824:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/hashtable_policy.h:1379:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553447609:2497,error,error,2497,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553447609,1,['error'],['error']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:28:25.630Z] /usr/include/c++/8/bits/hashtable.h:408:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:28:25.630Z] /usr/include/c++/8/bits/hashtable_policy.h:1832:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:28:25.630Z] /usr/include/c++/8/bits/hashtable_policy.h:1383:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553458918:2212,error,error,2212,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553458918,1,['error'],['error']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:49:04.198Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:49:04.198Z] /usr/include/c++/9/bits/hashtable_policy.h:1822:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:49:04.198Z] /usr/include/c++/9/bits/hashtable_policy.h:1373:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553486787:2326,error,error,2326,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553486787,1,['error'],['error']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:49:54.137Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:49:54.137Z] /usr/include/c++/8/bits/hashtable_policy.h:1824:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:49:54.137Z] /usr/include/c++/8/bits/hashtable_policy.h:1379:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553488642:2380,error,error,2380,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553488642,1,['error'],['error']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:53:17.121Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:53:17.121Z] /usr/include/c++/9/bits/hashtable_policy.h:1822:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:53:17.121Z] /usr/include/c++/9/bits/hashtable_policy.h:1373:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553491495:2326,error,error,2326,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553491495,1,['error'],['error']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:56:29.934Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:56:29.934Z] /usr/include/c++/8/bits/hashtable_policy.h:1824:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:56:29.934Z] /usr/include/c++/8/bits/hashtable_policy.h:1379:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553499782:2380,error,error,2380,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553499782,1,['error'],['error']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T19:40:02.839Z] /usr/include/c++/8/bits/hashtable.h:408:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T19:40:02.840Z] /usr/include/c++/8/bits/hashtable_policy.h:1832:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T19:40:02.840Z] /usr/include/c++/8/bits/hashtable_policy.h:1383:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553557302:2212,error,error,2212,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553557302,1,['error'],['error']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T19:50:07.334Z] /usr/include/c++/8/bits/hashtable.h:408:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T19:50:07.334Z] /usr/include/c++/8/bits/hashtable_policy.h:1832:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T19:50:07.334Z] /usr/include/c++/8/bits/hashtable_policy.h:1383:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553567486:2212,error,error,2212,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553567486,1,['error'],['error']
Availability,"ROOT failed to build for aarch64, the build error is; ```; Processing hsimple.C...; cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }; ninja: build stopped: subcommand failed.; error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build); ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15696#issuecomment-2326544365:44,error,error,44,https://root.cern,https://github.com/root-project/root/pull/15696#issuecomment-2326544365,3,['error'],['error']
Availability,ROOT master based CMSSW releases also show the same resulsts:; - https://github.com/cms-sw/cmsdist/pull/6778#issuecomment-811474459 without #7752 . There is no hanging at build time but we see runtime crashes (https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-46d8cb/13898/runTheMatrix-results/1001.0_RunMinBias2011A+RunMinBias2011A+TIER0EXP+ALCAEXP+ALCAHARVDSIPIXELCALRUN1+ALCAHARVD1+ALCAHARVD2+ALCAHARVD3+ALCAHARVD4+ALCAHARVD5/step3_RunMinBias2011A+RunMinBias2011A+TIER0EXP+ALCAEXP+ALCAHARVDSIPIXELCALRUN1+ALCAHARVD1+ALCAHARVD2+ALCAHARVD3+ALCAHARVD4+ALCAHARVD5.log); - https://github.com/cms-sw/root/pull/152#issuecomment-811584967 with #7752 . No build or runtime errors but there are comparison differences.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-811655818:690,error,errors,690,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-811655818,1,['error'],['errors']
Availability,ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5228-windows10-cxx14&date=2020-04-20).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77296/console).; ### Errors:; - [2020-04-20T15:49:12.732Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\datasource_more.vcxproj] ; - [2020-04-20T15:49:13.386Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\ntuple_pages.vcxproj] ; - [2020-04-20T15:49:13.386Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\tmva\tmva\test\rtensor-utils.vcxproj] ; - [2020-04-20T15:49:13.386Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_report.vcxproj] ; - [2020-04-20T15:49:13.386Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_splitcoll_arrayview.vcxproj] ; - [2020-04-20T15:49:14.722Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\graf2d\gpadv7\test\graf2dgpadv7testUnit.vcxproj] ; - [2020-04-20T15:49:15.305Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\ntuple_raw.vcxproj] ; - [2020-04-20T15:49:15.305Z] LINK : fatal error LNK1181: cannot open,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5228#issuecomment-616642888:1076,error,error,1076,https://root.cern,https://github.com/root-project/root/pull/5228#issuecomment-616642888,1,['error'],['error']
Availability,ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5228-windows10-cxx14&date=2020-04-23).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/78145/console).; ### Errors:; - [2020-04-23T15:34:53.547Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj] ; - [2020-04-23T15:34:53.830Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\graf2d\gpadv7\test\graf2dgpadv7testUnit.vcxproj] ; - [2020-04-23T15:34:53.830Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\tmva\tmva\test\branchlessForest.vcxproj] ; - [2020-04-23T15:34:54.836Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\io\io\test\RRawFile.vcxproj] ; - [2020-04-23T15:34:54.836Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_entrylist.vcxproj] ; - [2020-04-23T15:34:55.136Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\tmva\tmva\test\envelope\TMVA-Classification.vcxproj] ; - [2020-04-23T15:34:55.136Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\core\imt\test\coreimttestUnit.vcxproj] ; - [2020-04-23T15:34:55.877Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\go,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5228#issuecomment-618470572:1135,error,error,1135,https://root.cern,https://github.com/root-project/root/pull/5228#issuecomment-618470572,1,['error'],['error']
Availability,"ROOT's approach of turning `find_package` to a no-op was based on the [talk](https://youtu.be/bsXLMQ6WgIk) ""Effective CMake"". It only works with subprojects of ROOT (i.e. LLVM) if we override `find_package` without renaming it, otherwise LLVM will not use the builtin zlib, for example, when that's enabled. I don't think ROOT is at fault here for relying on this feature of CMake.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8633#issuecomment-897450593:333,fault,fault,333,https://root.cern,https://github.com/root-project/root/issues/8633#issuecomment-897450593,1,['fault'],['fault']
Availability,ROOT-fedora31/noimt. has an odd error:; ```; 12:03:08 1220/1286 Test #1269: roottest-root-tree-cache-TestCache ................................................................***Failed 3.75 sec; 12:03:08 Start 1277: roottest-root-tree-cloning-treeCloneTest; 12:03:09 1221/1286 Test #1271: roottest-root-tree-cache-TooSmall ................................................................. Passed 3.05 sec; 12:03:09 Start 1278: roottest-root-tree-cloning-runtreeCloneTest2; 12:04:16 1222/1286 Test #1278: roottest-root-tree-cloning-runtreeCloneTest2 ............fatal: No rebase in progress?; 12:04:16 From http://root.cern/git/root; 12:04:16 * branch master -> FETCH_HEAD; 12:04:16 Switched to branch 'master'; 12:04:16 Cannot find file: /build/workspace/root-pullrequests-build/build/Testing/20200916-1638/Test.xml; 12:04:16 Problems when submitting via HTTP; ```; i.e. it seems like another build was started before the end of this one and wrote to the same log file !?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6301#issuecomment-693542821:32,error,error,32,https://root.cern,https://github.com/root-project/root/pull/6301#issuecomment-693542821,1,['error'],['error']
Availability,"ROOT::Fit::BinData&, const double*, unsigned int&, ROOT::Fit::ExecutionPolicy, unsigned int)’ does not match any template declaration ; - ../root/math/mathcore/src/EvaluateChi2.cxx:228:8: error: template-id ‘EvalEffective&lt;&gt;’ for ‘double ROOT::Fit::FitUtil::Chi2&lt;double&gt;::EvalEffective(ROOT::Fit::FitUtil::IModelFunctionTempl&lt;double&gt;&, const ROOT::Fit::BinData&, const double*, unsigned int&)’ does not match any template declaration ; - ../root/math/mathcore/src/EvaluateChi2.cxx:336:6: error: template-id ‘EvalGradient&lt;&gt;’ for ‘void ROOT::Fit::FitUtil::Chi2&lt;double&gt;::EvalGradient(ROOT::Fit::FitUtil::IModelFunctionTempl&lt;double&gt;&, const ROOT::Fit::BinData&, const double*, double*, unsigned int&, ROOT::Fit::ExecutionPolicy, unsigned int)’ does not match any template declaration ; - ../root/math/mathcore/src/EvaluateChi2.cxx:539:8: error: template-id ‘EvalResidual&lt;&gt;’ for ‘double ROOT::Fit::FitUtil::Chi2&lt;double&gt;::EvalResidual(ROOT::Fit::FitUtil::IModelFunctionTempl&lt;double&gt;&, const ROOT::Fit::BinData&, const double*, unsigned int, double*)’ does not match any template declaration ; - ../root/math/mathcore/src/EvaluateLogL.cxx:104:8: error: template-id ‘Eval&lt;&gt;’ for ‘double ROOT::Fit::FitUtil::LogL&lt;double&gt;::Eval(ROOT::Fit::FitUtil::IModelFunctionTempl&lt;double&gt;&, const ROOT::Fit::UnBinData&, const double*, int, bool, unsigned int&, ROOT::Fit::ExecutionPolicy, unsigned int)’ does not match any template declaration ; - ../root/math/mathcore/src/EvaluateLogL.cxx:314:6: error: template-id ‘EvalGradient&lt;&gt;’ for ‘void ROOT::Fit::FitUtil::LogL&lt;double&gt;::EvalGradient(ROOT::Fit::FitUtil::IModelFunctionTempl&lt;double&gt;&, const ROOT::Fit::UnBinData&, const double*, double*, unsigned int&, ROOT::Fit::ExecutionPolicy, unsigned int)’ does not match any template declaration ; - ../root/math/mathcore/src/EvaluatePoissonLogL.cxx:70:8: error: template-id ‘Eval&lt;&gt;’ for ‘double ROOT::Fit::FitUtil::PoissonLogL&lt;do",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2690#issuecomment-424710024:1180,error,error,1180,https://root.cern,https://github.com/root-project/root/pull/2690#issuecomment-424710024,2,['error'],['error']
Availability,ROOT::Math::IMultiGenFunctionTempl&lt;double&gt;’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/build/include/Math/IFunctionfwd.h:38:42: error: conflicting declaration ‘typedef using IBaseFunctionMultiDim = class ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt; ROOT::Math::IMultiGenFunction’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:24:7: error: conflicting declaration ‘struct RooMinimizer’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:30:7: error: conflicting declaration ‘struct RooFit::TestStatistics::RooAbsL’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:31:8: error: conflicting declaration ‘struct RooFit::TestStatistics::WrapperCalculationCleanFlags’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:37:46: error: ‘RooAbsL’ was not declared in this scope ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:37:53: error: template argument 1 is invalid ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:38:46: error: ‘WrapperCalculationCleanFlags’ was not declared in this scope ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:38:74: error: template argument 1 is invalid ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11981#issuecomment-1373555060:1384,error,error,1384,https://root.cern,https://github.com/root-project/root/pull/11981#issuecomment-1373555060,1,['error'],['error']
Availability,"ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> > const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> > const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PxPyPzE4D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PxPyPzM4D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; collect2: error: ld returned 1 exit status; math/genvector/CMakeFiles/GenVector.dir/build.make:363: recipe for target 'lib/libGenVector.so' failed; make[2]: *** [lib/libGenVector.so] Error 1; CMakeFiles/Makefile2:41978: recipe for target 'math/genvector/CMakeFiles/GenVector.dir/all' failed; make[1]: *** [math/genvector/CMakeFiles/GenVector.dir/all] Error 2; Makefile:165: recipe for target 'all' failed; ```. </details>. > So, so far, my best guess (because I don't understand 'what' it really does) is that [45c0f48](https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160) has the side effect of destroying/replacing the partial desugaring.; > ; > I would have expected the change to be much closer to part that generate the (partial) output for this kind of type/value and/or to be an extension in the partial desugaring routines.; > ; > (As a side note, I have a vague memory that we already solved a similar problem in the past but can not find (yet?) the solution (if any) in the repositor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1136423157:24551,error,error,24551,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157,1,['error'],['error']
Availability,"ROOT::TThreadExecutor::Map(F,unsigned int)': could not deduce template argument for 'Cond' [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2783: with [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2783: [ [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2783: _Ty=std::result_of&lt;F(void)&gt;::type [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2783: ] [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2784: 'std::vector&lt;std::result_of&lt;F(INTEGER)&gt;::type,std::allocator&lt;_Ty&gt;&gt; ROOT::TExecutor&lt;ROOT::TThreadExecutor&gt;::Map(F,std::initializer_list&lt;T&gt;)': could not deduce template argument for 'std::initializer_list&lt;T&gt;' from 'int' [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2784: with [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] . And 7 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6266#issuecomment-682883281:2706,error,error,2706,https://root.cern,https://github.com/root-project/root/pull/6266#issuecomment-682883281,3,['error'],['error']
Availability,"ROOT; CMake Error at interpreter/cling/CMakeLists.txt:196 (message):; NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred!; ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell; [...]; -- Building Cling as part of ROOT; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):; Target host is not in the set of libraries.; Call Stack (most recent call first):; interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components); interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames); interpreter/cling/CMakeLists.txt:426 (llvm_add_library); interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred!; ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:; ```shell; [ 98%] Linking CXX executable ../../bin/hist2workspace; [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so; [ 98%] Built target hist2workspace; [100%] Built target RooFitHS3; [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so; [100%] Built target RooFitXRooFit; [100%] Built target onepcm; [100%] Generating lib/modules.idx; Abort trap (core dumped); --- lib/modules.idx ---; *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build; 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build; --- CMakeFiles/modules_idx.dir/all ---; *** [CMakeFiles/modules_idx.di",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13865#issuecomment-1779361849:1257,error,errors,1257,https://root.cern,https://github.com/root-project/root/issues/13865#issuecomment-1779361849,1,['error'],['errors']
Availability,"R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~~~~~~; In file included from /opt/root_bld/include/TObject.h:17,; from /opt/root_bld/include/TNamed.h:25,; from /opt/root_bld/include/TDictionary.h:44,; from /opt/root_bld/include/TClass.h:23,; from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:; /opt/root_bld/include/Rtypes.h:352:29: error: expected primary-expression before ‘public’; class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }; ^~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~; /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’; class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }; ~ ^~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~; /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’; class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }; ^~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:; /home/ferdym/Documents/Fís",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6837#issuecomment-731577667:18480,error,error,18480,https://root.cern,https://github.com/root-project/root/issues/6837#issuecomment-731577667,1,['error'],['error']
Availability,RangeFloat_FromONNX.hxx:18:7: error: ‘fTensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:19:7: error: ‘tensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:27:21: error: ‘fTensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:29:7: error: ‘tensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:32:7: error: ‘fTensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:34:16: error: ‘other’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:34:21: error: template argument 1 is invalid . And 16 more. ### Warnings:; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:420:9: warning: unused variable ‘op_0_transA’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:421:9: warning: unused variable ‘op_0_transB’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:422:8: warning: unused variable ‘op_0_m’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:423:8: warning: unused variable ‘op_0_n’ [-Wunused-variable] ;,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14413#issuecomment-1948984768:1879,error,error,1879,https://root.cern,https://github.com/root-project/root/pull/14413#issuecomment-1948984768,1,['error'],['error']
Availability,"Re-opening the issue following further discussion. The linked PR is still valid as it documents the current state of the implementation, so that doesn't need to be changed. An investigation into finding a tolerance that can account for different (orders of magnitude of) weights is the next step for this issue. Since it was not foreseen in the PoW for 2024, we cannot give an ETA at this moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671#issuecomment-2047239798:205,toler,tolerance,205,https://root.cern,https://github.com/root-project/root/issues/6671#issuecomment-2047239798,1,['toler'],['tolerance']
Availability,Re-running ROOT-performance-centos7-multicore/default makes it work (i.e. the failures:; ```; projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseRead_32; projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execReadTmplt_build; ```; are random/unstable.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3760#issuecomment-630421567:78,failure,failures,78,https://root.cern,https://github.com/root-project/root/pull/3760#issuecomment-630421567,1,['failure'],['failures']
Availability,Re-running mac1015/cxx17 makes it work. i.e the failure ; ```; 11:06:30 [ 71%] Building CXX object io/io/CMakeFiles/RIO.dir/v7/src/RFile.cxx.o; 14:48:26 Cancelling nested steps due to timeout; 14:48:26 Could not connect to macphsft20 to send interrupt signal to process; ```; was transient.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3760#issuecomment-630506499:48,failure,failure,48,https://root.cern,https://github.com/root-project/root/pull/3760#issuecomment-630506499,1,['failure'],['failure']
Availability,"ReadsStd17 (1073 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin; 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesTL; 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL; 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL; 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms); 76: [----------] 88 tests from RWLock (169985 ms total); 76: ; 76: [----------] 10 tests from TThreadedObject; 76: [ RUN ] TThreadedObject.CreateAndDestroy; 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms); 76: [ RUN ] TThreadedObject.Get; 76: [ OK ] TThreadedObject.Get (8 ms); 76: [ RUN ] TThreadedObject.GetAtSlot; 76: [ OK ] TThreadedObject.GetAtSlot (0 ms); 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked; 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms); 76: [ RUN ] TThreadedObject.GetAtSlotRaw; 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms); 76: [ RUN ] TThreadedObject.SetAtSlot; 76: [ OK ] TThreadedObject.SetAtSlot (0 ms); 76: [ RUN ] TThreadedObject.Merge; 76: [ OK ] TThreadedObject.Merge (128 ms); 76: [ RUN ] TThreadedObject.SnapshotMerge; 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms); 76: [ RUN ] TThreadedObject.GrowSlots; 76: [ OK ] TThreadedObject.GrowSlots (1 ms); 76: [ RUN ] TThreadedObject.GetNSlots; 76: [ OK ] TThreadedObject.GetNSlots (1 ms); 76: [----------] 10 tests from TThreadedObject (139 ms total); 76: ; 76: [----------] Global test environment tear-down; 76: [==========] 104 tests from 3 test suites ran. (170981 ms total); 76: [ PASSED ] 104 tests.; 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:; gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-741456188:12053,down,down,12053,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-741456188,1,['down'],['down']
Availability,"Ready for review, only one spurious CI failure that I restarted",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16101#issuecomment-2249862449:39,failure,failure,39,https://root.cern,https://github.com/root-project/root/pull/16101#issuecomment-2249862449,1,['failure'],['failure']
Availability,Rebased and addressed the remaining comments. The redundant size variables have also been removed from TNDArray and TNDArrayT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7499#issuecomment-994498821:50,redundant,redundant,50,https://root.cern,https://github.com/root-project/root/pull/7499#issuecomment-994498821,1,['redundant'],['redundant']
Availability,"Rebased due to commit f237213f79718d083fe2ad0ef17de0b114a20e19 which increased the allowed tolerance a bit to fix the mac arm build. However, that increase is not sufficient for ix86 and the tolerance must be increased further to not fail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12390#issuecomment-1547918959:91,toler,tolerance,91,https://root.cern,https://github.com/root-project/root/pull/12390#issuecomment-1547918959,2,['toler'],['tolerance']
Availability,"Rebased on https://github.com/root-project/root/pull/11940 branch (it was more convenient to leave it based on that after all, I tried taking the commit out, but it needed too many changes) and fixed the build error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11941#issuecomment-1361190797:210,error,error,210,https://root.cern,https://github.com/root-project/root/pull/11941#issuecomment-1361190797,1,['error'],['error']
Availability,Rebased on top of master. Failure on macos14 is because of the known xml2 issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15404#issuecomment-2094746197:26,Failure,Failure,26,https://root.cern,https://github.com/root-project/root/pull/15404#issuecomment-2094746197,1,['Failure'],['Failure']
Availability,Rebased to hopefully avoid the previously remaining test failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11631#issuecomment-1480146242:57,failure,failure,57,https://root.cern,https://github.com/root-project/root/pull/11631#issuecomment-1480146242,1,['failure'],['failure']
Availability,Rebuild to check whether the test failure above is reproducible.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3898#issuecomment-498800284:34,failure,failure,34,https://root.cern,https://github.com/root-project/root/pull/3898#issuecomment-498800284,1,['failure'],['failure']
Availability,"Rebuilding just on Windows. The `errx()` function used before is not available, replaced it with `perror()`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2720#issuecomment-425738548:69,avail,available,69,https://root.cern,https://github.com/root-project/root/pull/2720#issuecomment-425738548,1,['avail'],['available']
Availability,RecurseCounts is the default second template argument for TReentrantRWLock and TRWMutexImp so it's definitely already there. The most relevant comparisons here are Std vs Std14 vs Std17. (Even if this was all run in a C++17 build I set it up to just test all the variants which are available.),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-741508230:282,avail,available,282,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-741508230,1,['avail'],['available']
Availability,"Regarding `roottest-python-pickle-read`:. ```; Start 1437: roottest-python-pickle-read; 14/20 Test #1437: roottest-python-pickle-read ........................***Failed 1.36 sec; -- TEST COMMAND -- ; cd /srv/root/build/roottest/python/pickle; /usr/bin/timeout -s USR2 270s /usr/bin/python /srv/root/src/roottest/python/pickle/PyROOT_readtests.py --fixcling; -- BEGIN TEST OUTPUT --; Test reference counting of pickled object ... ok; Test that a TBufferFile can be pickled ... ok; Test serialization of the ROOT Python module. ... ERROR; Test reading of a histogram from a pickle file ... ok; Test reading of an std::vector<double> from a pickle file ... ok; Test reading of a user-defined object from a pickle file ... ok; Test reading of a ROOT object in a namespace from a pickle file ... ok; Test reading PyROOT custom types ... ok; [ROOT-10810] Test reading a RooDataSet with weights ... ok. ======================================================================; ERROR: Test serialization of the ROOT Python module.; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/roottest/python/pickle/PyROOT_readtests.py"", line 177, in test3PickleFacadeCheck; facade = pickle.loads(pickle.dumps(get_root_facade())); TypeError: cannot pickle 'ROOTFacade' object; ```. This piece of the pickle test was added by @vepadulano yesterday, it must have failed because your ROOT installation was not updated with the corresponding fix in PyROOT (also merged by @vepadulano yesterday).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-823938499:529,ERROR,ERROR,529,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-823938499,2,['ERROR'],['ERROR']
Availability,"Regarding points 2. and 3.: When creating a target machine, LLVM 9 now has a parameter `bool JIT`. This should do the right thing and it does for AArch64 (automatically selecting `CodeModel::Large`), but not for PPC :cry: We need that for the reasons mentioned in the comment around the assert (really, any JIT needs it on these architectures). So I think manually setting the model as done in https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d is the right approach (while we might think about making upstream LLVM do the right thing in the long term). @ellert could you provide some details on the segmentation fault that you see with that commit? Is it maybe crashing during instruction selection or JIT relocation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-843822156:641,fault,fault,641,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-843822156,1,['fault'],['fault']
Availability,Regarding that test failure: I think this is due to #7395.; @guitargeek . You can probably hotfix it by reducing the precision of that check (although 1% accuracy of a mean is already pretty bad).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7314#issuecomment-793653127:20,failure,failure,20,https://root.cern,https://github.com/root-project/root/pull/7314#issuecomment-793653127,1,['failure'],['failure']
Availability,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```; cmake .. \; -Dalien=OFF -Dcuda=ON \; -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \; -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \; -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread!; ```. Here the error:. ```; /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory; #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h""; ^; compilation terminated.; CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):; Error generating; /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1; make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; make: *** [all] Error 2; ```. And now here the verbose make output (stdout grep 'nvcc'):. ```; /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include; ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```; /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/283#issuecomment-257136223:316,error,error,316,https://root.cern,https://github.com/root-project/root/pull/283#issuecomment-257136223,6,"['Error', 'error']","['Error', 'error']"
Availability,"Regarding the RNTuple failures, one issue is the endianness (big-endian), which is addressed in #10402",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10409#issuecomment-1104800290:22,failure,failures,22,https://root.cern,https://github.com/root-project/root/issues/10409#issuecomment-1104800290,1,['failure'],['failures']
Availability,Regarding the failing test on mac: mac just imports stuff ... i'll track down whether it's us or pulled in by the system.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5285#issuecomment-608328080:73,down,down,73,https://root.cern,https://github.com/root-project/root/pull/5285#issuecomment-608328080,1,['down'],['down']
Availability,"Regarding the titular issue, I have been thinking about it for a bit and I don't think we can do much better than what @pieterdavid already implemented. Solutions considered:. 1. Implicitly converting `TClonesArrays` to `RVecs` would be a) backward-incompatible and b) a silent perf degradation, as it requires a copy. Moreover, if we did this I don't see a migration path that doesn't require that users revise all their TClonesArrays-related logic; 2. Adding a `TClonesArrays2RVec` helper function: it would require a copy (or it would have to return a clunky `RVec<T*>`). It is also trivial to implement for users that need it and don't mind the downsides.; 3. Adding a RDF toggle to tweak ""read TClonesArrays as RVecs"" or not: requires adding a bunch of extra logic to the column-reading mechanism for a feature that might end up being mostly unused (modern data models don't use TClonesArrays), and it would require the extra copy (i.e. silent performance degradation). The best seems to be 3, but feature toggles complicate internals and are typically not easy to discover (might end up mostly unused). It seems simpler to ask users to explicitly do the conversion in a `Redefine` if they need/want to. Sorry I could not come up with something nice :confused: . I will close this in a few days unless people have something against it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8644#issuecomment-883552286:649,down,downsides,649,https://root.cern,https://github.com/root-project/root/issues/8644#issuecomment-883552286,1,['down'],['downsides']
Availability,Relevant discussion regarding this other error at https://mattermost.web.cern.ch/root/pl/cbnhe83bm7dxdmssom6ne416sw,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7311#issuecomment-1071104162:41,error,error,41,https://root.cern,https://github.com/root-project/root/issues/7311#issuecomment-1071104162,1,['error'],['error']
Availability,Remaining warnings and errors coming from eve7 and will be fixed with next PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3470#issuecomment-467479089:23,error,errors,23,https://root.cern,https://github.com/root-project/root/pull/3470#issuecomment-467479089,1,['error'],['errors']
Availability,"Remotely related to this PR, could remove the redundant `#include ""RooCintUtils.h""`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1714#issuecomment-371549314:46,redundant,redundant,46,https://root.cern,https://github.com/root-project/root/pull/1714#issuecomment-371549314,1,['redundant'],['redundant']
Availability,"Reopened the PR with the ""clean build"" flag. This should hopefully fix the test failures on macOS. I had this Idea because by chance I saw the same test failures on my own Arch Linux desktop when I did an incremental build where I updated the clad tag from 1.5 to master in between. It seems the re-build of clad didn't get triggered, which might have also happened on the CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15616#issuecomment-2215375377:80,failure,failures,80,https://root.cern,https://github.com/root-project/root/pull/15616#issuecomment-2215375377,2,['failure'],['failures']
Availability,"Reopened, because there are new ideas for Pythonizations mentioned in this comment:; https://github.com/root-project/root/issues/11421#issuecomment-1257015302. To quote that comment:. > 1. sometimes I would have found useful to be able to pass python number anywhere a `RooAbsReal` is required, although I suspect this may require a pythonization for each pdf.; > 2. `RooSimultaneous` map constructor does not accept a python dictionary yet; > 3. one thing that surprised me a couple of times at the beginning is that `RooAbsArg` does not keep its servers alive from the python GC so you actually need the same workarounds as in C++ (importing frequently to a workspace).; However, I suspect that if they did keep servers alive, server redirection would likely lead to desync between the C++ and python views of the graph. The third one is now implemented in #11500, which also got backported to 6.26.08",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7217#issuecomment-1265533557:556,alive,alive,556,https://root.cern,https://github.com/root-project/root/issues/7217#issuecomment-1265533557,2,['alive'],['alive']
Availability,"Right - @smuzaffar was quite clear that we should separate build failures from test failures. But we now fail for build failures, too, so maybe including test failures in the failed state makes sense? Anyway, just pinging @smuzaffar for his recommendation + arguments before we decide what to do here!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12307#issuecomment-1542423864:65,failure,failures,65,https://root.cern,https://github.com/root-project/root/issues/12307#issuecomment-1542423864,5,"['failure', 'ping']","['failures', 'pinging']"
Availability,"Right - we've been there before, and the only way to invoke a `Decl` reliably is to generate the appropriate AST instead of generating source code. What I meant is: ""The above approach is more likely to pass roottest and existing usage patterns than this PR (which fails roottest)."" Thanks for pointing out the test case again!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/614#issuecomment-307013529:69,reliab,reliably,69,https://root.cern,https://github.com/root-project/root/pull/614#issuecomment-307013529,1,['reliab'],['reliably']
Availability,"RooFormula was overhauled, which seems to be the only place where regexes show up in diffs. I think there's two simple things we can do to trace it down in a second:; - You attach a debugger and set a breakpoint on exception throw.; - You post an example that the root team can run. In the end, it can probably be solved by escaping the relevant characters in the name of an object.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7115#issuecomment-777299090:148,down,down,148,https://root.cern,https://github.com/root-project/root/issues/7115#issuecomment-777299090,1,['down'],['down']
Availability,"Rs. From the log, it seems that there is a problem when using RooFit from Python now:; ```; 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec; 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py; 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec; 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py; 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec; 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py; 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec; 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py; 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec; 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py; 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec; 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py; 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec; 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py; 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12536#issuecomment-1482508642:1024,Error,Error,1024,https://root.cern,https://github.com/root-project/root/pull/12536#issuecomment-1482508642,1,['Error'],['Error']
Availability,Running TTree::Scan should give an idea of the type of error made by TTree::Draw.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671#issuecomment-712930970:55,error,error,55,https://root.cern,https://github.com/root-project/root/issues/6671#issuecomment-712930970,1,['error'],['error']
Availability,Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. I don't see this discussed here - what's the intent?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11922#issuecomment-1356774367:223,error,error,223,https://root.cern,https://github.com/root-project/root/pull/11922#issuecomment-1356774367,1,['error'],['error']
Availability,"Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/142531/console).; ### Errors:; - [2022-04-13T15:33:08.456Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/DenseMap.h(555,25): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Lex\PPMacroExpansion.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Lex\obj.clangLex.vcxproj] ; - [2022-04-13T15:33:08.456Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(687,5): error MSB8071: Cannot parse tool output 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\memory(3155): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Driver\ToolChains\Arch\X86.cpp)' with regex '^In file included from .*$': Exception of type 'System.OutOfMemoryException' was thrown. [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Driver\obj.clangDriver.vcxproj] ; - [2022-04-13T15:33:08.456Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/CanonicalType.h(281,3): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\ASTContext.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-04-13T15:33:08.456Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\tuple(392,34): fatal error C1060: compiler is out of heap space (compiling source file C:\build\w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10391#issuecomment-1098198670:962,error,error,962,https://root.cern,https://github.com/root-project/root/pull/10391#issuecomment-1098198670,1,['error'],['error']
Availability,"Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/191891/console).; ### Errors:; - [2023-12-21T09:36:24.838Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\include\clang/Sema/DeclSpec.h(1956,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_50c79a90db': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Parse\ParseExpr.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2023-12-21T09:36:24.838Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\include\clang/AST/OpenMPClause.h(6988,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_db8aeb84db': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Parse\ParseAST.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2023-12-21T09:36:24.838Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\include\clang/AST/Stmt.h(3590,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_b338413cex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\AST\ExprClassification.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2023-12-21T09:36:24.838Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring(2302,1): fatal error C1088: Cannot flush compiler intermediate fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14218#issuecomment-1865969388:918,error,error,918,https://root.cern,https://github.com/root-project/root/pull/14218#issuecomment-1865969388,1,['error'],['error']
Availability,Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5791-ROOT-fedora30-cxx14&date=2020-06-05).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85324/console).; ### Errors:; - [2020-06-05T06:53:52.349Z] FAILED: roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsReal.cxx.o ; - [2020-06-05T06:53:52.930Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:4953:45: error: ‘setprecision’ is not a member of ‘std’ ; - [2020-06-05T06:53:52.930Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:4992:25: error: ‘setprecision’ is not a member of ‘std’ ; - [2020-06-05T06:53:52.930Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:4993:35: error: ‘setw’ is not a member of ‘std’; did you mean ‘set’? ; - [2020-06-05T06:53:52.930Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:4994:35: error: ‘setw’ is not a member of ‘std’; did you mean ‘set’? ; - [2020-06-05T06:53:52.930Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:4998:35: error: ‘setw’ is not a member of ‘std’; did you mean ‘set’? ; - [2020-06-05T06:53:52.930Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:5000:46: error: ‘setw’ is not a member of ‘std’; did you mean ‘set’? ; - [2020-06-05T06:53:52.930Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:5006:27: error: ‘setprecision’ is not a member of ‘std’ ; - [2020-06-05T06:53:52.930Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:5018:31: error: ‘setprecision’ is not a member of ‘std’,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5791#issuecomment-639294767:1020,error,error,1020,https://root.cern,https://github.com/root-project/root/pull/5791#issuecomment-639294767,6,['error'],['error']
Availability,"S), ; r.RooFit.FillColor(93), r.RooFit.LineColor(93), r.RooFit.DrawOption(""F""));; modelTot.plotOn(frame, r.RooFit.Name(""RarePrc""), r.RooFit.Components(""modelBkgTot""+trigCatS+"",templateCharmPrc""+trigCatPrc+"",templateRarePrc""+trigCatPrc), ; r.RooFit.FillColor(95), r.RooFit.LineColor(95), r.RooFit.DrawOption(""F""));; modelTot.plotOn(frame, r.RooFit.Name(""CharmPrc""), r.RooFit.Components(""modelBkgTot""+trigCatS+"",templateCharmPrc""+trigCatPrc), ; r.RooFit.FillColor(94), r.RooFit.LineColor(94), r.RooFit.DrawOption(""F""));; modelTot.plotOn(frame, r.RooFit.Name(""comb""), r.RooFit.Components(""modelBkgTot""+trigCatS), ; r.RooFit.FillColor(92), r.RooFit.LineColor(92), r.RooFit.DrawOption(""F""));; modelTot.plotOn(frame, r.RooFit.Name(""sig""), r.RooFit.LineColor(r.kBlack), r.RooFit.Components(""modelSigTot""+trigCatS ), r.RooFit.LineStyle(2));. data.plotOn(frame);. modelTot.paramOn(frame, r.RooFit.Layout(0.65,0.85,0.95)); frame.getAttLine(""modelTot""+str(trigCat)+""_paramBox"").SetLineWidth(0);. ```. I get the regex error. ```; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-543-f3142912b8db> in <module>; ----> 1 modelTot.plotOn(frame, r.RooFit.Name(""Piee""), r.RooFit.Components(""modelBkgTot""+trigCatS+"",templateRarePrc""+trigCatPrc+"",templateCharmPrc""+trigCatPrc+"",modelPieeTot""+trigCatS), ; 2 r.RooFit.FillColor(93), r.RooFit.LineColor(93), r.RooFit.DrawOption(""F""));; 3 modelTot.plotOn(frame, r.RooFit.Name(""RarePrc""), r.RooFit.Components(""modelBkgTot""+trigCatS+"",templateCharmPrc""+trigCatPrc+"",templateRarePrc""+trigCatPrc), ; 4 r.RooFit.FillColor(95), r.RooFit.LineColor(95), r.RooFit.DrawOption(""F""));; 5 modelTot.plotOn(frame, r.RooFit.Name(""CharmPrc""), r.RooFit.Components(""modelBkgTot""+trigCatS+"",templateCharmPrc""+trigCatPrc), . TypeError: none of the 2 overloaded methods succeeded. Full details:; RooPlot* RooAbsPdf::plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = Roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7115#issuecomment-777628272:2379,error,error,2379,https://root.cern,https://github.com/root-project/root/issues/7115#issuecomment-777628272,1,['error'],['error']
Availability,"SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed.; Aborted (core dumped); ```; Even though Vc.pcm is sitting right next to MathCore.pcm; export ROOT_INCLUDE_PATH does solve this problem (see the other tests in the repeater), but at least to me this behaviour or at least the error message seems questionable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:4406,error,error,4406,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,1,['error'],['error']
Availability,"SVC\14.23.28105\include\xmemory(783,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Rewrite\RewriteRope.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Rewrite\obj.clangRewrite.vcxproj] ; - [2021-04-30T19:53:28.718Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list(1609,64): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Rewrite\TokenRewriter.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Rewrite\obj.clangRewrite.vcxproj] ; - [2021-04-30T19:53:28.718Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/ilist.h(133,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\LowerEmuTLS.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2021-04-30T19:53:42.538Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/Stmt.h(2558,36): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseAST.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2021-04-30T19:53:42.538Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/TrailingObjects.h(199,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseOpenMP.cpp) [C:\build\workspace\root-pullrequest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7354#issuecomment-830348016:1249,error,error,1249,https://root.cern,https://github.com/root-project/root/pull/7354#issuecomment-830348016,1,['error'],['error']
Availability,"SVC\14.23.28105\include\xutility(545,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\Rewrite\FrontendActions.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\Rewrite\obj.clangRewriteFrontend.vcxproj] ; - [2021-04-20T11:43:08.155Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(899,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\LowerTypeTests.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] ; - [2021-04-20T11:43:08.155Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Casting.h(124,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\CommentSema.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2021-04-20T11:43:08.155Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\Local.cpp(2957,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2021-04-20T11:43:08.155Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits(229,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\BackendUtil.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] . And 50 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7920#issuecomment-823208209:3335,error,error,3335,https://root.cern,https://github.com/root-project/root/pull/7920#issuecomment-823208209,3,['error'],['error']
Availability,Same errors observed in dummy 6.14-based PR: https://github.com/root-project/root/pull/4595; Concluding they are unrelated with the changes of this PR. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4592#issuecomment-547836839:5,error,errors,5,https://root.cern,https://github.com/root-project/root/pull/4592#issuecomment-547836839,1,['error'],['errors']
Availability,"Same operating system as @mkrzewic.; Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell; [...]; -- Building Cling as part of ROOT; CMake Error at interpreter/cling/CMakeLists.txt:196 (message):; NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred!; ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell; [...]; -- Building Cling as part of ROOT; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):; Target host is not in the set of libraries.; Call Stack (most recent call first):; interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components); interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames); interpreter/cling/CMakeLists.txt:426 (llvm_add_library); interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred!; ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:; ```shell; [ 98%] Linking CXX executable ../../bin/hist2workspace; [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so; [ 98%] Built target hist2workspace; [100%] Built target RooFitHS3; [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so; [100%] Built target RooFitXRooFit; [100%] Built target onepcm; [100%] Generating lib/modules.idx; Abort trap (core dumped); --- lib/modules",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13865#issuecomment-1779361849:188,error,error,188,https://root.cern,https://github.com/root-project/root/issues/13865#issuecomment-1779361849,5,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,Same test failure (`roottest-python-regression-regression`) as fedora 38 :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13761#issuecomment-1742877857:10,failure,failure,10,https://root.cern,https://github.com/root-project/root/pull/13761#issuecomment-1742877857,1,['failure'],['failure']
Availability,"See also https://github.com/root-project/root/issues/12156. But interestingly while I don't get that particular error, there are indeed still *some* LLVM symbols exported:. ```sh; nm --dynamic /path/to/libCling.so | awk '{print $3;}' | c++filt | grep llvm; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14778#issuecomment-1956171735:112,error,error,112,https://root.cern,https://github.com/root-project/root/issues/14778#issuecomment-1956171735,1,['error'],['error']
Availability,See also https://root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6; ROOT::EnableThreadSafety() could be added to the manual.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7216#issuecomment-783709373:38,error,error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function,38,https://root.cern,https://github.com/root-project/root/issues/7216#issuecomment-783709373,1,['error'],['error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function']
Availability,"See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5921-ROOT-performance-centos7-multicore-default&date=2020-06-24).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87835/console).; ### Errors:; - [2020-06-24T11:19:52.532Z] ../../../lib/libRDAVIX.a(RRawFileDavix.cxx.o):RRawFileDavix.cxx:function ROOT::Internal::RRawFileDavix::GetSizeImpl(): error: undefined reference to 'Davix::DavPosix::stat(Davix::RequestParams const*, std::string const&, stat*, Davix::DavixError**)' ; - [2020-06-24T11:19:52.532Z] ../../../lib/libRDAVIX.a(RRawFileDavix.cxx.o):RRawFileDavix.cxx:function ROOT::Internal::RRawFileDavix::GetSizeImpl(): error: undefined reference to 'Davix::DavixError::getErrMsg() const' ; - [2020-06-24T11:19:52.532Z] ../../../lib/libRDAVIX.a(RRawFileDavix.cxx.o):RRawFileDavix.cxx:function ROOT::Internal::RRawFileDavix::OpenImpl(): error: undefined reference to 'Davix::DavPosix::open(Davix::RequestParams const*, std::string const&, int, Davix::DavixError**)' ; - [2020-06-24T11:19:52.532Z] ../../../lib/libRDAVIX.a(RRawFileDavix.cxx.o):RRawFileDavix.cxx:function ROOT::Internal::RRawFileDavix::OpenImpl(): error: undefined reference to 'Davix::DavixError::getErrMsg() const' ; - [2020-06-24T11:19:52.532Z] ../../../lib/libRDAVIX.a(RRawFileDavix.cxx.o):RRawFileDavix.cxx:function ROOT::Internal::RRawFileDavix::ReadAtImpl(void*, unsigned long, unsigned long): error: undefined reference to 'Davix::DavPosix::pread(Davix_fd*, void*, unsigned long, long, Davix::DavixError**)' ; - [2020-06-24T11:19:52.532Z] ../../../lib/libRDAVIX.a(RRawFileDavix.cxx.o):RRawFileDavix.cxx:function ROOT::Internal::RRawFileDavix::ReadAtImpl(void*, unsigned long, unsigned long): error: undefined reference to 'Davix::DavixError::getErrMsg() const' ; - [2020-06-24T11:19:52.532Z] ../../../lib/libRDAVIX.a(RRawFileDavix.cxx.o):RRawFileDavix.cxx:function ROOT::Internal::RRawFileDavix::ReadVImpl(ROOT::I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5921#issuecomment-648760074:1092,error,error,1092,https://root.cern,https://github.com/root-project/root/pull/5921#issuecomment-648760074,1,['error'],['error']
Availability,See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-6298-mac1014-python3&date=2020-09-03).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94663/console).; ### Errors:; - [2020-09-03T13:08:00.468Z] FAILED: core/imt/CMakeFiles/Imt.dir/src/TThreadExecutor.cxx.o ; - [2020-09-03T13:08:00.468Z] /build/jenkins/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:195:1: error: use of undeclared identifier 'TThreadExecutor'; did you mean '::ROOT::TThreadExecutor'? ; - [2020-09-03T13:08:00.468Z] /build/jenkins/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:195:18: error: cannot define or redeclare 'TThreadExecutor' here because namespace 'ROOT' does not enclose namespace 'TThreadExecutor' ; - [2020-09-03T13:08:00.468Z] /build/jenkins/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:197:4: error: use of undeclared identifier 'fTaskArenaW' ; - [2020-09-03T13:08:00.468Z] /build/jenkins/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:197:18: error: no member named 'Internal' in namespace '(anonymous namespace)::ROOT'; did you mean '::ROOT::Internal'? ; - [2020-09-03T13:08:00.468Z] /build/jenkins/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:197:53: error: use of undeclared identifier 'nThreads' ; - [2020-09-03T13:08:00.468Z] /build/jenkins/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:200:6: error: use of undeclared identifier 'TThreadExecutor'; did you mean '::ROOT::TThreadExecutor'? ; - [2020-09-03T13:08:00.468Z] /build/jenkins/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:200:23: error: cannot define or redeclare 'ParallelFor' here because namespace 'ROOT' does not enclose namespace 'TThreadExecutor' ; - [2020-09-03T13:08:00.469Z] /build/jenkins/workspace/root-pullrequests-build/root/core/imt/src/TThre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6298#issuecomment-686477445:1083,error,error,1083,https://root.cern,https://github.com/root-project/root/pull/6298#issuecomment-686477445,1,['error'],['error']
Availability,See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8298/console).; ### Errors:; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:51:9: error: unknown type name '__PTRDIFF_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:62:9: error: unknown type name '__SIZE_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:90:9: error: unknown type name '__WCHAR_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:90:24: error: expected unqualified-id ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:51:9: error: unknown type name '__PTRDIFF_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:62:9: error: unknown type name '__SIZE_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:90:9: error: unknown type name '__WCHAR_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:90:24: error: expected unqualified-id ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:51:9: error: unknown type name '__PTRDIFF_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:62:9: error: unknown type name '__SIZE_TYPE__' . And 22 more. ### Warnings:; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomment] ; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomment] ; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomment] ; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomment] ; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomment] ; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomme,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1144#issuecomment-334645417:979,error,error,979,https://root.cern,https://github.com/root-project/root/pull/1144#issuecomment-334645417,1,['error'],['error']
Availability,See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8299/console).; ### Errors:; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:51:9: error: unknown type name '__PTRDIFF_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:62:9: error: unknown type name '__SIZE_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:90:9: error: unknown type name '__WCHAR_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:90:24: error: expected unqualified-id ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:51:9: error: unknown type name '__PTRDIFF_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:62:9: error: unknown type name '__SIZE_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:90:9: error: unknown type name '__WCHAR_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:90:24: error: expected unqualified-id ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:51:9: error: unknown type name '__PTRDIFF_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:62:9: error: unknown type name '__SIZE_TYPE__' . And 10 more. ### Warnings:; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomment] ; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomment] ; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomment] ; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomment] ; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomment] ; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomme,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1144#issuecomment-334645227:979,error,error,979,https://root.cern,https://github.com/root-project/root/pull/1144#issuecomment-334645227,1,['error'],['error']
Availability,"See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91520/console).; ### Errors:; - [2020-08-05T11:32:04.813Z] FAILED: math/mathcore/CMakeFiles/MathCore.dir/src/Fitter.cxx.o ; - [2020-08-05T11:32:05.176Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/Chi2FCN.h:124:9: error: ‘void ROOT::Fit::Chi2FCN&lt;DerivFunType, ModelFunType&gt;::Gradient(const double*, double*) const [with DerivFunType = ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt;; ModelFunType = ROOT::Math::IParametricFunctionMultiDimTempl&lt;Vc_1::Vector&lt;double, Vc_1::VectorAbi::Sse&gt; &gt;]’ marked ‘override’, but does not override ; - [2020-08-05T11:32:05.176Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/Chi2FCN.h:154:11: error: ‘double ROOT::Fit::Chi2FCN&lt;DerivFunType, ModelFunType&gt;::DoDerivative(const double*, unsigned int) const [with DerivFunType = ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt;; ModelFunType = ROOT::Math::IParametricFunctionMultiDimTempl&lt;Vc_1::Vector&lt;double, Vc_1::VectorAbi::Sse&gt; &gt;]’ marked ‘override’, but does not override ; - [2020-08-05T11:32:05.176Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/Chi2FCN.h:124:9: error: ‘void ROOT::Fit::Chi2FCN&lt;DerivFunType, ModelFunType&gt;::Gradient(const double*, double*) const [with DerivFunType = ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt;; ModelFunType = ROOT::Math::IParametricFunctionMultiDimTempl&lt;double&gt;]’ marked ‘override’, but does not override ; - [2020-08-05T11:32:05.176Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/Chi2FCN.h:154:11: error: ‘double ROOT::Fit::Chi2FCN&lt;DerivFunType, ModelFunType&gt;::DoDerivative(const double*, unsigned int) const [with DerivFunType = ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt;; ModelFunType = ROOT::Math::IParametricFunctionMultiDimTempl&lt;double&gt;]’ marke",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6007#issuecomment-669141294:1107,error,error,1107,https://root.cern,https://github.com/root-project/root/pull/6007#issuecomment-669141294,1,['error'],['error']
Availability,"See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/99421/console).; ### Errors:; - [2020-10-19T18:43:43.091Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DCLING_VERSION=""ROOT_0.8~dev"" -DGTEST_HAS_RTTI=0 -DLLVM_BUILD_GLOBAL_ISEL -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/cling/lib/Interpreter -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/include -Iinterpreter/llvm/src/tools/cling/include -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/include -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++11 -w -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -Wno-nested-anon-types -Wno-covered-switch-default -Wno-unused-local-typedef -fno-rtti -O3 -fvisibility=default -fvisibility-inlines-hidden -UNDEBUG -fno-exceptions -fno-rtti -std=c++11 -MD -MT interpreter/llvm/src/tools/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/DefinitionShadower.cpp.o -MF interpreter/llvm/src/tools/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/DefinitionShadower.cpp.o.d -o interpreter/llvm/src/tools/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/DefinitionShadower.cpp.o -c /mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp ; - [2020-10-19T18:43:43.091Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp:53:51: error: ‘const class clang::FunctionDecl’ has no member named ‘isTemplateSpecialization’",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6571#issuecomment-712369455:2036,error,error,2036,https://root.cern,https://github.com/root-project/root/pull/6571#issuecomment-712369455,1,['error'],['error']
Availability,"See the related failures created on the CI: https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971 where we run just the TMVA test to increase the chance of collisions .... and indeed the `tutorial-tmva-TMVA_SOFIE_GNN_Application` fails on most platforms with:; ```; /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; #include ""encoder.hxx""; ^~~~~~~~~~~~~; ```; and `tutorial-tmva-TMVA_RNN_Classification-py` fails (on just alma9-clang) due to timeout. -------. This specific issue is resolved by https://github.com/root-project/root/pull/16711",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16553#issuecomment-2408535597:16,failure,failures,16,https://root.cern,https://github.com/root-project/root/issues/16553#issuecomment-2408535597,2,"['error', 'failure']","['error', 'failures']"
Availability,Seeing the same issue with a binary download and Ubun22. A workaround is to edit by hand the cmake file and comment those lines. @krasznaa or @linev might know what the problem could be,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16038#issuecomment-2231599351:36,down,download,36,https://root.cern,https://github.com/root-project/root/issues/16038#issuecomment-2231599351,1,['down'],['download']
Availability,Seems like the failing test was just a fluke. I also don't see that failure on my machine and I don't think it's related at all anyway.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11113#issuecomment-1206860724:68,failure,failure,68,https://root.cern,https://github.com/root-project/root/pull/11113#issuecomment-1206860724,1,['failure'],['failure']
Availability,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git; ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection; -- The C compiler identification is GNU 8.3.1; -- The CXX compiler identification is GNU 8.3.1; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.27.0""); ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-867613908:16,down,downloaded,16,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-867613908,1,['down'],['downloaded']
Availability,"Seems to be, compilation on mac is working - I see failure only in some roofit tests.; One could merge this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2584#issuecomment-418626222:51,failure,failure,51,https://root.cern,https://github.com/root-project/root/pull/2584#issuecomment-418626222,1,['failure'],['failure']
Availability,"Should I have it build on either Travis or Jenkins? (I don't know where to add it to Jenkins). Even if the artifacts are not available, it would be nice to make sure it still builds if there are changes to Minuit2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-369905773:125,avail,available,125,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-369905773,1,['avail'],['available']
Availability,Should have ran. If you want to make sure just introduce an error in the test and see if it starts to fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9272#issuecomment-2058224144:60,error,error,60,https://root.cern,https://github.com/root-project/root/pull/9272#issuecomment-2058224144,1,['error'],['error']
Availability,Should we proceed with this PR and then fix the failures as we will have a reproducer?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5443#issuecomment-618664455:48,failure,failures,48,https://root.cern,https://github.com/root-project/root/pull/5443#issuecomment-618664455,1,['failure'],['failures']
Availability,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4029#issuecomment-507959360:53,failure,failure,53,https://root.cern,https://github.com/root-project/root/pull/4029#issuecomment-507959360,1,['failure'],['failure']
Availability,Shouldn't have rebased on current master...; ```; Processing /mnt/build/jenkins/workspace/root-pullrequests-build/roottest/cling/other/runfileClose.C...; input_line_29:1:1: error: source file is not valid UTF-8; <D6><U+007F>; ^; input_line_29:1:2: error: expected unqualified-id; <D6><U+007F>; ^; ```; It does pass all tests when I run `ctest -V -R tree` (108 tests more or less).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1058#issuecomment-332883841:173,error,error,173,https://root.cern,https://github.com/root-project/root/pull/1058#issuecomment-332883841,2,['error'],['error']
Availability,"Shouldn't we merge this (in addition to https://github.com/root-project/root/pull/7260/), for example for use on Windows and/or when TBB is not available?. Related, we should put (a summary of) the performance numbers somewhere in the git reporsitory. Maybe either in the release note or one of the commit. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-800493373:144,avail,available,144,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-800493373,1,['avail'],['available']
Availability,"Side note, it crashes with current ROOT master, but does not crash with current cling standalone master (debug mode). ```; for(i=0; i < 0;);; input_line_3:2:6: error: use of undeclared identifier 'i'; for(auto i=0; i < 0;); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8367#issuecomment-2054139900:160,error,error,160,https://root.cern,https://github.com/root-project/root/issues/8367#issuecomment-2054139900,1,['error'],['error']
Availability,"Side note: I was able to reproduce the same race and deadlock on different computers using:. ```; 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11; 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it; 2. mkdir build && cd build; 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../; 4. make; 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8365#issuecomment-875135587:161,Down,Download,161,https://root.cern,https://github.com/root-project/root/issues/8365#issuecomment-875135587,1,['Down'],['Download']
Availability,Side note: calling make clean does not clean the directory in case the build failed. I get:. ```; rm -r rootdoc filter htmlfooter.html dataset* ../../bindings/pyroot/pythonizations/python/ROOT/pythonization/*.pyzdoc; rm: cannot remove 'dataset*': No such file or directory; Makefile:56: recipe for target 'clean' failed; make: *** [clean] Error 1; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8947#issuecomment-910383278:339,Error,Error,339,https://root.cern,https://github.com/root-project/root/issues/8947#issuecomment-910383278,1,['Error'],['Error']
Availability,Side note: thisroot.csh also seems to need some re-work: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10424#issuecomment-1150482456:93,error,error-in-thisroot-csh-during-installation,93,https://root.cern,https://github.com/root-project/root/pull/10424#issuecomment-1150482456,1,['error'],['error-in-thisroot-csh-during-installation']
Availability,"Similar (minus the warnings) for boost 1.82.0:; ```; root [0] gInterpreter->AddIncludePath(""-I/Users/axel/build/boost/boost_1_82_0""); root [1] #include <boost/program_options.hpp>; In file included from ROOT_prompt_1:1:; In file included from /Users/axel/build/boost/boost_1_82_0/boost/program_options.hpp:17:; In file included from /Users/axel/build/boost/boost_1_82_0/boost/program_options/parsers.hpp:295:; In file included from /Users/axel/build/boost/boost_1_82_0/boost/program_options/detail/parsers.hpp:9:; /Users/axel/build/boost/boost_1_82_0/boost/program_options/detail/convert.hpp:36:55: error: reference to unresolved using declaration; const std::codecvt<wchar_t, char, std::mbstate_t>& cvt);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/include/c++/v1/cuchar:49:1: note: using declaration annotated with 'using_if_exists' here; using ::mbstate_t _LIBCPP_USING_IF_EXISTS;; ^; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12762#issuecomment-1536455359:599,error,error,599,https://root.cern,https://github.com/root-project/root/issues/12762#issuecomment-1536455359,1,['error'],['error']
Availability,"Since @hahnjo is OK to close it, we close it. Please do not hesitate to re-open in case more information becomes available that suggests to revisit this decision.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7977#issuecomment-1925269197:113,avail,available,113,https://root.cern,https://github.com/root-project/root/issues/7977#issuecomment-1925269197,1,['avail'],['available']
Availability,"Since the differences to my [original repo](https://github.com/guitargeek/tmva-to-xgboost/blob/main/tmva2xgboost.cpp) are minimal, I think we don't lose much by closing this PR in order to clean up the list of open PRs a little bit. I don't think there is much of a usecase either: the TMVA xml format for BDTs is becoming increasingly rare, and in any case it can already be evaluated with ROOT. Also, I don't really see why ROOT needs yet another intermediate BDT representation. Is the existing TMVA BDT evaluator that reads the XML files not good enough? Before introducing new data classes and increasing the maintenance burden even more, why not bring the existing classes up to speed (although I think the usecase is not strong enough to actually to this).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8873#issuecomment-2043899538:614,mainten,maintenance,614,https://root.cern,https://github.com/root-project/root/pull/8873#issuecomment-2043899538,1,['mainten'],['maintenance']
Availability,"Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14865#issuecomment-1973061065:10,error,errors,10,https://root.cern,https://github.com/root-project/root/pull/14865#issuecomment-1973061065,1,['error'],['errors']
Availability,"Since the failing test (roottest-root-aclic-misc-runrelpath) is related to include path directive (and how they reach ACLiC), it is plausible that the failure is related. Could you verify whether or not it is?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1466#issuecomment-352082562:151,failure,failure,151,https://root.cern,https://github.com/root-project/root/pull/1466#issuecomment-352082562,1,['failure'],['failure']
Availability,"Since there was no follow-up on the comments, no reply by the author on the ping, and now there are also merge conflicts, I'd suggest to close this PR. Thanks anyway @rtlprmft for your suggestion, and in case this becomes an issue for you again: feel free to open a GitHub issue or a new PR! Or reopen this one if you want. Cheers,; Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6316#issuecomment-1883188180:76,ping,ping,76,https://root.cern,https://github.com/root-project/root/pull/6316#issuecomment-1883188180,1,['ping'],['ping']
Availability,"Since this is a very central part for fitting, you should see lots of test failures if you get it wrong.; Not, though, if you get it only slightly wrong, so keep thinking about tests. :-D. Good luck with your new project, there are lots of things to do! 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7126#issuecomment-773114579:75,failure,failures,75,https://root.cern,https://github.com/root-project/root/pull/7126#issuecomment-773114579,1,['failure'],['failures']
Availability,Single failure unrelated to Cloudfare update.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1527#issuecomment-382170125:7,failure,failure,7,https://root.cern,https://github.com/root-project/root/pull/1527#issuecomment-382170125,1,['failure'],['failure']
Availability,"Small update to give further context, the following seemingly similar but subtly different snippet works also for ROOT 6.32. ```python; import ROOT. def main():; ROOT.gInterpreter.ProcessLine(""const auto myvec = TVectorT<float>();""); print(ROOT.myvec). if __name__ == ""__main__"":; raise SystemExit(main()); ```. And it is clear that in this case ProcessLine tries much harder than Declare to automatically load libraries that might be necessary to evaluate the line. Also, the reproducer from the issue description fails with the same error in ROOT latest master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16601#issuecomment-2393259545:535,error,error,535,https://root.cern,https://github.com/root-project/root/issues/16601#issuecomment-2393259545,1,['error'],['error']
Availability,"So @bluehood , about the cases you described, my comments:; This is the situation as I understand it:. - horrible template errors in instantiating a RVec: fixed and tested -> YES; - reading vector<bool> in RDataFrame:; - with jitting: fixed and tested -> YES; - in compiled code: not tested but works..? -> YES; - reading bool[n] branches: now impossible..? -> YES; - writing a bool[n] with RDataFrame: now impossible..? -> YES; - writing vector<bool> with RDataFrame:; - with jitting: not tested but works..? -> YES; - in compiled code: tested and works -> YES. I agree that increasing the test coverage is necessary for the cases ""not tested but works"" given that if something is not tested, it does not work :) (even if we not testing that is independent from this PR)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2186#issuecomment-396541538:123,error,errors,123,https://root.cern,https://github.com/root-project/root/pull/2186#issuecomment-396541538,1,['error'],['errors']
Availability,"So @jblomer naively asked ""what about ZLIB"", and it turns out to be equally wrong... I also added a test that at least catches the compression side of things. For the decompression, it's a bit harder because it's not clear how to check if the library read more bytes than it should have (without it running into errors because of decompression errors).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14523#issuecomment-1923740442:312,error,errors,312,https://root.cern,https://github.com/root-project/root/pull/14523#issuecomment-1923740442,2,['error'],['errors']
Availability,"So I actually found that the problem can be fixed by reverting some changes we made to the xRooNodeIterator back in December, where we were trying to fix a cppcheck error about returning a temporary. The problem is in fact a one line fix in xRooNode.h, replacing:. ```; decltype(auto) operator*() const; ```. with. ```; const std::shared_ptr<xRooNode>& operator*() const; ```. This makes cppcheck unhappy again, but the problem is fixed. I've actually now asked about this cppcheck error on https://stackoverflow.com/questions/78349719 and waiting to see if anyone responds - so far one person suggests it could be a false positive.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15269#issuecomment-2066123594:165,error,error,165,https://root.cern,https://github.com/root-project/root/issues/15269#issuecomment-2066123594,2,['error'],['error']
Availability,So I can reproduce the error in 32 bit mode. But the 64 bit mode fails as previously reported. Le's see how it goes after the LLVM upgrade.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-1198009617:23,error,error,23,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-1198009617,1,['error'],['error']
Availability,"So I cannot reproduce the error with the recipe you give. But looking at you log file, I see you set more environment variables. That is:; ```; set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build; ```; Without those variables the build works just fine. This is maybe related to https://github.com/root-project/root/issues/9445; I'm now trying with the same variables to see if it fails the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15321#issuecomment-2077012452:26,error,error,26,https://root.cern,https://github.com/root-project/root/issues/15321#issuecomment-2077012452,1,['error'],['error']
Availability,"So I deleted my freshly installed ROOT and pulled the newest version from the repository. When running. `cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src`. I got an error. `-- Looking for VDT; CMake Error at cmake/modules/FindVdt.cmake:48 (file):; file STRINGS file ""/opt/root/install/include/vdt/vdtMath.h"" cannot be read.; Call Stack (most recent call first):; cmake/modules/SearchInstalledSoftware.cmake:18 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1591 (find_package); CMakeLists.txt:327 (include). -- Could NOT find Vdt: Found unsuitable version ""0.3"", but required is at least ""0.4"" (found /opt/root/install/include); -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH; -- Switching ON 'builtin_vdt' option; `. As I wrote, the directory */opt/root/install* does not exist. When running the same command for the second time, the error is gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13101#issuecomment-1609124224:200,error,error,200,https://root.cern,https://github.com/root-project/root/issues/13101#issuecomment-1609124224,3,"['Error', 'error']","['Error', 'error']"
Availability,"So I produced the documentation locally, and compressed that (gz took less than 5 minutes, while xz around 20 minutes). File sizes are different:. > 701M rootdoc.tar.gz; 458M rootdoc.tar.xz. so the latter is 240Mb (35\%) less than the former. It seems that .xz is worthy to be offered for download. I'm pretty sure that is present in most recent distributions (it was in Fedora already several years ago when I used that). If we talk about usability, bandwidth is an important parameter too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7295#issuecomment-787148271:289,down,download,289,https://root.cern,https://github.com/root-project/root/issues/7295#issuecomment-787148271,1,['down'],['download']
Availability,So a) this needs some refinement :-) (see the compilation errors) and b) the functions you mention are defined in the source file. They do not need to show up in the Linkdef file anymore; these are leftovers from ROOT 5.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1510#issuecomment-357778946:58,error,errors,58,https://root.cern,https://github.com/root-project/root/pull/1510#issuecomment-357778946,1,['error'],['errors']
Availability,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2854#issuecomment-434252716:46,reliab,reliable,46,https://root.cern,https://github.com/root-project/root/pull/2854#issuecomment-434252716,3,['reliab'],['reliable']
Availability,"So for Windows, on Jenkins, the error was `Out of diskspace` and in the new CI, the test failure is the same on both architectures: `gtest-core-metacling-test-TClingTest`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14645#issuecomment-1985243411:32,error,error,32,https://root.cern,https://github.com/root-project/root/pull/14645#issuecomment-1985243411,2,"['error', 'failure']","['error', 'failure']"
Availability,"So here's the main snippet:; ```cpp; root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(); Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available; Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available; Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available; Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available; Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available; (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0; root [1] auto options = c->GetWriteOptions();; root [2] options.SetCompression(0);; root [3] c->SetWriteOptions(options);; root [4] c->SetMaxEntries(200000);; root [5] c->Import().ThrowOnError();; ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`; - `output2.root` - nothing; - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`; - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:; ```bash; Apptainer> ls -al output*; -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root; -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root; -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root; -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root; ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12606#issuecomment-1499362551:250,avail,available,250,https://root.cern,https://github.com/root-project/root/issues/12606#issuecomment-1499362551,5,['avail'],['available']
Availability,"So indeed this other test does not work; ```python; import ROOT. ROOT.gInterpreter.Declare(r'''; struct A{; int mA{42};; A() {}; A(const A&) = delete;; template<typename T = int>; A(A &&) {}; };; int foo(A a = A{}) { return a.mA; }; '''). print(ROOT.foo()); ```; ```; input_line_36:18:45: error: call to deleted constructor of 'A'; new (ret) (int) (((int (&)(A))foo)(*(A*)args[0]));; ^~~~~~~~~~~~; input_line_35:5:5: note: 'A' has been explicitly marked deleted here; A(const A&) = delete;; ^; ```. Also, it seems to me that indeed in the case of a templated move constructor, the AST generated by clang simply does not report it in the class definition data, see [this example](https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAMzwBtMA7AQwFtMQByARg9KtQYEAysib0QXACx8BBAKoBnTAAUAHpwAMvAFYTStJg1DIApACYAQuYukl9ZATwDKjdAGFUtAK4sGIAMykrgAyeAyYAHI%2BAEaYxCAA7KQADqgKhE4MHt6%2BASlpGQKh4VEssfFJdpgOmUIETMQE2T5%2BgVU1AnUNBMWRMXGJtvWNzbltwz1hfWUDCQCUtqhexMjsHAoExF4OANQAgiYJVhp7O2c7YQQ7LAdHkmaHACIm/sen53sQczuHVgnPJ3O%2BwgaAYG325gAbN8Xo8dlh6ARMC83kCkSxkgYkS83AQAJ7JRisTA7AAqP38cMuL2wJkBHwgpyhUJhRyedNuz1eHMuO34qEZOyYFLhtz%2Bj1ZFh2xEwBGWDCFADobiifv8ORwFrROABWXh%2BDhaUioThuazWHYKJYrEnmfw8UgETSahYAaxAZh1%2Bk4kn1zuNnF4ChAGkdzoWcFgSDQGLocXIlBjyTj8WQBiMXEhGiYCiUjT4dCRxGDEGi/uiYQaeM4DorzGIeIA8tFtNUndxeDG2IJGwxaNXDbwsNEvMA3GJaMGO6QsCxDMBxIOZ3gZTUAG6YKdGzCqapeJE13iXTDape0PDRYhVjxYf2bPAsQ8LKgGYAKABqeEwAHdG4SDQ6/CCCIYjsFIMiCIoKjqEuuhcPo84oOalj6BewaQAsqDJI4AhTrwqAbsQxB4Fg6FfLYJ5tpkLgMO4ngtBIZhBLRvSlOUICQvk6Q4Vk9G5FwTGpNxmSsf08Sce0PFdCMfF%2BAJFH2FJEyiTM4lDN0oxyUxGzdCp7HQosyyrBIWq6n6S4mhwOyqAAHJCAC0kKSDsabzjsmaKhonk7BAOZ5jxCjfBAuCECQPxmPacy8O2WhzG6HpeqevqkAaRqWUGIZhoOEYwIgIBLAQyT7gmIKoLG9DEBExKcLZDlOTswDIMg7n%2BIqZi8Jg%2BBEMR6B6EBwiiOI4H9VBaj%2BnBpDfleyRPt6HB6il/qWY2%2B5FVcqBUNZdmOc5rlGO5kKed5vm5nEAVBR45VxOFkXReG8VcIqCTPTqZhmAAnP4OrPe9NmZpxSXmWlga2JlMWaqQkZ5TmBAlUmKZVWwNXbfVe3AAdR0aD5flnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14426#issuecomment-1917903939:289,error,error,289,https://root.cern,https://github.com/root-project/root/pull/14426#issuecomment-1917903939,1,['error'],['error']
Availability,"So it produces a ROOT file with any type of created object in it, then a user can download it? Is it a read-only file? What can users do with it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14614#issuecomment-1932205310:82,down,download,82,https://root.cern,https://github.com/root-project/root/pull/14614#issuecomment-1932205310,1,['down'],['download']
Availability,"So it wasn't what I initially thought, but it seems to work now on all platforms (except the spurious failure on Windows).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13565#issuecomment-1826083108:102,failure,failure,102,https://root.cern,https://github.com/root-project/root/pull/13565#issuecomment-1826083108,1,['failure'],['failure']
Availability,"So now I can confirm that this breakage is introduced in https://reviews.llvm.org/D130058 . However, it seems that it's not a bug but a new diagnostic clang recently added. According to the description:; > [DR2338](https://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#2338) clarified that it was undefined behavior to set the value outside the range of the enumerations values for an enum without a fixed underlying type. We may want to fix this in our code as it's undefined behavior, but if not there's also an ongoing patch that downgrades this error to a warning: https://reviews.llvm.org/D131307",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11128#issuecomment-1207349562:541,down,downgrades,541,https://root.cern,https://github.com/root-project/root/issues/11128#issuecomment-1207349562,2,"['down', 'error']","['downgrades', 'error']"
Availability,"So that's because `std::sqrt` doesn't have an overload for Vc types. The solution is the following:; ```c++; T SomeFunc() {; using std::sqrt;; return sqrt(fX);; }; ```; i.e. keep `sqrt` unqualified such that ADL (argument-dependent lookup, fixing Vc) can happen, but make `std::sqrt` available through the local (!) `using namespace std::` or better yet `using std::sqrt` if that builds everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7909#issuecomment-822573883:284,avail,available,284,https://root.cern,https://github.com/root-project/root/pull/7909#issuecomment-822573883,1,['avail'],['available']
Availability,"So the current error handling is a bit messed up. What happens for my current test case is as follows:; -cppyy tries to instantiate the template from here: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628; this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument.; -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:; https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280; (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr); -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814; But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11854#issuecomment-1456059333:15,error,error,15,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1456059333,1,['error'],['error']
Availability,So the error is:; ```; CMake Error at CMakeLists.txt:86 (message):; Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or; installation folder. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492#issuecomment-1919544338:7,error,error,7,https://root.cern,https://github.com/root-project/root/issues/14492#issuecomment-1919544338,2,"['Error', 'error']","['Error', 'error']"
Availability,"So the problem happens at end Lumi so my guess is we had an exception and the system is trying to shut down and a task didn't run when it should have. So if I'm correct, then there would be a problem in CMSSW with not properly handling an exception. BUT it also means ROOT is now throwing an exception we can't handle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-814360927:103,down,down,103,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-814360927,1,['down'],['down']
Availability,So there should only one real failure mac11.0/cxx17. What is special in this setup? Does it have python3 available or only python2?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8336#issuecomment-870456745:30,failure,failure,30,https://root.cern,https://github.com/root-project/root/pull/8336#issuecomment-870456745,2,"['avail', 'failure']","['available', 'failure']"
Availability,"So this change at least breaks when searching for nested namespaces, close it now...; ```; Processing /data/sftnight/workspace/root-pullrequests-build/root/tutorials/dataframe/df014_CSVDataSource.C...; In file included from input_line_10:1:; /data/sftnight/workspace/root-pullrequests-build/root/tutorials/dataframe/df014_CSVDataSource.C:30:20: error: no member named 'RDF' in namespace 'ROOT'; auto df = ROOT::RDF::MakeCsvDataFrame(fileName);; ~~~~~~^; CMake Error at /data/sftnight/workspace/root-pullrequests-build/build/RootTestDriver.cmake:227 (message):; error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10969#issuecomment-1186049678:345,error,error,345,https://root.cern,https://github.com/root-project/root/pull/10969#issuecomment-1186049678,3,"['Error', 'error']","['Error', 'error']"
Availability,"So this fixes https://root-forum.cern.ch/t/f26-v6-10-00-patches-invalid-preprocessing-directive/26197 but if experiments rely on this line, then probably we are stuck on this side. We could at least try to make it less aggressive when searching (so, forbid some of the binary directories and CMake internal directories) to prevent these random configuration failures due to conflicting file names in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/948#issuecomment-329091340:358,failure,failures,358,https://root.cern,https://github.com/root-project/root/pull/948#issuecomment-329091340,1,['failure'],['failures']
Availability,"So unfortunately, I have no way to check with the nightly (apart if I would change/redevelop a new program). The reason is that the workspace used in my example includes RooTwoSidedCBShape, which is unknown to root, so one needs to switch on first a tool that allows to access to RooTwoSidedCBShape. Such tools are not available with recent root versions.; So I just trust that it works but can't check. If so, maybe you may put as ""resolved"". With root 6.29.01, this gives :. [escalier@lxplus745 /afs/cern.ch/work/e/escalier/public/ForOthers/ProblemMemory] root -b -q ""Minimum.C+()"" |tee log_6.29.01; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 27 2023, 00:37:00 |; | From heads/master@v6-29-01-357-g4ef94f4 |; | With g++ (GCC) 11.3.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. Processing Minimum.C+()...; Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/work/e/escalier/public/ForOthers/ProblemMemory/./Minimum_C.so. Survey Memory, beginning of program; res memory=481.965 Mbytes; vir memory=760.32 Mbytes; Warning in <TClass::Init>: no dictionary for class RooTwoSidedCBShape is available; Survey Memory, after open file; Error in <TBufferFile::ReadObject>: trying to read an emulated class (RooTwoSidedCBShape) to store in a compiled pointer (TObject); Error in <TBufferFile::ReadObject>: trying to read an emulated class (RooTwoSidedCBShape) to store in a compiled pointer (TObject); Error in <TBufferFile::ReadObject>: trying to read an emulated class (RooTwoSidedCBShape) to store in a compiled pointer (TObject); Error in <TBufferFile::ReadObject>: trying to read an emulated class (RooTwoSidedCBShape) to store in a compiled pointer (TObject); Error in <TBufferFile::ReadObject>: trying to read an emula",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8984#issuecomment-1406408841:319,avail,available,319,https://root.cern,https://github.com/root-project/root/issues/8984#issuecomment-1406408841,1,['avail'],['available']
Availability,"So we do have a real problem but where I am confused is ""if our failure case is due to unlocked locks in the child process"" why is it seen only at tear down? I.e. would the very first use of the lock resources be already held back. If using `_exit` is the workaround (solution?) then this means that no cleanup can be executed (even-though it might be needed). > However, I'm not sure if we need to close TFiles because the workers don't open them. Do we have complete control over what the child process executes (i.e. no user code whatsoever?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7075#issuecomment-764813821:64,failure,failure,64,https://root.cern,https://github.com/root-project/root/pull/7075#issuecomment-764813821,2,"['down', 'failure']","['down', 'failure']"
Availability,"So, I cloned the ROOT repo in the folder `docgmake`. Then in that cloned folder I did `gh pr checkout 15160` to get this branch. Then `cd ..; mkdir docgmake-bin; cd docgmake-bin`. And in that bin folder I issued the command:. ```; cmake ../docgmake -Ddocu=ON -DDOCU_LOCATION=~/rootdoc -DDOCU_THREADS=8 -DDOCU_LOGFILE=/tmp/warnings.txt -DDOXYGEN_EXECUTABLE=/Users/couet/bin/doxygen -DDOCU_INPUT=""./mainpage.md;../../core""; ```. then `make -j8`. which gives me:. ```; ...; [100%] Built target modules_idx; [100%] Generating tutorials/hsimple.root. Processing hsimple.C...; hsimple : Real Time = 0.23 seconds Cpu Time = 0.08 seconds; (TFile *) 0x7f77c78bd300; [100%] Built target hsimple; /bin/sh: -DROOT_COMMAND=\""ROOT_root_CMD-NOTFOUND\"": command not found; make[2]: *** [documentation/doxygen/CMakeFiles/Preparation] Error 127; make[1]: *** [documentation/doxygen/CMakeFiles/Preparation.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [100%] Built target PreparationPyz; make: *** [all] Error 2; ```; So it seems the `gmake` command was wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15160#issuecomment-2074856358:817,Error,Error,817,https://root.cern,https://github.com/root-project/root/pull/15160#issuecomment-2074856358,3,['Error'],['Error']
Availability,"So, there were some developments: it seems that trying to catch an exception lead to no proper return for GetEntry.; Removing the try/except i have now a proper `-1` result on GetEntry and i do have this:; ```; ALIBUILD##[Monday 25.10.21 19:18] adrian@hal : ~/work/jalien-cache-manager (master) $; ./tfile_check.py parse broken_AO2D.root step 100000; Error in unzip ZSTD. Type = Corrupted block detected . Code = 18446744073709551596; Error in <TBasket::ReadBasketBuffers>: fNbytes = 6787763, fKeylen = 72, fObjlen = 7622608, noutot = 0, nout=0, nin=6787691, nbuf=7622608; Error in <TBranch::GetBasket>: File: broken_AO2D.root at byte:240631153, branch:fZ, entry:0, badread=1, nerrors=1, basketnumber=0; DF_2913970966704988325/O2track::Entry(0) -> result: -1; ALIBUILD##[Monday 25.10.21 19:18] adrian@hal : ~/work/jalien-cache-manager (master) $; echo $?; 5; ```; The file unfortunately is quite big: https://cernbox.cern.ch/index.php/s/YM3ONVhEVa72KNX; and for reference the code that i use for testing is: https://github.com/adriansev/AO2Dproto/blob/0eff5a37fd0622767ee01b2b3da84b29e996a1ef/tfile_check.py",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9154#issuecomment-951092615:351,Error,Error,351,https://root.cern,https://github.com/root-project/root/issues/9154#issuecomment-951092615,4,"['Error', 'echo']","['Error', 'echo']"
Availability,Solution: don't run PR builds while I reboot root.cern! I.e.: sorry! :-(. But shouldn't we wait until the PR builds are green? Simply restarting should help. Let me know!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3218#issuecomment-451901816:38,reboot,reboot,38,https://root.cern,https://github.com/root-project/root/pull/3218#issuecomment-451901816,1,['reboot'],['reboot']
Availability,Solving https://github.com/root-project/root/issues/9900 will remove the error and allow this PR to proceed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9883#issuecomment-1041012033:73,error,error,73,https://root.cern,https://github.com/root-project/root/pull/9883#issuecomment-1041012033,1,['error'],['error']
Availability,"Some headers and source files are needed from Math, and a header from Fit. I could copy them in as part of the build like I do now with the standalone dir? They have to be in the minuit directory, since they need to be available if ROOT is not there. Edit: That would be cleaner, going to try that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-369568357:219,avail,available,219,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-369568357,1,['avail'],['available']
Availability,"Some insight into when/where this actually causes a problem. Take for example a recent CMSSW release where we indeed end up with a bunch of stuff in the include path starting with ""/data/cmsbld/jenkins/..."". If I try to do anything with gSystem->CompileMacro then things are fine if /data/cmsbld doesn't exist on the machine where I'm running, but if I create that directory and set permissions to make it inaccessible then I get a permission denied error when compiling a macro. This also explains why I was having problems with this specifically in my singularity images, because in this case the build path was in /root/root_build, where /root still exists but is inaccessible by normal users in the final singularity image.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108#issuecomment-967755729:450,error,error,450,https://root.cern,https://github.com/root-project/root/issues/7108#issuecomment-967755729,1,['error'],['error']
Availability,"Some more points gathered during a debug session:. - The problem appears only on ARM/Linux, not on ARM/Mac; - The streamer info output; ```; [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]; ```; does not seem to indicate a problem because the same list of streamer elements also contains the expected; ```; o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Subset type; ```; - If the class `o2::tpc::CalArray<o2::tpc::PadFlags>` is added to the dictionaries (Linkdef), the stacktrace changes and the crash becomes reproducible. In this case, there is an error writing beyond vector boundaries.; - The next step is to try to reproduce the crash with a debug build of ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16312#issuecomment-2315484053:595,error,error,595,https://root.cern,https://github.com/root-project/root/issues/16312#issuecomment-2315484053,1,['error'],['error']
Availability,Some tests are failing with `Error: Value cannot be null. (Parameter 'ContainerId')` not sure if it is my fault...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16640#issuecomment-2401817859:29,Error,Error,29,https://root.cern,https://github.com/root-project/root/pull/16640#issuecomment-2401817859,2,"['Error', 'fault']","['Error', 'fault']"
Availability,"Some updates:. > Unfortunately I do not have access to such a system but if you can build with `-DLLVM_BUILD_TYPE=Debug` the function `isSharedLibrary` [here](https://github.com/root-project/root/blob/d75ee349cb75d743d41e99cca97d5ef230f9207e/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp#L248) should return `true` for `branchoverwrite`. > ; > If that is the case then there might be a problem with the Elf representation (or ACLiC is missing some compiler/linker flag). ```1: libFullPath = {static npos = 18446744073709551615, Data = 0x5555579a44b0 ""/build_root/roottest/root/dataframe/test_snapshot_manytasks"", Length = 59}; (gdb) p Error; $6 = {_M_value = 0, _M_cat = 0x7ffff7917180 <(anonymous namespace)::system_category_instance>}; (gdb) list; 260	 file_magic Magic;; 261	 const std::error_code Error = identify_magic(libFullPath, Magic);; 262	 if (exists); 263	 *exists = !Error;; 264	; 265	 return !Error &&; 266	#ifdef __APPLE__; 267	 (Magic == file_magic::macho_fixed_virtual_memory_shared_lib; 268	 || Magic == file_magic::macho_dynamically_linked_shared_lib; 269	 || Magic == file_magic::macho_dynamically_linked_shared_lib_stub; (gdb) p Magic; $7 = {V = llvm::file_magic::elf_shared_object}; ```. There is nothing wrong with the implementation per se. For some reason the system compiles the `test_snapshot_manytasks` executable with a file magic which corresponds to a shared object. Although, bash correctly recognizes the right kind:; ```file $ROOTSYS/lib/libCore.so; /build_root/lib/libCore.so: ELF 64-bit LSB shared object, x86-64, version 1 (GNU/Linux), dynamically linked, BuildID[sha1]=e29464343a374abe0b0e4149350d4a57f8383b3a, with debug_info, not stripped; [root@39b36d564292 dataframe]# file -i /build_root/roottest/root/dataframe/test_snapshot_manytasks; /build_root/roottest/root/dataframe/test_snapshot_manytasks: application/x-pie-executable; charset=binary```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7366#issuecomment-863174792:649,Error,Error,649,https://root.cern,https://github.com/root-project/root/issues/7366#issuecomment-863174792,4,['Error'],['Error']
Availability,"Sorry @bellenot that was my fault! I started the second-to last build before Rahul forked roottest. But for the last build he did it, and there were no Windows failures as far as I can tell.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7766#issuecomment-815522475:28,fault,fault,28,https://root.cern,https://github.com/root-project/root/pull/7766#issuecomment-815522475,2,"['failure', 'fault']","['failures', 'fault']"
Availability,"Sorry @ferdymercury - let's do it! Can you ping me once you have resolved the conflicts, please, ideally outside GitHub (where I don't manage to survive with the notification volume...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10366#issuecomment-1594752222:43,ping,ping,43,https://root.cern,https://github.com/root-project/root/pull/10366#issuecomment-1594752222,1,['ping'],['ping']
Availability,"Sorry Axel, what I meant is that if you take the first reproducer, the one linked in my first post, and in that code you replace `std::pair<int, MyClass>` with e.g. `std::array<MyClass, 2>` then the error vanishes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10512#issuecomment-1118488300:199,error,error,199,https://root.cern,https://github.com/root-project/root/issues/10512#issuecomment-1118488300,1,['error'],['error']
Availability,"Sorry I first used yapf to format, then the remaining errors I fixed myself",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10862#issuecomment-1181238172:54,error,errors,54,https://root.cern,https://github.com/root-project/root/pull/10862#issuecomment-1181238172,1,['error'],['errors']
Availability,"Sorry I read the backtrace with brain on only now. As this happens too late, after libXrdCl.so was unloaded, can this be done say by a callback in the tear-down of xrootd-client or else in whatever TNetXNGFile's library is, through static destruction?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8767#issuecomment-890328845:156,down,down,156,https://root.cern,https://github.com/root-project/root/issues/8767#issuecomment-890328845,1,['down'],['down']
Availability,"Sorry about that. I don't see how this change can lead to the errors you see, but anyway, how can I reproduce the error?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13793#issuecomment-1772186870:62,error,errors,62,https://root.cern,https://github.com/root-project/root/pull/13793#issuecomment-1772186870,2,['error'],"['error', 'errors']"
Availability,"Sorry for my late reply. Thank you very much for your answer. . I think using TArayD is an improvement than using double pointers, but I don't see any reason why not using a more standard std::vector. ; I understand also for the interface your preference for an API similar to the current TGraphAsymmError. Thank you for explaining the meaning of SetDimensionEY, I think the name is not super clear, I would maybe just call it SetEY. ; One comment on the passed array, I think the pointers should be passed as cont , since they will not be modified. . One other comment I have , I will not have a method to Set the error dimension. I think it will be better instead a AddError method that will increment by one the dimension and add all the point errors. This I think it will be more useful",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-558161625:615,error,error,615,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-558161625,2,['error'],"['error', 'errors']"
Availability,"Sorry for not addressing this issue earlier. Although I don't remember the reasoning, I believe it was concluded that the CI should not be red on test errors. If this is to be changed all there is to it is changing [this line](https://github.com/root-project/root/blob/aae1cd064679f440ad80f39e4ee56bb0c1d9d396/.github/workflows/root-ci-config/build_root.py#LL252C22-L252C22):. ```diff. 251 if result != 0:; - 252 print_warning(""Some tests failed""); + 252 die(result, ""Some tests failed"", shell_log); ```. Would like @Axel-Naumann's input before closing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12307#issuecomment-1542341565:151,error,errors,151,https://root.cern,https://github.com/root-project/root/issues/12307#issuecomment-1542341565,1,['error'],['errors']
Availability,"Sorry for the late reply!. I would like to understand why exactly the tests fail. We're dealing with summation errors like these all the time in RooFit. Imho, we need to understand as exactly as possible where they come from and then document that. If we cannot do that, then we should treat them as errors, until we understand the fundamental limits, e.g. from hardware summation implementations. I can well imagine that that is the root cause here, but I would like to see some hard confirmation of that. The reason I'm so insistent on this is that I've spent the past year trying to unravel subtle bugs involving multiple summations that may either fail because of implementation issues (like e.g. was the case for KahanSum) or because of fundamental limits in algorithms (Kahan summation also still has errors) or because of fundamental hardware limits or single vs double vs long double precision, etcetera. Trying to pin down exactly what is going on is a huge pain. Those are my 2 cents here, sorry for being a pain in the ass :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389#issuecomment-1505061910:111,error,errors,111,https://root.cern,https://github.com/root-project/root/pull/12389#issuecomment-1505061910,4,"['down', 'error']","['down', 'errors']"
Availability,"Sorry for the radio silence on this: other priorities took over and this wasn't a showstopper at the time. I have just verified the same failure with 66df8b8ee6b336197678950c4f9c83f2c479662a, and will apply the suggested patch to that and see where we get to.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377559624:137,failure,failure,137,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377559624,1,['failure'],['failure']
Availability,"Sorry! We should have not made the rapidyaml backend for RooFit JSON available in the release. It is not tested and only there for dev purposes. This PR will fix this:; https://github.com/root-project/root/pull/15247. I'll backport it to ROOT 6.32, 6.30 and 6.28.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15118#issuecomment-2061524144:69,avail,available,69,https://root.cern,https://github.com/root-project/root/issues/15118#issuecomment-2061524144,1,['avail'],['available']
Availability,"Sorry, I missed this before, please ping me in the issue description or add me as assignee next time to ensure I see it. Gentoo has `-fPIE` enabled by default in GCC, and I've had to make changes in ROOT already because of some tests failing due to that. If the patch fixes it for Arch, it should fix it for Gentoo. I can pick up the patch in 6.24.06, but I think this is important enough that a new patch release would be nice to make sure the fix hits as many people as possible. If there's a quick way to test this, let me know, I can test and report on the results.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7366#issuecomment-992271250:36,ping,ping,36,https://root.cern,https://github.com/root-project/root/issues/7366#issuecomment-992271250,1,['ping'],['ping']
Availability,"Sorry, but I strongly disagree. `TH1F` implements `Fill(x, w)` via `AddBinContent(bin, w)`:; ```c++; void AddBinContent(Int_t bin, Double_t w) override; {; fArray[bin] += Float_t (w);; }; ```. If one wants to be warned about overflows, it could be changed to; ```c++; void AddBinContent(Int_t bin, Double_t w) override; {; float old = fArray[bin];; fArray[bin] += Float_t (w);; float inc = fArray[bin] - old;; if (inc != (float) w) { // could be done with a non-exact comparison with some tolerance; std::cerr << ""Warning: TH1F::Fill(...) failed to increment the bin due to limited floating point precision\n"";; }; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671#issuecomment-2047035457:489,toler,tolerance,489,https://root.cern,https://github.com/root-project/root/issues/6671#issuecomment-2047035457,1,['toler'],['tolerance']
Availability,"Sorry, it's my fault @HadrienG2 , I didn't have a fork of roottest, so the build on Windows failed. I fixed it, so it should build now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4931#issuecomment-582412105:15,fault,fault,15,https://root.cern,https://github.com/root-project/root/pull/4931#issuecomment-582412105,1,['fault'],['fault']
Availability,"Sorry, latest failures are probably me trying to make Jenkins rebase rather than checkout the merge head from GitHub. Please re-run if needed. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2378#issuecomment-409211929:14,failure,failures,14,https://root.cern,https://github.com/root-project/root/pull/2378#issuecomment-409211929,1,['failure'],['failures']
Availability,"Sorry, still no luck for me even after this change:; ```; [ 93%] Automatic MOC for target ROOTQt5WebDisplay; [ 93%] Built target ROOTQt5WebDisplay_autogen; [ 93%] Automatic MOC for target RootQt5WebObjs; [ 93%] Built target RootQt5WebObjs_autogen; [ 93%] Building CXX object gui/qt5webdisplay/CMakeFiles/RootQt5WebObjs.dir/RootQt5WebObjs_autogen/mocs_compilation.cpp.o; In file included from /home/amadio/build/gcc7.3/gui/qt5webdisplay/RootQt5WebObjs_autogen/mocs_compilation.cpp:2:0:; /home/amadio/build/gcc7.3/gui/qt5webdisplay/RootQt5WebObjs_autogen/EWIEGA46WW/moc_rootwebpage.cpp:13:2: error: #error ""This file was generated using the moc from 4.8.7. It""; #error ""This file was generated using the moc from 4.8.7. It""; ^~~~~; /home/amadio/build/gcc7.3/gui/qt5webdisplay/RootQt5WebObjs_autogen/EWIEGA46WW/moc_rootwebpage.cpp:14:2: error: #error ""cannot be used with the include files from this version of Qt.""; #error ""cannot be used with the include files from this version of Qt.""; ^~~~~; /home/amadio/build/gcc7.3/gui/qt5webdisplay/RootQt5WebObjs_autogen/EWIEGA46WW/moc_rootwebpage.cpp:15:2: error: #error ""(The moc has changed too much.)""; #error ""(The moc has changed too much.)""; ^~~~~; In file included from /home/amadio/build/gcc7.3/gui/qt5webdisplay/RootQt5WebObjs_autogen/mocs_compilation.cpp:3:0:; /home/amadio/build/gcc7.3/gui/qt5webdisplay/RootQt5WebObjs_autogen/EWIEGA46WW/moc_rootwebview.cpp:13:2: error: #error ""This file was generated using the moc from 4.8.7. It""; #error ""This file was generated using the moc from 4.8.7. It""; ^~~~~; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1623#issuecomment-367680662:590,error,error,590,https://root.cern,https://github.com/root-project/root/pull/1623#issuecomment-367680662,12,['error'],['error']
Availability,"Sorry, there is too much noise in the CI results. What is the actual error with this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16505#issuecomment-2373194056:69,error,error,69,https://root.cern,https://github.com/root-project/root/pull/16505#issuecomment-2373194056,1,['error'],['error']
Availability,"Sorry, this is not true. The man pages include rootcling, hadd, talk about makefiles, root5, pq2 caches and many other things. This is not minimal maintenance. As a matter of fact, it is already outdated and this since a long while. ; Here I am talking about improving documentation concentrating efforts on a single source of information, the total amount of work needed is the same but differently organised...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1487#issuecomment-357188999:147,mainten,maintenance,147,https://root.cern,https://github.com/root-project/root/pull/1487#issuecomment-357188999,1,['mainten'],['maintenance']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.67 sec ; - [2022-09-01T16:38:07.874Z] 780/2403 Test #489: tutorial-dataframe-df014_CSVDataSource ............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.53 sec ; - [2022-09-01T16:38:09.776Z] 785/2403 Test #493: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 1.68 sec ; - [2022-09-01T16:38:10.805Z] 786/2403 Test #497: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.40 sec ; - [2022-09-01T16:38:11.099Z] 789/2403 Test #500: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.45 sec ; - [2022-09-01T16:38:11.401Z] 790/2403 Test #501: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 0.48 sec ; - [2022-09-01T16:38:11.709Z] 793/2403 Test #503: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 0.52 sec ; - [2022-09-01T16:38:11.709Z] 794/2403 Test #502: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.64 sec ; - [2022-09-01T16:38:12.006Z] 795/2403 Test #504: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 0.60 sec ; - [2022-09-01T16:38:23.320Z] 969/2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1234536478:1332,Error,Error,1332,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1234536478,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.73 sec ; - [2022-08-24T14:46:54.099Z] 785/2403 Test #493: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 1.80 sec ; - [2022-08-24T14:46:55.672Z] 789/2403 Test #497: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.61 sec ; - [2022-08-24T14:46:55.672Z] 790/2403 Test #500: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.64 sec ; - [2022-08-24T14:46:56.302Z] 791/2403 Test #501: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 0.59 sec ; - [2022-08-24T14:46:56.302Z] 792/2403 Test #502: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.65 sec ; - [2022-08-24T14:46:56.302Z] 793/2403 Test #503: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 0.56 sec ; - [2022-08-24T14:46:56.903Z] 795/2403 Test #504: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 0.61 sec ; - [2022-08-24T14:47:07.739Z] 969/2403 Test #673: tutorial-graphs-timeSeriesFromCSV_TDF .............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.45 sec . And 2 more. ### Warnings:; - [2022,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1225844891:1560,Error,Error,1560,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1225844891,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.73 sec ; - [2022-08-31T06:55:29.689Z] 780/2403 Test #490: tutorial-dataframe-df015_LazyDataSource ...........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.56 sec ; - [2022-08-31T06:55:31.768Z] 786/2403 Test #493: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 1.87 sec ; - [2022-08-31T06:55:32.067Z] 788/2403 Test #500: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.49 sec ; - [2022-08-31T06:55:32.678Z] 789/2403 Test #497: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.71 sec ; - [2022-08-31T06:55:32.678Z] 790/2403 Test #501: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 0.61 sec ; - [2022-08-31T06:55:33.268Z] 793/2403 Test #502: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.67 sec ; - [2022-08-31T06:55:33.549Z] 794/2403 Test #503: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 0.66 sec ; - [2022-08-31T06:55:33.549Z] 795/2403 Test #504: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 0.54 sec . And 12 more. ### Failing tests:; -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1232546837:1560,Error,Error,1560,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1232546837,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.74 sec ; - [2022-07-15T14:55:07.781Z] 779/2390 Test #488: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 1.68 sec ; - [2022-07-15T14:55:09.045Z] 783/2390 Test #495: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.60 sec ; - [2022-07-15T14:55:09.045Z] 784/2390 Test #492: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.34 sec ; - [2022-07-15T14:55:09.724Z] 786/2390 Test #496: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 0.56 sec ; - [2022-07-15T14:55:09.724Z] 787/2390 Test #497: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.54 sec ; - [2022-07-15T14:55:10.007Z] 790/2390 Test #499: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 0.35 sec ; - [2022-07-15T14:55:10.007Z] 791/2390 Test #498: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 0.45 sec . And 11 more. ### Failing tests:; - [projectroot.runtutorials.tutorial_dataframe_df014_CSVDataSource](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149975/testReport/projectroot/runtutorials/tutorial_dataframe_df014_CSVDataSource/); - [,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10969#issuecomment-1185637144:1788,Error,Error,1788,https://root.cern,https://github.com/root-project/root/pull/10969#issuecomment-1185637144,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.82 sec ; - [2022-09-02T04:57:50.736Z] 787/2403 Test #493: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 1.72 sec ; - [2022-09-02T04:57:51.290Z] 789/2403 Test #500: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.46 sec ; - [2022-09-02T04:57:51.290Z] 790/2403 Test #497: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.63 sec ; - [2022-09-02T04:57:51.551Z] 791/2403 Test #501: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 0.48 sec ; - [2022-09-02T04:57:51.816Z] 793/2403 Test #502: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.53 sec ; - [2022-09-02T04:57:52.108Z] 794/2403 Test #503: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 0.63 sec ; - [2022-09-02T04:57:52.108Z] 795/2403 Test #504: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 0.55 sec ; - [2022-09-02T04:58:04.140Z] 968/2403 Test #673: tutorial-graphs-timeSeriesFromCSV_TDF .............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.48 sec . And 2 more. ### Failing tests:; - ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1235072331:1560,Error,Error,1560,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1235072331,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.85 sec ; - [2022-09-02T15:20:20.327Z] 779/2403 Test #489: tutorial-dataframe-df014_CSVDataSource ............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.47 sec ; - [2022-09-02T15:20:22.340Z] 785/2403 Test #493: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 1.90 sec ; - [2022-09-02T15:20:23.264Z] 788/2403 Test #497: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.53 sec ; - [2022-09-02T15:20:23.264Z] 791/2403 Test #500: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.71 sec ; - [2022-09-02T15:20:23.556Z] 792/2403 Test #501: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 0.55 sec ; - [2022-09-02T15:20:23.823Z] 793/2403 Test #502: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.42 sec ; - [2022-09-02T15:20:23.823Z] 794/2403 Test #503: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 0.46 sec ; - [2022-09-02T15:20:23.823Z] 795/2403 Test #504: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 0.49 sec ; - [2022-09-02T15:20:36.166Z] 968/2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1235640137:1332,Error,Error,1332,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1235640137,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.87 sec ; - [2022-08-31T13:14:06.058Z] 786/2403 Test #493: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 1.90 sec ; - [2022-08-31T13:14:06.663Z] 787/2403 Test #497: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.58 sec ; - [2022-08-31T13:14:07.214Z] 790/2403 Test #500: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.54 sec ; - [2022-08-31T13:14:07.483Z] 792/2403 Test #502: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.41 sec ; - [2022-08-31T13:14:07.483Z] 793/2403 Test #501: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 0.46 sec ; - [2022-08-31T13:14:07.773Z] 795/2403 Test #503: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 0.47 sec ; - [2022-08-31T13:14:08.070Z] 796/2403 Test #504: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 0.52 sec ; - [2022-08-31T13:14:19.579Z] 969/2403 Test #673: tutorial-graphs-timeSeriesFromCSV_TDF .............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.45 sec . And 2 more. ### Failing tests:; - ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1232937826:1560,Error,Error,1560,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1232937826,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.03 sec ; - [2022-09-02T04:20:55.637Z] 594/2346 Test #471: tutorial-dataframe-df014_CSVDataSource ............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.53 sec ; - [2022-09-02T04:21:05.200Z] 598/2346 Test #475: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 3.07 sec ; - [2022-09-02T04:21:16.472Z] 602/2346 Test #479: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 3.07 sec ; - [2022-09-02T04:21:19.349Z] 605/2346 Test #482: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.01 sec ; - [2022-09-02T04:21:20.724Z] 606/2346 Test #483: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 1.04 sec ; - [2022-09-02T04:21:21.654Z] 607/2346 Test #484: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.99 sec ; - [2022-09-02T04:21:22.590Z] 608/2346 Test #485: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 0.98 sec ; - [2022-09-02T04:21:23.526Z] 609/2346 Test #486: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 0.97 sec ; - [2022-09-02T04:22:10.593Z] 776/2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1235066161:1319,Error,Error,1319,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1235066161,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.04 sec ; - [2022-07-15T15:26:24.132Z] 587/2331 Test #464: tutorial-dataframe-df014_CSVDataSource ............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.53 sec ; - [2022-07-15T15:26:24.702Z] 588/2331 Test #465: tutorial-dataframe-df015_LazyDataSource ...........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.54 sec ; - [2022-07-15T15:26:28.247Z] 591/2331 Test #468: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 2.38 sec ; - [2022-07-15T15:26:43.588Z] 595/2331 Test #472: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 3.04 sec ; - [2022-07-15T15:26:46.555Z] 598/2331 Test #475: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.11 sec ; - [2022-07-15T15:26:47.489Z] 599/2331 Test #476: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 1.06 sec ; - [2022-07-15T15:26:48.870Z] 600/2331 Test #477: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.99 sec ; - [2022-07-15T15:26:49.700Z] 603/2331 Test #478: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 0.98 sec ; - [2022-07-15T15:26:50.266Z] 604/2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10969#issuecomment-1185681094:1319,Error,Error,1319,https://root.cern,https://github.com/root-project/root/pull/10969#issuecomment-1185681094,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.09 sec ; - [2022-08-31T07:19:58.988Z] 594/2346 Test #471: tutorial-dataframe-df014_CSVDataSource ............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.54 sec ; - [2022-08-31T07:19:59.565Z] 595/2346 Test #472: tutorial-dataframe-df015_LazyDataSource ...........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.57 sec ; - [2022-08-31T07:20:06.139Z] 599/2346 Test #475: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 2.26 sec ; - [2022-08-31T07:20:17.073Z] 602/2346 Test #479: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 2.94 sec ; - [2022-08-31T07:20:23.139Z] 605/2346 Test #482: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.06 sec ; - [2022-08-31T07:20:24.076Z] 606/2346 Test #483: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 1.13 sec ; - [2022-08-31T07:20:25.208Z] 608/2346 Test #484: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.13 sec ; - [2022-08-31T07:20:25.776Z] 609/2346 Test #485: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 1.08 sec ; - [2022-08-31T07:20:26.344Z] 611/2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1232585531:1319,Error,Error,1319,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1232585531,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.10 sec ; - [2022-08-24T15:12:42.551Z] 593/2345 Test #470: tutorial-dataframe-df014_CSVDataSource ............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.56 sec ; - [2022-08-24T15:12:50.514Z] 597/2345 Test #474: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 2.35 sec ; - [2022-08-24T15:13:04.204Z] 601/2345 Test #478: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 3.13 sec ; - [2022-08-24T15:13:07.742Z] 604/2345 Test #481: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.08 sec ; - [2022-08-24T15:13:08.677Z] 605/2345 Test #482: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 1.12 sec ; - [2022-08-24T15:13:09.612Z] 606/2345 Test #483: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.09 sec ; - [2022-08-24T15:13:10.987Z] 607/2345 Test #484: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 1.02 sec ; - [2022-08-24T15:13:11.814Z] 609/2345 Test #485: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 1.03 sec ; - [2022-08-24T15:14:00.425Z] 775/2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1225908029:1319,Error,Error,1319,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1225908029,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.12 sec ; - [2022-08-31T14:24:42.631Z] 594/2346 Test #471: tutorial-dataframe-df014_CSVDataSource ............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.56 sec ; - [2022-08-31T14:24:51.988Z] 598/2346 Test #475: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 3.09 sec ; - [2022-08-31T14:25:05.267Z] 603/2346 Test #479: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 3.33 sec ; - [2022-08-31T14:25:08.104Z] 605/2346 Test #482: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.05 sec ; - [2022-08-31T14:25:09.493Z] 606/2346 Test #483: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 1.14 sec ; - [2022-08-31T14:25:10.428Z] 607/2346 Test #484: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.12 sec ; - [2022-08-31T14:25:11.364Z] 608/2346 Test #485: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 1.08 sec ; - [2022-08-31T14:25:12.739Z] 609/2346 Test #486: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 1.08 sec ; - [2022-08-31T14:26:02.990Z] 776/2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1233050022:1319,Error,Error,1319,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1233050022,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.19 sec ; - [2022-09-01T17:02:33.120Z] 594/2346 Test #471: tutorial-dataframe-df014_CSVDataSource ............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.57 sec ; - [2022-09-01T17:02:42.341Z] 598/2346 Test #475: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 3.46 sec ; - [2022-09-01T17:02:55.971Z] 602/2346 Test #479: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 3.32 sec ; - [2022-09-01T17:02:58.726Z] 605/2346 Test #482: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.10 sec ; - [2022-09-01T17:02:59.663Z] 606/2346 Test #483: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 1.10 sec ; - [2022-09-01T17:03:00.596Z] 607/2346 Test #484: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.06 sec ; - [2022-09-01T17:03:01.531Z] 608/2346 Test #485: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 0.99 sec ; - [2022-09-01T17:03:02.906Z] 609/2346 Test #486: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 1.05 sec ; - [2022-09-01T17:03:52.681Z] 776/2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1234585564:1319,Error,Error,1319,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1234585564,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.97 sec ; - [2020-06-10T22:20:31.348Z] 644/1992 Test #338: tutorial-dataframe-df015_LazyDataSource ...........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.89 sec ; - [2020-06-10T22:20:37.348Z] 652/1992 Test #344: tutorial-dataframe-df021_createTGraph .............................................................***Failed Error regular expression found in output. Regex=[: error:] 1.76 sec ; - [2020-06-10T22:20:39.777Z] 656/1992 Test #349: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 1.51 sec ; - [2020-06-10T22:20:40.053Z] 657/1992 Test #351: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 1.16 sec ; - [2020-06-10T22:20:40.981Z] 660/1992 Test #352: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 1.30 sec ; - [2020-06-10T22:20:42.149Z] 665/1992 Test #355: tutorial-dataframe-df102_NanoAODDimuonAnalysis ....................................................***Failed Error regular expression found in output. Regex=[: error:] 1.39 sec . And 3 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86347/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86347/testReport/projectroot.tree.dataframe/test/gtest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-642302168:2154,Error,Error,2154,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-642302168,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 2.75 sec ; - [2022-02-15T16:45:02.047Z] 738/2249 Test #446: tutorial-dataframe-df017_vecOpsHEP ................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.73 sec ; - [2022-02-15T16:45:02.877Z] 740/2249 Test #448: tutorial-dataframe-df019_Cache ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 2.25 sec ; - [2022-02-15T16:45:03.457Z] 744/2249 Test #443: tutorial-dataframe-df014_CSVDataSource ............................................................***Failed Error regular expression found in output. Regex=[: error:] 3.74 sec ; - [2022-02-15T16:45:04.268Z] 748/2249 Test #459: tutorial-dataframe-df031_Stats ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.32 sec ; - [2022-02-15T16:45:04.792Z] 750/2249 Test #445: tutorial-dataframe-df016_vecOps ...................................................................***Failed Error regular expression found in output. Regex=[: error:] 4.70 sec . And 25 more. ### Failing tests:; - [projectroot.runtutorials.tutorial_dataframe_df005_fillAnyObject](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/137516/testReport/projectroot/runtutorials/tutorial_dataframe_df005_fillAnyObject/); - [projectroot.runtutorials.tutorial_dataframe_df000_simple](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/137516/testReport/projectroot/runtutorials/tutorial_dataframe_df000_simple/); - [projectroot.runtutorials.tutorial_dataframe_df013_InspectAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/137516/testReport/projectroot/runtutorials/tutorial_dataframe_df013_InspectAnalysis/); - [projectroot.ru,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9895#issuecomment-1040550626:2246,Error,Error,2246,https://root.cern,https://github.com/root-project/root/pull/9895#issuecomment-1040550626,1,['Error'],['Error']
Availability,"Speaking of `std::pair`, it might not be related but I just now spotted an error message which wasn't present with 6.20 when calling `GetStreamerInfo()` on two of our classes:. ```; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert pair<int,array<vector<Belle2::TOPPDFCollection::Gaussian>,512> >::second from type: array<vector<Belle2::TOPPDFCollection::Gaussian>,512> to type: vector<Belle2::TOPPDFCollection::Gaussian>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert pair<int,array<float,512> >::second from type: array<float,512> to type: array<float,512>, skip element; ```; where the members in the class are `std::map<int, array<...>>` (Gaussian is just a struct of 3 floats). Now this could be something different but it does strike me as odd because it also happens for `std::pair`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7960#issuecomment-833273551:75,error,error,75,https://root.cern,https://github.com/root-project/root/issues/7960#issuecomment-833273551,1,['error'],['error']
Availability,"Speaking with my Gentoo hat here, but for a distro, I think there's mostly no problem (I didn't have to make any changes to the package for ROOT). However, other software will likely see failures if they try to parse the version for whatever reason. But semantic versioning is much more than the format of the version number itself, so I'm wondering if ROOT will now really control which kinds of changes will make it to patch releases such that they don't change any interface in a way that code compiled for ROOT 6.30.00 still works without recompilation with 6.30.XX.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14068#issuecomment-1830057296:187,failure,failures,187,https://root.cern,https://github.com/root-project/root/issues/14068#issuecomment-1830057296,1,['failure'],['failures']
Availability,Start 1172: tutorial-roofit-rf304_uncorrprod-py; 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec; 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py; 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec; 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py; 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec; 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py; 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec; 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py; 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec; 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py; 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec; 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py; 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec; 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py; 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ....................................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12536#issuecomment-1482508642:1348,Error,Error,1348,https://root.cern,https://github.com/root-project/root/pull/12536#issuecomment-1482508642,1,['Error'],['Error']
Availability,"Starting with the git clone --branch v6-22-00-patches https://github.com/root-project/root.git root_src branch, I identified the changes described above. However, on the RPi4 build I ran into the atomic problems. I used a simple fix to get around them. I used the standard cmake -DCMAKE_INSTALL_PREFIX=../install -DPYTHON_EXECUTABLE=/usr/bin/python3 ../root_src and when I ran into an unresolved issue, like this one:; TFile.cxx:(.text+0xb5ec): undefined reference to `__atomic_fetch_add_8'; collect2: error: ld returned 1 exit status; make[2]: *** [io/io/CMakeFiles/RIO.dir/build.make:585: lib/libRIO.so] Error 1; make[1]: *** [CMakeFiles/Makefile2:23297: io/io/CMakeFiles/RIO.dir/all] Error 2; make: *** [Makefile:152: all] Error 2; I went and added this library to the end of the line in the corresponding link.txt file:; /usr/lib/arm-linux-gnueabihf/libatomic.so.1; for these link.txt files under the build directory:; vi io/io/CMakeFiles/RIO.dir/link.txt; vi net/net/CMakeFiles/Net.dir/link.txt; vi tree/tree/CMakeFiles/Tree.dir/link.txt; vi net/netx/CMakeFiles/Netx.dir/link.txt; vi net/netxng/CMakeFiles/NetxNG.dir/link.txt; vi proof/proof/CMakeFiles/Proof.dir/link.txt; After each edit, I kept running cmake --build . -- install -j4 and eventually the build completed successfully.; Furthermore, I use ROOT with a jupyter notebook server I run on the RPi4 with systemd, so in place of; source /home/pi/root/install/bin/thisroot.sh (which I do use in the .bashrc for New Terminal), I added ; and EnvironmentFile variable EnvironmentFile=/home/pi/root/thisroot.conf; which contained:; JUPYTER_CONFIG_DIR=/home/pi/root/install/etc/notebook; MANPATH=/home/pi/root/install/man:/usr/local/man:/usr/local/share/man:/usr/share/man; SHLIB_PATH=/home/pi/root/install/lib; DYLD_LIBRARY_PATH=/home/pi/root/install/lib; CMAKE_PREFIX_PATH=/home/pi/root/install; PYTHONPATH=/home/pi/root/install/lib; LIBPATH=/home/pi/root/install/lib; JUPYTER_PATH=/home/pi/root/install/etc/notebook; ROOTSYS=/home/pi/root/i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4561#issuecomment-718133063:502,error,error,502,https://root.cern,https://github.com/root-project/root/pull/4561#issuecomment-718133063,4,"['Error', 'error']","['Error', 'error']"
Availability,"Status update:; With the latest modifications for multithreading (latest doxygen master build from today is needed, where some bugs were fixed), and EXCLUDING the tutorials in the make-input.sh, I managed to reduce the build time down to 42 minutes with 8 threads.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1055977012:230,down,down,230,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1055977012,1,['down'],['down']
Availability,"Still have a few failures that have the similar problem...; ```; Processing /data/sftnight/workspace/root-pullrequests-build/roottest/root/multicore/exectsenums.C...; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_list.h:491:7: error: 'std::__cxx11::_List_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_List_base' from module 'std.list' is not present in definition of 'std::__cxx11::_List_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >' provided earlier; _List_base(_Node_alloc_type&& __a, _List_base&& __x). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1268221384:17,failure,failures,17,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1268221384,2,"['error', 'failure']","['error', 'failures']"
Availability,"Still no luck, even when adding ; ```; set INCLUDE=""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\Llvm\lib\clang\12.0.0\include"";%INCLUDE%; ```; I still have the following error:; ```; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory; ```; I'll investigate more. And BTW, I see that:; > `set _LINK_= /InferASanLibs /incremental:no /debug`. and then; > `cmake --build . --config Release`. So you compile in release mode and link in debug mode? Really?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-1021315592:197,error,error,197,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-1021315592,2,['error'],['error']
Availability,"Still present in current master:. ```shell; root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(); ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'?; ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(); ^; ->; root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(); IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]!; You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocato",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1833762580:138,error,error,138,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1833762580,1,['error'],['error']
Availability,Still the same error...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4455#issuecomment-537006863:15,error,error,15,https://root.cern,https://github.com/root-project/root/pull/4455#issuecomment-537006863,1,['error'],['error']
Availability,"Struct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:23.745Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:24.286Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:24.286Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:24.705Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:24.705Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:24.705Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matchin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13916#issuecomment-1774806077:1333,error,error,1333,https://root.cern,https://github.com/root-project/root/pull/13916#issuecomment-1774806077,1,['error'],['error']
Availability,"Struct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:24.286Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:24.705Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:24.705Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:24.705Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:25.132Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:25.132Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded functi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13916#issuecomment-1774806077:2004,error,error,2004,https://root.cern,https://github.com/root-project/root/pull/13916#issuecomment-1774806077,1,['error'],['error']
Availability,"Struct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.275Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.275Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.620Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.620Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.620Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.930Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matchin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13914#issuecomment-1774839901:1333,error,error,1333,https://root.cern,https://github.com/root-project/root/pull/13914#issuecomment-1774839901,1,['error'],['error']
Availability,"Struct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.620Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.620Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.620Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.930Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.930Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.930Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded functi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13914#issuecomment-1774839901:2004,error,error,2004,https://root.cern,https://github.com/root-project/root/pull/13914#issuecomment-1774839901,1,['error'],['error']
Availability,"Struct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:20.996Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:21.284Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:21.618Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:21.618Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:21.910Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:21.910Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matchin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13604#issuecomment-1775205003:1333,error,error,1333,https://root.cern,https://github.com/root-project/root/pull/13604#issuecomment-1775205003,1,['error'],['error']
Availability,"Struct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:21.618Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:21.618Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:21.910Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:21.910Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:21.910Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:21.910Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded functi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13604#issuecomment-1775205003:2004,error,error,2004,https://root.cern,https://github.com/root-project/root/pull/13604#issuecomment-1775205003,1,['error'],['error']
Availability,"Struct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matchin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13604#issuecomment-1776802744:1333,error,error,1333,https://root.cern,https://github.com/root-project/root/pull/13604#issuecomment-1776802744,1,['error'],['error']
Availability,"Struct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded functi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13604#issuecomment-1776802744:2004,error,error,2004,https://root.cern,https://github.com/root-project/root/pull/13604#issuecomment-1776802744,1,['error'],['error']
Availability,"Struct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.337Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.337Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.337Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.337Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.338Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.683Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matchin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13604#issuecomment-1776988707:1333,error,error,1333,https://root.cern,https://github.com/root-project/root/pull/13604#issuecomment-1776988707,1,['error'],['error']
Availability,"Struct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.337Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.337Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.338Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.683Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.683Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.683Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded functi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13604#issuecomment-1776988707:2004,error,error,2004,https://root.cern,https://github.com/root-project/root/pull/13604#issuecomment-1776988707,1,['error'],['error']
Availability,"Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\tuple(78): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVVMReflect.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2022-02-07T17:48:25.965Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(1029,49): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\DeclGroup.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-02-07T17:48:25.965Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(687,5): error MSB8071: Cannot parse tool output 'C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(860,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\Rewrite\RewriteTest.cpp)' with regex '^[0-9]* errors generated\.$': Exception of type 'System.OutOfMemoryException' was thrown. [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\Rewrite\obj.clangRewriteFrontend.vcxproj] ; - [2022-02-07T17:48:25.965Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\stdexcept(79,26): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\MCTargetDesc\NVPTXTargetStreamer.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\MCTargetDesc\LLVMNVPTXDesc.vcxproj] ; - [2022-02-07T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9830#issuecomment-1031746798:3519,error,error,3519,https://root.cern,https://github.com/root-project/root/pull/9830#issuecomment-1031746798,1,['error'],['error']
Availability,"Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility(389,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\TailDuplication.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-09-14T15:02:59.017Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/CommandLine.h(1218,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\SizeOpts.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-09-14T15:02:59.017Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\tuple(347,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\SimplifyLibCalls.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-09-14T15:02:59.017Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Casting.h(343,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\ASTMatchers\ASTMatchFinder.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\ASTMatchers\obj.clangASTMatchers.vcxproj] ; - [2022-09-14T15:02:59.017Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\tuple(300,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\PlaceSafepoints.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11366#issuecomment-1246914758:2518,error,error,2518,https://root.cern,https://github.com/root-project/root/pull/11366#issuecomment-1246914758,1,['error'],['error']
Availability,"Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility(123,12): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\Reg2Mem.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-09-26T12:46:29.363Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/DenseMap.h(449,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\TargetLoweringObjectFileImpl.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-09-26T12:46:29.363Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring(4542,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\StackProtector.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-09-26T12:46:29.363Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Endian.h(376,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\WholeProgramDevirt.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] ; - [2022-09-26T12:46:29.363Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility(288,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\MemCpyOptimizer.cpp) [C:\build\workspace\root-pullrequests-buil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11311#issuecomment-1257995983:2901,error,error,2901,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1257995983,1,['error'],['error']
Availability,"Such as discussed on mattermost: I've switched to a plain cmake option so that the flag does not get exposed as feature by `root-config`. However, this has the downside that (without additional boilerplate logic) the asserts are always on for `CMAKE_BUILD_TYPE=Debug` and `dev=ON`, no matter what you specify for `asserts`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6560#issuecomment-704331072:160,down,downside,160,https://root.cern,https://github.com/root-project/root/pull/6560#issuecomment-704331072,1,['down'],['downside']
Availability,"Summary:; * This appears because stripping `std::` allows 2 entities to have the same normalized name; ~~* This can also appears in case of inline namespace (but does not seem to cause the same problem)~~; * In ~~both~~ the `std` scenario we ends up a (delayed diagnosed :( ) ambiguous symbol.; * The UpdateClassInfo machinery ~~somehow~~ only fails in the std case.; * The error handling could be improved by tweaking in `TCling::RefreshClassInfo(TClass *cl, const clang::NamedDecl *def, bool alias)`:; ```; if (!oldDef || (def && def != oldDef)) {; cl->ResetCaches();; TClass::RemoveClassDeclId(cci->GetDeclId());; if (def) {; // It's a tag decl, not a namespace decl.; cci->Init(*cci->GetType());; ```; to detect that even though old and new (`def` and `oldDef`) decl are different they are still a namespace and issue an error rather than calling `cci->Init` which (even if we passed the right type) would still semantically do the 'wrong' thing (technically updating the `TClass` for the first namespace to now look at the second namespace). For completeness, result with a 3 week old commit 58a96e2a8e (a priori the only relevant change since is LLVM 18 which should not affect the result since the above code is 'wrong').; ```; root [0] gInterpreter->Declare(""inline namespace __inlinens__ { namespace Detail {} } ""); (bool) true; root [1] auto c = TClass::GetClass(""Detail""); (TClass *) 0x14e1048d0; root [2] namespace Detail {}; ```; but ; ```; root [0] namespace std { namespace Detail {} }; root [1] auto c = TClass::GetClass(""Detail""); (TClass *) 0x1497316a0; root [2] namespace Detail {}; Assertion failed: (detail::isPresent(Val) && ""dyn_cast on a non-existent value""), function dyn_cast, file Casting.h, line 663.; Abort trap: 6; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8828#issuecomment-2372467341:374,error,error,374,https://root.cern,https://github.com/root-project/root/issues/8828#issuecomment-2372467341,2,['error'],['error']
Availability,"Super cool, thanks a lot @bendavid ! This is a boon for the case of many (small) files and many cores. The changes to TTreeProcessorMT look good to me, we need Axel or Philippe to take a look at the rest. P.S.; the build failure on debian10-i386 looks like a network glitch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9486#issuecomment-1005469563:221,failure,failure,221,https://root.cern,https://github.com/root-project/root/pull/9486#issuecomment-1005469563,1,['failure'],['failure']
Availability,"Super nice, thanks!. So `R__SUGGEST_CLASS` and `R__SUGGEST_FUNCTION` are now renamed to `R__SUGGEST_FASTER_...`? It's not always about speed, I actually prefer the original names. Can we spell the diagnostic as `it has a superior alternative` such that we do not need to distinguish class/ function anymore?. And the maybe simply `R__SUGGEST` or `R__USE_INSTEAD`?. (I wanted to write this down so I don't forget; it's likely more efficient to chat about this in person in January! 🎆 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3100#issuecomment-449485576:389,down,down,389,https://root.cern,https://github.com/root-project/root/pull/3100#issuecomment-449485576,1,['down'],['down']
Availability,"Sure thing - but the Mac error is real, so I need to fix that first.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7283#issuecomment-795959985:25,error,error,25,https://root.cern,https://github.com/root-project/root/pull/7283#issuecomment-795959985,1,['error'],['error']
Availability,"Sure, I'd like to help :) ; *(my fault to mistakenly created an unnecessary extra commit, sorry)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15972#issuecomment-2203691055:33,fault,fault,33,https://root.cern,https://github.com/root-project/root/pull/15972#issuecomment-2203691055,1,['fault'],['fault']
Availability,"Sure, OTOH, it will be nop because the quoted issue was resolved on our side, too. The issue suggests that we have:; ```; module M1 {; umbrella ""NonExistent"" // expected-error here.; module * { export * }; }. module M2 {; umbrella ""Existent""; module * { export *}; }; ```. We always create a folder GL, so AFAICT we are not hitting this warning. Looks like the PR and the commit message were misnomers :( Fixing...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1348#issuecomment-345745506:170,error,error,170,https://root.cern,https://github.com/root-project/root/pull/1348#issuecomment-345745506,1,['error'],['error']
Availability,"Surely directly including the Vc headers in the GenVector headers is not really an option, as doing so would then require the headers to always be available, which may not be the case in some builds ? Or are you suggesting this just as a test ? if so, I am sure it will work, but not really sure how it would help going forward.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-286427446:147,avail,available,147,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-286427446,1,['avail'],['available']
Availability,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`; ```; tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz ; cd artv3_09; source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh; source setup.sh; scons -j 8; mu2e -c bug.fcl; ```; This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8428#issuecomment-875583779:25,error,error,25,https://root.cern,https://github.com/root-project/root/issues/8428#issuecomment-875583779,2,"['down', 'error']","['down', 'error']"
Availability,"T requires support for C++11 or higher."" ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RConfig.h:50:5: error: #error ""Pass `-std=c++11` as compiler argument."" ; - /usr/include/c++/4.8.2/bits/c++0x_warning.h:32:2: error: #error This file requires compiler and library support for the ISO C++ 2011 standard. This support is currently experimental, and must be enabled with the -std=c++11 or -std=gnu++11 compiler options. ; - /usr/include/c++/4.8.2/bits/atomic_base.h:70:3: error: ‘constexpr’ does not name a type ; - /usr/include/c++/4.8.2/bits/atomic_base.h:76:3: error: ‘constexpr’ does not name a type ; - /usr/include/c++/4.8.2/bits/atomic_base.h:83:3: error: ‘constexpr’ does not name a type ; - /usr/include/c++/4.8.2/bits/atomic_base.h:90:3: error: ‘constexpr’ does not name a type ; - /usr/include/c++/4.8.2/bits/atomic_base.h:98:41: error: expected initializer before ‘noexcept’ ; - /usr/include/c++/4.8.2/bits/atomic_base.h:102:41: error: expected initializer before ‘noexcept’ ; - /usr/include/c++/4.8.2/bits/atomic_base.h:108:30: error: expected initializer before ‘noexcept’ . And 332558 more. ### Warnings:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/TArray.h:58:4: warning: identifier ‘decltype’ is a keyword in C++11 [-Wc++0x-compat] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/span.hxx:196:5: warning: identifier ‘static_assert’ is a keyword in C++11 [-Wc++0x-compat] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/TIsAProxy.h:43:34: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/TIsAProxy.h:44:45: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Rtypes.h:246:68: warning: extended initializer lists only av",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2917#issuecomment-440725109:1225,error,error,1225,https://root.cern,https://github.com/root-project/root/pull/2917#issuecomment-440725109,1,['error'],['error']
Availability,"T requires support for C++11 or higher."" ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RConfig.h:50:5: error: #error ""Pass `-std=c++11` as compiler argument."" ; - /usr/include/c++/4.8.2/bits/c++0x_warning.h:32:2: error: #error This file requires compiler and library support for the ISO C++ 2011 standard. This support is currently experimental, and must be enabled with the -std=c++11 or -std=gnu++11 compiler options. ; - /usr/include/c++/4.8.2/bits/atomic_base.h:70:3: error: ‘constexpr’ does not name a type ; - /usr/include/c++/4.8.2/bits/atomic_base.h:76:3: error: ‘constexpr’ does not name a type ; - /usr/include/c++/4.8.2/bits/atomic_base.h:83:3: error: ‘constexpr’ does not name a type ; - /usr/include/c++/4.8.2/bits/atomic_base.h:90:3: error: ‘constexpr’ does not name a type ; - /usr/include/c++/4.8.2/bits/atomic_base.h:98:41: error: expected initializer before ‘noexcept’ ; - /usr/include/c++/4.8.2/bits/atomic_base.h:102:41: error: expected initializer before ‘noexcept’ ; - /usr/include/c++/4.8.2/bits/atomic_base.h:108:30: error: expected initializer before ‘noexcept’ . And 332625 more. ### Warnings:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/TArray.h:58:4: warning: identifier ‘decltype’ is a keyword in C++11 [-Wc++0x-compat] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/span.hxx:196:5: warning: identifier ‘static_assert’ is a keyword in C++11 [-Wc++0x-compat] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/TIsAProxy.h:43:34: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/TIsAProxy.h:44:45: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Rtypes.h:246:68: warning: extended initializer lists only av",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3005#issuecomment-440733246:1225,error,error,1225,https://root.cern,https://github.com/root-project/root/pull/3005#issuecomment-440733246,1,['error'],['error']
Availability,"T requires support for C++11 or higher."" ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RConfig.h:50:5: error: #error ""Pass `-std=c++11` as compiler argument."" ; - /usr/include/c++/4.8.2/bits/c++0x_warning.h:32:2: error: #error This file requires compiler and library support for the ISO C++ 2011 standard. This support is currently experimental, and must be enabled with the -std=c++11 or -std=gnu++11 compiler options. ; - /usr/include/c++/4.8.2/bits/atomic_base.h:70:3: error: ‘constexpr’ does not name a type ; - /usr/include/c++/4.8.2/bits/atomic_base.h:76:3: error: ‘constexpr’ does not name a type ; - /usr/include/c++/4.8.2/bits/atomic_base.h:83:3: error: ‘constexpr’ does not name a type ; - /usr/include/c++/4.8.2/bits/atomic_base.h:90:3: error: ‘constexpr’ does not name a type ; - /usr/include/c++/4.8.2/bits/atomic_base.h:98:41: error: expected initializer before ‘noexcept’ ; - /usr/include/c++/4.8.2/bits/atomic_base.h:102:41: error: expected initializer before ‘noexcept’ ; - /usr/include/c++/4.8.2/bits/atomic_base.h:108:30: error: expected initializer before ‘noexcept’ . And 336450 more. ### Warnings:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/TArray.h:58:4: warning: identifier ‘decltype’ is a keyword in C++11 [-Wc++0x-compat] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/span.hxx:196:5: warning: identifier ‘static_assert’ is a keyword in C++11 [-Wc++0x-compat] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/TIsAProxy.h:43:34: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/TIsAProxy.h:44:45: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/Rtypes.h:246:68: warning: extended initializer lists only av",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3011#issuecomment-440736032:1225,error,error,1225,https://root.cern,https://github.com/root-project/root/pull/3011#issuecomment-440736032,1,['error'],['error']
Availability,"T-debian10-i386/cxx14.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107495/console).; ### Errors:; - [2021-02-22T08:50:22.230Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testRooDataHist.cxx:263:44: error: use of deleted function ‘virtual RooSpan&lt;const double&gt; RooAbsReal::getValBatch(std::size_t, std::size_t, const RooArgSet*)’ ; - [2021-02-22T08:50:22.230Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testRooDataHist.cxx:264:46: error: use of deleted function ‘virtual RooSpan&lt;const double&gt; RooAbsReal::getValBatch(std::size_t, std::size_t, const RooArgSet*)’ ; - [2021-02-22T08:50:22.230Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testRooDataHist.cxx:265:46: error: use of deleted function ‘virtual RooSpan&lt;const double&gt; RooAbsReal::getValBatch(std::size_t, std::size_t, const RooArgSet*)’ ; - [2021-02-22T08:50:22.230Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testRooDataHist.cxx:315:43: error: use of deleted function ‘virtual RooSpan&lt;const double&gt; RooAbsReal::getValBatch(std::size_t, std::size_t, const RooArgSet*)’ ; - [2021-02-22T08:50:22.488Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testRooDataHist.cxx:316:51: error: use of deleted function ‘virtual RooSpan&lt;const double&gt; RooAbsReal::getValBatch(std::size_t, std::size_t, const RooArgSet*)’ ; - [2021-02-22T08:50:22.488Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testRooDataHist.cxx:361:43: error: use of deleted function ‘virtual RooSpan&lt;const double&gt; RooAbsReal::getValBatch(std::size_t, std::size_t, const RooArgSet*)’ ; - [2021-02-22T08:50:22.488Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6718#issuecomment-783206646:944,error,error,944,https://root.cern,https://github.com/root-project/root/pull/6718#issuecomment-783206646,1,['error'],['error']
Availability,T-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174356/console).; ### Errors:; - [2023-05-11T05:21:38.577Z] /home/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11810:52: error: ISO C++ forbids declaration of ‘type name’ with no type [-fpermissive] ; - [2023-05-11T05:21:38.577Z] /home/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11810:46: error: expected primary-expression before ‘const’ ; - [2023-05-11T05:21:38.577Z] /home/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11810:46: error: expected ‘)’ before ‘const’ ; - [2023-05-11T05:21:38.577Z] /home/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11816:52: error: ISO C++ forbids declaration of ‘type name’ with no type [-fpermissive] ; - [2023-05-11T05:21:38.577Z] /home/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11816:46: error: expected primary-expression before ‘const’ ; - [2023-05-11T05:21:38.577Z] /home/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11816:46: error: expected ‘)’ before ‘const’ ; - [2023-05-11T05:21:38.577Z] /home/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11822:53: error: ISO C++ forbids declaration of ‘type name’ with no type [-fpermissive] ; - [2023-05-11T05:21:38.577Z] /home/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11822:47: error: expected primary-expression before ‘const’ ; - [2023-05-11T05:21:38.577Z] /home/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11822:47: error: expected ‘)’ before ‘const’ ; - [2023-05-11T05:21:38.577Z] /home/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11829:107: error: ISO C++ forbids declaration of ‘type name’ with no type [-fpermissive] . And 62 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11027#issuecomment-1543356727:1084,error,error,1084,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543356727,6,['error'],['error']
Availability,T-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174391/console).; ### Errors:; - [2023-05-11T12:35:41.241Z] /home/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11283:52: error: ISO C++ forbids declaration of ‘type name’ with no type [-fpermissive] ; - [2023-05-11T12:35:41.241Z] /home/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11283:46: error: expected primary-expression before ‘const’ ; - [2023-05-11T12:35:41.241Z] /home/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11283:46: error: expected ‘)’ before ‘const’ ; - [2023-05-11T12:35:41.241Z] /home/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11289:52: error: ISO C++ forbids declaration of ‘type name’ with no type [-fpermissive] ; - [2023-05-11T12:35:41.241Z] /home/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11289:46: error: expected primary-expression before ‘const’ ; - [2023-05-11T12:35:41.241Z] /home/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11289:46: error: expected ‘)’ before ‘const’ ; - [2023-05-11T12:35:41.241Z] /home/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11295:53: error: ISO C++ forbids declaration of ‘type name’ with no type [-fpermissive] ; - [2023-05-11T12:35:41.241Z] /home/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11295:47: error: expected primary-expression before ‘const’ ; - [2023-05-11T12:35:41.241Z] /home/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11295:47: error: expected ‘)’ before ‘const’ ; - [2023-05-11T12:35:41.241Z] /home/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11302:107: error: ISO C++ forbids declaration of ‘type name’ with no type [-fpermissive] . And 62 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11027#issuecomment-1543921922:1084,error,error,1084,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543921922,6,['error'],['error']
Availability,T-fedora30-cxx14&date=2020-09-04).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94845/console).; ### Errors:; - [2020-09-04T20:01:31.605Z] FAILED: interpreter/llvm/src/tools/clang/lib/Serialization/CMakeFiles/clangSerialization.dir/ASTReader.cpp.o ; - [2020-09-04T20:01:31.605Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:3372:5: error: case label ‘clang::serialization::OPTIMIZE_PRAGMA_OPTIONS’ not within a switch statement ; - [2020-09-04T20:01:31.605Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:3380:5: error: case label ‘clang::serialization::MSSTRUCT_PRAGMA_OPTIONS’ not within a switch statement ; - [2020-09-04T20:01:31.605Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:3388:5: error: case label ‘clang::serialization::POINTERS_TO_MEMBERS_PRAGMA_OPTIONS’ not within a switch statement ; - [2020-09-04T20:01:31.605Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:3397:5: error: case label ‘clang::serialization::UNUSED_LOCAL_TYPEDEF_NAME_CANDIDATES’ not within a switch statement ; - [2020-09-04T20:01:31.605Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:3403:5: error: case label ‘clang::serialization::CUDA_PRAGMA_FORCE_HOST_DEVICE_DEPTH’ not within a switch statement ; - [2020-09-04T20:01:31.605Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:3411:5: error: case label ‘clang::serialization::PACK_PRAGMA_OPTIONS’ not within a switch statement ; - [2020-09-04T20:01:31.605Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:3434:1: error: expected declaration before ‘}’ token,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6307#issuecomment-687354003:1179,error,error,1179,https://root.cern,https://github.com/root-project/root/pull/6307#issuecomment-687354003,5,['error'],['error']
Availability,"T-performance-centos8-multicore/default.; Running on null:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111511/console).; ### Errors:; - [2021-03-20T08:36:17.040Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/Frontend/MultiplexConsumer.h:63:8: error: ‘void clang::MultiplexConsumer::HandleTagDeclRequiredDefinition(const clang::TagDecl*)’ marked ‘override’, but does not override ; - [2021-03-20T08:36:55.126Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7833:16: error: ‘class clang::ASTConsumer’ has no member named ‘HandleTagDeclRequiredDefinition’; did you mean ‘HandleTagDeclDefinition’? ; - [2021-03-20T08:37:14.276Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/CodeGen/CodeGenAction.cpp:322:10: error: ‘void clang::BackendConsumer::HandleTagDeclRequiredDefinition(const clang::TagDecl*)’ marked ‘override’, but does not override ; - [2021-03-20T08:37:14.277Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/CodeGen/CodeGenAction.cpp:323:12: error: ‘class clang::CodeGenerator’ has no member named ‘HandleTagDeclRequiredDefinition’; did you mean ‘HandleTagDeclDefinition’? ; - [2021-03-20T08:37:16.205Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/CodeGen/ModuleBuilder.cpp:422:10: error: ‘void clang::CodeGeneratorImpl::HandleTagDeclRequiredDefinition(const clang::TagDecl*)’ marked ‘override’, but does not override ; - [2021-03-20T08:37:20.741Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/CodeGen/ObjectFilePCHContainerOperations.cpp:223:8: error: ‘void {anonymous}::PCHContainerGenerator::HandleTagDeclRequiredDefinition(const clang::TagDecl*)’ marked ‘override’, but does not override",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6770#issuecomment-803272758:987,error,error,987,https://root.cern,https://github.com/root-project/root/pull/6770#issuecomment-803272758,4,['error'],['error']
Availability,T-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download ; - CMake Error at VDT-stamp/VDT-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download ; - CMake Error at TBB-stamp/TBB-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download ; - CMake Error at XROOTD-stamp/XROOTD-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download ; - CMake Error at VC-stamp/VC-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download ; - CMake Error at VECCORE-stamp/VECCORE-download-Release.cmake:16 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4097#issuecomment-512765959:1299,down,download,1299,https://root.cern,https://github.com/root-project/root/pull/4097#issuecomment-512765959,11,"['Error', 'down']","['Error', 'download', 'download-Release']"
Availability,"T-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/64026/console).; ### Errors:; - FAILED: /usr/bin/ccache /usr/bin/c++ -Iinclude -I/mnt/build/workspace/root-pullrequests-build/root/core/metacling/src/../res -I/mnt/build/workspace/root-pullrequests-build/root/core/metacling/src/../../clingutils/res -I/mnt/build/workspace/root-pullrequests-build/root/core/metacling/src/../../foundation/res -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/include -isystem /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include -isystem interpreter/llvm/src/tools/clang/include -isystem /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include -isystem interpreter/llvm/src/include -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fvisibility=hidden -Wno-shadow -fno-strict-aliasing -Wno-unused-parameter -Wwrite-strings -Wno-long-long -Wno-missing-field-initializers -DLLVM_BUILD_GLOBAL_ISEL -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Wno-maybe-uninitialized -O3 -DNDEBUG -fPIC -std=c++11 -MD -MT core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o -MF core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o.d -o core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx ; - /mnt/build/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1132:30: error: ‘fInterpreter’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1132:60: error: ‘loadGlobalModuleIndex’ was not declared in this scope . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1182:27: warning: ‘clang::GlobalModuleIndex* loadGlobalModuleIndex(cling::Interpreter&, clang::SourceLocation)’ defined but not used [-Wunused-function]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4016#issuecomment-515211967:1560,error,error,1560,https://root.cern,https://github.com/root-project/root/pull/4016#issuecomment-515211967,2,['error'],['error']
Availability,T-ubuntu2204/nortcxxmod.; Running on root-ubuntu-2204-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198681/console).; ### Errors:; - [2024-03-15T23:47:03.587Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/src/ProcessTimer.cxx:20:23: error: using-declaration may not name namespace ‘std::chrono’ ; - [2024-03-15T23:47:03.587Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/src/ProcessTimer.cxx:37:6: error: ‘chrono’ was not declared in this scope; did you mean ‘std::chrono’? ; - [2024-03-15T23:47:03.587Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/src/ProcessTimer.cxx:37:45: error: template argument 1 is invalid ; - [2024-03-15T23:47:03.587Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/src/ProcessTimer.cxx:37:45: error: template argument 2 is invalid ; - [2024-03-15T23:47:03.587Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/src/ProcessTimer.cxx:37:48: error: ‘int RooFit::MultiProcess::ProcessTimer::get_durations’ is not a static data member of ‘class RooFit::MultiProcess::ProcessTimer’ ; - [2024-03-15T23:47:03.587Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/src/ProcessTimer.cxx:37:76: error: ‘string’ was not declared in this scope ; - [2024-03-15T23:47:03.587Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/src/ProcessTimer.cxx:54:6: error: variable or field ‘start_timer’ declared void ; - [2024-03-15T23:47:03.587Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/src/ProcessTimer.cxx:54:32: error: ‘string’ was not declared in this scope ; - [2024-03-15T23:47:03.587Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/src/ProcessTimer.cxx:70:6: error: vari,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14986#issuecomment-2000676480:993,error,error,993,https://root.cern,https://github.com/root-project/root/pull/14986#issuecomment-2000676480,1,['error'],['error']
Availability,"T.cxx:2566; 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623; 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631; 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633; 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637; 13: call_init.part.0 in ./elf/./elf/dl-init.c:70; 14: call_init in ./elf/./elf/dl-init.c:33; 15: _dl_init in ./elf/./elf/dl-init.c:117; 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182; 17: dl_open_worker in ./elf/./elf/dl-open.c:808; 18: dl_open_worker in ./elf/./elf/dl-open.c:771; 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208; 20: _dl_open in ./elf/./elf/dl-open.c:883; 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56; 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208; 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227; 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138; 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71; 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81; 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so; 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so; Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4; in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120; 1: ROOT::Internal::DeleteCha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7236#issuecomment-1949072327:8164,error,error-skeleton,8164,https://root.cern,https://github.com/root-project/root/issues/7236#issuecomment-1949072327,1,['error'],['error-skeleton']
Availability,"T/RDF/ActionHelpers.hxx:489:7: error: static_assert failed due to requirement '1UL &lt; 0' ""When filling an object with RDataFrame (e.g. via a Fill action) the number or types of the columns passed did not match the signature of the object's `Fill` method."" ; - [2022-02-15T17:12:14.704Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:489:7: error: static_assert failed due to requirement '1UL &lt; 0' ""When filling an object with RDataFrame (e.g. via a Fill action) the number or types of the columns passed did not match the signature of the object's `Fill` method."" ; - [2022-02-15T17:12:14.704Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:489:7: error: static_assert failed due to requirement '1UL &lt; 0' ""When filling an object with RDataFrame (e.g. via a Fill action) the number or types of the columns passed did not match the signature of the object's `Fill` method."" ; - [2022-02-15T17:12:14.704Z] FAILED: tree/dataframe/test/CMakeFiles/dataframe_callbacks.dir/dataframe_callbacks.cxx.o ; - [2022-02-15T17:12:16.080Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:489:7: error: static_assert failed due to requirement '1UL &lt; 0' ""When filling an object with RDataFrame (e.g. via a Fill action) the number or types of the columns passed did not match the signature of the object's `Fill` method."" ; - [2022-02-15T17:12:16.081Z] FAILED: tree/dataframe/test/CMakeFiles/dataframe_regression.dir/dataframe_regression.cxx.o ; - [2022-02-15T17:12:17.981Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:489:7: error: static_assert failed due to requirement '1UL &lt; 0' ""When filling an object with RDataFrame (e.g. via a Fill action) the number or types of the columns passed did not match the signature of the object's `Fill` method."" . And 2 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9895#issuecomment-1040547919:2236,error,error,2236,https://root.cern,https://github.com/root-project/root/pull/9895#issuecomment-1040547919,2,['error'],['error']
Availability,"T/RLogger.hxx:232:49: error: no matching function for call to ‘ROOT::Experimental::RLogEntry::RLogEntry(ROOT::Experimental::ELogLevel&, &lt;brace-enclosed initializer list&gt;)’ ; - [2020-12-08T10:45:29.948Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RLogger.hxx:237:58: error: no matching function for call to ‘ROOT::Experimental::RLogEntry::RLogEntry(ROOT::Experimental::ELogLevel&, ROOT::Experimental::RLogChannel&, &lt;brace-enclosed initializer list&gt;)’ ; - [2020-12-08T10:45:30.207Z] FAILED: /usr/bin/ccache /usr/bin/c++ -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/res -Iginclude -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -fvisibility=hidden -Wno-shadow -fno-strict-aliasing -Wno-unused-parameter -Wwrite-strings -Wno-long-long -Wno-missing-field-initializers -DLLVM_BUILD_GLOBAL_ISEL -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -std=c++11 -MD -MT core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RLogger.cxx.o -MF core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RLogger.cxx.o.d -o core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RLogger.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/foundation/src/RLogger.cxx ; - [2020-12-08T10:45:30.207Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RLogger.hxx:232:49: error: no matching function for call to ‘ROOT::Experimental::RLogEntry::RLogEntry(ROOT::Experimental::ELogLevel&, &lt;brace-enclosed initializer list&gt;)’ ; - [2020-12-08T10:45:30.207Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RLogger.hxx:237:58: error: no matching function for call to ‘ROOT::Experimental::RLogEntry::RLogEntry(ROOT::Experimental::ELogLevel&, ROOT::Experimental::RLogChannel&, &lt;brace-enclosed initializer list&gt;)’",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6875#issuecomment-740542547:2510,error,error,2510,https://root.cern,https://github.com/root-project/root/pull/6875#issuecomment-740542547,2,['error'],['error']
Availability,"T/SmallPtrSet.h(279,41): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\InstCombine\InstCombineCalls.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\InstCombine\LLVMInstCombine.vcxproj] ; - [2022-12-06T15:32:21.906Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Casting.h(229,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\ScheduleDAGSDNodes.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2022-12-06T15:32:21.906Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility(289,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\InstrEmitter.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2022-12-06T15:32:22.309Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Casting.h(343,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LegalizeDAG.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2022-12-06T15:32:22.309Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility(4042,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\ScheduleDAGRRList.cp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11843#issuecomment-1339572953:2637,error,error,2637,https://root.cern,https://github.com/root-project/root/pull/11843#issuecomment-1339572953,1,['error'],['error']
Availability,"T/TypeTraits.hxx:203:98: error: wrong number of template arguments (4, should be at least 1) ; - [2021-02-03T17:18:13.788Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/TypeTraits.hxx:204:21: error: expected unqualified-id before ‘&gt;’ token ; - [2021-02-03T17:18:13.788Z] FAILED: /usr/bin/ccache /usr/bin/c++ -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/res -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -Iginclude -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT core/cont/CMakeFiles/Cont.dir/src/TBtree.cxx.o -MF core/cont/CMakeFiles/Cont.dir/src/TBtree.cxx.o.d -o core/cont/CMakeFiles/Cont.dir/src/TBtree.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/cont/src/TBtree.cxx ; - [2021-02-03T17:18:13.788Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/TypeTraits.hxx:200:26: error: ‘conditional_t’ is not a member of ‘std’ ; - [2021-02-03T17:18:13.788Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/TypeTraits.hxx:200:26: error: ‘conditional_t’ is not a member of ‘std’ ; - [2021-02-03T17:18:13.788Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/TypeTraits.hxx:203:98: error: wrong number of template arguments (4, should be at least 1) ; - [2021-02-03T17:18:13.788Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/TypeTraits.hxx:204:21: error: expected unqualified-id before ‘&gt;’ token . And 25 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6825#issuecomment-772677335:3075,error,error,3075,https://root.cern,https://github.com/root-project/root/pull/6825#issuecomment-772677335,4,['error'],['error']
Availability,"T/TypeTraits.hxx:203:98: error: wrong number of template arguments (4, should be at least 1) ; - [2021-02-03T20:35:38.486Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/TypeTraits.hxx:204:21: error: expected unqualified-id before ‘&gt;’ token ; - [2021-02-03T20:35:38.486Z] FAILED: /usr/bin/ccache /usr/bin/c++ -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/res -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -Iginclude -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT core/cont/CMakeFiles/Cont.dir/src/TBtree.cxx.o -MF core/cont/CMakeFiles/Cont.dir/src/TBtree.cxx.o.d -o core/cont/CMakeFiles/Cont.dir/src/TBtree.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/cont/src/TBtree.cxx ; - [2021-02-03T20:35:38.486Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/TypeTraits.hxx:200:26: error: ‘conditional_t’ is not a member of ‘std’ ; - [2021-02-03T20:35:38.487Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/TypeTraits.hxx:200:26: error: ‘conditional_t’ is not a member of ‘std’ ; - [2021-02-03T20:35:38.487Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/TypeTraits.hxx:203:98: error: wrong number of template arguments (4, should be at least 1) ; - [2021-02-03T20:35:38.487Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/TypeTraits.hxx:204:21: error: expected unqualified-id before ‘&gt;’ token . And 20 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6825#issuecomment-772805337:3083,error,error,3083,https://root.cern,https://github.com/root-project/root/pull/6825#issuecomment-772805337,4,['error'],['error']
Availability,"T13:00:32.733Z] /build/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:195:1: error: ‘TThreadExecutor’ does not name a type; did you mean ‘ROOT_TThreadExecutor’? ; - [2020-09-03T13:00:32.733Z] /build/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:200:6: error: ‘TThreadExecutor’ has not been declared ; - [2020-09-03T13:00:32.733Z] /build/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:203:4: error: ‘fTaskArenaW’ was not declared in this scope ; - [2020-09-03T13:00:32.733Z] /build/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:210:8: error: ‘TThreadExecutor’ has not been declared ; - [2020-09-03T13:00:32.733Z] /build/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:213:11: error: ‘fTaskArenaW’ was not declared in this scope ; - [2020-09-03T13:00:32.733Z] /build/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:216:7: error: ‘TThreadExecutor’ has not been declared ; - [2020-09-03T13:00:32.733Z] /build/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:219:11: error: ‘fTaskArenaW’ was not declared in this scope ; - [2020-09-03T13:00:32.733Z] /build/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:222:10: error: ‘TThreadExecutor’ has not been declared ; - [2020-09-03T13:00:32.733Z] /build/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:224:11: error: ‘fTaskArenaW’ was not declared in this scope . And 1 more. ### Warnings:; - [2020-09-03T13:00:32.733Z] /build/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:222:10: warning: ‘unsigned int {anonymous}::ROOT::GetPoolSize()’ defined but not used [-Wunused-function] ; - [2020-09-03T13:00:32.733Z] /build/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:216:7: warning: ‘float {anonymous}::ROOT::ParallelReduce(const std::vector&lt;float&gt;&, const std::function&lt;float(float, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6298#issuecomment-686472663:1475,error,error,1475,https://root.cern,https://github.com/root-project/root/pull/6298#issuecomment-686472663,1,['error'],['error']
Availability,"T23:07:18.997Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xlocnum(1281,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_c0600dfcex': No space left on device [C:\build\workspace\root-pullrequests-build\build\core\base\Base.vcxproj] ; - [2022-12-24T23:07:18.997Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseTemplate.cpp(1829,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_ecb4d6cfdb': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2022-12-24T23:07:19.507Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseExprCXX.cpp(4006,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_478f77c7db': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2022-12-24T23:07:19.507Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/MC/MCParser/MCAsmLexer.h(158,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_d5922222ex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseStmtAsm.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2022-12-24T23:07:19.508Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGCleanup.cpp : fatal error C1085: Cannot write compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.dir\Release\C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11923#issuecomment-1364594588:2184,error,error,2184,https://root.cern,https://github.com/root-project/root/pull/11923#issuecomment-1364594588,1,['error'],['error']
Availability,"TChainParsing test error isn't related to what I'm doing here. It looks like someone tried to compare filesystem paths via string comparisons, which isn't a good idea:. ```; /build/workspace/root-pullrequests-build/root/tree/tree/test/TChainParsing.cxx:26: Failure; Expected: files->At(4)->GetTitle(); Which is: ""root://some.domain/path/to/file.root""; To be equal to: ""root://some.domain/path//to/file.root""; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5062#issuecomment-591452192:19,error,error,19,https://root.cern,https://github.com/root-project/root/pull/5062#issuecomment-591452192,2,"['Failure', 'error']","['Failure', 'error']"
Availability,"TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module stdexcept resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module root_std_complex.h resolved but not visible![5563/8175] Generating G__MathCore.cxx, ../../lib/libMathCore_rdict.pcm, ../../lib/libMathCore.rootmap, ../../lib/MathCore.pcm ; - Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module Rtypes.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TMathBase.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TError.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module algorithm resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TNamed.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TRandom.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TRandom.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TRandom.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TMath.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module map resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TKDTree.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347255787:27584,Error,Error,27584,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347255787,1,['Error'],['Error']
Availability,TDFActionHelpers.hxx:597:25: error: unknown type name 'ColumnNames_t'; did you mean 'Detail::TDF::ColumnNames_t'? ; - include/ROOT/TDFActionHelpers.hxx:674:10: error: unknown type name 'ColumnNames_t'; did you mean 'Detail::TDF::ColumnNames_t'? ; - include/ROOT/TDFActionHelpers.hxx:680:54: error: unknown type name 'ColumnNames_t'; did you mean 'Detail::TDF::ColumnNames_t'? ; - include/ROOT/TDFActionHelpers.hxx:592:10: error: unknown type name 'ColumnNames_t'; did you mean 'Detail::TDF::ColumnNames_t'? ; - include/ROOT/TDFActionHelpers.hxx:597:25: error: unknown type name 'ColumnNames_t'; did you mean 'Detail::TDF::ColumnNames_t'? ; - include/ROOT/TDFActionHelpers.hxx:674:10: error: unknown type name 'ColumnNames_t'; did you mean 'Detail::TDF::ColumnNames_t'? ; - include/ROOT/TDFActionHelpers.hxx:680:54: error: unknown type name 'ColumnNames_t'; did you mean 'Detail::TDF::ColumnNames_t'? ; - include/ROOT/TDFActionHelpers.hxx:592:10: error: unknown type name 'ColumnNames_t'; did you mean 'Detail::TDF::ColumnNames_t'? ; - include/ROOT/TDFActionHelpers.hxx:597:25: error: unknown type name 'ColumnNames_t'; did you mean 'Detail::TDF::ColumnNames_t'? . And 38 more. ### Warnings:; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/hist/hist/src/TH2.cxx:3309:15: warning: comparison 'Int_t' (aka 'int') &gt; 2147483647 is always false [-Wtautological-constant-compare] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/hist/hist/src/TH3.cxx:3846:15: warning: comparison 'Int_t' (aka 'int') &gt; 2147483647 is always false [-Wtautological-constant-compare] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/hist/hist/src/TH1.cxx:9039:15: warning: comparison 'Int_t' (aka 'int') &gt; 2147483647 is always false [-Wtautological-constant-compare] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/net/http/civetweb/civetweb.c:1448:8: warning: implicit declaration of function 'pthread_setname_np' is invalid in C99 [-Wimplicit-function-declaration],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1226#issuecomment-339066411:1366,error,error,1366,https://root.cern,https://github.com/root-project/root/pull/1226#issuecomment-339066411,1,['error'],['error']
Availability,TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ROOT/TSeq.hxx ESTLType.h RStringView.h TClassEdit.h ROOT/RArrayView.hxx ROOT/RMakeUnique.hxx ROOT/RNotFn.hxx ROOT/RStringView.hxx ROOT/TypeTraits.hxx ROOT/rhysd_array_view.hxx TUnixSystem.h TClingRuntime.h root_std_complex.h TBaseClass.h TClass.h TClassGenerator.h TClassMenuItem.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnum.h TEnumConstant.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctionTemplates.h TListOfFunctions.h TMemberStreamer.h TMethod.h TMethodArg.h TMethodCall.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamer.h TStreamerElement.h TToggle.h TToggleGroup.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h Getline.h /home/amadio/src/root/core/base/inc/LinkDef.h; In file included from input_line_1:1:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/7.3.0/include/g++-v7/new:40:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/7.3.0/include/g++-v7/exception:142:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/7.3.0/include/g++-v7/bits/exception_ptr.h:38:; /usr/lib/gcc/x86_64-pc-linux-gnu/7.3.0/include/g++-v7/bits/cxxabi_init_exception.h:38:10: fatal error: 'stddef.h' file not found; #include <stddef.h>; ^~~~~~~~~~; In file included from input_line_4:2:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/7.3.0/include/g++-v7/stdlib.h:30:; In file included from /home/amadio/build/external-llvm/etc/cling/lib/clang/5.0.1/include/stdlib.h:8:; /usr/include/stdlib.h:31:10: fatal error: 'stddef.h' file not found; #include <stddef.h>; ^~~~~~~~~~; Error: Error loading the default header files.; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1632#issuecomment-366989771:3769,error,error,3769,https://root.cern,https://github.com/root-project/root/pull/1632#issuecomment-366989771,4,"['Error', 'error']","['Error', 'error']"
Availability,"TGraph3D .... Well why not. But then that will imply we can draw x y and Z in 3D then we get two more variables mapped on color and size and we can end up with a TGraph4D . The inheritance from TGraph makes it very easy to implement as we have all the painter machinery available. The idea was to introduce a better implementation of what is called in the literature a ""scatter plot"". We do not have this concept in root. The scatter plot for histograms is a misleading disaster as we know ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10608#issuecomment-1131338335:270,avail,available,270,https://root.cern,https://github.com/root-project/root/issues/10608#issuecomment-1131338335,1,['avail'],['available']
Availability,"TI=0 -D_GNU_SOURCE -Iinterpreter/cling/lib/MetaProcessor -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/MetaProcessor -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/include -Iinterpreter/cling/include -UNDEBUG -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-rtti -O3 -DNDEBUG -fvisibility=default -fvisibility-inlines-hidden -std=c++11 -MD -MT interpreter/cling/lib/MetaProcessor/CMakeFiles/obj.clingMetaProcessor.dir/MetaParser.cpp.o -MF interpreter/cling/lib/MetaProcessor/CMakeFiles/obj.clingMetaProcessor.dir/MetaParser.cpp.o.d -o interpreter/cling/lib/MetaProcessor/CMakeFiles/obj.clingMetaProcessor.dir/MetaParser.cpp.o -c /mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp ; - [2020-09-26T21:12:26.843Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:13:32: fatal error: llvm/ADT/StringRef.h: No such file or directory ; - [2020-09-26T21:12:26.843Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DCLING_VERSION=""ROOT_0.8~dev"" -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -Iinterpreter/cling/lib/Utils -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/include -Iinterpreter/cling/include -UNDEBUG -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-rtti -O3 -DNDEBUG -fvisibility=default -fvisibility-inlines-hidden -std=c++11 -MD -MT interpreter/cling/lib/Utils/CMakeFiles/obj.clingUtils.dir/PlatformWin.cpp.o -MF interpreter/cling/lib/Utils/CMakeFiles/obj.clingUtils.dir/PlatformWin.cpp.o.d -o interpreter/cling/lib/Utils/CMakeFiles/obj.clingUtils.dir/PlatformWin.cpp.o -c /mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/PlatformWin.cpp ; - [2020-09-26T21:12:26.843Z] /mnt/build/workspace/root-pullre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699548452:1352,error,error,1352,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699548452,1,['error'],['error']
Availability,"TI=0 -D_GNU_SOURCE -Iinterpreter/cling/lib/MetaProcessor -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/MetaProcessor -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/include -Iinterpreter/cling/include -UNDEBUG -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-rtti -O3 -DNDEBUG -fvisibility=default -fvisibility-inlines-hidden -std=c++11 -MD -MT interpreter/cling/lib/MetaProcessor/CMakeFiles/obj.clingMetaProcessor.dir/MetaParser.cpp.o -MF interpreter/cling/lib/MetaProcessor/CMakeFiles/obj.clingMetaProcessor.dir/MetaParser.cpp.o.d -o interpreter/cling/lib/MetaProcessor/CMakeFiles/obj.clingMetaProcessor.dir/MetaParser.cpp.o -c /mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp ; - [2020-09-26T21:37:11.706Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:13:32: fatal error: llvm/ADT/StringRef.h: No such file or directory ; - [2020-09-26T21:37:11.706Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DCLING_VERSION=""ROOT_0.8~dev"" -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -Iinterpreter/cling/lib/Utils -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/include -Iinterpreter/cling/include -UNDEBUG -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-rtti -O3 -DNDEBUG -fvisibility=default -fvisibility-inlines-hidden -std=c++11 -MD -MT interpreter/cling/lib/Utils/CMakeFiles/obj.clingUtils.dir/PlatformWin.cpp.o -MF interpreter/cling/lib/Utils/CMakeFiles/obj.clingUtils.dir/PlatformWin.cpp.o.d -o interpreter/cling/lib/Utils/CMakeFiles/obj.clingUtils.dir/PlatformWin.cpp.o -c /mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Utils/PlatformWin.cpp ; - [2020-09-26T21:37:11.706Z] /mnt/build/workspace/root-pullre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699550925:1352,error,error,1352,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699550925,1,['error'],['error']
Availability,"TLDR; for reference, the issue is described below. Implicit instantiation of a function template calls `DeclCollector::HandleCXXImplicitFunctionInstantiation()`, which appends the FunctionDecl to the transaction. According to the [docs](https://clang.llvm.org/doxygen/classclang_1_1ASTConsumer.html#a880e9a2fd04c8abd5cd218e0a4ed2e56), the body of the function has not yet been instantiated. `HandleTopLevelDecl()` will be called again for this decl at the end of the TU, which will append it again to the transaction -same `Decl *`, different DCI. This is by design. However, unloading of decls in the transaction should _not_ process the same `Decl *` twice. In the reported case, traversing the AST for a second time triggers an assertion failure in `clang::CXXRecordDecl::getLambdaCallOperator()`, as part of the members of the underlying CXXRecordDecl (of a lambda) are not there anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9850#issuecomment-1057247466:741,failure,failure,741,https://root.cern,https://github.com/root-project/root/issues/9850#issuecomment-1057247466,1,['failure'],['failure']
Availability,"TMVA failures are gone and current failures are due to this branch not containing [this commit](https://github.com/root-project/root/commit/b378a57ebb9ae88002b4b152e6484f01b7dec00f), the weird part is that on some platforms the latest changes in roottest are picked up (so the `hadd-compression-settings` test is run), while on others they are not picked up. That's out of scope for this PR though, merging now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14859#issuecomment-1977444231:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/pull/14859#issuecomment-1977444231,2,['failure'],['failures']
Availability,"TMVA test failure is totally unrelated to this PR, so I will merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2722#issuecomment-426627082:10,failure,failure,10,https://root.cern,https://github.com/root-project/root/pull/2722#issuecomment-426627082,1,['failure'],['failure']
Availability,"TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:; ```shell; [ 98%] Linking CXX executable ../../bin/hist2workspace; [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so; [ 98%] Built target hist2workspace; [100%] Built target RooFitHS3; [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so; [100%] Built target RooFitXRooFit; [100%] Built target onepcm; [100%] Generating lib/modules.idx; Abort trap (core dumped); --- lib/modules.idx ---; *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build; 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build; --- CMakeFiles/modules_idx.dir/all ---; *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build; 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build; *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build; 1 error. make: stopped in /usr/home/erik/devel/resources/root/build; ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell; -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4; Processor 8 core 0 MHz (amd64); Build type RelWithDebInfo; Install path /usr/local; Compiler Clang 14.0.5; Compiler flags:; C -pipe -Wall -W -pthread -O2 -g -DNDEBUG; C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13865#issuecomment-1779361849:2496,error,error,2496,https://root.cern,https://github.com/root-project/root/issues/13865#issuecomment-1779361849,1,['error'],['error']
Availability,TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx TUnixSystem.h root_std_complex.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /mnt/build/workspace/root-pullrequests-build/root/core/base/inc/LinkDef.h ; - [2022-05-31T18:55:17.726Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/TypeTraits.hxx:206:1: error: function cannot return function type 'typename decay&lt;type-parameter-0-0&gt;::type (type-parameter-1-0...)' ; - [2022-05-31T18:55:17.726Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/TypeTraits.hxx:206:1: error: function cannot return function type 'const typename decay&lt;type-parameter-0-0&gt;::type (type-parameter-1-0...)',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10679#issuecomment-1142531453:5974,error,error,5974,https://root.cern,https://github.com/root-project/root/pull/10679#issuecomment-1142531453,2,['error'],['error']
Availability,"TSystem.cxx:760; #14 0x00003fff9ad753c0 in TUnixSystem::AccessPathName (this=0x10020b25570, path=0x1 <error: Cannot access memory at address 0x1>, mode=kFileExists) at /scratch/cmsbuild/vvasilev/root/core/unix/src/TUnixSystem.cxx:1532; #15 0x00003fff8a9902a8 in ?? (); #16 0x00003fff8a99003c in ?? (); #17 0x00003fff8f5d1124 in cling::IncrementalExecutor::executeWrapper (this=0x10020d74f50, function=..., returnValue=0x3fffeacc4a60) at /scratch/cmsbuild/vvasilev/root/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:385; #18 0x00003fff8f4001f0 in cling::Interpreter::RunFunction (this=0x10020b946b0, FD=0x10022a3a210, res=0x3fffeacc4a60) at /scratch/cmsbuild/vvasilev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1161; #19 0x00003fff8f40103c in cling::Interpreter::EvaluateInternal (this=0x10020b946b0, input=..., CO=..., V=0x3fffeacc4a60, wrapPoint=44) at /scratch/cmsbuild/vvasilev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1413; #20 0x00003fff8f3ff7f0 in cling::Interpreter::echo (this=0x10020b946b0, input=..., V=0x3fffeacc4a60) at /scratch/cmsbuild/vvasilev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1063; #21 0x00003fff8f779214 in cling::MetaSema::<lambda(cling::Transaction*, std::__cxx11::string, llvm::StringRef, cling::Value*)>::operator()(cling::Transaction *, std::__cxx11::string, llvm::StringRef, cling::Value *) const (__closure=0x3fffeacc4488, T=0x100219b9ec0, func=..., args=..., ret=0x3fffeacc4a60) at /scratch/cmsbuild/vvasilev/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:141; #22 0x00003fff8f7794b8 in cling::MetaSema::actOnxCommand (this=0x1002147e6e0, file=..., args=..., result=0x3fffeacc4a60) at /scratch/cmsbuild/vvasilev/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:158; #23 0x00003fff8f794738 in cling::MetaParser::isXCommand (this=0x3fffeacc4750, actionResult=; 0x3fffeacc4818: cling::MetaSema::AR_Success, resultValue=0x3fffeacc4a60) at /scratch/cmsbuild/vvasilev/root/interpreter/cling/lib/MetaProcessor/M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-981977924:66185,echo,echo,66185,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-981977924,2,['echo'],['echo']
Availability,TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPainter.h TVirtualPerfStats.h TVirtualPS.h TVirtualQConnection.h TVirtualRWMutex.h TVirtualTableInterface.h TVirtualViewer3D.h TVirtualX.h ROOT/RDirectoryEntry.hxx ROOT/RIndexIter.hxx strlcpy.h snprintf.h strtok.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx TUnixSystem.h root_std_complex.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /mnt/build/workspace/root-pullrequests-build/root/core/base/inc/LinkDef.h ; - [2021-09-28T10:18:00.739Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RStringView.hxx:25:10: fatal error: 'string_view' file not found,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9037#issuecomment-929054415:5517,error,error,5517,https://root.cern,https://github.com/root-project/root/pull/9037#issuecomment-929054415,1,['error'],['error']
Availability,TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPainter.h TVirtualPerfStats.h TVirtualPS.h TVirtualQConnection.h TVirtualRWMutex.h TVirtualTableInterface.h TVirtualViewer3D.h TVirtualX.h ROOT/RDirectoryEntry.hxx ROOT/RIndexIter.hxx strlcpy.h snprintf.h strtok.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx TUnixSystem.h root_std_complex.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /mnt/build/workspace/root-pullrequests-build/root/core/base/inc/LinkDef.h ; - [2021-09-29T18:16:41.227Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RStringView.hxx:25:10: fatal error: 'string_view' file not found,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9048#issuecomment-930427202:5517,error,error,5517,https://root.cern,https://github.com/root-project/root/pull/9048#issuecomment-930427202,1,['error'],['error']
Availability,TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPainter.h TVirtualPerfStats.h TVirtualPS.h TVirtualQConnection.h TVirtualRWMutex.h TVirtualTableInterface.h TVirtualViewer3D.h TVirtualX.h ROOT/RDirectoryEntry.hxx ROOT/RIndexIter.hxx strlcpy.h snprintf.h strtok.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx TUnixSystem.h root_std_complex.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /mnt/build/workspace/root-pullrequests-build/root/core/base/inc/LinkDef.h ; - [2021-09-29T18:25:11.948Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RStringView.hxx:25:10: fatal error: 'string_view' file not found,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9048#issuecomment-930434053:5517,error,error,5517,https://root.cern,https://github.com/root-project/root/pull/9048#issuecomment-930434053,1,['error'],['error']
Availability,TVirtualPadEditor.h TVirtualPad.h TVirtualPadPainter.h TVirtualPerfStats.h TVirtualPS.h TVirtualQConnection.h TVirtualRWMutex.h TVirtualTableInterface.h TVirtualViewer3D.h TVirtualX.h ROOT/RDirectoryEntry.hxx ROOT/RIndexIter.hxx strlcpy.h snprintf.h strtok.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx TUnixSystem.h root_std_complex.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/mkrzewic/src/root_src/core/base/inc/LinkDef.h ; Segmentation fault; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:32925: core/CMakeFiles/G__Core.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1537529063:5725,fault,fault,5725,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1537529063,4,"['Error', 'fault']","['Error', 'fault']"
Availability,"T\obj.clangAST.dir\Release\CommentBriefParser.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-08-05T03:25:38.971Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/CodeGen/ScheduleDAG.h(678,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_ccfc6494db': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\SelectionDAGISel.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2022-08-05T03:25:39.246Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Casting.h(267,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_5fa578a3ex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\LoopUnrollAndJam.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-08-05T03:25:39.524Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\LoopInstSimplify.cpp(255,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_81c55232gl': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-08-05T03:25:39.524Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\ScheduleDAGSDNodes.cpp(1034,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_3bc3814fdb': No space left on device [C:\build\workspace\root-pullrequ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11121#issuecomment-1206003442:3777,error,error,3777,https://root.cern,https://github.com/root-project/root/pull/11121#issuecomment-1206003442,1,['error'],['error']
Availability,Table; Warning in <TClassTable::Add>: class TZIPMember already in TClassTable; fatal error: module map file '/usr/share/root/cling/module.modulemap' not found; fatal error: module map file '/usr/share/root/cling/module.modulemap' not found; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; Module libc not found.; Module std not found.; <<< cling interactive line includer >>>: remark: could not acquire lock file for module '_Builtin_intrinsics': failed to create unique file /usr/lib64/root/_Builtin_intrinsics.pcm.lock-f66e7495: Permission denied [-Rmodule-build]; <<< cling interactive line includer >>>: remark: building module '_Builtin_intrinsics' as '/usr/lib64/root/_Builtin_intrinsics.pcm' [-Rmodule-build]; fatal error: module map file '/usr/share/root/cling/module.modulemap' not found; <<< cling interactive line includer >>>: remark: finished building module '_Builtin_intrinsics' [-Rmodule-build]; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Failed to load module _Builtin_intrinsics; fatal error: module map file '/usr/share/root/cling/module.modulemap' not found; Failed to load module ROOT_Foundation_C; fatal error: module map file '/usr/share/root/cling/module.modulemap' not found; Failed to load module ROOT_Config; fatal error: module map file '/usr/share/root/cling/module.modulemap' not found; Failed to load module ROOT_Rtypes; fatal error: module map file '/usr/share/root/cling/module.modulemap' not found; Failed to load module ROOT_Foundation_Stage1_NoRTTI; fatal error: module map file '/usr/share/root/cling/module.modulemap' not found; Failed to load module Core; fatal error: module map file '/usr/share/root/cling/module.modulemap' not found; Failed to load module Rint; fatal error: module map file '/usr/share/root/cling/module.modulemap' not found; Failed to load module RIO; fatal error: module map file '/usr/share/root/cling/module.modulemap' not fo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9518#issuecomment-1059973386:32067,error,error,32067,https://root.cern,https://github.com/root-project/root/pull/9518#issuecomment-1059973386,2,['error'],['error']
Availability,"TemplateInstantiate.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Sema\obj.clangSema.vcxproj] ; - [2023-12-18T16:27:35.113Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\llvm\include\llvm/Support/Casting.h(64,72): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Sema\SemaTemplateVariadic.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Sema\obj.clangSema.vcxproj] ; - [2023-12-18T16:27:35.113Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\llvm\include\llvm/ADT/SmallVector.h(672,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Analysis\UninitializedValues.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Analysis\obj.clangAnalysis.vcxproj] ; - [2023-12-18T16:27:35.113Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\include\clang/AST/ASTContext.h(1774,32): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Analysis\ThreadSafety.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Analysis\obj.clangAnalysis.vcxproj] ; - [2023-12-18T16:27:35.113Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\llvm\include\llvm/Support/Casting.h(518,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Sema\SemaStmt.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Sema\obj.clangSema.vcxproj] . And 70 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14245#issuecomment-1861003544:4057,error,error,4057,https://root.cern,https://github.com/root-project/root/pull/14245#issuecomment-1861003544,2,['error'],['error']
Availability,"Templated constructors actually work since last week (except not yet on Mac due to a bug in TClingCallFunc; I needed them for shared_ptr), and yes they're a hack. Code is in repo, but not yet released. ADL will never work properly in full automatic mode, but is already covered most of the way. I'm having that discussion right now with a user who wants to turn Python tuples into std::tuples: the problem is underspecified on the Python side. So although it can be made to generally work, user-provided types are necessary to cover corner cases, e.g. by handing template arguments to std::make_tuple. Python's three-way comparison operator is only syntax, not semantics, so the spaceship would simply be broken down in Python's richcompare and the only real issue again is ROOT/meta giving wrong overloads. That said, I'm moving away from operator lookups: not only are the overloads often wrong, so I'm doing my own ADL, but also TClingCallFunc generates broken code on Mac and Windows. Rather, I want to use a generic comparison template and let SFINAE deal with it. The difference between removing std::, giving wrong overloads, etc. and string <-> decl is that the former is a problem b/c ROOT/meta gives the _wrong_ results. Strings are sometimes clunky, but perfectly fine if they are correct. Yes, letting clang parse names (as done for function template lookups already) is exactly what should happen. But the next step is to funnel the results to the Python mappings, not expose cppyy to decls or their intricate details. E.g. the converters and executor lookups should be a combination of strings and categories, just like it is now (except that the categories are derived from string parsing, like looking for ends_in('*')). Doing that selection based on decls as suggested here and in the e-mail thread with Gerhard makes no sense whatsoever: you'd have to maintain three times the same functionality. I would want something like this:. ```; opaque_handle h = what_is(parent, name); type_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3579#issuecomment-478718847:712,down,down,712,https://root.cern,https://github.com/root-project/root/pull/3579#issuecomment-478718847,1,['down'],['down']
Availability,Test errors has nothing to do with PR - merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4551#issuecomment-542327560:5,error,errors,5,https://root.cern,https://github.com/root-project/root/pull/4551#issuecomment-542327560,1,['error'],['errors']
Availability,"Test failed due to failure of uploading test results to cdash, it seems:; ```; 05:58:48 100% tests passed, 0 tests failed out of 1038; ```. Two minutes later:. ```; 06:00:58 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds; 06:00:58 Problems when submitting via HTTP; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-365151906:19,failure,failure,19,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-365151906,2,"['Error', 'failure']","['Error', 'failure']"
Availability,"Test failure are unrelated, thanks for catching problem!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5160#issuecomment-599420748:5,failure,failure,5,https://root.cern,https://github.com/root-project/root/pull/5160#issuecomment-599420748,1,['failure'],['failure']
Availability,Test failure are unrelated/preexisting,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2775#issuecomment-435186866:5,failure,failure,5,https://root.cern,https://github.com/root-project/root/pull/2775#issuecomment-435186866,1,['failure'],['failure']
Availability,Test failure fixed by push to https://github.com/root-project/roottest/pull/374 (builds are ok there).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4264#issuecomment-523910296:5,failure,failure,5,https://root.cern,https://github.com/root-project/root/pull/4264#issuecomment-523910296,1,['failure'],['failure']
Availability,Test failure in `alma9-clang` unrelated:; ```txt; TEST FAILURES:; 470:gtest-tree-dataframe-test-dataframe-simple; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16385#issuecomment-2337861300:5,failure,failure,5,https://root.cern,https://github.com/root-project/root/pull/16385#issuecomment-2337861300,2,"['FAILURE', 'failure']","['FAILURES', 'failure']"
Availability,Test failure is unrelated (LLVM upgrade-related).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7232#issuecomment-791407965:5,failure,failure,5,https://root.cern,https://github.com/root-project/root/pull/7232#issuecomment-791407965,1,['failure'],['failure']
Availability,Test failure is unrelated (according to @eguiraud ).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9278#issuecomment-967192523:5,failure,failure,5,https://root.cern,https://github.com/root-project/root/pull/9278#issuecomment-967192523,1,['failure'],['failure']
Availability,Test failure is unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4365#issuecomment-529523948:5,failure,failure,5,https://root.cern,https://github.com/root-project/root/pull/4365#issuecomment-529523948,1,['failure'],['failure']
Availability,"Test failure is unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2732#issuecomment-601307887:5,failure,failure,5,https://root.cern,https://github.com/root-project/root/pull/2732#issuecomment-601307887,1,['failure'],['failure']
Availability,Test failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4372#issuecomment-529960260:5,failure,failure,5,https://root.cern,https://github.com/root-project/root/pull/4372#issuecomment-529960260,2,['failure'],['failure']
Availability,Test failure seems spurious / unrelated; I'm merging to progress with v6.28 (I'll open a backport PR).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12737#issuecomment-1528735927:5,failure,failure,5,https://root.cern,https://github.com/root-project/root/pull/12737#issuecomment-1528735927,1,['failure'],['failure']
Availability,Test failure seems unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12212#issuecomment-1414322868:5,failure,failure,5,https://root.cern,https://github.com/root-project/root/pull/12212#issuecomment-1414322868,1,['failure'],['failure']
Availability,Test failure seems unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3598#issuecomment-476810908:5,failure,failure,5,https://root.cern,https://github.com/root-project/root/pull/3598#issuecomment-476810908,1,['failure'],['failure']
Availability,Test failures are all timeouts in jupyter notebooks. I don't think that is related...?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4974#issuecomment-586911454:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/pull/4974#issuecomment-586911454,1,['failure'],['failures']
Availability,"Test failures are due to a node configuration problem on macphsft20, so merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6580#issuecomment-705370618:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/pull/6580#issuecomment-705370618,1,['failure'],['failures']
Availability,Test failures are infrastructure related.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1441#issuecomment-350560539:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/pull/1441#issuecomment-350560539,1,['failure'],['failures']
Availability,Test failures are sort of random... Any clue why?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3763#issuecomment-489601150:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/pull/3763#issuecomment-489601150,1,['failure'],['failures']
Availability,Test failures are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6585#issuecomment-705458123:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/pull/6585#issuecomment-705458123,1,['failure'],['failures']
Availability,"Test failures are unrelated to these changes, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8257#issuecomment-850370356:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/pull/8257#issuecomment-850370356,1,['failure'],['failures']
Availability,Test failures are unrelated to this change. Likely related to #7433 and 2c4a756d38d9b5f0348f645a116b3014159f03d6,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7455#issuecomment-796560062:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/pull/7455#issuecomment-796560062,1,['failure'],['failures']
Availability,"Test failures are unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11355#issuecomment-1247990727:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/pull/11355#issuecomment-1247990727,4,['failure'],['failures']
Availability,"Test failures are unrelated, we can safely merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5307#issuecomment-610209307:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/pull/5307#issuecomment-610209307,1,['failure'],['failures']
Availability,Test failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6729#issuecomment-720574606:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/pull/6729#issuecomment-720574606,1,['failure'],['failures']
Availability,Test failures because `pyspark` module is needed in the testing environment,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7139#issuecomment-774109566:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/pull/7139#issuecomment-774109566,1,['failure'],['failures']
Availability,Test failures do not seem related at first glance. Might need a separate investigation. Rerunning the CI for now,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12256#issuecomment-1423961755:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/pull/12256#issuecomment-1423961755,1,['failure'],['failures']
Availability,"Test failures on centos7 are unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6050#issuecomment-660169852:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/pull/6050#issuecomment-660169852,1,['failure'],['failures']
Availability,Test failures seem unrelated. @vepadulano @pcanal is there anything else before this can be merged?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14822#issuecomment-1993812602:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/pull/14822#issuecomment-1993812602,1,['failure'],['failures']
Availability,"Test failures unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9344#issuecomment-983393550:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/pull/9344#issuecomment-983393550,1,['failure'],['failures']
Availability,Test failures unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15942#issuecomment-2194560152:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/pull/15942#issuecomment-2194560152,1,['failure'],['failures']
Availability,"Test failures were due to a dirty build directory. I logged into the node, ran `cmake .`, and the headers were then found. If the headers are not found in other builds, please clear the build directory of the affected node(s), so that the roottest targets get recreated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/851#issuecomment-321595336:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/pull/851#issuecomment-321595336,1,['failure'],['failures']
Availability,Testing evil comment:; ```; Errors:. FAILED: interpreter/llvm/src/tools/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/IncrementalParser.cpp.o; c++: fatal error: Killed signal terminated program cc1plus; FAILED: interpreter/llvm/src/tools/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/Interpreter.cpp.o; c++: fatal error: Killed signal terminated program cc1plus; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5130#issuecomment-597685166:28,Error,Errors,28,https://root.cern,https://github.com/root-project/root/pull/5130#issuecomment-597685166,3,"['Error', 'error']","['Errors', 'error']"
Availability,Testing failure are because of networks timeout.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15931#issuecomment-2191492754:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/15931#issuecomment-2191492754,1,['failure'],['failure']
Availability,Tests al OK despite of the failure...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/529#issuecomment-297988694:27,failure,failure,27,https://root.cern,https://github.com/root-project/root/pull/529#issuecomment-297988694,1,['failure'],['failure']
Availability,Tests failures are unrelated to this patch ... and fix the 32bits build :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2158#issuecomment-395430135:6,failure,failures,6,https://root.cern,https://github.com/root-project/root/pull/2158#issuecomment-395430135,1,['failure'],['failures']
Availability,Tests failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2725#issuecomment-426031295:6,failure,failures,6,https://root.cern,https://github.com/root-project/root/pull/2725#issuecomment-426031295,1,['failure'],['failures']
Availability,"Tests passed errored with ""Problems when submitting via HTTP""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5447#issuecomment-618842403:13,error,errored,13,https://root.cern,https://github.com/root-project/root/pull/5447#issuecomment-618842403,1,['error'],['errored']
Availability,"Tests passed, failure is an infrastructure problem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/772#issuecomment-315617393:14,failure,failure,14,https://root.cern,https://github.com/root-project/root/pull/772#issuecomment-315617393,1,['failure'],['failure']
Availability,Tests passed. Errors here are due to the fact I had to rebase again before the final merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/958#issuecomment-328371104:14,Error,Errors,14,https://root.cern,https://github.com/root-project/root/pull/958#issuecomment-328371104,1,['Error'],['Errors']
Availability,"Thank you @amadio , indeed we need Axel or Vasil's approval to merge (ping :) ). IIUC this PR does not solve the last item in 10870, ""investigate the runtime and memory cost of CLING_DEBUG=1, consider having it on by default in some cases, e.g. for interactive usage"". Again up to cling devs to decide if it's worth opening a separate issue for that or we are happy with the current situation for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10890#issuecomment-1204187798:70,ping,ping,70,https://root.cern,https://github.com/root-project/root/pull/10890#issuecomment-1204187798,1,['ping'],['ping']
Availability,"Thank you @amadio! I am going to merge fix, since I want to re-enable incrementals in Jenkins.; Windows build is actually green:; `13:11:40 Processing hsimple.C...; 13:11:40 hsimple : Real Time = 0.33 seconds Cpu Time = 0.25 seconds; 13:11:40 (TFile *) 0xa3f64a8; 13:11:40 Building Custom Rule C:/build/workspace/root-pullrequests-build_2/root/CMakeLists.txt; 13:11:40 CMake does not need to re-run because C:/build/workspace/root-pullrequests-build_2/build/CMakeFiles/generate.stamp is up-to-date.; 13:11:40 Building Custom Rule C:/build/workspace/root-pullrequests-build_2/root/CMakeLists.txt; 13:11:40 CMake does not need to re-run because C:/build/workspace/root-pullrequests-build_2/build/CMakeFiles/generate.stamp is up-to-date.; 13:11:40 Command exited with the value: 0; 13:11:40 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount; 13:11:40 0 Compiler errors`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4242#issuecomment-523016327:905,error,errors,905,https://root.cern,https://github.com/root-project/root/pull/4242#issuecomment-523016327,1,['error'],['errors']
Availability,"Thank you @ferdymercury , @bellenot is the authoritative opinion here, but afaik I think we want this, it's just not urgent enough w.r.t. the available personpower for build system improvements.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9090#issuecomment-939835047:142,avail,available,142,https://root.cern,https://github.com/root-project/root/issues/9090#issuecomment-939835047,1,['avail'],['available']
Availability,"Thank you @guitargeek ! I don't understand why the explicit `move` is needed? The `RooDataSetHelper` is a temporary and it is a move-only type, so move-construction seems to be the only available option there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8768#issuecomment-888852357:186,avail,available,186,https://root.cern,https://github.com/root-project/root/pull/8768#issuecomment-888852357,1,['avail'],['available']
Availability,Thank you @j-mathe ! The failure in the `dataframe_misc` test in roottest looks real. Before/after this patch the output of the test is:. ```; -Sum b2 init: 2471; -Sum dv init: 1491; +Sum b2 init: 2470; +Sum dv init: 1490; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11230#issuecomment-1222078558:25,failure,failure,25,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1222078558,1,['failure'],['failure']
Availability,"Thank you @jalopezg-r00t :partying_face: I'll rebase the commits shortly and a bit indiscriminately. > I would just suggest testing it again on `olsky-03` or similar, when available. All clear on our (thankfully operational) HPE cluster with daos / libdaos 2.2.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11480#issuecomment-1312341311:172,avail,available,172,https://root.cern,https://github.com/root-project/root/pull/11480#issuecomment-1312341311,1,['avail'],['available']
Availability,"Thank you @vepadulano !. I'm happy to do another pass, but I'd rather do so after the tests are added: it takes me around half a day of work to go through a PR this size, I'd like to reduce the amount of passes... :sweat_smile: . (the warnings are real and the test failure is because of an expected error message that needs to be updated in the test -- or the new message needs to match the old one)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12363#issuecomment-1581188983:266,failure,failure,266,https://root.cern,https://github.com/root-project/root/pull/12363#issuecomment-1581188983,2,"['error', 'failure']","['error', 'failure']"
Availability,Thank you again for reporting @AlkaidCheng . This is fixed in the master branch (which you can test out via the [nightly builds](https://root.cern/install/nightlies/)) and the fix will be available in the upcoming v6.26.02 patch release. Let us know if you encounter any further issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10233#issuecomment-1090006206:188,avail,available,188,https://root.cern,https://github.com/root-project/root/issues/10233#issuecomment-1090006206,1,['avail'],['available']
Availability,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```; Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'; aborting; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Exit code 0xc0000374; ```. ```; 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```; 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Fail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14472#issuecomment-1915527940:160,failure,failures,160,https://root.cern,https://github.com/root-project/root/pull/14472#issuecomment-1915527940,3,['failure'],"['failure', 'failures']"
Availability,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times); ```; CMake Error in core/clingutils/CMakeLists.txt:; The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict; listDict; forward_listDict; dequeDict; mapDict; map2Dict; unordered_mapDict; multimapDict; multimap2Dict; unordered_multimapDict; setDict; unordered_setDict; multisetDict; unordered_multisetDict; complexDict; valarrayDict. but none of these is a common dependency of the other(s). This is not; allowed by the Xcode ""new build system"".; ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14595#issuecomment-1932346175:83,error,error,83,https://root.cern,https://github.com/root-project/root/issues/14595#issuecomment-1932346175,3,"['Error', 'error']","['Error', 'error']"
Availability,Thank you for the PR. ; I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14506#issuecomment-1926586564:119,error,error,119,https://root.cern,https://github.com/root-project/root/pull/14506#issuecomment-1926586564,1,['error'],['error']
Availability,"Thank you for the clarification. I had a closer look to this. The problem resides in that, during the deserialization, `libROOTPythonizations` is loaded, which in turn triggers the loading of `libcppyy`. Both libraries are extension modules. During the module initialization of `libROOTPythonizations`, it calls into `libcppyy`, but the latter has not been initialized yet (it has not been imported as a module), which causes the error. This does not happen during `import ROOT`, where all the imports are properly done. What I can try to do is ensure `libcppyy` is imported during the initialization of `libROOTPythonizations`. Let's see how that goes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6552#issuecomment-710038856:430,error,error,430,https://root.cern,https://github.com/root-project/root/issues/6552#issuecomment-710038856,1,['error'],['error']
Availability,"Thank you for the comment. Yes there was an error in the code above, it is fixed now. . It is also correct that adding `g.SetSumErrorsMode(TGraphMultiErrors::kSquareSum);` fixes the problem. It is then a question of documentation. I will keep the issue open, but changing its title",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9335#issuecomment-985428307:44,error,error,44,https://root.cern,https://github.com/root-project/root/issues/9335#issuecomment-985428307,1,['error'],['error']
Availability,"Thank you for the reference. I have updated my JS scripts to use modules and my Web service works fine now with v7. May I ask one more question about axis labels for histograms. If a histogram is drawn as 2D image then I can adjust the color, size and offset of the axis labels using the context drop-down menu. However if I draw 2D histogram as 3D image using the ""lego2"" option then the axis labels drop-down menu still appears but makes no effect on the labels visualisation. None of the selected options works, neither color, not size or offset. The point is that sometimes the labels are so small that they are completely unreadable and it would have been nice to be able to increase the font size. It's also quite annoying that the labels are not aligned to the bins center, but instead are aligned to the bins edges. Is this behaviour expected? Attached image shows the issues. <img width=""1432"" alt=""image"" src=""https://user-images.githubusercontent.com/29973760/173081896-841849be-48ca-4c01-84f0-ff3d6c04673e.png"">",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10727#issuecomment-1152393820:301,down,down,301,https://root.cern,https://github.com/root-project/root/issues/10727#issuecomment-1152393820,2,['down'],['down']
Availability,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:; ```; >>> import Ntuple; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/etejedor/Ntuple.py"", line 4, in <module>; class Ntuple(ROOT.TChain):; KeyError: 'fProofChain'; ```; So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:; https://sft.its.cern.ch/jira/browse/ROOT-11025; https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6467#issuecomment-701971067:367,error,error,367,https://root.cern,https://github.com/root-project/root/issues/6467#issuecomment-701971067,4,['error'],['error']
Availability,"Thank you for the report, this looks like an issue with the pipes we create internally to capture output and error from the C++ code. I'll have a look.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8326#issuecomment-855867886:109,error,error,109,https://root.cern,https://github.com/root-project/root/issues/8326#issuecomment-855867886,1,['error'],['error']
Availability,"Thank you for the report. ; With current muster it is not sufficient to call `ROOT::DisableImplicitMT();`, you would need to do : `gGlobalMutex=nullptr`. ; I have now applied a new fix (see linked PR) where the TVirtualFitter should now be available also in MT mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13041#issuecomment-1598565357:240,avail,available,240,https://root.cern,https://github.com/root-project/root/issues/13041#issuecomment-1598565357,1,['avail'],['available']
Availability,"Thank you to report this problem and the test to reproduce. The problem is to be not in the bin content and error of the resulting histograms but in the sum of all bin contents and errors, e.g. `h->GetWeightSum()`.; I will provide soon a PR fixing this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11333#issuecomment-1253617725:108,error,error,108,https://root.cern,https://github.com/root-project/root/issues/11333#issuecomment-1253617725,2,['error'],"['error', 'errors']"
Availability,"Thank you very much for catching these errors, @smuzaffar. It appears our CI doesn't cover all code branches... Anyway, given that the pythonization implemented in C++ still works fine even after the CPyCppyy upgrade in my other PR, this translation to Python is not necessary at this moment, and I will close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14441#issuecomment-2002079910:39,error,errors,39,https://root.cern,https://github.com/root-project/root/pull/14441#issuecomment-2002079910,1,['error'],['errors']
Availability,"Thank you very much for your work, @egpbos! That's amazing progress!. Do you know what's going on with these failures on macOS?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15797#issuecomment-2158293977:109,failure,failures,109,https://root.cern,https://github.com/root-project/root/pull/15797#issuecomment-2158293977,1,['failure'],['failures']
Availability,"Thank you! That's great you also addressed the comment with the redundant verbosity flag. Let's test this once with multiprocess off, and then afterwards once with multiprocess on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11577#issuecomment-1282338633:64,redundant,redundant,64,https://root.cern,https://github.com/root-project/root/pull/11577#issuecomment-1282338633,1,['redundant'],['redundant']
Availability,Thank you!; Is the formatting fine? I do not understand the failure. Is it the space before the semicolon?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11507#issuecomment-1271315677:60,failure,failure,60,https://root.cern,https://github.com/root-project/root/pull/11507#issuecomment-1271315677,1,['failure'],['failure']
Availability,"Thank you, @ferdymercury -- somehow I missed those previous issues... sorry about that. Just to share here, I also tried with v6-22-08 from source and received the same XROOTD build error (but fewer warnings):; [XROOTD-build-out.log](https://github.com/root-project/root/files/8621472/XROOTD-build-out.log); [XROOTD-build-err.log](https://github.com/root-project/root/files/8621473/XROOTD-build-err.log). I then tried; ```; $ cd ~; $ git clone https://github.com/root-project/root.git; $ mkdir root_build; $ cd root_build; $ cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=$(which gcc) -DCMAKE_CXX_COMPILER=$(which g++) -DCMAKE_Fortran_COMPILER=$(which gfortran) -S ../root -B ./; $ cmake --build .; ```; and XROOTD seems to have built successfully, but there seems to be some other errors. The configure step said that the ROOT version is 6-27-01.; [build_out.log](https://github.com/root-project/root/files/8626646/build.log); [build_err.log](https://github.com/root-project/root/files/8626647/build_err.log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10518#issuecomment-1117767710:182,error,error,182,https://root.cern,https://github.com/root-project/root/issues/10518#issuecomment-1117767710,2,['error'],"['error', 'errors']"
Availability,"Thank you. Not exactly: in my case I was online, and then went offline. The; build process for ROOT takes several hours on my laptop. I wouldn't call that check reliable. Ideally, it could download the files; during that check or in the beginning of the build process.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15416#issuecomment-2106267266:161,reliab,reliable,161,https://root.cern,https://github.com/root-project/root/pull/15416#issuecomment-2106267266,2,"['down', 'reliab']","['download', 'reliable']"
Availability,"Thanks - an existing application is a good reason for using legacy code, this was exactly what I was hoping to hear. Look - these are memory leaks, and we can drill down why and how to fix them. I'd appreciate your help with understanding the sequence of `~TROOT()` and `~TThreadTearDownGuard()` as mentioned above, in your use case. Can you tell me which one comes first, and what the backtrace is at that point?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8297#issuecomment-852830039:165,down,down,165,https://root.cern,https://github.com/root-project/root/issues/8297#issuecomment-852830039,1,['down'],['down']
Availability,"Thanks @Axel-Naumann for the green light! FYI, I have added one more commit that replaces the usage of the `RStringView` header with `<string_view>`. Also, can you please approve the sister PR in roottest to fix the CI failures? Thanks!; https://github.com/root-project/roottest/pull/1031",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13993#issuecomment-1788544647:219,failure,failures,219,https://root.cern,https://github.com/root-project/root/pull/13993#issuecomment-1788544647,1,['failure'],['failures']
Availability,"Thanks @Axel-Naumann. I'm afraid I still see the issue even if I ask for an existing type, e.g. `std::vector<int>::value_type`. I just tested the following snippet:. ```; import ROOT. while True:; ROOT.TClass.GetClass(""std::vector<int>::value_type""); ```. on:. ```; $ root --version; ROOT Version: 6.24/06; Built for linuxx8664gcc on Sep 02 2021, 14:20:23; From tags/v6-24-06@v6-24-06; ```. Admittedly, we were also making some non-optimal calls to `TClass::GetClass()` and the most reliable way to avoid the issue is to avoid these calls altogether. However, finding the offending calls is a bit of a challenge at the moment. Is there a more targeted way to warn about auto-parsing apart from setting `ROOTDEBUG=1`, which of course prints a lot more.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9029#issuecomment-1110614505:483,reliab,reliable,483,https://root.cern,https://github.com/root-project/root/issues/9029#issuecomment-1110614505,1,['reliab'],['reliable']
Availability,"Thanks @bellenot ! I don't know what happened to [the PR build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81795/console), but I did not notice these failures, sorry about that. Can you please reduce the amount of ifdef'd code to:. ```cpp; #ifdef _WIN32; const std::string type = ""struct `private: virtual void __thiscall RDataFrameInterface_TypeUnknownToInterpreter_Test::TestBody(void)'::`2'::SimpleType"";; #else; const std::string type = ""RDataFrameInterface_TypeUnknownToInterpreter_Test::TestBody()::SimpleType"";; #endif; ```. and then simply use `type` in the error strings that we check?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5612#issuecomment-628129578:180,failure,failures,180,https://root.cern,https://github.com/root-project/root/pull/5612#issuecomment-628129578,2,"['error', 'failure']","['error', 'failures']"
Availability,"Thanks @chrisburr , these are all with 6.22/02, right? In master there are a few fixes for the inheritance, so I would try with it instead. From the tests I have done so far (master, compiled from sources):; - Python <= 3.6 : error when defining the derived Python class (`KeyError: 'fProofChain'`). This is known and it is the same issue as the two JIRA tickets referenced above.; - Python >= 3.7 : error during the construction of the derived class object (`no constructor available for 'TChain'`). This one I need to investigate. I didn't try python/ipython.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6467#issuecomment-702613964:226,error,error,226,https://root.cern,https://github.com/root-project/root/issues/6467#issuecomment-702613964,3,"['avail', 'error']","['available', 'error']"
Availability,"Thanks @dpiparo for your PR, after merging I was able to continue the investigation on this issue! After removing this code from the TMVA initialization, we are seeing different problems, so I will open a new issue for those and consider this closed. Still, since all the problems we see are related to the same triggering factor, I will also write it here for completeness. It turns out that the Spark workers have a different set of environment variables from the one available in the client session. In particular, the `PATH` and `ROOT_INCLUDE_PATH` are completely removed in the Spark workers, which was also causing the absence of the `root-config` command",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13798#issuecomment-1749122934:470,avail,available,470,https://root.cern,https://github.com/root-project/root/issues/13798#issuecomment-1749122934,1,['avail'],['available']
Availability,"Thanks @etejedor. Indeed, it works for the ""Bleeding Edge"" (root v6.25). I tried to update my root version in my desktop but I see I could only download up to 6.24.06. Is there a way for me to run the bleeding edge version locally or in a cluster? (Apart from using SWAN?) . I also see that the tutorial has been taken down. Perhaps someone is working on it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8973#issuecomment-915605758:144,down,download,144,https://root.cern,https://github.com/root-project/root/issues/8973#issuecomment-915605758,2,['down'],"['down', 'download']"
Availability,Thanks @hahnjo should be addressed now. (The failures probably tell me which packages are missing on the build nodes...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13786#issuecomment-1744983987:45,failure,failures,45,https://root.cern,https://github.com/root-project/root/pull/13786#issuecomment-1744983987,1,['failure'],['failures']
Availability,"Thanks @paguenther for the ping! PyROOT uses `cppyy` to create the automatic Python bindings, so these kind of problems are good to also post there:; https://github.com/wlav/cppyy/issues/214",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9246#issuecomment-1927197799:27,ping,ping,27,https://root.cern,https://github.com/root-project/root/issues/9246#issuecomment-1927197799,1,['ping'],['ping']
Availability,"Thanks @pcanal ! Indeed, with `#include <experimental/array>` it works:; ```; root [0] #include <experimental/array>; root [1] auto A = std::experimental::make_array(1,2,3);; root [2] A; (std::array<int, 3> &) { 1, 2, 3 }; root [3]; ```; And I didn't realize it would, since it fails on Windows:; ```; root [0] #include <experimental/array>; ROOT_prompt_0:1:10: fatal error: 'experimental/array' file not found; #include <experimental/array>; ^~~~~~~~~~~~~~~~~~~~; root [1]; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10924#issuecomment-1179077905:368,error,error,368,https://root.cern,https://github.com/root-project/root/issues/10924#issuecomment-1179077905,1,['error'],['error']
Availability,"Thanks @wlav!. > I understand where `PySequence_Check` is coming from (there is e.g. a standard Python `iterator` that will try indexing an object from 0 with integers). Let's ping @amete to ask exactly where it comes from in the context of ATLAS. Knowing how you use PyROOT would help us to make recommendations and if possible improve cppyy for this particular case. I don't think we can converge here without your input. > Maybe `__getitem__` can be refined to only appear after lookup through `__getattr__`, i.e. to make it fully instance-specific. . In the original reproducer, the `__getitem__` attribute check is done for the instance, so this wouldn't help there right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15161#issuecomment-2057675077:176,ping,ping,176,https://root.cern,https://github.com/root-project/root/issues/15161#issuecomment-2057675077,1,['ping'],['ping']
Availability,"Thanks @wlav, @guitargeek. We have a piece of code, [PyROOTInspector](https://gitlab.cern.ch/atlas/athena/-/blob/main/Control/RootUtils/src/pyroot/PyROOTInspector.cxx), that we use to pythonize our data to do some generic operations, such as file comparisons etc. That relies on the Python/C API, hence the issue. Actually, I recently put in a patch that seems to do the trick, at least from a practical point of view:. https://gitlab.cern.ch/atlas/athena/-/merge_requests/70435/diffs. With this we can recover the same functionality as in the previous `cppyy` versions but I'm in general open to suggestions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15161#issuecomment-2057704255:503,recover,recover,503,https://root.cern,https://github.com/root-project/root/issues/15161#issuecomment-2057704255,1,['recover'],['recover']
Availability,"Thanks Josh! Unfortunately the test failures above seem to be caused by the changes in this PR but I have no idea why or how to fix them (yet). Anyway it's on us. These changes are ok, it's on my to do list to debug the pyroot failures, given my current bandwidth it will probably have to be after Easter :/ sorry",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-805874981:36,failure,failures,36,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-805874981,2,['failure'],['failures']
Availability,"Thanks Oksana!. For reference, this fixes the error shown below:; http://cdash.cern.ch/viewBuildError.php?buildid=391981",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/927#issuecomment-326747270:46,error,error,46,https://root.cern,https://github.com/root-project/root/pull/927#issuecomment-326747270,1,['error'],['error']
Availability,"Thanks Philippe - I shall try that; ________________________________; From: Philippe Canal ***@***.***; Sent: 27 February 2023 18:50; To: root-project/root; Cc: Sunanda Banerjee; Mention; Subject: Re: [root-project/root] Getting a crash while reading a Root Tree (Issue #12370). Alternatively you can run valgrind to get more information on this kind of failure:. valgrind --suppressions=$ROOTSYS/etc/valgrind-root.supp --log-file=val.01.log myexecutable myargs. —; Reply to this email directly, view it on GitHub<https://github.com/root-project/root/issues/12370#issuecomment-1446778005>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABGMZOSBSY5NDNIO7K6JZEDWZTSPBANCNFSM6AAAAAAVFHT3OU>.; You are receiving this because you were mentioned.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12370#issuecomment-1447781427:354,failure,failure,354,https://root.cern,https://github.com/root-project/root/issues/12370#issuecomment-1447781427,1,['failure'],['failure']
Availability,"Thanks a *lot*, Sergey! Before merging I'd like to understand why we don't see failures of these tutorials in the nightlies!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2324#issuecomment-405238624:79,failure,failures,79,https://root.cern,https://github.com/root-project/root/pull/2324#issuecomment-405238624,1,['failure'],['failures']
Availability,"Thanks a lot @wlav! . > That will give you different answers depending on whether the sequence has 0 or N elements, though. That's correct. Currently, we'll tag a sequence with 0 elements as not a sequence but the idea in this context is that if there are no elements there is nothing interesting to pythonize so we basically skip that object. > But there are plenty more worrisome things in that code. :). :no_mouth: :grinning:. > Can probably also expose it as a `CPyCppyy::Sequence_Check` in the API. I think this would be the best/ most robust approach. Then we can replace the ad-hoc check we currently do w/ that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15161#issuecomment-2061616984:541,robust,robust,541,https://root.cern,https://github.com/root-project/root/issues/15161#issuecomment-2061616984,1,['robust'],['robust']
Availability,"Thanks a lot for a fix! Failure is unrelated, merging!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7667#issuecomment-806020136:24,Failure,Failure,24,https://root.cern,https://github.com/root-project/root/pull/7667#issuecomment-806020136,1,['Failure'],['Failure']
Availability,"Thanks a lot for creating this issue @pcanal. I have an example file that reproduces the issue in the most recent `dev3` `LCG` nightly on LXPLUS (in a rundown way):. ```; $ export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase;; $ source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh;; $ lsetup ""asetup Athena,main--dev3LCG,latest"";; $ root -l; root [0] auto reader = ROOT::Experimental::RNTupleReader::Open(""EventData"", ""/afs/cern.ch/user/a/amete/public/root-16826/tmp.RDO"");; Warning in <[ROOT.NTuple] Warning /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RPageStorageFile.cxx:328 in ROOT::Experimental::Internal::RPageSourceFile::LoadStructureImpl()::<lambda()>>: Pre-release format version: RC 2; root [1] auto view = reader->GetView<void>(""xAOD__EventInfo_v1_EventInfo"", nullptr);; Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo; At:; ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16826#issuecomment-2458131618:868,Error,Error,868,https://root.cern,https://github.com/root-project/root/issues/16826#issuecomment-2458131618,1,['Error'],['Error']
Availability,"Thanks a lot for the review and the questions!. > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes?. It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16707#issuecomment-2443867878:779,error,errors,779,https://root.cern,https://github.com/root-project/root/pull/16707#issuecomment-2443867878,1,['error'],['errors']
Availability,"Thanks a lot for this PR, that results from very intense debugging sessions initially enabled by @silverweed . Once the tests are green, I think these changes should be merged asap. There is no point in keeping around a fully jitted RDF+TTreeCache if it won't be used any more. After the aforementioned step is completed, we might perhaps think about what can go wrong with used memory and what we can do about it. For example, suppose a workflow with N dataframes. For some reason we do not control (e.g. some Dask internals or something imposed by the infrastructure) the scheduling is such that all of them are alive until the end of the processing. Can we cap the memory used by the caches? For example we could just keep 1 buffer and assign it to the tree cache of the chain associated to the RDF pulled from the worker's rdfs cache before using that RDF to process data (effectively using 1 single cache). De facto this means assuming N RDFs in flight but one TTreeCache buffer per worker. Apologies if I am missing something in the distrdf logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16094#issuecomment-2246372940:614,alive,alive,614,https://root.cern,https://github.com/root-project/root/pull/16094#issuecomment-2246372940,1,['alive'],['alive']
Availability,"Thanks a lot for your comment!. > * sometimes I would have found useful to be able to pass python number anywhere a RooAbsReal is required, although I suspect this may require a pythonization for each pdf. Yes, I would like this too, but it's technically not easy to implement without changing the source for all PDFs. Maybe I will have an idea at some point as I learn more about PyROOT, but for now I have none. > * `RooSimultaneous` map constructor does not accept a python dictionary yet. That's a very good idea!. > * one thing that surprised me a couple of times at the beginning is that `RooAbsArg` does not keep its servers alive from the python GC so you actually need the same workarounds as in C++ (importing frequently to a workspace).; However, I suspect that if they did keep servers alive, server redirection would likely lead to desync between the C++ and python views of the graph. That's a pretty good idea too. I guess one can simply create new Python references to each server that are set as an attribute of the server, such that they are always kept alive. But you're right, server redirection would break this, unless there are Pythonizations for that one too.... So I still need to think if this is worth it, also considering that users can also use the RooWorkspace factory interface to create PDFs, which doesn't have this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11421#issuecomment-1257762156:632,alive,alive,632,https://root.cern,https://github.com/root-project/root/issues/11421#issuecomment-1257762156,3,['alive'],['alive']
Availability,Thanks for approving! The Windows failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14305#issuecomment-1880974062:34,failure,failures,34,https://root.cern,https://github.com/root-project/root/pull/14305#issuecomment-1880974062,1,['failure'],['failures']
Availability,"Thanks for checking!. Hmm that is surprising, maybe the Pythonizations don't get correctly reinstalled when you reinstall ROOT. But probably I made a mistake... But how do you run this test Python test correctly? When I try:; ```; ctest --output-on-failure -R ""tutorial-roofit-rf110_normintegration-py"" .; ```; I get a failure at an earlier stack:; ```; ERROR: ld.so: object 'libclang_rt.asan-x86_64.so' from LD_PRELOAD cannot be preloaded (cannot open shared object file): ignored.; =================================================================; ==561461==ERROR: AddressSanitizer: use-after-poison on address 0x555b05d51920 at pc 0x7fb562864119 bp 0x7ffd502cd720 sp 0x7ffd502cd710; READ of size 8 at 0x555b05d51920 thread T0; #0 0x7fb562864118 in void std::__insertion_sort<llvm::Attribute*, __gnu_cxx::__ops::_Iter_less_iter>(llvm::Attribute*, llvm::Attribute*, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.0] (/home/rembserj/spaces/master-asan/root/src/build/lib/libCling.so+0x14c64118); #1 0x7fb56286a08f in llvm::AttributeSetNode::get(llvm::LLVMContext&, llvm::ArrayRef<llvm::Attribute>) (/home/rembserj/spaces/master-asan/root/src/build/lib/libCling.so+0x14c6a08f); #2 0x7fb56286ca42 in llvm::AttributeSetNode::get(llvm::LLVMContext&, llvm::AttrBuilder const&) (/home/rembserj/spaces/master-asan/root/src/build/lib/libCling.so+0x14c6ca42); #3 0x7fb5628944b3 in llvm::AttributeList::addAttributes(llvm::LLVMContext&, unsigned int, llvm::AttrBuilder const&) const (/home/rembserj/spaces/master-asan/root/src/build/lib/libCling.so+0x14c944b3); #4 0x7fb5628958f1 in llvm::AttributeList::addAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const (/home/rembserj/spaces/master-asan/root/src/build/lib/libCling.so+0x14c958f1); ....; ```; Probably it's related to this `ERROR`. You have an idea how I could fix it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11221#issuecomment-1222092962:249,failure,failure,249,https://root.cern,https://github.com/root-project/root/issues/11221#issuecomment-1222092962,5,"['ERROR', 'failure']","['ERROR', 'failure']"
Availability,Thanks for fixing this clicko (typo with a click) error :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14372#issuecomment-1899116541:50,error,error,50,https://root.cern,https://github.com/root-project/root/issues/14372#issuecomment-1899116541,1,['error'],['error']
Availability,Thanks for investigating and finding the faulty commit @ferdymercury ! This is now reverted in master and v6-26-00-patches,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9740#issuecomment-1025688997:41,fault,faulty,41,https://root.cern,https://github.com/root-project/root/issues/9740#issuecomment-1025688997,1,['fault'],['faulty']
Availability,"Thanks for merging this, @pcanal. @dpiparo I will add the test as soon as I come back from vacation. The chunking introduces partial reduction of the results (one per chunk). This reduces memory allocation in the Map stage. The propagated error in these partial results will differ with the number of data elements processed per chunk. As a consequence, the final reduction step will be carried out with differing implicit errors when specifying different numbers of chunks. This is normal and expected. Would you have it otherwise? I could see to apply the reduction step with a compensated sum if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2039#issuecomment-392248316:239,error,error,239,https://root.cern,https://github.com/root-project/root/pull/2039#issuecomment-392248316,2,['error'],"['error', 'errors']"
Availability,"Thanks for noting this problem. Note that the first new Error message is inaccurate. For example,; ```; gInterpreter->GenerateDictionary(""std::vector<TNamed*>"","""");; ```; works perfectly. And in my opinion the 2nd error message might be too noisy for this kind of error. Either way, my understanding of the problem is simply a missing nullptr checking which was apply to 'just' TCint.cxx at a time we had both TCint and TCintWithCling.cxx:; ```; commit 40ff05f286d494f930c00d81942b845f240a74f9; Author: Axel Naumann <Axel.Naumann@cern.ch>; Date: Thu Jan 19 09:46:31 2012 +0000. Fix Coverity 39060 (deref of 0 ptr); ; ; git-svn-id: http://root.cern.ch/svn/root/trunk@42716 27541ba8-7e3a-0410-8455-c3a389f83636. diff --git a/core/meta/src/TCint.cxx b/core/meta/src/TCint.cxx; index 311e2f2d99..b9babb70e6 100644; --- a/core/meta/src/TCint.cxx; +++ b/core/meta/src/TCint.cxx; @@ -1165,6 +1165,7 @@ Int_t TCint::GenerateDictionary(const char *classes, const char *includes /* = 0; // gInterpreter->GenerateDictionary(""myclass"",""myclass.h;myhelper.h"");; ; if (classes == 0 || classes[0] == 0) return 0;; + if (!includes) includes = """";; ; // Split the input list; std::vector<std::string> listClasses;; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1724#issuecomment-371907648:56,Error,Error,56,https://root.cern,https://github.com/root-project/root/pull/1724#issuecomment-371907648,3,"['Error', 'error']","['Error', 'error']"
Availability,"Thanks for pointing out the question regarding checksumming compressed or uncompressed data. I considered it an error in the text but missed to explicitly mention it. My main reason to checksum compressed data is that we can verify data integrity without decompressing the data. A small benefit is that we need to checksum fewer bytes. I think that checksumming of the underlying storage layer will be hard to reuse in a meaningful way because most likely the checksummed byte ranges do not align with RNTuple structures (page, page group or similar). So what the underlying storage layer does is fine, and maybe the user decides that the storage layer is so reliable that one can skip application-level checksums altogether but I think that is as far as it goes. An advantage of checksumming uncompressed data is that they are stable when different encodings or compression algorithms are applied. I'm not sure though if we can exploit that anywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15921#issuecomment-2193948400:112,error,error,112,https://root.cern,https://github.com/root-project/root/pull/15921#issuecomment-2193948400,2,"['error', 'reliab']","['error', 'reliable']"
Availability,"Thanks for the clarification!. Running `Unload` doesn't seem to solve the problem. ```python; >>> import ROOT; >>> ROOT.gSystem.CompileMacro(""file1.cxx""); Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so; 1; >>> ROOT.gSystem.Unload(""file1.cxx""); >>> for filename in os.listdir():; ... if filename.startswith(""file1""):; ... os.remove(filename); ... ; >>> ROOT.gSystem.CompileMacro(""file2.cxx""); Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so; sh: -c: line 1: unexpected EOF while looking for matching `""'; sh: -c: line 2: syntax error: unexpected end of file; Error in <ACLiC>: Executing ...; ```. But I see your point about deleting an in-use file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10640#issuecomment-1136930368:674,error,error,674,https://root.cern,https://github.com/root-project/root/issues/10640#issuecomment-1136930368,2,"['Error', 'error']","['Error', 'error']"
Availability,"Thanks for the education, I just wrote down what I learned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/564#issuecomment-300600704:39,down,down,39,https://root.cern,https://github.com/root-project/root/pull/564#issuecomment-300600704,1,['down'],['down']
Availability,"Thanks for the fast response. The issue 11025 is definitely the same that I observe. The last variable in the list of protected variables is TSelectorList *fOutput;. Same signature as my issue. Concerning Ubuntu, yes, it is the same ROOT version, but different compiler. I will download 6.22/04 and compile. Using the nightly build does not work, source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-slc6-gcc7-opt/setup.sh ; python; import ROOT; ModuleNotFoundError: No module named 'ROOT'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6856#issuecomment-732698715:278,down,download,278,https://root.cern,https://github.com/root-project/root/issues/6856#issuecomment-732698715,1,['down'],['download']
Availability,"Thanks for the great comments @guitargeek! All the ones I didn't comment on I agree with, so will implement those soon. I agree that it has become quite a complex class. It would be nice if things could be refactored at some time. However, part of it is also inevitable, I fear, because `RooMinimizer` has to bridge between two rather different frameworks, that of Minuit2 and RooFit, and now due to all the parallel processing work will have to deal with even more stuff than before. By the way, just as a historical aside: at some point I had turned `RooMinimizer` into a fully templated class, which made it even more horrible to maintain and time consuming to develop (since the header had to be recompiled on every change). I managed to trim the template horror down to just the constructor by introducing `RooAbsMinimizerFcn`. That introduced its own complexity here and there, as we discussed above :) But it was better in the end, I think. Note that the sole reason the template parameter is still necessary in the constructor is that the `MinimizerFcn` needs the proper constructor inside the `RooMinimizer` constructor. I like your suggestion of also using the template class argument instead of the `dynamic_cast` using `std::is_same`, but this is not strictly necessary like using the proper constructor is. By the way, note also that in the upcoming TestStatistics PR, there will be yet another `RooMinimizer` constructor, also with template arguments, but different ones, namely the concrete calculator classes for the likelihood and gradient. Maybe it would be better to discuss this design aspect further in that PR, because then we have the full picture.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596#issuecomment-879703750:767,down,down,767,https://root.cern,https://github.com/root-project/root/pull/8596#issuecomment-879703750,1,['down'],['down']
Availability,"Thanks for the hint, I tested the following two cases and did not see a problem:; - Test example, identical outcome as our quick and dirty fix, as I expected; - Replacing the fix in the FairRoot class by this and re-running their test-suite, this ran through successfully (so it does not break any other tested behavior of them). So I would think that your proposal would be perfect for us, as I had anyway introduced a `RefreshPhysicalNodes` just before adding the call to our fix. @fuhlig1 Do you think I should also do the full test with the original error report? (= removing the fix in FairRoot + replacing the fix in Cbmroot by this block + re-running the mCBM macro) ; Or would what I already checked be enough from our side?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12242#issuecomment-1433310934:554,error,error,554,https://root.cern,https://github.com/root-project/root/issues/12242#issuecomment-1433310934,1,['error'],['error']
Availability,"Thanks for the hint. I just tried that, now I do not get a crash, but rather a warning and the button name is not changed:. `Error in <TClingCallFunc::exec>: The method ChangeText is called without an object.`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7195#issuecomment-779077717:125,Error,Error,125,https://root.cern,https://github.com/root-project/root/issues/7195#issuecomment-779077717,1,['Error'],['Error']
Availability,"Thanks for the nice example. It works on Ubuntu, too.; (Sorry, my last message was an error on my side, I was passing a nullptr as myButton). Why is SetText() leading to a crash?. Maybe we could add a short comment here in the documentation:; https://root.cern/doc/master/classTGTextButton.html#aa2d8b609e96fb43c0a11b6b9ece52c83. ""If you use a signal-slot connection with inline argument passed as (text) value, use ChangeText instead of SetText"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7195#issuecomment-779120010:86,error,error,86,https://root.cern,https://github.com/root-project/root/issues/7195#issuecomment-779120010,1,['error'],['error']
Availability,"Thanks for the ping, @StefanBruens . We are now preparing the IANA form content, I expect to get the process started next week. Apologies for keeping this open and unaddressed for so long! I will update this issue once we have a decision from IANA, which will include the file magic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6771#issuecomment-1498759750:15,ping,ping,15,https://root.cern,https://github.com/root-project/root/issues/6771#issuecomment-1498759750,1,['ping'],['ping']
Availability,"Thanks for the ping, @eguiraud! :-). I had some work on a branch that fixes this and other related issues (grouped in #10049), but I still need to find the time to polish that code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1164165206:15,ping,ping,15,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1164165206,1,['ping'],['ping']
Availability,"Thanks for the pointers, that makes sense! There are two things that still confuse me, however:; 1. When the `std::set` fields PR was merged these errors were not yet present in the CI, even though the test includes a `std::set<pair<int, CustomStruct>>`. In fact, if I go back to the commit right before the maps were added (https://github.com/root-project/root/commit/cddecc1d576df235c38a90295a9fa29a28a8a6b4), this test passes without having to have the dictionary entry for the pair. I cannot pinpoint anything that got added alongside the maps that might change this, but perhaps these additions change the internal build machinery just enough for it to also break without modules enabled.; 2. There are no `std::pair` dictionaries in `core/clingutils/src/*LinkDef.h`. There are a few defined in other places, but none with the numerical types mentioned here. In any case, I will add the above suggestion to make sure that at least we can fail more gracefully (I have not checked with `RTupleField` but I imagine this will also be problematic, so probably this change should be added to `RRecordField`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14084#issuecomment-1822503869:147,error,errors,147,https://root.cern,https://github.com/root-project/root/issues/14084#issuecomment-1822503869,1,['error'],['errors']
Availability,"Thanks for the report!. It's probably related to https://github.com/root-project/root/pull/13771 so pinging @ellert @guitargeek . ![image](https://github.com/root-project/root/assets/10653970/ea1005c0-c53e-41b3-90e0-6f266e6bd623). If you need a quick solution, try reverting: https://github.com/root-project/root/pull/13771 or fiddling around with TPRegexp::MatchInternal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15986#issuecomment-2209076660:100,ping,pinging,100,https://root.cern,https://github.com/root-project/root/issues/15986#issuecomment-2209076660,1,['ping'],['pinging']
Availability,"Thanks for the report, I did a quick test with master and I can't reproduce on an Ubuntu18, compiling ROOT from sources. Can it be a permissions issue? E.g. the `kernel.json` of the ROOT kernel should be readable. Let's assume you compile from sources, you do `source bin/thisroot.sh` in the build directory and then run `root --notebook`. This should have created `$HOME/.rootnb/kernels/root/kernel.json`, which should be readable. Can you confirm that with these steps you also reproduce the error?. On the other hand, I'm using `metakernel` 0.24.4, what is the version you are using?. Finally, if you run `jupyter kernelspec list`, what does it say?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6608#issuecomment-709037423:494,error,error,494,https://root.cern,https://github.com/root-project/root/issues/6608#issuecomment-709037423,1,['error'],['error']
Availability,"Thanks for the review @dpiparo!. So far, the only failure is the one on ubuntu 2204 that was also seen before this PR:; https://github.com/root-project/root/pull/13775#issuecomment-1743080607. If there are no regressions in the CI output with respect to the other PR I linked, I will merge this PR and then follow up with more backports tomorrow based on the feedback from the nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13777#issuecomment-1743507531:50,failure,failure,50,https://root.cern,https://github.com/root-project/root/pull/13777#issuecomment-1743507531,1,['failure'],['failure']
Availability,"Thanks for the review!; I have downgraded the deprecation messages, just mentioning the alternative. How do you like it now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14754#issuecomment-1949917116:31,down,downgraded,31,https://root.cern,https://github.com/root-project/root/pull/14754#issuecomment-1949917116,1,['down'],['downgraded']
Availability,"Thanks for the suggestions! ; I built ROOT from source for two Python versions. Python 2.7 works fine, it imports ROOT without errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8110#issuecomment-834209615:127,error,errors,127,https://root.cern,https://github.com/root-project/root/issues/8110#issuecomment-834209615,1,['error'],['errors']
Availability,"Thanks for the tip! Adding `-fno-rtti` to cling works, but only in the case where the function is defined inline in the header. When the function is defined in a separate TU which is linked into the host application, cling fails to find the symbol. I've updated the test case here: https://github.com/jeaye/cling-linkage-error-test-case. Basically just moved `test::integer::to_string` into its own cpp file, which then brings the linker errors back when trying to call it from cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1193155383:321,error,error-test-case,321,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193155383,2,['error'],"['error-test-case', 'errors']"
Availability,"Thanks for the updates again! The jenkins tests passed, so I think you can merge it now, @hageboeck. Note that there are some remaining Travis CI failures, but as far as I can tell they are not related to the changes in this PR, right? They relate to the `checkLimits()` call in `RooBinIntegrator`, which has already been there before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8167#issuecomment-858071426:146,failure,failures,146,https://root.cern,https://github.com/root-project/root/pull/8167#issuecomment-858071426,1,['failure'],['failures']
Availability,"Thanks for these changes. I apologise for coming back to them so late. ; I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):; - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing?; - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages?; - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14813#issuecomment-2038169206:398,failure,failure,398,https://root.cern,https://github.com/root-project/root/pull/14813#issuecomment-2038169206,1,['failure'],['failure']
Availability,Thanks for this Jonas. It looks good but before merging we need too undrrstand the test failures,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9458#issuecomment-996737995:88,failure,failures,88,https://root.cern,https://github.com/root-project/root/pull/9458#issuecomment-996737995,1,['failure'],['failures']
Availability,"Thanks for this code. Could you please add in the description of the PR why you are doing this, and especially what problem you are solving? A good way to tackle this would be to try to convince the reader that thanks to the code, ROOT will be like before (e.g. nothing breaks for the experiments, users, in the development process of ROOT iteself) but better (e.g. there is a reduction in the cost of maintenance, development, testing, or an increase of runtime performance).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15105#issuecomment-2031929972:402,mainten,maintenance,402,https://root.cern,https://github.com/root-project/root/pull/15105#issuecomment-2031929972,1,['mainten'],['maintenance']
Availability,"Thanks for this detailed report! I do not really understand how your ""proposed solution"" is different from what we had before. It looks like you only changed the way the error message is printed. Maybe I missed something...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14592#issuecomment-1929074051:170,error,error,170,https://root.cern,https://github.com/root-project/root/issues/14592#issuecomment-1929074051,1,['error'],['error']
Availability,"Thanks for this report. These errors refer to `fork`: are we sure the resource we are lacking are threads and not PIDs? Is the configuration of the machine ""sane"", i.e. allowing an adequate number of subprocesses per process?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16552#issuecomment-2380868189:30,error,errors,30,https://root.cern,https://github.com/root-project/root/issues/16552#issuecomment-2380868189,1,['error'],['errors']
Availability,"Thanks for this submission! This CI failure is strange, but probably unrelated to what you were doing. Well, if unrelated it should resolve itself on the next push anyway. I like where this is going, but you may want to cover a bit more of the public RHistConcurrentFiller and RHistConcurrentFillManager API, including the part that's inherited from RHistBufferedFillBase. In particular, I would really like to see some coverage for `Flush()` because it's a surprisingly subtle part of the API that [we've gotten wrong before](https://sft.its.cern.ch/jira/browse/ROOT-10407). (Speaking of which, reading through the code again, I also wonder if users won't find it surprising that `RHistConcurrentFiller::FillN` and its RHistBBufferedFill equivalent doesn't flush pending data points from previous calls to `Fill`. We may want to discuss that design with @Axel-Naumann next Thursday.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4958#issuecomment-584175572:36,failure,failure,36,https://root.cern,https://github.com/root-project/root/pull/4958#issuecomment-584175572,1,['failure'],['failure']
Availability,Thanks for working on this! I only now realise how sensitive patch files are to these errors. Thanks again!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12833#issuecomment-1551201999:86,error,errors,86,https://root.cern,https://github.com/root-project/root/pull/12833#issuecomment-1551201999,1,['error'],['errors']
Availability,"Thanks for you comments @lmoneta.; I'm sorry for my late reply but since nothing happened here for over a month, I stopped watching. The reason I used double pointers for the 2D arrays was to have the most low level datatype possible, have full felxibility and stay consistent with the other TGraph classes which are all using pointers for 1D arrays. Nevertheless I understand your concerns since double pointers for arrays are a rather dirty way of programming. I think it might be a good compromise to use the ROOT array wrapper class TArrayD. Then the two dimensional Arrays could be represented by an 1D array of TArrayD objects. The functions SetPointEY, SetPointEYL and SetPointEYH were implemented by me to keep full consistency with the TGraphAsymmErrors class. They are overloaded with one version taking the point and an array in which case the array cointains all errors of the named point for the different dimensions. My idea was to alter the TGraphAsymmErrors notation as little as possible so TGraphAsymmErrors::SetPointEY(i, el, eh) would translate to TGraphMultiErrors::SetPointEY(i, &el, &ey) in the case of only one error dimension which would be equal to a TGraphAsymmErrors. The idea of the function SetDimensionEY, SetDimensionEYL and SetDimensionEYH is basically the same. They set the errors of all points in the given dimension. My idea was to think of a way to convert from multiple TGraphAsymmErrors objects to one single TGraphMultiErrors object like in this small example:; ```; TGraphAsymmErrors* statisticErrors = ...; TGraphAsymmErrors* systematicErrors = ... TGraphMultiErrors* theGraph = new TGraphMultiErrors(statisticErrors->GetN(), 2, statisticErrors->GetX(), statisticErrors->GetY(), statisticErrors->GetEXlow(), statisticErrors->GetEXhigh());; theGraph->SetDimensionEY(0, statisticErrors->GetEYlow(), statisticErrors->GetEYhigh());; theGraph->SetDimensionEY(1, systematicErrors->GetEYlow(), systematicErrors->GetEYhigh());; ```. But again I see your point since ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-516408489:875,error,errors,875,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-516408489,1,['error'],['errors']
Availability,"Thanks for you reply @couet, I see your point that it's not ideal to define an attribute that is only used by approximatly half of all available styles. The main reason I wanted to have this feature is that I realized that lines with a width of 1 can become badly visible in presentations or on posters which is why I prefer to use line width 2 as default everywhere. For the implementation via the marker styles as you propose I see basically 2 ways to implement this:; 1. At the moment we have marker styles up to 49. One could just start to redefine all existing marker styles where a linewidth makes sense from 50 upwards with a linewidth of 1, 2, 3 ...; However, I think this might become confusing if further styles are added in the future, because then there will be no logic behind the numbers and the corresponding markers, although there is not much logic behind the style numbers right now too.; 2. One could define it in a way that adding 100 to the marker style corresponds to an increase of the linewidth of 1. As an example the regular + marker with linewidth 1 would be 2, with linewidth 2 it would be 102, with linewidth 3 202 ...; I know this would be rather equal to defining a standalone linewidth attribute, but it would allow us to add up to 50 additional marker styles in the future without breaking the logic and I doubt we will have more than 100 different marker styles one day. Since you are the responsible coordinator for the graphics part of ROOT, I think this decision should be up to you. ----------------------------------------------------------------------------------------------------. Could you also comment on the differences in the drawing of markers 3, 5 (and 31) between classes inheriting from TVirtualX and classes inheriting from TVirtualPS? The following picture shows the difference for marker style 3:; ![temp](https://user-images.githubusercontent.com/5320187/72247392-11cb0980-35f5-11ea-941b-b1ef892442e6.jpg); I think the different implementations sh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4721#issuecomment-573591881:135,avail,available,135,https://root.cern,https://github.com/root-project/root/pull/4721#issuecomment-573591881,1,['avail'],['available']
Availability,"Thanks for your testing.; I use `metakernel` 0.27.0 and `python` 3.8.5. I also tried `metakernel` 0.24.4.; For your suggested steps; `jupyter kernelspec list` ; says; ` root ~/root/etc/notebook/kernels/root`. With the manual installation I get a different error but the result is the same; ```; ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths!; Invoking:; LC_ALL=C x86_64-linux-gnu-g++-9 -O3 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++; /p' -e '}'; Results was:; With exit code 0; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6608#issuecomment-709429204:256,error,error,256,https://root.cern,https://github.com/root-project/root/issues/6608#issuecomment-709429204,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,Thanks so much @pcanal !. It was an error in my code. I fixed it :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5283#issuecomment-608626339:36,error,error,36,https://root.cern,https://github.com/root-project/root/pull/5283#issuecomment-608626339,1,['error'],['error']
Availability,"Thanks so much. I checked it, it works great, I saw just a couple of issues:; - If I go all the way down to the last entry, I need press twice 'up' key to go the second entry. Probably, some issue between index 0 and index 1.; - Maybe, index 0 should correspond to the 'empty' comannd line window, or whatever the user had typed in the beginning before pressing the arrows. For example, ` if (te) { fCommand->SetText(te->GetText()->GetString()); } else { fCommand->SetText(temporaryString); }`, where temporaryString was whatever was in the TGTextEntry before scrolling in the history. Maybe `const char *string = fCommandBuf->GetString();` ?; - The ROOT history is still not saved even if I call `plugin->SetHistAdd();` which means that somehow `Gl_histadd((char *)string);` is not working in a standalone CMake TApplication?. Thanks for the excellent support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7180#issuecomment-779778438:100,down,down,100,https://root.cern,https://github.com/root-project/root/issues/7180#issuecomment-779778438,1,['down'],['down']
Availability,"Thanks to a very productive exchange with @bellenot I think I now understand the situation much better. We need Python during the build, for example to build the pch file. That does not automatically imply that a user specifying a certain Python version via the `-DPYTHON_EXECUTABLE` Cmake option also needs PYROOT. I am closing the issue as clarified. Should more information become available, we can always re-open.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8095#issuecomment-1925314142:384,avail,available,384,https://root.cern,https://github.com/root-project/root/issues/8095#issuecomment-1925314142,1,['avail'],['available']
Availability,Thanks you for providing the patch.; The proposed change looks OK to me (removal of those two header files).; The test failures do not seem related to this patch.; I'll make a few additional cross checks and then I'll merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1861#issuecomment-381672320:119,failure,failures,119,https://root.cern,https://github.com/root-project/root/pull/1861#issuecomment-381672320,1,['failure'],['failures']
Availability,"Thanks! I think if not including `RConfig.h` would cause a problem, I think we'd have some compiler errors here. If some problems unexpectedly pop up later, we can probably find them easily and fix them in a followup.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10231#issuecomment-1090239424:100,error,errors,100,https://root.cern,https://github.com/root-project/root/pull/10231#issuecomment-1090239424,1,['error'],['errors']
Availability,Thanks! Is there a page explaining the dependencies? I tried and I get this error:; `ImportError: No module named nbformat`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-910349680:76,error,error,76,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-910349680,1,['error'],['error']
Availability,"Thanks! It looks as if with the new fix, they introduced a new problem https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/lastBuild/consoleText:. ```; Error in line 1: Opening and ending tag mismatch.; error: failed to run qhelpgenerator on index.qhp; ```. Could you share again the qhp file with me so that I can take a look ? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9649#issuecomment-1021998628:179,Error,Error,179,https://root.cern,https://github.com/root-project/root/pull/9649#issuecomment-1021998628,2,"['Error', 'error']","['Error', 'error']"
Availability,"Thanks! No, a backport is not needed, the workspaces I got from Carsten (produced with ROOT 5.32) still read fine with the latest 6.26. In master there are still some other remining read errors which I hope to fix in a next PR. Unfortunately we can't do a unit test with this workspace because it's ATLAS internal.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10796#issuecomment-1162739243:187,error,errors,187,https://root.cern,https://github.com/root-project/root/pull/10796#issuecomment-1162739243,1,['error'],['errors']
Availability,"Thanks! Related: maybe it's good to remove also TProof and other deprecated features from the roofit tutorials. Right now, many are failing while building the docu, see:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/lastBuild/console. things like:; ```; warning: 'createIterator' is deprecated: will be removed in ROOT v6.34: begin(), end() and range-based for loops. ; use of undeclared identifier 'TProofLite' because of inc/RooStats/ProofConfig.h: int nMaxWorkers = gROOT->ProcessLineFast(""TProofLite::GetNumberOfWorkers()"");; Warning in <ROOT::Math::Fitter::CalculateHessErrors>: Error when calculating Hessian; *** Break *** segmentation violation; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14993#issuecomment-2004737253:618,Error,Error,618,https://root.cern,https://github.com/root-project/root/pull/14993#issuecomment-2004737253,1,['Error'],['Error']
Availability,Thanks!. FYI apart from some weird Jenkins errors [we get](https://github.com/root-project/root/pull/13571/files#annotation_13775791970):; ```; 2023-08-30T18:30:54.7170667Z [2871/3458] Building CXX object test/CMakeFiles/stressProof.dir/stressProof.cxx.o; 2023-08-30T18:30:54.7290088Z FAILED: test/CMakeFiles/stressProof.dir/stressProof.cxx.o ; 2023-08-30T18:30:54.7394177Z /usr/bin/c++ -I/github/home/ROOT-CI/build/include -I/github/home/ROOT-CI/src/proof/proof/inc -I/github/home/ROOT-CI/src/math/mathcore/v7/inc -I/github/home/ROOT-CI/src/math/mathcore/inc -I/github/home/ROOT-CI/build/ginclude -I/github/home/ROOT-CI/src/core/base/inc -I/github/home/ROOT-CI/src/core/base/v7/inc -I/github/home/ROOT-CI/src/core/clib/inc -I/github/home/ROOT-CI/src/core/clingutils/inc -I/github/home/ROOT-CI/src/core/clingutils/res -I/github/home/ROOT-CI/src/core/cont/inc -I/github/home/ROOT-CI/src/core/foundation/inc -I/github/home/ROOT-CI/src/core/foundation/v7/inc -I/github/home/ROOT-CI/src/core/gui/inc -I/github/home/ROOT-CI/src/core/meta/inc -I/github/home/ROOT-CI/src/core/textinput/inc -I/github/home/ROOT-CI/src/core/thread/inc -I/github/home/ROOT-CI/src/core/zip/inc -I/github/home/ROOT-CI/src/core/lzma/inc -I/github/home/ROOT-CI/src/core/lz4/inc -I/github/home/ROOT-CI/src/core/zstd/inc -I/github/home/ROOT-CI/src/builtins/zstd -I/github/home/ROOT-CI/src/core/imt/inc -I/github/home/ROOT-CI/src/core/multiproc/inc -I/github/home/ROOT-CI/src/net/net/inc -I/github/home/ROOT-CI/src/io/io/v7/inc -I/github/home/ROOT-CI/src/io/io/inc -I/github/home/ROOT-CI/src/tree/tree/inc -I/github/home/ROOT-CI/src/proof/proofplayer/inc -I/github/home/ROOT-CI/src/hist/hist/inc -I/github/home/ROOT-CI/src/math/matrix/inc -I/github/home/ROOT-CI/src/tree/treeplayer/inc -I/github/home/ROOT-CI/src/graf2d/gpad/inc -I/github/home/ROOT-CI/src/graf2d/graf/inc -I/github/home/ROOT-CI/src/graf3d/g3d/inc -fdiagnostics-color=always -std=c++20 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-v,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13571#issuecomment-1700410866:43,error,errors,43,https://root.cern,https://github.com/root-project/root/pull/13571#issuecomment-1700410866,1,['error'],['errors']
Availability,Thanks!. It seems we are getting now a different kind of error on the jenkins master log:; ```; PatchinError in line 1: Premature end of document.; error: failed to run qhelpgenerator on index.qhp; g output file 29883/29885; Patching output file 29884/29885; Patching output file 29885/29885; Running qhelpgenerator...; lookup cache used 484195/1048576 hits=9429473 misses=518740; finished...; ```. Could you share the index.qhp file to take a closer look? Maybe it's a multithreading issue?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1018306859:57,error,error,57,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1018306859,2,['error'],['error']
Availability,"Thanks!. The compiler produces the one set of intrisics and when linking we cannot resolve them, i.e. the .o files have uses of `icc` intrisics and when linking we are linking against libstdc++ which has no knowledge about them. This caused a linking failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/766#issuecomment-315111489:251,failure,failure,251,https://root.cern,https://github.com/root-project/root/pull/766#issuecomment-315111489,1,['failure'],['failure']
Availability,"Thanks!; You can disable a specific error by adding a comment on the relevante line, e.g.; `HackyCode = xyz;// NOLINT(cert-err58-cpp)`. See https://stackoverflow.com/questions/37950439/inline-way-to-disable-clang-tidy-checks; https://clang.llvm.org/extra/clang-tidy/#suppressing-undesired-diagnostics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412#issuecomment-794182724:36,error,error,36,https://root.cern,https://github.com/root-project/root/issues/7412#issuecomment-794182724,1,['error'],['error']
Availability,"Thanks!; ```; -bash-4.2$ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-dbg/setup.sh; which root; -bash-4.2$ which root; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-dbg/bin/root; -bash-4.2$ python -c 'from PyCool import cool; cool.FieldSelection'; cling::DynamicLibraryManager::loadLibrary(): liblcg_CoralBase.so: cannot open shared object file: No such file or directory; In file included from input_line_26:1:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-dbg/python/PyCool/_internal/PyCool_headers_and_helpers.h:5:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-dbg/include/CoolKernel/FolderSpecification.h:7:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-dbg/include/CoolKernel/IFolderSpecification.h:5:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-dbg/include/CoolKernel/IRecordSpecification.h:6:; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-dbg/include/CoolKernel/types.h:7:10: fatal error: 'CoralBase/Blob.h' file not found; #include ""CoralBase/Blob.h""; ^~~~~~~~~~~~~~~~~~; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-dbg/python/PyCool/__init__.py"", line 25, in <module>; raise RuntimeError(""ERROR! Could not include PyCool headers""); RuntimeError: ERROR! Could not include PyCool headers; -bash-4.2$ client_loop: send disconnect: Broken pipe; ```. What else do I need to set up?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6359#issuecomment-694246485:1141,error,error,1141,https://root.cern,https://github.com/root-project/root/issues/6359#issuecomment-694246485,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Thanks, @eguiraud . I don't see this as a reason to complain if `ROOT_MAX_THREADS` is set to a value higher than what the TBB arena will use in the end - also because it's already fairly involved to figure out what that number will be... If I got you wrong and / or my above statement is incorrect then we will add that error message in a subsequent PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13057#issuecomment-1611048723:320,error,error,320,https://root.cern,https://github.com/root-project/root/pull/13057#issuecomment-1611048723,1,['error'],['error']
Availability,"Thanks, @will-cern ! Last thing - could you drop the commit / revert pair in this branch so I can apply this with rebase? If you prefer I can do that for you :-). (And never mind the Windows test failure - it's a bug in our infra that forces people to clone https://github.com/root-project/roottest or else that build fails...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7988#issuecomment-827411117:196,failure,failure,196,https://root.cern,https://github.com/root-project/root/pull/7988#issuecomment-827411117,1,['failure'],['failure']
Availability,"Thanks, Bertrand. Just got several error messages in my previous PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5119#issuecomment-596946102:35,error,error,35,https://root.cern,https://github.com/root-project/root/pull/5119#issuecomment-596946102,1,['error'],['error']
Availability,"Thanks, I have fixed the comment in TRint. See the test failure for why this change cannot go in. Close?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1430#issuecomment-350257384:56,failure,failure,56,https://root.cern,https://github.com/root-project/root/pull/1430#issuecomment-350257384,1,['failure'],['failure']
Availability,"Thanks, I see it now.; @bellenot any idea where this error might be coming from in Windows?. `[2022-10-18T15:48:41.690Z] hudson.AbortException: script returned exit code -1`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11588#issuecomment-1305694455:53,error,error,53,https://root.cern,https://github.com/root-project/root/pull/11588#issuecomment-1305694455,1,['error'],['error']
Availability,"Thanks, I will see what's wrong then. This is a fresh build? Did you start up xcode once to allow it to download the macOS SDK?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12648#issuecomment-1506440497:104,down,download,104,https://root.cern,https://github.com/root-project/root/issues/12648#issuecomment-1506440497,1,['down'],['download']
Availability,"Thanks, Vassil, I think this was the right way forward. Once people remove CXXFLAGS from their rootcling calls, then we can turn the warnings into errors. Cheers,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4356#issuecomment-529081007:147,error,errors,147,https://root.cern,https://github.com/root-project/root/pull/4356#issuecomment-529081007,1,['error'],['errors']
Availability,"Thanks, good point! I also use the typed version of the `EvalBackend` parameter now, so that we would also get a compiler error if the legacy backend is not available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14755#issuecomment-1951674740:122,error,error,122,https://root.cern,https://github.com/root-project/root/pull/14755#issuecomment-1951674740,2,"['avail', 'error']","['available', 'error']"
Availability,"Thanks, that seems like a good workaround for the reproducer. ; But, if I understand correctly, that would require that I always include that in a python script before using that class, which seems hard. There isn't one global entry point where cppyy is loaded where I could just add this to protect every user that would possibly interact with the problematic class. . Are you aware of any examples of how to use the C++ callbacks that are mentioned on the same page? ; That could work as a more robust solution I think.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7179#issuecomment-778286708:497,robust,robust,497,https://root.cern,https://github.com/root-project/root/issues/7179#issuecomment-778286708,1,['robust'],['robust']
Availability,Thanks. Does Ninja show the same issue?. I'm asking all these questions because in all our builds we have never seen that error.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6366#issuecomment-694195047:122,error,error,122,https://root.cern,https://github.com/root-project/root/issues/6366#issuecomment-694195047,1,['error'],['error']
Availability,Thanks. I am able reproduce that error. I am investigating.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15733#issuecomment-2150204393:33,error,error,33,https://root.cern,https://github.com/root-project/root/pull/15733#issuecomment-2150204393,1,['error'],['error']
Availability,"Thanks. I do no find the .cxx, just the .pcm as a binary ; [compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip](https://github.com/root-project/root/files/5577670/compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip). See error log here:; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.23/01 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 18 2020, 17:03:24 |; | From heads/master@v6-23-01-RF-binSampling-155-g2cc56b30d2 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. Processing compare_Compton3.cpp+(""XYZ_1209"",""RangePMMA"",27)...; Info in <TUnixSystem::ACLiC>: creating shared library /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so; In file included from /opt/root_bld/include/RConfig.h:23,; from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program; #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict; ^; /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’; # define _NAME3_(name1,name2,name3) name1##name2##name3; ^~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__); ^~~~~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__); ^~~~~~~~~~~~~~~~~~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/Compto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6837#issuecomment-731577667:210,error,error,210,https://root.cern,https://github.com/root-project/root/issues/6837#issuecomment-731577667,1,['error'],['error']
Availability,Thanks. I get now this error:; `jupyter_client.kernelspec.NoSuchKernel: No such kernel named python2`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-910384720:23,error,error,23,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-910384720,1,['error'],['error']
Availability,Thanks. To make progress towards v6.24 I will merge https://github.com/root-project/root/pull/7752 and https://github.com/root-project/root/pull/7767 - IIUC they improve the situation also for CMS (they do for ATLAS). I hope that this does not complicate finding the source of the comparison failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-811713699:292,failure,failure,292,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-811713699,1,['failure'],['failure']
Availability,"That Jenkins ""failure"" looks spurious. Merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9533#issuecomment-1010013619:14,failure,failure,14,https://root.cern,https://github.com/root-project/root/pull/9533#issuecomment-1010013619,1,['failure'],['failure']
Availability,That Windows error is just the log parser having a grep hit within the commit log :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8223#issuecomment-845923159:13,error,error,13,https://root.cern,https://github.com/root-project/root/pull/8223#issuecomment-845923159,1,['error'],['error']
Availability,"That command gives me errors:; ```; $ voms-proxy-init; No credentials found!; ```; outside of Singularity and inside:; ```; Singularity> voms-proxy-init; Unable to find user certificate or key: /afs/cern.ch/user/j/jhahnfel/.globus/usercred.p12; ```. Note that I'm not a CMS member, so maybe I'm missing some permissions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13429#issuecomment-1680227618:22,error,errors,22,https://root.cern,https://github.com/root-project/root/issues/13429#issuecomment-1680227618,1,['error'],['errors']
Availability,That failure is unrelated / preexisting (and it might benefit from your brain's input on why it fails with `bad_alloc` - I couldn't find any reason yet).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13451#issuecomment-1685115275:5,failure,failure,5,https://root.cern,https://github.com/root-project/root/pull/13451#issuecomment-1685115275,1,['failure'],['failure']
Availability,That failure is unrelated to the pull request.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5398#issuecomment-618358408:5,failure,failure,5,https://root.cern,https://github.com/root-project/root/pull/5398#issuecomment-618358408,1,['failure'],['failure']
Availability,"That include has been added to `libcpp_string_view.h` a while ago (see https://github.com/root-project/root/pull/8287 and backports down to 6.18). I wasn't aware we had so many string view headers, I will understand this better and include the header everywhere is needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8513#issuecomment-866589323:132,down,down,132,https://root.cern,https://github.com/root-project/root/issues/8513#issuecomment-866589323,1,['down'],['down']
Availability,That is just a warning I added. The real failure is due to soversion=ON on Linux,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3183#issuecomment-448259890:41,failure,failure,41,https://root.cern,https://github.com/root-project/root/pull/3183#issuecomment-448259890,1,['failure'],['failure']
Availability,"That is the reduced version:. ```c++; cat ../root/tutorials/hsimple.C . #include <TFile.h>; #include <TNtuple.h>; #include <TH2.h>; #include <TProfile.h>; #include <TCanvas.h>; #include <TFrame.h>; #include <TROOT.h>; #include <TSystem.h>; #include <TRandom3.h>; #include <TBenchmark.h>; #include <TInterpreter.h>. TFile *hsimple(Int_t getFile=0); {; if (!gSystem->AccessPathName("""",kFileExists)) {; }; return 0;; }; ```. I got it down to `root.exe -l -b -e 'gSystem->AccessPathName("""",kFileExists)'`. and we get:. ```; ROOT_INCLUDE_PATH=/scratch/cmsbuild/vvasilev/rootobj/include/ root.exe -l -b -q tutorials/hsimple.C ; Disabling gnu++: clang has no __float128 support on this target!; Parse symbols:; emitSection SectionID: 0 Name: .data obj addr: 0x1002151e4f8 new addr: 0x3fff8d1d0000 DataSize: 16 StubBufSize: 0 Allocate: 16; 	Type: 1 Name: _ZN5cling7runtime10gClingOptsE SID: 0 Offset: 0x8 flags: 66; 	Type: 1 Name: _ZN5cling7runtime6gClingE SID: 0 Offset: (nil) flags: 66; emitSection SectionID: 1 Name: .text obj addr: 0x1002151e440 new addr: 0x3fff8d1f0000 DataSize: 180 StubBufSize: 176 Allocate: 356; 	Type: 4 Name: at_quick_exit SID: 1 Offset: 0x68 flags: 66; 	Type: 4 Name: atexit SID: 1 Offset: 0x8 flags: 66; Parse relocations:; 	SectionID: 1; 		RelType: 44 Addend: -8 TargetName: .TOC.; 		SectionID: 1 Offset: 0; 		RelType: 10 Addend: 0 TargetName: __cxa_atexit; 		SectionID: 1 Offset: 48; Create a new stub function; 		RelType: 44 Addend: -8 TargetName: .TOC.; 		SectionID: 1 Offset: 96; 		RelType: 10 Addend: 0 TargetName: __cxa_atexit; 		SectionID: 1 Offset: 144; Stub function found; ----- Contents of section .data before relocations -----; 0x00003fff8d1d0000: b0 46 b9 20 00 01 00 00 44 48 b9 20 00 01 00 00; ----- Contents of section .text before relocations -----; 0x00003fff8d1f0000: 00 00 00 00 00 00 00 00 f8 ff 4c e8 14 62 42 7c; 0x00003fff8d1f0010: a6 02 08 7c 10 00 01 f8 e1 ff 21 f8 00 01 80 38; 0x00003fff8d1f0020: c6 07 84 78 b9 20 84 64 b0 46 85 60 00 00 80 38; 0x00",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-981977924:431,down,down,431,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-981977924,1,['down'],['down']
Availability,"That last error is caused by the code looking for a json file and using `__file__` to get the directory where the python script is stored, because that's where the json file is also stored. And `__file__` does not exist in the notebook",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10430#issuecomment-1106187497:10,error,error,10,https://root.cern,https://github.com/root-project/root/issues/10430#issuecomment-1106187497,1,['error'],['error']
Availability,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags; 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests; 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`; 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16612#issuecomment-2396463790:366,down,downstream,366,https://root.cern,https://github.com/root-project/root/issues/16612#issuecomment-2396463790,1,['down'],['downstream']
Availability,"That's all there is, which is confusing! here are 2 zip files with all the log files in the builds; [ROOT_v6-28-12-XROOT-error.zip](https://github.com/root-project/root/files/14137175/ROOT_v6-28-12-XROOT-error.zip); [ROOT-v6-26-10-TBB-error.zip](https://github.com/root-project/root/files/14137176/ROOT-v6-26-10-TBB-error.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14520#issuecomment-1923295193:121,error,error,121,https://root.cern,https://github.com/root-project/root/issues/14520#issuecomment-1923295193,4,['error'],['error']
Availability,That's fixing the CMS preprocessor / duplicate definition errors?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1403#issuecomment-348166225:58,error,errors,58,https://root.cern,https://github.com/root-project/root/pull/1403#issuecomment-348166225,1,['error'],['errors']
Availability,That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`?\; And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6526#issuecomment-702072629:46,error,error,46,https://root.cern,https://github.com/root-project/root/pull/6526#issuecomment-702072629,1,['error'],['error']
Availability,"That's how it works:. C++ code:. ``` cpp; PyRunString(""callbacks = [ }"", ""Stupid typo here"");; ```. Command line message:. ``` bash; <WARNING> : Failed to run python code: callbacks = [}; <WARNING> : Python error message:; File ""<string>"", line 1; callbacks = [ }; ^; SyntaxError: unexpected EOF while parsing; <FATAL> : Stupid typo here; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/278#issuecomment-251905535:207,error,error,207,https://root.cern,https://github.com/root-project/root/pull/278#issuecomment-251905535,1,['error'],['error']
Availability,That's what c++ does. I never understood why this warning is not a error. Cling can promote this warning into an error though...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15537#issuecomment-2116934538:67,error,error,67,https://root.cern,https://github.com/root-project/root/issues/15537#issuecomment-2116934538,2,['error'],['error']
Availability,The 'failure' is:; ```; 21:04:55 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4266#issuecomment-524043091:5,failure,failure,5,https://root.cern,https://github.com/root-project/root/pull/4266#issuecomment-524043091,1,['failure'],['failure']
Availability,"The 'succeed' job seems to get to:. ```; [2020-12-18 14:29:25.905501 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request, username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=tatls002-2188754.0-lcg2453.gridpp.rl.ac.uk&xrd.rn=v4.10.0, dual-stack: false, private IPv4: true, private IPv6: false; ```. but the failed ends before this point. I can upload the files of these two logs, if it would help.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-749432504:110,echo,echo,110,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-749432504,1,['echo'],['echo']
Availability,The 2 failure seems unrelated. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2807#issuecomment-431284336:6,failure,failure,6,https://root.cern,https://github.com/root-project/root/pull/2807#issuecomment-431284336,1,['failure'],['failure']
Availability,The 2 failures are pre-exisiting (Mac-Beta due to XCode upgrade and TMapFile random behavior).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16202#issuecomment-2284525091:6,failure,failures,6,https://root.cern,https://github.com/root-project/root/pull/16202#issuecomment-2284525091,1,['failure'],['failures']
Availability,The 2 sets of failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7094#issuecomment-785504463:14,failure,failures,14,https://root.cern,https://github.com/root-project/root/pull/7094#issuecomment-785504463,1,['failure'],['failures']
Availability,"The 32 bit build seems stall. I do not expect any failures as there is no cuda there, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4588#issuecomment-547370087:50,failure,failures,50,https://root.cern,https://github.com/root-project/root/pull/4588#issuecomment-547370087,1,['failure'],['failures']
Availability,The 32bit projectroot.math.vecops.test.gtest_math_vecops_test_vecops_rvec failure looks real?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-879707415:74,failure,failure,74,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-879707415,1,['failure'],['failure']
Availability,"The AddressSanitizer build seems quite unhappy about this: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/1037/console. Also we have lots of failures in `treetreeplayertestUnit` since this merge... (cc @Axel-Naumann; I believe this change also went into 6.28, which could / should potentially block the release)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11908#issuecomment-1399947341:191,failure,failures,191,https://root.cern,https://github.com/root-project/root/pull/11908#issuecomment-1399947341,1,['failure'],['failures']
Availability,"The CI build error detection logic is not very clever.; I quoted the error the PR is fixing in the git commit message.; The CI build puts the commit message from the PR in the CI build log.; Then scans the log for errors and tags the quoted error in the commit message as a failure...; The log actually says: 100% tests passed, 0 tests failed out of 1120",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8366#issuecomment-856589322:13,error,error,13,https://root.cern,https://github.com/root-project/root/pull/8366#issuecomment-856589322,5,"['error', 'failure']","['error', 'errors', 'failure']"
Availability,The CI fails due to unrelated errors.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11104#issuecomment-1204387911:30,error,errors,30,https://root.cern,https://github.com/root-project/root/pull/11104#issuecomment-1204387911,1,['error'],['errors']
Availability,The CI failure is unrelated to this commit. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11094#issuecomment-1203873391:7,failure,failure,7,https://root.cern,https://github.com/root-project/root/pull/11094#issuecomment-1203873391,1,['failure'],['failure']
Availability,"The CI failures are unrelated to this PR. You can find them also in other PRs, for example https://github.com/root-project/root/pull/9601.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9444#issuecomment-1016472365:7,failure,failures,7,https://root.cern,https://github.com/root-project/root/pull/9444#issuecomment-1016472365,1,['failure'],['failures']
Availability,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:; ```; The following tests FAILED:; 19998; 	274 - test-stressmathmore-interpreted (Failed); ```. Other Windows build:; ```; The following tests FAILED:; 19541; 	276 - test-stressmathmore-interpreted (Failed); 19542; 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12528#issuecomment-1547499633:84,error,errors,84,https://root.cern,https://github.com/root-project/root/pull/12528#issuecomment-1547499633,2,['error'],"['error', 'errors']"
Availability,The CI seems happy except some expected failures. I would like to see what happens on Windows and then I think we are ready to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13739#issuecomment-1741000952:40,failure,failures,40,https://root.cern,https://github.com/root-project/root/pull/13739#issuecomment-1741000952,1,['failure'],['failures']
Availability,"The CI warnings and error are not related to the changes in this PR. They seem to be related to the external dependencies TBB, CFITSIO, and GSL.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9157#issuecomment-948684699:20,error,error,20,https://root.cern,https://github.com/root-project/root/pull/9157#issuecomment-948684699,1,['error'],['error']
Availability,"The CMake build is now much more heavily integrated with the folder structure. This has the positive side that less copying is going on, and the downside that it has to fill in the source directory with the items it needs from ROOT (they are ignored and easy to clean with `make purge`, though). Like before, you can build in place or make a redistributable source package. Only added one `.gitignore`. Haven't really touched the ROOT Minuit2 build system, though some fixes would be good there too, but that's a later PR. (Instructions have not been updated to new version yet, and not as well tested yet). I can revert to the old system if that's better. The original reason for using CMake to do the copy also was because that avoided having to write a `.sh` file, and was more portable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-369603935:145,down,downside,145,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-369603935,1,['down'],['downside']
Availability,"The Debian i686 errors are due to a node upgrade, ignore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8564#issuecomment-870427298:16,error,errors,16,https://root.cern,https://github.com/root-project/root/pull/8564#issuecomment-870427298,1,['error'],['errors']
Availability,"The Doxyfile in master uses:. ```; EXCLUDE_SYMBOLS = *ClassDef* *ClassImp*; MACRO_EXPANSION = NO; EXPAND_ONLY_PREDEF = NO; PREDEFINED = ; ```. The Doxyfile in the PR uses. ```; EXCLUDE_SYMBOLS =; MACRO_EXPANSION = YES; EXPAND_ONLY_PREDEF = YES; PREDEFINED = ClassDef(x,y)=// ClassImp(x)=// ClassImpQ(x)=// templateClassImp(x)=// NamespaceImp(x)=//. ```. The version in master doesn't really address the problem. At best it can be viewed as a cosmetic change that papers over a tiny fraction of the issues. If I grep for some common warnings and errors in the logs for the two versions I get:. ```; $ grep ""Found ';' while"" bad.txt | wc -l; 89; $ grep ""Illegal member name found"" bad.txt | wc -l; 138; $ grep ""no matching file member found for"" bad.txt | wc -l; 92; $ grep ""was not declared or defined"" bad.txt | wc -l; 185; $ grep ""Found ';' while"" good.txt | wc -l; 1; $ grep ""Illegal member name found"" good.txt | wc -l; 0; $ grep ""no matching file member found for"" good.txt | wc -l; 43; $ grep ""was not declared or defined"" good.txt | wc -l; 41; ```. As can be seen the version in master does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/161#issuecomment-227994967:545,error,errors,545,https://root.cern,https://github.com/root-project/root/pull/161#issuecomment-227994967,1,['error'],['errors']
Availability,"The Fedora 29 failures are due to what I talked about before lunch. I think it's caused by recent changes to roottest that now pick up any installed ROOT over the one from the build directory that was configured with `-Droottest=ON`. @oshadura said she will take a look. BTW, the failures started happening because I ran `yum install root` on the Fedora 29 nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3971#issuecomment-502661207:14,failure,failures,14,https://root.cern,https://github.com/root-project/root/pull/3971#issuecomment-502661207,2,['failure'],['failures']
Availability,"The Homebrew build is also affected:; ```; $ brew install root; ...; ==> Installing root; ==> Pouring root--6.26.06_2.ventura.bottle.tar.gz; ...; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.26/06 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Jul 28 2022, 18:08:51 |; | From tags/v6-26-06@v6-26-06 |; | With Apple clang version 14.0.0 (clang-1400.0.29.202) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ROOT::DisableImplicitMT();; Warning in <ROOT_TImplicitMT_DisableImplicitMT>: Implicit multi-threading is already disabled; root [1] double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }; root [2] TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);; root [3] TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);; root [4] gaus->SetParameters(1,0,1);; root [5] h1->FillRandom(""gaus1d"",10000);; root [6] auto res = h1->Fit(gaus,""L0S"");; FCN=42.2288 FROM MIGRAD STATUS=CONVERGED 194 CALLS 195 TOTAL; EDM=9.84622e-07 STRATEGY= 1 ERROR MATRIX ACCURATE; EXT PARAMETER STEP FIRST; NO. NAME VALUE ERROR SIZE DERIVATIVE; 1 p0 9.99994e+02 9.99994e+00 4.51460e-02 -6.48508e-05; 2 p1 8.62962e-03 1.00477e-02 4.53485e-05 -5.15704e-03; 3 p2 1.00477e+00 7.10558e-03 3.20641e-05 1.05447e-01; ERR DEF= 0.5; root [7] cout << TVirtualFitter::GetFitter() << endl;; 0x0; root [8]; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13041#issuecomment-1595062044:1179,ERROR,ERROR,1179,https://root.cern,https://github.com/root-project/root/issues/13041#issuecomment-1595062044,2,['ERROR'],['ERROR']
Availability,"The IMT failure is infra-related, failed to download a file:; ```; Error in <TDavixFile::DavixPReadBuffer>: can not read data with davix: Connection timed out (8); Error in <TBranchElement::GetBasket>: File: http://root.cern.ch/files/tp_process_imt_small.root at byte:0, branch:tracks.fCoordinates.fT, entry:12345, badread=1, nerrors=1, basketnumber=12; ```. However, it would be nice if ROOT didn't crash when that happened...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1320#issuecomment-344192419:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/1320#issuecomment-344192419,4,"['Error', 'down', 'failure']","['Error', 'download', 'failure']"
Availability,"The Jenkins ""failure"" seems to be caused by Jenkins itself; all builds succeeded. Merging to fix CMS.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9951#issuecomment-1048535252:13,failure,failure,13,https://root.cern,https://github.com/root-project/root/pull/9951#issuecomment-1048535252,1,['failure'],['failure']
Availability,"The Jenkins failures are either pre-existing or problems with the node configurations (some of which have been fixed in the mean time), so this should be good to go. @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9342#issuecomment-983489732:12,failure,failures,12,https://root.cern,https://github.com/root-project/root/pull/9342#issuecomment-983489732,1,['failure'],['failures']
Availability,"The JupyROOT failure is a master branch failure unrelated to this PR. Other than that, CI passes now. I think it should be ready to merge if you have no further change requests @lmoneta.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8369#issuecomment-867624476:13,failure,failure,13,https://root.cern,https://github.com/root-project/root/pull/8369#issuecomment-867624476,2,['failure'],['failure']
Availability,The LGTM error is unrelated to the changes in this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8413#issuecomment-859545533:9,error,error,9,https://root.cern,https://github.com/root-project/root/pull/8413#issuecomment-859545533,1,['error'],['error']
Availability,The Mac errors are not related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301835489:8,error,errors,8,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301835489,1,['error'],['errors']
Availability,The New CI failures seems unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14200#issuecomment-1851737030:11,failure,failures,11,https://root.cern,https://github.com/root-project/root/pull/14200#issuecomment-1851737030,1,['failure'],['failures']
Availability,The PR changes modules-related code. The failure in non-modules config is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5348#issuecomment-615060761:41,failure,failure,41,https://root.cern,https://github.com/root-project/root/pull/5348#issuecomment-615060761,1,['failure'],['failure']
Availability,"The PR looks good, thanks a lot! The windows failures are unrelated. I will merge after adding corresponding tests to roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5272#issuecomment-607223231:45,failure,failures,45,https://root.cern,https://github.com/root-project/root/pull/5272#issuecomment-607223231,1,['failure'],['failures']
Availability,"The PR you are referring to had quite a lot of interactions seems to me. It is a histogram related and Lorenzo is the person to ping. Regarding this new functionality you are requesting, you produced a tool. Seems to me that's enough for now. May be @lmoneta can comment if it is something we want to be built in?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10660#issuecomment-1466221183:128,ping,ping,128,https://root.cern,https://github.com/root-project/root/issues/10660#issuecomment-1466221183,1,['ping'],['ping']
Availability,The ROOT CI / mac14 failure is not due to this PR (see the successful build in the previous commit).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12202#issuecomment-2074364045:20,failure,failure,20,https://root.cern,https://github.com/root-project/root/pull/12202#issuecomment-2074364045,1,['failure'],['failure']
Availability,"The ROOT PostScript and PDF backends use the original PostScript-defined 13 font styles which form 4 type families:. [Courier](https://en.wikipedia.org/wiki/Courier_(typeface)) (Regular, Oblique, Bold, Bold Oblique); [Helvetica](https://en.wikipedia.org/wiki/Helvetica) (Regular, Oblique, Bold, Bold Oblique); [Times](https://en.wikipedia.org/wiki/Times_Roman) (Roman, Italic, Bold, Bold Italic); [Symbol](https://en.wikipedia.org/wiki/Symbol_(typeface)). See the ""Core Font Set"" section in [this document](https://en.wikipedia.org/wiki/PostScript_fonts). These fonts are always available and do not need to be loaded in the PS or PDF file which allows to keep the files' sizes small **which is very important regarding the huge number of such files generated in HEP**. . So Helvetica is there. There are no license issues for PS and PDF. Unlike the `otf` and `ttf` files used for screen rendering. That's the reason why FreeSans was chosen because it is very similar to Helvetica (on my Mac I could not see the difference). We can replace the current FreeSan family by ""Tex Gyre Heros"" but that will be on screen only and will not affect the PDF and PS output. Therefore is it really worth it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14064#issuecomment-1816063640:579,avail,available,579,https://root.cern,https://github.com/root-project/root/issues/14064#issuecomment-1816063640,1,['avail'],['available']
Availability,The ROOT-ubuntu16/rtcxxmod. failure is due to 'stale' dependencies in the build system (the file has been removed from the repository).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4399#issuecomment-533575316:28,failure,failure,28,https://root.cern,https://github.com/root-project/root/pull/4399#issuecomment-533575316,1,['failure'],['failure']
Availability,"The ROOT-ubuntu18.04-i386 failures are ""expected"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2778#issuecomment-481977086:26,failure,failures,26,https://root.cern,https://github.com/root-project/root/pull/2778#issuecomment-481977086,1,['failure'],['failures']
Availability,"The Spark backend doesn't suffer from this issue because Spark does not try to serialize the C++ error object instance before sending it to the user. The error raised is more verbose (it includes the full Java stacktrace), but correctly reports the original C++ error:. ```; $: python test_spark.py; [...]; 22/07/27 16:51:03 ERROR Executor: Exception in task 0.0 in stage 0.0 (TID 0); org.apache.spark.api.python.PythonException: Traceback (most recent call last):; File ""/home/vpadulan/programs/rootproject/rootbuild/master-distrdf-debug/lib/DistRDF/Backends/Base.py"", line 112, in distrdf_mapper; mergeables = get_mergeable_values(rdf_plus.rdf, current_range.id, computation_graph_callable, optimized); File ""/home/vpadulan/programs/rootproject/rootbuild/master-distrdf-debug/lib/DistRDF/Backends/Base.py"", line 69, in get_mergeable_values; resultptr_list = computation_graph_callable(starting_node, range_id); File ""/home/vpadulan/programs/rootproject/rootbuild/master-distrdf-debug/lib/DistRDF/ComputationGraphGenerator.py"", line 219, in trigger_computation_graph; ROOT.Internal.RDF.TriggerRun(rnode); cppyy.gbl.std.runtime_error: void ROOT::Internal::RDF::TriggerRun(ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>& node) =>; runtime_error: Graph was applied to a mix of scalar values and collections. This is not supported. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/home/vpadulan/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/worker.py"", line 619, in main; process(); File ""/home/vpadulan/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/worker.py"", line 611, in process; serializer.dump_stream(out_iter, outfile); File ""/home/vpadulan/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/serializers.py"", line 259, in dump_stream; vs = list(itertools.islice(iterator, batch)); File ""/home/vpadulan/.local/lib/python3.10/site-packages/pysp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11050#issuecomment-1196878051:97,error,error,97,https://root.cern,https://github.com/root-project/root/issues/11050#issuecomment-1196878051,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"The TBB directory comes apparently from http://threadingbuildingblocks.org wanted confirmation by means of a telephone number. Wouldn't it anyway be good to provide http://threadingbuildingblocks.org and on my build directory I see down in the tar file in TBB-prefix that there is a vs2013 directory and nothing newer. So I probably have to see what I can do with the license without providing telephone numbers and alike ... Just as a side note:; On the page: https://software.intel.com/content/www/us/en/develop/articles/intel-oneapi-threading-building-blocks-system-requirements.html I see that there are newer (source) versions which also support: Microsoft* Visual C++ 14.2 (Microsoft* Visual Studio* 2019, Windows* OS only) so maybe there is a distribution yjat you could use as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8742#issuecomment-887783565:232,down,down,232,https://root.cern,https://github.com/root-project/root/issues/8742#issuecomment-887783565,1,['down'],['down']
Availability,"The TGVSlider class supports mouse wheel scroll on Linux. Does it also work on Windows?. If yes, then I guess the differences are here:. https://github.com/root-project/root/blob/master/gui/gui/src/TGSlider.cxx#L141; --> they use the different mask of my previous post.; https://github.com/root-project/root/blob/master/gui/gui/src/TGSlider.cxx#L213; --> Here they do not check for button-press type (which is ok for Linux, but maybe not for Windows)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7272#issuecomment-784421062:244,mask,mask,244,https://root.cern,https://github.com/root-project/root/pull/7272#issuecomment-784421062,1,['mask'],['mask']
Availability,The Travis parse failures are a bit worrisome... I'll merge nonetheless :smiling_imp: We can revert if this fails.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5618#issuecomment-635544956:17,failure,failures,17,https://root.cern,https://github.com/root-project/root/pull/5618#issuecomment-635544956,1,['failure'],['failures']
Availability,"The Windows ""failure"" seems spurious:; ```; 18:21:16 Build failed because:; [Pipeline] echo; 18:21:16 hudson.AbortException: script returned exit code -1; ```; even though all tests have passed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12045#issuecomment-1396537983:13,failure,failure,13,https://root.cern,https://github.com/root-project/root/pull/12045#issuecomment-1396537983,2,"['echo', 'failure']","['echo', 'failure']"
Availability,"The Windows build seems to need some fixes after the rename of TVec -> RVec:; ```; 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'Detail': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]; 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'VecOps': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]; 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'Detail': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]; 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C3083: 'VecOps': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]; 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2039: 'RAdoptAllocator': is not a member of 'ROOT::VecOps::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]; 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2065: 'RAdoptAllocator': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]; 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2275: 'T': illegal use of this type as an expression [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]; 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(148): error C2974: 'std::vector': invalid template argument for '_Alloc', type expected [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]; 21:23:47 C:\build\workspace\ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2113#issuecomment-393417016:169,error,error,169,https://root.cern,https://github.com/root-project/root/pull/2113#issuecomment-393417016,4,['error'],['error']
Availability,"The Windows error; ```; [2022-12-13T12:03:53.345Z] clingInterpreter.lib(IncrementalJIT.obj) : error LNK2019: unresolved external symbol ""class llvm::JITEventListener * __cdecl cling::createPerfJITEventListener(void)"" (?createPerfJITEventListener@cling@@YAPAVJITEventListener@llvm@@XZ) referenced in function ""private: virtual class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > > __thiscall std::_Func_impl_no_alloc<class <lambda_d2417646b7f0987897d54736770e7a35>,class llvm::Expected<class std::unique_ptr<class llvm::orc::ObjectLayer,struct std::default_delete<class llvm::orc::ObjectLayer> > >,class llvm::orc::ExecutionSession &,class llvm::Triple const &>::_Do_call(class llvm::orc::ExecutionSession &,class llvm::Triple const &)"" (?_Do_call@?$_Func_impl_no_alloc@V<lambda_d2417646b7f0987897d54736770e7a35>@@V?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@3@ABVTriple@3@@std@@EAE?AV?$Expected@V?$unique_ptr@VObjectLayer@orc@llvm@@U?$default_delete@VObjectLayer@orc@llvm@@@std@@@std@@@llvm@@AAVExecutionSession@orc@4@ABVTriple@4@@Z) [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]. [2022-12-13T12:03:53.345Z] C:\build\workspace\root-pullrequests-build\build\bin\rootcling_stage1.exe : fatal error LNK1120: 1 unresolved externals [C:\build\workspace\root-pullrequests-build\build\core\rootcling_stage1\rootcling_stage1.vcxproj]; ```; seems both real and unnecessary :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11882#issuecomment-1348615087:12,error,error,12,https://root.cern,https://github.com/root-project/root/pull/11882#issuecomment-1348615087,3,['error'],['error']
Availability,"The Windows failure is unrelated, merging. Thanks again @bendavid !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-827715191:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-827715191,1,['failure'],['failure']
Availability,"The Windows failures are unrelated, it's the know problem with the compiler that can run out of heap space.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12928#issuecomment-1571706452:12,failure,failures,12,https://root.cern,https://github.com/root-project/root/pull/12928#issuecomment-1571706452,1,['failure'],['failures']
Availability,The Windows failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16067#issuecomment-2239123290:12,failure,failures,12,https://root.cern,https://github.com/root-project/root/pull/16067#issuecomment-2239123290,1,['failure'],['failures']
Availability,The Windows failures on the climate tutorials is pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7253#issuecomment-785246944:12,failure,failures,12,https://root.cern,https://github.com/root-project/root/pull/7253#issuecomment-785246944,1,['failure'],['failures']
Availability,The Windows failures seem spurious / build system issues unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13057#issuecomment-1611051341:12,failure,failures,12,https://root.cern,https://github.com/root-project/root/pull/13057#issuecomment-1611051341,1,['failure'],['failures']
Availability,The [error](https://github.com/root-project/root/pull/14930#issuecomment-1992256961) is real and likely serious.; Its error symptoms:; ```; +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent; ```; is a consequent of the earlier symptom:; ```; -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available; ```; which indicates that for some reason the system now believes that the dictionary for `HepMC::GenEvent` is available when it is not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14930#issuecomment-1992633951:5,error,error,5,https://root.cern,https://github.com/root-project/root/pull/14930#issuecomment-1992633951,5,"['Error', 'avail', 'error']","['Error', 'available', 'error']"
Availability,The [test_webgui_ping](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/158835/testReport/projectroot.gui.webdisplay/test/test_webgui_ping/) failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11687#issuecomment-1312241541:165,failure,failure,165,https://root.cern,https://github.com/root-project/root/pull/11687#issuecomment-1312241541,1,['failure'],['failure']
Availability,"The `DataFormats/Histograms` dictionary generation fails with assertion failure; ```; rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed.; #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22; #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1; #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20; #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1; #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20); #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f); #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65); #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39); #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86); #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16232#issuecomment-2332005936:72,failure,failure,72,https://root.cern,https://github.com/root-project/root/pull/16232#issuecomment-2332005936,1,['failure'],['failure']
Availability,The `DataFormats/Histograms` failure seems to occur when the `rootcling` is processing [`MEtoEDM<double>::MEtoEDMObject`](https://github.com/cms-sw/cmssw/blob/CMSSW_14_2_X_2024-09-03-2300/DataFormats/Histograms/src/classes_def.xml#L47),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16232#issuecomment-2332092438:29,failure,failure,29,https://root.cern,https://github.com/root-project/root/pull/16232#issuecomment-2332092438,1,['failure'],['failure']
Availability,The `NotebookApp.ip = '*'` failure is a bug in older versions of Jupyter:; https://github.com/jupyter/notebook/pull/4139; Moving to a new version should fix the issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4497#issuecomment-547770609:27,failure,failure,27,https://root.cern,https://github.com/root-project/root/pull/4497#issuecomment-547770609,1,['failure'],['failure']
Availability,The `Require*` tests are testing that we correctly check for error conditions -- that should not depend on ST vs MT (but as you saw it might happen that if we check in each thread we get the error message printed N times),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10715#issuecomment-1152086743:61,error,error,61,https://root.cern,https://github.com/root-project/root/pull/10715#issuecomment-1152086743,2,['error'],['error']
Availability,The `bits/utility` compilation error has been fixed in latest master by @hahnjo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10518#issuecomment-1118878202:31,error,error,31,https://root.cern,https://github.com/root-project/root/issues/10518#issuecomment-1118878202,1,['error'],['error']
Availability,The `cling::CIFactory` error you get it when opening the ROOT C++ kernel from Jupyter?. @stwunsch could you please try if you can reproduce this on arch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6608#issuecomment-709936639:23,error,error,23,https://root.cern,https://github.com/root-project/root/issues/6608#issuecomment-709936639,1,['error'],['error']
Availability,"The `numpy` failures are because of `np.bool` and `np.object` (missing backports), `roottest_root_treeformula_schemaEvolution_make` very likely fails because of https://github.com/root-project/root/commit/e48ba0494b8f26b8b30a3b758eba47f8295768ed but not having the proper commit backported to `roottest`, and `mac12arm` is unhappy about newer `libc++` headers that were updated in the meanwhile...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14626#issuecomment-1933834029:12,failure,failures,12,https://root.cern,https://github.com/root-project/root/pull/14626#issuecomment-1933834029,1,['failure'],['failures']
Availability,The `roottest-root-roofitstats-RooDataSet_ASCII_out_WILL_FAIL` failures on Windows are known and will be fixed soon (a PR is there already),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14628#issuecomment-1936130583:63,failure,failures,63,https://root.cern,https://github.com/root-project/root/pull/14628#issuecomment-1936130583,1,['failure'],['failures']
Availability,"The above centos8 failure is not related to this PR. The Windows failure is expected (roofit_multiprocess=ON is not supported on Windows). Other CI runs were successful:; ![Schermafbeelding 2021-12-20 om 20 40 21](https://user-images.githubusercontent.com/6146598/146823280-f0257eba-8dc3-4f22-b83b-f99d1d01e9a4.png). Will now do another CI run without the MultiProcess flags, just to be sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9473#issuecomment-998217203:18,failure,failure,18,https://root.cern,https://github.com/root-project/root/pull/9473#issuecomment-998217203,2,['failure'],['failure']
Availability,"The above example throws an expected error in `cling`:; ```; [cling]$ auto h1 = new int(any_undeclared_variable_here);; input_line_5:2:20: error: use of undeclared identifier 'any_undeclared_variable_here'; auto h1 = new int(any_undeclared_variable_here);; ^; ```; ```; [cling]$ if(true) {auto h1 = new int(any_undeclared_variable_here);}; input_line_4:2:30: error: use of undeclared identifier 'any_undeclared_variable_here'; if(true) {auto h1 = new int(any_undeclared_variable_here);}; ^; ```. In root, the first example gives a syntax error instead (which is already wrong). This is because `ROOT` tries to resolve `any_undeclared_variable_here` at runtime:; ```; root [0] auto h1 = new int(any_undeclared_variable_here);; ROOT_prompt_0:1:1: error: Syntax error; auto h1 = new int(any_undeclared_variable_here);; ^; FunctionDecl 0x55555714b7c8 <input_line_8:1:1, ROOT_prompt_0:3:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'; |-ParmVarDecl 0x55555714b710 <col:22, col:28> col:28 vpClingValue 'void *'; |-CompoundStmt 0x555557161e30 <col:42, ROOT_prompt_0:3:1>; | |-DeclStmt 0x555557161e10 <line:1:1, col:48>; | | `-VarDecl 0x55555714b918 <col:1, col:47> col:6 h1 'int *':'int *' cinit; | | `-CXXNewExpr 0x555557161ce8 <col:11, col:47> 'int *' Function 0x55555714bb40 'operator new' 'void *(std::size_t)'; | | `-ParenListExpr 0x55555714bad0 <col:18, col:47> 'NULL TYPE'; | | `-DeclRefExpr 0x55555714ba90 <col:19> '<dependent type>' lvalue Var 0x55555714b988 'any_undeclared_variable_here' '<dependent type>'; | `-NullStmt 0x555557161e28 <line:2:1>; `-AnnotateAttr 0x55555714b9f0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP""; <<<NULL>>>; root [1] ; ```. And we get a segfault when added inside an if clause: ; ```; root [1] if(true) {auto h1 = new int(any_undeclared_variable_here);}; root.exe: /home/dvalapar/work/root/dev.bug-fixes/interpreter/llvm-project/clang/include/clang/AST/Type.h:752: const clang::ExtQualsTypeCommonBase* clang::QualType::getCommonPtr() const: As",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13252#issuecomment-2082487744:37,error,error,37,https://root.cern,https://github.com/root-project/root/issues/13252#issuecomment-2082487744,4,['error'],['error']
Availability,"The actual / underlying error is probably right before:; ```; In file included from ROOT_prompt_0:1:; In file included from /Users/ktf/src/sw/osx_arm64/boost/v1.75.0-local1/include/boost/program_options.hpp:17:; In file included from /Users/ktf/src/sw/osx_arm64/boost/v1.75.0-local1/include/boost/program_options/parsers.hpp:295:; In file included from /Users/ktf/src/sw/osx_arm64/boost/v1.75.0-local1/include/boost/program_options/detail/parsers.hpp:9:; /Users/ktf/src/sw/osx_arm64/boost/v1.75.0-local1/include/boost/program_options/detail/convert.hpp:36:55: error: reference to unresolved using declaration; const std::codecvt<wchar_t, char, std::mbstate_t>& cvt);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cuchar:49:1: note: using declaration annotated with 'using_if_exists' here; using ::mbstate_t _LIBCPP_USING_IF_EXISTS;; ^; ```; I'm afraid that this looks more like an issue with boost than something we can address on our side. Does a stand-alone compilation of `boost/program_options.hpp` and some use of it (to force the relevant instantiations) trigger the same error?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12762#issuecomment-1535795915:24,error,error,24,https://root.cern,https://github.com/root-project/root/issues/12762#issuecomment-1535795915,3,['error'],['error']
Availability,"The backport action does not mesh well with our repository. As seen in:; ```; Warning: Your repository allows merge commits and rebase merging.; However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests.; ```; and then later; ```; /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches; remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. ; remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. ; To https://github.com/root-project/root.git; ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined); error: failed to push some refs to 'https://github.com/root-project/root.git'; Error: Error: The process '/usr/bin/git' failed with exit code 1; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15388#issuecomment-2101271804:381,error,error,381,https://root.cern,https://github.com/root-project/root/pull/15388#issuecomment-2101271804,5,"['Error', 'error']","['Error', 'error']"
Availability,The build errors are unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1467#issuecomment-352071359:10,error,errors,10,https://root.cern,https://github.com/root-project/root/pull/1467#issuecomment-352071359,1,['error'],['errors']
Availability,The build fails on [fedora37 LLVM_ENABLE_ASSERTIONS=On](https://github.com/root-project/root/actions/runs/7425862030/job/20208382406?pr=14180#logs); ```; In file included from /github/home/ROOT-CI/build/net/netxng/G__NetxNG.cxx:38:; Error: /github/home/ROOT-CI/src/net/netxng/inc/TNetXNGFile.h:27:10: fatal error: XrdCl/XrdClFileSystem.hh: No such file or directory; 27 | #include <XrdCl/XrdClFileSystem.hh>; | ^~~~~~~~~~~~~~~~~~~~~~~~~~; compilation terminated.; gmake[2]: *** [net/netxng/CMakeFiles/G__NetxNG.dir/build.make:97: net/netxng/CMakeFiles/G__NetxNG.dir/G__NetxNG.cxx.o] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:50605: net/netxng/CMakeFiles/G__NetxNG.dir/all] Error 2; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14180#issuecomment-1880687658:233,Error,Error,233,https://root.cern,https://github.com/root-project/root/pull/14180#issuecomment-1880687658,4,"['Error', 'error']","['Error', 'error']"
Availability,The build failure on windows ultimately relates to roottest not being found on Maarten's GitHub.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3009#issuecomment-473953700:10,failure,failure,10,https://root.cern,https://github.com/root-project/root/pull/3009#issuecomment-473953700,1,['failure'],['failure']
Availability,The build on Windows didn't fail. This stupid Jenkins is taking the `error C2664: ...` in the commit log as real errors...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8789#issuecomment-891812150:69,error,error,69,https://root.cern,https://github.com/root-project/root/pull/8789#issuecomment-891812150,2,['error'],"['error', 'errors']"
Availability,"The centos8 built failed with an unrelated error:; ```; gmake[2]: *** No rule to make target 'lib/libvdt.so', needed by 'lib/libROOTVecOps.so.6.29.01'. Stop.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12614#issuecomment-1496716105:43,error,error,43,https://root.cern,https://github.com/root-project/root/pull/12614#issuecomment-1496716105,1,['error'],['error']
Availability,The chain/make failure is mine ... fixing it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/565#issuecomment-300616437:15,failure,failure,15,https://root.cern,https://github.com/root-project/root/pull/565#issuecomment-300616437,1,['failure'],['failure']
Availability,"The challenge here is that the code does silenty the 'wrong' thing. The compiler and the case where shadowing is disabled, correctly fail with a good error. While the current prompt will do the wrong thing completely. On the other hand the issue is likely not severe as this only affect the prompt (where one would possibly cast to get a 'better' printout) and would not affect scripts. (I.e. despite being silent, the user might still notice).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8304#issuecomment-2021416536:150,error,error,150,https://root.cern,https://github.com/root-project/root/issues/8304#issuecomment-2021416536,1,['error'],['error']
Availability,"The change is not a debug printout, it inserts a new line in the SVG file before the `<\text>` tag. This avoids the syntax error the user sees when inserting a very long text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14590#issuecomment-1928978464:123,error,error,123,https://root.cern,https://github.com/root-project/root/pull/14590#issuecomment-1928978464,1,['error'],['error']
Availability,The change is on the cmake hotspot used by virtually everybody. The risk to make an error here is high due to the complexity of the routine. Taking such risk weeks before the release should be very well weighted with the actual gain. It seems to me that the gain is not big enough to justify taking this direction for the release branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4763#issuecomment-574165892:84,error,error,84,https://root.cern,https://github.com/root-project/root/pull/4763#issuecomment-574165892,1,['error'],['error']
Availability,"The change looks fine to me, thanks for proposing it. Maybe a doubt, which could be clarified by C++ experts (@silverweed @hahnjo) do you know whether we can prevent *at compile time* with an error/warning the situation where a user defines a default c'tor for classes ultimately inheriting from TObject?; If that's not possible, should we also think about a way to check this at dictionary generation level via the Clang interface, when we have the entire AST at disposal?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16218#issuecomment-2285348825:192,error,error,192,https://root.cern,https://github.com/root-project/root/pull/16218#issuecomment-2285348825,1,['error'],['error']
Availability,"The changes are ok, but we might want to fix the root cause (pun intended) rather than the symptom. Constructing a std::string from a TString should _not_ be ambiguous, `TString` has a conversion operator defined for this purpose. @criezy what platform are you on? and can you please post the full compilation error?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8477#issuecomment-864043888:310,error,error,310,https://root.cern,https://github.com/root-project/root/pull/8477#issuecomment-864043888,1,['error'],['error']
Availability,"The changes of this PR cause new test failures which are related to the iteration of `std::vector`. Possibly the `value_type` and `value_size` fields are linked to the iteration too, and some additional changes are required there. Needs investigation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11623#issuecomment-1290785557:38,failure,failures,38,https://root.cern,https://github.com/root-project/root/pull/11623#issuecomment-1290785557,1,['failure'],['failures']
Availability,"The clang-tidy errors are not a part of this PR. In any case some parts might not be actual errors, some parts might require further inspection by more knowledgeable eyes (Lorenzo). Not touching clang-format for the fit files in this PR outside of touched lines. Don't agree with most of the suggestions, but I can take a look again in the upcoming PR deploying this executor in the fitting files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6327#issuecomment-726125712:15,error,errors,15,https://root.cern,https://github.com/root-project/root/pull/6327#issuecomment-726125712,2,['error'],['errors']
Availability,"The cmsUnload test fails on other PRs, too. PS: The failures in debug do not seem related.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3896#issuecomment-499356709:52,failure,failures,52,https://root.cern,https://github.com/root-project/root/pull/3896#issuecomment-499356709,1,['failure'],['failures']
Availability,"The code inlining mechanism uses the doxygen command [`\include`](https://www.doxygen.nl/manual/commands.html#cmdinclude). This command does not allow to specify the type of code to be inlined (C++ or python) the only two options available are `doc` and `lineno`. I guess the ""code"" is considered as C/C++ that's why the highlighting is not correct for that python example. I'll try to find a solution. The simplest would have been an option `.py` like for the `\code` doxygen command (see help). I tried but it does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12851#issuecomment-1558888571:230,avail,available,230,https://root.cern,https://github.com/root-project/root/issues/12851#issuecomment-1558888571,1,['avail'],['available']
Availability,The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log; $ root -b -q -x -e 1+2; input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; 'at_quick_exit' not defined; <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; Failed to load module ROOT_Foundation_C; Failed to load module ROOT_Rtypes; Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:179,error,error,179,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['error'],['error']
Availability,"The command executed by root is:; ```; gs -quiet -dSAFER -dNOPLATFONTS -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dUseCIEColor -dCompatibilityLevel=1.4 -dPDFSETTINGS=/printer -dCompatibilityLevel=1.4 -dMaxSubsetPct=100 -dSubsetFonts=true -dEmbedAllFonts=true -sOutputFile=pdf_temp.pdf -f Test.pdf; ```; I tried on an other Mac with a more recent version of `gs` and I see also the error message. I am investigating. ```; root [5] c1->Print(""Test.pdf"",""EmbedFonts"");; Info in <TCanvas::Print>: EmbedFonts file Test.pdf has been created; GPL Ghostscript 9.55.0: . Use of -dUseCIEColor detected!; Since the release of version 9.11 of Ghostscript we recommend you do not set; -dUseCIEColor with the pdfwrite/ps2write device family. **** Error: Encountered 'obj' while expecting 'endobj'.; Treating this as a missing 'endobj', output may be incorrect.; **** Error: Encountered 'obj' while expecting 'endobj'.; Treating this as a missing 'endobj', output may be incorrect.; GPL Ghostscript 9.55.0: . Use of -dUseCIEColor detected!; Since the release of version 9.11 of Ghostscript we recommend you do not set; -dUseCIEColor with the pdfwrite/ps2write device family. root [6] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13560#issuecomment-1697296935:375,error,error,375,https://root.cern,https://github.com/root-project/root/issues/13560#issuecomment-1697296935,3,"['Error', 'error']","['Error', 'error']"
Availability,"The compilation error seems to be due to a mismatch between the toolchain that was used to compile ROOT and the toolchain you are using to compile your program (e.g. different glibc version). I don't know enough about nixOS to suggest a fix. The massif output shows little memory usage (`mem_heap_B=72938`). Can you try using `root.exe` instead of `root` as the command? By removing one layer of indirection we might help massif see things properly (but of course if we can run on a compiled program rather than through the interpreter it makes everything simpler). Cheers,; Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9087#issuecomment-951644988:16,error,error,16,https://root.cern,https://github.com/root-project/root/issues/9087#issuecomment-951644988,1,['error'],['error']
Availability,"The context is; ```; 17:06:38 [10689/11146] Running utility command for SofieCompileModels_ONNX; 17:06:38 error: unable to read PCH file /mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch: 'No such file or directory'; 17:06:38 fatal error: PCH file '/mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch' not found: module file not found; 17:06:38 FAILED: tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.util ; ```; This didn't happen before with my changes. It looks like TMVA/Sofie is trying to build a test that needs the PCH before the PCH is created (i.e. that particular test should depend on the PCH being built and it's currently not). That is, the equivalent of. https://github.com/root-project/root/blob/master/tmva/sofie/test/CMakeLists.txt#L96-L103. is missing for `SofieCompileModels_ONNX`. Maybe @lmoneta has seen this problem before?; This test seems to have [other problems](https://mattermost.web.cern.ch/root/pl/ckkqimfxxpbefeq4rrcn3t5dpy) as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10690#issuecomment-1401704523:106,error,error,106,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1401704523,2,['error'],['error']
Availability,"The crash happens on line `2598` of `TDecompSparse.cxx`:. `w1 = w[ipiv]*a[apos];`. because `apos = 3493762`. but `fFact.N = 3493234`. Not sure what the best way is to solve this, so pinging @lmoneta . The reproducer is:. ```; #include ""TFile.h""; #include ""TDecompSparse.h"". void decomp() {; auto f = TFile::Open(""/tmp/matrix_fail.root"");; f->ls();; TMatrixTSparse<double>* M = (TMatrixTSparse<double>*)f->Get(""M"");; M->Print();; TVectorT<double>* x = (TVectorT<double>*)f->Get(""x"");; TDecompSparse solver(*M,0);; Bool_t ok;; TVectorD xx = solver.Solve(*x, ok);; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14554#issuecomment-2134945068:182,ping,pinging,182,https://root.cern,https://github.com/root-project/root/issues/14554#issuecomment-2134945068,1,['ping'],['pinging']
Availability,The ctest failure should be fixed by https://github.com/root-project/roottest/pull/45,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/590#issuecomment-304134651:10,failure,failure,10,https://root.cern,https://github.com/root-project/root/pull/590#issuecomment-304134651,1,['failure'],['failure']
Availability,The cuDNN failure is unrelated to this PR; it's happening since two nights in the nightlies.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16759#issuecomment-2447080828:10,failure,failure,10,https://root.cern,https://github.com/root-project/root/pull/16759#issuecomment-2447080828,1,['failure'],['failure']
Availability,"The current failures stem from the excessive deserialization with call stack:; ```; frame #58: 0x00000001042e4611 libCling.so`TClingMethodInfo::SpecIterator::SpecIterator(this=0x00007fff5fbf7fc0, decl=0x0000000102b143c8) at TClingMethodInfo.cxx:66; frame #59: 0x00000001042e02dd libCling.so`TClingMethodInfo::SpecIterator::SpecIterator(this=0x00007fff5fbf7fc0, decl=0x0000000102b143c8) at TClingMethodInfo.cxx:66; frame #60: 0x00000001042de711 libCling.so`TClingMethodInfo::InternalNext(this=0x000000011b4805d0) at TClingMethodInfo.cxx:439; frame #61: 0x00000001042e0345 libCling.so`TClingMethodInfo::Next(this=0x000000011b4805d0) at TClingMethodInfo.cxx:463; frame #62: 0x000000010418b5f1 libCling.so`TCling::MethodInfo_Next(this=0x0000000100d2c4a0, minfo=0x000000011b4805d0) const at TCling.cxx:8023; frame #63: 0x0000000100411d70 libCore.so`TListOfFunctions::Load(this=0x000000011b4803d0) at TListOfFunctions.cxx:391; frame #64: 0x00000001003b8623 libCore.so`TClass::GetListOfMethods(this=0x000000011b480050, load=true) at TClass.cxx:3673; frame #65: 0x000000011acc89c4 libPyROOT.so`Cppyy::GetNumMethods(scope=10) at Cppyy.cxx:662; frame #66: 0x000000011ad28c71 libPyROOT.so`PyROOT::CreateScopeProxy(scope_name=""ROOT"", parent=0x0000000000000000) at RootWrapper.cxx:592; ```. @yamaguchi1024, that might be a good hint for you, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1547#issuecomment-372030221:12,failure,failures,12,https://root.cern,https://github.com/root-project/root/pull/1547#issuecomment-372030221,1,['failure'],['failures']
Availability,"The current valgrind report hints at the jit relocation:; ```; bash-4.2$ ROOT_INCLUDE_PATH=/scratch/cmsbuild/vvasilev/rootobj/include/ valgrind root.exe -l -b -q tutorials/hsimple.C ; ==92602== Memcheck, a memory error detector; ==92602== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==92602== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info; ==92602== Command: root.exe -l -b -q tutorials/hsimple.C; ==92602== ; Disabling gnu++: clang has no __float128 support on this target!; ==92602== Source and destination overlap in memcpy(0x1fff0021f8, 0x1fff0021f8, 12); ==92602== at 0x408BCF4: memcpy (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/vgpreload_memcheck-ppc64le-linux.so); ==92602== by 0x1129C867: void llvm::SmallVectorTemplateBase<char, true>::uninitialized_copy<char const, char>(char const*, char const*, char*, std::enable_if<std::is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294); ==92602== by 0x1128FF7B: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392); ==92602== by 0x115F49F3: void llvm::SmallString<256u>::append<char const*>(char const*, char const*) (SmallString.h:75); ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285); ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281); ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311); ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501); ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::In",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:213,error,error,213,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,1,['error'],['error']
Availability,"The dataframe test failure is expected and fixed by a PR in roottest, as far as I'm concerned this PR is good to go :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/924#issuecomment-326728883:19,failure,failure,19,https://root.cern,https://github.com/root-project/root/pull/924#issuecomment-326728883,1,['failure'],['failure']
Availability,"The dataframe_simple failure is not due to your changes. We had a problem with the externals, but it should be fixed by now. As for the typo and other fixes, if you added the line you are fixing in another commit, the amend should go there. If the fix is for something on master, then it's fine to have a commit on its own.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1073#issuecomment-333490713:21,failure,failure,21,https://root.cern,https://github.com/root-project/root/pull/1073#issuecomment-333490713,1,['failure'],['failure']
Availability,"The direct reason of the failure seems to be that, at least when using SWAN, the ROOT installation is somehow ill-formed. This is a simpler reproducer that just uses Spark primitives to try to run the `root-config` command on the worker. ![image](https://github.com/root-project/root/assets/15638895/f53c6803-7e0d-44cc-80be-160f4065af9c). In all fairness, I don't understand the reason to call into that command in the first place, which happens [here](https://github.com/root-project/root/blob/07872d92719e3682213d732956a32f16be5eacf3/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/__init__.py#L47), so I will investigate if that is needed at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13798#issuecomment-1745696812:25,failure,failure,25,https://root.cern,https://github.com/root-project/root/issues/13798#issuecomment-1745696812,1,['failure'],['failure']
Availability,"The documentation is pretty large (774 Mb) vs 166MB for the whole source (which, as I understand, includes all docs in docstrings, and more), though both are tar.gz. Maybe I'll download it another time. . Maybe it could use a better compression, like .xz or .bz2? Open a feature request or I could do that if you find it reasonable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7295#issuecomment-787078845:177,down,download,177,https://root.cern,https://github.com/root-project/root/issues/7295#issuecomment-787078845,1,['down'],['download']
Availability,The error above is due to a problem in rootspi which I just fixed. Trying again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3890#issuecomment-498127904:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/3890#issuecomment-498127904,1,['error'],['error']
Availability,The error are pre-existing (the v7 macos error have been fixed by another PR).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4358#issuecomment-529572756:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/4358#issuecomment-529572756,2,['error'],['error']
Availability,The error are pre-existing/unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3015#issuecomment-440438579:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/3015#issuecomment-440438579,1,['error'],['error']
Availability,The error are unrelated/pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3014#issuecomment-440444091:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/3014#issuecomment-440444091,1,['error'],['error']
Availability,The error does not seem related to the current pull request.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13269#issuecomment-1644066967:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/13269#issuecomment-1644066967,1,['error'],['error']
Availability,"The error happens outside of a package manager as well:; ```; $ env DESTDIR=${PWD}/install cmake --build . --target install; ...; -- Installing: /srv/root/build/install/usr/local/lib/libcppyy_backend3_8.so; -- Set runtime path of ""/srv/root/build/install/usr/local/lib/libcppyy_backend3_8.so"" to ""/usr/local/lib""; CMake Error: failed to create symbolic link '/usr/local/python/site-packages/libcppyy_backend3_8.so': no such file or directory; ...; -- Installing: /srv/root/build/install/usr/local/lib/libcppyy3_8.so; -- Set runtime path of ""/srv/root/build/install/usr/local/lib/libcppyy3_8.so"" to ""/usr/local/lib""; CMake Error: failed to create symbolic link '/usr/local/python/site-packages/libcppyy3_8.so': no such file or directory; ...; ```; To reproduce, just configure `CMAKE_INSTALL_PYTHONDIR` to be different than `CMAKE_INSTALL_LIBDIR` and run the command above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7964#issuecomment-824780134:4,error,error,4,https://root.cern,https://github.com/root-project/root/issues/7964#issuecomment-824780134,3,"['Error', 'error']","['Error', 'error']"
Availability,"The error in ""ROOT-fedora31/noimt."" as transient (likely full disk or similar).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7082#issuecomment-767645305:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/7082#issuecomment-767645305,1,['error'],['error']
Availability,The error in the cxxmodule build (sl6/gcc62) are expected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2184#issuecomment-396705784:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/2184#issuecomment-396705784,1,['error'],['error']
Availability,"The error is ""real"":; ```; Warning in <THnSparse::CreateHnAny>: Unknown Type of Histogram; Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments.; const int dim ( s->GetNdimensions() );; ^; ```; Could you have a look at `root -l -b test/stressHistogram.cxx`, please? That seems to fail after your change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8546#issuecomment-875590903:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/8546#issuecomment-875590903,2,"['Error', 'error']","['Error', 'error']"
Availability,The error is concerning because it is in a test directly involving address calculation. The changes seems all very reasonable so it might actually be pre-existing (but have an 'arbitrary undefined' behavior). I'll take a look.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8013#issuecomment-828542735:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/8013#issuecomment-828542735,1,['error'],['error']
Availability,The error is due to protobuf that is missing on the machine.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10461#issuecomment-1110624754:4,error,error,4,https://root.cern,https://github.com/root-project/root/issues/10461#issuecomment-1110624754,1,['error'],['error']
Availability,The error is induced by these changes. I am not sure why yet.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8144#issuecomment-841350480:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/8144#issuecomment-841350480,1,['error'],['error']
Availability,"The error is not connected with my changes:; `21:24:19 ""C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj"" (default target) (330) ->; 21:24:19 (ClCompile target) -> ; 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(141): error C2143: syntax error: missing ';' before 'function-style cast' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]; 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2059: syntax error: '' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]; 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(142): error C2334: unexpected token(s) preceding '{'; skipping apparent function body [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]; 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]; 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(213): error C2208: 'int': no members defined using this type [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]; 21:24:19 c:\build\workspace\root-pullrequests-build_2\build\include\thttpcallarg.h(229): error C2144: syntax error: 'int' should be preceded by ';' [C:\build\workspace\root-pullrequests-build_2\build\net\http\RHTTP.vcxproj]`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2930#issuecomment-436404322:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/2930#issuecomment-436404322,11,['error'],['error']
Availability,The error is now:. [centos7-gcc7-Debug] ### Errors:; [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to ; [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . ; Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2091#issuecomment-392473662:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/2091#issuecomment-392473662,6,"['Error', 'error', 'failure']","['Error', 'Errors', 'error', 'failure']"
Availability,The error is pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5924#issuecomment-934566974:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/5924#issuecomment-934566974,1,['error'],['error']
Availability,The error is unrelated (resource contention on Windows).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12628#issuecomment-1500360862:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/12628#issuecomment-1500360862,1,['error'],['error']
Availability,"The error is unrelated; ```; Error in <ROOT [WebDisplay] Log ../root/gui/webdisplay/src/RWebWindowsManager.cxx:406 in unsigned int ROOT::Experimental::RWebWindowsManager::ShowWindow(ROOT::Experimental::RWebWindow&, bool, const ROOT::Experimental::RWebDisplayArgs&)>: Cannot display window in native; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2960#issuecomment-438851351:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/2960#issuecomment-438851351,2,"['Error', 'error']","['Error', 'error']"
Availability,"The error message changed, but there is more needed, it seems:. ```console; ❯ cat reproducer.def; Bootstrap: docker; From: fedora:36. %post; dnf -y update; dnf -y install git make cmake gcc-c++ gcc binutils ninja-build patch \; libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel; dnf -y clean all. mkdir /reproducer && cd /reproducer; git clone -b master --depth 1 http://github.com/root-project/root source; git -C source log; patch -d source -p1 <<EoF; diff --git a/interpreter/cling/include/cling/std.modulemap b/interpreter/cling/include/cling/std.modulemap; index 5498b949c5..c82959a440 100644; --- a/interpreter/cling/include/cling/std.modulemap; +++ b/interpreter/cling/include/cling/std.modulemap; @@ -428,4 +428,8 @@ module ""std"" [system] {; export *; header ""bits/stl_tree.h""; }; + module ""bits/utility.h"" {; + export *; + header ""bits/utility.h""; + }; }; EoF; cmake -GNinja -S source -B build -Dxrootd=OFF; cmake --build build; ```. -->. ```; FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm; cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478#issuecomment-1113253160:4,error,error,4,https://root.cern,https://github.com/root-project/root/issues/10478#issuecomment-1113253160,1,['error'],['error']
Availability,"The error message is inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8048#issuecomment-829528504:4,error,error,4,https://root.cern,https://github.com/root-project/root/issues/8048#issuecomment-829528504,3,"['down', 'error']","['downloaded', 'error']"
Availability,"The error message we get is not very explicit ... at least for me. ; @Axel-Naumann, @vgvassilev do you have an idea to go further with this PR ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2091#issuecomment-392521340:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/2091#issuecomment-392521340,1,['error'],['error']
Availability,"The error messages in `treetreeplayertestUnit2` are expected, but should be checked",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5591#issuecomment-642578286:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/5591#issuecomment-642578286,1,['error'],['error']
Availability,"The error messages seems harder to produce (however it is legitimate to issue a message, it bug is that the message is reversed). [Now] you need to make an effective modification to the io header:; ```; pcanal@Viroflay:~/root_working/build/pristine-opt/src$ git diff; diff --git a/io/io/inc/TFile.h b/io/io/inc/TFile.h; index d5d6722e70..02d310f1cd 100644; --- a/io/io/inc/TFile.h; +++ b/io/io/inc/TFile.h; @@ -71,7 +71,8 @@ public:; enum ECacheAction { kDisconnect = 0, kDoNotDisconnect = 1 };. protected:; - Double_t fSumBuffer{0}; ///<Sum of buffer sizes of objects written so far; +int fnewmember;; +Double_t fSumBuffer{0}; ///<Sum of buffer sizes of objects written so far; Double_t fSum2Buffer{0}; ///<Sum of squares of buffer sizes of objects written so far; Long64_t fBytesWrite{0}; ///<Number of bytes written to this file; Long64_t fBytesRead{0}; ///<Number of bytes read from this file; ```; and then (of course :) ) provoke an ""intentionally"" inconsistent built by doing a partial build:; ```; ninja RIO; ```; (otherwise ninja/make will correctly rebuild the pcm) and then:; ```; pcanal@Viroflay:~/root_working/build/pristine-opt$ rb RIO && root.exe -b -l -q; [26/26] Linking CXX shared library lib/libRIO.so; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/pristine-opt/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/pristine-opt/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTTMVASofie; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; etc ....; ```. Note that RIO.pcm is already the ""newest"" of the pcm so it can not be the one out of date :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7704#issuecomment-932732690:4,error,error,4,https://root.cern,https://github.com/root-project/root/issues/7704#issuecomment-932732690,3,['error'],['error']
Availability,The error on MacOS could possibly be related to the header files removed. Re-running the test to verify that it is not from something else than this PR. @phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2755#issuecomment-437128344:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/2755#issuecomment-437128344,1,['error'],['error']
Availability,"The error on Windows is actually not an error, it picks up the errors in the commit log...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9035#issuecomment-927926791:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/9035#issuecomment-927926791,3,['error'],"['error', 'errors']"
Availability,The error on Windows is not an error (it's coming from the commit log). Merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9613#issuecomment-1017171613:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/9613#issuecomment-1017171613,2,['error'],['error']
Availability,The error on Windows is not due to the changes done in this PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3724#issuecomment-486214966:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/3724#issuecomment-486214966,1,['error'],['error']
Availability,The error on `ROOT-performance-centos8-multicore/cxx17` is as usual related to `lvm::identify_magic`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10961#issuecomment-1184195689:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/10961#issuecomment-1184195689,1,['error'],['error']
Availability,The error on mac1014/python3 seems unrelated (missing roottest build product ```roottest/scripts/recordtiming_cc.so```. @phsft-bot build just on mac1014/python3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5924#issuecomment-649021118:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/5924#issuecomment-649021118,1,['error'],['error']
Availability,The error on macOS is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3721#issuecomment-486262248:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/3721#issuecomment-486262248,1,['error'],['error']
Availability,"The error says; `./copiedEvent: error while loading shared libraries: libCore.so.6.14: cannot open shared object file: No such file or directory`; which is true, because we have `libCore.so.6.17` now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2435#issuecomment-455587098:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/2435#issuecomment-455587098,2,['error'],['error']
Availability,"The error seems an unresolved symbol on Win; ```; 2024-09-14T07:01:53.2104016Z Creating library Z:/foobar/lib/libRooFitCore.lib and object Z:/foobar/lib/libRooFitCore.exp; 2024-09-14T07:01:53.4308777Z RooXYChi2Var.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]; 2024-09-14T07:01:53.4311585Z RooAbsTestStatistic.obj : error LNK2001: unresolved external symbol ""public: virtual void __cdecl RooAbsArg::fillVariableGroups(class RooFit::VariableGroups &)const "" (?fillVariableGroups@RooAbsArg@@UEBAXAEAVVariableGroups@RooFit@@@Z) [Z:\foobar\build\roofit\roofitcore\RooFitCore.vcxproj]; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16394#issuecomment-2350937523:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/16394#issuecomment-2350937523,3,['error'],['error']
Availability,The error sql light is because of failure to connect.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4735#issuecomment-572190726:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/4735#issuecomment-572190726,2,"['error', 'failure']","['error', 'failure']"
Availability,"The error was introduced by a commit here https://epsft-jenkins.cern.ch/job/root-nightly-master/2198/LABEL=ROOT-ubuntu18.10,SPEC=cxx17/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/ (for v6-18). How do the failure, these commits and your fix correlate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3918#issuecomment-499756232:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/3918#issuecomment-499756232,2,"['error', 'failure']","['error', 'failure']"
Availability,The error/failure are unrelated. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1548#issuecomment-359859066:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/1548#issuecomment-359859066,2,"['error', 'failure']","['error', 'failure']"
Availability,The errors above have been fixed to a change by @andresailer (thanks!). Relaunching the builds: @phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13823#issuecomment-1751693842:4,error,errors,4,https://root.cern,https://github.com/root-project/root/pull/13823#issuecomment-1751693842,1,['error'],['errors']
Availability,The errors are all legit. I need to examine them one by one and fix them (printing warnings *does* have an effect on our tests!),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16208#issuecomment-2278276832:4,error,errors,4,https://root.cern,https://github.com/root-project/root/pull/16208#issuecomment-2278276832,1,['error'],['errors']
Availability,The errors are pre-existing or infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2146#issuecomment-395559117:4,error,errors,4,https://root.cern,https://github.com/root-project/root/pull/2146#issuecomment-395559117,1,['error'],['errors']
Availability,The errors are related to this PR (i.e. library not found),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7566#issuecomment-801449728:4,error,errors,4,https://root.cern,https://github.com/root-project/root/pull/7566#issuecomment-801449728,1,['error'],['errors']
Availability,The errors are unrelated (remote file connection failures).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5924#issuecomment-650238144:4,error,errors,4,https://root.cern,https://github.com/root-project/root/pull/5924#issuecomment-650238144,2,"['error', 'failure']","['errors', 'failures']"
Availability,The errors are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7275#issuecomment-784554905:4,error,errors,4,https://root.cern,https://github.com/root-project/root/pull/7275#issuecomment-784554905,5,['error'],['errors']
Availability,The errors are unrelated.; ROOT-fedora31/noimt: ` error: failed to write new configuration file /build/workspace/root-pullrequests-build/root/.git/config.lock`. ROOT-performance-centos8-multicore/default:; df105_WBosonAnalysis_py: timeout; roottest_root_multicore_tExecutor: odd crash. ROOT-ubuntu16/nortcxxmod: IncrementalExecutor::executeFunction: symbol '_ZNK4ROOT15TThreadExecutor11GetPoolSizeEv' unresolved while linking symbol 'atexit'!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7018#issuecomment-759120884:4,error,errors,4,https://root.cern,https://github.com/root-project/root/pull/7018#issuecomment-759120884,2,['error'],"['error', 'errors']"
Availability,The errors contains:; ```; 03:51:11 -- Looking for ZSTD; 03:51:11 CMake Error at /usr/share/cmake3/Modules/FindPackageHandleStandardArgs.cmake:137 (message):; 03:51:11 Could NOT find ZSTD (missing: ZSTD_LIBRARIES ZSTD_INCLUDE_DIR); ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4323#issuecomment-541334976:4,error,errors,4,https://root.cern,https://github.com/root-project/root/pull/4323#issuecomment-541334976,2,"['Error', 'error']","['Error', 'errors']"
Availability,The errors in VectorisedPDF are fixed by https://github.com/root-project/roottest/pull/730,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8601#issuecomment-874048623:4,error,errors,4,https://root.cern,https://github.com/root-project/root/pull/8601#issuecomment-874048623,1,['error'],['errors']
Availability,The errors on ROOT-performance-centos8-multicore/default. are pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7018#issuecomment-760532814:4,error,errors,4,https://root.cern,https://github.com/root-project/root/pull/7018#issuecomment-760532814,1,['error'],['errors']
Availability,The errors seems related to the changes. (i.e they are unexpected).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14760#issuecomment-1953177360:4,error,errors,4,https://root.cern,https://github.com/root-project/root/pull/14760#issuecomment-1953177360,1,['error'],['errors']
Availability,The errors seen in the CI such as ; ```; Error in <TFile::TFile>: file /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/roottest/python/distrdf/dask/distrdf_check_friend_trees_alignment_dask_file_1.root/distrdf_check_friend_trees_alignment_dask_tree_1.root does not exist; ```; Show that something is wrong with the file names. Notice the double file name above. Probably in the creation of the spec passed to the task-local RDF something is wrong,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11526#issuecomment-1340847807:4,error,errors,4,https://root.cern,https://github.com/root-project/root/pull/11526#issuecomment-1340847807,2,"['Error', 'error']","['Error', 'errors']"
Availability,"The example code enables fp exceptions. fp operations are not ""stable"" - high optimization levels can re-order / re-arrange fp operations, causing fp exceptions that wouldn't be there for lower optimization levels. I like to understand why fp exceptions are a topic for you. While ROOT does offer an interface to manipulate the fp exception mask, it does *not* turn on fp exceptions by default. I wonder why they are on for you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6677#issuecomment-713438085:341,mask,mask,341,https://root.cern,https://github.com/root-project/root/issues/6677#issuecomment-713438085,1,['mask'],['mask']
Availability,The failed `windows10/default` build is my fault. Sorry about that!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3087#issuecomment-444164323:43,fault,fault,43,https://root.cern,https://github.com/root-project/root/pull/3087#issuecomment-444164323,2,['fault'],['fault']
Availability,"The failing test seems to trigger some llvm bug:; ```; valgrind --suppressions=/build/vvassilev/root-release-master/etc/valgrind-root.supp root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -q -l -b assertSparseSelection.C; ==22765== Memcheck, a memory error detector; ==22765== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==22765== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info; ==22765== Command: root.exe -e #define\ ClingWorkAroundPrintfIssues -e #define\ ClingWorkAroundLackOfModule -e #define\ ClingWorkAroundProxyConfusion -e #define\ ClingWorkAroundMissingDynamicScope -e #define\ ClingWorkAroundMultipleInclude -e #define\ ClingWorkAroundAutoParseUsingNamespace -e #define\ ClingWorkAroundExtraParensWithImplicitAuto -e #define\ ClingWorkAroundNoPrivateClassIO -e #define\ ClingWorkAroundBrokenUnnamedReturn -e #define\ ClingWorkAroundUnnamedDetection2 -e #define\ ClingWorkAroundUnnamedInclude -e #define\ ClingWorkAroundJITfullSymbolResolution -e #define\ ClingWorkAroundNoDotNamespace -e #define\ ClingWorkAroundNoDotInclude -e #define\ ClingWorkAroundTClassUpdateDouble32 -e #define\ ClingWorkAroundUnloadingVTABLES -q -l -b assertSparseSelection.C; ==22765== . Processing assertSparseSelection.C...; ==22765== Conditional jump or move depends on unin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1250106081:948,error,error,948,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1250106081,1,['error'],['error']
Availability,"The failure above on macOS is due to `-Dfail-on-missing=ON` being passed, and PCRE not being found, which is the expected behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3975#issuecomment-503033864:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/3975#issuecomment-503033864,1,['failure'],['failure']
Availability,The failure are infrastructure related.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4425#issuecomment-534694988:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/4425#issuecomment-534694988,1,['failure'],['failure']
Availability,The failure are pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5391#issuecomment-618457821:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/5391#issuecomment-618457821,1,['failure'],['failure']
Availability,The failure are unrelated (deprecated code not removed yet). Can you make a PR against v6.28 patch branch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11958#issuecomment-1364055288:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/11958#issuecomment-1364055288,1,['failure'],['failure']
Availability,The failure are unrelated (testProxies is due to the change in std::pair handling in TClass) and the other 2 are related to template instantiation within Cling.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10206#issuecomment-1076717212:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/10206#issuecomment-1076717212,1,['failure'],['failure']
Availability,The failure are unrelated so this is ready to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5365#issuecomment-620118826:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/5365#issuecomment-620118826,1,['failure'],['failure']
Availability,The failure are unrelated to the patch. . Thanks for this contribution :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1358#issuecomment-347019472:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/1358#issuecomment-347019472,1,['failure'],['failure']
Availability,The failure are unrelated.(or so it seems),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6728#issuecomment-720725974:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/6728#issuecomment-720725974,1,['failure'],['failure']
Availability,"The failure in ROOT-fedora29/python3. is infrastructure related (""-j9 command does not exist"" :) ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3915#issuecomment-499533112:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/3915#issuecomment-499533112,1,['failure'],['failure']
Availability,The failure in TThreadedObjectAutoMemManagement appears to be likely a race condition that we just introduced that was not there before because the `ProcessLine` was always executed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14969#issuecomment-1998609408:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/14969#issuecomment-1998609408,1,['failure'],['failure']
Availability,"The failure in Windows is; `21:22:41 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]`; Therefore, ready to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3639#issuecomment-491179897:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/3639#issuecomment-491179897,2,"['error', 'failure']","['error', 'failure']"
Availability,The failure in [projectroot.roottest.python.distrdf.dask.roottest_python_distrdf_dask_test_all](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/178340/testReport/projectroot.roottest.python.distrdf/dask/roottest_python_distrdf_dask_test_all/) might look suspicious but I think it's unrelated. Let's see.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13121#issuecomment-1613428881:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/13121#issuecomment-1613428881,1,['failure'],['failure']
Availability,The failure in ```tutorial-roofit-rf408_RDataFrameToRooFit-py``` is actually a real error which wasn't being caught before (a rather subtle SFINAE problem),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449#issuecomment-1478486627:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/12449#issuecomment-1478486627,2,"['error', 'failure']","['error', 'failure']"
Availability,The failure in `aclicDataMemberSelection` is pre-existing (seemingly on the same platform as the issue this PR fixes). I double locally checked that this PR fix the intended issue on Ubuntu 22.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11551#issuecomment-1278098555:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/11551#issuecomment-1278098555,1,['failure'],['failure']
Availability,"The failure in `dataframe_interface` is bad, investigating.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5488#issuecomment-621224099:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/5488#issuecomment-621224099,1,['failure'],['failure']
Availability,The failure in `datasource_sqlite` should be fixed by #6214 .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6208#issuecomment-675904401:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/6208#issuecomment-675904401,1,['failure'],['failure']
Availability,The failure in `roottest_root_meta_runMemberComments` is expected and just a reference file update. The failure in `issue-6840.roottest_root_meta_tclass_issue_6840_emulatePairsTest` is unexpected .. humm actually it is likely a consequence of changing to `%p` in the printf ... to be confirmed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7778#issuecomment-812244373:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/7778#issuecomment-812244373,2,['failure'],['failure']
Availability,The failure in `test_misc` is fixed by PR #1046 and a similar PR to roottest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331726017:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331726017,1,['failure'],['failure']
Availability,"The failure in `test_snapshot_manytasks` is due to the following issue, introduced by this PR (and the previous failure in `test_snapshot` on 32 and 64 bit might be due to the same issue:. At the beginning of a task a new input TChain replaced the old input; TChain for that _thread_ in TTreeProcessorMT, causing a destruction of; the previous _thread-local_ TTree.; At the same time, the initialization of a new task _in a different; thread_ could delete the output TTree of a multi-thread Snapshot; action, which was listed in the fClones of the input TTree.; ; This race caused the input ~TTree to access an output tree just; after its deletion, in TTree::CopyAddresses.; ; The root cause of this issue is that TTreeProcessorMT uses thread-local; variables while RDataFrame uses processing slots which threads can; exchange between themselves. I see two options to solve this:; 1. we introduce a `FinalizeTask` method in all `RDataFrame` action helpers, and we use it in `SnapshotHelperMT` to delete the output trees when we are sure that the input tree is still in scope. This is quite easy.; 2. we have `TTreeProcessorMT` delete its thread-local `TChain`s at the end of one task, not at the beginning of the next task in that thread. @etejedor @dpiparo what do you think?; I know @amadio would be happy if we introduced a `FinalizeTask` method in symmetry with the `InitTask` that we already have",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2197#issuecomment-398737985:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/2197#issuecomment-398737985,2,['failure'],['failure']
Availability,The failure in `tutorial_graphics_AtlasExample` [is preexisting](https://github.com/root-project/root/pull/12543),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12752#issuecomment-1533566296:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/12752#issuecomment-1533566296,1,['failure'],['failure']
Availability,The failure in execStatusBitsCheck is expected (need reference file upgrade).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2260#issuecomment-401026079:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/2260#issuecomment-401026079,1,['failure'],['failure']
Availability,The failure in projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck is expected and needs a reference file update.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400861137:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400861137,1,['failure'],['failure']
Availability,The failure in projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make is unusual and possibly introduced by this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2848#issuecomment-432781096:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/2848#issuecomment-432781096,1,['failure'],['failure']
Availability,The failure in projectroot.runtutorials.tutorial_tmva_envelope_classification are unique to this PR. The failure from jupiter on MacOS seems infrastructure related (but not seen consistently in other PR). . The failure projectroot.runtutorials.tutorial_multicore_imt101_parTreeProcessing is also not consistently seen elsewhere but the complain seem unrelated to this PR (error while opening input file).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5752#issuecomment-637157327:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/5752#issuecomment-637157327,4,"['error', 'failure']","['error', 'failure']"
Availability,The failure in roottest_root_tree_branches_make is real and was due to the `fDirectory` member being reset too early. Turns out that the `TBranch` destructor still need it to have a valid value. A new version correcting this has been uploaded.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9021#issuecomment-925167678:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/9021#issuecomment-925167678,1,['failure'],['failure']
Availability,The failure is 'lost connection' to worker so we don't know the actual result.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4323#issuecomment-542879383:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/4323#issuecomment-542879383,1,['failure'],['failure']
Availability,The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14747#issuecomment-1949014653:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/14747#issuecomment-1949014653,1,['failure'],['failure']
Availability,The failure is due to a flaky test TGraphMultiErrorsTests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4743#issuecomment-572503247:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/4743#issuecomment-572503247,1,['failure'],['failure']
Availability,The failure is from broken reference string. I do not see how this could relate to this pr.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5056#issuecomment-591049988:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/5056#issuecomment-591049988,1,['failure'],['failure']
Availability,"The failure is from the race condition, which was reverted. I'll re-run Jenkins and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4332#issuecomment-527828358:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/4332#issuecomment-527828358,1,['failure'],['failure']
Availability,The failure is in runtime_cxxmodules mode and it is sporadic. It is not caused by this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2745#issuecomment-436206062:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/2745#issuecomment-436206062,1,['failure'],['failure']
Availability,The failure is independent to this PR. The test tries to open something on http and fails.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4430#issuecomment-535429830:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/4430#issuecomment-535429830,1,['failure'],['failure']
Availability,The failure is infrastructure related and not due to this PR. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1549#issuecomment-360242460:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/1549#issuecomment-360242460,1,['failure'],['failure']
Availability,The failure is not due to this pr. This test fails for all pr I’ve looked at.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4198#issuecomment-521180922:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/4198#issuecomment-521180922,1,['failure'],['failure']
Availability,The failure is not related to the PR. This PR has NFC.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4545#issuecomment-541907243:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/4545#issuecomment-541907243,1,['failure'],['failure']
Availability,"The failure is not related to the code in this PR, apparently:; ```; 08:50:00 Caused by: hudson.plugins.git.GitException: Command ""git config remote.origin.url https://github.com/root-project/root.git"" returned status code 4:; 08:50:00 stdout: ; 08:50:00 stderr: error: failed to write new configuration file .git/config.lock; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/533#issuecomment-300404569:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/533#issuecomment-300404569,2,"['error', 'failure']","['error', 'failure']"
Availability,The failure is not related.; ```; 11:19:57 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3788#issuecomment-491235778:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/3788#issuecomment-491235778,2,"['error', 'failure']","['error', 'failure']"
Availability,The failure is pre-existing (python config on mac),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6973#issuecomment-749801450:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/6973#issuecomment-749801450,1,['failure'],['failure']
Availability,The failure is probably due to https://github.com/root-project/root/pull/4699,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4698#issuecomment-566538218:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/4698#issuecomment-566538218,1,['failure'],['failure']
Availability,"The failure is some timeout issue, unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7628#issuecomment-804055888:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/7628#issuecomment-804055888,1,['failure'],['failure']
Availability,"The failure is spurious and fixed by https://github.com/root-project/root/pull/15891 . I restarted the failing build. For me the PR can be merged as is, as pointed out in the review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16337#issuecomment-2322772091:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/16337#issuecomment-2322772091,1,['failure'],['failure']
Availability,"The failure is the same. I will push the change. ( I confess I fail to see why it should make a difference, given `Math/Math.h` includes `<cmath>`, but I will push it nevertheless. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-286237225:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-286237225,1,['failure'],['failure']
Availability,The failure is unrelated (Cling issue with symbols),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11292#issuecomment-1234585645:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/11292#issuecomment-1234585645,1,['failure'],['failure']
Availability,The failure is unrelated (I need to debug but no time),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8613#issuecomment-878916490:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/8613#issuecomment-878916490,1,['failure'],['failure']
Availability,The failure is unrelated (builtin xrootd failing to build).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7083#issuecomment-767084733:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/7083#issuecomment-767084733,1,['failure'],['failure']
Availability,The failure is unrelated (can't open the v7 web display in a tutorial).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2928#issuecomment-436360143:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/2928#issuecomment-436360143,1,['failure'],['failure']
Availability,The failure is unrelated and probably due to a regression with https://github.com/root-project/root/pull/15008; Sorry for that,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15016#issuecomment-2007690268:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/15016#issuecomment-2007690268,1,['failure'],['failure']
Availability,"The failure is unrelated to this PR ""SysError in <TFile::TFile>: could not delete C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\snapshotandshortsyntaxforcollectionsizes.root (errno: 13) Permission denied""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8275#issuecomment-850615568:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/8275#issuecomment-850615568,1,['failure'],['failure']
Availability,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10099#issuecomment-1065993752:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/10099#issuecomment-1065993752,7,['failure'],['failure']
Availability,The failure is unrelated. Merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8657#issuecomment-879137086:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/8657#issuecomment-879137086,1,['failure'],['failure']
Availability,The failure is unrelated. Merging. Thank you very much!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4673#issuecomment-562305573:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/4673#issuecomment-562305573,1,['failure'],['failure']
Availability,"The failure is unrelated:; ```; Error in <DavixOpen>: can not open file ""https://root.cern/files/tmva101.root"" with davix: Failure (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4583#issuecomment-547444966:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/4583#issuecomment-547444966,3,"['Error', 'Failure', 'failure']","['Error', 'Failure', 'failure']"
Availability,The failure looks unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11590#issuecomment-1282472072:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/11590#issuecomment-1282472072,1,['failure'],['failure']
Availability,"The failure of AtlasExample.C is understood. I have changed the solid circle marker to a hollow one. Here is what I get. On the right the current master on the left the version with this fix applied. One can see extra lines (inward error bars) on the right one because the marker is larger than the error bars. Of course that generates extra lines and the size of the SVG file changes. Once this PR is applied, I guess the reference file will need to be regenerated. <img width=""1203"" alt=""Screenshot 2024-09-06 at 13 30 58"" src=""https://github.com/user-attachments/assets/7a1f7c5c-c913-468c-b40f-c4949c70f034"">",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16372#issuecomment-2333866218:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/16372#issuecomment-2333866218,3,"['error', 'failure']","['error', 'failure']"
Availability,"The failure of `roottest_root_meta_tuple_exec_configtype_unload_auto` is an interesting one: It is a deserialization triggered by the `DeclUnloader`, which in turn makes the `DeclCollector` (rightfully) complain about the ""missing transaction during deserialization"". The reason for the deserialization is that `DeclUnloader` calls `spec_begin` requiring to load all specializations. I'm more and more eying to completely revert the lazy loading, as proposed in https://github.com/root-project/root/pull/12238 so that a situation like that can never happen...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1535797912:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1535797912,1,['failure'],['failure']
Availability,The failure of `test_stressgraphics` is due to https://github.com/root-project/root/pull/12235.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12335#issuecomment-1433608097:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/12335#issuecomment-1433608097,1,['failure'],['failure']
Availability,"The failure of projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot on ROOT-ubuntu16/rtcxxmod does not appear to be related **but** it also succeed consistently with just the master, so we need to understand a bit more why it fails here before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4323#issuecomment-541813601:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/4323#issuecomment-541813601,1,['failure'],['failure']
Availability,"The failure of the snapshot test is understood, a complementary PR will come for roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1764#issuecomment-377179819:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/1764#issuecomment-377179819,1,['failure'],['failure']
Availability,The failure on Arm64 is understdood (see https://github.com/root-project/root/pull/16718). Good to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16711#issuecomment-2423681562:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/16711#issuecomment-2423681562,1,['failure'],['failure']
Availability,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14645#issuecomment-1985207240:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/14645#issuecomment-1985207240,2,['failure'],"['failure', 'failures']"
Availability,The failure on `ROOT-debian10-i386/cxx14` is not a real failure. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8849#issuecomment-899385661:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/8849#issuecomment-899385661,2,['failure'],['failure']
Availability,"The failure on fedora 31 looks like a glitch on the machine, but better verify.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5739#issuecomment-635934573:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/5739#issuecomment-635934573,1,['failure'],['failure']
Availability,The failure on mac1014/cxx17 is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3144#issuecomment-445988234:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/3144#issuecomment-445988234,1,['failure'],['failure']
Availability,The failure on macos is pre-existing (missing python module),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6821#issuecomment-750494882:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/6821#issuecomment-750494882,1,['failure'],['failure']
Availability,The failure seem to be due to directory reuse on the worker node and not related to this PR. Merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1550#issuecomment-360242246:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/1550#issuecomment-360242246,1,['failure'],['failure']
Availability,"The failure seems unrelated, @sudo-panda can you mark this PR as ready to review?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11096#issuecomment-1433440718:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1433440718,1,['failure'],['failure']
Availability,"The failure to unload broken declarations (@jalopezg-git FYI), does that still happen after this PR, or is this addressed by the PR? I'm not sure I understand how much of the PR description describes _this_ PR vs what's left to be done?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449#issuecomment-1459673044:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/12449#issuecomment-1459673044,1,['failure'],['failure']
Availability,"The failures (compiler crash building clang, infrastructure problems) are unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5137#issuecomment-598351415:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/5137#issuecomment-598351415,1,['failure'],['failures']
Availability,The failures (multicore tutorials) are unrelated/pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9021#issuecomment-926198385:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/9021#issuecomment-926198385,1,['failure'],['failures']
Availability,The failures above are not related to this pull request.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2156#issuecomment-395085296:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/2156#issuecomment-395085296,1,['failure'],['failures']
Availability,The failures actually mean this PR is ok. The changes introduced by this PR should have had impact on how we configure. The failing tests show that we went past this phase and fail in the testing phase which is something that we probably broke long ago. LGTM!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4750#issuecomment-573601138:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/4750#issuecomment-573601138,1,['failure'],['failures']
Availability,The failures are already present in master. There are not related to this PR and I am working on fixing them (see #11422),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11435#issuecomment-1259357053:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/11435#issuecomment-1259357053,1,['failure'],['failures']
Availability,"The failures are because I merged. The build passed several times before, and I tested locally on Linux and Mac (and Windows for some cases).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1636#issuecomment-367350707:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/1636#issuecomment-367350707,1,['failure'],['failures']
Availability,"The failures are definitely due to my changes. Did not see them on my machine, will investigate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5544#issuecomment-624137437:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/5544#issuecomment-624137437,1,['failure'],['failures']
Availability,The failures are due to failing rebase and network outage.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6309#issuecomment-699547921:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/6309#issuecomment-699547921,2,"['failure', 'outage']","['failures', 'outage']"
Availability,The failures are infrastructure related.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3496#issuecomment-471195040:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/3496#issuecomment-471195040,2,['failure'],['failures']
Availability,"The failures are known problems, so ready to merge. (For the one on windows, you would have to fork roottest to your github, if I'm not mistaken.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5506#issuecomment-623965343:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/5506#issuecomment-623965343,1,['failure'],['failures']
Availability,"The failures are not real failures, so I merge this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1657#issuecomment-367290548:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/1657#issuecomment-367290548,2,['failure'],['failures']
Availability,"The failures are not related to my changes. I will merge and if any problem arises in the nightlies, I will revert.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3357#issuecomment-459504508:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/3357#issuecomment-459504508,1,['failure'],['failures']
Availability,The failures are not related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12193#issuecomment-1413542875:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/12193#issuecomment-1413542875,1,['failure'],['failures']
Availability,The failures are obviously not related to this change... :wink:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5067#issuecomment-592035127:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/5067#issuecomment-592035127,1,['failure'],['failures']
Availability,The failures are on only one platform and they seem infrastructural.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/684#issuecomment-312421410:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/684#issuecomment-312421410,1,['failure'],['failures']
Availability,The failures are pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6740#issuecomment-737364635:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/6740#issuecomment-737364635,2,['failure'],['failures']
Availability,The failures are pre-existing. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3005#issuecomment-444133769:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/3005#issuecomment-444133769,1,['failure'],['failures']
Availability,The failures are present in other PRs and seem unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1399202433:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1399202433,1,['failure'],['failures']
Availability,The failures are present in the last nightly builds.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5485#issuecomment-620793014:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/5485#issuecomment-620793014,1,['failure'],['failures']
Availability,The failures are seemingly unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5342#issuecomment-618018265:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/5342#issuecomment-618018265,1,['failure'],['failures']
Availability,The failures are seen elsewhere in the PRs and they seem unrelated to this particular proposed change.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12075#issuecomment-1399202355:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/12075#issuecomment-1399202355,1,['failure'],['failures']
Availability,The failures are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8995#issuecomment-1017069266:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/8995#issuecomment-1017069266,2,['failure'],['failures']
Availability,The failures are unrelated (caused by me merging https://github.com/root-project/root/pull/9041 prematurely) and are fixed by https://github.com/root-project/root/pull/9046,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9045#issuecomment-930278065:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/9045#issuecomment-930278065,1,['failure'],['failures']
Availability,The failures are unrelated (pre-existing and infrastructure respectively).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12624#issuecomment-1497951316:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/12624#issuecomment-1497951316,1,['failure'],['failures']
Availability,The failures are unrelated and most likely due to a glitch in the EOS based file server.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15900#issuecomment-2182761259:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/15900#issuecomment-2182761259,1,['failure'],['failures']
Availability,"The failures are unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13576#issuecomment-1702238336:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/13576#issuecomment-1702238336,1,['failure'],['failures']
Availability,"The failures are unrelated, understood and fixed by https://github.com/root-project/roottest/pull/1180",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16344#issuecomment-2322770824:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/16344#issuecomment-2322770824,1,['failure'],['failures']
Availability,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6680#issuecomment-718942185:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/6680#issuecomment-718942185,14,['failure'],['failures']
Availability,The failures are unrelated. @ellert This is ready to merge once the commit log is updated :). Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5944#issuecomment-663156349:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/5944#issuecomment-663156349,1,['failure'],['failures']
Availability,The failures are unrelated. ROOT does not use the boost modulemap.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7568#issuecomment-801987792:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/7568#issuecomment-801987792,1,['failure'],['failures']
Availability,The failures are unrelated/pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9620#issuecomment-1017051442:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/9620#issuecomment-1017051442,1,['failure'],['failures']
Availability,The failures are unreleated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5359#issuecomment-614790470:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/5359#issuecomment-614790470,1,['failure'],['failures']
Availability,The failures cannot be related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5798#issuecomment-644729691:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/5798#issuecomment-644729691,1,['failure'],['failures']
Availability,The failures have nothing to do with this PR. ; I will then merge it Thank you for this contribution,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5159#issuecomment-628659144:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/5159#issuecomment-628659144,1,['failure'],['failures']
Availability,The failures in `projectroot.roottest.root.multicore.roottest_root_multicore_tp_process_imt` are actually successes:. ```; NUMTASKS(chain):2000; [IMT]TTreeProcessorMT::Processwith4threads; [IMT]Globalmaxptis7.90285; -NUMTASKS(tentrylist):2000; -NUMEMPTYTASKS(tentrylist):1997; +NUMTASKS(tentrylist):3; +NUMEMPTYTASKS(tentrylist):0; NUM1-ENTRYTASKS(tentrylist):3; ```. Same numerical output with 1997 less tasks scheduled :smile:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5667#issuecomment-633707742:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/5667#issuecomment-633707742,1,['failure'],['failures']
Availability,The failures in regression_zeroentries are fixed by [this PR in roottest](https://github.com/root-project/roottest/pull/99),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1200#issuecomment-337915441:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/1200#issuecomment-337915441,1,['failure'],['failures']
Availability,The failures in roottest_root_io_cpp11Containers_Names are unrelated (the test needs updating to match the master). So merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2054#issuecomment-391021164:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/2054#issuecomment-391021164,1,['failure'],['failures']
Availability,"The failures in the new CI only refer to windows, other builds are ""green"" but the tutorials are not actually run. I need to understand how to force running also these tutorials in the new CI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13302#issuecomment-1647411113:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/13302#issuecomment-1647411113,1,['failure'],['failures']
Availability,The failures of python tutorials on mac nodes are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6073#issuecomment-667992177:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/6073#issuecomment-667992177,1,['failure'],['failures']
Availability,"The failures on Fedora 34 don't seem to be related, but this commit actually fixes the warning seen in the linked PR https://github.com/root-project/root/pull/9066#issuecomment-933646782",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9065#issuecomment-933835764:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/9065#issuecomment-933835764,1,['failure'],['failures']
Availability,"The failures on Travis are not due to this PR (old Fitting code). I find he format ones make the code less legible, so I would not apply them. In any case I'm opening another PR adapting those files next, so that would be the place to address any concerns.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6327#issuecomment-707097251:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/6327#issuecomment-707097251,1,['failure'],['failures']
Availability,The failures on Ubuntu 24 are very similar to those that led to https://github.com/root-project/root/pull/15415 . My first instinct is that the new global `gConvFactories` is not thread-safe and we are hitting this problem in distrdf as usual,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15788#issuecomment-2158533120:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/15788#issuecomment-2158533120,1,['failure'],['failures']
Availability,"The failures on Windows Jenkins are the occasional out-of-heap-space of the compiler. It has nothing to do with this PR, and the new CI is green for Windows 32 bit and 64 bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14877#issuecomment-1978955862:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/14877#issuecomment-1978955862,1,['failure'],['failures']
Availability,The failures on Windows are unrelated @bellenot ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10341#issuecomment-1094751108:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/10341#issuecomment-1094751108,1,['failure'],['failures']
Availability,The failures on mac and ROOT-fedora30/cxx14. are pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6073#issuecomment-672284612:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/6073#issuecomment-672284612,1,['failure'],['failures']
Availability,"The failures on mac, alma9 and tests are unrelated to this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16442#issuecomment-2363261667:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/16442#issuecomment-2363261667,1,['failure'],['failures']
Availability,The failures on windows are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11443#issuecomment-1284289896:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/11443#issuecomment-1284289896,1,['failure'],['failures']
Availability,"The failures seem to be due to dirty build directories in the build node, as noted by Philippe. Let's wait until that is fixed and then try again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/793#issuecomment-319056306:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/793#issuecomment-319056306,1,['failure'],['failures']
Availability,"The failures seem to be in davix, and not related to vetoing the RMVA module.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4405#issuecomment-533433722:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/4405#issuecomment-533433722,1,['failure'],['failures']
Availability,The failures seem to be unrelated. They are in coming from a previous changes to span.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4354#issuecomment-528926439:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/4354#issuecomment-528926439,1,['failure'],['failures']
Availability,The failures seem unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2706#issuecomment-425184718:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/2706#issuecomment-425184718,1,['failure'],['failures']
Availability,The failures seem unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12252#issuecomment-1433442365:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/12252#issuecomment-1433442365,2,['failure'],['failures']
Availability,The failures seem unrelated. Let's merge this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1434349915:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1434349915,1,['failure'],['failures']
Availability,The failures seem unrelated. Pretty cool!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13705#issuecomment-1731598750:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/13705#issuecomment-1731598750,1,['failure'],['failures']
Availability,The failures should be independent. I will try however to rebuild this PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3024#issuecomment-441251445:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/3024#issuecomment-441251445,1,['failure'],['failures']
Availability,The failures unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9633#issuecomment-1017832384:4,failure,failures,4,https://root.cern,https://github.com/root-project/root/pull/9633#issuecomment-1017832384,1,['failure'],['failures']
Availability,The fedora failure is due to infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2993#issuecomment-439389917:11,failure,failure,11,https://root.cern,https://github.com/root-project/root/pull/2993#issuecomment-439389917,1,['failure'],['failure']
Availability,The fedora39 failure are unrelated (a system compiler update was not followed by a full rebuild thus leading to a run-time imcompatibility).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15663#issuecomment-2137756002:13,failure,failure,13,https://root.cern,https://github.com/root-project/root/pull/15663#issuecomment-2137756002,1,['failure'],['failure']
Availability,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```; Processing temp.h... ; In file included from input_line_8:1: ; In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: ; In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: ; /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' ; static const CLID CLID_ProtoParticle = 803; ; ^ ; input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here ; #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" ; ^ ; /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple ; times, additional include site here ; #include ""Event/ProtoParticle.h"" ; ^ ; ...; ...SKIPPED LINES; ...; /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' ; class ProtoParticle final : public KeyedObject<int> { ; ^ ; input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here ; #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patche",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2161120817:119,error,error,119,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2161120817,4,"['down', 'error']","['down', 'error']"
Availability,The fit tutorials errors is; ```; Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C...; Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file; libc++abi.dylib: terminating with uncaught exception of type int; CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):; error code: Child aborted; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5099#issuecomment-597148699:18,error,errors,18,https://root.cern,https://github.com/root-project/root/pull/5099#issuecomment-597148699,4,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"The fix is 'simple':; ```; diff --git a/core/metacling/src/TCling.cxx b/core/metacling/src/TCling.cxx; index 7fe65825ea..656396ffcd 100644; --- a/core/metacling/src/TCling.cxx; +++ b/core/metacling/src/TCling.cxx; @@ -6646,9 +6646,13 @@ void TCling::RefreshClassInfo(TClass *cl, const clang::NamedDecl *def, bool alia; cl->ResetCaches();; TClass::RemoveClassDeclId(cci->GetDeclId());; if (def) {; - // It's a tag decl, not a namespace decl.; - cci->Init(*cci->GetType());; - TClass::AddClassToDeclIdMap(cci->GetDeclId(), cl);; + if (cci->GetType()) {; + // It's a tag decl, not a namespace decl.; + cci->Init(*cci->GetType());; + TClass::AddClassToDeclIdMap(cci->GetDeclId(), cl);; + } else {; + Error(""RefreshClassInfo"", ""Should not need to update the classInfo a non type decl: %s"", oldDef->getNameAsString().c_str());; + }; }; }; } else if (!cl->TestBit(TClass::kLoading) && !cl->fHasRootPcmInfo) {; ```; ```; root [0] namespace std { namespace Detail {} }; root [1] auto c = TClass::GetClass(""Detail""); (TClass *) 0x12ef3d7b0; root [2] namespace Detail {}; Error in <TInterpreter::RefreshClassInfo>: Should not need to update the classInfo a non type decl: Detail; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8828#issuecomment-2372486833:696,Error,Error,696,https://root.cern,https://github.com/root-project/root/issues/8828#issuecomment-2372486833,2,['Error'],['Error']
Availability,"The fix was backported to 6.24 patches (will be available in 6.24/02), closing this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7169#issuecomment-827419391:48,avail,available,48,https://root.cern,https://github.com/root-project/root/issues/7169#issuecomment-827419391,1,['avail'],['available']
Availability,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event); The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3591#issuecomment-479203327:134,failure,failure,134,https://root.cern,https://github.com/root-project/root/pull/3591#issuecomment-479203327,3,['failure'],['failure']
Availability,"The gdb output with your -ex .... H4lAnalRun2 INFO processEvents: try to open file:; root://dcgftp.usatlas.bnl.gov:1096//pnfs/usatlas.bnl.gov/BNLT0D1/rucio/mc16_13TeV/90/56/DAOD_HIGG2D1.23315538._000001.pool.root.1; [New Thread 0x2aaae4902700 (LWP 2522)]; [New Thread 0x2aaae50e7700 (LWP 2523)]; [New Thread 0x2aaae58cc700 (LWP 2524)]; [New Thread 0x2aaae60b1700 (LWP 2525)]; [New Thread 0x2aaae6896700 (LWP 2526)]. Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 0x2aaae4902700 (LWP 2522)]; 0x00002aaad6426e5d in __res_context_search () from /lib64/libresolv.so.2. Thread 6 (Thread 0x2aaae6896700 (LWP 2526)):; #0 0x00002aaaac84fbf9 in syscall () from /lib64/libc.so.6; #1 0x00002aaae2becb5d in XrdCl::JobManager::RunJobs() () from; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2; #2 0x00002aaae2bece99 in RunRunnerThread () from; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2; #3 0x00002aaaabfa1ea5 in start_thread () from /lib64/libpthread.so.0; #4 0x00002aaaac8558dd in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x2aaae60b1700 (LWP 2525)):; #0 0x00002aaaac84fbf9 in syscall () from /lib64/libc.so.6; #1 0x00002aaae2becb5d in XrdCl::JobManager::RunJobs() () from; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2; #2 0x00002aaae2bece99 in RunRunnerThread () from; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2; #3 0x00002aaaabfa1ea5 in start_thread () from /lib64/libpthread.so.0; #4 0x00002aaaac8558dd in clone () from /lib64/libc.so.6. Thread 4 (Thread 0x2aaae58cc700 (LWP 2524)):; #0 0x00002aaaac84fbf9 in syscall () from /lib64/libc.so.6; #1 0x00002aaae2becb5d in XrdCl::JobManager::RunJobs() () from; /cvmfs/atlas.cern.ch/repo/sw/softw",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-760218827:462,fault,fault,462,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-760218827,1,['fault'],['fault']
Availability,"The good news is that I have been able to reproduce your success with our build of 6.24/04 and 6.24/06. Unfortunately, I was also able to reproduce our failures with 6.28/00-rc1 in the same environment. I'd be grateful if you could turn your attention to investigating why the fix does not work for more recent ROOT source. BTW: in order to use Ninja, one needs simply to execute `setup ninja` before executing the CMake command.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1401209723:152,failure,failures,152,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1401209723,1,['failure'],['failures']
Availability,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:; ```diff; diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h; index 403b88ac3a..5e1581f098 100644; --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h; +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h; @@ -131,7 +131,8 @@ protected:; ; unsigned : NumStmtBits;; ; - unsigned NumStmts : 32 - NumStmtBits;; + unsigned WasReplaced : 1;; + unsigned NumStmts : 32 - (NumStmtBits + 1);; ; /// The location of the opening ""{"".; SourceLocation LBraceLoc;; @@ -1328,6 +1329,7 @@ public:; explicit CompoundStmt(SourceLocation Loc); : Stmt(CompoundStmtClass), RBraceLoc(Loc) {; CompoundStmtBits.NumStmts = 0;; + CompoundStmtBits.WasReplaced = 0;; CompoundStmtBits.LBraceLoc = Loc;; }; ; diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp; index 0a4d403106..cc8c6888b8 100644; --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp; +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp; @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,; SourceLocation RB); : Stmt(CompoundStmtClass), RBraceLoc(RB) {; CompoundStmtBits.NumStmts = Stmts.size();; + CompoundStmtBits.WasReplaced = 0;; setStmts(Stmts);; CompoundStmtBits.LBraceLoc = LB;; }; @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7488#issuecomment-797417462:121,reliab,reliably,121,https://root.cern,https://github.com/root-project/root/pull/7488#issuecomment-797417462,2,"['failure', 'reliab']","['failures', 'reliably']"
Availability,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8448#issuecomment-865043312:857,avail,available,857,https://root.cern,https://github.com/root-project/root/issues/8448#issuecomment-865043312,1,['avail'],['available']
Availability,"The incremental, for example: https://epsft-jenkins.cern.ch/job/root-incremental-master/LABEL=ROOT-performance-centos7-multicore,SPEC=default/8204/console; fails with:; ```; CMake Error at interpreter/cling/CMakeLists.txt:178 (message):; NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred!; See also ""/data/sftnight/wsincrmaster/LABEL/ROOT-performance-centos7-multicore/SPEC/default/build/CMakeFiles/CMakeOutput.log"".; See also ""/data/sftnight/wsincrmaster/LABEL/ROOT-performance-centos7-multicore/SPEC/default/build/CMakeFiles/CMakeError.log"".; gmake: *** [cmake_check_build_system] Error 1; Command exited with the value: 2; ```; What is the best solution?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4618#issuecomment-551202916:180,Error,Error,180,https://root.cern,https://github.com/root-project/root/pull/4618#issuecomment-551202916,3,"['Error', 'error']","['Error', 'errors']"
Availability,"The issue happens in this [function](https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1507), when trying to get the return type normalized name of the `helper_function` function in the reproducer above. This is a C++ reproducer of the problem:; ```C++; #include <utility>. template <typename T>; class MySofieFunctorHelper {; };. auto helper_function() -> MySofieFunctorHelper<std::make_index_sequence<1>>; {; return MySofieFunctorHelper<std::make_index_sequence<1>>();; }. void sofie_repro(); {; auto f = gROOT->GetGlobalFunction(""helper_function"");; auto ret_type = f->GetReturnTypeName();; cout << ret_type << endl; // prints MySofieFunctorHelper<make_index_sequence<1> > ; auto ret_type_norm = f->GetReturnTypeNormalizedName(); // breaks; }; ```; When calling `GetReturnTypeNormalizedName()` on the `TFunction` object of `helper_function`, an assertion error shows up. E.g. from lxplus:; ```; [etejedor@lxplus768 ~]$ source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-dbg/setup.sh ; [etejedor@lxplus768 ~]$ root -q sofie_repro.C ; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 28 2022, 03:01:00 |; | From heads/master@v6-25-02-1592-ge9fa243 |; | With g++ (GCC) 11.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. Processing sofie_repro.C...; MySofieFunctorHelper<make_index_sequence<1> >; root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed.; ```. I think we need @Axel-Naumann .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10684#issuecomment-1168652229:928,error,error,928,https://root.cern,https://github.com/root-project/root/issues/10684#issuecomment-1168652229,1,['error'],['error']
Availability,"The issue is that if we have two methods (as in `TProfile`):. ```; virtual Int_t Fill(const char *namex, Double_t y, Double_t w); ; ```; and ; ```; virtual Int_t Fill(const char *namex, Double_t y); ; ```; If I set default `w` to 1. `Fill` becomes ambiguous:. ```; root [0] Double_t p1(Double_t x){return x;}; root [1] Double_t p1(Double_t y, Double_t w = 1.){ return y*w; }; root [2] p1(3.2); ROOT_prompt_2:1:1: error: call to 'p1' is ambiguous; p1(3.2); ^~; ROOT_prompt_0:1:10: note: candidate function; Double_t p1(Double_t x){return x;}; ^; ROOT_prompt_1:1:10: note: candidate function; Double_t p1(Double_t y, Double_t w = 1.){ return y*w; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5010#issuecomment-590832248:413,error,error,413,https://root.cern,https://github.com/root-project/root/pull/5010#issuecomment-590832248,1,['error'],['error']
Availability,"The issue needs to be looked at from the C++ and PyROOT perspective with a programming model in mind. But let me start from the technical answers, which are easier:; 1) The memory taken by the ""entry number custom column"" is one 64 bit integer per slot, so negligible; 2) Correct: Both slot and entry number are available at the TDF level, the difficulty is to percolate them in the actual function in the define/filter. Focussing only on C++, one could think about a ""TDF::EntryNumber"" type. We could detect it if used as first argument of the function passed and pass the entry. Such type will be transparently convertible to a 64-bits integer. As a side note, also the slot could be treated similarly. The issue will be in PyROOT, with filters and defines expressed as strings which are then jitted: these types make sense only if present in the signature of the function. If we go for the custom column solution, we know exactly what to do, we tested heavily all the components involved but we have to choose a name: ""__TDF_iEntry"", ""__Entry"", ""__iEntry"" .; Certainly starting with a ""__slot"" and ""__entry"" could be very attractive since it will provide ; a. The slot and the entry if needed; b. The steps needed for the implementation are already well understood; c. There is very little overhead - custom columns' lambdas are invoked only if the column is actually used; d. Would seamlessly work in PyROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1133#issuecomment-334451301:312,avail,available,312,https://root.cern,https://github.com/root-project/root/pull/1133#issuecomment-334451301,1,['avail'],['available']
Availability,The jenkins failure appears unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5212#issuecomment-604443691:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/pull/5212#issuecomment-604443691,1,['failure'],['failure']
Availability,"The jenkins logs are gone, but the test failure is due to certain RDF warnings being printed out that were not printed before. I'll have to investigate why (and whether the correct behavior is warning or no warning).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11232#issuecomment-1245087471:40,failure,failure,40,https://root.cern,https://github.com/root-project/root/pull/11232#issuecomment-1245087471,1,['failure'],['failure']
Availability,"The jupyter notebook test fails because of:; ```; [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'.; ```; This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:; ```; JUPYTER_ALLOW_INSECURE_WRITES=true; ```; at the price of seeing this message:; ```; WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'.; ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:; ```; 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed); 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 1568 - roottest-python-JupyROOT-tpython_notebook (Failed); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242#issuecomment-2292474568:65,ERROR,ERROR,65,https://root.cern,https://github.com/root-project/root/issues/16242#issuecomment-2292474568,1,['ERROR'],['ERROR']
Availability,The larger discussion about whether `ROOT.std.any` should be available by default is probably better suited for upstream cppyy (https://github.com/wlav/cppyy).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11647#issuecomment-1297291759:61,avail,available,61,https://root.cern,https://github.com/root-project/root/issues/11647#issuecomment-1297291759,1,['avail'],['available']
Availability,The last commit raises the following error(GCC)/warning(clang): . > error: attributes are not allowed on a function-definition. >warning: GCC does not allow 'deprecated' attribute in this position on a function definition. For this I've been looking at how was it done in the past( e.g. commit https://github.com/root-project/root/commit/f04ea5b91ed7ecab9a9a2acbf5fd207f96972756). . Am I missing something? What is the correct placement of the macro? @Axel-Naumann,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/781#issuecomment-316369254:37,error,error,37,https://root.cern,https://github.com/root-project/root/pull/781#issuecomment-316369254,2,['error'],['error']
Availability,The last failure may be related to the LLVM 16 upgrade (maybe),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13900#issuecomment-1867017695:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/13900#issuecomment-1867017695,1,['failure'],['failure']
Availability,The last push was only tested on mac11 and mac12; mac1015 seems completely broken with 300+ test failures...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11424#issuecomment-1274154636:97,failure,failures,97,https://root.cern,https://github.com/root-project/root/pull/11424#issuecomment-1274154636,1,['failure'],['failures']
Availability,"The last remaining Jenkins failures are not from this PR, so ready for review @lmoneta @guitargeek @hageboeck",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8694#issuecomment-884108582:27,failure,failures,27,https://root.cern,https://github.com/root-project/root/pull/8694#issuecomment-884108582,1,['failure'],['failures']
Availability,"The last test failures are different to the ones this PR wanted to solve. They are related to not finding ipython, similar to what was observed in the 32 bit machine:. `sh: ipython3: command not found`. So it has nothing to do with the changes of this PR. I am therefore merging to fix the first issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5478#issuecomment-620720704:14,failure,failures,14,https://root.cern,https://github.com/root-project/root/pull/5478#issuecomment-620720704,1,['failure'],['failures']
Availability,"The last three commits are for Cling's CUDA support. It still doesn't fully work on my machine, but the errors are the same as `master` with LLVM 9 (complains about not finding symbols from `libcudart.so` even though that has been loaded; could be related to the CUDA version?) *without* assertions that I see tripping on `master`. Do we know which setup used to work for these tests? Maybe I'll have to install older versions of CUDA...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1092999970:104,error,errors,104,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1092999970,1,['error'],['errors']
Availability,"The latest commit reintroduces the `Option_t*` parameter in `TChain::SetEntryList` and adds another possible value for it `""sync""`. With this new option, we can support the usecase described in this PR while still relying on the preexisting default behaviour. The option assumes that there is a 1:1 mapping between the trees in the chain and the sub lists in the entry list. This assumption is verified in two ways:; 1. The number of sub lists is equal to the number of trees in the chain. If not, the following error is thrown; ```; terminate called after throwing an instance of 'std::runtime_error'; what(): In 'TChain::SetEntryList': the number of sub entry lists in the input TEntryList (1) is not equal to the number of files in the chain (2); Aborted (core dumped); ```; 2. That each sub list corresponds to the correct treename, filename at the same index in the chain. If not, the following error is thrown:; ```; terminate called after throwing an instance of 'std::runtime_error'; what(): In 'TChain::SetEntryList': the sub entry list at index 1 doesn't correspond to treename 'entries' and filename 'file_20entries_1.root': it has treename 'entries' and filename 'file_20entries_2.root'; Aborted (core dumped); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8660#issuecomment-879923488:512,error,error,512,https://root.cern,https://github.com/root-project/root/pull/8660#issuecomment-879923488,2,['error'],['error']
Availability,The left over failures are unrelated/pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5038#issuecomment-589285884:14,failure,failures,14,https://root.cern,https://github.com/root-project/root/pull/5038#issuecomment-589285884,1,['failure'],['failures']
Availability,The linked PR fixes the problem with `compiledata.sh` mentioned above. The next thing that fails is at build time:. ```; [ 0%] Generating include/module.modulemap; /usr/bin/cmake -E copy /home/blue/ROOT/root\ sources/build/unix/module.modulemap /home/blue/ROOT/root\ sources/cmake-build-foo/include/module.modulemap; cat /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap.extra >> /home/blue/ROOT/root\\ sources/cmake-build-foo/include/module.modulemap; cat: sources/cmake-build-foo/include/module.modulemap.extra: No such file or directory; cat: sources/cmake-build-foo/include/module.modulemap: No such file or directory; make[2]: *** [CMakeFiles/copymodulemap.dir/build.make:75: include/module.modulemap] Error 1; make[2]: *** Deleting file 'include/module.modulemap'; make[2]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'; make[1]: *** [CMakeFiles/Makefile2:7772: CMakeFiles/copymodulemap.dir/all] Error 2; make[1]: Leaving directory '/home/blue/ROOT/root sources/cmake-build-foo'; make: *** [Makefile:156: all] Error 2; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7311#issuecomment-1070979646:729,Error,Error,729,https://root.cern,https://github.com/root-project/root/issues/7311#issuecomment-1070979646,3,['Error'],['Error']
Availability,The logs are reporting:. > fatal error: vdt/vdtMath.h: No such file or directory. That doesn't sound like this PR...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1946#issuecomment-385921030:33,error,error,33,https://root.cern,https://github.com/root-project/root/pull/1946#issuecomment-385921030,1,['error'],['error']
Availability,The long line produces a syntax error. The `</text>` was truncated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14590#issuecomment-1928901732:32,error,error,32,https://root.cern,https://github.com/root-project/root/pull/14590#issuecomment-1928901732,1,['error'],['error']
Availability,"The long tests requested by @lmoneta finished now. There are indeed some test failures on `ROOT-debian10-i386/default` that seem related to this PR, which I will investigate",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11435#issuecomment-1259344577:78,failure,failures,78,https://root.cern,https://github.com/root-project/root/pull/11435#issuecomment-1259344577,1,['failure'],['failures']
Availability,"The mac failure seems infrastructure related:; ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5756#issuecomment-637158026:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/5756#issuecomment-637158026,1,['failure'],['failure']
Availability,The mac failure were due to out-of-disk-space issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12264#issuecomment-1487038195:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/12264#issuecomment-1487038195,1,['failure'],['failure']
Availability,"The mac1014 error on macphsft17 is due the difference of opinion between XCode 11, MacOS 10.14 and CMake on which version and what part of python to use ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4603#issuecomment-548464807:12,error,error,12,https://root.cern,https://github.com/root-project/root/pull/4603#issuecomment-548464807,1,['error'],['error']
Availability,The mac11 failures are likely spurious. The machine is unstable; I'm doing hardware debugging...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7586#issuecomment-801929212:10,failure,failures,10,https://root.cern,https://github.com/root-project/root/pull/7586#issuecomment-801929212,1,['failure'],['failures']
Availability,"The mac11.0/cxx17 error is unrelated:; ```; + ""SystemError: initialization of libcppyy3_8 did not return an extension module\n""; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6952#issuecomment-746398818:18,error,error,18,https://root.cern,https://github.com/root-project/root/pull/6952#issuecomment-746398818,1,['error'],['error']
Availability,"The mac11.0/cxx17 failure is unrelated: `""SystemError: initialization of libcppyy3_8 did not return an extension module\n""`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6559#issuecomment-749179953:18,failure,failure,18,https://root.cern,https://github.com/root-project/root/pull/6559#issuecomment-749179953,1,['failure'],['failure']
Availability,The mac11/cxx17 failures are pre-existing (issues with template instantiations in cling),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9581#issuecomment-1016604187:16,failure,failures,16,https://root.cern,https://github.com/root-project/root/pull/9581#issuecomment-1016604187,1,['failure'],['failures']
Availability,"The macos failure are unrelated and 'seem' to be due to an environment setup problem.; The error is not finding the davix library:; ```; +Error in <TInterpreter::TCling::AutoLoad>: failure loading library libRDAVIX.so for TDavixFile; +cling::DynamicLibraryManager::loadLibrary(): dlopen(/Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/lib/libRDAVIX.so, 9): Library not loaded: libdavix.0.dylib; + Referenced from: /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/lib/libRDAVIX.so; + Reason: image not found; ```; and loading on the machine running 'setup.sh' and thisroot.sh lead to inconsistent results; ```; cd /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/roottest/root/io/webfile; root.exe -b -l -q runCloseTWebFile.C; Processing runCloseTWebFile.C...; ```; succeeds whereas the jenkins builds failed this test.; Loading the library explicit also works:; ```; macitois19:build sftnight$ root.exe -b -l ; gSroot [0] gSystem->Load(""libRDAVIX.so""); (int) 0; ```; but running rootls fails; ```; macitois19:build sftnight$ /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/bin/rootls -1 http://root.cern.ch/files/pippa.root; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/lib/libRDAVIX.so, 9): Library not loaded: libdavix.0.dylib; Referenced from: /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/lib/libRDAVIX.so; Reason: image not found; Error in <TInterpreter::TCling::AutoLoad>: failure loading library libRDAVIX.so for TDavixFile; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/lib/libRDAVIX.so, 9): Library not loaded: libdavix.0.dylib; Referenced from: /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/lib/libRDAVIX.so; Reason: image not found; WARNING: File http://root.cern.ch/files/pippa.root does not exist; ````",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1517#issuecomment-358462709:10,failure,failure,10,https://root.cern,https://github.com/root-project/root/pull/1517#issuecomment-358462709,6,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"The macos failure is an infrasture issue:; ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7794#issuecomment-814363593:10,failure,failure,10,https://root.cern,https://github.com/root-project/root/pull/7794#issuecomment-814363593,1,['failure'],['failure']
Availability,"The macos failure is infrastructure related (git area needs cleanup, an incomplete apply has left traces).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6519#issuecomment-704565558:10,failure,failure,10,https://root.cern,https://github.com/root-project/root/pull/6519#issuecomment-704565558,1,['failure'],['failure']
Availability,The macos failure is unrelated (complains about an on-going git rebase).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6668#issuecomment-714750071:10,failure,failure,10,https://root.cern,https://github.com/root-project/root/pull/6668#issuecomment-714750071,1,['failure'],['failure']
Availability,The macos failures are unrelated:; ```; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/root-pullrequests-build/build/lib/MathCore.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'MathMore' in '/build/jenkins/workspace/root-pullrequests-build/build/lib/MathMore.pcm'; Module ; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6251#issuecomment-680943135:10,failure,failures,10,https://root.cern,https://github.com/root-project/root/pull/6251#issuecomment-680943135,2,"['error', 'failure']","['error', 'failures']"
Availability,"The macos1014 failure is due to CMake not finding NumPy and Development for Python3, to be solved by installing them in the node.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5764#issuecomment-638014286:14,failure,failure,14,https://root.cern,https://github.com/root-project/root/pull/5764#issuecomment-638014286,1,['failure'],['failure']
Availability,"The main motivation concerning speedup is that currently, the documentation takes between 5 and 7 hours to build, which makes it hard to debug and improve. The 'slow part' happens in 'filter.cxx' (which does some parsing that slows down doxygen), as well as when the tutorials are run. That being said, I did not benchmark if pre-compiling makes things considerably faster, so maybe this PR is not worth it, I agree...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10195#issuecomment-1075133935:232,down,down,232,https://root.cern,https://github.com/root-project/root/pull/10195#issuecomment-1075133935,1,['down'],['down']
Availability,The modules related failure is not caused by this pr.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4360#issuecomment-529219111:20,failure,failure,20,https://root.cern,https://github.com/root-project/root/pull/4360#issuecomment-529219111,1,['failure'],['failure']
Availability,The multicore test failure is unrelated (and fixed by https://github.com/root-project/roottest/pull/535),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5780#issuecomment-638990942:19,failure,failure,19,https://root.cern,https://github.com/root-project/root/pull/5780#issuecomment-638990942,1,['failure'],['failure']
Availability,The new CI failures is expected and solved by the yet to be review https://github.com/root-project/root/pull/14052,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14268#issuecomment-1894433859:11,failure,failures,11,https://root.cern,https://github.com/root-project/root/pull/14268#issuecomment-1894433859,1,['failure'],['failures']
Availability,The new CI is able to trigger this kind of error in distrdf tests; ```; Error in <TROOT::WriteTObject>: The current directory (PyROOT) is not associated with a file. The object (x) has not been written.; ```. Which (hopefully) stems from the fact we open the file in the RDF constructor without a `TDirectory::TContext` to save the state of the previous directory. I'll update the code to use TContext. The real problem is that Jenkins is unable to trigger this error....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13090#issuecomment-1658478151:43,error,error,43,https://root.cern,https://github.com/root-project/root/pull/13090#issuecomment-1658478151,3,"['Error', 'error']","['Error', 'error']"
Availability,The numerous failures are fixed by this PR https://github.com/root-project/root/pull/13696,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13700#issuecomment-1729505757:13,failure,failures,13,https://root.cern,https://github.com/root-project/root/pull/13700#issuecomment-1729505757,1,['failure'],['failures']
Availability,The one failure is unrelated (externals not downloading).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11908#issuecomment-1398356597:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/11908#issuecomment-1398356597,2,"['down', 'failure']","['downloading', 'failure']"
Availability,The one failure is unrelated (seems to be a problem with dependency in roottest's cmake.),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1534#issuecomment-466483143:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/1534#issuecomment-466483143,1,['failure'],['failure']
Availability,"The one failure on Fedora 39 is unrelated:; ```; Failed; test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT ... ERROR. ======================================================================; ERROR: test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 120, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libb2; - libgomp; If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------; Ran 1 test in 1.405s. FAILED (errors=1); CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14098#issuecomment-1836056879:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/14098#issuecomment-1836056879,6,"['ERROR', 'Error', 'error', 'failure']","['ERROR', 'Error', 'error', 'errors', 'failure']"
Availability,The one test failure is due to removal of the TString to std::string_view conversion. A small patch to roottest is ready to go.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1155#issuecomment-334969829:13,failure,failure,13,https://root.cern,https://github.com/root-project/root/pull/1155#issuecomment-334969829,1,['failure'],['failure']
Availability,"The only error caused by latest TObject changes, already fixed by Philippe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7346#issuecomment-791284263:9,error,error,9,https://root.cern,https://github.com/root-project/root/pull/7346#issuecomment-791284263,1,['error'],['error']
Availability,"The only failure is due to TMVA, merging this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15385#issuecomment-2085195395:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/15385#issuecomment-2085195395,1,['failure'],['failure']
Availability,"The only failure is due to missing Windows nodes. It is unclear why the Jenkins CI build is stuck in the ""Pending - Building"" phase. See https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/8935/console for the actual results.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2911#issuecomment-485504073:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/2911#issuecomment-485504073,1,['failure'],['failure']
Availability,The only failure is fedora28/native which is due to the 'shared_ptr' incompatibility crash: https://sft.its.cern.ch/jira/browse/ROOT-9704 .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2731#issuecomment-426438908:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/2731#issuecomment-426438908,1,['failure'],['failure']
Availability,The only failure is infrastructure related (github timeout). Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2281#issuecomment-402768878:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/2281#issuecomment-402768878,1,['failure'],['failure']
Availability,The only failure is the missing Windows nodes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1993#issuecomment-485444398:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/1993#issuecomment-485444398,2,['failure'],['failure']
Availability,"The only test failure happens for very obscure reasons only when LLVM is built in release mode. We use the linkage cache which is for some reason computed as internal. We can fix the problem by removing the `using` clause. ```cpp; #include ""ROOT/TDataFrame.hxx"" ; using namespace ROOT::Experimental; // The using clause causes the misbehavior. void test_readTotemNtuple() {; TDataFrame d(0);; auto validate_x = [](){ };; d.Foreach(validate_x);; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1547#issuecomment-376315166:14,failure,failure,14,https://root.cern,https://github.com/root-project/root/pull/1547#issuecomment-376315166,1,['failure'],['failure']
Availability,"The original idea was a one-time check to see if we could successfully create a small `io_uring` instance (checking for errors like `ENOSYS`). Even then, the implementation was not ideal because it only tried to construct a `RIoUring` with queue depth 1, while the default constructor uses a much larger depth of 1024, so systems with low memlock limits will run right into this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7942#issuecomment-823492207:120,error,errors,120,https://root.cern,https://github.com/root-project/root/pull/7942#issuecomment-823492207,1,['error'],['errors']
Availability,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6520#issuecomment-701717286:654,down,down,654,https://root.cern,https://github.com/root-project/root/issues/6520#issuecomment-701717286,1,['down'],['down']
Availability,The osx failure is because the bot could not upload the successful build & test to cdash.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5613#issuecomment-631270380:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/5613#issuecomment-631270380,1,['failure'],['failure']
Availability,The other PRs' failures of `unloadCMS` are due to the `assert` fixed by this PR; the failures of this PR in `unloadCMS` are new. I heard rumors that making MLP an option (that was made an option and which wasn't enabled in the Jenkins builds) migt have triggered this. That indeed hints at an independent issue. - See https://github.com/root-project/root/pull/3918 for the fix; - MLP is now re-enabled in Jenkins.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3896#issuecomment-499486279:15,failure,failures,15,https://root.cern,https://github.com/root-project/root/pull/3896#issuecomment-499486279,2,['failure'],['failures']
Availability,"The other RMergeableValue types return a `T&` from the `GetValue` method, so I don't see an immediate parallel with this method that returns a `const vector<unique_ptr<RMergeableValue<T>>&`. So I'm probably missing something (again) but possible solutions might be to have a `RMergeableVariations<T>::GetValue(const std::string &variation) -> T&`, which is the generalization of `RMergeableValue<T>::GetValue` that I would expect, or for `RMergeableVariations<T>` to have its own typed data member `fValues` and do the downcast once in the converting constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9942#issuecomment-1061954514:519,down,downcast,519,https://root.cern,https://github.com/root-project/root/pull/9942#issuecomment-1061954514,1,['down'],['downcast']
Availability,"The output using [this build script](https://github.com/peter-jansson/appnuc/blob/eeb736f4137591f86a2070231f3fb1e8b3d7c8a9/scripts/install-root.sh) is available [here](https://github.com/peter-jansson/appnuc/runs/5468207882?check_suite_focus=true). The log indicated more error log information in a XROOTD build log file, which is copy/pasted below. It is indeed v5.4.1 but some other error compared to before in this issue thread. Perhaps the pthread libraries shipped with Alpine Linux is missing `pthread_rwlockattr_setkind_np` et.c.?. ```; [I] No git repository info found. Trying to interpret VERSION_INFO; [I] Using the user supplied version: v5.4.1; [I] src/XrdVersion.hh successfully generated; In file included from /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/XrdSys/XrdSysE2T.cc:35:; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh: In constructor 'XrdSysRWLock::XrdSys; RWLock(XrdSysRWLock::PrefType)':; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh:357:30: error: 'PTHREAD_RWLOCK_PREFER; _WRITER_NONRECURSIVE_NP' was not declared in this scope; 357 | PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP);; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh:356:22: error: 'pthread_rwlockattr_se; tkind_np' was not declared in this scope; did you mean 'pthread_rwlockattr_setpshared'?; 356 | pthread_rwlockattr_setkind_np(&attr,; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~; | pthread_rwlockattr_setpshared; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh: In member function 'void XrdSysRWLoc; k::ReInitialize(XrdSysRWLock::PrefType)':; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh:373:22: error: 'PTHREAD_RWLOCK_PREFER; _WRITER_NONRECURSIVE_NP' was not declared in this scope; 373 | PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP);; | ^~~~~~~~~~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9173#issuecomment-1062037565:151,avail,available,151,https://root.cern,https://github.com/root-project/root/issues/9173#issuecomment-1062037565,3,"['avail', 'error']","['available', 'error']"
Availability,"The patch is in fact working quite well and one of our users just found a case where it is needed because our original solution was too coarse. We covered it on our side (cf pinged PR on FairRoot) as our adoption of new ROOT releases is typically quite slow, but I think it would indeed be a nice feature to have it done automatically on refresh (as far as I could test it will not hurt even if for some transition period in the future we have it executed once both in ROOT and FairRoot)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12242#issuecomment-1499201970:174,ping,pinged,174,https://root.cern,https://github.com/root-project/root/issues/12242#issuecomment-1499201970,1,['ping'],['pinged']
Availability,The patch is semantically wrong (the new code should have been after the `TFile::Close` but I also can see why it would lead to the error ... and I can not reproduce it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13793#issuecomment-1771755592:132,error,error,132,https://root.cern,https://github.com/root-project/root/pull/13793#issuecomment-1771755592,1,['error'],['error']
Availability,"The patch now works in the default case (no libcmaes). ; I have tested as suggested to do ; cmake ../ -Dall=on -Dtesting=on -Dlibcmaes=on. It downloaded the eigen and libcaems, but apparently libcaems is not built locally. Even the include files are not copied. The error I get is . [ 41%] Generating G__cmaes.cxx, ../../lib/libcmaes_rdict.pcm, ../../lib/libcmaes.rootmap; In file included from input_line_12:12:; /home/moneta/master-build/include/CMAESMinimizer.h:33:10: fatal error: 'cmaes.h' file not found; #include ""cmaes.h""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/40#issuecomment-64232569:142,down,downloaded,142,https://root.cern,https://github.com/root-project/root/pull/40#issuecomment-64232569,3,"['down', 'error']","['downloaded', 'error']"
Availability,"The platform is Linux (Debian 9).; The full compilation errors for `RDFInterfaceUtils.cxx` is:; ```; root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx: In lambda function:; root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous; return std::string(std::move(ss));; ^; In file included from GCC-8.2.0-linux64/include/c++/8.2.0/string:52,; from root-6.24.00/core/meta/inc/TSchemaHelper.h:17,; from root-6.24.00/core/meta/inc/TGenericClassInfo.h:21,; from root-6.24.00/core/base/inc/Rtypes.h:191,; from root-6.24.00/tree/dataframe/inc/ROOT/RDF/RColumnReaderBase.hxx:14,; from root-6.24.00/tree/dataframe/inc/ROOT/RDF/ColumnReaderUtils.hxx:14,; from root-6.24.00/tree/dataframe/inc/ROOT/RDF/RAction.hxx:14,; from root-6.24.00/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:14,; from root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx:11:; GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3562:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’; basic_string(basic_string&& __str); ^~~~~~~~~~~~; GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3545:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’; basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());; ^~~~~~~~~~~~; GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3498:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’; basic_string(const basic_string& __str);; ^~~~~~~~~~~~; root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx: In function ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8477#issuecomment-864130448:56,error,errors,56,https://root.cern,https://github.com/root-project/root/pull/8477#issuecomment-864130448,2,['error'],"['error', 'errors']"
Availability,The preprocessor macro `__cpp_lib_not_fn` should be available from `<functional>` if `std::not_fn` is available. I'd appreciate a PR for this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3096#issuecomment-446889677:52,avail,available,52,https://root.cern,https://github.com/root-project/root/pull/3096#issuecomment-446889677,2,['avail'],['available']
Availability,The previous errors with the VM was due to incorrect setup of the Debian distro (dependency resolution failure related to a messed-up `source.list`). `Thank you for your patience!. All the tests passed after running `./stressGraphics`; ```; Create ./cernstaff.root; (TFile *) nullptr; **********************************************************************; * Starting Graphics - S T R E S S suite *; **********************************************************************; * Starting Basic Graphics - S T R E S S *; **********************************************************************; Test 1: TLine..................................................... OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 2: TMarker................................................... OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 3: TPolyLine................................................. OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 4: Fill patterns............................................. OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9518#issuecomment-1128447944:13,error,errors,13,https://root.cern,https://github.com/root-project/root/pull/9518#issuecomment-1128447944,2,"['error', 'failure']","['errors', 'failure']"
Availability,"The problem here is that the lambda you are passing to the constructor of `TF1` is a temporary that is (can be) garbage collected right after the constructor call of `TF1` returns. That's what the `callable was deleted` error is saying. If you define the lambda beforehand and bind it to a variable so that it's still alive when you draw, you can solve that problem (notice also that the lambda needs to accept two parameters instead of one):; ```python; from ROOT import TF1; l = lambda x, p: x[0]; f = TF1('f', l, 0, 1); f.Draw(); ```. The fact that it was working with other versions of Python was by pure chance (the object was still not deleted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9465#issuecomment-998030606:220,error,error,220,https://root.cern,https://github.com/root-project/root/issues/9465#issuecomment-998030606,2,"['alive', 'error']","['alive', 'error']"
Availability,The problem is I don't know what `DO_WHATEVER_NLOHMANM_3.11.0_NEEDS` could be; we cannot forward declare and we cannot include `json_fwd.hpp` nor the full `json.hpp`. The last PR just errors in this case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130#issuecomment-1220358720:184,error,errors,184,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1220358720,1,['error'],['errors']
Availability,"The problem is that RDF tries to open the file to check that it's valid. The logic for the file opening is at https://github.com/root-project/root/blob/962009b8c2057199c2229c3ef9938ac4d315d10a/tree/dataframe/src/RLoopManager.cxx#L1133 . In particular, because of the presence of the `?` token, the string is parsed as a glob. Now in many cases that would be harmless albeit a tiny overhead (it would just return the same file name to open), but in this particular case it triggers a faulty behaviour. The glob parsing attempts at traversing the remote xrootd directory (see [here](https://github.com/root-project/root/blob/962009b8c2057199c2229c3ef9938ac4d315d10a/tree/tree/src/InternalTreeUtils.cxx#L471)), but since the permission is just for the single file with the token and not for the entire directory, it leads to the `user access restricted` error you post above. Now, I believe the most sane course of action would be to refine the logic that checks whether the input file name is a glob. I could simply add a check for the `xrd.wantprot` token, but probably we want to have a more authoritative list of all the tokens that should make the file name not be parsed as a glob. This probably includes not only xrootd tokens but also anything https-related. Or we could adopt a different strategy for glob detection altogether. Thoughts @dpiparo @pcanal ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16475#issuecomment-2365248206:483,fault,faulty,483,https://root.cern,https://github.com/root-project/root/issues/16475#issuecomment-2365248206,2,"['error', 'fault']","['error', 'faulty']"
Availability,"The problem is that one of the histogram is having all bin errors equal to zero. Is this intentional ? ; If not please add the correct errors and the test will work correctly. ; In that case the toy option (`X`) does not work and it returns a zero probability. An error should be probably produced, but this could be probably supported. I can provide a fix for this. ; Thank you for the report",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13697#issuecomment-1750792805:59,error,errors,59,https://root.cern,https://github.com/root-project/root/issues/13697#issuecomment-1750792805,3,['error'],"['error', 'errors']"
Availability,"The problem was not even AutoParsing, it was that we're failing to unload any function.; For example, this fails:; ```; root [0] struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };; root [1] .L lib/libEdm.so; root [2] .L lib/libStrip.so; root [3] Marker m1;; root [4] Marker m2;; root [5] Marker(); (Marker) @0x559ab2f03100; root [6] .undo 3; root [7] SiStripCluster *s; ; root [8] SiStripCluster obj; ; SiStripCluster; ROOT_prompt_8:1:16: error: variable has incomplete type 'SiStripCluster'; SiStripCluster obj;; ^; libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'; class __attribute__((annotate(R""ATTRDUMP(splitLevel@@@0)ATTRDUMP""))) __attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;; ```. Some evil side effect is happening when a function is called..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2852#issuecomment-435986645:447,error,error,447,https://root.cern,https://github.com/root-project/root/pull/2852#issuecomment-435986645,1,['error'],['error']
Availability,"The problem was that CID 68746 was seen by Coverity only in the past (and when asked, Coverity will show the code where it saw it). Coverity correctly reports that this issue does *not* exist in the current ROOT sources. I sat down with John, we couldn't figure out how he ended up fixing a Coverity report that isn't current :-) So let's call it a one-off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/547#issuecomment-299140531:227,down,down,227,https://root.cern,https://github.com/root-project/root/pull/547#issuecomment-299140531,1,['down'],['down']
Availability,The prune-container step would have to run `n_runners` times in a matrix to be helpful and it also pollutes the PR job overview. Additionally it shouldn't be the job of the workflow definition to do node maintenance. Decided to move this functionality in the puppet files instead.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12309#issuecomment-1429827363:204,mainten,maintenance,204,https://root.cern,https://github.com/root-project/root/pull/12309#issuecomment-1429827363,1,['mainten'],['maintenance']
Availability,"The python failure are due xrootd authentication problem. The root-meta-tclass, root-io-buffer and root-io-transient test were not run due to a build system issue (probably due to a ROOT rebuild triggered by ctest because of the ar timestamp bug)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6062#issuecomment-672318996:11,failure,failure,11,https://root.cern,https://github.com/root-project/root/pull/6062#issuecomment-672318996,1,['failure'],['failure']
Availability,"The pythonizations suggested in this issue have been implemented, so it can be closed. For any further specific RooFit pythonization ideas, please open a new issue or a PR directly. The Pythonization of RooArgLists that I suggested before is not so useful after all, because now that RooArgLists can be replaced by Python lists to begin with it would be redundant to reimplement the list behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7217#issuecomment-1155603383:354,redundant,redundant,354,https://root.cern,https://github.com/root-project/root/issues/7217#issuecomment-1155603383,1,['redundant'],['redundant']
Availability,"The remaining errors on mac1014/cxx17 :. https://github.com/root-project/root/pull/4766#issuecomment-573734088. are due to the the fact that some Python2.7 headers (e.g. https://github.com/python/cpython/blob/2.7/Include/unicodeobject.h#L534) still use the `register` keyword, which is not supported anymore in cxx17. Since Python2 is not maintained anymore, those headers will not be updated to support cxx17. Therefore, users of Python2.7 should either not compile with cxx17 or migrate to Python3.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4766#issuecomment-573750464:14,error,errors,14,https://root.cern,https://github.com/root-project/root/pull/4766#issuecomment-573750464,1,['error'],['errors']
Availability,The remaining failures should be gone when the docker image for the Linux platforms is updated tonight with the `onnx` Python package included:; https://github.com/root-project/root/pull/14685,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15288#issuecomment-2067716150:14,failure,failures,14,https://root.cern,https://github.com/root-project/root/pull/15288#issuecomment-2067716150,1,['failure'],['failures']
Availability,"The remaining test failures on MacOS are trickier than previous ones. I built with debug symbols on the CI nodes and I could get the following stack trace; ```; [/Users/sftnight/vpadulan/rootproject/rootinstall/batch-generator-debug/lib/libCling.so] TClingCallFunc::compile_wrapper(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool) /Users/sftnight/vpadulan/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:144; [/Users/sftnight/vpadulan/rootproject/rootinstall/batch-generator-debug/lib/libCling.so] TClingCallFunc::make_wrapper() /Users/sftnight/vpadulan/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1016; [/Users/sftnight/vpadulan/rootproject/rootinstall/batch-generator-debug/lib/libCling.so] TClingCallFunc::IFacePtr() /Users/sftnight/vpadulan/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1728; [/Users/sftnight/vpadulan/rootproject/rootinstall/batch-generator-debug/lib/libCling.so] TCling::CallFunc_IFacePtr(CallFunc_t*) const /Users/sftnight/vpadulan/rootproject/rootsrc/core/metacling/src/TCling.cxx:7886; [/Users/sftnight/vpadulan/rootproject/rootinstall/batch-generator-debug/lib/libcppyy_backend3_9.so] GetCallFunc(long) /Users/sftnight/vpadulan/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:734; ```. Which points to problems in `TClingCallFunc`. Now, most probably it is true that `compile_wrapper` needs a lock (as well as many other places in `TClingCallFunc`, but adding the lock did not fix the failure on the CI node unfortunately. One particularity in `TClingCallFunc` w.r.t. other files that were changed in this PR is that the locks that are currently already present use the macro `R__LOCKGUARD_CLING` instead of `R__LOCKGUARD`, so some different strategy might be needed here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13302#issuecomment-1656714911:19,failure,failures,19,https://root.cern,https://github.com/root-project/root/pull/13302#issuecomment-1656714911,2,['failure'],"['failure', 'failures']"
Availability,"The reproducer fails for me with a seg fault and the following valgrind report:; ```; ==2486== Invalid read of size 2; ==2486== at 0x48529E0: memmove (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so); ==2486== by 0x10DCD2: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak); ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak); ==2486== Address 0x22d38604 is 6,878,660 bytes inside a block of size 6,878,661 alloc'd; ==2486== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so); ==2486== by 0x4BB2526: TStorage::ReAllocChar(char*, unsigned long, unsigned long) (TStorage.cxx:283); ==2486== by 0x4B5B6C2: TBuffer::Expand(int, bool) (TBuffer.cxx:242); ==2486== by 0x55E1855: R__InitializeReadBasketBuffer(TBuffer*, int, TFile*) (TBasket.cxx:418); ==2486== by 0x55E21FF: TBasket::ReadBasketBuffers(long long, int, TFile*) (TBasket.cxx:585); ==2486== by 0x55F3590: TBranch::GetBasketImpl(int, TBuffer*) (TBranch.cxx:1266); ==2486== by 0x55F3D62: TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) (TBranch.cxx:1388); ==2486== by 0x55F45BE: TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) (TBranch.cxx:1550); ==2486== by 0x10E0A6: TBranch::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak); ==2486== by 0x10E13F: ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak) ; ==2486== by 0x10DC17: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak); ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak); ```. which may or may not be the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11853#issuecomment-1341827725:39,fault,fault,39,https://root.cern,https://github.com/root-project/root/issues/11853#issuecomment-1341827725,1,['fault'],['fault']
Availability,The required backports in LLVM are available here: https://github.com/hahnjo/root/tree/riscv-backports,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12351#issuecomment-1435933224:35,avail,available,35,https://root.cern,https://github.com/root-project/root/pull/12351#issuecomment-1435933224,1,['avail'],['available']
Availability,The roofit error on ROOT-ubuntu16/nortcxxmod are pre-existing (see https://github.com/root-project/root/pull/3760#issuecomment-858157849),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8379#issuecomment-858165761:11,error,error,11,https://root.cern,https://github.com/root-project/root/pull/8379#issuecomment-858165761,1,['error'],['error']
Availability,"The roostats error is once again llvm related, and not to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10811#issuecomment-1163521087:13,error,error,13,https://root.cern,https://github.com/root-project/root/pull/10811#issuecomment-1163521087,1,['error'],['error']
Availability,"The root cause of the dataframe test failures is probably the same as for https://github.com/root-project/root/issues/7366 . It is related to cling, @jalopezg-r00t was looking into it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-823924036:37,failure,failures,37,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-823924036,1,['failure'],['failures']
Availability,The same failure exists without this PR. Merging!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/644#issuecomment-308353383:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/644#issuecomment-308353383,1,['failure'],['failure']
Availability,"The same issue exists for the Double32_t data type.; ```cpp; #include <TFile.h>; #include <TTreeReader.h>. int main() {; {; TFile f(""d32.root"", ""recreate"");; TTree t(""t"", ""t"");; double x = 42.;; t.Branch(""x"", &x, ""x/d"");; t.Fill();; f.Write();; }. {; TFile f(""d32.root"");; TTreeReader r(""t"", &f);; TTreeReaderValue<Double32_t> rv(r, ""x"");; r.Next();; }; return 0;; }; ```. Error produced:; ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch x contains data of type Double32_t, which does not have a dictionary.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10645#issuecomment-1155350629:373,Error,Error,373,https://root.cern,https://github.com/root-project/root/issues/10645#issuecomment-1155350629,2,['Error'],['Error']
Availability,"The same symptom also appears if I try to make a field for a class with no default constructor:; ```python; import ROOT. ROOT.gInterpreter.Declare(""""""\; class NoDefaultCtor {; public:; NoDefaultCtor(int x) : data1_(x) {};. private:; int data1_;; };; """"""). model = ROOT.Experimental.RNTupleModel.Create(). try:; model.MakeField[""NoDefaultCtor""](""test""); except ValueError as ex:; print(ex). # fails; model.MakeField[""std::vector<float>""](""test2""); ```. There, I even get; ```; cling JIT session error: Failed to materialize symbols: { (main, { _ZSt7forwardIRPN4ROOT12Experimental6Detail10RFieldBaseEEOT_RNSt16remove_referenceIS6_E4typeE }) }; ```; which is very weird, why would we be making the symbol; ```; ROOT::Experimental::Detail::RFieldBase*& std::forward<ROOT::Experimental::Detail::RFieldBase*&>(std::remove_reference<ROOT::Experimental::Detail::RFieldBase*&>::type&); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13910#issuecomment-1772929625:494,error,error,494,https://root.cern,https://github.com/root-project/root/issues/13910#issuecomment-1772929625,1,['error'],['error']
Availability,"The second ""bigger"" problem are the `filemerger` tests on macOS AArch64 that compare the expected compressed file size of `hsimple.root`. These turn out to be caused by how LLVM 16 optimizes `pz = px*px + py*py;` in `hsimple.C`, resulting in slightly different floating point results and therefore different compression. I have no really good solution here other than updating the expected reference sizes / their tolerance. An alternative would be to check in a ""known"" `hsimple.root` and not generate it on the fly. What do you think @pcanal ?. edit: I found a better solution by disabling floating point contractions when producing `hsimple.root` for these tests, see https://github.com/root-project/roottest/pull/989.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13273#issuecomment-1649423962:414,toler,tolerance,414,https://root.cern,https://github.com/root-project/root/pull/13273#issuecomment-1649423962,1,['toler'],['tolerance']
Availability,"The second cases you report seem unrelated at a first look:; ```; In module 'Vc':; /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/Vc/1.4.2/x86_64-centos7-gcc11-opt/include/Vc/common/simdarray.h:501:18: error: 'Vc_1::SimdArray<type-parameter-0-0, N, type-parameter-0-2, N>::SimdArray<type-parameter-0-0, N, type-parameter-0-2, N>' from module 'Vc' is not present in definition of 'SimdArray<type-parameter-0-0, N, type-parameter-0-2, N>' in module 'Vc'; Vc_INTRINSIC SimdArray(private_init_t, VectorType &&x) : data(std::move(x)) {}; ^; ```. and. ```; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Tue/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/MathCore.pcm'; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1015627319:214,error,error,214,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1015627319,3,['error'],['error']
Availability,"The second kind of error (`no constructor available for 'TChain'`) happens when invoking the constructor of TChain from `__init__`, in particular an overload with default arguments. The issue is that a match does not happen with the `(const char *name, const char *title="""")` overload when just providing `name`. This needs to be fixed. @Allen319 , as a temporary workaround in case you need it, you can do `n = Ntuple(""DataTree"", """")` instead of `n = Ntuple(""DataTree"")` and that should prevent the constructor error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6467#issuecomment-704100330:19,error,error,19,https://root.cern,https://github.com/root-project/root/issues/6467#issuecomment-704100330,3,"['avail', 'error']","['available', 'error']"
Availability,The sole error report seems to be an infrastructure problem of sort. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/750#issuecomment-371999447:9,error,error,9,https://root.cern,https://github.com/root-project/root/pull/750#issuecomment-371999447,1,['error'],['error']
Availability,The solution which was identified at the last IO meeting was to skip all events which could not be read and prompt an error message w/o crashing. All this should be done at the TTreeReader level.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2583#issuecomment-425675655:118,error,error,118,https://root.cern,https://github.com/root-project/root/pull/2583#issuecomment-425675655,1,['error'],['error']
Availability,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:; ```; ctest -R gtest-tmva-pymva-TestRModelParserPyTorch; Test project /home/pcanal/root_working/build/quick-devel; Start 349: gtest-tmva-pymva-TestRModelParserPyTorch; 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec; ```; and if we immediately re-run we get:; ```; ctest -R gtest-tmva-pymva-TestRModelParserPyTorch; Test project /home/pcanal/root_working/build/quick-devel; Start 349: gtest-tmva-pymva-TestRModelParserPyTorch; 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec; ```; and the error is:; ```; [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16719#issuecomment-2427294206:869,error,error,869,https://root.cern,https://github.com/root-project/root/issues/16719#issuecomment-2427294206,1,['error'],['error']
Availability,"The test errors are due to a bug in my implementation, will fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5667#issuecomment-631991854:9,error,errors,9,https://root.cern,https://github.com/root-project/root/pull/5667#issuecomment-631991854,1,['error'],['errors']
Availability,The test failure are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8932#issuecomment-917159968:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/8932#issuecomment-917159968,1,['failure'],['failure']
Availability,The test failure can be ignored it is due to PR #4988.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4985#issuecomment-586208971:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/4985#issuecomment-586208971,1,['failure'],['failure']
Availability,The test failure gtest-tree-treeplayer-test-datasource-root is unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1271#issuecomment-341643407:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/1271#issuecomment-341643407,1,['failure'],['failure']
Availability,The test failure in [fit/combinedFit.py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/135926/testReport/projectroot/runtutorials/tutorial_fit_combinedFit_py/) is unrelated see https://github.com/root-project/root/pull/3760#issuecomment-1026103150.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9486#issuecomment-1026290791:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/9486#issuecomment-1026290791,1,['failure'],['failure']
Availability,The test failure is due to #4988 which was a hotfix for 09934e9d6a2a55248efca3ad9659e684850b2426,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4987#issuecomment-586209411:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/4987#issuecomment-586209411,1,['failure'],['failure']
Availability,"The test failure is real, the test reference needs updating too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12875#issuecomment-1563106183:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/12875#issuecomment-1563106183,1,['failure'],['failure']
Availability,The test failure is related to the std::string case. Is the desired behaviour here really to loop over characters? (and allow them to be implicitly converted to doubles when filling a TH1D for example),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7499#issuecomment-994577581:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/7499#issuecomment-994577581,1,['failure'],['failure']
Availability,"The test failure is resolved by avoiding the `oss.str()` check https://github.com/root-project/root/pull/7879#discussion_r653468750, we will apply the same changes here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7749#issuecomment-866125500:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/7749#issuecomment-866125500,1,['failure'],['failure']
Availability,The test failure is unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14356#issuecomment-1895629055:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/14356#issuecomment-1895629055,1,['failure'],['failure']
Availability,"The test failure is unrelated (and should be fixed by https://github.com/root-project/root/pull/8352), merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8349#issuecomment-855884266:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/8349#issuecomment-855884266,1,['failure'],['failure']
Availability,The test failure is unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/953#issuecomment-327518536:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/953#issuecomment-327518536,1,['failure'],['failure']
Availability,The test failure is unrelated. Merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7914#issuecomment-822476558:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/7914#issuecomment-822476558,1,['failure'],['failure']
Availability,The test failure is unrelated. Merging...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4414#issuecomment-534549047:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/4414#issuecomment-534549047,1,['failure'],['failure']
Availability,The test failure of centos7/gcc49 is because that platform is lacking a BLAS installation and cannot run DNN. Should I remove the DNN from the test?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1514#issuecomment-358025605:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/1514#issuecomment-358025605,1,['failure'],['failure']
Availability,"The test failure on Windows is real, @ikabadzhov can you please investigate with @bellenot 's help when you are back?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10607#issuecomment-1141231952:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/10607#issuecomment-1141231952,1,['failure'],['failure']
Availability,The test failure on fedora28/native are unrelated (likely race condition in cmake/ctest or lack of cleanup),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2691#issuecomment-424830883:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/2691#issuecomment-424830883,1,['failure'],['failure']
Availability,The test failure on mac13 is not due to the changes of this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16348#issuecomment-2324674072:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/16348#issuecomment-2324674072,1,['failure'],['failure']
Availability,"The test failure on macOS should be https://github.com/root-project/root/pull/9314, now backporting in https://github.com/root-project/root/pull/9408. Not sure about the failure on Ubuntu, but cannot be related to this PR since the changes only touch PPC, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9407#issuecomment-990824535:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/9407#issuecomment-990824535,2,['failure'],['failure']
Availability,"The test failure seems related to this PR, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1125#issuecomment-334084833:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/1125#issuecomment-334084833,1,['failure'],['failure']
Availability,The test failure seems unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3550#issuecomment-473619991:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/3550#issuecomment-473619991,1,['failure'],['failure']
Availability,"The test failure was related to this PR, the problem was with the `PUBLIC` keyword in combination with `INSTALL_INTERFACE`. I pushed an equivalent change that does not break the test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1466#issuecomment-368563308:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/1466#issuecomment-368563308,1,['failure'],['failure']
Availability,"The test failures are all due to "" Could not resolve host: github.com""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16624#issuecomment-2398117893:9,failure,failures,9,https://root.cern,https://github.com/root-project/root/pull/16624#issuecomment-2398117893,1,['failure'],['failures']
Availability,The test failures are due to infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6043#issuecomment-660543813:9,failure,failures,9,https://root.cern,https://github.com/root-project/root/pull/6043#issuecomment-660543813,1,['failure'],['failures']
Availability,The test failures are errors that were previously silent and are there at least since the switch to lexertk. Not sure what to do about them.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3407#issuecomment-462061881:9,failure,failures,9,https://root.cern,https://github.com/root-project/root/pull/3407#issuecomment-462061881,2,"['error', 'failure']","['errors', 'failures']"
Availability,"The test failures are just due to a reference that needs updating, will do asap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10653#issuecomment-1137776625:9,failure,failures,9,https://root.cern,https://github.com/root-project/root/pull/10653#issuecomment-1137776625,1,['failure'],['failures']
Availability,"The test failures are not related to this PR, they are present in the nightly builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4016#issuecomment-590248656:9,failure,failures,9,https://root.cern,https://github.com/root-project/root/pull/4016#issuecomment-590248656,1,['failure'],['failures']
Availability,"The test failures are related, I will look again at `ReadObjectAny` internals.; I think some of the failures are harmless (a new line added to the log, e.g. `roottest-root-io-emulated-make` ), but some are perhaps real errors because I didn't call `ReadObjectAny` with `0` as an argument e.g. `roottest-root-io-cpp11Containers-unorderedSet`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6016#issuecomment-656284583:9,failure,failures,9,https://root.cern,https://github.com/root-project/root/pull/6016#issuecomment-656284583,3,"['error', 'failure']","['errors', 'failures']"
Availability,"The test failures are unrelated (mac1015/cxx17 : python configuration problem. WIndows: test with known problem, this time ""maybe"" related to the message `Warning in <TClassTable::Add>: class ROOT::Detail::TTypedIter<class TEnumConstant> already in TClassTable`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6519#issuecomment-701711449:9,failure,failures,9,https://root.cern,https://github.com/root-project/root/pull/6519#issuecomment-701711449,1,['failure'],['failures']
Availability,"The test failures are unrelated, are we ready to merge this @couet or you need to make further changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3676#issuecomment-483624530:9,failure,failures,9,https://root.cern,https://github.com/root-project/root/pull/3676#issuecomment-483624530,1,['failure'],['failures']
Availability,The test failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2715#issuecomment-425667017:9,failure,failures,9,https://root.cern,https://github.com/root-project/root/pull/2715#issuecomment-425667017,1,['failure'],['failures']
Availability,The test failures are unrelated. This can be merged,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7139#issuecomment-780143074:9,failure,failures,9,https://root.cern,https://github.com/root-project/root/pull/7139#issuecomment-780143074,1,['failure'],['failures']
Availability,"The test failures look real, @ikabadzhov can you take a look at what's going on?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10040#issuecomment-1059007431:9,failure,failures,9,https://root.cern,https://github.com/root-project/root/pull/10040#issuecomment-1059007431,1,['failure'],['failures']
Availability,The test failures related to `Report` are because of the check [here](https://github.com/dpiparo/root/blob/a298979465295915a17b2ef1b7e82afa81d51660/tree/treeplayer/inc/ROOT/TDFInterface.hxx#L1403-L1404). It's not true anymore that if `!fValidColumns.empty()` then the node is the result of a `TLoopManager` + at least one `Define`. Now the condition is `fValidColumns.size() > 1`. I wonder whether we could do something better there.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1133#issuecomment-334287020:9,failure,failures,9,https://root.cern,https://github.com/root-project/root/pull/1133#issuecomment-334287020,1,['failure'],['failures']
Availability,"The test failures report the file created during the test does not exist, but this node ran the test fine https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/124359/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_enterrange/ . Probably using the same filename for multiple tests leads to a recreation/deletion of the file that is then not usable by the new test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8740#issuecomment-895859603:9,failure,failures,9,https://root.cern,https://github.com/root-project/root/pull/8740#issuecomment-895859603,1,['failure'],['failures']
Availability,"The test failures seems to come from a slightly difference in the Poisson implementation between TMath::Poisson(n,mu) and ROOT::Math::poisson_pdf(n,mu) for n = 0.; In teh first case it was computing 1./exp(mu) while in the second exp(-mu). For small mu (e.g. mu= 0.001) the results is different at one bit level. exp(-mu) is more correct and I think we should then update the tests reference files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5477#issuecomment-620689786:9,failure,failures,9,https://root.cern,https://github.com/root-project/root/pull/5477#issuecomment-620689786,1,['failure'],['failures']
Availability,The test failures seems unrelated (library compilation/loading failure),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8228#issuecomment-848055016:9,failure,failures,9,https://root.cern,https://github.com/root-project/root/pull/8228#issuecomment-848055016,2,['failure'],"['failure', 'failures']"
Availability,"The test output is; ```; cd /mnt/build/jenkins/workspace/root-pullrequests-build/build/roottest/root/aclic/misc; /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/jenkins/workspace/root-pullrequests-build/build/roottest/root/aclic/misc"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/jenkins/workspace/root-pullrequests-build/build/roottest/root/aclic/misc"")' -e 'gROOT->SetMacroPath(""/mnt/build/jenkins/workspace/root-pullrequests-build/roottest/root/aclic/misc"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/jenkins/workspace/root-pullrequests-build/build/roottest/root/aclic/misc"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/jenkins/workspace/root-pullrequests-build/build/externals//mnt/build/jenkins/workspace/root-pullrequests-build/install/include"")' -q -l -b /mnt/build/jenkins/workspace/root-pullrequests-build/roottest/root/aclic/misc/runrelpath.C; -- BEGIN TEST OUTPUT --. Processing /mnt/build/jenkins/workspace/root-pullrequests-build/roottest/root/aclic/misc/runrelpath.C...; In file included from <<< cling interactive line includer >>>:1:; /mnt/build/jenkins/workspace/root-pullrequests-build/roottest/root/aclic/misc/script.C:4:10: fatal error: 'nested_dir1.h' file not found; #include ""nested_dir1.h""; ^~~~~~~~~~~~~~~; ```. Just cd-ing there, starting ROOT and running the script might reproduce it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1466#issuecomment-352393921:1740,error,error,1740,https://root.cern,https://github.com/root-project/root/pull/1466#issuecomment-352393921,1,['error'],['error']
Availability,The test succeeds with master (https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/29326/console) and thus the failure is directly connected (however odd it looks).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14268#issuecomment-1863415572:134,failure,failure,134,https://root.cern,https://github.com/root-project/root/pull/14268#issuecomment-1863415572,1,['failure'],['failure']
Availability,The testForeignDraw failure seems to be more subtil. It 'only' fails on 2 platforms. Do we understand why?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2775#issuecomment-430160653:20,failure,failure,20,https://root.cern,https://github.com/root-project/root/pull/2775#issuecomment-430160653,1,['failure'],['failure']
Availability,The test_inference failures are fixed by PR 40 in roottest (https://github.com/root-project/roottest/pull/40),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/565#issuecomment-300618108:19,failure,failures,19,https://root.cern,https://github.com/root-project/root/pull/565#issuecomment-300618108,1,['failure'],['failures']
Availability,The tests failed on fedora38 are unrelated:; ```console; The following tests FAILED:; 	106 - gtest-core-metacling-test-TClingLoadUnloadFile (Failed); 	116 - test-webgui-ping (Failed); 	1095 - tutorial-rcanvas-rline.cxx (Failed); 	1187 - tutorial-rcanvas-df104-py (Failed); 	1188 - tutorial-rcanvas-df105-py (Failed); 	1577 - roottest-python-regression-regression (Failed); ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13371#issuecomment-1662021455:169,ping,ping,169,https://root.cern,https://github.com/root-project/root/pull/13371#issuecomment-1662021455,1,['ping'],['ping']
Availability,"The tests that are added in this PR work with Cl, but there are still failures because of this:; * https://github.com/vgvassilev/clad/issues/890. It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15491#issuecomment-2107150086:70,failure,failures,70,https://root.cern,https://github.com/root-project/root/pull/15491#issuecomment-2107150086,1,['failure'],['failures']
Availability,The transient Windows error is a known race condition in the roottest build system.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11261#issuecomment-1232028318:22,error,error,22,https://root.cern,https://github.com/root-project/root/pull/11261#issuecomment-1232028318,1,['error'],['error']
Availability,"The travis-ci fails on the piece of code which was not affected by my patch, apparently the RootClingMain has a general potential problem of dereferencing of a nullptr:; ````; +RESULT_OUTPUT='/home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:4892:7: error: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. modGen.WriteRegistrationSource(*dictStream, fwdDeclnArgsToKeepString, headersClassesMapString, fwdDeclsString,. ^; ````",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5296#issuecomment-609401998:273,error,error,273,https://root.cern,https://github.com/root-project/root/pull/5296#issuecomment-609401998,2,['error'],"['error', 'errors']"
Availability,The tutorial on manual data conversion from TTree to RNTuple has been removed now that the importer is available. The importer comes with its own tutorial (`ntpl008_import`). The importer handles VLA correctly. Closing this. Please feel free to reopen if necessary.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13996#issuecomment-2381901509:103,avail,available,103,https://root.cern,https://github.com/root-project/root/issues/13996#issuecomment-2381901509,1,['avail'],['available']
Availability,"The tutorial will trigger errors with python 3.8, tracked by [ROOT-10629](https://sft.its.cern.ch/jira/browse/ROOT-10629).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5175#issuecomment-601745334:26,error,errors,26,https://root.cern,https://github.com/root-project/root/pull/5175#issuecomment-601745334,1,['error'],['errors']
Availability,"The two JupyROOT test failures are not caused by this PR, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5570#issuecomment-625684626:22,failure,failures,22,https://root.cern,https://github.com/root-project/root/pull/5570#issuecomment-625684626,1,['failure'],['failures']
Availability,The two build failures were unrelated to the work discussed here. Let's wait for tomorrow to check the nightlies.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4640#issuecomment-572169702:14,failure,failures,14,https://root.cern,https://github.com/root-project/root/pull/4640#issuecomment-572169702,1,['failure'],['failures']
Availability,The underlying issue is when we include textually math.h and cmath from module. In such a scenario the #undef signbit in cmath wouldn't leak out from the module and wouldn't affect math.h causing the error. A solution would be introducing a modulemap for libc (where math.h) resides. The issue is solved in libstdc++ later that 6 by introducing math.h in libstdc++. We clarified what's wrong there and the fix in this PR would not solve the underlying issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/458#issuecomment-289214148:200,error,error,200,https://root.cern,https://github.com/root-project/root/pull/458#issuecomment-289214148,1,['error'],['error']
Availability,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:; 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197); 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image).; 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15212#issuecomment-2050606767:836,avail,available,836,https://root.cern,https://github.com/root-project/root/issues/15212#issuecomment-2050606767,1,['avail'],['available']
Availability,"The unused parameter warnings would be fixed with this PR: https://github.com/zeromq/libzmq/pull/4211. The dtor-name warnings are fixed in a later ZeroMQ version. I first want to include the RooFitZMQ and MultiProcess things before I start changing the ZeroMQ version, to avoid introducing potential errors already (didn't try it yet). If a newer version doesn't work, I will suppress the warnings for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-858556647:300,error,errors,300,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-858556647,1,['error'],['errors']
Availability,"The use case in question is like this:; For reasons of cross-validation, it has become a customary technique within ATLAS (and probably other collaborations as well) to construct a ""Hybrid Dataset"", that is equal to the real data in the control regions, but only contains asimov data in the signal region (""partically unblinded""). If you want to have both the Hybrid Dataset and the Dataset in the same workspace to reduce the bookkeeping and turnaround time of the unblinding procedure (first only look at hybrid data, and if the fit to hybrid data looks okay, also look at real data), the most convenient way to do this would be to include it from the get-go using this feature, rather than having to somehow construct or import it down the line when the workspace already exists, or to maintain two completely different workspaces that have the same model and only different datasets.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10538#issuecomment-1122140490:734,down,down,734,https://root.cern,https://github.com/root-project/root/issues/10538#issuecomment-1122140490,1,['down'],['down']
Availability,"The user could modify the content of the original TFile, which holds a portion of the data in the TTree, i.e. https://gist.github.com/vepadulano/ed0644351771d97ff2624f0ddf015b83. I get the output; ```; Fill: Switching to new file: tree_setmaxsize_seq_1.root; Fill: Switching to new file: tree_setmaxsize_seq_2.root; Entries in tree: Error in <TFile::ReadBuffer>: error reading all requested bytes from file tree_setmaxsize_seq_2.root, got 270 of 300; Error in <TFile::Init>: tree_setmaxsize_seq_2.root failed to read the file type data.; 15966; ```. Maybe it's just something that we leave to the thoughtful user to avoid?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6528#issuecomment-702258885:333,Error,Error,333,https://root.cern,https://github.com/root-project/root/pull/6528#issuecomment-702258885,3,"['Error', 'error']","['Error', 'error']"
Availability,"The warnings are still there:; ```txt; In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:19:; /home/rembserj/spaces/master/root/src/root/core/meta/inc/TProtoClass.h:50:10: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]; 50 | kIsPointer = BIT(2), // data member is a pointer; | ^; /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:78:4: note: previous declaration is here; 78 | kIsPointer = 0x00001000,; | ^; In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:; In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:; /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:77:7: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]; 77 | kIsCompiled = BIT(16),; | ^; /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDictionary.h:86:4: note: previous declaration is here; 86 | kIsCompiled = kIsCCompiled,; | ^; In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:; In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:; /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:59: error: declaration shadows a variable in the global namespace [-Werror,-Wshadow]; 91 | kBase = 0, kOffsetL = 20, kOffsetP = 40, kCounter = 6, kCharStar = 7,; | ^; /home/rembserj/spaces/master/root/src/root/core/meta/inc/TDataType.h:34:4: note: previous declaration is here; 34 | kCounter = 6, kCharStar = 7, kBits = 15 /* for compatibility with TStreamerInfo */,; | ^; In file included from /home/rembserj/spaces/master/root/src/root/io/rootpcm/src/rootclingIO.cxx:22:; In file included from /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:18:; /home/rembserj/spaces/master/root/src/root/core/meta/inc/TVirtualStreamerInfo.h:91:75: erro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15379#issuecomment-2083159907:218,error,error,218,https://root.cern,https://github.com/root-project/root/pull/15379#issuecomment-2083159907,2,['error'],['error']
Availability,The warnings on windows are because of the usual problem with jenkins picking up warnings from the GitHub PR description. The build failure on windows was introduced by https://github.com/root-project/root/pull/8416 I think,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8432#issuecomment-861570989:132,failure,failure,132,https://root.cern,https://github.com/root-project/root/pull/8432#issuecomment-861570989,1,['failure'],['failure']
Availability,"The way you wrote it will execute the ""else"" part of the test and the logic of the method is based on w and h taken from the Canvas ... so the ""else"" part might be a non sense as the canvas does not exist ... If the Canvas does not exits you should exit with some Error message I guess. I let you change the PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6459#issuecomment-698982326:264,Error,Error,264,https://root.cern,https://github.com/root-project/root/pull/6459#issuecomment-698982326,1,['Error'],['Error']
Availability,The win failure is due to infrastructure. The code change is ifdef-ed as non windows.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4215#issuecomment-521594030:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/4215#issuecomment-521594030,1,['failure'],['failure']
Availability,"The window error are about git gc's failing to run:; ```; 18:55:18 error: Unable to create 'C:/build/workspace/root-pullrequests-build_2/root/.git/logs/HEAD.lock': File exists.; 18:55:18 ; 18:55:18 Another git process seems to be running in this repository, e.g.; 18:55:18 an editor opened by 'git commit'. Please make sure all processes; 18:55:18 are terminated then try again. If it still fails, a git process; 18:55:18 may have crashed in this repository earlier:; 18:55:18 remove the file manually to continue.; ```; which seems to already have been forseen but the work-around was not extended enough?; ```; 18:54:57 -- Cleaning up possible lock files [rm -f .git/HEAD.lock] in C:/build/workspace/root-pullrequests-build_2/root; ```. Any way ... in the end the build actually suceeded:; ```; 20:45:01 ; 20:45:01 Processing hsimple.C...; 20:45:01 hsimple : Real Time = 0.30 seconds Cpu Time = 0.22 seconds; 20:45:01 (TFile *) 0xa21a568; 20:45:01 Building Custom Rule C:/build/workspace/root-pullrequests-build_2/root/CMakeLists.txt; 20:45:01 CMake does not need to re-run because C:/build/workspace/root-pullrequests-build_2/build/CMakeFiles/generate.stamp is up-to-date.; 20:45:02 Building Custom Rule C:/build/workspace/root-pullrequests-build_2/root/CMakeLists.txt; 20:45:02 CMake does not need to re-run because C:/build/workspace/root-pullrequests-build_2/build/CMakeFiles/generate.stamp is up-to-date.; 20:45:03 Command exited with the value: 0; 20:45:03 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount; 20:45:03 0 Compiler errors; 20:45:03 50 or more Compiler warnings; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4239#issuecomment-522708844:11,error,error,11,https://root.cern,https://github.com/root-project/root/pull/4239#issuecomment-522708844,3,['error'],"['error', 'errors']"
Availability,"The windows ""error"" is spurious, caused by the error log parser matching the commit log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-773865371:13,error,error,13,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-773865371,2,['error'],['error']
Availability,"The windows ""failure"" isn't a failure but had just a warning, which is the usual mis-parse of the commit log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11861#issuecomment-1396534330:13,failure,failure,13,https://root.cern,https://github.com/root-project/root/pull/11861#issuecomment-1396534330,2,['failure'],['failure']
Availability,The windows (infrastructure) and MacOS (odd missing library) errors are pre-exisiting.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3761#issuecomment-488711738:61,error,errors,61,https://root.cern,https://github.com/root-project/root/pull/3761#issuecomment-488711738,1,['error'],['errors']
Availability,The windows build crashed claiming that a lock-file was still existing from a previous build. Will retry the win build and any other similar failures later.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3253#issuecomment-454060483:141,failure,failures,141,https://root.cern,https://github.com/root-project/root/pull/3253#issuecomment-454060483,1,['failure'],['failures']
Availability,The windows build failure is unrelated (RDataFrame related).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2741#issuecomment-426821543:18,failure,failure,18,https://root.cern,https://github.com/root-project/root/pull/2741#issuecomment-426821543,1,['failure'],['failure']
Availability,The windows error is unrelated (hang in a test that does not use http).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7725#issuecomment-816056438:12,error,error,12,https://root.cern,https://github.com/root-project/root/pull/7725#issuecomment-816056438,1,['error'],['error']
Availability,The windows error is unrelated. It seems that a build area used for the older Cling version (using llvm v5) is being reused.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7794#issuecomment-814358682:12,error,error,12,https://root.cern,https://github.com/root-project/root/pull/7794#issuecomment-814358682,1,['error'],['error']
Availability,The windows failure are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11588#issuecomment-1344658799:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/pull/11588#issuecomment-1344658799,1,['failure'],['failure']
Availability,"The windows failure boils down to:; ```; cern\sftnight@ROOT-VS2019 C:\vvasilev-root-dev\vvbuild>root.exe -l; root [0] #include ""Math/CladDerivator.h""; root [1] double arr[2] = {0,1};; root [2] clad::array_ref<Double_t> _d_pi(arr);; root [3] double _r0 = 1;; root [4] _d_pi[0] = 1;; ROOT_prompt_4:1:6: error: use of overloaded operator '[]' is ambiguous (with operand types 'clad::array_ref<Double_t>' (a; ka 'array_ref<double>'); and 'int'); _d_pi[0] = 1;; ~~~~~^~; C:/vvasilev-root-dev/vvbuild\etc\/cling\plugins/include/clad/Differentiator/ArrayRef.h:66:23: note: candidate function ; CUDA_HOST_DEVICE T& operator[](std::size_t i) { return m_arr[i]; }; ^; C:/vvasilev-root-dev/vvbuild\etc\/cling\plugins/include/clad/Differentiator/ArrayRef.h:67:29: note: candidate function ; CUDA_HOST_DEVICE const T& operator[](std::size_t i) const { return m_arr[i]; }; ^; ROOT_prompt_4:1:6: note: built-in candidate operator[](double *, int); _d_pi[0] = 1;; ^; ROOT_prompt_4:1:6: note: built-in candidate operator[](const double *, int); ROOT_prompt_4:1:6: note: built-in candidate operator[](volatile double *, int); ROOT_prompt_4:1:6: note: built-in candidate operator[](const volatile double *, int); ```. I am not sure why this works elsewhere and does not work on Windows. Perhaps we somehow get more builtin operators?. @vaithak, do you have any clue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14165#issuecomment-1925277657:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/pull/14165#issuecomment-1925277657,3,"['down', 'error', 'failure']","['down', 'error', 'failure']"
Availability,The windows failure is a GIT pull retry,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1494#issuecomment-356021212:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/pull/1494#issuecomment-356021212,1,['failure'],['failure']
Availability,The windows failure is a comminucation failure between the node and github.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3628#issuecomment-479139682:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/pull/3628#issuecomment-479139682,2,['failure'],['failure']
Availability,The windows failure is due to the 'git lock' ....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4461#issuecomment-537281629:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/pull/4461#issuecomment-537281629,1,['failure'],['failure']
Availability,The windows failure is infrastructure related (failed git checkout).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2290#issuecomment-403049452:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/pull/2290#issuecomment-403049452,1,['failure'],['failure']
Availability,The windows failure is unrelated (due to a git lock).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11291#issuecomment-1234585426:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/pull/11291#issuecomment-1234585426,1,['failure'],['failure']
Availability,The windows failure is unrelated (infrastructure),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12553#issuecomment-1518279633:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/pull/12553#issuecomment-1518279633,1,['failure'],['failure']
Availability,The windows failure is unrelated merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4651#issuecomment-565191915:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/pull/4651#issuecomment-565191915,1,['failure'],['failure']
Availability,The windows failure is unrelated to this PR (and extremely weird).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11314#issuecomment-1239026143:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/pull/11314#issuecomment-1239026143,1,['failure'],['failure']
Availability,The windows failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12418#issuecomment-1453804267:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/pull/12418#issuecomment-1453804267,2,['failure'],['failure']
Availability,The windows failure on jenkins might be spurious as the new CI doesn't report it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13210#issuecomment-1665278956:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/pull/13210#issuecomment-1665278956,1,['failure'],['failure']
Availability,The windows failure seems unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3602#issuecomment-479377556:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/pull/3602#issuecomment-479377556,1,['failure'],['failure']
Availability,The windows failure seems unrelated to the changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7190#issuecomment-781145762:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/pull/7190#issuecomment-781145762,1,['failure'],['failure']
Availability,The windows failures is unrelated (test output file deleted before being closed in an unrelated test),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7031#issuecomment-815001376:12,failure,failures,12,https://root.cern,https://github.com/root-project/root/pull/7031#issuecomment-815001376,1,['failure'],['failures']
Availability,The windows failures seems to be infrastructure related (missing roottest fork?),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5039#issuecomment-589303136:12,failure,failures,12,https://root.cern,https://github.com/root-project/root/pull/5039#issuecomment-589303136,1,['failure'],['failures']
Availability,The windows test errors seems unusual and the actual error are not obvious. We should re-run them before merging to check if it is just a transient issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11551#issuecomment-1276753455:17,error,errors,17,https://root.cern,https://github.com/root-project/root/pull/11551#issuecomment-1276753455,2,['error'],"['error', 'errors']"
Availability,The windows test failure shows up also elsewhere (@bellenot FYI maybe you have a nice idea how to work around it). The ping test failure seems unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13243#issuecomment-1669562875:17,failure,failure,17,https://root.cern,https://github.com/root-project/root/pull/13243#issuecomment-1669562875,3,"['failure', 'ping']","['failure', 'ping']"
Availability,The windows/python errors are unrelated (seems to be a mismatch installation of python 2/3),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11516#issuecomment-1275258253:19,error,errors,19,https://root.cern,https://github.com/root-project/root/pull/11516#issuecomment-1275258253,1,['error'],['errors']
Availability,"The ~~test~~ compilation failures are real (locally I was building without RooFit), work in progress :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8353#issuecomment-855807611:25,failure,failures,25,https://root.cern,https://github.com/root-project/root/pull/8353#issuecomment-855807611,1,['failure'],['failures']
Availability,Then it definitively weird :( ... Would have to see whether the cutoff is down in TSelectorDraw itself or somehow in the histogram ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671#issuecomment-790845557:74,down,down,74,https://root.cern,https://github.com/root-project/root/issues/6671#issuecomment-790845557,1,['down'],['down']
Availability,Then one JIRA issue/ticket per category of problems or 1 issue per error.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/249#issuecomment-248880405:67,error,error,67,https://root.cern,https://github.com/root-project/root/pull/249#issuecomment-248880405,1,['error'],['error']
Availability,There are a few errors left. Do they need an update of the test (and/or reference file) or a fix in rootlcing/genreflex?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/831#issuecomment-321348145:16,error,errors,16,https://root.cern,https://github.com/root-project/root/pull/831#issuecomment-321348145,1,['error'],['errors']
Availability,There are failures checking out the repo...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1970#issuecomment-386314797:10,failure,failures,10,https://root.cern,https://github.com/root-project/root/pull/1970#issuecomment-386314797,1,['failure'],['failures']
Availability,There are issues trying to compile ROOT7 code with only c++11-capable compiler - see error messages from `ROOT-performance-centos7-multicore` platform. ; I just remove several commits. Current state was tested on all other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4041#issuecomment-508670401:85,error,error,85,https://root.cern,https://github.com/root-project/root/pull/4041#issuecomment-508670401,1,['error'],['error']
Availability,"There are lots of configuration errors on this branch on different platforms, unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3310#issuecomment-457908756:32,error,errors,32,https://root.cern,https://github.com/root-project/root/pull/3310#issuecomment-457908756,1,['error'],['errors']
Availability,There are many errors in python testing - no idea if it has something to do with that PR?; I can provide separate small bugfix for TGLManager::Instance only,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2652#issuecomment-423283981:15,error,errors,15,https://root.cern,https://github.com/root-project/root/pull/2652#issuecomment-423283981,1,['error'],['errors']
Availability,"There are some build errors in the CI:; ```; Error: /github/home/ROOT-CI/src/roofit/xroofit/src/xRooNode.cxx:97:10: fatal error: TFitParametersDialog.h: No such file or directory; 97 | #include ""TFitParametersDialog.h""; | ^~~~~~~~~~~~~~~~~~~~~~~~; ```; Did you forget to push this file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15177#issuecomment-2046152687:21,error,errors,21,https://root.cern,https://github.com/root-project/root/pull/15177#issuecomment-2046152687,3,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"There are two parts to this:; - for this PR to be correctly validated we need to have tested a setup where the build directory is not available anymore at runtime. Does CMS test this, @smuzaffar @vgvassilev ?; - we should have a dedicated test for this in ROOT (as standalone cling doesn't use modules). Do we?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10633#issuecomment-1139421018:134,avail,available,134,https://root.cern,https://github.com/root-project/root/pull/10633#issuecomment-1139421018,1,['avail'],['available']
Availability,There is 2 PR to cherry pick. I did on my local 620-patches branch. But then I cannot push:. Pushing to ssh://github.com/root-project/root.git; remote: error: GH006: Protected branch update failed for refs/heads/v6-20-00-patches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4818#issuecomment-576259300:152,error,error,152,https://root.cern,https://github.com/root-project/root/pull/4818#issuecomment-576259300,1,['error'],['error']
Availability,"There is a configuration failure in 32 bits, investigating.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6313#issuecomment-688765130:25,failure,failure,25,https://root.cern,https://github.com/root-project/root/pull/6313#issuecomment-688765130,1,['failure'],['failure']
Availability,"There is a problem on ALMA 8, where `std::reduce` is not available even though it is supposedly C++17. @rybkine can you work around this, e.g. use `std::accumulate` with larger types?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16113#issuecomment-2252638706:57,avail,available,57,https://root.cern,https://github.com/root-project/root/pull/16113#issuecomment-2252638706,1,['avail'],['available']
Availability,"There is a suspicious failure, this assertion is triggered by the failing test:; ```; root.exe: /data/sftnight/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/SymbolStringPool.h:146: llvm::orc::SymbolStringPool::~SymbolStringPool(): Assertion `Pool.empty() && ""Dangling references at pool destruction time""' failed.; ```; I cannot judge if this could be related to the fix in LLVM or not. @Axel-Naumann and @vgvassilev, please advise. Should I drop that change?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10890#issuecomment-1173932209:22,failure,failure,22,https://root.cern,https://github.com/root-project/root/pull/10890#issuecomment-1173932209,1,['failure'],['failure']
Availability,"There is a test failure in `python-regression-regression` that needs to be investigated, we can't merge this for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5797#issuecomment-639357969:16,failure,failure,16,https://root.cern,https://github.com/root-project/root/pull/5797#issuecomment-639357969,1,['failure'],['failure']
Availability,"There is a ugly workaround to check for network:; ```; execute_process(; COMMAND ping www.github.com -n 2 -w 1000; RESULT_VARIABLE NO_CONNECTION; ); ```; And then use `NO_CONNECTION` like for example:; ```; if(builtin_tbb); if(NO_CONNECTION EQUAL 1); if(fail-on-missing); message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""); else(); message(STATUS ""No internet connection, disabling 'builtin_tbb' option""); set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE); set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE); endif(); else(); ...; ```; I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-864912549:81,ping,ping,81,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-864912549,1,['ping'],['ping']
Availability,"There is actually at least 2 branches with 'problems'. This command:; ```; root.exe ~/Downloads/ship.conical.Pythia8-TGeant4_rec.root -b -l -q -e 'cbmsim->GetBranch(""FitTracks"")->GetIconName()' -e 'cbmsim->GetBranch(""Digi_UpstreamTaggerHits"")->GetIconName()'```. reproduces the problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12537#issuecomment-1481730550:86,Down,Downloads,86,https://root.cern,https://github.com/root-project/root/issues/12537#issuecomment-1481730550,1,['Down'],['Downloads']
Availability,"There is indeed a missing protection/warning message. We currently do not support storing `std::array` as a top level objects. Instead you need to wrap it into a struct. For example, this can be done in your example by adding:; ```; #ifdef __ROOTCLING__; #pragma link C++ class std::vector<std::vector<int>>+;; #pragma link C++ class Binner+;; #endif; ```; to a linkdef file (or your script if you load it via ACLiC). and writing with ; ```; fout->WriteObject(this,""binner""); // i.e. you using don't need to give the class name, the compiler can pass enough information.; ```; and read with:; ```; auto binner = f->Get<Binner>(""binner""); // Not casting needed here, binner will be a `Binner*`; ```. With the updated version of the script I get:; [example.C.txt](https://github.com/root-project/root/files/10025600/example.C.txt). ```; $ root.exe -b -l; root [0] .L example.C+; Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/pcanal/Downloads/./example_C.so; root [1] finderBinner(); Creating std::array<std::array<std::vector<std::vector<Int_t>>, LAYER1>, LAYER2> in FinderBinning.root; root [2] loadFinderBinning(); Loading FinderBinning.root; root [3] ; ```. Cheers,. Philippe. PS. Side note the example.C contained:; ```; mBinsS = castedBinsS;; ```; which ended up copying all the data from castedBinsS to mBinsS which was wastefull. See my alternative in the updated script.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11722#issuecomment-1317651615:947,Down,Downloads,947,https://root.cern,https://github.com/root-project/root/issues/11722#issuecomment-1317651615,1,['Down'],['Downloads']
Availability,"There is much easier solution - do not introduce boolean variables and make check in place like:. if ((where == ""local"") || (where == ""qt5"")). I just want to keep code more clear - first parsing of all options and then creating web output. ; I will provide better solution - if nor CEF neither Qt5 available, ""local"" option is error and should be indicated so. I will add appropriate commit soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1964#issuecomment-386075518:298,avail,available,298,https://root.cern,https://github.com/root-project/root/pull/1964#issuecomment-386075518,2,"['avail', 'error']","['available', 'error']"
Availability,"There is no ""undefined"" value for an integer variable. The test failures are because with these changes we are printing errors that were not printed before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8425#issuecomment-861684735:64,failure,failures,64,https://root.cern,https://github.com/root-project/root/pull/8425#issuecomment-861684735,2,"['error', 'failure']","['errors', 'failures']"
Availability,"There is problems with the doxygen head:; ```; build % cmake .. ; CMake Error at /Applications/CMake.app/Contents/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find PythonInterp (missing: PYTHON_EXECUTABLE); Call Stack (most recent call first):; /Applications/CMake.app/Contents/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /Applications/CMake.app/Contents/share/cmake-3.22/Modules/FindPythonInterp.cmake:169 (FIND_PACKAGE_HANDLE_STANDARD_ARGS); CMakeLists.txt:112 (find_package). -- Configuring incomplete, errors occurred!; See also ""/Users/couet/git/doxygen/build/CMakeFiles/CMakeOutput.log"".; See also ""/Users/couet/git/doxygen/build/CMakeFiles/CMakeError.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1080460317:72,Error,Error,72,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1080460317,2,"['Error', 'error']","['Error', 'errors']"
Availability,There is still failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15232#issuecomment-2126843864:15,failure,failures,15,https://root.cern,https://github.com/root-project/root/pull/15232#issuecomment-2126843864,1,['failure'],['failures']
Availability,There seems to be infrastructure issues :( : ; ```; 07:41:59 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200610-1234/Update.xml; 07:41:59 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds; 07:41:59 Problems when submitting via HTTP; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5603#issuecomment-642024757:61,Error,Error,61,https://root.cern,https://github.com/root-project/root/pull/5603#issuecomment-642024757,2,['Error'],['Error']
Availability,There was some random/spurrious unrelated failure on WIndows in ./roottest/./root/meta/tclass/execReadTmplt.cxx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15472#issuecomment-2120958781:42,failure,failure,42,https://root.cern,https://github.com/root-project/root/pull/15472#issuecomment-2120958781,1,['failure'],['failure']
Availability,"There were several fixes available now in the master for having consistent behavior when using Root versus Geant4 units, which can be set now once before defining any elements or materials without having to lock/unlock:; `TGeoManager::SetDefaultUnits(TGeoManager::kG4Units);`; The default units are Root ones (as described in the docs). Please modify this ticket if you observe any other inconsistency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8695#issuecomment-1353077241:25,avail,available,25,https://root.cern,https://github.com/root-project/root/issues/8695#issuecomment-1353077241,1,['avail'],['available']
Availability,"There will be many aspects of implementing `XKCD` style.; Axes, labels and all kinds of drawing options for histograms, graphs, functions, ...; And, that is very important, interactive functionality - how to handle mouse events for tooltips, zooming, context menus.; It will be a long way, but we could try. Probably starting with axes and TF1 object. There is `RAxisPainter` class in JSROOT, which could be found here:. https://github.com/root-project/jsroot/blob/master/scripts/JSRoot.v7gpad.js#L246. Central `DrawAxis` method used for producing SVG output. ; I could try to implement alternative there.; I also will try to check if ""Humor sans"" font available in web browsers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6682#issuecomment-713443611:653,avail,available,653,https://root.cern,https://github.com/root-project/root/issues/6682#issuecomment-713443611,1,['avail'],['available']
Availability,"There's something that looks like a fix for this TChainParsing test failure in recent master, let me try to rebase that branch and see if that helps...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5062#issuecomment-591454596:68,failure,failure,68,https://root.cern,https://github.com/root-project/root/pull/5062#issuecomment-591454596,1,['failure'],['failure']
Availability,"These are real failures, I cannot reproduce the crash but valgrind sees the access-after-delete, work in progress",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6995#issuecomment-756031491:15,failure,failures,15,https://root.cern,https://github.com/root-project/root/pull/6995#issuecomment-756031491,1,['failure'],['failures']
Availability,"These changes passed all tests before, so I doubt the failures are related. If libCore got built and linked correctly, then this PR should be fine, as it's just a refactoring on how to build libCore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10690#issuecomment-1401487159:54,failure,failures,54,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1401487159,1,['failure'],['failures']
Availability,"These changes seem to have more implications than I thought (I only ran the relevant tests, not others). Will investigate the test failures asap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5140#issuecomment-597840578:131,failure,failures,131,https://root.cern,https://github.com/root-project/root/pull/5140#issuecomment-597840578,1,['failure'],['failures']
Availability,These errors seem genuine? @amadio might this be? (I don't see these errors in the current master.),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2991#issuecomment-444948477:6,error,errors,6,https://root.cern,https://github.com/root-project/root/pull/2991#issuecomment-444948477,2,['error'],['errors']
Availability,"These errors should have definitely come up on my system, but it didn't. I think it will be best to flush my system of anything related to `Vc` or `VecCore` cause that it definitely causing confusion with `builtin_vc` or `builtin_veccore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-401594113:6,error,errors,6,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-401594113,1,['error'],['errors']
Availability,These failures are expected in this (old-ish) branch with distro packages.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3329#issuecomment-459679636:6,failure,failures,6,https://root.cern,https://github.com/root-project/root/pull/3329#issuecomment-459679636,1,['failure'],['failures']
Availability,These failures are indeed unrelated (and should now be fixed in master).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4688#issuecomment-565165881:6,failure,failures,6,https://root.cern,https://github.com/root-project/root/pull/4688#issuecomment-565165881,1,['failure'],['failures']
Availability,These failures are present elsewhere too.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11423#issuecomment-1264704575:6,failure,failures,6,https://root.cern,https://github.com/root-project/root/pull/11423#issuecomment-1264704575,1,['failure'],['failures']
Availability,These failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8555#issuecomment-876391541:6,failure,failures,6,https://root.cern,https://github.com/root-project/root/pull/8555#issuecomment-876391541,1,['failure'],['failures']
Availability,These failures cannot be caused by this PR as it mostly deals with the way we build dictionaries with rootcling...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10241#issuecomment-1079781959:6,failure,failures,6,https://root.cern,https://github.com/root-project/root/pull/10241#issuecomment-1079781959,1,['failure'],['failures']
Availability,These failures seem unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14794#issuecomment-1972717880:6,failure,failures,6,https://root.cern,https://github.com/root-project/root/pull/14794#issuecomment-1972717880,2,['failure'],['failures']
Availability,These failures seem unrelated. We have run successfully the test suite on windows last time. After that the changes were squashing the review comments into the relevant commit to keep good history.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1415093433:6,failure,failures,6,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1415093433,1,['failure'],['failures']
Availability,These failures will be fixed in https://github.com/root-project/roottest/pull/468 https://github.com/root-project/root/pull/5180,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5178#issuecomment-601178151:6,failure,failures,6,https://root.cern,https://github.com/root-project/root/pull/5178#issuecomment-601178151,1,['failure'],['failures']
Availability,"These test failures are unexpected, will investigate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5356#issuecomment-613900297:11,failure,failures,11,https://root.cern,https://github.com/root-project/root/pull/5356#issuecomment-613900297,1,['failure'],['failures']
Availability,These tests failures are not related. Some of them are due to missing backports.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5353#issuecomment-615131549:12,failure,failures,12,https://root.cern,https://github.com/root-project/root/pull/5353#issuecomment-615131549,1,['failure'],['failures']
Availability,"Thinking about it some more, surely this was some number crunching from the 32-bit days when we could only store a max of seven decimal digits reliably? I'm not sure what a good resolution would be, considering that taking it out is not backward compatible at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11954#issuecomment-1362030104:143,reliab,reliably,143,https://root.cern,https://github.com/root-project/root/issues/11954#issuecomment-1362030104,1,['reliab'],['reliably']
Availability,"Third time's a charm: https://github.com/root-project/root/pull/11205. @kgizdov ; > If including the forward declaration in a CMake test compiles, you set a variable that enables it in the code; otherwise, the forward declaration is switched off in the code. What am I missing?. The case where the forward declaration doesn't work *and* the `json_fwd.hpp` header is not provided. In the PR linked above, I propose to just error out in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130#issuecomment-1219172690:422,error,error,422,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1219172690,1,['error'],['error']
Availability,"This PR duplicates one of the commits in PR #1520 (that PR in addition addresses two more issues in JsMVA not related to the d3 change). As written in the description of PR #1520:. > The code has not been updated to reflect changes in jsroot. The code still tries to load d3.v3.min.js from jsroot. In the current version of jsroot the d3 script has been updated to version 4 and the file is now called d3.min.js. The pull request changes the name of the file in the two places where it is referenced, so it should now find the file. However this change is incomplete since the d3 API changes between the versions and some porting is needed. This PR does not introduce any other changes than changing the name of the js file in the two places where it is referenced in the code, just as PR #1520 does. The API of d3 v4 is not fully backward compatible with d3 v3. Did you go through the code and check that nothing else needs to be changed? In jsroot itself there were many other changes to the code to adapt to the changed API when the d3.js file was updated to v4 as seen in the commit:. https://github.com/root-project/jsroot/commit/c156b8956f77d1aef4b70cd8609c4b1f2036f94f#diff-26681b69718507c05077030d69e5ba58. One more comment: In addition to the change that changes the name of the d3.js file, this PR also proposes changes to some error messages in jsroot. These proposed changes should be proposed to jsroot upstream (https://github.com/root-project/jsroot), otherwise they will be overwritten next time root's bundled copy of jsroot is updated by copying files from upstream.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2353#issuecomment-409446728:1338,error,error,1338,https://root.cern,https://github.com/root-project/root/pull/2353#issuecomment-409446728,1,['error'],['error']
Availability,This PR has became invalid since we have removed the sources of Vc from the ROOT sources. A source tarfile is downloaded if the option 'builtin_vc' is set.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/126#issuecomment-227457610:110,down,downloaded,110,https://root.cern,https://github.com/root-project/root/pull/126#issuecomment-227457610,1,['down'],['downloaded']
Availability,This PR in roottest should fixe the errors: https://github.com/root-project/roottest/pull/911,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11645#issuecomment-1301893440:36,error,errors,36,https://root.cern,https://github.com/root-project/root/pull/11645#issuecomment-1301893440,1,['error'],['errors']
Availability,"This PR is a 'downgrade' is code simplicity that should not be necessary. However the underlying fix is not ready (and won't until August), so we could temporarily merge this if need be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15733#issuecomment-2194299016:14,down,downgrade,14,https://root.cern,https://github.com/root-project/root/pull/15733#issuecomment-2194299016,1,['down'],['downgrade']
Availability,"This PR looks a big improvement in fixing #7890 and #7933. Here are some test results run on Ubuntu 20. - Test create/delete a RooArgSet, simple example shown in #7933. - with current mater (i.e. including #7904 and #7935): ; - Time to create/delete 10M RooArgSet : 125 sec; - Increase of Memory ~ 1 GB; - with master + this PR: ; - Time to create/delete 10M RooArgSet : 0.8 sec; - total memory increase + 25 Mb); - using 6.15 (before including current MemPoolForRooSets (-> #2866 ); - Time to create/delete 10M RooArgSet : 2.9 sec; - memory increase : 0 ; ; - Running RooStats toy generation + likelihood evaluation on Histfactory tutorial model using in totoal 300k toys: ; ```; StandardHypoTestInvDemo(""$ROOTSYS/tutorials/histfactory/results/example_combined_GaussExample_model.root"",""combined"",""ModelConfig"","""",""obsData"",0,0,true,2,0,5,100000); ```. - master : Time: 344 sec Memory : ~ 3.5 GB; - master + this PR : Time: 157 sec Memory: 570 Mb; - 6.15 Time: 197 sec Memory: 240 Mb; . Runing the master on MacOsX, I have observed a much smaller memory increase, but a much longer time spent with allocating/deallocating RooArgSet's when their total count increases.; This is not observed anymore after applying this PR. So in conclusion:. - this PR fixes the increase time spent in allocate/deallocate RooArgSet over time, which will slow down toys analysis when number of toys increase; - there is still some increase in memory usage, but it is much smaller than before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7954#issuecomment-824721395:1342,down,down,1342,https://root.cern,https://github.com/root-project/root/pull/7954#issuecomment-824721395,1,['down'],['down']
Availability,"This PR should fix the JupyROOT failures on MacOS 10.15, such as:. https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/5479/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/. by ensuring `libJupyROOT` is generated with the `.so` suffix as the other libraries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5478#issuecomment-620512213:32,failure,failures,32,https://root.cern,https://github.com/root-project/root/pull/5478#issuecomment-620512213,1,['failure'],['failures']
Availability,"This PR still causes macOS 14 ARM test failures. I have [reverted](https://github.com/root-project/root/commit/ab6cdd5ddaf2294f55793d409508ec93dfcffc25) the commit that caused this; please feel free to come up with a ""good compromise""!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14107#issuecomment-1825792260:39,failure,failures,39,https://root.cern,https://github.com/root-project/root/pull/14107#issuecomment-1825792260,1,['failure'],['failures']
Availability,This PR touches the ppc llvm backend. I do not see how this could be related to the failures we see.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9398#issuecomment-989891848:84,failure,failures,84,https://root.cern,https://github.com/root-project/root/pull/9398#issuecomment-989891848,1,['failure'],['failures']
Availability,"This PR was approved, are the test failures related? Otherwise I believe we could merge and close the issue? @linev @couet",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14671#issuecomment-1966734646:35,failure,failures,35,https://root.cern,https://github.com/root-project/root/pull/14671#issuecomment-1966734646,1,['failure'],['failures']
Availability,"This appears to have broken Windows builds, as signaled by both Jenkins and the new CI... Unfortunately I cannot see a real error message. FYI @bellenot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14773#issuecomment-1958878427:124,error,error,124,https://root.cern,https://github.com/root-project/root/pull/14773#issuecomment-1958878427,1,['error'],['error']
Availability,"This breaks some downstream tools, e.g. the MC event generator sartre fails to parse the new version due to a hardcoded assumption in their bundled [FindROOT.cmake](https://phab.hepforge.org/source/sartresvn/browse/trunk/cmake/modules/FindROOT.cmake$70):; ```; 51 COMPILER = GNU; 52 -- GSL using gsl-config /opt/software/linux-ubuntu23.10-skylake/gcc-13.2.0/gsl-2.7.1-r7c4v3f2nofy2brvoswxabdvracnocly/bin/gsl-config; 53 -- Using GSL from /opt/software/linux-ubuntu23.10-skylake/gcc-13.2.0/gsl-2.7.1-r7c4v3f2nofy2brvoswxabdvracnocly; 54 -- Looking for Root...; 55 -- Looking for Root... - found /opt/software/linux-ubuntu23.10-skylake/gcc-13.2.0/root-6.30.00-blmbnjbpk53omyunsd6mzd464sffkqc3/bin/root; 56 -- Looking for Root... - version 6.30.00; >> 57 CMake Error at cmake/modules/FindROOT.cmake:80 (MATH):; 58 MATH cannot parse the expression: ""6.30.00*10000 + 6.30.00*100 + 6.30.00"":; 59 syntax error, unexpected exp_NUMBER, expecting end of file (5).; 60 Call Stack (most recent call first):; 61 src/CMakeLists.txt:57 (find_package); ```; I wouldn't be surprised if other tools have implicitly assumed that the version number separators were going to be stable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14068#issuecomment-1816889422:17,down,downstream,17,https://root.cern,https://github.com/root-project/root/issues/14068#issuecomment-1816889422,3,"['Error', 'down', 'error']","['Error', 'downstream', 'error']"
Availability,"This broke the build on all EPEL-based distributions where the headers are in `/usr/include/xrootd`, but `XRootDConfig.cmake` reports `/usr/include`. I believe this is an error in how the `rpm` is packaged, but we cannot fix it immediately. Our CI was also very clear about this problem by failing on 5 platforms (!), 3x Fedora and 2x Alma Linux, which I would again like to point out must be always checked before merging! I'm reverting the second commit in https://github.com/root-project/root/pull/14170 to restore our builds and also help the LCG people.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13752#issuecomment-1838159186:171,error,error,171,https://root.cern,https://github.com/root-project/root/pull/13752#issuecomment-1838159186,1,['error'],['error']
Availability,"This broke the tests:; ```; 729: Processing /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C...; 729: In file included from input_line_10:1:; 729: /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C:39:43: error: use of undeclared identifier 'scat'; 729: TPaletteAxis *palette = (TPaletteAxis*)scat->GetGraph()->GetListOfFunctions()->FindObject(""palette"");; 729: ^; ```. Tutorials are executed as part of the CI and therefore should *never* be merged with `[skip-ci]`! The simple fix is in https://github.com/root-project/root/pull/15923.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15871#issuecomment-2188647929:207,error,error,207,https://root.cern,https://github.com/root-project/root/pull/15871#issuecomment-2188647929,1,['error'],['error']
Availability,"This bug Edward reports was described at the ROOT forum two years ago by me in [this thread](https://root-forum.cern.ch/t/integral-with-limits-under-frac/31891). The MWE from that thread of mine can be further simplified down to just three lines of code actually:; ```; void drawl(); {; TLatex l;; l.DrawLatex(0.5, 0.3, ""#frac{#int_{0} v dt}{2}"");; }; ```; This snippet crashes (when ran in 6.14/04) with the same; ```; *ERROR<TLatex>: Missing denominator for #frac; ==> #frac{@{#int_{0}} v dt}{2@}; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6851#issuecomment-731616986:221,down,down,221,https://root.cern,https://github.com/root-project/root/issues/6851#issuecomment-731616986,2,"['ERROR', 'down']","['ERROR', 'down']"
Availability,This can be merge as soon as centos7/clang39 is disabled in jenkins (otherwise we will have a spurrious error for other PRs).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2889#issuecomment-435213448:104,error,error,104,https://root.cern,https://github.com/root-project/root/pull/2889#issuecomment-435213448,1,['error'],['error']
Availability,This change deals with argument parsing and could not have caused the test failures in the reports.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4349#issuecomment-528822213:75,failure,failures,75,https://root.cern,https://github.com/root-project/root/pull/4349#issuecomment-528822213,1,['failure'],['failures']
Availability,"This change looks good to me, do we have a plan what to do with the current failures?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11514#issuecomment-1273270910:76,failure,failures,76,https://root.cern,https://github.com/root-project/root/pull/11514#issuecomment-1273270910,1,['failure'],['failures']
Availability,"This changes only the documentation, the dataframe failures are unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3256#issuecomment-454738865:51,failure,failures,51,https://root.cern,https://github.com/root-project/root/pull/3256#issuecomment-454738865,1,['failure'],['failures']
Availability,This code now has run more than 6000 times for me without failure. I believe it is safe to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/521#issuecomment-296577987:58,failure,failure,58,https://root.cern,https://github.com/root-project/root/pull/521#issuecomment-296577987,1,['failure'],['failure']
Availability,This error is unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2435#issuecomment-465919502:5,error,error,5,https://root.cern,https://github.com/root-project/root/pull/2435#issuecomment-465919502,1,['error'],['error']
Availability,"This example would need to be modified before being put in tutorials:. 1. It should be formatted the proper way. See for instance [this one](https://github.com/root-project/root/blob/master/tutorials/graphics/arrows.C). The header should be formatted that way with a proper author name at the end.; 2. The description of the macro should be more than just a brief. May be some explanation about the site it refers to would help. In particular the download link should be to ScientificColourMaps7.zip I guess.; 3. You are using a TTree do read the .txt file. Why not, but that might be a bit ""too much"" just to read an ascii file of 3 columns. A standard C/C++ ASCII file reading is enough.; 4. The files have already 255 colors. So you do not need CreateGradientColorTable to interpolate the colors simply build the palette with the colors you read.; 5. Yes a static function in TColor would be also a possibiblity but the same comments apply.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8098#issuecomment-968998294:447,down,download,447,https://root.cern,https://github.com/root-project/root/issues/8098#issuecomment-968998294,1,['down'],['download']
Availability,This failure does not seem caused by the PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1189#issuecomment-336724554:5,failure,failure,5,https://root.cern,https://github.com/root-project/root/pull/1189#issuecomment-336724554,1,['failure'],['failure']
Availability,"This failure is because Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. It's the same error that we saw in #2848. This change in Clang is in review (https://reviews.llvm.org/D53925) but Richard has a better alternative (https://reviews.llvm.org/D54986). I would like to close this PR, but we should remember that Cling has an issue in unloading of AutoParse..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2852#issuecomment-455151740:5,failure,failure,5,https://root.cern,https://github.com/root-project/root/pull/2852#issuecomment-455151740,2,"['error', 'failure']","['error', 'failure']"
Availability,This failure seems unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11571#issuecomment-1279698574:5,failure,failure,5,https://root.cern,https://github.com/root-project/root/pull/11571#issuecomment-1279698574,1,['failure'],['failure']
Availability,This fixes the obscure failure in #988,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/991#issuecomment-329397905:23,failure,failure,23,https://root.cern,https://github.com/root-project/root/pull/991#issuecomment-329397905,1,['failure'],['failure']
Availability,"This fixes the run of `roottest.root.meta.enums.execTEnumGetEnum` on Windows (the roottest PR removes the `will fail`). The failure on Windows was due to `typeinfo(enum_type)` returning a name with the format `enum enumname` and until the addition (in this PR) of the name normalization step, this was incorrectly handled by `TEnum::GetEnum`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15408#issuecomment-2096922161:124,failure,failure,124,https://root.cern,https://github.com/root-project/root/pull/15408#issuecomment-2096922161,1,['failure'],['failure']
Availability,"This https://github.com/root-project/root/pull/5048 should fix the `asnumpy` test failure, which is not related to the changes of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5036#issuecomment-589728485:82,failure,failure,82,https://root.cern,https://github.com/root-project/root/pull/5036#issuecomment-589728485,1,['failure'],['failure']
Availability,"This idea is to have an optional ROOT variable we can set in the PanDA pilot or the PanDA worker node wrapper environment that allows to limit the number of threads spawned on the worker node by ROOT. We did this in the past e.g. with `ProofLite.Workers` to prevent prooflite processes to grab all available CPU cores on a worker node instead of the actual usual 8 cores on a WLCG multi-core slot. We steer AthenaMP and MT jobs via the environment variables ATHENA_PROC_NUMBER and ATHENA_CORE_NUMBER and set them to the PanDA queue core count. Asking the GDB might be a bit too high level committee, but if needed this could be brought up in some WLCG operations meetings if others would be interested to steer ROOT in a similar way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9805#issuecomment-1030031260:298,avail,available,298,https://root.cern,https://github.com/root-project/root/issues/9805#issuecomment-1030031260,1,['avail'],['available']
Availability,"This is CPyCppyy upstream's commit:; https://github.com/wlav/CPyCppyy/commit/64fd89050a66bf8cb119f236cadd365efa07b005. If I backport this commit to root, I still get the same failures in some test during the Python garbage collection as when I use my attempted patch above. Are there other changes from upstream that are relevant?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10799#issuecomment-1174770897:175,failure,failures,175,https://root.cern,https://github.com/root-project/root/issues/10799#issuecomment-1174770897,1,['failure'],['failures']
Availability,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:; ```; [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o; /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:; /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’; extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()); ^; In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:; /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’; void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"); ^~~~~~~~~~~~~; /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’; /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’; void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"); ^~~~~~~~~~~~~; /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’; /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4160#issuecomment-519477877:626,error,error,626,https://root.cern,https://github.com/root-project/root/pull/4160#issuecomment-519477877,1,['error'],['error']
Availability,"This is a breakthrough: thanks for insisting to the end.; The code looks good to me.; Assumption 1) can be clarified in the doc. Assumption 2) is deeply rooted inside the very concept of tree. As for the const cast, it's less than optimal but I agree this can wait for 6.14 given also that at the moment we not only do not write out C arrays but we do that in a bogus fashion. I can merge this PR as soon as the tests and the coding conventions checks are green. The present 2 test failures can be fixed easily and are not due to this change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1173#issuecomment-336022015:482,failure,failures,482,https://root.cern,https://github.com/root-project/root/pull/1173#issuecomment-336022015,1,['failure'],['failures']
Availability,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:; > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16279#issuecomment-2301679152:409,error,error,409,https://root.cern,https://github.com/root-project/root/pull/16279#issuecomment-2301679152,2,['error'],['error']
Availability,"This is a reproducer for the Python failures:. ```python; import ROOT; rvec = ROOT.VecOps.RVec(""float"")(); ```. Stacktrace at the point of crash is:. ```; #0 0x00007ffff726c389 in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7ffff72c93df, __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/ext/new_allocator.h:150; 150		{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }; >>> bt; #0 0x00007ffff726c389 in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7ffff72c93df, __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/ext/new_allocator.h:150; #1 0x00007ffff726bf06 in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/bits/alloc_traits.h:512; #2 0x00007ffff726bc7a in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7ffff72c93df, __x=@0x7fffffffd630: 0x555559389d80) at /usr/include/c++/10.2.0/bits/stl_vector.h:1192; #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945; #4 0x00007ffff72b3ba6 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7fffe9222280, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111; #5 0x00007ffff72a4233 in CPyCppyy::BuildScopeProxyDict (scope=16, pyclass=0x555559379ca0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254; #6 0x00007ffff72a6273 in CPyCppyy::CreateScopeProxy (name=""ROOT::VecOps::RVec<float>"", parent=0x555558e398c0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676; #7 0x00007ffff72830eb in (anonymous namespace)::MakeCppTemplateClass (args=0x7ffff73e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-802953879:36,failure,failures,36,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-802953879,1,['failure'],['failures']
Availability,"This is a temporarily created sandbox, created by `pbuilder`, and populated accordingly (with Build-Depends: packages) before running the actual build code - and destroyed immediately afterwards. Thanks for clarifying the meaning of `Rint`, I was confused by the capital R. In the meantime, I was able to re-run `pbuilder` and got the `::sema::` error from the beginning. If it turns out that an interactive session cannot reproduce batch session results (and errors) I really don't know what to do next :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777#issuecomment-1161642175:346,error,error,346,https://root.cern,https://github.com/root-project/root/issues/10777#issuecomment-1161642175,2,['error'],"['error', 'errors']"
Availability,"This is actually still buggy and we now have a use case where not having it brings down the storage of some site, due to the excessive number of IOPS per server (50 IOPS, 720 concurrent accesses to 3 storage servers for a total of 0.2PB of data being read). Enabling this would allow us to reduce the IOPS by a factor ~5. The actual error that we get by enabling it is:. ```; [1923904:internal-dpl-aod-reader]: Fatal: fExtraBasket == nullptr && ""fExtraBasket should have been set to nullptr by GetFreshBasket"" violated at line 1679 of `/local/workspace/DailyBuilds/DailyO2Physics-slc9/daily-tags.nRQdop69vk/SOURCES/ROOT/v6-32-06-alice1/v6-32-06-alice1/tree/tree/src/TBranch.cxx'; [1923904:internal-dpl-aod-reader]: aborting; ```. I can provide some file which has the issue, if needed. This becomes rather urgent for us now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8962#issuecomment-2393067291:83,down,down,83,https://root.cern,https://github.com/root-project/root/issues/8962#issuecomment-2393067291,2,"['down', 'error']","['down', 'error']"
Availability,"This is great! The detection of names of used branches with regexps has always been a dark corner of RDF. Some time ago @axelnaumann suggested to use cling directly for this purpose, hook into the jitting of the expression itself and react upon ""undeclared variable"" errors, but this seems cleaner. @pcanal TString::Tokenize does not understand c++, here we need to get tokens in the programming language parser sense of the term. I.o.w. the regexp that one would need to pass to Tokenize to properly separate c++ token is way too complex, if it even exists",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3324#issuecomment-457922148:267,error,errors,267,https://root.cern,https://github.com/root-project/root/pull/3324#issuecomment-457922148,1,['error'],['errors']
Availability,"This is how browser looks for me:. ![browser](https://user-images.githubusercontent.com/4936580/69444646-0f64d580-0d51-11ea-8ba5-d49112563036.png). Still missing icons, but this can be improved.; On windows instead of ""fs"" should letter ""c:"" appears (or that is in current path).; And later full list of available drivers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4638#issuecomment-557609445:304,avail,available,304,https://root.cern,https://github.com/root-project/root/pull/4638#issuecomment-557609445,1,['avail'],['available']
Availability,"This is not a bug. The histogram read from a file is managed by the file, so it is deleted when the file is deleted. So if you use the unique_ptr the histogram will be deleted when exiting the macro and will also be deleted from the TCanvas. ; If your intention is to keep the histogram alive after executing the macro you should not use the unique_ptr to open the file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13369#issuecomment-1665765890:287,alive,alive,287,https://root.cern,https://github.com/root-project/root/issues/13369#issuecomment-1665765890,1,['alive'],['alive']
Availability,"This is not looking good, I can reproduce all these failures also on Arch Linux with Python 3.13...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16748#issuecomment-2442490095:52,failure,failures,52,https://root.cern,https://github.com/root-project/root/pull/16748#issuecomment-2442490095,1,['failure'],['failures']
Availability,"This is not the only problem with this example. I removed completely the `argparse`management. The script execute well with python. but hone trying to do nbconvert I get:; ```; $ python3 converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks; 0.022516250610351562; [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook; [NbConvertApp] Executing notebook with kernel: python3; [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'; Traceback (most recent call last):; File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook; output, resources = self.exporter.from_filename(notebook_filename, resources=resources); File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename; return self.from_file(f, resources=resources, **kw); File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file; return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw); File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node; nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw); File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node; nb_copy, resources = self._preprocess(nb_copy, resources); File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess; nbc, resc = preprocessor(nbc, resc); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__; return self.preprocess(nb, resources); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess; nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources); File ""/usr/lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10430#issuecomment-1106181358:516,ERROR,ERROR,516,https://root.cern,https://github.com/root-project/root/issues/10430#issuecomment-1106181358,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"This is now fixed in ROOT master. Thanks a lot!. ```; ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info; ==100870== Command: root.exe -n -l -b -q; ==100870== Parent PID: 25804; ==100870== ; ==100870== ; ==100870== HEAP SUMMARY:; ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks; ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated; ==100870== ; ==100870== LEAK SUMMARY:; ==100870== definitely lost: 0 bytes in 0 blocks; ==100870== indirectly lost: 0 bytes in 0 blocks; ==100870== possibly lost: 0 bytes in 0 blocks; ==100870== still reachable: 49,437,618 bytes in 11,658 blocks; ==100870== of which reachable via heuristic:; ==100870== multipleinheritance: 3,552 bytes in 6 blocks; ==100870== suppressed: 29,642 bytes in 450 blocks; ==100870== Reachable blocks (those to which a pointer was found) are not shown.; ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all; ==100870== ; ==100870== For lists of detected and suppressed errors, rerun with: -s; ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72); ```. Should we add a test in roottest for it now that it's clean?. Such as:; https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7207#issuecomment-1827477107:1103,error,errors,1103,https://root.cern,https://github.com/root-project/root/issues/7207#issuecomment-1827477107,3,"['ERROR', 'error']","['ERROR', 'errors']"
Availability,This is probably due to the fact that pymva is not available. You need to protect for this in the tutorial.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14434#issuecomment-1910126908:51,avail,available,51,https://root.cern,https://github.com/root-project/root/pull/14434#issuecomment-1910126908,1,['avail'],['available']
Availability,"This is ready for final review (@jblomer and @Axel-Naumann's comments (so far) has been addresses) and the 2 failures are pre-existing (mac11.0/cxx17 is missing ""SystemError: initialization of libcppyy3_8 did not return an extension module\n"" and ROOT-fedora32/noimt is having problems with std::unique_ptr, see https://github.com/root-project/root/pull/3760#issuecomment-747061692 for the same failure with master).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6559#issuecomment-747065567:109,failure,failures,109,https://root.cern,https://github.com/root-project/root/pull/6559#issuecomment-747065567,2,['failure'],"['failure', 'failures']"
Availability,"This is really good stuff. ARM nodes are appearing on WLCG and testing on that platform will automatically improve the sw stacks of LHC experiments. The test failure needs some thinking but it does not seem a complex issue. If I may suggest this, I would also make sure that a clear indicator of the platform appears in the label of the build (""ARM"", ""Aarch""...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16526#issuecomment-2375944990:158,failure,failure,158,https://root.cern,https://github.com/root-project/root/pull/16526#issuecomment-2375944990,1,['failure'],['failure']
Availability,"This is still a problem in 6.26.04:. ```; root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(); ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'?; ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(); ^; ->; root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(); root.exe: /home/conda/feedstock_root/build_artifacts/root_base_1654795774398/work/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:1187: std::string cling::Dyld::searchLibrariesForSymbol(llvm::StringRef, bool): Assertion `!llvm::sys::DynamicLibrary::SearchForAddressOfSymbol(mangledName) && ""Library already loaded, please use dlsym!""' failed.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1158723732:136,error,error,136,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1158723732,1,['error'],['error']
Availability,"This is still present in v6.28.04 (LLVM 13) but the error is much more verbose:. ```; /tmp root -l; root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(); ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'?; ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(); ^; ->; root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(); IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1573184913:52,error,error,52,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1573184913,2,['error'],['error']
Availability,"This is strange, because if you look at this current nightly builds in ubuntu18 for example the PCH is not yet even built (see https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/3413/console ) and the target is run and it crashes for the error in protobuf I mentioned before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10690#issuecomment-1402180699:324,error,error,324,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1402180699,1,['error'],['error']
Availability,This is the commit that fixes the serialization of the ROOT facade https://github.com/root-project/root/commit/7768b4ea83320cc7d6b624742d6c3ca71165e027 . It should work for Python2 and 3 alike so I'm not sure what could be the cause of the error if you have pulled root with that commit included,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-823951448:240,error,error,240,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-823951448,1,['error'],['error']
Availability,"This is the first time I have contributed to a project and used GitHub, sorry for the errors",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3647#issuecomment-480193776:86,error,errors,86,https://root.cern,https://github.com/root-project/root/pull/3647#issuecomment-480193776,1,['error'],['errors']
Availability,"This is the output form Fedora 23 i686. The output differs between different releases and different architectures, but I think this is the one with the most failures.; [stressgraphics.txt](https://github.com/root-mirror/root/files/329482/stressgraphics.txt)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/155#issuecomment-227983146:157,failure,failures,157,https://root.cern,https://github.com/root-project/root/pull/155#issuecomment-227983146,1,['failure'],['failures']
Availability,This is weird. I tried to connect specifically on `lxplus7`. That does not help. Even the standard app `glxgears` fails:; ```; -bash-4.2$ glxgears; X Error of failed request: BadValue (integer parameter out of range for operation); Major opcode of failed request: 149 (GLX); Minor opcode of failed request: 3 (X_GLXCreateContext); Value in failed request: 0x0; Serial number of failed request: 26; Current serial number in output stream: 27; -bash-4.2$ . ```; Standard X11 ROOT display works though,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13016#issuecomment-1598312054:150,Error,Error,150,https://root.cern,https://github.com/root-project/root/issues/13016#issuecomment-1598312054,1,['Error'],['Error']
Availability,"This is what I see on Jenkins:; ```; Caused by: hudson.plugins.git.GitException:; Command ""git fetch --tags --progress https://github.com/root-project/root.git; +refs/pull/*:refs/remotes/origin/pr/*"" returned status code 143:; stdout: ; stderr: ; 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:1719); 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandWithCredentials(CliGitAPIImpl.java:1463); 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.access$300(CliGitAPIImpl.java:63); 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$1.execute(CliGitAPIImpl.java:314); 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:808); 	... 12 more; ERROR: null; ```; Could it be because I opened the merge request before the migration to root-project?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/360#issuecomment-283659379:686,ERROR,ERROR,686,https://root.cern,https://github.com/root-project/root/pull/360#issuecomment-283659379,1,['ERROR'],['ERROR']
Availability,"This is what's available on CentOS 6, unfortunately:; ```; =======================================================================================================================; Package Arch Version Repository Size; =======================================================================================================================; Installing:; cmake3 x86_64 3.6.1-3.el6 epel 6.2 M; ```. On CentOS 7, CMake 3.12.1 is available after `yum install epel-release`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2636#issuecomment-422434617:15,avail,available,15,https://root.cern,https://github.com/root-project/root/pull/2636#issuecomment-422434617,2,['avail'],['available']
Availability,This issue is most likely due to a change that inadvertently broke forward compatibility: https://github.com/root-project/root/issues/14793. You should have seen this already with 6.30 though. Is there an explanation why 6.30 did not trigger the error?. There are two ways to proceed (if the issue is what we think it is):; - Backport the fix to 6.10 and 6.08 (as Philippe suggested/submitted); - Set the compatibility flag `file->SetBit(TFile::k630forwardCompatibility)` (see [#15006](https://github.com/root-project/root/pull/15006)) when you produce the file with 6.32. The second option would be useful to run at least once to confirm that we identified the right cause.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15964#issuecomment-2203013897:246,error,error,246,https://root.cern,https://github.com/root-project/root/issues/15964#issuecomment-2203013897,1,['error'],['error']
Availability,"This issue is very case-dependent.; When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:; `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree; - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```; const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;; host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;; ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```; Int_t fMemAvailable; // available RAM in MB; Int_t fMemCached; // cached RAM in MB; Int_t fMemBuffer; // buffer RAM in MB; Int_t fMemShared; // shared RAM in MB; Int_t fSwapCached; // cached swap in MB; Int_t fSReclaimable // slab that might be reclaimed; ```; Fixed in ; - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7196#issuecomment-1941955488:1214,avail,available,1214,https://root.cern,https://github.com/root-project/root/issues/7196#issuecomment-1941955488,1,['avail'],['available']
Availability,"This last failure is related to Bulk I/O, not my changes:; ```; -- TEST COMMAND -- ; cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts; /usr/bin/make utils; -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build; make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --; CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):; got exit code 2 but expected 0; ```; I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3763#issuecomment-489659558:10,failure,failure,10,https://root.cern,https://github.com/root-project/root/pull/3763#issuecomment-489659558,4,"['ERROR', 'Error', 'failure']","['ERROR', 'Error', 'failure']"
Availability,This looks good for cmssw. No build error found and all unit tests/relvals/addon tests passed ( https://github.com/cms-sw/root/pull/197 ),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14444#issuecomment-1912184221:36,error,error,36,https://root.cern,https://github.com/root-project/root/pull/14444#issuecomment-1912184221,1,['error'],['error']
Availability,"This looks real:; ```; [ RUN ] TRootTDS.FromARDFMT; C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\datasource_root.cxx(176): error: Expected equality of these values:; 0.; Which is: 0; *min; Which is: 7; [ FAILED ] TRootTDS.FromARDFMT (11 ms); ```; where the test is:; ```cpp; std::unique_ptr<RDataSource> tds(new ROOT::Internal::RDF::RRootDS(treeName, fileGlob));; RDataFrame tdf(std::move(tds));; auto max = tdf.Max<int>(""i"");; auto min = tdf.Min<int>(""i"");; auto c = tdf.Count();. EXPECT_EQ(30U, *c);; EXPECT_DOUBLE_EQ(29., *max);; EXPECT_DOUBLE_EQ(0., *min);; ```; I just checked with `valgrind` locally (on my fedora) and it had no complaints. I will rerun the test on windows ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11504#issuecomment-1271188053:146,error,error,146,https://root.cern,https://github.com/root-project/root/pull/11504#issuecomment-1271188053,1,['error'],['error']
Availability,"This means libCore is rebuilt anytime `gitinfo.txt` changes: that's not an option. I will instead silence; ```; Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap; Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found!; ```; rootcling does not need to know the exact ROOT version. Let me have a look!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14145#issuecomment-1833430490:189,Error,Error,189,https://root.cern,https://github.com/root-project/root/pull/14145#issuecomment-1833430490,1,['Error'],['Error']
Availability,This means that 2 different part of rootcling disagree on whether TFormula has a Streamer member function. Namely the part that should have written down the implementation of the wrapper found **wrongly** that there was no TFormula::Streamer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2434#issuecomment-411915705:148,down,down,148,https://root.cern,https://github.com/root-project/root/pull/2434#issuecomment-411915705,1,['down'],['down']
Availability,This needs some fixing for gtest to be available:. https://github.com/root-project/root/blob/78936428fb4bc7767e8486b6cadfd319dfac6d2b/cmake/modules/SearchInstalledSoftware.cmake#L1773-L1778,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16612#issuecomment-2396209658:39,avail,available,39,https://root.cern,https://github.com/root-project/root/issues/16612#issuecomment-2396209658,1,['avail'],['available']
Availability,This now depends on #12981 for the failures on ubuntu18,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12363#issuecomment-1584649695:35,failure,failures,35,https://root.cern,https://github.com/root-project/root/pull/12363#issuecomment-1584649695,1,['failure'],['failures']
Availability,"This now shows the error that we know about:; ```; In file included from input_line_3:2:; In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:; /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]; #include <vector>; ^; Error: Building module 'std_vector' implicitly. If 'std_vector' requires a ; dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'.; Otherwise, specify '-mByproduct std_vector' to disable this diagnostic.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14897#issuecomment-1981259299:19,error,error,19,https://root.cern,https://github.com/root-project/root/pull/14897#issuecomment-1981259299,2,"['Error', 'error']","['Error', 'error']"
Availability,This one time unfortunately that is not the case. The written file were incorrectly and could lead to spurious crash. The new file when read in unpatched old version can lead to 'just' spurious error message (that can be suppress with the insertion of custom ROOT error handler).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14793#issuecomment-1998568671:194,error,error,194,https://root.cern,https://github.com/root-project/root/issues/14793#issuecomment-1998568671,2,['error'],['error']
Availability,"This patch is to find out why this is still needed as we could not understand (see phab review). If this was mostly for unloading, then the test failures are telling us we might need this for something else. We want to build a clang-repl test out of that something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10696#issuecomment-1146203166:145,failure,failures,145,https://root.cern,https://github.com/root-project/root/pull/10696#issuecomment-1146203166,1,['failure'],['failures']
Availability,This patches should solve the observed failures in LCG/dev3 .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3095#issuecomment-444213232:39,failure,failures,39,https://root.cern,https://github.com/root-project/root/pull/3095#issuecomment-444213232,1,['failure'],['failures']
Availability,"This probably does not help, but just in case:; https://github.com/openstreetmap/mod_tile/issues/201; https://root-forum.cern.ch/t/number-5-is-alive/52310; https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78969",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13216#issuecomment-1627696904:143,alive,alive,143,https://root.cern,https://github.com/root-project/root/issues/13216#issuecomment-1627696904,1,['alive'],['alive']
Availability,"This problem has been already reported in https://sft.its.cern.ch/jira/browse/ROOT-8085. We need to have a new implementation of TH1::GetQuantiles, extending what is available in `TMath::Quantiles` for weighted data set.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9364#issuecomment-1012925419:166,avail,available,166,https://root.cern,https://github.com/root-project/root/issues/9364#issuecomment-1012925419,1,['avail'],['available']
Availability,"This problem is blocking ATLAS in adopting ROOT 6.28.x in production. . We use an ATLAS specific pyROOT script 'diff-root' that compares AODs branch-by-branch in our CI and integration tests that is not working in ROOT 6.28.x with the symptoms described above. The original error message of this script is:. ```; [..]; Py:diff-root INFO comparing [2932] leaves over entries...; IncrementalExecutor::executeFunction: symbol '_ZNSt7__equalILb0EE5equalIPKN4xAOD28CaloClusterBadChannelData_v1ES5_EEbT_S6_T0_' unresolved while linking symbol '__cf_295'!; You are probably missing the definition of bool std::__equal<false>::equal<xAOD::CaloClusterBadChannelData_v1 const*, xAOD::CaloClusterBadChannelData_v1 const*>(xAOD::CaloClusterBadChannelData_v1; const*, xAOD::CaloClusterBadChannelData_v1 const*, xAOD::CaloClusterBadChannelData_v1 const*); Maybe you need to load the corresponding shared library?; cling JIT session error: Failed to materialize symbols: { (main, { _ZSteqISt6vectorIN4xAOD28CaloClusterBadChannelData_v1ESaIS2_EESaIS4_EEbRKS0_IT_T0_ESA_ }) }; IncrementalExecutor::executeFunction: symbol '_ZNSt7__equalILb0EE5equalIPK20TrigRoiDescriptor_p3S4_EEbT_S5_T0_' unresolved while linking symbol '__cf_452'!; You are probably missing the definition of bool std::__equal<false>::equal<TrigRoiDescriptor_p3 const*, TrigRoiDescriptor_p3 const*>(TrigRoiDescriptor_p3 const*, TrigRoiDescriptor_p3 const*, Trig; RoiDescriptor_p3 const*); Maybe you need to load the corresponding shared library?; cling JIT session error: Failed to materialize symbols: { (main, { _ZN16__cppyy_internal8is_equalI30TrigRoiDescriptorCollection_p3S1_EEbRKT_RKT0_ }) }; cling JIT session error: Failed to materialize symbols: { (main, { _ZN16__cppyy_internal8is_equalI30TrigRoiDescriptorCollection_p3S1_EEbRKT_RKT0_ }) }; [..] ; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12406#issuecomment-1543771925:274,error,error,274,https://root.cern,https://github.com/root-project/root/issues/12406#issuecomment-1543771925,4,['error'],['error']
Availability,This problem was reported here: https://root-forum.cern.ch/t/hide-error-bars-behind-tpavestats/27996/2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1684#issuecomment-369296483:66,error,error-bars-behind-tpavestats,66,https://root.cern,https://github.com/root-project/root/pull/1684#issuecomment-369296483,1,['error'],['error-bars-behind-tpavestats']
Availability,"This pull request **fixes 1 alert** when merging e86a1c60cf638cc906d71b58b57cb7121b92b830 into a367caf03a4cea20042a8aaa3c35b4302426803f - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-80b182500b3254cd49d8862a73c0c1ccfe1a7cab). **fixed alerts:**. * 1 for Unused variable, import, function or class; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11775#issuecomment-1327454519:433,down,down,433,https://root.cern,https://github.com/root-project/root/pull/11775#issuecomment-1327454519,1,['down'],['down']
Availability,"This pull request **fixes 3 alerts** when merging c52f87d70dc8d71b833772a824d8ab2bafb24a6e into 7a90392f2a59bb4ebeb3841b44893e39224419fc - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-e77fd08e10c0c969f9c5653007c7cb982b83e9b3). **fixed alerts:**. * 2 for Useless conditional; * 1 for Unused variable, import, function or class; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11705#issuecomment-1315121371:463,down,down,463,https://root.cern,https://github.com/root-project/root/pull/11705#issuecomment-1315121371,1,['down'],['down']
Availability,This pull request **introduces 1 alert** when merging 04e729216836e7bd3b0e811c0e2f9428f2cd50af into 3d17c9ea2b9ec8a20b2820c55bea7f4a27d7c22e - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-3b92f1f7be0125920dcf43822457e94a20a81f90). **new alerts:**. * 1 for Syntax error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9184#issuecomment-984545730:290,error,error,290,https://root.cern,https://github.com/root-project/root/pull/9184#issuecomment-984545730,1,['error'],['error']
Availability,This pull request **introduces 1 alert** when merging 19c94c1d74551e9faade216083539327fe596967 into 6cb78dcb67252d230024c7690f0590a6088e5803 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-039cf3ee2eaf71853b461e7cf3849577e5878f29). **new alerts:**. * 1 for Syntax error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9346#issuecomment-981608436:290,error,error,290,https://root.cern,https://github.com/root-project/root/pull/9346#issuecomment-981608436,1,['error'],['error']
Availability,This pull request **introduces 1 alert** when merging 37f761c2bdd73fcbd3c28c843e53882ca4473490 into 12807aa251590c5b297bbe4dedf823bc77e1193f - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-a70fa534295ca161d315f4ae253cebb82de29756). **new alerts:**. * 1 for Syntax error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9184#issuecomment-984574294:290,error,error,290,https://root.cern,https://github.com/root-project/root/pull/9184#issuecomment-984574294,1,['error'],['error']
Availability,This pull request **introduces 1 alert** when merging 40c2b148292c74d91ddb2fd1044043839ec909ee into f0a240b8554d08f4f3269e02e000d86d10381946 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-d116da91d3dab2210f0c898651e28bad009c7fd6). **new alerts:**. * 1 for Syntax error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11458#issuecomment-1261021594:290,error,error,290,https://root.cern,https://github.com/root-project/root/pull/11458#issuecomment-1261021594,1,['error'],['error']
Availability,This pull request **introduces 1 alert** when merging 6c75a476a93bc12e9d1d37e5bc91fde7792bf51e into 9940f7d41859db49ce8ef83a6929fb495e3c7a48 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-ed1f12b5a0a9788c24f23b69b6f70d4e895e57b1). **new alerts:**. * 1 for Syntax error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8658#issuecomment-879060466:290,error,error,290,https://root.cern,https://github.com/root-project/root/pull/8658#issuecomment-879060466,1,['error'],['error']
Availability,"This pull request **introduces 1 alert** when merging 7120c47b4d4ef120d5ae21aeba7c1ca46f96aa5e into cb16d59940f05df1e04fd4fe161099af22522300 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-3162fe654b1a03a79ae08b10fe96d9b188ffe79a). **new alerts:**. * 1 for Unused variable, import, function or class; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11762#issuecomment-1325324109:436,down,down,436,https://root.cern,https://github.com/root-project/root/pull/11762#issuecomment-1325324109,1,['down'],['down']
Availability,This pull request **introduces 1 alert** when merging eb57d62d91a9466486402db6dd438769376d7d0e into 12cf2101e299a70d2bbe808df21b1a403cfdb9cd - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-1d1c09772c0e436a78e28a80a3dccc63c8d789cc). **new alerts:**. * 1 for Syntax error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10896#issuecomment-1180587787:290,error,error,290,https://root.cern,https://github.com/root-project/root/pull/10896#issuecomment-1180587787,1,['error'],['error']
Availability,This pull request **introduces 12 alerts** and **fixes 28** when merging d8abd1f34e39c10631645cbe41f0f1615c47447c into 35b5aaef38b6635e131e7d93a0c96f69bb293b9d - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-fbfb9f959e1ab826e33aea9db3bf9dfe711aec22). **new alerts:**. * 11 for Non\-callable called; * 1 for Syntax error. **fixed alerts:**. * 27 for Use of the return value of a procedure; * 1 for Module imports itself,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8884#issuecomment-903613362:340,error,error,340,https://root.cern,https://github.com/root-project/root/pull/8884#issuecomment-903613362,1,['error'],['error']
Availability,This pull request **introduces 13 alerts** when merging 4b215c9502aaa13b57362bbf21515001e4f43626 into 896c3f006888ee147770a8b9c1cde2b113472841 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-f9afdfe7d4f5d9d8a4a032fd42933549e93229fe). **new alerts:**. * 11 for Syntax error; * 2 for Syntax error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8701#issuecomment-882717566:293,error,error,293,https://root.cern,https://github.com/root-project/root/pull/8701#issuecomment-882717566,2,['error'],['error']
Availability,This pull request **introduces 13 alerts** when merging 834c2e541674b42e219935d762ffb94a6e0d18e0 into 55a7841e24ac8a65d92e996f85449c0027424b64 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-fda8ce8deb672fe0f864853c034a74e6cac80fbf). **new alerts:**. * 11 for Syntax error; * 2 for Syntax error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8701#issuecomment-883198551:293,error,error,293,https://root.cern,https://github.com/root-project/root/pull/8701#issuecomment-883198551,2,['error'],['error']
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 03d813216d18476ac00690bfa45be6ebd6d2b573 into bf347a53dbcfe469a4e6d39c5537f24300fb9f04 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-92a0815d02256d3c41de76bd78ed59927ecd130f). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1319074850:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1319074850,2,"['down', 'error']","['down', 'error']"
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 09f6fdde14fee71f3c446e3a14d566642fcb2d73 into 99032172f6216154e7e0824a3d32925fcb650e7a - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-9ad5e3f5cd2964950fd551d8ce94224629042540). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1319879474:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1319879474,2,"['down', 'error']","['down', 'error']"
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 223e6f3db47f44a29ff090bcbb30ed4e8a9a295c into 5764b6aa3d04ec2fceaa15ddbfd20541418ebee7 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-f996be376a861fda1eaf0677132494825b6c234f). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1317515271:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1317515271,2,"['down', 'error']","['down', 'error']"
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 22dd7f86a60ff4f26b8894876c571f45567ceb3a into 323c21416cea9a64080698c23a7e2f6f6d1808bf - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-73ac36cca67998ddc3d7a0c5abf7a5f2eafbc059). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1321128585:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1321128585,2,"['down', 'error']","['down', 'error']"
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 279de79f8fd0e28b7533159580fa55a684636b77 into 323c21416cea9a64080698c23a7e2f6f6d1808bf - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-f9b6bd1caa67ccf4e235d3545b39b2bc1a4b7806). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1321115038:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1321115038,2,"['down', 'error']","['down', 'error']"
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 2aab582da8bbc4239c5b01fcbee3b9b6bfe78129 into 8cc176c9ee7dde3b72501a2b657534bc6bd10418 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-164d20e4477aecfba59e6df34e740d67a18bf884). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1298731089:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1298731089,1,['error'],['error']
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 2baacf55f58ed7760e58f67416386b87be5c567a into b53640813aa29e458ddab421141e39a4e2fd1842 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-7bde1faa8fd87621fa26b58d22df74db38cbb583). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1318390950:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1318390950,2,"['down', 'error']","['down', 'error']"
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 2cced58c48a01ada3ef4551fd9525fc4830181a6 into cde3a487f63e7dcf88f691c14d255f13e18278f9 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-d9b8b0ec762c71e293c3893c4d53a78ea9f1dfb0). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1326673110:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1326673110,2,"['down', 'error']","['down', 'error']"
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 3b962fc8f64df0affeccf447df3e44afc378cb06 into 8ce27408659062a17c48b7b572352a1ba05e8a81 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-9b25ed4e94cd087caf948fc41cdf3bcbf8423014). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1269769470:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1269769470,1,['error'],['error']
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 3f8879a815ba5feee8e8c491a9d801c5849d2866 into c273a91abdad22b46d8e62073535fcd6945218e0 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-65b3d984207e8361dba35bb8cac074be20d9d0ab). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1319669763:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1319669763,2,"['down', 'error']","['down', 'error']"
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 50d2b0f54e14bf4b3093f87d5feed57cc60611ef into bd200315c50ac1520f75f959a852c6d3333f8aa9 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-a10fba1d231d7d7d3a751bf31b1b5e5467ab99e6). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1316480401:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1316480401,2,"['down', 'error']","['down', 'error']"
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 5a65bccb74ff97f2b75b9256edd90a2d013df4e2 into c273a91abdad22b46d8e62073535fcd6945218e0 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-aee71e086e22a434d2ce32d60528b934404d9d38). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1319305629:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1319305629,2,"['down', 'error']","['down', 'error']"
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 5db66d712f9befd939e52112b322e039ae105b93 into 64386a8122b1f7d9f4870c2e7f85484a9007167e - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-caafc9282c3c85ce07dfe9beb02190fcd1012a4e). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1326180372:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1326180372,2,"['down', 'error']","['down', 'error']"
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 6e9cad524f71b65f0fd6b37c108bda566c999e9d into cde3a487f63e7dcf88f691c14d255f13e18278f9 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-1b79fb391da41767bf765089dabab41748d7a570). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1327156328:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1327156328,2,"['down', 'error']","['down', 'error']"
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 819d5b611ef1776359a461722351c91d40e731ba into a05d4beded1481a86a65e450826352eb528b03e7 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-e1509770a8aca1335d81c9a3513917c741f1d8a3). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1312403732:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1312403732,1,['error'],['error']
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 8343c77a1628d0e21b30fc4336d8af827319b083 into a05d4beded1481a86a65e450826352eb528b03e7 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-e6f899b8ff13cb1721741226596581f9aea782d5). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1312502311:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1312502311,1,['error'],['error']
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging 8525d27e44b45c61df2fd800b52fdeff1900d14a into 43016f031b870f7ea1f30a245b8072017af485bb - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-620d019b72d7396600683749c777dd32c11a2fb3). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1306336762:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1306336762,1,['error'],['error']
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging a8636e39ac994000a37222b2ad8cd0c940356d59 into a3809f82b0430a6e942a85e2cf1488463542d4a6 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-68fcee0c9c9b76fd0f76abf073c208f0af6afa22). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1339788387:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1339788387,2,"['down', 'error']","['down', 'error']"
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging a902835e2ac1feaeb680737da93405a6e29922ce into cde3a487f63e7dcf88f691c14d255f13e18278f9 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-07223dd3ebacfd9db350aa8404a665d40c7c05a1). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1326899987:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1326899987,2,"['down', 'error']","['down', 'error']"
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging b63f25db5304aa3c90896512558a4041ba46c950 into a05d4beded1481a86a65e450826352eb528b03e7 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-bd7bbba29ccc9c550b9369e9fa672ed67a52058b). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1312663226:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1312663226,1,['error'],['error']
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging c3a88ba7ffb460af1dba7c068b42e3a0ebbd4ad5 into a17ad74c4b825dcdcdea5d1eb5f9df805caa63fa - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-916dea89ec2912f7bfeb85f75d7d8c907291e540). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1324927415:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1324927415,2,"['down', 'error']","['down', 'error']"
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging ca2f9bd19ed10dc95b0badc6964c0f2e034611df into 7a90392f2a59bb4ebeb3841b44893e39224419fc - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-47ead4ddbbad2478e73a72a1b2c2978cd1aab44b). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1314341155:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1314341155,2,"['down', 'error']","['down', 'error']"
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging cd86f17ccba2fc44977303b920a9a89dacb8af95 into 194180c84f5b59658be46e69660094a0aa4dd3c0 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-559804ead09a31a00889f39793818f6b40b554ad). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1312008553:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1312008553,1,['error'],['error']
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging e4dad5d121f7f66784f802a06334953f8fb17a45 into 99a241911450b020762237b7fd772846dd718bb7 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-d661dc38afd686d57395777cd26df572c621c5ab). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1325314054:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1325314054,2,"['down', 'error']","['down', 'error']"
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging e581df924f2dd2aa3c6c7a485f3d84d8eb144522 into b13756d544d91803e31c7b6aa0c32ae05481e7f8 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-d32d2d614dea682b1ca981ca695dd2d6e81b01b6). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1271470899:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1271470899,1,['error'],['error']
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging f711a806ac0d3f10bf0e520d7d06b00d860678a2 into 229004bbd8fe222fafe7850d5df7f1eada2493a3 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-8bd21265cc371f5af81e77bd0009096f29972242). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1342758071:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1342758071,2,"['down', 'error']","['down', 'error']"
Availability,"This pull request **introduces 71 alerts** and **fixes 30** when merging f7f290378e1c787724b4558e1355560469006c22 into a05d4beded1481a86a65e450826352eb528b03e7 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-582dc477cc11db50d85c3537d7d7938c234981b4). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class. **fixed alerts:**. * 12 for Unused import; * 10 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Syntax error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1312716655:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1312716655,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 0124e04a5908d7698b4dd2568f6acb9b0746c658 into 70f96ca797b5b4f16368b8081a34b72edbc70461 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-0b41c05b3a57484dd727310f32041fa8109ffd25). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1185519236:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1185519236,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 012e0ba63d28aaf6396c293ce1db7b828c8b8c6a into f7dd633e20241d34784cf3e2a1d3d1d30b2835bf - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-6ca38551d818df3f78c6b60f90b41a93928f186c). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1183349537:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1183349537,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 0ab07763c4b9d13725e2e946886364e830ae6d6d into 4e1e5432242c0b1d3b315bf91fb4d7dd3b4cc925 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-1c57ee6a6a7b5ed3ebe82cb34d0f40c60722ac36). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1255864233:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1255864233,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 0cc7300d48c70207bae2cf885e3afd00549aeb8c into dea9a9dcc556003d6c0e90519fc1973df776cc26 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-34c811028aca24558777d78ce4448951cf208c8c). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1142350501:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1142350501,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 0f25036e31620e79ff765652ee299474a77e0cfd into a1155ed9696a98d4680992bf543b419b1d2925b0 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-7e4ee52059a674c7183a9dc5bfc77df8b3653ac2). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1185359130:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1185359130,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 1dde2ff9b9d60d5c988866e47ed918ec71cb6645 into 0fb78b951d33a0d4ccf69739e0fa97f57ee79b1e - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-c87abdfe59f00a74a10ee47b8256685219421d53). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1176025561:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1176025561,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 1e6cba884340c827430a50489f15abb13ff4ebab into 84171a53922501c4fc433abc2806d1822fa15e9c - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-cbec4d424cb96411b3efea7c0c743521fba74e60). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1252020558:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1252020558,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 1ee458515e89f364a21914e0b80fa4d801f5d051 into e1d4a59786dea09cddc23735a4526f9838a1bd8e - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-5249555f5d0e23964f0a912b9c1971c47e74bad4). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1196647392:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1196647392,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 21b8a9d0cf3e71d04f565cac2e231d71deb42f43 into f27c7bcbd3de0820f21729d6581574568095add1 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-cc920449224dda7a021fd64bea82310306ef2432). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1256056379:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1256056379,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 2201bf07c5afb714e8a37bd33f2b4d369e8b15d0 into cf2dea0780f99ebabaad56c6549de16f861f34d1 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-319d95f5ea51f303675cf9388494adb779aa0834). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1164062018:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1164062018,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 236a838ee9c71bb835877e9cf66f56dfd1709620 into 0fb78b951d33a0d4ccf69739e0fa97f57ee79b1e - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-9ee53b134d082bcfb176fd95ec8d4e4a0d18908c). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175996773:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175996773,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 2757afd228821af33f08ffb7b08960689b4d75dd into 7e58e5a3f59dca0b4a7e180643cd6f7215fa7ace - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-439efe2ad5b9cf4e4198be981cb99b60ba827b68). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1114209622:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1114209622,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 2907b190230381f9fb4a1d2c4be0ba14e6546b02 into 8e6f7236bc02d28cd5d767fc3d1462b1da211c64 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-18140221d2c10c266d0e7322f8dabe9c15dfb24e). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1134790050:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1134790050,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 3c4278877aab1add69cc4e4443c9a055e0d97630 into b890efd8e8b87d7cc1f5cc803d67aa9717fb4920 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-433e91d1d934a7850d71097c30966d9d6a1a5f38). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1178671610:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1178671610,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 3d9e47b0bedf418074a886bc495626368f2996b4 into 1679bc9525ded9876fabc42c9f5e5165a97b23c7 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-730add8f3f6934ba6450c22baffd6a9c3f51065e). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1137111530:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1137111530,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 416f1ab273ea97a28be68d58f1ea3a43309a59fb into 2130fb2ef097120b27bce92e1c8837153dc039ba - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-c9060e848a5cf57791f70796ba9728bafca32b71). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1243329272:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1243329272,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 4417a2cd34effdc6ea59797c2d86b6ef8ca8717a into 9114cacb2aaeb19bbad9009b624d27f2e6e0e62d - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-44ee86a553d4b54d27d767f30583bdd503408a21). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1135914477:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1135914477,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 45c0f48f3c3c631d291e0a7a32fd1ba292e79160 into 0496657ffe037b0c2aebf2449634bc7af19f8412 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-c681281095aef9ddf22067c1671870cd3d74a021). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1135179553:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1135179553,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 5164bdef5ca01cb2cec3f422d19de08415dbe0a8 into 7ed0fd11ad6d2c45bd916bb74c635ad031905890 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-c90f3a937f0926c6bb356042d3b585b7efc6d5e2). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1200309830:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1200309830,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 51f0808cd1bf90bcf426e87b3017463df672c5f9 into d00bd5cb306de12b064d88153f84892ad3108e24 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-e25f8e38f980d68b35406007ca118f832d4d56ff). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1163320367:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1163320367,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 56119361df619965632fc256108dc197c5eac4fc into 0fb78b951d33a0d4ccf69739e0fa97f57ee79b1e - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-a8dbe171023386f152bcd2c245c0e1f7fb475e71). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1176105979:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1176105979,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 56b7989c254113c23702493f58093e9737c3535c into 1922b4eb44e94cc8737863d8e420ebfdbcf5d481 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-eddca500b4a15274cbe9ec1384c0bc310a58abb7). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1180225642:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1180225642,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 5751b893022331c6232db48a9f34b9e68816f0c0 into 2a004822dcae19df3595c41246249ad58e21a928 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-69b9eaea4a03341648c8d5387bf07948b8f7bc24). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1086724874:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1086724874,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 69fd09240c1fe6edd876922aba5a480d8ff06f65 into 91a8064b2c93a51ec30c30d8099748082c8c591e - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-8325a34d0c7d5205c24beefb9f901f33bfd7a64f). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144975777:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144975777,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 6ebdc7a98666a254929b0c17c9e93e7888c42284 into 027ad1f921f4739f23b50ec34a015f253b59265a - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-ea589c9115bd3056f1fc6426aafbaf535950c4e4). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1180042325:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1180042325,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 82dbd2b2efddbdf8532240f78b90ff61798ee3f1 into a80015d5230036ef5e1fa29f90723914e8f9c080 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-9d1b90f0611e234234ec0d684e067aef0f9e1cc4). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1252446081:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1252446081,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 86d72d7ece122425aceb7434d724692086d6b7b7 into 01855594063a5832ff1e9a87bebb2fcdfed9122b - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-9a342f4b1c7e15ae1628a6d3273484da89b692a6). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143539635:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143539635,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 8e20719c827b49f991254816891d2c5e65d74bbe into a12f3b736a9c69e0d69e7f483e50e7cdf59d9fd2 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-2d796dc8a3236b7fbc341cc5ac15f6d1d4df2299). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1153736023:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153736023,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging 95226c98a9b59bb4131336f5c18f5d9f8086d8a6 into 91a8064b2c93a51ec30c30d8099748082c8c591e - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-dcdcc36be88a3e2f3a3f7128617e56d9b7eaffc7). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1145202640:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145202640,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging a09bd28f6a31560341393600f9f1b24027815531 into fa36d6d9dfdc636a9ad565d5c18adae04879d35d - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-defb493ae30eb56ab82329917d13fb77331a5dcc). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1251942957:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1251942957,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging a1d53138e3d5d3abb93e5c2b0dd998566d42300f into 660ef262c064fbb7eaedc560f0466b7d6eb24fd1 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-87753c2a66aff81ff501e8ae1161c705b59184bb). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1176327071:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1176327071,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging a252561168653e910bb5628191a26e74c502b817 into d40155c5c495e309eb89041d07d2ae08b298c34c - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-1a153127e9b9a2032a9aa0bb37a54132941ec0bf). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143318888:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143318888,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging a4fd2c10067a5d5dd4ae1d75349838f843d64943 into b223c3fb586d4c6a9a72cfecc96fbef73b6eec30 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-1724b0adf30e2db3f19352fbf4539b4ac73b7053). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1243920735:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1243920735,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging b82b11717ca1534b5ef7b4b249983de343cd08d3 into 5c2ee26a9dd0b63636747fa76da6cacfe8b0b320 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-d2fa9321e0620eda4b4c3072b790c6ee6550261d). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1141686054:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1141686054,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging b8540cefe726db1b2e424c60dc58c1c7925b3844 into 304a9abefac7484b9c359d5c5afdb76e8e25f98d - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-1daba1a97156e48061da6c08e7939877eeac1211). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1248368558:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1248368558,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging d3ee2334d04999118154320a0a0744c60e881ccf into 2f33ff0fa80e3d91790823a9e30bf8ebe28c634e - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-3141d327f7251913eb8bfbde9e0e85aa2cc1cd7f). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1177550958:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1177550958,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging e7a789fdac328d99d7cdb595b07e0d86a1595e5d into 3ee659694fc8e264591cba40a89d3e3bbbf12a00 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-1e4afcfe36a446768b570cb9b670d439c64360bd). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1245673060:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1245673060,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging f4eed55018e380c5886af02c3fe22c200786d23d into 1b2afa8452567f1dc95334dca35e79cd52e51aec - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-b05a901645f906eccf540b3e987682650161df70). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1138864358:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1138864358,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging f6d4f910702bfee44d3fb7b06b76f5a06570c3ea into 1679bc9525ded9876fabc42c9f5e5165a97b23c7 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-ac84f99d182cacab44d07d89fa686cf685638b50). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1137051771:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1137051771,1,['error'],['error']
Availability,"This pull request **introduces 73 alerts** and **fixes 33** when merging f7ffa920c073a3ca5def62dbb93e763920cf5cfe into 40620e494ecf609b029c07f0aa43dbc2635fd5bb - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-0ff418d8618e468d4813953b5e0606f852b27e24). **new alerts:**. * 32 for Missing variable declaration; * 13 for Unused import; * 8 for Except block handles &#39;BaseException&#39;; * 6 for Unused local variable; * 3 for Deleting non\-property; * 2 for Conditional comments; * 2 for Module is imported with &#39;import&#39; and &#39;import from&#39;; * 2 for Wrong number of arguments in a class instantiation; * 1 for Useless conditional; * 1 for &#39;input&#39; function used in Python 2; * 1 for Nested loops with same variable; * 1 for Unused variable, import, function or class; * 1 for Unguarded next in generator. **fixed alerts:**. * 12 for Unused import; * 11 for Except block handles &#39;BaseException&#39;; * 3 for Unused local variable; * 2 for Uncontrolled data used in path expression; * 1 for Testing equality to None; * 1 for Module is imported more than once; * 1 for Should use a &#39;with&#39; statement; * 1 for Syntax error; * 1 for Property in old\-style class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175092033:1169,error,error,1169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175092033,1,['error'],['error']
Availability,"This pull request sets up GitHub code scanning for this repository. Once the scans have completed and the checks have passed, the analysis results for this pull request branch will appear on [this overview](/root-project/root/security/code-scanning?query=pr%3A13007+tool%3ASonarCloud+is%3Aopen). Once you merge this pull request, the 'Security' tab will show more code scanning analysis results (for example, for the default branch). Depending on your configuration and choice of analysis tool, future pull requests will be annotated with code scanning analysis results. For more information about GitHub code scanning, check out [the documentation](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13007#issuecomment-1589877841:762,error,errors,762,https://root.cern,https://github.com/root-project/root/pull/13007#issuecomment-1589877841,1,['error'],['errors']
Availability,"This puts us into the unfortunate spot that the solution which is widely used across most other software packages dealing with this kind of situation (ie, allowing the rounding errors) is not acceptable, but at the same time nobody is willing to spend the (considerable amount of) time to find another solution that you would be happy with. /cc @Axel-Naumann",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389#issuecomment-1539568415:177,error,errors,177,https://root.cern,https://github.com/root-project/root/pull/12389#issuecomment-1539568415,1,['error'],['errors']
Availability,"This recent roottest failure looks related to this issue https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/13090/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/ . (it's a test that was never run before, I am resurrecting it, and that's why the failure was triggered only now)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7541#issuecomment-1724978817:21,failure,failure,21,https://root.cern,https://github.com/root-project/root/issues/7541#issuecomment-1724978817,2,['failure'],['failure']
Availability,"This reminds me of https://sft.its.cern.ch/jira/browse/ROOT-8544 and https://sft.its.cern.ch/jira/browse/ROOT-8523 which is the end where fixed by a7b0b3e647409c7510b38198b08ff94fd079f857. Most likely the way the interpreter sets up the stack frames does not match the expectation of the exception handler (usually implemented in (g)libc). It is very plausible to be a problem similar to the one leading to the ""can not reallocate code"" errors. So I see two plausible path forward: (a) fix the reallocate code error and hopefully it also fix this (b) installed a debug version of (g)libc and trace/debug the exception handlers handling of this case ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7541#issuecomment-800461229:437,error,errors,437,https://root.cern,https://github.com/root-project/root/issues/7541#issuecomment-800461229,2,['error'],"['error', 'errors']"
Availability,"This seems to confirm that 07a0da4 is, as expected given @yamaguchi1024 testing, solving the execUnload problem. This leave as the only error the ""VecOps"" not found. @vgvassilev is that expected?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2183#issuecomment-396428995:136,error,error,136,https://root.cern,https://github.com/root-project/root/pull/2183#issuecomment-396428995,1,['error'],['error']
Availability,"This seems to work now and the changes LGTM in principle. We'll break running with `-O0` until the last commit, but I understand that's to make it easier to revert later on. The message of the first commit should be reflowed to not be one very long line. Otherwise, is this ready @devajithvs ? ping @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267#issuecomment-1907702045:294,ping,ping,294,https://root.cern,https://github.com/root-project/root/pull/14267#issuecomment-1907702045,1,['ping'],['ping']
Availability,"This should be fine to go in as is. We can later use the method I suggested on mattermost, but it will require a major overhaul to how ROOT uses LLVM/Clang:; ```cmake; find_package(LLVM 5.0 REQUIRED); find_package(Clang REQUIRED); find_program(CLANG_EXECUTABLE clang HINTS ""${LLVM_TOOLS_BINARY_DIR}""). execute_process(COMMAND ${CLANG_EXECUTABLE} -print-resource-dir; OUTPUT_VARIABLE CLANG_RESOURCE_DIR OUTPUT_STRIP_TRAILING_WHITESPACE); ```; This correctly finds the resource directory for me (i.e. finds the Clang matching LLVM 5.0.x).; Clang alone is not smart enough to find itself with a version. When using only `find_package(Clang 5.0 REQUIRED)`, I get:; ```; CMake Error at CMakeLists.txt: (find_package):; Could not find a configuration file for package ""Clang"" that is compatible; with requested version ""5.0"". The following configuration files were considered but not accepted:. /usr/lib/llvm/8/lib64/cmake/clang/ClangConfig.cmake, version: unknown; /usr/lib/llvm/7/lib64/cmake/clang/ClangConfig.cmake, version: unknown; /usr/lib/llvm/6/lib64/cmake/clang/ClangConfig.cmake, version: unknown; /usr/lib/llvm/5/lib64/cmake/clang/ClangConfig.cmake, version: unknown; /usr/lib/llvm/4/lib64/cmake/clang/ClangConfig.cmake, version: unknown; ```; (yes, I have all those installed...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3273#issuecomment-455169593:672,Error,Error,672,https://root.cern,https://github.com/root-project/root/pull/3273#issuecomment-455169593,1,['Error'],['Error']
Availability,"This should be fixed by:; - moving your code to a dictionary C++ modules (available in later ROOT versions); we can share the details on how to do that, please let me know! ; - splitting this into two dictionaries or even libraries, such that loading `MyClass` is independent of loading `OtherClass`. I realize that the second option is a workaround, but the modules *are* the propose solution here. Please let me know if we can close the issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10512#issuecomment-1148738184:74,avail,available,74,https://root.cern,https://github.com/root-project/root/issues/10512#issuecomment-1148738184,1,['avail'],['available']
Availability,"This snippet:; ; ```; #include ""TFile.h""; #include ""TTree.h"". void nested(); {; auto f = new TFile(""nestedclones.root"");; TTree* TopTree = (TTree*)f->Get(""TopTree"");; TopTree->Draw(""Objects.SecondaryVertexArray.TrackIndices.index"");; }; ```. fails with. ```; Warning in <TTreeFormula::DefinedVariable>: TClonesArray object was not retrievable for Objects.SecondaryVertexArray.TrackIndices.index!; Error in <TTreeFormula::Compile>: Bad numerical expression : ""Objects.SecondaryVertexArray.TrackIndices.index""; Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {Objects.SecondaryVertexArray.TrackIndices.index,}; ```. If I open a TBrowser and then double click on the relevant leaf, it draws ""Empty"" and says:; `Warning in <TSelectorDraw::ProcessFillObject>: Not implemented for TClonesArray`. Funnily, if I then call again from the prompt:; `TopTree->Draw(""Objects.SecondaryVertexArray.TrackIndices.index"");`. then it is drawn correctly and no warning is raised. ![image](https://github.com/root-project/root/assets/10653970/fbfe2dda-8e5f-42eb-94ca-8a51d9ce1de6). So I guess that Axel was suggesting that, once this bug is fixed, this snippet should go back into roottest to prevent future regressions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8744#issuecomment-2068055777:397,Error,Error,397,https://root.cern,https://github.com/root-project/root/issues/8744#issuecomment-2068055777,1,['Error'],['Error']
Availability,"This solves problem on my desktop, where config like:; ```; c.NotebookApp.ip = '*'; ```; Leads to error when starting notebook.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4597#issuecomment-547878670:98,error,error,98,https://root.cern,https://github.com/root-project/root/pull/4597#issuecomment-547878670,1,['error'],['error']
Availability,"This testSpecFuncSiCi failure is fixed after applying #2396, which enables the autoloading of libraries for ACLiC. The problem is that we were blindly putting libMathCore to ""need loading"" list for ACLiC, but now we have to get a proper callback from CompileMacro. We can try to land #2396, or we can do something like; ```; if (isACLiC); fInterpreter->Load(""libMathCore.so""); ```; in TCling or somewhere for workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2854#issuecomment-434295309:22,failure,failure,22,https://root.cern,https://github.com/root-project/root/pull/2854#issuecomment-434295309,1,['failure'],['failure']
Availability,"This was discussed again in the [PPP](https://indico.cern.ch/event/1213092/).; It's important that misaligned friends can be detected. As a minimum, I would propose:; - Raise an error if the main tree/chain arrives at a certain index number, but the friend collection is smaller.; - If the main tree/chain is at the end, but the friend still has values, emit an informative warning. Ping @pcanal @eguiraud",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9137#issuecomment-1285630136:178,error,error,178,https://root.cern,https://github.com/root-project/root/issues/9137#issuecomment-1285630136,2,"['Ping', 'error']","['Ping', 'error']"
Availability,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14371#issuecomment-1898034942:33,failure,failures,33,https://root.cern,https://github.com/root-project/root/pull/14371#issuecomment-1898034942,4,"['avail', 'failure']","['available', 'failures']"
Availability,"This was just to see if there are any failures, apologies for the noise.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11380#issuecomment-1249384477:38,failure,failures,38,https://root.cern,https://github.com/root-project/root/pull/11380#issuecomment-1249384477,1,['failure'],['failures']
Availability,"This works now fine on 6.28/04, it no longer crashes. ```; root -l; root [0] int x; (int) 0; root [1] .undo; root [2] x; (int) 0; root [3] .undo; root [4] .undo; root [5] x; input_line_12:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [6] x; input_line_14:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [7] int x; (int) 0; root [8] int x; (int) 0; root [9] x; (int) 0; root [10] x; (int) 0; root [11] x; (int) 0; root [12] x; (int) 0; root [13] .undo; root [14] x; (int) 0; root [15] .undo 5; root [16] x; input_line_23:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [17] .q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10178#issuecomment-1812233608:193,error,error,193,https://root.cern,https://github.com/root-project/root/issues/10178#issuecomment-1812233608,9,"['Error', 'error']","['Error', 'error']"
Availability,"Those 2 classes may or may not be the only 2 that have this kind of pattern in the wild, so it might be interesting to solve the underlying issue which is likely to be that `BindCppObject` is trying to bind to a type which has no interpreter info. So a fix could be to have either `CPyCppyy::BindCppObject` or `Cppyy::GetActualClass` to check for the presence of interpreter info before attempting to automatically bind to the ""actual class/type"". (In theory this should be done by testing `TClass::HasInterpreterInfo` but in this case it is returning an incorrect information and thus we have to use `TClass::GetClassInfo`). The change in behavior is that after this modification, `PyROOT/Cppyy` would no longer warn if the actual return type is inadvertently missing its interpreter info. However semantically this seems to be the right behavior, for example in our cases we would:; * have no warning; * PyROOT will report the type of the pointer as `TList`; * Usage of the meta routines (`IsA` and co.) would still give accurate information (access to the `TClass` for `TViewPubFunctions`); * Interfaces to the objects are the same as the one available from the equivalent C++ code (I.e. `TList`) (unless the user does an explicit dynamic_cast to the underlying type). * In other cases (for user provided functions and classes) where the interpreter information from the underlying class is missing by mistake (bad/broken configuration of the user code/libraries), the error/warning reporting about the missing interpreter info will be delayed until the user actually want to access the underlying class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16177#issuecomment-2271797820:1146,avail,available,1146,https://root.cern,https://github.com/root-project/root/pull/16177#issuecomment-2271797820,2,"['avail', 'error']","['available', 'error']"
Availability,Those dataframe failures look real,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6258#issuecomment-681689635:16,failure,failures,16,https://root.cern,https://github.com/root-project/root/pull/6258#issuecomment-681689635,1,['failure'],['failures']
Availability,Those failures are present in the nightlies and are unrelated to this PR: http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=1004,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5945#issuecomment-655456939:6,failure,failures,6,https://root.cern,https://github.com/root-project/root/pull/5945#issuecomment-655456939,1,['failure'],['failures']
Availability,Those logs/failures are ancient. The bot is currently not triggering new runs of jenkins (and/or not showing it in the PRs),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15021#issuecomment-2041130955:11,failure,failures,11,https://root.cern,https://github.com/root-project/root/pull/15021#issuecomment-2041130955,1,['failure'],['failures']
Availability,Those report are challenging to parse with a human eye (where does one report end and the next start). Also they seems to be sorted by source file (which is good we have enough effort to address all of them) rather than categories (which is good if we need to prioritize the functional error (using an object after deletion) over the performance one (unused assigned variable).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7426#issuecomment-794534333:286,error,error,286,https://root.cern,https://github.com/root-project/root/issues/7426#issuecomment-794534333,1,['error'],['error']
Availability,"To Track down the problem, you may want to turn on the multi-thread access protector for TList and THashList. To do so, either add -DR__CHECK_COLLECTION_MULTI_ACCESS or revert 9b8bd150c1cae2d1bd96405c87cb8c350738b4fe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/666#issuecomment-309834050:9,down,down,9,https://root.cern,https://github.com/root-project/root/pull/666#issuecomment-309834050,1,['down'],['down']
Availability,"To avoid this error, change the type of the variable passed to SetBranchAddress from `signed char` to `char`. If that is not possible, cast the parameter to `void*` : `SetBranchAddress( ..... , (void*)&mysignedchar);`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7565#issuecomment-825086836:14,error,error,14,https://root.cern,https://github.com/root-project/root/issues/7565#issuecomment-825086836,1,['error'],['error']
Availability,"To be clear, it seems to me that the following:. ```C++; diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx; index c69a3a95e3..e80e45d8be 100644; --- a/tree/tree/src/TBranch.cxx; +++ b/tree/tree/src/TBranch.cxx; @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,; /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may; /// still fail, depending on the contents of the individual TBaskets loaded.; Bool_t TBranch::SupportsBulkRead() const {; + return true;; return (fNleaves == 1) &&; (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);; }; @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf); // TODO: eventually support multiple leaves.; if (R__unlikely(fNleaves != 1)) return -1;; TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));; - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}; +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}; ; // Remember which entry we are reading.; fReadEntry = entry;; @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf); Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;; //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);; if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {; - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");; - return -1;; + leaf->ReadBasket(user_buf);; }; user_buf.SetBufferOffset(bufbegin);; ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6520#issuecomment-701704099:1507,Error,Error,1507,https://root.cern,https://github.com/root-project/root/issues/6520#issuecomment-701704099,1,['Error'],['Error']
Availability,"To be clear:. ```C++; 1 #include <TTree.h>; 2 #include <TBufferFile.h>; 3; 4 int foo() {; 5 // Otherwise, we keep with the current ROOT defaults.; 6 auto tree = new TTree(""T"", ""A ROOT tree."");; 7 short f = 1;; 8 tree->Branch(""myBranch"", &f, 32000, 1);; 9 for (Long64_t ev = 0; ev < 32000; ev++) {; 10 tree->Fill();; 11 }; 12 tree->Print();; 13; 14 TBufferFile branchbuf(TBuffer::kWrite, 32 * 1024);; 15 TBranch *branchF = tree->GetBranch(""myBranch"");; 16; 17 auto count = branchF->GetBulkRead().GetEntriesSerialized(0, branchbuf);; 18 return count;; 19 }; ```. does not work:. ```; Processing foo.cc...; ******************************************************************************; *Tree :T : A ROOT tree. *; *Entries : 32000 : Total = 65257 bytes File Size = 0 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :myBranch : myBranch/S *; *Entries : 32000 : Total Size= 64957 bytes All baskets in memory *; *Baskets : 2 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; Error in <TBranch::GetEntriesSerialized>: Encountered a branch with destructive deserialization; failing. (int) -1; ```. However if I change `f` to be an `int` or a `float`, it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6520#issuecomment-703591130:1128,Error,Error,1128,https://root.cern,https://github.com/root-project/root/issues/6520#issuecomment-703591130,1,['Error'],['Error']
Availability,"To be honest, my interpretation of https://github.com/root-project/root/pull/13850#issuecomment-1867519153 is that most failures are solved by the upgrade to ROOT 6.30 / LLVM 13. We will not be backporting to ROOT 6.26 / LLVM 9 and I haven't see confirmation that this fixes anything on top of LLVM 13 or LLVM 16, so it's not on the top of my priority list.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1934528168:120,failure,failures,120,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1934528168,1,['failure'],['failures']
Availability,To be merged in case those failures in `dataframe_nodes` pop up again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2231#issuecomment-399745500:27,failure,failures,27,https://root.cern,https://github.com/root-project/root/pull/2231#issuecomment-399745500,1,['failure'],['failures']
Availability,"To complement the info, here is the path followed when Branch() is called, which sets deeply inside the pointer to the TNamed object that is then later (corruptly) read:; ; ; ```; 1 TBranchElement::Unroll TBranchElement.cxx 6372 0x7fbbcd16e6d2 ; 2 TBranchElement::Init TBranchElement.cxx 456 0x7fbbcd133c49 ; 3 TBranchElement::TBranchElement TBranchElement.cxx 262 0x7fbbcd131ec9 ; 4 TBranchElement::Unroll TBranchElement.cxx 6170 0x7fbbcd16ce72 ; 5 TTree::BronchExec TTree.cxx 2586 0x7fbbcd285935 ; 6 TTree::Bronch TTree.cxx 2407 0x7fbbcd28470e ; 7 TTree::Branch TTree.cxx 2025 0x7fbbcd282660 ; 8 TTree::BranchImp TTree.cxx 1629 0x7fbbcd27f4a9 ; 9 TTree::Branch<TNamed> TTree.h 372 0x7fbbeb663f00 ; 10 invRead invRead.C 11 0x7fbbeb6638e9 ; 11 ?? 0x7fbbefa8002d ; 12 ?? 0x7fbc199f5940 ; 13 ?? 0x615000002d80 ; 14 ?? 0x7ffc3fc9a130 ; 15 cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value *) const 0x7fbbf38f35c3 ; ```. I triead, and the heap-after-free-error can be solved by changing in TStreamerInfoActions:255. `buf << *x;`. with. `buf << (x ? *x : T{});`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8027#issuecomment-2079415101:974,error,error,974,https://root.cern,https://github.com/root-project/root/issues/8027#issuecomment-2079415101,1,['error'],['error']
Availability,To do that - simply checkout roottest into the `root` source directory. The build directory will utilize that instead of downloading its own copy.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/84#issuecomment-174390878:121,down,downloading,121,https://root.cern,https://github.com/root-project/root/pull/84#issuecomment-174390878,1,['down'],['downloading']
Availability,"To me it looks OK. The failure in slc6/gcc62 is not real failure (retry of git clone). What we should be testing is also for Python3, which is not obvious to me how to start it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1512#issuecomment-357709239:23,failure,failure,23,https://root.cern,https://github.com/root-project/root/pull/1512#issuecomment-357709239,2,['failure'],['failure']
Availability,"To summarize the current intent of the PR and my understanding of the comments here. The PR targets at limiting cling to find modulemap files all over the place. We have advanced the infrastructure so that this is feasible. If we pick up all possible modulemaps on the include paths we have less control and rootcling goes in the opposite direction -- to be able to control much better the environment in which it works (in a previous PRs we have limited the set of flags it can take). As a side effect of this it will fix the module redefinition errors seen in the LCG builds and when ROOT is installed. IIUC the comments are reasonable and suggesting to move away from the ROOT static configuration for the essential directories such as the etcdir, libdir, incdir and so on. IMO, this not part of the PR even though it touches these functions. I support fixing these issues, however, if we want to fix them we will have to write quite a bit of utility functions which already exist in libLLVMSupport. A potential way forward (outside of this PR) is to make libLLVMSupport available to FoundationUtils and then we can use getMainExecutable and so on to make ROOT detect its essential folders at runtime.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4553#issuecomment-543193289:547,error,errors,547,https://root.cern,https://github.com/root-project/root/pull/4553#issuecomment-543193289,2,"['avail', 'error']","['available', 'errors']"
Availability,Too many errors and it is not easy to make TRatioPlot working after reading from the file. Need further investigations,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14861#issuecomment-1973524962:9,error,errors,9,https://root.cern,https://github.com/root-project/root/pull/14861#issuecomment-1973524962,1,['error'],['errors']
Availability,Tools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:553:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:575:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:593:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:173:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:174:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:175:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - FAILED: bindings/pyroot_experimental/cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CPPClassMethod.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] . And 46 more. ### Warnings:; - CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - CMake Warning at bindings/pyroot_experimental/PyROOT/ROOT/CMakeLists.txt:127 (message): ; - /build/jenkins/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1276:29: warning: lambda capture 'EnvPathDelimiter' is not required to be captured for this use [-Wunused-lambda-capture],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-546714154:1272,error,error,1272,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-546714154,3,['error'],['error']
Availability,"Tools\MSVC\14.29.30133\include\atomic(2250): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\FunctionAttrs.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] ; - [2022-02-14T16:10:47.599Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/Constants.h(255,39): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGObjCMac.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2022-02-14T16:10:47.599Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/SymbolTableListTraits.h(113): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGExprScalar.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2022-02-14T16:10:47.599Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/Constants.h(468,63): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGCoroutine.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2022-02-14T16:10:47.599Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/DenseMap.h(228,23): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\LoopPassManager.cpp) [C:\build\workspace\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9880#issuecomment-1039281245:3032,error,error,3032,https://root.cern,https://github.com/root-project/root/pull/9880#issuecomment-1039281245,1,['error'],['error']
Availability,"Tools\MSVC\14.32.31326\include\xmemory(1370,19): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\LoopUnrollAndJam.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-12-07T08:54:39.234Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring(427,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\LoopUtils.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-12-07T08:54:39.234Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility(3946,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\LoopUnrollRuntime.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-12-07T08:54:40.079Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/DenseMap.h(625,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LegalizeVectorTypes.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2022-12-07T08:54:40.079Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility(1557,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\DAGCombiner.cpp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11400#issuecomment-1340616783:1966,error,error,1966,https://root.cern,https://github.com/root-project/root/pull/11400#issuecomment-1340616783,1,['error'],['error']
Availability,"Tools\MSVC\14.32.31326\include\xmemory(1757,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_b41f054bsy': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SwitchLoweringUtils.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-10-14T16:26:59.868Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xtree(1204,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_3d1e5283db': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\TargetInstrInfo.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-10-14T16:27:00.539Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Error.h(1223,2): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_567e3d6bsy': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Driver\ToolChains\RISCVToolchain.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Driver\obj.clangDriver.vcxproj] ; - [2022-10-14T16:27:00.539Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/iterator_range.h(43,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_ebed891csy': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGCoroutine.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11570#issuecomment-1279221547:3226,Error,Error,3226,https://root.cern,https://github.com/root-project/root/pull/11570#issuecomment-1279221547,1,['Error'],['Error']
Availability,"Travis CI breakage is not my fault, merging as Jenkins test passed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3232#issuecomment-454352383:29,fault,fault,29,https://root.cern,https://github.com/root-project/root/pull/3232#issuecomment-454352383,1,['fault'],['fault']
Availability,"Travis build failure is not connected with changes, I will merge this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3584#issuecomment-498976339:13,failure,failure,13,https://root.cern,https://github.com/root-project/root/pull/3584#issuecomment-498976339,1,['failure'],['failure']
Availability,"Travis complains about a potential memory leak but I think it's a false positive (@pcanal can confirm/deny). For the Windows failure we need @bellenot 's green light to merge, or his advice on how to fix it. EDIT:. > Thank you all for your patience. A PR probably doesn't usually take this long sweat_smile. you'd be surprised :P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7132#issuecomment-780674349:125,failure,failure,125,https://root.cern,https://github.com/root-project/root/pull/7132#issuecomment-780674349,1,['failure'],['failure']
Availability,"Travis failure (clang-tidy, clang-modernize) happens in RooFit, so not related to my changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7980#issuecomment-825544193:7,failure,failure,7,https://root.cern,https://github.com/root-project/root/pull/7980#issuecomment-825544193,1,['failure'],['failure']
Availability,"Tree and one friend TTree, everything's good. The `GetFriendInfo` function will return the name of the friend tree. ## Case 2 above; If the dataset is made of two TChains, one main and one friend, we have the following:; 1. TTree::Print(""all"") will always only print information of the main chain, not the friend one; 2. If the friend chain has a name, both TTree::Scan and RDataFrame Display can see the friend column correctly. This use case should be taken into account in `GetFriendInfo`, and it is since the name of the friend chain will always appear as the ""alias"" component of any element of `RFriendInfo::fFriendNames`; 3. If the friend chain has no name, TTree::Scan behaves inconsistently. I can do `Scan(""y:treefriend1.y"")` but then `Scan(""y:treefriend[23].y"")` will both fail. RDataFrame always prints an error, so for the sake of the `GetFriendInfo` function this is not a valid usecase (as also Enrico said). ## Case 3 above; If the dataset is made of a main TTree with a friend TChain attached, then; 1. If we give a name to the chain and then reference its column via ""treefriend.y"", then TTree:Scan(""x:treefriend.y"") throws an error. Inconsistently, if we write TTree:Scan(""x:y""), it works; 2. RDataFrame always returns an error from TTreeReader, `The branch treefriend.y is contained in a Friend TTree that is not directly attached to the main.`. I don't know if it's a bug or a feature (imho it's better than what TTree::Scan does), but again for the sake of `GetFriendInfo` this usecase is not valid and we should not pay attention to it for this PR. ## Conclusion; It is fine to retrieve the first name of the trees in a chain, because even in the worst case if the tree has a different name wrt the friend chain, the alias of that tree name will be the name of the chain itself. If the name of the first tree is equal to the name of any other tree in the chain, then it's the name of the chain itself. Any other case is not supported by RDataFrame, so not important for this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-816513144:1207,error,error,1207,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-816513144,2,['error'],['error']
Availability,"Try this script. Result shown in file:; [test_saveas.pdf](https://github.com/root-project/root/files/12340003/test_saveas.pdf); ```; #if __has_include(""spl_save.cc""); #include ""spl_save.cc""; #define SPL_TEST 1; #else; double spl_save(double x) { return 0; }; #endif. //--------------------------------------------------------------------; void errin_spline3() {; //--------------------------------------------------------------------. double Xmin = 0.075, Xmax = 0.375;; vector<double> y {; 1.00415, 0.975639, 0.983931, 0.995963, 0.99217, 0.991772, 1.00196; };. TSpline3* spline3 = new TSpline3("""",Xmin,Xmax,y.data(),y.size(),; ""b2e2"",0.,0.);. #ifndef SPL_TEST; spline3->SaveAs(""spl_save.cc"");; printf(""Spline is saved.""; "" Restart this function in root a second time.\n"");; return;; #endif. TCanvas* c1 = new TCanvas(""c1"",""splines"",0,0,900,700);; c1->cd();; gPad->SetGrid();. auto Lft = [](double* x,double* p) {; return spl_save(x[0]);; };; TF1* ft = new TF1(""Test TSpline.SaveAs() function"",Lft,0.05,0.40,0);; ft->SetLineColor(kRed);; ft->SetLineWidth(2);; ft->GetYaxis()->SetRangeUser(0.8,1.2);; ft->Draw(""L"");. spline3->SetLineColor(kBlue);; spline3->SetLineWidth(2);; spline3->SetMarkerColor(kBlue+2);; spline3->SetMarkerStyle(20);; spline3->SetMarkerSize(0.75);; spline3->Draw(""LCP SAME"");. TLegend* leg = new TLegend(0.60,0.75,0.88,0.88);; leg->AddEntry(spline3, ""original TSpline3"", ""LP"");; leg->AddEntry(ft, ""saved in file"", ""L"");; leg->Draw();. gPad->Update();; }; ```; Method TSpline.SaveAs() writes code with an error.; On line `if (klow < fNp-1) klow = fNp-1;` the ''<"" sign must be replaced with the "">"" sign.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13441#issuecomment-1678187182:1525,error,error,1525,https://root.cern,https://github.com/root-project/root/issues/13441#issuecomment-1678187182,1,['error'],['error']
Availability,Trying to fix the linker error on Windows,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12036#issuecomment-1385410706:25,error,error,25,https://root.cern,https://github.com/root-project/root/pull/12036#issuecomment-1385410706,1,['error'],['error']
Availability,"Trying to solve frequent failure in **assertHumanReadable** tests. Typical output:. ```; [NON-XML-CHAR-0x1B][1m/mnt/build/wsincrmaster/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/include/ROOT/StringConv.hxx:103:18: [NON-XML-CHAR-0x1B][0m[NON-XML-CHAR-0x1B][0;1;35mwarning: [NON-XML-CHAR-0x1B][0m[NON-XML-CHAR-0x1B][1mimplicit conversion from 'long long' to 'double' changes value from 9223372036854775807 to 9223372036854775808 [-Wimplicit-int-float-conversion][NON-XML-CHAR-0x1B][0m; if (v < std::numeric_limits<T>::max()) {; [NON-XML-CHAR-0x1B][0;1;32m ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~; [NON-XML-CHAR-0x1B][0m[NON-XML-CHAR-0x1B][1m/mnt/build/wsincrmaster/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/roottest/root/core/assertHumanReadable.cxx:9:29: [NON-XML-CHAR-0x1B][0m[NON-XML-CHAR-0x1B][0;1;30mnote: [NON-XML-CHAR-0x1B][0min instantiation of function template specialization 'ROOT::FromHumanReadableSize<long long>' requested here[NON-XML-CHAR-0x1B][0m; auto parseResult = ROOT::FromHumanReadableSize(input,res);; [NON-XML-CHAR-0x1B][0;1;32m ^; [NON-XML-CHAR-0x1B][0m1 warning generated.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4321#issuecomment-526621721:25,failure,failure,25,https://root.cern,https://github.com/root-project/root/pull/4321#issuecomment-526621721,1,['failure'],['failure']
Availability,"Turning off runtime cxx_modules for 10.15 and 10.14 causes the cling step to still fail, in the `Generating G__Core.cxx, ../lib/libCore.rootmap` step instead of the module generation. Same sorts of errors, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881#issuecomment-825364930:198,error,errors,198,https://root.cern,https://github.com/root-project/root/issues/7881#issuecomment-825364930,1,['error'],['errors']
Availability,"Turns out that error is present in the C++11 builds and it is impossible for me to reproduce. @oshadura, I would like to land this PR enabling more osx platforms to increase the chances ot reproducing the failures we see here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-616696420:15,error,error,15,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-616696420,2,"['error', 'failure']","['error', 'failures']"
Availability,"Two fixes here:; - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable; - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```; -- Found py_keras: /usr/lib/python3.5/site-packages/keras ; -- Failed to find Python module theano: Traceback (most recent call last):; File ""<string>"", line 1, in <module>; ImportError: No module named 'theano'; -- Could NOT find py_theano (missing: PY_THEANO) ; -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/280#issuecomment-253640317:273,error,error,273,https://root.cern,https://github.com/root-project/root/pull/280#issuecomment-253640317,2,"['avail', 'error']","['available', 'error']"
Availability,"Two more gradient interfaces have been parallelized and vectorized: `PoissonLikelihood` and `LogLikelihood`. Both of them are tested. The review of these new implementations should be straightforward, as they are very similar to the `Chi2` implementations. Also, the previous errors in the builds should be fixed now, let's see what Jenkins has to say. By the way, I have pushed a commit fixing the clang-format style because I got a huge diff (probably due to the recent changes in .clang-format) when doing `git clang-format`. I thought this would be cleaner and easier to review, but if you want me to squash the changes I can do it (actually I tried to do it, but the `rebase` threw *a lot* of conflicts, so I just did this new commit).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/793#issuecomment-320457479:276,error,errors,276,https://root.cern,https://github.com/root-project/root/pull/793#issuecomment-320457479,1,['error'],['errors']
Availability,Two possible solutions that came after a discussion with @eguiraud:. * Calling `TTree::SetMaxTreeSize()` in `TFileMerger::PartialMerge` with a very large number and then setting it back to the old value right after. This seems unfeasible since `TTree.h` is not available in the IO library objects.; * Adding a new bit in TFile e.g. `kCanBeChanged` and test it in TTree::ChangeFile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6640#issuecomment-708477402:261,avail,available,261,https://root.cern,https://github.com/root-project/root/issues/6640#issuecomment-708477402,1,['avail'],['available']
Availability,"Type=clang::serialization::MK_PrebuiltModule, ImportLoc=..., ClientLoadCapabilities=0, Imported=0x0); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:4379; #24 0x00007ffff0495e2e in clang::CompilerInstance::loadModule (this=0x55555562fb60, ImportLoc=..., Path=..., Visibility=clang::Module::AllVisible, IsInclusionDirective=false); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1710; #25 0x00007ffff117e1dd in clang::Sema::ActOnModuleImport (this=0x5555556b5680, StartLoc=..., ExportLoc=..., ImportLoc=..., Path=...); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; #26 0x00007fffef9655fa in cling::Interpreter::loadModule (this=0x5555555ef460, M=0x555555956a90, complain=true) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; #27 0x00007fffef965326 in cling::Interpreter::loadModule (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; moduleName=, complain=true) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:872; #28 0x00007fffef85f5f6 in TClingCallbacks::findInGlobalModuleIndex (this=0x5555563ffde0, Name=..., loadFirstMatchOnly=false) at /home/jun/dev/root/core/metacling/src/TClingCallbacks.cxx:339; #29 0x00007fffef85f7ca in TClingCallbacks::LookupObject (this=0x5555563ffde0, DC=0x5555564f80b8, Name=...) at /home/jun/dev/root/core/metacling/src/TClingCallbacks.cxx:376; #30 0x00007fffef9735b7 in cling::MultiplexInterpreterCallbacks::LookupObject (this=0x5555556b8b30, DC=0x5555564f80b8, DN=...); at /home/jun/dev/root/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:70; #31 0x00007fffef97e8f5 in cling::InterpreterExternalSemaSource::FindExternalVisibleDeclsByName (this=0x5555556b8040, DC=0x5555564f80b8, Name=...); at /home/jun/dev/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:278; #32 0x00007ffff09e4a0a in clang::MultiplexExternalSemaSour",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1253760320:9852,error,error,9852,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320,1,['error'],['error']
Availability,Typical unrelated test failure that is caused by `llvm::identify_magic`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10825#issuecomment-1168059023:23,failure,failure,23,https://root.cern,https://github.com/root-project/root/pull/10825#issuecomment-1168059023,2,['failure'],['failure']
Availability,"Typically, disparate errors that are all kinda the same mean an error was set prior by some other operation and not cleared. What then happens is that the next (any) Python operation fails, setting its own error. This is something that's new:; ```; +Exception ignored in PyObject_HasAttr(); consider using PyObject_HasAttrWithError(), PyObject_GetOptionalAttr() or PyObject_GetAttr():; ```; and may help narrow it down.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16748#issuecomment-2442692217:21,error,errors,21,https://root.cern,https://github.com/root-project/root/pull/16748#issuecomment-2442692217,4,"['down', 'error']","['down', 'error', 'errors']"
Availability,UIT WARNING IN HESSE ============== Negative diagonal element 3 in Error Matrix MINUIT WARNING IN HESSE ============== 2456.94 added to diagonal of error matrix EIGENVALUES OF SECOND-DERIVATIVE MATRIX: -7.1929e+00 9.6978e-01 1.0000e+00 9.2231e+00 MINUIT WARNING IN HESSE ============== MATRIX FORCED POS-DEF BY ADDING 7.202092 TO DIAGONAL. FCN=-0.464708 FROM HESSE STATUS=NOT POSDEF 31 CALLS 32 TOTAL EDM=6.13113e+08 STRATEGY= 2 ERR MATRIX NOT POS-DEF EXT PARAMETER APPROXIMATE STEP FIRST NO. NAME VALUE ERROR SIZE DERIVATIVE 1 Lumi 1.00000e+00 1.33665e-03 2.14402e-03 -1.26169e+05 2 Nmu 5.00000e+04 1.26146e+03 1.18624e-03 -3.61664e+05 3 RawRDst 4.03350e-02 1.19551e-01 2.56936e-03 -4.53011e+03 4 alpha_BFD1 0.00000e+00 2.39988e-01 2.01358e-03 -5.82940e+03 ERR DEF= 0.5 MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. COVARIANCE MATRIX CALCULATED SUCCESSFULLY FCN=-373434 FROM MIGRAD STATUS=CONVERGED 227 CALLS 228 TOTAL EDM=6.97829e-06 STRATEGY= 2 ERROR MATRIX ACCURATE EXT PARAMETER STEP FIRST NO. NAME VALUE ERROR SIZE DERIVATIVE 1 Lumi 3.00000e+00 1.68695e-05 2.00130e-03** at limit ** 2 Nmu 1.00000e+06 5.62344e+00 2.00135e-03** at limit ** 3 RawRDst 2.00000e-01 1.08871e-05 9.78010e-02** at limit ** 4 alpha_BFD1 3.00000e+00 2.35826e-04 5.29109e-03** at limit ** ; ERR DEF= 0.5 EXTERNAL ERROR MATRIX. NDIM= 25 NPAR= 4 ERR DEF=0.5 2.982e-16 5.637e-20 1.636e-27 1.292e-23 5.637e-20 9.972e-05 4.648e-18 1.119e-17; 1.636e-27 4.648e-18 2.073e-17 -4.928e-20; 1.292e-23 1.119e-17 -4.928e-20 1.309e-12; PARAMETER CORRELATION COEFFICIENTS; NO. GLOBAL 1 2 3 4; 1 0.00000 1.000 0.000 0.000 0.000; 2 0.00000 0.000 1.000 0.000 0.000; 3 0.00001 0.000 0.000 1.000 -0.000; 4 0.00001 0.000 0.000 -0.000 1.000; **********; ** 7 **SET ERR 0.5; **********; **********; ** 8 **SET PRINT 1; **********; **********; ** 9 **HESSE 2000; **********; COVARIANCE MATRIX CALCULATED SUCCESSFULLY; FCN=-373434 FROM HESSE STATUS=OK 23 CALLS 251 TOTAL; EDM=6.97828e-06 STRATEGY= 2 ERROR MAT,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12729#issuecomment-1527705616:2367,ERROR,ERROR,2367,https://root.cern,https://github.com/root-project/root/issues/12729#issuecomment-1527705616,1,['ERROR'],['ERROR']
Availability,Ubuntu failures are unrelated. Decided to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3165#issuecomment-447284161:7,failure,failures,7,https://root.cern,https://github.com/root-project/root/pull/3165#issuecomment-447284161,1,['failure'],['failures']
Availability,"Ugh, I'm sorry so many code owners got pinged :/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8083#issuecomment-831803989:39,ping,pinged,39,https://root.cern,https://github.com/root-project/root/pull/8083#issuecomment-831803989,1,['ping'],['pinged']
Availability,"Uh, certainly an unexpected failure, but I'd be surprised if it has anything to do with the xrootd version. I hope it was just a transient blip, let's see.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10725#issuecomment-1154806782:28,failure,failure,28,https://root.cern,https://github.com/root-project/root/pull/10725#issuecomment-1154806782,1,['failure'],['failure']
Availability,Uhm @pcanal the failure in `projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make` is real. Do you maybe have an idea of what it could be? Otherwise I'll throw valgrind at it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5340#issuecomment-611631248:16,failure,failure,16,https://root.cern,https://github.com/root-project/root/pull/5340#issuecomment-611631248,1,['failure'],['failure']
Availability,"Uhm but it looks like it failed to fetch after my latest force-push? So I'm not 100% sure what it's building. EDIT: ah no, the rebase errors come from a `git rebase --abort` that ""correctly fails"", as there is no failed rebase operation to abort.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-879713420:134,error,errors,134,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-879713420,1,['error'],['errors']
Availability,"Uhm now I'm getting your same error, `ar: libdeps specified more than once`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7345#issuecomment-789865344:30,error,error,30,https://root.cern,https://github.com/root-project/root/issues/7345#issuecomment-789865344,1,['error'],['error']
Availability,"Uhm....so this gtest:; ```c++; auto m = tdf.Min<double>(""x"");; double runningMin = std::numeric_limits<double>::max();; m.OnPartialResult(2, [&runningMin](double x) {; runningMin = x;; });; EXPECT_DOUBLE_EQ(runningMin, *m); ; ```; results in this error:; ```; [ RUN ] TDFCallbacks.Min; /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/tree/treeplayer/test/dataframe/dataframe_callbacks.cxx:126: Failure; Expected: runningMin; Which is: 1.7976931348623157e+308; To be equal to: *m; Which is: -3.0919523479251314; [ FAILED ] TDFCallbacks.Min (0 ms); ```; only on mac1012 and only for `Min` and `Max` which have the same kind of callback logic.; Do lambda captures work differently on mac? I'm stumped.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-333661341:247,error,error,247,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-333661341,2,"['Failure', 'error']","['Failure', 'error']"
Availability,"Uncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/ROOT/THistImpl.hxx:418:17: warning: loop variable 'binref' is always a copy because the range of type 'const ROOT::Experimental::Detail::THistImpl&lt;ROOT::Experimental::Detail::THistData&lt;3, float, Detail::THistDataDefaultStorage, THistStatContent, THistStatUncertainty&gt;, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular, ROOT::Experimental::TAxisIrregular&gt;' does not return a reference [-Wrange-loop-analysis] ; - include/TMVA/DNN/Architectures/Cpu/CpuMatrix.h:62:50: warning: instantiation of variable 'TMVA::DNN::TCpuMatrix&lt;double&gt;::fOnes' required here, but no definition is available [-Wundefined-var-template] ; - include/TMVA/DNN/Architectures/Cpu/CpuMatrix.h:144:4: warning: instantiation of variable 'TMVA::DNN::TCpuMatrix&lt;double&gt;::fPool' required here, but no definition is available [-Wundefined-var-template] ; - include/TMVA/DNN/Architectures/Cpu/CpuMatrix.h:62:50: warning: instantiation of variable 'TMVA::DNN::TCpuMatrix&lt;float&gt;::fOnes' required here, but no definition is available [-Wundefined-var-template] ; - include/TMVA/DNN/Architectures/Cpu/CpuMatrix.h:144:4: warning: instantiation of variable 'TMVA::DNN::TCpuMatrix&lt;float&gt;::fPool' required here, but no definition is available [-Wundefined-var-template] . ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/785/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.test.test_stressHistFactory_interpreted](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/785/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls1](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/785/testReport/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301834954:81482,avail,available,81482,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301834954,1,['avail'],['available']
Availability,Unfortunately ROOT does not currently support LTO and we do not have at the moment effort available to make progress there. I propose to close this item because of that and because we already have an issue about LTO here https://github.com/root-project/root/issues/11657,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777#issuecomment-1925610367:90,avail,available,90,https://root.cern,https://github.com/root-project/root/issues/10777#issuecomment-1925610367,1,['avail'],['available']
Availability,"Unfortunately not. The fact that it's ARM and that we see half of those same failures also on the march=native alma9 build makes me suspect something to do with a wrong assumption on floating point arithmetic. However, the issue for those march=native failures (and the same failing 6 tests on mac ARM, which all seem to be small floating point errors) may be a different one than the one causing the other 6 failing tests on mac which are more mysterious (huge difference there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15797#issuecomment-2158390462:77,failure,failures,77,https://root.cern,https://github.com/root-project/root/pull/15797#issuecomment-2158390462,3,"['error', 'failure']","['errors', 'failures']"
Availability,Unfortunately that's not the case. Developments in cling are quite coupled to the tests -- for example PR #5884 is blocked due to such failures. My experience is that those stress tests are actually quite useful when making changes to core of ROOT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6019#issuecomment-656639639:135,failure,failures,135,https://root.cern,https://github.com/root-project/root/pull/6019#issuecomment-656639639,1,['failure'],['failures']
Availability,"Unfortunately the commits do not even compile with some scary error; ```; /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx: In constructor ‘AutoloadLibraryMU::AutoloadLibraryMU(const TClingCallbacks&, const string&, const SymbolNameVector&)’:; /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.cxx:90:120: error: cannot allocate an object of abstract type ‘llvm::orc::MaterializationUnit’; 90 | : MaterializationUnit({getSymbolFlagsMap(Symbols), nullptr}), fCallbacks(cb), fLibrary(Library), fSymbols(Symbols); ```. Can this be some difference between LLVM 13 and 16 that's causing it? @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14358#issuecomment-1893791188:62,error,error,62,https://root.cern,https://github.com/root-project/root/pull/14358#issuecomment-1893791188,2,['error'],['error']
Availability,"Unfortunately the error occurs with the default installation on Ubunut 16.04. But still, I think that you are right and it's not ROOT's problem at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/283#issuecomment-257244714:18,error,error,18,https://root.cern,https://github.com/root-project/root/pull/283#issuecomment-257244714,1,['error'],['error']
Availability,"Unfortunately the projectroot.roottest.root.io.double32.roottest_root_io_double32_make failure is a real issue. It, surpringly, fails to merge some consecutive `Double32_t` data member that it was able to before (so the issue appear in `TStreamerInfo::Compile`):; ```; - i= 3, ff2 type= 29, offset= [deleted from log], len=4, method= [deleted from log] [optimized]; - i= 4, ff4 type= 49, offset= [deleted from log], len=1, method= [deleted from log]; + i= 3, ff2 type= 29, offset= [deleted from log], len=3, method= [deleted from log]; + i= 4, ff3 type= 9, offset= [deleted from log], len=1, method= [deleted from log]; + i= 5, ff4 type= 49, offset= [deleted from log], len=1, method= [deleted from log]; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9008#issuecomment-921724322:87,failure,failure,87,https://root.cern,https://github.com/root-project/root/pull/9008#issuecomment-921724322,1,['failure'],['failure']
Availability,"Unfortunately this issue still exist in head version, but now the error appears for JsMVA.py file:. the gist for test_ipp.py script:; https://gist.github.com/TatianaOvsiannikova/eb8065352b3605cbebf547e7d2465c37; now fails with an error:. NameErrorTraceback (most recent call last)<string> in <module>(); /afs/cern.ch/work/t/tovsiann/public/test_multi/ipp.py in f(x); ----> 2 import ROOT # script works, if remove this line; 3 return x; 4 ; 5 from ipyparallel import Client; 6 pool = Client(); /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python2/Tue/x86_64-centos7-gcc8-opt/lib/ROOT/__init__.pyc in <module>(); 88 if hasattr(ip,""kernel""):; 89 import JupyROOT; ---> 90 import JsMVA; 91 ; 92 # Register cleanup; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python2/Tue/x86_64-centos7-gcc8-opt/lib/ROOT/_facade.pyc in _importhook(name, *args, **kwds); 160 except Exception:; 161 pass; --> 162 return _orig_ihook(name, *args, **kwds); 163 __builtin__.__import__ = _importhook; 164 ; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python2/Tue/x86_64-centos7-gcc8-opt/lib/JsMVA/__init__.py in <module>(); 10 ip = get_ipython(); 11 extMgr = ExtensionManager(ip); 12 extMgr.load_extension(""JsMVA.JsMVAMagic""); 13 ; ---> 14 loadExtensions(); /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python2/Tue/x86_64-centos7-gcc8-opt/lib/JsMVA/__init__.py in loadExtensions(); 8 ## This function will register JsMVAMagic class to ipython; 9 def loadExtensions():; ---> 10 ip = get_ipython(); 11 extMgr = ExtensionManager(ip); 12 extMgr.load_extension(""JsMVA.JsMVAMagic""); NameError: global name 'get_ipython' is not defined",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6974#issuecomment-866391935:66,error,error,66,https://root.cern,https://github.com/root-project/root/issues/6974#issuecomment-866391935,2,['error'],['error']
Availability,"Unfortunately this only solves half of the problem, now we have; ```; <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch; <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'; ```; If we had assertions enabled (we probably should for `mac-beta`...), we would instead see; ```; Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14903#issuecomment-1983103890:117,error,error,117,https://root.cern,https://github.com/root-project/root/pull/14903#issuecomment-1983103890,1,['error'],['error']
Availability,"Unfortunately, coming back to this, I'm not sure this change (in its final form) is sufficient: The comment in `~RPageStorage` says that tasks may hold a reference to `this`, which is an instance of a derived subclass (as `RPageStorage` is abstract; and so are `RPageSink` and `RPageSource`). However, once control flow makes it to `~RPageStorage`, the subclass has already been destructed, including its member fields (if my recollection of C++ destructor chains in the presence of inheritance serves well), so we have a race with any task that may try to access one of them. As a concrete case, the summary mentions `RPageSinkBuf::CommitPageImpl()` where the tasks access `fBufferedColumns`. If one of the tasks is only started after `~RPageStorage` calls `WaitForAllTasks`, it will read from an already destructed `std::vector`, which would explain one of the failure modes I still see in CI runs. That said, I'm not an expert in the RNTuple design and cannot assess how this could be solved in the best way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12824#issuecomment-1564337823:863,failure,failure,863,https://root.cern,https://github.com/root-project/root/pull/12824#issuecomment-1564337823,1,['failure'],['failure']
Availability,"Unfortunately, nothing has happened here during the last 2 years. Has anyone from CERN or the ROOT project registered a mime type with IANA?. BTW, the magic match of `file` is quite sloppy:. ```; $> echo -e 'root\x00' > root.txt ; file root.txt; root.txt: ROOT file; $> file --mime-type ./root.txt; ./root.txt: application/octet-stream; ```; It does not even require a non-zero version field, or the existance of the fBEGIN field.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6771#issuecomment-1497824411:199,echo,echo,199,https://root.cern,https://github.com/root-project/root/issues/6771#issuecomment-1497824411,1,['echo'],['echo']
Availability,"Unfortunately, the failure on mac13 is not unrelated :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16285#issuecomment-2308747656:19,failure,failure,19,https://root.cern,https://github.com/root-project/root/pull/16285#issuecomment-2308747656,1,['failure'],['failure']
Availability,Unit test failures look like infrastructure issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1039#issuecomment-331459237:10,failure,failures,10,https://root.cern,https://github.com/root-project/root/pull/1039#issuecomment-331459237,1,['failure'],['failures']
Availability,Unload is bad idea :). The fact that loading leads to failure seems to be an indication that having it happens 'here' leads to incorrect loading.(could be nesting of loading),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14930#issuecomment-1992134659:54,failure,failure,54,https://root.cern,https://github.com/root-project/root/pull/14930#issuecomment-1992134659,1,['failure'],['failure']
Availability,Unrelated CI failure `10:43:05 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3580#issuecomment-475684249:13,failure,failure,13,https://root.cern,https://github.com/root-project/root/pull/3580#issuecomment-475684249,1,['failure'],['failure']
Availability,"Unrelated errors, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5930#issuecomment-650152127:10,error,errors,10,https://root.cern,https://github.com/root-project/root/pull/5930#issuecomment-650152127,1,['error'],['errors']
Availability,Unrelated test error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11141#issuecomment-1209279850:15,error,error,15,https://root.cern,https://github.com/root-project/root/pull/11141#issuecomment-1209279850,1,['error'],['error']
Availability,Unrelated test failures,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11115#issuecomment-1207739735:15,failure,failures,15,https://root.cern,https://github.com/root-project/root/pull/11115#issuecomment-1207739735,1,['failure'],['failures']
Availability,"Update:; Unfortunately, I couldn't manage to make docker container with both pyROOT and X11 graphics running...; So I don't have a nice reproducible for Oliver yet... However, I have tried to reproduce the same problem with plain C++.; And I have noticed something weird, when I try to match python code logic with:. ```cpp; //test.cpp; void test(){; ROOT::EnableImplicitMT();. ROOT::RDataFrame df = ROOT::RDataFrame(10);; auto df2 = df.Define(""x"", ""rdfentry_"").Define(""x2"", ""rdfentry_*rdfentry_"");; ; std::vector<TH1D*> histos;; auto h1 = df2.Histo1D({""h1"", ""h1; x; x"", 100, 0, 100}, ""x"");; auto h2 = df2.Histo1D({""h2"", ""h2; x; x2"", 100, 0, 100}, ""x2"");; histos.push_back(h1.GetPtr());; histos.push_back(h2.GetPtr());. for (auto* h : histos){; TCanvas* canvas = new TCanvas( Form(""%s"", h->GetName()) );; h->DrawClone();; std::cout<<""Successfully plotted the histogram. Please type something to get the next one: ""<<std::endl;; std::string dummy;; std::cin>> dummy;; }; }; ```; After running `root test.cpp` I get the output in the following order:. 1. ""Successfully plotted the histogram. Please type something to get the next one:"" from std::cout; 2. I send ""42"" for std::cin request; 3. ""Successfully plotted the histogram. Please type something to get the next one:"" from std::cout; **and single blank canvas appears**; 4. I send ""42"" for std::cin request; 5. **Two canvases filled with two histograms appear**. The order seems off from expected ""histogram per iteration"" logic and plotting happens at the very end of the for loop.; @couet could you reproduce this?. I assume this is reasonable with `ROOT::EnableImplicitMT();`, if the same happens with python then not all canvases might be alive in the end.. So far I couldn't get a seg. fault crash with C++. @eguiraud did you manage to reproduce it with lxplus or on your local setup?; If you have it reproducible on lxplus, maybe you can share it with Oliver.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1487016637:1696,alive,alive,1696,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1487016637,2,"['alive', 'fault']","['alive', 'fault']"
Availability,"Updated the file as per your suggestion Danilo, removing the doxygen style of comments. Left the formulation mostly intact, just a few small improvements. EDIT: ping @dpiparo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1476#issuecomment-356301976:161,ping,ping,161,https://root.cern,https://github.com/root-project/root/pull/1476#issuecomment-356301976,1,['ping'],['ping']
Availability,"Updates of the day:. ### 1; @Axel-Naumann suggested creating targets for the builtin_xrootd libraries . This should in theory give us the possibility of changing target properties through something like; `set(TARGET libXrdSecpwd-4 PROPERTY INSTALL_RPATH ${CMAKE_INSTALL_FULL_LIBDIR})`. We still want to keep all the building process in the `ExternalProject_Add` step, thus these new targets would be created as IMPORTED libraries. But unfortunately, CMake doesn't allow to install IMPORTED libraries as TARGETS ([SO post](https://stackoverflow.com/a/41179630), [CMake developer citation](https://public.kitware.com/Bug/view.php?id=14311) ). ### 2; I tried to create a post install script that manually invokes `install_name_tool` to change the rpath from the build directory to the install directory. This would be called in `SearchInstalledSoftware.cmake` through something like; `install(SCRIPT ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules/XROOTDPostInstall.cmake"")`; and the script itself would work along these lines; ```; file(GLOB XROOTD_ALL_LIBRARIES; ""${CMAKE_INSTALL_PREFIX}/lib/libXrd*""; ); find_program(INSTALL_NAME_TOOL install_name_tool). if(INSTALL_NAME_TOOL); foreach(XRD_LIB_PATH ${XROOTD_ALL_LIBRARIES}); set(OLD_RPATH ${CMAKE_BINARY_DIR}/lib); set(NEW_RPATH ${CMAKE_INSTALL_PREFIX}/lib); execute_process(COMMAND ${INSTALL_NAME_TOOL} -rpath ${OLD_RPATH} ${NEW_RPATH} $$; endforeach(); endif(); ```; The problem with this idea, if not for its ad-hoc nature, is that `install_name_tool` would actually be called each time `cmake --install` is called causing errors from the second time since ${OLD_RPATH} is not set to the `build` folder anymore:; ```; error: install_name_tool: no LC_RPATH load command with path: /Users/sftnight/vpadulan/build/lib found in: /Users/sftnight/vpadulan/install/lib/libXrdClient.dylib (for architecture x86_64), required for specified option ""-rpath /Users/sftnight/vpadulan/build/lib /Users/sftnight/vpadulan/install/lib""; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6128#issuecomment-672083860:1571,error,errors,1571,https://root.cern,https://github.com/root-project/root/pull/6128#issuecomment-672083860,2,['error'],"['error', 'errors']"
Availability,"Updates on the failing tests:; * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there.; * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6570#issuecomment-720955137:52,Failure,Failure,52,https://root.cern,https://github.com/root-project/root/pull/6570#issuecomment-720955137,3,"['Failure', 'failure']","['Failure', 'failures']"
Availability,Updating PR because I used some C++ features that are not available in C++14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10412#issuecomment-1102849857:58,avail,available,58,https://root.cern,https://github.com/root-project/root/pull/10412#issuecomment-1102849857,1,['avail'],['available']
Availability,Upgrading the warning into an error.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15537#issuecomment-2168224936:30,error,error,30,https://root.cern,https://github.com/root-project/root/issues/15537#issuecomment-2168224936,1,['error'],['error']
Availability,"Usages of `testing::internal::CaptureStd(err|out)` in RDataFrame tests:. ```; ~/W/R/root (credit_rquaglia) git grep -n 'CaptureStd\(err\|out\)' -- tree/dataframe/test/; tree/dataframe/test/dataframe_cache.cxx:148: testing::internal::CaptureStderr();; tree/dataframe/test/dataframe_nodes.cxx:55: testing::internal::CaptureStderr();; tree/dataframe/test/dataframe_nodes.cxx:79: testing::internal::CaptureStdout();; tree/dataframe/test/dataframe_report.cxx:22: testing::internal::CaptureStdout();; tree/dataframe/test/dataframe_report.cxx:72: testing::internal::CaptureStdout();; tree/dataframe/test/dataframe_report.cxx:81: testing::internal::CaptureStdout();; tree/dataframe/test/dataframe_snapshot.cxx:141: testing::internal::CaptureStderr();; tree/dataframe/test/dataframe_snapshot.cxx:686: testing::internal::CaptureStderr();; tree/dataframe/test/dataframe_snapshot.cxx:700: testing::internal::CaptureStderr();; ````; For example, https://github.com/root-project/root/blob/master/tree/dataframe/test/dataframe_snapshot.cxx#L141-L143 for checking that no error is printed, or https://github.com/root-project/root/blob/master/tree/dataframe/test/dataframe_snapshot.cxx#L686-L694 to check that an error is printed and the message is what we expect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5297#issuecomment-620060541:1056,error,error,1056,https://root.cern,https://github.com/root-project/root/pull/5297#issuecomment-620060541,2,['error'],['error']
Availability,"Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/Users/michael/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lgermantok"" ""-lThaiTokenizer"" ""-lChineseTokenizer"" ""-lcmph"" ""-lutil"" ""-lapp_launch_measurement"" ""-lxslt.1"" ""/Users/michael/opt/anac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7249#issuecomment-782161773:3529,Down,Downloads,3529,https://root.cern,https://github.com/root-project/root/issues/7249#issuecomment-782161773,1,['Down'],['Downloads']
Availability,"Users/runner/work/zevis/zevis/build/../some/install/dir/bin/zevis -b /Users/runner/work/zevis/zevis/build/../ZCNClient/eventlist_examples/45783_10.txt someout png; OSTYPE=darwin19; Variable ZARCH_TYPE is not set, looking for zevis.exe in the same directory; Warning in <TInterpreter::ReadRootmapFile>: class ZWebInfo found in libZevLib.dylib is already in libZCNClient.dylib ; Warning in <TClassTable::Add>: class ZWebInfo already in TClassTable; Using ZEVISDIR=/Users/runner/work/zevis/zevis/some/install/dir/share/zevis; Using CNDATAPREFIX=/Users/runner/work/zevis/zevis/build/../ZCNClient/eventlist_rootfiles/; Warning: fgets returned 0; Event list prepared, it is OK and contains 1 entries; Opening /Users/runner/work/zevis/zevis/build/../ZCNClient/eventlist_rootfiles/z/ntup/03/v08b/data/root/data_03_45783_45790_01.root; Error in <TStreamerInfo::Build>: TPolyLine3D, discarding: float* fP, illegal [3*fN] Array of 3-D coordinates (x,y,z). Error in <TStreamerInfo::Build>: ZPolygon2D, discarding: float* fP, illegal [3*fN] Points in world coordinates. *** Break *** floating point exception; Opening /Users/runner/work/zevis/zevis/build/../ZCNClient/eventlist_rootfiles/z/ntup/03/v08b/data/root/data_03_45783_45790_01.root; Entry 1: runnr=45783, eventnr=10, inputtree=orange, cnversion=v08b, scan=1 took 0.48 seconds ......... OK; It took 0 seconds, average time per event 0.48; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [<unknown binary>] (no debug info); [/Users/runner/work/zevis/zevis/root/lib/libCore.6.22.02.so] TColor::SetRGB(float, float, float) (no debug info); [/Users/runner/work/zevis/zevis/some/install/dir/lib/libZevLib.dylib] ZStyle::rootColorFromRGB(int, int, int) /Users/runner/work/zevis/zevis/ZevLib/src/ZStyle.cxx:110; [/Users/runner/work/zevis/zevis/some/install/dir/lib/libZevLib.dylib] ZStyleScheme::ZStyleScheme(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /Users/runner/work/zevis/zevis/ZevLib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-694162214:1530,Error,Error,1530,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-694162214,1,['Error'],['Error']
Availability,"Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us; ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\; Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User; s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:; \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-1008835389:3230,error,error,3230,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-1008835389,1,['error'],['error']
Availability,Users\sftnight\AppData\Local\Temp\_CL_06de3fb0ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_regression.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\gui\guibuilder\src\TRootGuiBuilder.cxx(2598): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_39cb42d8in': No space left on device [C:\build\workspace\root-pullrequests-build\build\gui\guibuilder\GuiBld.vcxproj] ; - C:\build\workspace\root-pullrequests-build\build\include\TAttText.h(49): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_e9d9d5c8sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\gui\guihtml\GuiHtml.vcxproj] ; - C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\memory(1816): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_c7706809ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_utils.vcxproj] ; - C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\xmemory0(1101): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_9b60555fex': No space left on device [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\datasource_sqlite.vcxproj] ; - C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\streambuf(568): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_7eeb19c2sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\gui\sessionviewer\SessionViewer.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_report.cxx(100): fatal error C1088: Cannot flush compiler intermediate file: 'C:\User,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4317#issuecomment-527074091:1203,error,error,1203,https://root.cern,https://github.com/root-project/root/pull/4317#issuecomment-527074091,1,['error'],['error']
Availability,"Using `.L` or `__attribute__((constructor))` or static initialization are good alternatives. However that does not improve usability of `.x` .; As mentioned in the first post, entry function still need renaming when file get renamed.; Also we get function redefinition error when `.x` or `.L` two scripts with same name. For example `dir0/test.C` and `dir1/dir2/test.C` (with completely different content) cannot both define their `test(...)` entry functions. They cannot be put into different namespaces either otherwise cling does not recognize them as entry functions. However, `__main__(...)` approach suffers from multiple definitions too. Unless cling unloads/drops symbol `__main__` after executing it (btw. In this case will static variables of `__main__` get destructed too?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11299#issuecomment-1235581331:269,error,error,269,https://root.cern,https://github.com/root-project/root/issues/11299#issuecomment-1235581331,1,['error'],['error']
Availability,"Using the file `""http://root.cern.ch/files/h1/dstarmb.root""` and (when `xrootd` in enabled) `""root://eospublic.cern.ch//eos/root-eos/h1/dstarmb.root""` maybe something like:; ```; bool tester(const char *filename) {; auto f = TFile::Open(filename, ""READ_WITHOUT_GLOBALREGISTRATION"");; if (f && ! f->IsZombie() && nullptr == gROOT->GetListOfFiles()->FindObject(filename)) {; delete f;; return true;; } else {; // failure;; return false;; }; }; ```; (possibly separating all 3 failures types).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11321#issuecomment-1238577831:411,failure,failure,411,https://root.cern,https://github.com/root-project/root/pull/11321#issuecomment-1238577831,2,['failure'],"['failure', 'failures']"
Availability,"Using valgrind:; ```; cd /builddir/build/BUILD/root-6.24.00/ppc64le-redhat-linux-gnu/tutorials && LD_LIBRARY_PATH=/builddir/build/BUILD/root-6.24.00/ppc64le-redhat-linux-gnu/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 valgrind --suppressions=/builddir/build/BUILD/root-6.24.00/etc/valgrind-root.supp --track-origins=yes /builddir/build/BUILD/root-6.24.00/ppc64le-redhat-linux-gnu/bin/root.exe -l -q -b -n -x hsimple.C -e return; ==3856979== Memcheck, a memory error detector; ==3856979== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==3856979== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info; ==3856979== Command: /builddir/build/BUILD/root-6.24.00/ppc64le-redhat-linux-gnu/bin/root.exe -l -q -b -n -x hsimple.C -e return; ```; [ skipping some lines that seem irrelevant... ]; ```; ==3856979== Conditional jump or move depends on uninitialised value(s); ==3856979== at 0x4AD8468: TROOT::FindObject(char const*) const (TROOT.cxx:1267); ==3856979== by 0x186D05AF: ???; ==3856979== by 0x186D004F: ???; ==3856979== by 0x6A5C80F: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (IncrementalExecutor.cpp:376); ==3856979== by 0x6995A4F: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1141); ==3856979== by 0x699F2B3: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cpp:1391); ==3856979== by 0x699FD73: cling::Interpreter::echo(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*) (Interpreter.cpp:1043); ==3856979== by 0x6AF224B: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (MetaSema.cpp:145); ==3856979== by 0x6B02C0F: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:319); ==3856979== by 0x6B050AF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-845027817:452,error,error,452,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-845027817,1,['error'],['error']
Availability,"V=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 882: Environment variables:; 882: ROOT_HIST=0; 882: Test timeout computed to be: 1500; 882: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 882: error code: -529697949; 882:; 882:; 5/16 Test #882: tutorial-dataframe-df006_ranges-py .......................***Failed 4.42 sec; test 883; Start 883: tutorial-dataframe-df007_snapshot-py. 883: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df007_snapshot.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 883: Environment variables:; 883: ROOT_HIST=0; 883: Test timeout computed to be: 1500; 883: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 883: error code: -529697949; 883:; 883:; 6/16 Test #883: tutorial-dataframe-df007_snapshot-py .....................***Failed 4.47 sec; test 884; Start 884: tutorial-dataframe-df008_createDataSetFromScratch-py. 884: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df008_createDataSetFromScratch.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 884: Environment variables:; 884: ROOT_HIST=0; 884: Test timeout computed to be: 1500; 884: input_line_40:2:211: warning: missing terminating '""' character [-Winvalid-pp-token]; 884: *reinterpret_cast<ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:4710,Error,Error,4710,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['Error'],['Error']
Availability,VC-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download ; - [2021-10-29T11:02:00.746Z] CMake Error at VC-stamp/VC-download-Release.cmake:49 (message): ; - [2021-10-29T11:02:00.746Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download ; - [2021-10-29T11:02:00.746Z] CMake Error at VDT-stamp/VDT-download-Release.cmake:49 (message): ; - [2021-10-29T11:02:04.031Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download ; - [2021-10-29T11:02:04.031Z] CMake Error at VECCORE-stamp/VECCORE-download-Release.cmake:49 (message): ; - [2021-10-29T11:02:04.031Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download ; - [2021-10-29T11:02:04.031Z] CMake Error at TBB-stamp/TBB-download-Release.cmake:49 (message): ; - [2021-10-29T11:02:25.960Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/builtins/davix/DAVIX-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/builtins/davix/DAVIX-prefix/src/DAVIX-stamp/DAVIX-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/builtins/davix/DAVIX-prefix/src/DAVIX-stamp/DAVI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-954652370:1493,down,download,1493,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-954652370,1,['down'],['download']
Availability,"VC\14.23.28105\include\memory(1808,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXTargetMachine.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2021-04-12T13:13:32.980Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits(1394,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXProxyRegErasure.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2021-04-12T13:13:32.980Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector(193,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXTargetTransformInfo.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2021-04-12T13:13:32.980Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Analysis/LoopInfo.h(871,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXSubtarget.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2021-04-12T13:13:32.980Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple(315,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXReplaceImageHandles.cpp) [C:\build\wor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-817803469:1683,error,error,1683,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-817803469,1,['error'],['error']
Availability,"VC\14.29.30133\include\chrono(306,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGCoroutine.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2022-06-14T14:13:31.709Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory(1480,85): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGAtomic.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2022-06-14T14:13:31.709Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory(1393,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\TargetLoweringBase.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-06-14T14:13:31.709Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Casting.h(205,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Analysis\CallGraph.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Analysis\obj.clangAnalysis.vcxproj] ; - [2022-06-14T14:13:31.709Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/ConstantFolder.h(259,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\TargetInstrInfo.cpp) [C:\build\workspace\root-pullreq",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10752#issuecomment-1155253007:3367,error,error,3367,https://root.cern,https://github.com/root-project/root/pull/10752#issuecomment-1155253007,1,['error'],['error']
Availability,"VC\14.32.31326\include\xutility(1272,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXFrameLowering.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2022-07-20T10:12:49.069Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits(725,56): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\TargetLowering.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2022-07-20T10:12:49.069Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility(3967,62): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\PlaceSafepoints.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-07-20T10:12:49.069Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Casting.h(143,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXISelLowering.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2022-07-20T10:12:49.069Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/RecursiveASTVisitor.h(418,3): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\ASTMatchers\ASTMatchF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10896#issuecomment-1190096683:1248,error,error,1248,https://root.cern,https://github.com/root-project/root/pull/10896#issuecomment-1190096683,1,['error'],['error']
Availability,"VC\Tools\MSVC\14.23.28105\include\tuple(42,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\DCE.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2021-06-29T17:43:14.300Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(103,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\TargetLowering.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2021-06-29T17:43:14.300Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono(83,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\StripDeadPrototypes.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] ; - [2021-06-29T17:43:14.300Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/type_traits.h(172,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\PredicateInfo.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2021-06-29T17:43:14.300Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/DenseMap.h(617,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\Inliner.cpp) [C:\build\workspace\root-pullre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8568#issuecomment-870796912:1692,error,error,1692,https://root.cern,https://github.com/root-project/root/pull/8568#issuecomment-870796912,1,['error'],['error']
Availability,"VC\Tools\MSVC\14.29.30133\include\tuple(78,90): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\ASTImporter.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-06-14T14:13:31.709Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\chrono(306,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGCoroutine.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2022-06-14T14:13:31.709Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory(1480,85): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGAtomic.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2022-06-14T14:13:31.709Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory(1393,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\TargetLoweringBase.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-06-14T14:13:31.709Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Casting.h(205,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Analysis\CallGraph.cpp) [C:\build\workspace\root-p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10752#issuecomment-1155253007:2923,error,error,2923,https://root.cern,https://github.com/root-project/root/pull/10752#issuecomment-1155253007,1,['error'],['error']
Availability,"VC\Tools\MSVC\14.29.30133\include\utility(313,72): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\InstCombine\InstCombineSelect.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\InstCombine\LLVMInstCombine.vcxproj] ; - [2022-03-21T12:01:19.119Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/DenseMap.h(274,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\CXXInheritance.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-03-21T12:01:19.119Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory(1395,47): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\IR\Pass.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\IR\LLVMCore.vcxproj] ; - [2022-03-21T12:01:19.119Z] C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\include\clang/AST/Attrs.inc(7743,127): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\AttrImpl.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-03-21T12:01:19.119Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/Stmt.h(1057,64): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\ASTMatchers\ASTMatchersInternal.cpp) [C:\build\workspace\root-p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10183#issuecomment-1073816124:3459,error,error,3459,https://root.cern,https://github.com/root-project/root/pull/10183#issuecomment-1073816124,1,['error'],['error']
Availability,VSTTree .......................................................***Failed Error regular expression found in output. Regex=[: error:] 0.99 sec ; - [2020-06-10T22:24:16.859Z] 613/2035 Test #359: tutorial-dataframe-df012_DefinesAndFiltersAsStrings ...............................................***Failed Error regular expression found in output. Regex=[: error:] 0.71 sec ; - [2020-06-10T22:24:17.374Z] 615/2035 Test #353: tutorial-dataframe-df005_fillAnyObject ............................................................***Failed Error regular expression found in output. Regex=[: error:] 1.98 sec ; - [2020-06-10T22:24:17.374Z] 616/2035 Test #352: tutorial-dataframe-df004_cutFlowReport ............................................................***Failed Error regular expression found in output. Regex=[: error:] 2.14 sec ; - [2020-06-10T22:24:17.631Z] 618/2035 Test #360: tutorial-dataframe-df013_InspectAnalysis ..........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.14 sec ; - [2020-06-10T22:24:17.631Z] 619/2035 Test #355: tutorial-dataframe-df007_snapshot .................................................................***Failed Error regular expression found in output. Regex=[: error:] 2.16 sec ; - [2020-06-10T22:24:18.146Z] 622/2035 Test #370: tutorial-dataframe-df023_aggregate ................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.75 sec . And 15 more. ### Failing tests:; - [projectroot.runtutorials.tutorial_dataframe_df008_createDataSetFromScratch](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86345/testReport/projectroot/runtutorials/tutorial_dataframe_df008_createDataSetFromScratch/); - [projectroot.runtutorials.tutorial_dataframe_df003_profiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86345/testReport/projectroot/runtutorials/tutorial_dataframe_df003_profile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-642302848:2201,Error,Error,2201,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-642302848,1,['Error'],['Error']
Availability,VSTTree .......................................................***Failed Error regular expression found in output. Regex=[: error:] 1.33 sec ; - [2020-06-10T22:20:28.893Z] 641/1992 Test #334: tutorial-dataframe-df010_trivialDataSource ........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.97 sec ; - [2020-06-10T22:20:31.348Z] 644/1992 Test #338: tutorial-dataframe-df015_LazyDataSource ...........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.89 sec ; - [2020-06-10T22:20:37.348Z] 652/1992 Test #344: tutorial-dataframe-df021_createTGraph .............................................................***Failed Error regular expression found in output. Regex=[: error:] 1.76 sec ; - [2020-06-10T22:20:39.777Z] 656/1992 Test #349: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 1.51 sec ; - [2020-06-10T22:20:40.053Z] 657/1992 Test #351: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 1.16 sec ; - [2020-06-10T22:20:40.981Z] 660/1992 Test #352: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 1.30 sec ; - [2020-06-10T22:20:42.149Z] 665/1992 Test #355: tutorial-dataframe-df102_NanoAODDimuonAnalysis ....................................................***Failed Error regular expression found in output. Regex=[: error:] 1.39 sec . And 3 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86347/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_da,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-642302168:1926,Error,Error,1926,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-642302168,1,['Error'],['Error']
Availability,VSTTree .......................................................***Failed Error regular expression found in output. Regex=[: error:] 6.50 sec ; - [2020-06-10T22:18:29.731Z] 494/2084 Test #375: tutorial-dataframe-df007_snapshot .................................................................***Failed Error regular expression found in output. Regex=[: error:] 7.59 sec ; - [2020-06-10T22:18:31.406Z] 497/2084 Test #378: tutorial-dataframe-df010_trivialDataSource ........................................................***Failed Error regular expression found in output. Regex=[: error:] 7.68 sec ; - [2020-06-10T22:18:33.817Z] 500/2084 Test #386: tutorial-dataframe-df020_helpers ..................................................................***Failed Error regular expression found in output. Regex=[: error:] 3.30 sec ; - [2020-06-10T22:18:34.603Z] 501/2084 Test #382: tutorial-dataframe-df016_vecOps ...................................................................***Failed Error regular expression found in output. Regex=[: error:] 5.64 sec . And 10 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86346/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86346/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_helpers](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86346/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_helpers/); - [projectroot.tree.ntuple.v7.test.gtest_tree_ntuple_v7_test_ntuple_rdf](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86346/testReport,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-642304262:2623,Error,Error,2623,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-642304262,1,['Error'],['Error']
Availability,Vector/LorentzVector.h:533:60: error: invalid use of incomplete type ‘class ROOT::Math::PtEtaPhiE4D&lt;double&gt;’ ; - [2021-08-27T11:16:53.217Z] /data/sftnight/workspace/root-pullrequests-build/root/math/genvector/inc/Math/GenVector/LorentzVector.h:669:21: error: ‘ROOT::Math::LorentzVector&lt;CoordSystem&gt;::fCoordinates’ has incomplete type ; - [2021-08-27T11:16:53.217Z] /data/sftnight/workspace/root-pullrequests-build/root/math/vecops/test/vecops_rvec.cxx:758:61: error: conversion from ‘LorentzVector&lt;ROOT::Math::PtEtaPhiM4D&lt;double&gt;&gt;’ to non-scalar type ‘LorentzVector&lt;ROOT::Math::PtEtaPhiE4D&lt;double&gt;&gt;’ requested ; - [2021-08-27T11:16:53.217Z] /data/sftnight/workspace/root-pullrequests-build/root/math/vecops/test/vecops_rvec.cxx:759:63: error: no match for ‘operator/’ (operand types are ‘const PtEtaPhiEVector’ {aka ‘const ROOT::Math::LorentzVector&lt;ROOT::Math::PtEtaPhiE4D&lt;double&gt; &gt;’} and ‘int’) ; - [2021-08-27T11:16:53.477Z] /data/sftnight/workspace/root-pullrequests-build/root/math/vecops/test/vecops_rvec.cxx:41:25: error: ‘const class ROOT::Math::LorentzVector&lt;ROOT::Math::PtEtaPhiM4D&lt;double&gt; &gt;’ has no member named ‘size’ ; - [2021-08-27T11:16:53.477Z] /data/sftnight/workspace/root-pullrequests-build/root/math/vecops/test/vecops_rvec.cxx:42:25: error: ‘const class ROOT::Math::LorentzVector&lt;ROOT::Math::PtEtaPhiE4D&lt;double&gt; &gt;’ has no member named ‘size’ ; - [2021-08-27T11:16:53.477Z] /data/sftnight/workspace/root-pullrequests-build/root/math/vecops/test/vecops_rvec.cxx:45:18: error: no match for ‘operator[]’ (operand types are ‘const ROOT::Math::LorentzVector&lt;ROOT::Math::PtEtaPhiM4D&lt;double&gt; &gt;’ and ‘unsigned int’) ; - [2021-08-27T11:16:53.477Z] /data/sftnight/workspace/root-pullrequests-build/root/math/vecops/test/vecops_rvec.cxx:45:24: error: no match for ‘operator[]’ (operand types are ‘const ROOT::Math::LorentzVector&lt;ROOT::Math::PtEtaPhiE4D&lt;double&gt; &gt;’ and ‘unsigned int’) . And 4 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8903#issuecomment-907127781:1896,error,error,1896,https://root.cern,https://github.com/root-project/root/pull/8903#issuecomment-907127781,4,['error'],['error']
Availability,Very nice upgrade of the code. This paves the way for a robust and flexible way of using data sources different from ROOT trees.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/768#issuecomment-315183515:56,robust,robust,56,https://root.cern,https://github.com/root-project/root/pull/768#issuecomment-315183515,1,['robust'],['robust']
Availability,Viewer3D.h TVirtualX.h ROOT/RDirectoryEntry.hxx ROOT/RIndexIter.hxx strlcpy.h snprintf.h strtok.h root_std_complex.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TMacOSXSystem.h TUnixSystem.h /tmp/workspace/src/core/base/inc/LinkDef.h; 1.	<eof> parser at end of file; 2.	/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/ranges_unique_copy.h:51:25: serializing 'std::ranges::__unique_copy::__fn::__get_algo_tag'; Subprocess aborted; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; ```; @vgvassilev FYI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12629#issuecomment-1499102403:11379,Error,Error,11379,https://root.cern,https://github.com/root-project/root/pull/12629#issuecomment-1499102403,2,['Error'],['Error']
Availability,"Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xtree(1933,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\Mem2Reg.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-09-27T11:13:15.619Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility(66,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\LoopExtractor.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] ; - [2022-09-27T11:13:15.619Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\tuple(327,32): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\LCSSA.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-09-27T11:13:15.619Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\atomic(2140,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\LoopUnroll.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-09-27T11:13:16.354Z] C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(700,5): error MSB8071: Cannot parse tool output 'C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Endian.h(225,1): fatal error C1060: compiler is out of heap sp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11285#issuecomment-1259354812:2975,error,error,2975,https://root.cern,https://github.com/root-project/root/pull/11285#issuecomment-1259354812,1,['error'],['error']
Availability,W.dir/src/glew.c.o -c /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:622:1: error: unknown type name ‘PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC’ ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:623:1: error: unknown type name ‘PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC’ ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:624:1: error: unknown type name ‘PFNGLSPECIALIZESHADERPROC’ ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:638:1: error: unknown type name ‘PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC’ ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:639:1: error: unknown type name ‘PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC’ ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:640:1: error: unknown type name ‘PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC’ ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:641:1: error: unknown type name ‘PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC’ ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:698:1: error: unknown type name ‘PFNGLCOPYTEXTURELEVELSAPPLEPROC’ ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:718:1: error: unknown type name ‘PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC’ . And 235 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:8912:18: warning: ‘_glewInit_GL_VERSION_4_6’ declared ‘static’ but never defined [-Wunused-function] ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:8916:18: warning: ‘_glewInit_GL_AMD_framebuffer_sample_positions’ declared ‘static’ but never defined [-Wunused-function] ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:8931:18: warning: ‘_glewInit_GL_APPLE_copy_textu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4095#issuecomment-532666389:1301,error,error,1301,https://root.cern,https://github.com/root-project/root/pull/4095#issuecomment-532666389,1,['error'],['error']
Availability,"Wait, but what about:; ```; root [0] auto A = std::experimental::make_array(1,2,3);; ROOT_prompt_0:1:29: error: no member named 'make_array' in namespace 'std::experimental'; auto A = std::experimental::make_array(1,2,3);; ~~~~~~~~~~~~~~~~~~~^; root [1] . ```; we do have `make_array`? (https://en.cppreference.com/w/cpp/experimental/make_array); Am I missing something here again? @bellenot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10924#issuecomment-1177751404:105,error,error,105,https://root.cern,https://github.com/root-project/root/issues/10924#issuecomment-1177751404,1,['error'],['error']
Availability,"Warnings and errors are preexisting, Windows is bogus.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11700#issuecomment-1312763462:13,error,errors,13,https://root.cern,https://github.com/root-project/root/pull/11700#issuecomment-1312763462,1,['error'],['errors']
Availability,"Warnings and test failure are not related to this PR, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11393#issuecomment-1254661331:18,failure,failure,18,https://root.cern,https://github.com/root-project/root/pull/11393#issuecomment-1254661331,1,['failure'],['failure']
Availability,"We are getting the same error in a dummy PR: https://github.com/root-project/root/pull/7879#issuecomment-823543930 without any library changes, just the test. Is it possible the windows10/cxx14 machine is in a bad state? Maybe the test uncovered a latent issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7749#issuecomment-823554549:24,error,error,24,https://root.cern,https://github.com/root-project/root/pull/7749#issuecomment-823554549,1,['error'],['error']
Availability,"We currently have an issue on Windows, the master doesn't build due to our changes in `not_fn`. Could you clone roottest to verify that this fixes it? The error is:; ```; ""C:\build\night\LABEL\windows10\SPEC\default\build\ALL_BUILD.vcxproj"" (default target) (1) ->; ""C:\build\night\LABEL\windows10\SPEC\default\build\core\foundation\test\testNotFn.vcxproj"" (default target) (527) ->; (ClCompile target) -> ; C:\build\night\LABEL\windows10\SPEC\default\root\core\foundation\test\testNotFn.cxx(16): error C2039: 'not_fn': is not a member of 'std' ; ```; I don't know why this started to fail. Insights welcome!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3432#issuecomment-463941515:155,error,error,155,https://root.cern,https://github.com/root-project/root/pull/3432#issuecomment-463941515,2,['error'],['error']
Availability,"We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8048#issuecomment-829528569:151,avail,available,151,https://root.cern,https://github.com/root-project/root/issues/8048#issuecomment-829528569,4,['avail'],['available']
Availability,"We don't need the include of `tbb_config.h` at all, the other headers will pull the configuration in as needed and from where it is available",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8239#issuecomment-849407792:132,avail,available,132,https://root.cern,https://github.com/root-project/root/pull/8239#issuecomment-849407792,1,['avail'],['available']
Availability,"We don't want to change the spelling of the std types. The implementation can be in whatever namespace as long as it's different from the stdlib namespace (to cause linker errors if `std::foo` is passed to a ROOT-backport `std::foo`). I suppose that's still the case here, so: all good!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11311#issuecomment-1257528989:172,error,errors,172,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1257528989,1,['error'],['errors']
Availability,We get:; ```; 10:31:27 CMake Error at interpreter/cling/tools/plugins/clad/CMakeLists.txt:15 (list):; 10:31:27 list does not recognize sub-command JOIN; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2991#issuecomment-439337076:29,Error,Error,29,https://root.cern,https://github.com/root-project/root/pull/2991#issuecomment-439337076,1,['Error'],['Error']
Availability,"We have a `fail-on-missing` option. When that's enabled, it should fail if missing. We can enable it with `all=ON`, though. I think that now that several people made changes to the options, it's out of sync again with the available options.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5105#issuecomment-596629217:222,avail,available,222,https://root.cern,https://github.com/root-project/root/pull/5105#issuecomment-596629217,1,['avail'],['available']
Availability,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases.; For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]; - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216); - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log; ```; #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so; #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so; #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so; #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1940677735:239,error,error,239,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1940677735,2,"['error', 'failure']","['error', 'failures']"
Availability,"We just tried to replicate this on Summit today using the same toolchain as before, using both the latest and an older version of Celeritas, and we weren't able to replicate the error... so I guess this can be closed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162#issuecomment-1170926197:178,error,error,178,https://root.cern,https://github.com/root-project/root/issues/10162#issuecomment-1170926197,1,['error'],['error']
Availability,We need this to avoid build errors in `yoda` and test root master in CMSSW CXXModules integration builds,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4467#issuecomment-538276379:28,error,errors,28,https://root.cern,https://github.com/root-project/root/pull/4467#issuecomment-538276379,1,['error'],['errors']
Availability,"We need to stop relying on such hacks to deduce the types, because it will never work. If in the next version ICC decides to change the format of PRETTY_FUNCTION again, our code will become broken again. We need to use `typeid(T).name()` and then find a way to consistently demangle the name it returns, instead of trying to parse error messages.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1389#issuecomment-347652046:331,error,error,331,https://root.cern,https://github.com/root-project/root/pull/1389#issuecomment-347652046,1,['error'],['error']
Availability,"We saw builtin-xrootd as an internal library, not exposed to the users, and as ROOT doesn't need the Python bindings we have disabled them. I'd still prefer that if you need something from xrootd that ROOT doesn't use / need that you built xrootd yourself, and make that build available to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9967#issuecomment-1055299855:277,avail,available,277,https://root.cern,https://github.com/root-project/root/issues/9967#issuecomment-1055299855,1,['avail'],['available']
Availability,"We see more or less the same thing in dev4 now: ; Ironically the ""opt"" build gives more of an error message than the debug build; opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763; dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964#issuecomment-2003453893:94,error,error,94,https://root.cern,https://github.com/root-project/root/issues/14964#issuecomment-2003453893,1,['error'],['error']
Availability,"We seem to have two successful builds versus three infrastructure failures - so I suppose that's ""green"". Merging - thank you for your contribution!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/616#issuecomment-313012752:66,failure,failures,66,https://root.cern,https://github.com/root-project/root/pull/616#issuecomment-313012752,1,['failure'],['failures']
Availability,We shall be able to fix the usage in regular I/O and TTree (which is also broken) when using dictionary. The proper support in bare ROOT might be harder (the underlying size information is a bit harder to find and in some case might not be (yet?) available (top level vector of enums)).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16312#issuecomment-2332571646:247,avail,available,247,https://root.cern,https://github.com/root-project/root/issues/16312#issuecomment-2332571646,1,['avail'],['available']
Availability,We should get this merged - seems like an improvement already (despite the Fedora failure).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12295#issuecomment-1476581247:82,failure,failure,82,https://root.cern,https://github.com/root-project/root/pull/12295#issuecomment-1476581247,1,['failure'],['failure']
Availability,"We should probably be extra explicit and provide an empty `__all__` list attribute in our `__init__.py`. In principle, we could also raise an exception every time a user tries `from ROOT import *` (beware that we have this in our own test suite, so we *will* see errors)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14588#issuecomment-1926899762:263,error,errors,263,https://root.cern,https://github.com/root-project/root/pull/14588#issuecomment-1926899762,1,['error'],['errors']
Availability,"We still suffer from spurious failures, but none related to the change. The code of the PR looks good to me, modulo some formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13621#issuecomment-1711534158:30,failure,failures,30,https://root.cern,https://github.com/root-project/root/pull/13621#issuecomment-1711534158,1,['failure'],['failures']
Availability,"We want to avoid rebasing branches from forks altogether, and just use patches only. So once my PR to CPyCppyy is merged, these lines can be removed from the sync script. It's my fault that it didn't get merged yet. I still have to implement a unit test :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15151#issuecomment-2278395982:179,fault,fault,179,https://root.cern,https://github.com/root-project/root/pull/15151#issuecomment-2278395982,1,['fault'],['fault']
Availability,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16338#issuecomment-2370740723:38,error,error,38,https://root.cern,https://github.com/root-project/root/pull/16338#issuecomment-2370740723,1,['error'],['error']
Availability,Weird Jenkins pipeline failure again :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2904#issuecomment-435363512:23,failure,failure,23,https://root.cern,https://github.com/root-project/root/pull/2904#issuecomment-435363512,1,['failure'],['failure']
Availability,"Weird coincidence that the only test failure is in a test that uses TBufferMerger, but it should be completely unrelated to my changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7550#issuecomment-800980312:37,failure,failure,37,https://root.cern,https://github.com/root-project/root/pull/7550#issuecomment-800980312,1,['failure'],['failure']
Availability,"Weird errors, pretty much unrelated with the changes. I do not have them on my installation.; I'll try re-running.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3063#issuecomment-442871884:6,error,errors,6,https://root.cern,https://github.com/root-project/root/pull/3063#issuecomment-442871884,1,['error'],['errors']
Availability,"Weird, but on the Fedora 39 nightlies thre are other tests failing, like `tutorial-tmva-TMVA_CNN_Classification`. Are we sure that this is the same environment?. I don't see how the test failure in this PR can be related, because in the `import_load_libs` it doesn't do `import ROOT.Foo` or `from ROOT.Foo import ...`, which is the only case in which this PR changes the behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14098#issuecomment-1836136993:187,failure,failure,187,https://root.cern,https://github.com/root-project/root/pull/14098#issuecomment-1836136993,1,['failure'],['failure']
Availability,"Well I believe you've found a bug, my bad! And thanks for reporting!; Indeed the expected behaviour is that the option should *quietly* turn OFF itself if pyspark can't be found or one of its dependencies (like Java) are not present. At least, this is the expected behaviour when `fail-on-missing` is not enabled, like in your case (it must be explicitly enabled with `-Dfail-on-missing=ON`). The error you see should happen only when `fail-on-missing` is ON. . I'll upload a PR very soon and you can tell me if that fixes the error you see :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7406#issuecomment-793570847:397,error,error,397,https://root.cern,https://github.com/root-project/root/pull/7406#issuecomment-793570847,2,['error'],['error']
Availability,"Well looking at the debug logs, all failed jobs die after ""kXR_protocol"" and before "" and before ""Sending out kXR_login request"". I haven't been able to download logs from too many successful jobs. But I have three - two reading from RAL and one reading in LAPP. I give a link to the log files and the last DEBUG line of the failed jobs and the same line plus the next for the successful jobs. So perhaps a question of what is happening in the code between these two points?. see you, RD. Successful RAL:. https://bigpanda.cern.ch//media/filebrowser/667e8363-d9bb-4ebd-800f-79d3495d1b3a/panda/tarball_PandaJob_4925629005_RAL/payload.stdout. [2020-12-18 14:20:13.919081 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400); [2020-12-18 14:20:13.919352 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request, username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=tatls002-2010227.0-lcg2237.gridpp.rl.ac.uk&xrd.rn=v4.10.0, dual-stack: false, private IPv4: true, private IPv6: false. Successful UK WATERLOO:. https://bigpanda.cern.ch//media/filebrowser/772fff72-3e22-499f-8a3f-aa8956ea5636/panda/tarball_PandaJob_4926186410_RAL/payload.stdout. [2020-12-19 00:45:02.375203 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400); [2020-12-19 00:45:02.375430 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request, username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=tatls002-2013477.0-lcg2259.gridpp.rl.ac.uk&xrd.rn=v4.10.0, dual-stack: false, private IPv4: true, private IPv6: false. Successful IN2P3 LAPP_LAKE. https://bigpanda.cern.ch//media/filebrowser/f9695015-c110-4e2e-9c62-d56eade824f8/panda/tarball_PandaJob_4926136184_IN2P3-LAPP_LAKE/payload.stdout. [2020-12-19 02:08:57.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758062082:153,down,download,153,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758062082,3,"['down', 'echo']","['download', 'echo']"
Availability,Well one more merging error to go it seems... let's wait with merging until Jenkins is back from the dead.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1091#issuecomment-333485284:22,error,error,22,https://root.cern,https://github.com/root-project/root/pull/1091#issuecomment-333485284,1,['error'],['error']
Availability,"Well, I can shed some light on how the Xrootd client works (as I'm taking care of that part of xrootd):. - `succesful parsing of kXR_protol` comes from https://github.com/xrootd/xrootd/blob/93871f8241e478a308c8e722fd99aeaa08ff6459/src/XrdCl/XrdClXRootDTransport.cc#L1546-L1552, it means we successfully parsed the server response to `kXR_protocol` and this is the end of `ProcessProtocolResp` routine; - the next step is to generate the initial `kXR_login` request; https://github.com/xrootd/xrootd/blob/stable-4.12.x/src/XrdCl/XrdClXRootDTransport.cc#L441-L454; - if there is a problem in the xrootd client it will be in the `GenerateLogIn` method as by the end of that one the `Sending out kXR_login request ...` log line is printed: https://github.com/xrootd/xrootd/blob/stable-4.12.x/src/XrdCl/XrdClXRootDTransport.cc#L1711-L1716. That said, there's really not much happening in `GenerateLogIn` but I will inspect the code carefully once again ... Do we have the machine name that was hosting the job at CERN?. P. S. Just in case I will ping Andy so he can have a look at, maybe he will come up with some good explanation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758205094:1041,ping,ping,1041,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758205094,1,['ping'],['ping']
Availability,"Well, I wouldn't say I have identified solutions, I was hoping you would judge that, which is why I first opened an issue to discuss it. Anyway, [here](https://github.com/root-project/root/pull/9260) is a pull request draft which comprises all the changes mentioned here. I was able to apply this patch to the current stable release and successfully build it against glibc. With musl there are still some other errors to be solved - I will try to address these later when I have the time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9253#issuecomment-963518448:411,error,errors,411,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963518448,1,['error'],['errors']
Availability,"Well, `dataframe_simple` has a problem: `RLoopManager::Run` prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to std::terminate. It would be enough to add a generic `ROOT_EXPECT_STDERR` to the other macros to make these kind of printouts easily checkable. @hageboeck @vgvassilev @reikdas what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5591#issuecomment-641453675:103,Error,Error,103,https://root.cern,https://github.com/root-project/root/pull/5591#issuecomment-641453675,2,['Error'],['Error']
Availability,"Well, actually it was less work than I thought.; I implemented now all the additions, changes and suggestions from @lmoneta. I used now std::vector everywhere it's features are useful. For the rest I stayed with using arrays to stay similar to all other TGraph objects. I moved the functions GetPointX, GetPointY, SetPointX, SetPointY and GetObjectInfo to the TGraph class because they apply to any TGraph object and only were in my custom class cause I could not implement them in TGraph without using a custom Root installation. I replaced the funtion SetNErrorDimensions by the functions AddYError and DeleteYError as proposed by @lmoneta. Since I think the meaning of ""dimension"" might not be 100% clear, I exchanged it to a term claryfing that it corresponds to different y errors. Besides that I implemented some further features and fixed a memory leak in the function PaintGraphMultiErrors in the TGraphPainter class. I also added a test macro testing the most critical features like streaming the class, adding / deleting points and y errors and the summation of y errors for fitting with different methods.; Furthermore, I added a small tutorial macro that shows how to use the basic functionalities of the class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-559211358:779,error,errors,779,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-559211358,3,['error'],['errors']
Availability,"Well, including headers in extern ""C"" is considered as a bad practice. Such inclusion becomes a warning/error for modules builds. I'd rather reduce such cases (esp when they are no op) than keep piling them up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1570#issuecomment-361864049:104,error,error,104,https://root.cern,https://github.com/root-project/root/pull/1570#issuecomment-361864049,1,['error'],['error']
Availability,"Well, now I uninstalled it as Axel requested it. You will not see these errors on the PR anymore, but roottest is still broken if ROOT is installed. It needs to use the ROOT being tested, not the installed one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3940#issuecomment-502815892:72,error,errors,72,https://root.cern,https://github.com/root-project/root/pull/3940#issuecomment-502815892,1,['error'],['errors']
Availability,"Well, one thing that is clear is that this problem seems to be associated with specific sites. For my 'test' job:. [test job](https://bigpanda.cern.ch/task/23578674/). The sites that are successful either have local reading, or they use xrootd without problems. The latter are: ; SWT2_CPB; IN2P3-LPSC_LAKE; RAL. For the failures, these are all just xrootd problems, at sites:; IN2P3-CPPM; CERN-T0; TOKYO; BNL. So I would suspect some difference in the xrootd installation between these two sites. (I personally have no idea how to check this.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-747328346:320,failure,failures,320,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-747328346,1,['failure'],['failures']
Availability,"Well, the failures are not related to the PR itself as it seems. Let's try later when the problems are fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4128#issuecomment-515973075:10,failure,failures,10,https://root.cern,https://github.com/root-project/root/pull/4128#issuecomment-515973075,1,['failure'],['failures']
Availability,"Well, we have other PRs tagged [WIP] ... so I guess that's fine.. I just do no like the idea of having clearly faulty code in a PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6469#issuecomment-704322903:111,fault,faulty,111,https://root.cern,https://github.com/root-project/root/pull/6469#issuecomment-704322903,1,['fault'],['faulty']
Availability,"Well... I had to change one Python file because of type hints emitting an error in Python 2. In any case it was a small change, so I don't think it should be fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13606#issuecomment-2105974857:74,error,error,74,https://root.cern,https://github.com/root-project/root/pull/13606#issuecomment-2105974857,1,['error'],['error']
Availability,"What I can try is to remove ; ```; #ifdef WIN32; #include ""Windows4Root.h""; #endif; ```; Maybe this code is redundant?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4095#issuecomment-585678811:108,redundant,redundant,108,https://root.cern,https://github.com/root-project/root/pull/4095#issuecomment-585678811,1,['redundant'],['redundant']
Availability,What about Travis CI failure?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3043#issuecomment-489625973:21,failure,failure,21,https://root.cern,https://github.com/root-project/root/pull/3043#issuecomment-489625973,1,['failure'],['failure']
Availability,"What about first deprecating it?. ```cpp; [[deprecated(""don't use, passed object gets ignored"")]] TList(TObject *) : fAscending(kTRUE) {}; ```. `explicit` will give a compile error. And really, if you're faced with a compile error, you'd better do the right thing: Use the normal default ctor. So let's first deprecate it and then remove it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15451#issuecomment-2100753744:175,error,error,175,https://root.cern,https://github.com/root-project/root/pull/15451#issuecomment-2100753744,2,['error'],['error']
Availability,What about we do this for `gnuinstall` as proposed by @stephanlachnit and error out if `gnuinstall` is passed on Windows?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10985#issuecomment-1189923407:74,error,error,74,https://root.cern,https://github.com/root-project/root/issues/10985#issuecomment-1189923407,1,['error'],['error']
Availability,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:; * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`.; * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6432#issuecomment-2001956688:229,avail,available,229,https://root.cern,https://github.com/root-project/root/issues/6432#issuecomment-2001956688,1,['avail'],['available']
Availability,"What commands did you type exactly? And what error do you get, if any?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11819#issuecomment-1334891567:45,error,error,45,https://root.cern,https://github.com/root-project/root/issues/11819#issuecomment-1334891567,1,['error'],['error']
Availability,What does the build error message say? I can't read it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7132#issuecomment-779824754:20,error,error,20,https://root.cern,https://github.com/root-project/root/pull/7132#issuecomment-779824754,1,['error'],['error']
Availability,What is the error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7132#issuecomment-780759661:12,error,error,12,https://root.cern,https://github.com/root-project/root/pull/7132#issuecomment-780759661,1,['error'],['error']
Availability,What is the error? I can't open the console output,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7132#issuecomment-778178791:12,error,error,12,https://root.cern,https://github.com/root-project/root/pull/7132#issuecomment-778178791,1,['error'],['error']
Availability,What is the stack trace of the hadd failure?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6016#issuecomment-656286995:36,failure,failure,36,https://root.cern,https://github.com/root-project/root/pull/6016#issuecomment-656286995,1,['failure'],['failure']
Availability,What is this error in readTotemNtuple? :eyes:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13090#issuecomment-1658624725:13,error,error,13,https://root.cern,https://github.com/root-project/root/pull/13090#issuecomment-1658624725,1,['error'],['error']
Availability,"What version of OpenSSL is being used, is it the builtin one? Have you installed the CERN SSL certificates? (note `ErrParseBuffer: unknown CA: cannot verify server certificate` in the error message). Do you have a user grid certificate setup? Is Kerberos actually installed? Do you have an active Kerberos ticket while running the test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12231#issuecomment-1420328372:184,error,error,184,https://root.cern,https://github.com/root-project/root/issues/12231#issuecomment-1420328372,1,['error'],['error']
Availability,"What we (you, the ROOT team, the users) need to discuss is whether we can deprecate TPRegex altogether, given that std::regex is now (since C++17 is required, as a side effect of kicking out old compilers) guaranteed to be available. Or reimplement it using std:: regex. Thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13771#issuecomment-1742430781:223,avail,available,223,https://root.cern,https://github.com/root-project/root/pull/13771#issuecomment-1742430781,1,['avail'],['available']
Availability,What we really need is just a tarball with the source. There is no need to build anything on your side.; I believe Spack uses this URL `https://root.cern/download/root_v6.16.00.source.tar.gz` as a template to download other versions of the source from the same location. https://github.com/star-bnl/star-spack/blob/main/packages/root/package.py#L16. Maybe there is trick to tell Spack to download the archive from GitHub instead but I am not very familiar with how to achieve that with minimal changes to the current package config. A human friendly tag would still help to pick up these accepted changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9010#issuecomment-925226499:154,down,download,154,https://root.cern,https://github.com/root-project/root/pull/9010#issuecomment-925226499,3,['down'],['download']
Availability,"What would be the downside of renaming ROOT's `find_package` (say to `ROOT_FIND_PACKAGE`) and using that throughout ROOT? Would there be e.g. any side-effects for say package X used by ROOT which depends on package Y, which ROOT has already find, but now package X will find a different one? And what about users configuring against ROOT, what would be the side-effect they see? pulling @amadio in for opinions and expertise!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8633#issuecomment-878259600:18,down,downside,18,https://root.cern,https://github.com/root-project/root/issues/8633#issuecomment-878259600,1,['down'],['downside']
Availability,What's the issue that gets fixed by this commit? Can you add the error messages?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12912#issuecomment-1568608064:65,error,error,65,https://root.cern,https://github.com/root-project/root/pull/12912#issuecomment-1568608064,1,['error'],['error']
Availability,"When I do `bin/root.exe -q -l` with this patch in release build, unsetting LD_LIBRARY_PATH and DYLD_LIBRARY_PATH, I get this error:; ```; [yuka@yuka-arch module-release]$ rm -rf /tmp/*; [yuka@yuka-arch module-release]$ source bin/thisroot.sh; [yuka@yuka-arch module-release]$ bin/root.exe -q -l; ; [yuka@yuka-arch module-release]$ unset DYLD_LIBRARY_PATH; [yuka@yuka-arch module-release]$ unset LD_LIBRARY_PATH; [yuka@yuka-arch module-release]$ bin/root.exe -q -l; input_line_1:1:10: remark: building module 'stl' as '/tmp/org.llvm.clang.yuka/ModuleCache/stl.pcm' [-Rmodule-build]; #include <new>; ^; input_line_1:1:10: remark: finished building module 'stl' [-Rmodule-build]; /home/yuka/module-release/include/libc.modulemap:1:8: fatal error: module 'libc' is defined in both '/tmp/org.llvm.clang.yuka/ModuleCache/libc.pcm' and '/home/yuka/module-release/lib/libc.pcm'; module ""libc"" [system] {; ^; Error in <TCling::LoadModule>: Module libc failed to load; Error in <TCling::LoadModule>: Module libc not found!; Error in <TCling::LoadModule>: Module ROOT_Foundation_C failed to load; Error in <TCling::LoadModule>: Module ROOT_Foundation_C not found!; Error in <TCling::LoadModule>: Module ROOT_Config failed to load; Error in <TCling::LoadModule>: Module ROOT_Config not found!; Error in <TCling::LoadModule>: Module ROOT_Foundation_Stage1_NoRTTI failed to load; Error in <TCling::LoadModule>: Module ROOT_Foundation_Stage1_NoRTTI not found!; terminate called after throwing an instance of 'std::runtime_error'; what(): >>> Interpreter compilation error:; Unexpected end of file; Aborted (core dumped); ```; As shown, Clang is still trying to generate implicit modules in `/tmp/org.llvm.clang.yuka/ModuleCache/`. This patch is adding `/home/yuka/module-release/lib:.:/home/yuka/module-release/lib:/usr/lib/tls/haswell/x86_64:/usr/lib/tls/haswell:/usr/lib/tls/x86_64:/usr/lib/tls:/usr/lib/haswell/x86_64:/usr/lib/haswell:/usr/lib/x86_64:/usr/lib` to TCling path, so I guess the expected result is im",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1761#issuecomment-377492896:125,error,error,125,https://root.cern,https://github.com/root-project/root/pull/1761#issuecomment-377492896,2,['error'],['error']
Availability,"When building on my GPU machine , using -Dcuda=On, I am getting this cuda errors in compiling:; ```; /home/moneta/rootgit/root_dev4/roofit/batchcompute/src/RooBatchCompute.cu(43): error: namespace ""std"" has no member ""transform""; ```; and ; ```; /home/moneta/rootgit/root_dev4/roofit/batchcompute/src/RooMath.cxx(284): error: A __device__ variable cannot be marked constexpr. /home/moneta/rootgit/root_dev4/roofit/batchcompute/src/RooMath.cxx(294): error: A __device__ variable cannot be marked constexpr. /home/moneta/rootgit/root_dev4/roofit/batchcompute/src/RooMath.cxx(304): error: A __device__ variable cannot be marked constexpr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9004#issuecomment-972703882:74,error,errors,74,https://root.cern,https://github.com/root-project/root/pull/9004#issuecomment-972703882,5,['error'],"['error', 'errors']"
Availability,"When building with gcc7, I am getting:; ```; In file included from /local2/scratch/pcanal/build/bin/../lib/gcc/x86_64-pc-linux-gnu/7.0.1/../../../../include/c++/7.0.1/bits/node_handle.h:39:; /local2/scratch/pcanal/build/bin/../lib/gcc/x86_64-pc-linux-gnu/7.0.1/../../../../include/c++/7.0.1/optional:1032:27: error: use of class template 'optional' requires template arguments; template <typename _Tp> optional(_Tp) -> optional<_Tp>;; ^; /local2/scratch/pcanal/build/bin/../lib/gcc/x86_64-pc-linux-gnu/7.0.1/../../../../include/c++/7.0.1/optional:451:11: note: template is declared here; class optional; ^; /local2/scratch/pcanal/build/bin/../lib/gcc/x86_64-pc-linux-gnu/7.0.1/../../../../include/c++/7.0.1/optional:1032:40: error: expected ';' at end of declaration; template <typename _Tp> optional(_Tp) -> optional<_Tp>;; ^; /local2/scratch/pcanal/build/bin/../lib/gcc/x86_64-pc-linux-gnu/7.0.1/../../../../include/c++/7.0.1/optional:1032:41: error: cannot use arrow operator on a type; template <typename _Tp> optional(_Tp) -> optional<_Tp>;; ^; Error: ../rootcling_stage1/src/rootcling_stage1: Linkdef compilation failure; ```; which I think might means that cling was not set to c++17 and/or our clang is too old ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/522#issuecomment-297842025:309,error,error,309,https://root.cern,https://github.com/root-project/root/pull/522#issuecomment-297842025,5,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"When there is a single server, it can become a bottleneck. What we did was to internally configure the server as a small cluster, with each XRootD daemon serving a subset of the available disks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12621#issuecomment-1926444072:178,avail,available,178,https://root.cern,https://github.com/root-project/root/issues/12621#issuecomment-1926444072,1,['avail'],['available']
Availability,"When trying to build with `-Dbuiltin_llvm=OFF` on Nixpkgs on NixOS (x86_64-linux),. ```; -- Configuring done; CMake Error at /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:735 (add_dependencies):; The dependency target ""install-clang"" of target ""install-clang++"" does not; exist.; ```. <details>; <summary>Full build log</summary>; <pre wrap=true>; building '/nix/store/8xsj5zq00fkbndl1zzjngmxj3hhi51hd-root-6.28.00.drv'...; unpacking sources; unpacking source archive /nix/store/y5m4pr7c6vgjr34zqdz7wv819ln1mkj0-source; source root is source; patching sources; applying patch /nix/store/qljayx9yxgyx2xnf81b3rzzi99azd5d6-sw_vers.patch; patching file cmake/modules/SetUpMacOS.cmake; Hunk #1 succeeded at 8 with fuzz 1 (offset -20 lines).; Hunk #2 succeeded at 30 (offset -20 lines).; Hunk #3 succeeded at 74 (offset -34 lines).; patching file config/root-config.in; Hunk #1 succeeded at 313 (offset 1 line).; Hunk #2 succeeded at 373 (offset 1 line).; configuring; patching script interpreter paths in build/unix/; build/unix/makedistsrc.sh: interpreter directive changed from ""#! /bin/sh"" to ""/nix/store/qqa28hmysc23yy081d178jfd9a1yk8aw-bash-5.2-p15/bin/sh""; build/unix/coreteam.sh: interpreter directive changed from ""#!/bin/sh"" to ""/nix/store/qqa28hmysc23yy081d178jfd9a1yk8aw-bash-5.2-p15/bin/sh""; build/unix/compiledata.sh: interpreter directive changed from ""#!/usr/bin/env bash"" to ""/nix/store/qqa28hmysc23yy081d178jfd9a1yk8aw-bash-5.2-p15/bin/bash""; build/unix/makepchinput.py: interpreter directive changed from ""#! /usr/bin/env python"" to ""/nix/store/sp5x6s8n36gjlwck74xhj1i61p66vcpa-python3-3.10.9/bin/python""; build/unix/rootmapcat.py: interpreter directive changed from ""#! /usr/bin/env python"" to ""/nix/store/sp5x6s8n36gjlwck74xhj1i61p66vcpa-python3-3.10.9/bin/python""; build/unix/makereleasenotes.sh: interpreter directive changed from ""#! /bin/sh"" to ""/nix/store/qqa28hmysc23yy081d178jfd9a1yk8aw-bash-5.2-p15/bin/sh""; build/unix/pandoc-jira.sh: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:116,Error,Error,116,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,1,['Error'],['Error']
Availability,"When trying to run the test I get. Processing create_makeproject_examples.C...; Error in TStreamerInfo::Build: The class ""SillyStlEvent"" is interpreted and for its the data member ""foo"", we do not have a dictionary for the collection ""bitset<16>"", we will not be able to read or write this data member.; (int) 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/61#issuecomment-98204486:80,Error,Error,80,https://root.cern,https://github.com/root-project/root/pull/61#issuecomment-98204486,1,['Error'],['Error']
Availability,Where have you downloaded Starlight? Or where did you run `svn co http://starlight.hepforge.org/svn/trunk`? In which directory?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11626#issuecomment-1288573768:15,down,downloaded,15,https://root.cern,https://github.com/root-project/root/issues/11626#issuecomment-1288573768,1,['down'],['downloaded']
Availability,"Which parameter/feature of root rules that?. ```; $ root-config --features; cxx17 asimage builtin_clang builtin_llvm dataframe davix exceptions fortran gdml gsl_shared gviz http imt mathmore mlp minuit2 opengl pyroot qt5web roofit webgui root7 shared soversion ssl tmva tmva-cpu tmva-pymva spectrum unuran x11 xml; ```; If this is libafterimage, then it is compiled to support gif:; ```; [I] media-libs/libafterimage; Available versions: 1.20-r2 1.20-r3 {+X examples gif jpeg nls opengl png +shaping shm static-libs svg tiff truetype CPU_FLAGS_X86=""mmx""}; Installed versions: 1.20-r3(03:15:10 AM 01/05/2021)(X gif jpeg nls png shaping svg tiff truetype -examples -shm -static-libs CPU_FLAGS_X86=""mmx""); Homepage: http://www.afterstep.org/afterimage/index.php; Description: Afterstep's standalone generic image manipulation library; ```; Can you also tell me which commit is about to fix it/do what you wrote above?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6985#issuecomment-759096761:418,Avail,Available,418,https://root.cern,https://github.com/root-project/root/issues/6985#issuecomment-759096761,1,['Avail'],['Available']
Availability,"While ROOT master is now building successfully for us, there are some downstream packages that suffer from this change. They can probably be fixed by exporting the ROOT_INCLUDE_PATH, but to better understand where things go wrong I made a very simple repeater. I think on any centos7 with the sft cvmfs this should work; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/CMake/3.20.0/x86_64-centos7-gcc10-dbg/CMake-env.sh; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc10-dbg/ROOT-env.sh. git clone https://gitlab.cern.ch/sailer/root_repeater.git; cd root_repeater; mkdir build; cd build. cmake -D nlohmann_json_DIR=$JSONMCPP__HOME/lib64/cmake/nlohmann_json \; -D Python_ROOT_DIR=$PYTHON__HOME \; -D Vc_DIR=$VC__HOME/lib/cmake/Vc \; ..; make; ./RunTest; ```. Just linking an executable to ROOTTPython (https://gitlab.cern.ch/sailer/root_repeater/-/blob/master/CMakeLists.txt#L17); leads to an error like this; ```; ./RunTest ; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc10-dbg/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:70,down,downstream,70,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,2,"['down', 'error']","['downstream', 'error']"
Availability,"While fixing and old bug I used TError for the early termination of the function, and clang-tidy is not picking that up... Should I unnecesarily return some double as an error code or should I just ignore clang tidy? @lmoneta @Axel-Naumann ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2723#issuecomment-503995574:170,error,error,170,https://root.cern,https://github.com/root-project/root/pull/2723#issuecomment-503995574,1,['error'],['error']
Availability,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message.; 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests.; 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well.; 5. Commit 5 is again a minor refactoring to reduce some duplicated code.; 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion.; 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format.; 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15797#issuecomment-2183530657:224,error,error,224,https://root.cern,https://github.com/root-project/root/pull/15797#issuecomment-2183530657,3,['error'],"['error', 'errors']"
Availability,"While looking into other stuff yesterday, I think I came across the code that throws this error. If I understood correctly, this happens if you have a static ASan library linked into the executable (as we do for ROOT binaries) and then load a shared runtime library, for example via `LD_PRELOAD`. So what we likely have to do in here is figuring out if `LD_PRELOAD` is maybe set too aggressively and actually not needed / hurting for the tests listed above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10017#issuecomment-1064968595:90,error,error,90,https://root.cern,https://github.com/root-project/root/issues/10017#issuecomment-1064968595,1,['error'],['error']
Availability,"While looking into this again, I locally saw one test execution that had; ```; !!!ERROR: Transaction for file: /home/jhahnfel/ROOT/build-asserts-clang/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so has already been unloaded; !!!ERROR: Transaction for file: /home/jhahnfel/ROOT/build-asserts-clang/core/metacling/test/concurrent_load_unload_one_lib_per_thread_2_cpp.so has already been unloaded; ```; at the very end after teardown, when all tests were already marked as `PASSED`. Not sure if relevant, thought I'd post it here...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14121#issuecomment-1864125646:82,ERROR,ERROR,82,https://root.cern,https://github.com/root-project/root/issues/14121#issuecomment-1864125646,2,['ERROR'],['ERROR']
Availability,Why did the hash of the file in lcgpackage change even-though the xrootd version did not change? (i.e. Didn't we migrate away from downloading from github to avoid exactly this kind of problem?),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11106#issuecomment-1204549271:131,down,downloading,131,https://root.cern,https://github.com/root-project/root/pull/11106#issuecomment-1204549271,1,['down'],['downloading']
Availability,Why is `cling::printValue` not available in centos7/gcc7? -> https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28148/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/. ```; test_STLVector (pretty_printing.PrettyPrinting) ... vector<float>: ; input_line_39:2:36: error: no matching function for call to 'printValue'; *((std::string*)0x7ffe137c9f60) = cling::printValue((vector<float>*)0x136cb680);; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-393044743:31,avail,available,31,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-393044743,2,"['avail', 'error']","['available', 'error']"
Availability,Will make more pull requests to fully get rid of the E501 error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11010#issuecomment-1190864241:58,error,error,58,https://root.cern,https://github.com/root-project/root/pull/11010#issuecomment-1190864241,1,['error'],['error']
Availability,Will merge once this PR's windows build is fixed and the current failures in master are sorted out. I want to be able to see the performance effect of *this* PR (instead of the new shared library search).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8804#issuecomment-895591250:65,failure,failures,65,https://root.cern,https://github.com/root-project/root/pull/8804#issuecomment-895591250,1,['failure'],['failures']
Availability,"Will_Fail is the (now) expected result and lead to a 'succesfull' run of the test. What is ""new"" is that there is one platform where this failure is now a segmentation fault of sort.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15481#issuecomment-2108706082:138,failure,failure,138,https://root.cern,https://github.com/root-project/root/issues/15481#issuecomment-2108706082,2,"['failure', 'fault']","['failure', 'fault']"
Availability,Windows 10 x64 failures are unrelated:; ```; TEST FAILURES:; 1330:roottest-cling-template-runtemplatefriend; 1736:roottest-root-io-transient-base-WriteFile; 1737:roottest-root-io-transient-base-hadd_autoload; 1785:roottest-root-meta-loadernotapp-build; 1786:roottest-root-meta-loadernotapp; 2090:roottest-root-meta-tclass-issue-6840-emulatePairs-build; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15222#issuecomment-2052602443:15,failure,failures,15,https://root.cern,https://github.com/root-project/root/pull/15222#issuecomment-2052602443,2,"['FAILURE', 'failure']","['FAILURES', 'failures']"
Availability,Windows and most of other platforms are fine - merging.; Error on `mac1015/cxx17` has nothing to do with PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6739#issuecomment-720637638:57,Error,Error,57,https://root.cern,https://github.com/root-project/root/pull/6739#issuecomment-720637638,1,['Error'],['Error']
Availability,Windows error is due to a debug setup (temporary and unrelated);; CentOS7 issue is due to https://cern.service-now.com/service-portal?id=outage&n=OTG0057125,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5864#issuecomment-643459782:8,error,error,8,https://root.cern,https://github.com/root-project/root/pull/5864#issuecomment-643459782,2,"['error', 'outage']","['error', 'outage']"
Availability,"Windows error seems spurious, and we have a Jenkins / GH communication problem...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6826#issuecomment-729093178:8,error,error,8,https://root.cern,https://github.com/root-project/root/pull/6826#issuecomment-729093178,1,['error'],['error']
Availability,Windows errors seem unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11702#issuecomment-1313841820:8,error,errors,8,https://root.cern,https://github.com/root-project/root/pull/11702#issuecomment-1313841820,1,['error'],['errors']
Availability,"Windows fails on git lock file:; ```; 16:50:42 ERROR: Execution failed; 16:50:42 hudson.plugins.git.GitException: Command ""git checkout -f 326c0d60fa940ea4b743630e99937bf4209b45f3"" returned status code 128:; 16:50:42 stdout: ; 16:50:42 stderr: fatal: Unable to create 'C:/build/workspace/root-pullrequests-build/root/.git/index.lock': File exists.; 16:50:42 ; 16:50:42 Another git process seems to be running in this repository, e.g.; 16:50:42 an editor opened by 'git commit'. Please make sure all processes; 16:50:42 are terminated then try again. If it still fails, a git process; 16:50:42 may have crashed in this repository earlier:; 16:50:42 remove the file manually to continue.; 16:50:42 ; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2072#issuecomment-391376969:47,ERROR,ERROR,47,https://root.cern,https://github.com/root-project/root/pull/2072#issuecomment-391376969,1,['ERROR'],['ERROR']
Availability,Windows failure due to CI bug / windows roottest. Merging; we can adjust the patch once we have the differential in llvm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7336#issuecomment-789547940:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/7336#issuecomment-789547940,1,['failure'],['failure']
Availability,Windows failure is a problem with the infrastructure,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4426#issuecomment-534982824:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/4426#issuecomment-534982824,1,['failure'],['failure']
Availability,Windows failure is infrastructure related. Merging. Thank you very much for your contribution!!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4649#issuecomment-561162296:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/4649#issuecomment-561162296,1,['failure'],['failure']
Availability,Windows failure is infrastructure. TMVA failure is unrelated. autocache failure requires an update to account for the caching improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2018#issuecomment-389625801:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/2018#issuecomment-389625801,3,['failure'],['failure']
Availability,Windows failure is infrastructure. processExecutorH1Test is preexisting. autocache needs an update to the reference file to reflect the improved behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2027#issuecomment-389832667:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/2027#issuecomment-389832667,1,['failure'],['failure']
Availability,"Windows failure is known and being worked on, Mac failures are unrelated. Merging this now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15011#issuecomment-2007378458:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/15011#issuecomment-2007378458,2,['failure'],"['failure', 'failures']"
Availability,Windows failure is not connected to my changes..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2737#issuecomment-426741097:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/2737#issuecomment-426741097,1,['failure'],['failure']
Availability,Windows failure is not related I think.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2023#issuecomment-389560764:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/2023#issuecomment-389560764,1,['failure'],['failure']
Availability,Windows failure is understood!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3896#issuecomment-499795576:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/3896#issuecomment-499795576,1,['failure'],['failure']
Availability,"Windows failure is unrelated, I finally got it right, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7920#issuecomment-823246174:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/7920#issuecomment-823246174,1,['failure'],['failure']
Availability,"Windows failure is unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7499#issuecomment-996011816:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/7499#issuecomment-996011816,1,['failure'],['failure']
Availability,Windows failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4435#issuecomment-535707018:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/4435#issuecomment-535707018,1,['failure'],['failure']
Availability,Windows failure seems unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11929#issuecomment-1358999434:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/11929#issuecomment-1358999434,1,['failure'],['failure']
Availability,"Windows failure was a git fetching error, not related to my changes:; ```; 13:51:59 > git config remote.origin.url http://root.cern/git/root.git # timeout=10; 13:52:30 Cleaning workspace; 13:52:30 > git rev-parse --verify HEAD # timeout=10; 13:53:05 Resetting working tree; 13:53:05 > git reset --hard # timeout=10; 14:03:09 ERROR: Timeout after 10 minutes; 14:03:22 ERROR: Error fetching remote repo 'origin'; 14:03:22 hudson.plugins.git.GitException: Failed to fetch from http://root.cern/git/root.git; 14:03:22 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:1000); 14:03:22 	at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1241); 14:03:22 	at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1301); 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:125); 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:93); 14:03:22 	at org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:80); 14:03:22 	at org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47); 14:03:22 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 14:03:22 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 14:03:22 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 14:03:22 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 14:03:22 	at java.lang.Thread.run(Thread.java:748); 14:03:22 Caused by: hudson.plugins.git.GitException: Command ""git reset --hard"" returned status code -1:; ```; Why is Jenkins trying to fetch from http://root.cern/git/root.git rather than from GitHub?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8197#issuecomment-843116543:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/8197#issuecomment-843116543,5,"['ERROR', 'Error', 'error', 'failure']","['ERROR', 'Error', 'error', 'failure']"
Availability,"Windows failures are unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6288#issuecomment-684889829:8,failure,failures,8,https://root.cern,https://github.com/root-project/root/pull/6288#issuecomment-684889829,1,['failure'],['failures']
Availability,Windows failures are unrelated. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11125#issuecomment-1351786454:8,failure,failures,8,https://root.cern,https://github.com/root-project/root/pull/11125#issuecomment-1351786454,1,['failure'],['failures']
Availability,Windows failures unrelated:; ```txt; TEST FAILURES:; 1330:roottest-cling-template-runtemplatefriend; 1736:roottest-root-io-transient-base-WriteFile; 1737:roottest-root-io-transient-base-hadd_autoload; 1785:roottest-root-meta-loadernotapp-build; 1786:roottest-root-meta-loadernotapp; 2090:roottest-root-meta-tclass-issue-6840-emulatePairs-build; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15180#issuecomment-2045811317:8,failure,failures,8,https://root.cern,https://github.com/root-project/root/pull/15180#issuecomment-2045811317,2,"['FAILURE', 'failure']","['FAILURES', 'failures']"
Availability,Windows is not happy with the new test. I'm not sure how windows handles errors/warnings. Here's how the warning message looks now:; ![image](https://github.com/root-project/root/assets/29475282/2ddaff21-56d4-410e-95ef-852d02ba4d76),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14645#issuecomment-1956072860:73,error,errors,73,https://root.cern,https://github.com/root-project/root/pull/14645#issuecomment-1956072860,1,['error'],['errors']
Availability,Windows machine was rebooted by IT while running the PR build. This PR passed on Windows and Linux before. I just dropped a single commit to not remove `-mfpmath=sse` from 32bit. I will just merge this as is.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3212#issuecomment-452612849:20,reboot,rebooted,20,https://root.cern,https://github.com/root-project/root/pull/3212#issuecomment-452612849,1,['reboot'],['rebooted']
Availability,"With #9342, JIT time for 10k RDF nodes is down from 33.5s to 12.4s, compared to 8.7s with `-O0`. On Grafana, it's 17s before versus 23s now:. ![Bildschirmfoto vom 2021-12-02 16-58-32](https://user-images.githubusercontent.com/1613332/144457487-c34e166b-179c-4a00-86f5-2c8d35a9857a.png). `perf diff` says:; ```; 0.24% +1.26% libCling.so [.] llvm::AttributeList::hasAttribute; 2.27% +1.22% libc-2.28.so [.] __memcmp_avx2_movbe; 1.76% -1.10% [unknown] [k] 0xffffffff9f603885; 0.03% +0.85% libCling.so [.] llvm::TargetLibraryInfoImpl::getLibFunc; 2.76% -0.84% libCling.so [.] (anonymous namespace)::DAGCombiner::AddToWorklist; 0.13% +0.78% libCling.so [.] llvm::Value::getValueName; 1.69% -0.63% libCling.so [.] clang::LookupResult::resolveKind; +0.56% libCling.so [.] AddReachableCodeToWorklist; +0.50% libCling.so [.] llvm::InstCombiner::run; +0.49% libCling.so [.] (anonymous namespace)::DeadMachineInstructionElim::runOnMachineFunction; 1.47% -0.49% libCling.so [.] llvm::SelectionDAG::Combine; 0.01% +0.43% libCling.so [.] llvm::PMDataManager::findAnalysisPass; 0.02% +0.39% libc-2.28.so [.] __memchr_avx2; 0.18% +0.37% libCling.so [.] llvm::ConstantUniqueMap<llvm::ConstantExpr>::getOrCreate; +0.36% libCling.so [.] computeKnownBits; +0.35% libCling.so [.] llvm::SparseSolver<llvm::PointerIntPair<llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits<llvm::Value*>, llvm::PointerIntPairInfo<llvm::Value*, 2u, llvm::PointerLikeTypeTraits<llvm::Value*> > >, (anonymous namespace)::CVPLatticeVal, llvm::LatticeKeyInfo<llvm::PointerIntPair<llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits<llvm::Value*>, llvm::PointerIntPairInfo<llvm::Value*, 2u, llvm::PointerLikeTypeTraits<llvm::Value*> > > > >::visitInst; 0.03% +0.35% libCling.so [.] llvm::CallBase::hasFnAttrOnCalledFunction; 1.15% -0.34% libCling.so [.] llvm::FoldingSetBase::FindNodeOrInsertPos; +0.33% libCling.so [.] llvm::removeUnreachableBlocks; +0.32% libCling.so [.] llvm::hash_c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9312#issuecomment-984765945:42,down,down,42,https://root.cern,https://github.com/root-project/root/issues/9312#issuecomment-984765945,1,['down'],['down']
Availability,"With @etejedor 's help we could reduce the problem that causes the test failures to:. ```cpp; #include ""TClassRef.h"". int main() {; TClassRef cr(""ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>"");; cr->GetListOfMethods(true);; return 0;; }; ```. which breaks with the following stacktrace:. ```; #0 0x00007ffff53f9ef5 in raise () from /usr/lib/libc.so.6; #1 0x00007ffff53e3862 in abort () from /usr/lib/libc.so.6; #2 0x00007ffff53e3747 in __assert_fail_base.cold () from /usr/lib/libc.so.6; #3 0x00007ffff53f2646 in __assert_fail () from /usr/lib/libc.so.6; #4 0x00007fffec0bcec0 in TClingCXXRecMethIter::InstantiateTemplateWithDefaults (this=0x555556ead490, TD=0x555556be3a30) at ../../../../bendavidbook/core/metacling/src/TClingMethodInfo.cxx:182; #5 0x00007fffec0ba7d8 in TClingMemberIter::Advance (this=0x555556ead490) at ../../../../bendavidbook/core/metacling/src/TClingMemberIter.cxx:140; #6 0x00007fffec0b8b0f in TClingMemberIter::Next (this=0x555556ead490) at ../../../../bendavidbook/core/metacling/src/TClingMemberIter.h:159; #7 0x00007fffec0be2cd in TClingMethodInfo::Next (this=0x555556ead450) at ../../../../bendavidbook/core/metacling/src/TClingMethodInfo.cxx:438; #8 0x00007fffebf51dba in TCling::MethodInfo_Next (this=0x5555556433a0, minfo=0x555556ead450) at ../../../../bendavidbook/core/metacling/src/TCling.cxx:9017; #9 0x00007ffff7d8192f in TListOfFunctions::Load (this=0x555556dbb2b0) at ../../../bendavidbook/core/meta/src/TListOfFunctions.cxx:391; #10 0x00007ffff7d51b82 in TClass::GetListOfMethods (this=0x5555561abdb0, load=true) at ../../../bendavidbook/core/meta/src/TClass.cxx:3803; #11 0x00005555555551dd in main () at repro.cpp:5; ```. Work in progress.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-819501708:72,failure,failures,72,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-819501708,1,['failure'],['failures']
Availability,"With @lmoneta we were discussing in the PR this kind of case:. a histogram with an initial SetBinContent of 1e8, and you add an event with weight 8. This leads to an error. `(1e8f+8.01f)- 1e8f - 8.01f = -0.01f`. which compared to the bin content of 1e8 is a negligible difference. But `compare(8.01f,8.00f)` would return that the increment is not the same. So we were thinking of defining somehow a relative tolerance. We used std::nextafterf and compared the relative distance wrt the original, and divided by w.; But weird things may happen here, because you might call Fill with a negative weight, and the result might come close to zero for some bins, so a relative normalization is also ugly. We would need a compromise somehow between an absolute and a relative normalization for the tolerance, or adding a lot of CPU-wasting checks. Or just focus on the main cases with positive weights.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671#issuecomment-2048032253:166,error,error,166,https://root.cern,https://github.com/root-project/root/issues/6671#issuecomment-2048032253,3,"['error', 'toler']","['error', 'tolerance']"
Availability,"With @vepadulano we tracked the issue down to [here](https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1464), where cppyy is invoking `GetListOfMethods` of `std::function<void(foo::Foo*)>`. . Based on what cppyy uses from ROOT meta, the reproducer we came up with is:; ```python; import cppyy. cppyy.cppdef(r""""""\; #include <functional>. namespace foo {; class Foo {};; }. std::function<void(foo::Foo*)> f;; """"""). # This print shows the foo:: namespace; print(cppyy.gbl.f). c = cppyy.gbl.TClass(""std::function<void(foo::Foo*)>""); for i in range(c.GetListOfMethods().GetEntries()):; # This print does not show the foo::namespace; print(c.GetListOfMethods().At(i).GetName()); ```. which prints:; ```; <cppyy.gbl.std.function<void(foo::Foo*)> object at 0x7fd8d78e7050>; function<void(Foo*)>; function<void(Foo*)>; function<void(Foo*)>; function<void(Foo*)>; operator=; operator=; operator=; swap; operator bool; operator(); target_type; ~function<void(Foo*)>; ```. I.e. we can see that, while the first print of `f` still shows `foo::Foo`, when using `GetListOfMethods`, the returned constructors and destructor have lost the `foo::` namespace in the template argument. Pinging @Axel-Naumann so he's aware.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10680#issuecomment-1163250919:38,down,down,38,https://root.cern,https://github.com/root-project/root/issues/10680#issuecomment-1163250919,2,"['Ping', 'down']","['Pinging', 'down']"
Availability,"With `Int_t n = kMax;` on Fedora, root master version:; ```; root [0] ; Processing scan.C...; In file included from input_line_8:1:; /home/musinsky/scan.C:10:13: warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]; Float_t a[kMax];; ^~~~; /home/musinsky/scan.C:10:13: note: read of non-const variable 'kMax' is not allowed in a constant expression; /home/musinsky/scan.C:8:9: note: declared here; Int_t kMax = 10;; ^; root [1] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; ERROR leaf:a, len=22 and max=8; * 0 * -0.434764 *; ERROR leaf:a, len=22 and max=8; * 1 * 1.3911939 *; ERROR leaf:a, len=22 and max=8; * 2 * 1.1125664 *; ERROR leaf:a, len=22 and max=8; * 3 * 2.0609021 *; ERROR leaf:a, len=22 and max=8; * 4 * -0.182436 *; ************************; (long long) 5; root [2] ; ```; Also tested with `constexpr Int_t kMax = 10;` to same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16730#issuecomment-2431829823:543,ERROR,ERROR,543,https://root.cern,https://github.com/root-project/root/issues/16730#issuecomment-2431829823,5,['ERROR'],['ERROR']
Availability,"With https://github.com/root-project/root/pull/10561, the behavior on M1 should be:; ```; root [0] whatever; input_line_9:2:3: error: use of undeclared identifier 'whatever'; (whatever); ^; root [1]; ```; ie, the error is still reported but there is no exception thrown.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10548#issuecomment-1123368604:127,error,error,127,https://root.cern,https://github.com/root-project/root/issues/10548#issuecomment-1123368604,2,['error'],['error']
Availability,"With normal build I cannot reproduce error.; With `clang` and `-Dasan=ON` I getting compilation problem when generating G__Core.cxx dictionary.; ```; [ 44%] Generating G__Core.cxx, ../lib/Core.pcm; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:18:; In file included from /usr/include/c++/13/condition_variable:40:; /usr/include/c++/13/bits/chrono.h:251:29: error: redefinition of '__is_duration_v<duration<_Rep, _Period>>'; inline constexpr bool __is_duration_v<duration<_Rep, _Period>> = true;; ^; /usr/include/c++/13/chrono:41:10: note: '/usr/include/c++/13/bits/chrono.h' included multiple times, additional include site in header from module 'std.chrono'; #include <bits/chrono.h>; ```. Full error output: [makelog.txt](https://github.com/root-project/root/files/10519180/makelog.txt). I using clang 15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11629#issuecomment-1406493933:37,error,error,37,https://root.cern,https://github.com/root-project/root/issues/11629#issuecomment-1406493933,3,['error'],['error']
Availability,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test; ... but; So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```; CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):; add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified.; Call Stack (most recent call first):; /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY); /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY); ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before.; This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake; IF(TARGET ${dictionary}); LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>); LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>); ENDIF(); ```; ```cmake; IF(TARGET ${dictionary}); target_sources(${dictionary} PRIVATE ${gensrcdict}); ENDIF(); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5019#issuecomment-587575128:239,error,error,239,https://root.cern,https://github.com/root-project/root/pull/5019#issuecomment-587575128,3,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"With the set of operator I have tried, the change in ROOT are limited to the one call to stod. > E.g., passing TString to std::string ctor will continue to yield ambiguity errors. Actually this is one of the case that is solved by adding the explicit operator std::string. The other case that are left are interfaces that takes *both* a const char* and a std::string_view ... we don't (seem) to have this case in the ROOT code ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/522#issuecomment-298968928:172,error,errors,172,https://root.cern,https://github.com/root-project/root/pull/522#issuecomment-298968928,1,['error'],['errors']
Availability,"With this change, I hope to be able to reproduce the failures of `test_stressroofit_batchmode_cpu` on Windows 10 in the CI, such that I can test possible solutions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10754#issuecomment-1155267116:53,failure,failures,53,https://root.cern,https://github.com/root-project/root/pull/10754#issuecomment-1155267116,1,['failure'],['failures']
Availability,"With this patch, this code:. ```python; import ROOT; from dask.distributed import Client, LocalCluster. if __name__ == ""__main__"":; client = Client(LocalCluster(n_workers=1, processes=False, threads_per_worker=1)); df = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame(10, daskclient=client); df = ROOT.RDataFrame(10); c = df.Count(); cs = ROOT.RDF.Experimental.VariationsFor(c); print(cs[""nominal""]); ```. breaks with this error:. ```; Traceback (most recent call last):; File ""/tmp/distrdf.py"", line 9, in <module>; cs = ROOT.RDF.Experimental.VariationsFor(c); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/blue/ROOT/master-with-venv/cmake-build/install/lib/ROOT/_facade.py"", line 96, in variationsfor; return rdf_variationsfor(resptr); ^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: Template method resolution failed:; ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::Experimental::VariationsFor(ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > resPtr) =>; TypeError: could not convert argument 1; Failed to instantiate ""VariationsFor(ROOT::RDF::RResultPtr<ULong64_t>*)""; ```. Probably some issue with monkey-patching a template function, but I don't understand what goes wrong exactly or how to fix it. Needs debugging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13248#issuecomment-1641068037:425,error,error,425,https://root.cern,https://github.com/root-project/root/pull/13248#issuecomment-1641068037,1,['error'],['error']
Availability,"Without this patch, using python 3.6 in anaconda3:. ```; >>> import ROOT; >>> h = ROOT.TH1D('test', 'test', 100, 0, 1); AttributeError: type object 'TArray' has no attribute '__getitem__'. The above exception was the direct cause of the following exception:. SystemError: <built-in method mro of ROOT.PyRootType object at 0x17d57b8> returned a result with an error set; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/maxnoe/.local/root5/lib/ROOT.py"", line 459, in __getattr1; return getattr( self, name ); File ""/home/maxnoe/.local/root5/lib/ROOT.py"", line 486, in __getattr2; attr = _root.LookupRootEntity( name ); AttributeError: TH1D; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1005#issuecomment-330495278:359,error,error,359,https://root.cern,https://github.com/root-project/root/pull/1005#issuecomment-330495278,1,['error'],['error']
Availability,"Working on osx, I now can reproduce the failures. Apart from ttree_friends, they are due to some change between these two commits: d3b27fb46c..c82254e4de",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1768#issuecomment-374752465:40,failure,failures,40,https://root.cern,https://github.com/root-project/root/pull/1768#issuecomment-374752465,1,['failure'],['failures']
Availability,"Works! Example output:. ```; -- stderr output is:; CMake Error at CMakeLists.txt:61 (find_package):; Could not find a package configuration file provided by ""LLVM"" with any of; the following names:. LLVMConfig.cmake; llvm-config.cmake. Add the installation prefix of ""LLVM"" to CMAKE_PREFIX_PATH or set; ""LLVM_DIR"" to a directory containing one of the above files. If ""LLVM""; provides a separate development package or SDK, be sure it has been; installed.; ```. (technically using the backport, #6819 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6816#issuecomment-728266387:57,Error,Error,57,https://root.cern,https://github.com/root-project/root/pull/6816#issuecomment-728266387,1,['Error'],['Error']
Availability,"Would it be nicer to catch and help the user ""please install python-pandas to run this tutorial"" and then exit 1 (aka error)? Else there will be an import error that users might not understand without Google's help? I'm asking, I don't have an opinion yet :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5397#issuecomment-616459516:118,error,error,118,https://root.cern,https://github.com/root-project/root/pull/5397#issuecomment-616459516,2,['error'],['error']
Availability,"Would something like this be sufficient ?; It checks three materials against the PDG values from https://pdg.lbl.gov/2020/AtomicNuclearProperties; ```; $> root.exe test_material_units.C\(\""G4\""\); $> root.exe test_material_units.C\(\""ROOT\""\); ```; [test_material_units.C.txt](https://github.com/root-project/root/files/9207970/test_material_units.C.txt). Whenever it would say ""TEST FAILED"" an error condition occurred.; On Success:; ```; Processing ../test_material_units.C(""G4"")...; Info in <TGeoManager>: Changing system of units to Geant4 units (mm, ns, MeV).; Using Geant4 system of units. ; Element: SI Z=14 N=28.000000 A=28.085500 [g/mole]; Material Si A=28.0855 Z=14 rho=2.329 radlen=93.5361 intlen=457.729 index=0; TEST SUCCEEDED Si TGeoMaterial Units: Geant4 Deviation to PDG density: 0 % RadLen: 0.17 % IntLen: 1.6 % ; TEST SUCCEEDED Mix_1_Si TGeoMixture Units: Geant4 Deviation to PDG density: 0 % RadLen: 0.17 % IntLen: 1.6 % ; TEST SUCCEEDED Mix_1_Si TGeoMixture Units: Geant4 Deviation to PDG density: 0 % RadLen: 0.0015 % IntLen: 1.6 % ; TEST SUCCEEDED Mix_2_Si TGeoMixture Units: Geant4 Deviation to PDG density: 0 % RadLen: 0.17 % IntLen: 1.6 % ; TEST SUCCEEDED Mix_3_Si TGeoMixture Units: Geant4 Deviation to PDG density: 0 % RadLen: 0.17 % IntLen: 1.6 % ; Element: FE Z=26 N=56.000000 A=55.845000 [g/mole]; Material Fe A=55.845 Z=26 rho=7.874 radlen=17.5666 intlen=169.589 index=4; TEST SUCCEEDED Fe TGeoMaterial Units: Geant4 Deviation to PDG density: 0 % RadLen: 0.019 % IntLen: 1.1 % ; TEST SUCCEEDED Mix_1_Fe TGeoMixture Units: Geant4 Deviation to PDG density: 0 % RadLen: 0.019 % IntLen: 1.1 % ; TEST SUCCEEDED Mix_1_Fe TGeoMixture Units: Geant4 Deviation to PDG density: 0 % RadLen: 0.028 % IntLen: 1.1 % ; TEST SUCCEEDED Mix_2_Fe TGeoMixture Units: Geant4 Deviation to PDG density: 0 % RadLen: 0.019 % IntLen: 1.1 % ; TEST SUCCEEDED Mix_3_Fe TGeoMixture Units: Geant4 Deviation to PDG density: 0 % RadLen: 0.019 % IntLen: 1.1 % ; Element: U Z=92 N=238.000000 A=238.028900 [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11060#issuecomment-1197929515:395,error,error,395,https://root.cern,https://github.com/root-project/root/pull/11060#issuecomment-1197929515,1,['error'],['error']
Availability,"Would that mean that, for the default built users would use, the user will **not** be allowed to use a similar using statement and if they do then they would get obscure failure?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1547#issuecomment-376323878:170,failure,failure,170,https://root.cern,https://github.com/root-project/root/pull/1547#issuecomment-376323878,1,['failure'],['failure']
Availability,Wouldn't `RMergeableVariations<T>::Merge` just need to do a downcast from `RMergeableValueBase` to `RMergeableValue<T>`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9942#issuecomment-1061833734:60,down,downcast,60,https://root.cern,https://github.com/root-project/root/pull/9942#issuecomment-1061833734,1,['down'],['downcast']
Availability,Wouldn't it help in finding a better/alternative solution to understand the nature/mechanics/reason of the failure?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1700#issuecomment-371171810:107,failure,failure,107,https://root.cern,https://github.com/root-project/root/pull/1700#issuecomment-371171810,1,['failure'],['failure']
Availability,"Wow, thanks for proving that this is possible!. I'm not a big fan of adding complexity that's mostly without effect for users: we had only one (1) complaint on this, ever, and that function is heavy stuff where I'm not sure whether all shells that currently support `thisroot.sh` will continue to be happy. Say ksh, zsh, etc... . Maybe an error message if `BASH_...` isn't available would be enough?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10332#issuecomment-1089164416:339,error,error,339,https://root.cern,https://github.com/root-project/root/pull/10332#issuecomment-1089164416,2,"['avail', 'error']","['available', 'error']"
Availability,"Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. . BTW, when I try to run root locally, I meet some odd problems and it looks like I can proceed after cleanning the cache.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1972822091:65,error,errors,65,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1972822091,3,['error'],['errors']
Availability,"Wrt to the experiments, I think it's not so critical. Mac isn't used anyway for any experiment specific usage of ROOT. I guess, @axel please correct me, MacOS is purely a platform used by analysts. I think we could drop py2 for MacOS, however, since there's no system python3 we cannot build reliably any binaries against python. So it's a convoluted thing :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6686#issuecomment-714335476:292,reliab,reliably,292,https://root.cern,https://github.com/root-project/root/issues/6686#issuecomment-714335476,1,['reliab'],['reliably']
Availability,"Wy8Q8red4Pa6zme6lmNgs%3D&reserved=0>; How do I use curl to download on lxplus ?. regards,; Asoka. > On May 12, 2021, at 11:47 AM, Simon Liu ***@***.***> wrote:; > ; > Hi, Asoka; > ; > I'm not sure which exactly problem you are chasing for, as far as I can tell, there is no problem access webdav.lcg.triumf.ca from lxplus, and downloading files from there works fine.; > ; > thanks; > ; > Simon; > ; > On 5/12/2021 11:13 AM, Asoka De Silva wrote:; >> ah ... thanks, I missed that. So ping works from lxplus but I still cannot do a curl to ***@***.***; >> ; >> regards,; >> Asoka; >> ; >>> On May 12, 2021, at 11:11 AM, Di Qing ***@***.*** ***@***.***>> wrote:; >>> ; >>> Asoka,; >>> ; >>> There was a mistake in your ping command, did you see the 'ping' in the middle, so actually it was pinging host ping. ; >>> ; >>> Regards,; >>> ; >>> Di; >>> ; >>> On 2021-05-12 10:43 a.m., Asoka De Silva wrote:; >>>> hmm ... that was really unexpected for me for lxplus ...; >>>> ; >>>> ***@***.*** ~]$ ping -c 10 ping webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/>; >>>> PING (137.138.28.175) 56(124) bytes of data.; >>>> ; >>>> --- ping statistics ---; >>>> 10 packets transmitted, 0 received, 100% packet loss, time 8999ms; >>>> ; >>>> ***@***.*** ~]$ ; >>>> ; >>>> Vitaliy, shouldn't we expect that to be accessible from lxplus ?; >>>> ; >>>> regards,; >>>> Asoka; >>>> ; >>>>> On May 12, 2021, at 10:37 AM, Di Qing ***@***.*** ***@***.***>> wrote:; >>>>> ; >>>>> Maybe the connections were from commodity network? Are you able to ping webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/>?; >>>>> ; >>>>> Thanks,; >>>>> ; >>>>> Di; >>>>> ; >>>>>> On May 12, 2021, at 10:29 AM, Asoka De Silva ***@***.*** ***@***.***>> wrote:; >>>>>> ; >>>>>> ﻿ Hi Axel,; >>>>>> ; >>>>>> I don't know but I'll add Simon and Di who are the Tier-1 experts and may have ideas.; >>>>>> ; >>>>>> Simon and Di, Axel has this issue and me a similar one - any ideas ?; >>>>>> ; >>>>>> ; >>>>>>> ; >>>>>>>> s I crosscheck (to see ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840018942:1559,ping,ping,1559,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840018942,2,['ping'],['ping']
Availability,XX.cpp(324): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_384856fbdb': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\clangCodeGen.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(639): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_3df0240bdb': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGCleanup.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\clangCodeGen.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\SplitModule.cpp(264): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_8b86c3c0in': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/Decl.h(1498): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_96cc0c13db': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseExpr.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\clangParse.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/Decl.h(431): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_2de6df6cdb': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4328#issuecomment-527145473:1129,error,error,1129,https://root.cern,https://github.com/root-project/root/pull/4328#issuecomment-527145473,1,['error'],['error']
Availability,Xavi I think it's expected. With AVX enabled the clock frequency scales down when all cores are fired up.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1068#issuecomment-332827543:72,down,down,72,https://root.cern,https://github.com/root-project/root/pull/1068#issuecomment-332827543,1,['down'],['down']
Availability,"Xs& ...) [with Xs = {ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TH1D; decltype ((((ROOT::Internal::RDF::FillHelper&lt;HIST&gt;*)this)-&gt;ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::fObjects[slot]-&gt;Fill(*((ROOT::Internal::RDF::FillHelper*)this)-&gt;ROOT::Internal::RDF::FillHelper::MakeBegin(ROOT::Internal::RDF::FillHelper::Exec::xs)...), void())) = void]::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 1&gt;]’ ; - [2022-08-05T22:42:08.524Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:509:28: error: non-constant condition for static assertion ; - [2022-08-05T22:42:08.524Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:42:08.525Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-‘constexpr’ function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...) [with Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile2D; decltype ((((ROOT::Internal::RDF::FillHelper&lt;HIST&gt;*)this)-&gt;ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::fObjects[slot]-&gt;Fill(*((ROOT::Internal::RDF::FillHelper*)this)-&gt;ROOT::Internal::RDF::FillHelper::MakeBegin(ROOT::Internal::RDF::FillHelper::Exec::xs)...), void())) = void]::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 3&gt;]’ ; - [2022-08-05T22:42:08.525Z]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11127#issuecomment-1207071169:2995,error,error,2995,https://root.cern,https://github.com/root-project/root/pull/11127#issuecomment-1207071169,1,['error'],['error']
Availability,Yeah we just had worse compilation errors :/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12692#issuecomment-1546716488:35,error,errors,35,https://root.cern,https://github.com/root-project/root/pull/12692#issuecomment-1546716488,1,['error'],['errors']
Availability,"Yeah well, certainly :-) I was afraid that my recently merged change to `R__LOAD_LIBRARY` caused these failures, but the failures are indeed local to this PR. Phew!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7566#issuecomment-801478822:103,failure,failures,103,https://root.cern,https://github.com/root-project/root/pull/7566#issuecomment-801478822,2,['failure'],['failures']
Availability,"Yeah, I know the problem, it is just an accident that I defined it twice. I mean if I comment out the draw statements (g->Draw(""AP""); ; or h->Draw(""HIST""); ), I can compile and run it without any problem; the error only appears with the draw statement, I can't understand it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8256#issuecomment-849661921:209,error,error,209,https://root.cern,https://github.com/root-project/root/issues/8256#issuecomment-849661921,1,['error'],['error']
Availability,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```; import cppyy; ; cppyy.cppdef(""""""\; class TOIClass {; public:; template<typename T>; bool operator<(T t) { return true; }; };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1); ```. which runs fine to completion, v.s.:. ```; import ROOT; ; ROOT.gInterpreter.Declare(""""""\; class TOIClass {; public:; template<typename T>; bool operator<(T t) { return true; }; };""""""). from ROOT import TOIClass. assert (TOIClass() < 1); ```. which gives me:; ```; input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'; new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));; ~~~~~~~~~~~~~~~~ ^; input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'; ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);; ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-697743066:549,error,error,549,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-697743066,2,['error'],['error']
Availability,"Yeah, the failure about the formatting is because the code is not conform with the clang-format style of ROOT:; https://github.com/root-project/root/blob/master/.clang-format. But since RooFit never followed the style to begin with (at least for all files older than a year), we will just ignore the errors. It was decided to not do the reformatting of the whole RooFit code for now, because this would obfuscate the development history with formatting changes in every line (`git blame` would not be so useful anymore). So this PR is ready to go as it is! I'll merge it once the Jenkins tests are passing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11507#issuecomment-1271324440:10,failure,failure,10,https://root.cern,https://github.com/root-project/root/pull/11507#issuecomment-1271324440,2,"['error', 'failure']","['errors', 'failure']"
Availability,"Yeah, they probably do some quirky simd stuff in there :). I realized yesterday that the stuff for creation of sdf textures always puts them in $ROOTSYS/ui5/eve7/ ... which will not be writable for experiment-wide / cvmfs installs. Would it be possible to do something like this:; 1. if $ROOTSYS/ is not writable, write to ./fonts/;; 2. forward requests for files in $ROOTSYS/ui5/eve7/ to some REveManager function that can then check where these fonts are actually available and route the GET to the proper local file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2172404599:466,avail,available,466,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2172404599,1,['avail'],['available']
Availability,"Yep, but it seems that this issue is still buggy in master. They suggest a workaround, but not sure... ```; QUICK FIXES FOR USERS:. If you personally encounter this ""Error in line 4595: Opening and ending tag; mismatch."", and you just want to fix that issue, then the solution is to; either make sure that all your enums are documented or that they are; appropriately hidden (nested in an undocumented class, or nested in a; filtered-out namespace (e.g., ""detail"")). This is what I did, it fixed all; my issues.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1011076618:166,Error,Error,166,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1011076618,1,['Error'],['Error']
Availability,"Yes I did — I ended up exiting the environment I made and ROOT ended up working through Python, so maybe I fixed my error by redownloading through conda. Sent from my iPhone. > On May 31, 2022, at 2:34 PM, Vincenzo Eduardo Padulano ***@***.***> wrote:; > ; > ﻿; > Hi @ethereal-space-cadet16 ,; > ; > Unfortunately without seeing the code you tried to run, your OS, Python version and ROOT version, it's hard to understand the actual cause of the crash.; > ; > Let's start easy. You said you tried conda, did you explicitly try the instructions at https://root.cern/install/#conda ?; > ; > $ conda config --set channel_priority strict; > $ conda create -c conda-forge --name myenv root; > $ conda activate myenv; > Then, after the command above runs succesfully, I will take the first example available from the document you link, that is:; > ; > import ROOT; > print(""This is my script""); > If this two steps still lead to errors or crashes please report back, with your OS, Python version (the one that conda uses), the output of echo $PYTHONPATH.; > ; > —; > Reply to this email directly, view it on GitHub, or unsubscribe.; > You are receiving this because you were mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676#issuecomment-1142102654:116,error,error,116,https://root.cern,https://github.com/root-project/root/issues/10676#issuecomment-1142102654,4,"['avail', 'echo', 'error']","['available', 'echo', 'error', 'errors']"
Availability,"Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message.; > ; > ```; > Processing temp.h... ; > In file included from input_line_8:1: ; > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: ; > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: ; > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' ; > static const CLID CLID_ProtoParticle = 803; ; > ^ ; > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here ; > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" ; > ^ ; > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple ; > times, additional include site here ; > #include ""Event/ProtoParticle.h"" ; > ^ ; > ...; > ...SKIPPED LINES; > ...; > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' ; > class ProtoParticle final : public KeyedObject<int> { ; > ^ ; > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2161206521:68,fault,fault,68,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2161206521,5,"['down', 'error', 'fault']","['down', 'error', 'fault']"
Availability,Yes I see the command rans. The files are deleted once sync. Let me download the tar ball and see what's in.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1011035817:68,down,download,68,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1011035817,1,['down'],['download']
Availability,"Yes I would like some feedback on the use of std::vector so I can take care of that appropriately together with rebasing. If this strategy is agreed I can also clean up a bit more to avoid the redundant size counters, etc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7499#issuecomment-828637952:193,redundant,redundant,193,https://root.cern,https://github.com/root-project/root/pull/7499#issuecomment-828637952,1,['redundant'],['redundant']
Availability,"Yes `docbuild` was empty and I removed `docoutput`. I just redid it. I get the same. Elsewhere:; ```; Generating docs for compound TestTH3DRange...; Generating docs for compound TExceptionHandler...; doxygen(79550,0x70000e706000) malloc: *** error for object 0x7f822b76c000: pointer being freed was not allocated; doxygen(79550,0x70000e706000) malloc: *** set a breakpoint in malloc_error_break to debug; /bin/sh: line 1: 79550 Abort trap: 6 /Users/couet/bin/doxygen /tmp/docbuild/Doxyfile.dox; make[2]: *** [CMakeFiles/dox] Error 134; make[1]: *** [CMakeFiles/dox.dir/all] Error 2; make: *** [all] Error 2; couet@Oliviers-MBP docbuild % . ```; I typed ; ```; make -j8; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1077428404:242,error,error,242,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1077428404,4,"['Error', 'error']","['Error', 'error']"
Availability,"Yes but TTreeProcessorMT is implemented in terms of TThreadExecutor for everything related to tasks. If that ever changes, and a call to EnableThreadSafety is not otherwise added, several TTreeProcessorMT tests will crash. Do you want the (redundant) EnableThreadSafety call in TTreeProcessorMT's ctor as well?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5304#issuecomment-609784958:240,redundant,redundant,240,https://root.cern,https://github.com/root-project/root/pull/5304#issuecomment-609784958,1,['redundant'],['redundant']
Availability,"Yes it can be closed. Sent from my iPhone. > On May 31, 2022, at 2:59 PM, Vincenzo Eduardo Padulano ***@***.***> wrote:; > ; > ﻿; > Probably the previous ROOT installation was clashing with the new one you downloaded through conda, glad that you can now run the example 👍 Can this issue be closed?; > ; > —; > Reply to this email directly, view it on GitHub, or unsubscribe.; > You are receiving this because you were mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676#issuecomment-1143196406:206,down,downloaded,206,https://root.cern,https://github.com/root-project/root/issues/10676#issuecomment-1143196406,1,['down'],['downloaded']
Availability,"Yes it preserve the case if I add the line ; ```; 	set(DOXYGEN_CASE_SENSE_NAMES YES) # default value is system dependent, so need to set this !. ```; in `CMakeLists.txt` but now I have a other weird error:; ```; Processing libs.C+(""BinomialNeymanInterval"",)... Processing libs.C+(""FeldmanCousinsBinomialInterval"",)... Processing libs.C+(""DifferentDimension"",)... Processing libs.C+(""DifferentAxisLimits"",)... Processing libs.C+(""DifferentBinLimits"",)...; Processing libs.C+(""DifferentNumberOfBins"",)... Processing libs.C+(""BinomialProbHelper"",)... Processing libs.C+(""DifferentLabels"",)...; input_line_11:2:28: error: expected expression; input_line_11:2:28: error: expected expression; libs(""DifferentDimension"",) libs(""DifferentBinLimits"",). ^ ^. input_line_11:2:29: error: expected expression; libs(""DifferentAxisLimits"",); ^; input_line_11:2:40: error: expected expression; libs(""FeldmanCousinsBinomialInterval"",); input_line_11 ^:; 2:25: error: expected expression; libs(""DifferentLabels"",); ^; input_line_11:2:31: error: expected expression; libs(""DifferentNumberOfBins"",); ^; ```; It seems the 2nd parameter in calling libs.C is meeting. Let me download again the full PR from scars. I may have done some unwanted mods.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1081535976:199,error,error,199,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1081535976,8,"['down', 'error']","['download', 'error']"
Availability,Yes that line is the faulty one. That's the feature allowing to Draw histogram one after each other and automatically replace the previous one. I guess histogram is the only object doing that. But that's like that since ROOT exits. Difficult to change this behaviour now. Of course the right way is to use option same.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9869#issuecomment-1038010684:21,fault,faulty,21,https://root.cern,https://github.com/root-project/root/issues/9869#issuecomment-1038010684,1,['fault'],['faulty']
Availability,"Yes the issue is that given a file with N entries, calling `treereader.SetEntriesRange(N + 1, ...); treereader.Next();` should error out (because the starting entry N + 1 is out of range) but does not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10774#issuecomment-1171220620:127,error,error,127,https://root.cern,https://github.com/root-project/root/issues/10774#issuecomment-1171220620,1,['error'],['error']
Availability,Yes the tolerances are for significances (i.e. p-values) or limits values found by the HypoTestInverter class,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6195#issuecomment-675349166:8,toler,tolerances,8,https://root.cern,https://github.com/root-project/root/pull/6195#issuecomment-675349166,1,['toler'],['tolerances']
Availability,"Yes, I agree that we should now focus on the remaining test failures, both in Cling and ROOT. For the ""file name too long"" when building with GCC, I've posted https://github.com/root-project/root/pull/10387 (we'll have to rebase this PR afterwards and change a number of the new `.str()` calls). I also started looking into the slow JIT for RDF, and I noticed that it's completely hanging when ROOT is built with C++17. The stack trace of a stuck `./tree/dataframe/test/dataframe_interface --gtest_filter=RDataFrameInterface.GetFilterNamesFromNode` is; ```; #0 0x00007ffff697681d in __lll_lock_wait () from /lib64/libpthread.so.0; #1 0x00007ffff696fac9 in pthread_mutex_lock () from /lib64/libpthread.so.0; #2 0x00007fffefd8e953 in __gthread_mutex_lock (__mutex=0x8eb600) at /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux/bits/gthr-default.h:748; #3 std::mutex::lock (this=0x8eb600) at /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_mutex.h:103; #4 std::unique_lock<std::mutex>::lock (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_mutex.h:267; #5 std::unique_lock<std::mutex>::unique_lock (__m=..., this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_mutex.h:197; #6 llvm::orc::ExecutionSession::OL_applyQueryPhase1 (this=this@entry=0xbcb8b0, IPLS=std::unique_ptr<llvm::orc::InProgressLookupState> = {...}, Err=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2295; #7 0x00007fffefd8c8ec in llvm::orc::ExecutionSession::lookup(llvm::orc::LookupKind, std::vector<std::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlags>, std::allocator<std::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlags> > > const&, llvm::orc::SymbolLookupSet, llvm::orc::SymbolState, llvm::unique_function<void (llvm::Expected<llvm::DenseMap<llvm::orc::SymbolStringPtr, llvm::JITEvaluatedSymbol",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1097659822:60,failure,failures,60,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1097659822,1,['failure'],['failures']
Availability,"Yes, I also observing such error only when build stops and I trying to continue the run.; Try to apply patch from pr: https://github.com/root-project/root/pull/7346",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7345#issuecomment-789874561:27,error,error,27,https://root.cern,https://github.com/root-project/root/issues/7345#issuecomment-789874561,1,['error'],['error']
Availability,"Yes, I can try to switch to the dev3 LCG view, which should have ROOT master. I'll check in a few days, when the fix should be available in the builds",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11597#issuecomment-1283665837:127,avail,available,127,https://root.cern,https://github.com/root-project/root/pull/11597#issuecomment-1283665837,1,['avail'],['available']
Availability,"Yes, It's a duplicate. Not sure where I should have made the PR. Any preference?. I can change it back to `ULong64_t` and `Long64_t`, it was just for consistency. The error I get is:. ```; [5922]: [16:21:24][ERROR] Exception caught: Error evaluating expression (ROOT::Internal::RDF::CallBuildAndBook<ROOT::Internal::RDF::ActionTypes::Mean, Long32_t>(*reinterpret_cast<ROOT::Detail::RDF::RLoopManager *>(140586091860616L), {""z""}, 1, reinterpret_cast<shared_ptr<double> *>(140586099120256L), reinterpret_cast<const std::shared_ptr<ROOT::Internal::RDF::RActionBase *> *>(140586098413552L))); [5922]:; [5922]: input_line_59:2:81: error: use of undeclared identifier 'Long32_t'; [5922]: (ROOT::Internal::RDF::CallBuildAndBook<ROOT::Internal::RDF::ActionTypes::Mean, Long32_t>(*reinterpret_cast<ROOT::Detail::RDF::RLoopManager *>(140586091860616L), {""z""}, 1, reinterpret_cast<shared_ptr<double> *>(140586099120256L), reinterpret_cast<const std::shared_ptr<ROOT::Internal::RDF::RActionBase *> *>(140586098413552L))); [5922]: ^; [5922]: input_line_59:2:90: error: type name requires a specifier or qualifier; [5922]: (ROOT::Internal::RDF::CallBuildAndBook<ROOT::Internal::RDF::ActionTypes::Mean, Long32_t>(*reinterpret_cast<ROOT::Detail::RDF::RLoopManager *>(140586091860616L), {""z""}, 1, reinterpret_cast<shared_ptr<double> *>(140586099120256L), reinterpret_cast<const std::shared_ptr<ROOT::Internal::RDF::RActionBase *> *>(140586098413552L))); [5922]: ^; [5922]: input_line_59:2:92: error: expected ')'; [5922]: (ROOT::Internal::RDF::CallBuildAndBook<ROOT::Internal::RDF::ActionTypes::Mean, Long32_t>(*reinterpret_cast<ROOT::Detail::RDF::RLoopManager *>(140586091860616L), {""z""}, 1, reinterpret_cast<shared_ptr<double> *>(140586099120256L), reinterpret_cast<const std::shared_ptr<ROOT::Internal::RDF::RActionBase *> *>(140586098413552L))); [5922]: ^; [5922]: input_line_59:2:90: note: to match this '('; [5922]: (ROOT::Internal::RDF::CallBuildAndBook<ROOT::Internal::RDF::ActionTypes::Mean, Long32_t>(*reinte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2478#issuecomment-413566449:167,error,error,167,https://root.cern,https://github.com/root-project/root/pull/2478#issuecomment-413566449,1,['error'],['error']
Availability,"Yes, and for the record: I have rebased the most important changes (can be applied to master a few days ago) and tried to ping the ROOT/TMVA team via the root forum at https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880; I think there is much more one could do. It is a lot of work to keep all the changes up to date given that master is moving - even whitespace changes can cause work. In total, these changes give me about ~25-30% speedup for a use case here where training takes about 6 hours with the changes (with BDT+Gradient boosting).; You are at least the third person to discover this change, see also here https://sft.its.cern.ch/jira/browse/ROOT-8006 - I would be more than happy if the changes could be included in root. I did the patch back in fall 2015 (yes, it's that long ago). You can apply my patches posted to the root forum with ""git am *.patch"", or I could also push the new version here. Whatever helps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/327#issuecomment-274794479:122,ping,ping,122,https://root.cern,https://github.com/root-project/root/pull/327#issuecomment-274794479,1,['ping'],['ping']
Availability,"Yes, better than the ""That should fix a recent nightly failure with gcc11"" that Philippe commented on, thanks for improving it!. Compared to just including the actual diagnostic (something Philippe and I generally try to do these days, something that has proven super helpful several times), your current log:; ```; That should fix a recent nightly failure with gcc11 avoiding to require; module ""bits/ranges_base.h"" in C++20 context.; ```. does not call out; - that it's during dictionary generation; - that the modulemap requires the module feature 'cplusplus20' (your log seems to suggest that the error surfaces when compiled in C++20 mode, while this error shows up when compiling in C++14 or 17); - that the issue is also with GCC12 headers (your message seems to suggest that it's only with GCC11 headers); - the ""stack trace"", i.e. `/usr/include/c++/12/experimental/string_view:43:10: note: submodule of top-level module 'std' implicitly imported here` and then `/home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'` and then `#include ""TIsAProxy.h""`. In general we tell our users (+/- always) ""can we please see the actual diagnostic"", and for the same reasons it's super helpful to include them here. The time we discussed this is waaay larger than the time it would have taken you to update the log to what Philippe proposes, rather than updating it to something that tries to address the issues (but seemingly fails?). But it's Philippe's review, I let him comment / deal with this if you still prefer to keep your current commit log. I simply wanted to add an explanation why Philippe suggests the inclusion of the actual diagnostic (and why I found it convincing and do it ever since he propose it to me).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1429251757:55,failure,failure,55,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1429251757,5,"['error', 'failure']","['error', 'failure']"
Availability,"Yes, it addresses the failures uncovered by the added messages ... However there is still a category of case (ellided node in the hierarchy of branches) that trigger the message (because the branch those proxy might correspond to really does not exist).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3770#issuecomment-489635960:22,failure,failures,22,https://root.cern,https://github.com/root-project/root/pull/3770#issuecomment-489635960,1,['failure'],['failures']
Availability,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; Instead we should either; * fail to configure if BLAS is missing; or ; * disable the components that require BLAS when configuring whe BLAS is missing; or; * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16720#issuecomment-2425048725:194,failure,failure,194,https://root.cern,https://github.com/root-project/root/issues/16720#issuecomment-2425048725,1,['failure'],['failure']
Availability,"Yes, it is still true that we need to remove/replace the `using namespace` (my note was just a side note and was not meant to undermine this report) and it is also true that making one's own headers more resilient to silly but legal usage is usually worth the slight (and debatable) decrease in readability (by having/adding more qualification).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13001#issuecomment-1593553122:204,resilien,resilient,204,https://root.cern,https://github.com/root-project/root/issues/13001#issuecomment-1593553122,1,['resilien'],['resilient']
Availability,"Yes, it is the faulty one. If I comment it the tick are ok. But that's in the Gl/3D part and you are not using PreferGL for you 2D pad. We are progressing ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8618#issuecomment-875407496:15,fault,faulty,15,https://root.cern,https://github.com/root-project/root/issues/8618#issuecomment-875407496,1,['fault'],['faulty']
Availability,"Yes, of course! I will also copy it here:. The rationale behind this change is that the public methods will (in most cases) be directly used by end users, so there is no need to further propagate potential errors. It removes the need to `Unwrap` the importer object returned by `Create`, making it more intuitive to use. As a potential downside, this means that in case the importer is used in more elaborate call; chains this propagation is of course not possible anymore. A possible solution could be to have methods for both, although this will obviously add some bloat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12565#issuecomment-1488072046:206,error,errors,206,https://root.cern,https://github.com/root-project/root/pull/12565#issuecomment-1488072046,2,"['down', 'error']","['downside', 'errors']"
Availability,"Yes, of course, I can reproduce the error in regular C++ with something as simple as <https://godbolt.org/z/rnqWer3bj>:; ```cpp; #include <ranges>; using namespace std;; #include <range/v3/views.hpp>; ```; but I see 2 errors in this example:; - using std::ranges and ranges at the same time (not really an error, but a bit silly); - `using namespace std` before including `range/v3/views.hpp` (actually `using namespace std` should be considered an error by itself). The following code works:; ```cpp; #include <ranges>; #include <range/v3/views.hpp>; using namespace std;; ```; still a bit silly, but it works. So, I'm sorry, but I do not buy the comment that developers of libraries should always put `::` in front of every top level namespace. I believe it is fairy reasonable to assume that nobody does `using namespace std;` before including any header.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13001#issuecomment-1591318680:36,error,error,36,https://root.cern,https://github.com/root-project/root/issues/13001#issuecomment-1591318680,4,['error'],"['error', 'errors']"
Availability,"Yes, see #6079 . Error is:; ```; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooChiSquarePdf.cxx.o; /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(32): error: ""basic_string_view"" has already been declared in the current scope. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(35): error: invalid redeclaration of type name ""std::string_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(589): here. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(36): error: invalid redeclaration of type name ""std::u16string_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(596): here. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(37): error: invalid redeclaration of type name ""std::u32string_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(597): here. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(38): error: invalid redeclaration of type name ""std::wstring_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(591): here. 5 errors detected in the compilation of ""/build/root/src/root-6.22.00-cuda/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu"".; make[2]: *** [tmva/tmva/CMakeFiles/TMVA.dir/build.make:2253: tmva/tmva/CMakeFiles/TMVA.dir/src/DNN/Architectures/Cuda/CudaMatrix.cu.o] Error 1; make[2]: *** Waiting for unfinished jobs....; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooDecay.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooDstD0BG.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooExponential.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooFunctor1DBinding.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooFunctorBinding.cxx.o; /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(32): error:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6058#issuecomment-663594675:17,Error,Error,17,https://root.cern,https://github.com/root-project/root/pull/6058#issuecomment-663594675,5,"['Error', 'error']","['Error', 'error']"
Availability,"Yes, sorry about that. Your changes look ok at a quick glance (and anyway, the CI errors are definitely unrelated). We'll try to resolve this asap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5393#issuecomment-616427545:82,error,errors,82,https://root.cern,https://github.com/root-project/root/pull/5393#issuecomment-616427545,1,['error'],['errors']
Availability,"Yes, that's to be expected because of the error in the command:; `qhelpgenerator index.qhp`. I checked locally and I am seeing the same error. It seems the index.qhp file is corrupted here because of a mismatch in section opening and closing tags:; ```. <toc>; <section title=""ROOT master"" ref=""index.html"">; <section title=""ROOT Reference Documentation"" ref=""index.html"">; <section title=""Introduction"" ref=""index.html#autotoc_md0"" />; <section title=""Manuals"" ref=""index.html#autotoc_md1"" />; <section title=""Tutorials and courses"" ref=""index.html#autotoc_md2"" />; <section title=""Provide your feedback"" ref=""index.html#autotoc_md3"" />; </section>; </section>; </section>; <section title=""Tutorials"" ref=""group__Tutorials.html"" />; ```; I guess I will have to file another bug report in doxygen :s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1011056200:42,error,error,42,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1011056200,2,['error'],['error']
Availability,"Yes, the error is unrelated to your patch (infrastructure problem).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1546#issuecomment-359856606:9,error,error,9,https://root.cern,https://github.com/root-project/root/pull/1546#issuecomment-359856606,1,['error'],['error']
Availability,"Yes, the error messages are now emitted directly in cmakes `find_package()` as we require the components explicitly.; For example:; ```txt; CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:233 (message):; Could NOT find X11 (missing: Xext); Call Stack (most recent call first):; /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:603 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake/Modules/FindX11.cmake:676 (find_package_handle_standard_args); CMakeLists.txt:5 (find_package); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16008#issuecomment-2220252508:9,error,error,9,https://root.cern,https://github.com/root-project/root/pull/16008#issuecomment-2220252508,2,"['Error', 'error']","['Error', 'error']"
Availability,"Yes, the other two failures need backporting of:. https://github.com/root-project/root/pull/9824. which I will do next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10206#issuecomment-1076784253:19,failure,failures,19,https://root.cern,https://github.com/root-project/root/pull/10206#issuecomment-1076784253,1,['failure'],['failures']
Availability,"Yes, the test failures are unrelated. Note that we track solved issues with ""projects"", not PRs :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9790#issuecomment-1028725521:14,failure,failures,14,https://root.cern,https://github.com/root-project/root/pull/9790#issuecomment-1028725521,1,['failure'],['failures']
Availability,"Yes, this happened because I was trying to compile on an officially unsupported system. The function `GetExePath()` is not implemented and returns an empty string. It the new commit, an error message is printed in `SetRootSys()` in case of unknown executable path, and the missing implementation of `GetExePath()` is added. The program `rootcling_stage1` now determines its `ROOTSYS` (build directory) successfully as confirmed by printing `rootsys` in `GetIncludeDir()`, although it then still fails reporting circular dependencies in the headers, but it is a separate issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10776#issuecomment-1158620926:186,error,error,186,https://root.cern,https://github.com/root-project/root/pull/10776#issuecomment-1158620926,1,['error'],['error']
Availability,"Yes, this is correct: As explained in https://github.com/root-project/root/pull/12351, we didn't backport the necessary patches to LLVM 13 as found in ROOT 6.30.{02,04}. They are automatically available after the upgrade to LLVM 16 which doesn't have a ROOT release yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14509#issuecomment-1920773573:193,avail,available,193,https://root.cern,https://github.com/root-project/root/issues/14509#issuecomment-1920773573,1,['avail'],['available']
Availability,"Yes, this is the list of dependencies, but they are optional, we should not emit an error if the package is not installed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14553#issuecomment-1945596698:84,error,error,84,https://root.cern,https://github.com/root-project/root/issues/14553#issuecomment-1945596698,1,['error'],['error']
Availability,"Yes. ( Although once compressed, the default is to download, there is no need to specifically set that.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10066#issuecomment-1066931626:51,down,download,51,https://root.cern,https://github.com/root-project/root/issues/10066#issuecomment-1066931626,1,['down'],['download']
Availability,Yes. Issue is clarified. - I can see the classlist on the browser at home and in the office.; - I cannot see it at the pit .... but this all hints to a funny browser setup there. I have to investigate. Thanks a lot to all for the clarification and please take my apologies for ; creating noise about an issue which was clearly my fault!. Thanks a lot!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15906#issuecomment-2185817262:330,fault,fault,330,https://root.cern,https://github.com/root-project/root/issues/15906#issuecomment-2185817262,1,['fault'],['fault']
Availability,"Yes. The link goes into detail, but record arrays are essentially arrays of structs— contiguous in memory, rowwise across named, differently typed members. You can also specify per-member alignment, in case your operating system has weird alignment rules. The user can then refer to rows of the record array with integer slices and columns with strings in square brackets. Since the data are rectangular, these slices are accomplished through constant strides. I've often wondered what the big deal about Pandas was, since these are the features people describe as the benefits of Pandas, but they've been available in Numpy for years. I've since learned that Pandas additionally has smarter indexing than Numpy's position-based indexing, but that's not needed for something that's essentially a set, like a set of events. (Not needed until we aggregate somehow.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1872#issuecomment-384268662:606,avail,available,606,https://root.cern,https://github.com/root-project/root/pull/1872#issuecomment-384268662,1,['avail'],['available']
Availability,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes.; ```; $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR; CMAKE_INCLUDE_CURRENT_DIR; -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds; ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``; to the include path for each directory. These additional include; directories do not propagate down to subdirectories. This is useful; mainly for out-of-source builds, where files generated into the build; tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8308#issuecomment-856752467:584,failure,failure,584,https://root.cern,https://github.com/root-project/root/issues/8308#issuecomment-856752467,2,"['down', 'failure']","['down', 'failure']"
Availability,"You are confusing 31 bit s390 with 64 bit s390x. Fedora builds packages for s390x, and I did get a bug report in bugzilla that the package build failed on this architecture, which I tracked down to the problem reported here. Up to Fedora 23 they also used to build for s390, though this does not happen any more. I also filed a bug report to you upstream about some failing tests in s390x. https://sft.its.cern.ch/jira/browse/ROOT-8703. The number of failing tests on s390x is on the same order as the number of failing tests on 32 bit arm (though the failing tests are not the same), and far fewer than the number of failing tests on ppc64 and ppc64le. So while s390 is mostly obsolete, s390x is not. Also Debian builds their packages for s390x. I would not mind if you removed support for s390 - it would make sense since llvm does not support it - but removing s390x would be unfortunate, and s390x is supported by llvm. But also s390 worked if you only used compilation and did not use the interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/406#issuecomment-287817725:190,down,down,190,https://root.cern,https://github.com/root-project/root/pull/406#issuecomment-287817725,1,['down'],['down']
Availability,"You are night, we need to make sure that ROOT compiles if there is already ROOT on the system, or at least that you get a clear error. There is already an open issue about this, so I'll close this issue as duplicate:; https://github.com/root-project/root/issues/13101",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337#issuecomment-2046073774:128,error,error,128,https://root.cern,https://github.com/root-project/root/issues/14337#issuecomment-2046073774,1,['error'],['error']
Availability,You are welcome! This feature will be available in the next stable release 6.32 :+1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14815#issuecomment-1966725608:38,avail,available,38,https://root.cern,https://github.com/root-project/root/issues/14815#issuecomment-1966725608,1,['avail'],['available']
Availability,You can get that down by a couple by addressing:; ```; The 'numba>=0.47.0' distribution was not found and is required by the application; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9436#issuecomment-993491610:17,down,down,17,https://root.cern,https://github.com/root-project/root/issues/9436#issuecomment-993491610,1,['down'],['down']
Availability,You can look also at the result of clang-format that will be available after I trigger a build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10435#issuecomment-1143432741:61,avail,available,61,https://root.cern,https://github.com/root-project/root/pull/10435#issuecomment-1143432741,1,['avail'],['available']
Availability,"You can reproduce it on a free online Ubuntu 20 browser-box:. - Go to https://www.onworks.net/os-distributions/ubuntu-based; - Select Ubuntu 20, Start; - Open a WebBrowser within it, google ""cern ROOT install"".; - Copy the line of the ""required dependencies""; - Open a Terminal; - sudo apt update; - Paste the line of the required dependencies to install missing packages; - Go back to web browser; - Copy link to download binary release; - Back to terminal, paste it there; - tar -xzvf ...; - source root/bin/thisroot.sh; - Back to browser, search ""cern root github"", go to Issues; - Download the reproducer of this issue; - unzip; - root -l test_zoom.cpp; - Then zoom. I did the process and it's the case the artifact is there on such a fresh independent install.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9763#issuecomment-1026925002:414,down,download,414,https://root.cern,https://github.com/root-project/root/issues/9763#issuecomment-1026925002,2,"['Down', 'down']","['Download', 'download']"
Availability,"You can see the failure on 5 platforms (!) in our CI:; ```; In file included from /github/home/ROOT-CI/build/net/netxng/G__NetxNG.cxx:38:; Error: /github/home/ROOT-CI/src/net/netxng/inc/TNetXNGFile.h:27:10: fatal error: XrdCl/XrdClFileSystem.hh: No such file or directory; 27 | #include <XrdCl/XrdClFileSystem.hh>; | ^~~~~~~~~~~~~~~~~~~~~~~~~~; compilation terminated.; ```. They are using non-builtin XRootD, and as I write in https://github.com/root-project/root/pull/13752#issuecomment-1838159186 I believe this is a packaging error. I will report it to the correct place, but first I want to restore our builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14170#issuecomment-1838166449:16,failure,failure,16,https://root.cern,https://github.com/root-project/root/pull/14170#issuecomment-1838166449,4,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"You can set different debugging levels for `RLogManager`. See enum in `ROOT/RLogger.hxx`:. ```; enum class ELogLevel : unsigned char {; kUnset,; kFatal, ///< An error which causes further processing to be unreliable; kError, ///< An error; kWarning, ///< Warnings about likely unexpected behavior; kInfo, ///< Informational messages; used for instance for tracing; kDebug ///< Debug information; only useful for developers; can have added verbosity up to 255-kDebug.; };; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14300#issuecomment-1878429143:161,error,error,161,https://root.cern,https://github.com/root-project/root/issues/14300#issuecomment-1878429143,2,['error'],['error']
Availability,"You convinced me that the subevent-section tests should be `EXPECT_DOUBLE_EQ`. > From what I can see, this is only working by chance right now. You are right! This can easily be confirmed (even just on my x86 laptop) by changing the seed on line 66. Setting it to some other values, the `SimBinnedConstrainedTest.EventSections` fails sometimes (e.g. seed = 24) and `SimBinnedConstrainedTest.SubEventSections` as well (e.g. seed = 255). Some seeds even make multiple tests fail, e.g. 25534 fails `BinnedDatasetTest.EventSections` and `SimBinnedConstrainedTest.EventSections` and 2 makes both `SimBinnedConstrainedTest` event-splitting tests fail. I was not able to find a seed that fails the other tests, so it seems to be contained to the `*EventSections` tests. To be complete, I think we should add the explanation of why this comparison doesn't work, which is that **the calculations are**, in fact, **different**. We're comparing a single-section (""all events"") calculation to multi-section (""events section 1"" + ""section 2"" + ...). Obviously, this can give differences due to rounding from FMA or just Kahan summation which also has a small error sometimes. In other tests in the `RooAbsL` and other `RooFit::TestStatistics` suite, this doesn't typically apply. In most of the tests, we're trying to do the exact same calculation (""same"" in terms of CPU operations as well), except either in parallel or through the `TestStatistics` classes instead of the old `RooNLLVar` tree. Sometimes different ordering can change results, like the extended term you mentioned, but also the subsidiary term. Anyway, for this PR: I will suggest an explanation comment and after that it can be merged (@guitargeek agrees, we discussed it in the RooFit dev meeting just now). I will also open an issue reminding us to also apply this change to the two `EventSections` tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389#issuecomment-1550987204:1146,error,error,1146,https://root.cern,https://github.com/root-project/root/pull/12389#issuecomment-1550987204,1,['error'],['error']
Availability,You may want to make a note in the commit that the requirement laid down in the (removed) comment are now satisfied (if they are).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1409#issuecomment-348480282:68,down,down,68,https://root.cern,https://github.com/root-project/root/pull/1409#issuecomment-348480282,1,['down'],['down']
Availability,"You need to `brew update` first, bintray shut down May 1st and brew had to migrate storage providers. You need brew 3.1+ to download packages.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881#issuecomment-840048152:46,down,down,46,https://root.cern,https://github.com/root-project/root/issues/7881#issuecomment-840048152,2,['down'],"['down', 'download']"
Availability,"You probably mean ""are now in development phase"".; As of today, I see that ; 1) there is no better document than the User's guide (the chapter about trees there looks more comprehensive to me than in the manual).; 2) it is still available from the site, people may use that. ; 3) the manual has no pdf. For me it's very important, because I don't want to be online to read docs. I could use `wget`, but when I have a ready pdf, I chose the latter. I honestly think that User's Guide is well-written and useful. I think that to do small updates to that (at least to sync the pdf version with html) is better now, until the manual is finalized and is definitely better than the old guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284#issuecomment-785897720:229,avail,available,229,https://root.cern,https://github.com/root-project/root/issues/7284#issuecomment-785897720,1,['avail'],['available']
Availability,"You think it's good to go like this? It does not have yet all dependencies, e.g., the ones for TMVA experimental are missing. Though we should could have with this a first run through the nightlies and fix failures in our infrastructure (missing packages, version mismatches, ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-654852533:206,failure,failures,206,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-654852533,1,['failure'],['failures']
Availability,"You're missing a bracket (which was part of the [original commit](https://github.com/wlav/CPyCppyy/commit/e40a3fbab87304deb4ed37e217f66d87cc3ceba7):; ```txt; /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx: In member function ‘virtual PyObject* CPyCppyy::CPPClassMethod::Call(CPyCppyy::CPPInstance*&, CPyCppyy_PyArgs_t, size_t, PyObject*, CPyCppyy::CallContext*)’:; Error: /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:38:43: error: expected ‘)’ before ‘{’ token; 38 | (fArgsRequired <= nargs-1) {; | ^~; | ); /github/home/ROOT-CI/src/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:37:12: note: to match this ‘(’; 37 | if ((CPPInstance_Check(arg0) && ((CPPInstance*)arg0)->ObjectIsA() == GetScope()) && \; | ; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15228#issuecomment-2056335768:397,Error,Error,397,https://root.cern,https://github.com/root-project/root/pull/15228#issuecomment-2056335768,2,"['Error', 'error']","['Error', 'error']"
Availability,"You're right! I misunderstood, I thought `std::rotate` rotated the whole iterable (e.g. like https://numpy.org/doc/stable/reference/generated/numpy.roll.html), but I see now it only puts the selected part in front and shoves the rest aside to make room. But then apparently there are still situations that we are not catching. I think probably sometimes there will be yet another task executed before all tasks are in the queue. This is of course always possible, because the OS can delay processes and IPC in any way it sees fit. I can up the sleep time to compensate for this so it happens less often, but it is by the nature of the algorithm unavoidable that some statistical failures will still happen (given slow enough OS'es). What we can do to make sure that the test never fails is to iteratively go through all received tasks and modify the expected order until it matches, but of course in the extreme case that every step is reordered this would then defeat the purpose of the test. A more robust approach would be to wait with taking work off the queue until all tasks have been submitted, but this is not actually desirable functionality, because that would mean workers would be doing nothing when they could already be working. Introducing such functionality just for testing purposes seems silly. So not sure how to ""fix"" this. I will at least put `std::rotate` back in.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11627#issuecomment-1330419059:679,failure,failures,679,https://root.cern,https://github.com/root-project/root/pull/11627#issuecomment-1330419059,2,"['failure', 'robust']","['failures', 'robust']"
Availability,"You're right, but the error vanishes also replacing the pair with a `std::vector<MyClass>` instead of an array, and according to cppreference the value type of `std::vector` must be copy assignable. But honestly I don't know if and how the implementation checks for `is_copy_assignable`. Edit: for clarity, also this applies to the original reproducer in my first post, not to the modification reported in my second post.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10512#issuecomment-1118501692:22,error,error,22,https://root.cern,https://github.com/root-project/root/issues/10512#issuecomment-1118501692,1,['error'],['error']
Availability,"Your understanding is correct, you can go ahead with v6.24/00. For the compile time pinning, from the discussion we had yesterday, we can have architecture specific builds, so that, for example, `x86_64-centos7-gcc9-opt` will stick to the basic `x86-64` instructions, while `haswell-centos7-gcc9-opt` will do its best using AVX2 and all other goodies you get on that platform (we can also use the microarchitecture levels like `x86-64-v2` which will be available as of GCC 11 and Clang 12). For the RooFit specific case, our analysis does not use the builds from SFT and we do not use RooFit in trigger and reconstruction (which are the cases that I'm most worried about). Let's see from somebody in ATLAS what they think. I anyway (as a matter of principle) would prefer if you can have dynamic architecture dispatching that I can turn off in specific builds. @oshadura also mention possible optimizations in compression algorithms, but, again, that's a case that does not worry me, as they only deal with integers, so you do not get incompatible/incorrect results by changing the order of operations (unless there's a bug). The bottom line is that I'm worried about numerical instabilities due to the change of order of floating point operations in trigger and reconstruction code. It doesn't matter if scalar or avx2 versions produce slightly different results, as long as I know that running the scalar version of the application will always give me the same result.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7361#issuecomment-793617647:453,avail,available,453,https://root.cern,https://github.com/root-project/root/issues/7361#issuecomment-793617647,1,['avail'],['available']
Availability,"Yup, @vgvassilev - build failures were unrelated! :-) And fixed!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3043#issuecomment-489605968:25,failure,failures,25,https://root.cern,https://github.com/root-project/root/pull/3043#issuecomment-489605968,1,['failure'],['failures']
Availability,Z] /build/jenkins/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/LogLikelihoodFCN.h:164:68: error: only virtual member functions can be marked 'override' ; - [2020-08-05T11:56:53.845Z] /build/jenkins/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/PoissonLikelihoodFCN.h:130:52: error: only virtual member functions can be marked 'override' ; - [2020-08-05T11:56:53.845Z] /build/jenkins/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/PoissonLikelihoodFCN.h:173:68: error: only virtual member functions can be marked 'override' ; - [2020-08-05T11:56:55.590Z] FAILED: math/mathcore/CMakeFiles/MathCore.dir/src/Fitter.cxx.o ; - [2020-08-05T11:56:55.883Z] /build/jenkins/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/Chi2FCN.h:124:52: error: only virtual member functions can be marked 'override' ; - [2020-08-05T11:56:55.883Z] /build/jenkins/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/Chi2FCN.h:154:68: error: only virtual member functions can be marked 'override' . And 10 more. ### Warnings:; - [2020-08-05T11:55:25.177Z] /build/jenkins/workspace/root-pullrequests-build/root/core/cont/inc/TArrayL64.h:55:4: warning: 'CheckTObjectHashConsistency' overrides a member function but is not marked 'override' [-Winconsistent-missing-override] ; - [2020-08-05T11:55:25.177Z] /build/jenkins/workspace/root-pullrequests-build/root/core/cont/inc/TArrayL64.h:55:4: warning: 'IsA' overrides a member function but is not marked 'override' [-Winconsistent-missing-override] ; - [2020-08-05T11:55:25.177Z] /build/jenkins/workspace/root-pullrequests-build/root/core/cont/inc/TArrayL64.h:55:4: warning: 'ShowMembers' overrides a member function but is not marked 'override' [-Winconsistent-missing-override] ; - [2020-08-05T11:55:25.177Z] /build/jenkins/workspace/root-pullrequests-build/root/core/cont/inc/TArrayL64.h:55:4: warning: 'Streamer' overrides a member function but is not marked 'override' [-Winconsistent-missing-override] ; - [202,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6007#issuecomment-669150961:2069,error,error,2069,https://root.cern,https://github.com/root-project/root/pull/6007#issuecomment-669150961,1,['error'],['error']
Availability,Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:3380:5: error: case label ‘clang::serialization::MSSTRUCT_PRAGMA_OPTIONS’ not within a switch statement ; - [2020-09-04T20:01:33.066Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:3388:5: error: case label ‘clang::serialization::POINTERS_TO_MEMBERS_PRAGMA_OPTIONS’ not within a switch statement ; - [2020-09-04T20:01:33.066Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:3397:5: error: case label ‘clang::serialization::UNUSED_LOCAL_TYPEDEF_NAME_CANDIDATES’ not within a switch statement ; - [2020-09-04T20:01:33.066Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:3403:5: error: case label ‘clang::serialization::CUDA_PRAGMA_FORCE_HOST_DEVICE_DEPTH’ not within a switch statement ; - [2020-09-04T20:01:33.066Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:3411:5: error: case label ‘clang::serialization::PACK_PRAGMA_OPTIONS’ not within a switch statement ; - [2020-09-04T20:01:33.067Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:3434:1: error: expected declaration before ‘}’ token ; - [2020-09-04T20:01:33.067Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:8095:22: error: ‘make_unique’ is not a member of ‘std’ ; - [2020-09-04T20:01:33.067Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:8095:52: error: expected primary-expression before ‘&gt;’ token ; - [2020-09-04T20:01:33.067Z] /home/sftnight/build/works,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6307#issuecomment-687354209:1640,error,error,1640,https://root.cern,https://github.com/root-project/root/pull/6307#issuecomment-687354209,1,['error'],['error']
Availability,Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:07.493Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:07.493Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:09.327Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:10.104Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:12.042Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:12.042Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:13.285Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:15.195Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z . And 49 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcg,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12572#issuecomment-1490040073:1461,avail,available,1461,https://root.cern,https://github.com/root-project/root/pull/12572#issuecomment-1490040073,1,['avail'],['available']
Availability,Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:07.493Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:09.327Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:10.104Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:12.042Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:12.042Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:13.285Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:15.195Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z . And 49 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171681/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_datafr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12572#issuecomment-1490040073:1673,avail,available,1673,https://root.cern,https://github.com/root-project/root/pull/12572#issuecomment-1490040073,1,['avail'],['available']
Availability,Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:09.327Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:10.104Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:12.042Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:12.042Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:13.285Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:15.195Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z . And 49 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171681/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171681/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12572#issuecomment-1490040073:1885,avail,available,1885,https://root.cern,https://github.com/root-project/root/pull/12572#issuecomment-1490040073,1,['avail'],['available']
Availability,Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:10.104Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:12.042Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:12.042Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:13.285Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z ; - [2023-03-30T09:26:15.195Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:373:23: warning: inline variables are only available with -std=c++1z or -std=gnu++1z . And 49 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171681/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171681/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171681/testReport/projectroot.roottest.root/dataframe/roottest_r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12572#issuecomment-1490040073:2097,avail,available,2097,https://root.cern,https://github.com/root-project/root/pull/12572#issuecomment-1490040073,1,['avail'],['available']
Availability,"Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple(460,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\IR\SafepointIRVerifier.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\IR\LLVMCore.vcxproj] ; - [2021-05-10T15:13:50.633Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility(211,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\IR\PassManager.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\IR\LLVMCore.vcxproj] ; - [2021-05-10T15:13:50.633Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/PointerUnion.h(51,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\IR\TypeFinder.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\IR\LLVMCore.vcxproj] ; - [2021-05-10T15:13:50.633Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Casting.h(227,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Serialization\ASTWriterDecl.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Serialization\obj.clangSerialization.vcxproj] ; - [2021-05-10T15:13:50.633Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility(2410,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGCUDANV.cpp) [C:\build\workspace\root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8113#issuecomment-836826947:3034,error,error,3034,https://root.cern,https://github.com/root-project/root/pull/8113#issuecomment-836826947,1,['error'],['error']
Availability,"Z] C:\build\workspace\root-pullrequests-build\root\bindings\pyroot\pythonizations\src\GenericPyz.cxx(14,10): fatal error C1083: Cannot open include file: 'CPyCppyy.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot\pythonizations\ROOTPythonizations3_8.vcxproj] ; - [2020-06-04T11:49:53.433Z] C:\build\workspace\root-pullrequests-build\root\bindings\pyroot\pythonizations\src\RVecPyz.cxx(12,10): fatal error C1083: Cannot open include file: 'CPyCppyy.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot\pythonizations\ROOTPythonizations3_8.vcxproj] ; - [2020-06-04T11:49:53.766Z] C:\build\workspace\root-pullrequests-build\root\bindings\pyroot\pythonizations\src\TClassPyz.cxx(13,10): fatal error C1083: Cannot open include file: 'CPyCppyy.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot\pythonizations\ROOTPythonizations3_8.vcxproj] ; - [2020-06-04T11:49:54.097Z] C:\build\workspace\root-pullrequests-build\root\bindings\pyroot\pythonizations\src\TClonesArrayPyz.cxx(13,10): fatal error C1083: Cannot open include file: 'CPyCppyy.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot\pythonizations\ROOTPythonizations3_8.vcxproj] ; - [2020-06-04T11:49:54.448Z] C:\build\workspace\root-pullrequests-build\root\bindings\pyroot\pythonizations\src\TDirectoryFilePyz.cxx(12,10): fatal error C1083: Cannot open include file: 'CPyCppyy.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot\pythonizations\ROOTPythonizations3_8.vcxproj] ; - [2020-06-04T11:49:54.752Z] C:\build\workspace\root-pullrequests-build\root\bindings\pyroot\pythonizations\src\TDirectoryPyz.cxx(12,10): fatal error C1083: Cannot open include file: 'CPyCppyy.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot\pythonizations\ROOTPythonizations3_8.vcxproj] . And 10 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5643#issuecomment-638801289:2871,error,error,2871,https://root.cern,https://github.com/root-project/root/pull/5643#issuecomment-638801289,3,['error'],['error']
Availability,"Z] C:\build\workspace\root-pullrequests-build\root\core\meta\src\TClass.cxx(1400,51): error C2664: 'bool TClassEdit::IsStdPair(std::string_view)': cannot convert argument 1 from 'TString' to 'std::string_view' [C:\build\workspace\root-pullrequests-build\build\core\Core.vcxproj] ; - [2023-11-01T13:56:05.150Z] C:\build\workspace\root-pullrequests-build\root\core\meta\src\TClass.cxx(1400,15): error C2737: 'ispair': const object must be initialized [C:\build\workspace\root-pullrequests-build\build\core\Core.vcxproj] ; - [2023-11-01T13:56:05.150Z] C:\build\workspace\root-pullrequests-build\root\core\meta\src\TClass.cxx(1464,46): error C2665: 'TClassEdit::IsSTLCont': none of the 2 overloads could convert all the argument types [C:\build\workspace\root-pullrequests-build\build\core\Core.vcxproj] ; - [2023-11-01T13:56:05.150Z] C:\build\workspace\root-pullrequests-build\root\core\meta\src\TClass.cxx(1495,7): error C2664: 'bool TClassEdit::IsArtificial(std::string_view)': cannot convert argument 1 from 'TString' to 'std::string_view' [C:\build\workspace\root-pullrequests-build\build\core\Core.vcxproj] ; - [2023-11-01T13:56:05.150Z] C:\build\workspace\root-pullrequests-build\root\core\meta\src\TClass.cxx(1532,7): error C2664: 'bool TClassEdit::IsArtificial(std::string_view)': cannot convert argument 1 from 'TString' to 'std::string_view' [C:\build\workspace\root-pullrequests-build\build\core\Core.vcxproj] ; - [2023-11-01T13:56:05.150Z] C:\build\workspace\root-pullrequests-build\root\core\meta\src\TClass.cxx(4098,7): error C2664: 'bool TClassEdit::IsStdPair(std::string_view)': cannot convert argument 1 from 'TString' to 'std::string_view' [C:\build\workspace\root-pullrequests-build\build\core\Core.vcxproj] ; - [2023-11-01T13:56:05.150Z] C:\build\workspace\root-pullrequests-build\root\core\meta\src\TClass.cxx(6587,51): error C2665: 'TClassEdit::IsSTLCont': none of the 2 overloads could convert all the argument types [C:\build\workspace\root-pullrequests-build\build\core\Core.vcx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13993#issuecomment-1789002725:1160,error,error,1160,https://root.cern,https://github.com/root-project/root/pull/13993#issuecomment-1789002725,1,['error'],['error']
Availability,"Z] C:\build\workspace\root-pullrequests-build\root\core\metacling\test\TClingMethodInfoTests.cxx(621,53): error C2039: 'unordered_map': is not a member of 'std' [C:\build\workspace\root-pullrequests-build\build\core\metacling\test\TClingTest.vcxproj] ; - [2021-05-07T18:26:09.619Z] C:\build\workspace\root-pullrequests-build\root\core\metacling\test\TClingMethodInfoTests.cxx(621,66): error C2061: syntax error: identifier 'unordered_map' [C:\build\workspace\root-pullrequests-build\build\core\metacling\test\TClingTest.vcxproj] ; - [2021-05-07T18:26:09.619Z] C:\build\workspace\root-pullrequests-build\root\core\metacling\test\TClingMethodInfoTests.cxx(630,27): error C2065: 'funcPar0': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\core\metacling\test\TClingTest.vcxproj] ; - [2021-05-07T18:26:09.619Z] C:\build\workspace\root-pullrequests-build\root\core\metacling\test\TClingMethodInfoTests.cxx(631,1): error C3536: 'iExpected': cannot be used before it is initialized [C:\build\workspace\root-pullrequests-build\build\core\metacling\test\TClingTest.vcxproj] ; - [2021-05-07T18:26:09.619Z] C:\build\workspace\root-pullrequests-build\root\core\metacling\test\TClingMethodInfoTests.cxx(631,27): error C2065: 'funcPar0': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\core\metacling\test\TClingTest.vcxproj] ; - [2021-05-07T18:26:09.619Z] C:\build\workspace\root-pullrequests-build\root\core\metacling\test\TClingMethodInfoTests.cxx(633,1): error C2660: 'testing::internal::EqHelper::Compare': function does not take 3 arguments [C:\build\workspace\root-pullrequests-build\build\core\metacling\test\TClingTest.vcxproj] ; - [2021-05-07T18:26:09.619Z] C:\build\workspace\root-pullrequests-build\root\core\metacling\test\TClingMethodInfoTests.cxx(633,10): error C2512: 'testing::AssertionResult': no appropriate default constructor available [C:\build\workspace\root-pullrequests-build\build\core\metacling\test\TClingTest.vcxproj] ; - [2021-05-07T18:2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8124#issuecomment-834674899:1178,error,error,1178,https://root.cern,https://github.com/root-project/root/pull/8124#issuecomment-834674899,1,['error'],['error']
Availability,Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\tree\treeplayer\test\treeprocessormt.vcxproj] ; - [2020-04-20T13:04:27.693Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\io\io\test\TFile.vcxproj] ; - [2020-04-20T13:04:27.693Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_cache.vcxproj] ; - [2020-04-20T13:04:27.693Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\..\googletest-prefix\src\googletest-build\lib\\gtest\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\ntuple_print.vcxproj] ; - [2020-04-20T13:04:28.142Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\math\mathcore\test\CladDerivatorTests.vcxproj] ; - [2020-04-20T13:04:28.142Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\..\googletest-prefix\src\googletest-build\lib\\gtest\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\tmva\tmva\test\ROC\tmvatmvatestROCUnit.vcxproj] ; - [2020-04-20T13:04:28.547Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\math\mathcore\test\GradientFittingUnit.vcxproj] ; - [2020-04-20T13:04:28.547Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\hist\hist\test\testTH1.vcxproj] ; - [2020-04-20T13:04:28.547Z] LINK : fatal error LNK1181: cannot,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5228#issuecomment-616540341:1569,error,error,1569,https://root.cern,https://github.com/root-project/root/pull/5228#issuecomment-616540341,1,['error'],['error']
Availability,[2020-05-19T14:15:48.373Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_GetNSlots_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;int&gt;::fgMaxSlots' ; - [2020-05-19T14:15:48.373Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_CreateAndDestroy_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T14:15:48.373Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_SetAtSlot_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T14:15:48.373Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_Get_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T14:15:48.373Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_GetAtSlot_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T14:15:48.373Z] collect2: error: ld returned 1 exit status ; - [2020-05-19T14:15:48.373Z] FAILED: core/thread/test/corethreadtestUnit ; - [2020-05-19T14:15:48.373Z] core/thread/test/CMakeFiles/corethreadtestUnit.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_GetNSlots_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;int&gt;::fgMaxSlots' ; - [2020-05-19T14:15:48.373Z] core/thread/test/CMakeFiles/corethreadtestUnit.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_CreateAndDestroy_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' . A,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5655#issuecomment-630848356:1455,error,error,1455,https://root.cern,https://github.com/root-project/root/pull/5655#issuecomment-630848356,1,['error'],['error']
Availability,[2020-05-19T15:20:14.038Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_GetNSlots_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;int&gt;::fgMaxSlots' ; - [2020-05-19T15:20:14.038Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_CreateAndDestroy_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T15:20:14.038Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_SetAtSlot_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T15:20:14.038Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_Get_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T15:20:14.038Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_GetAtSlot_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T15:20:14.038Z] collect2: error: ld returned 1 exit status ; - [2020-05-19T15:20:14.038Z] FAILED: core/thread/test/corethreadtestUnit ; - [2020-05-19T15:20:14.039Z] core/thread/test/CMakeFiles/corethreadtestUnit.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_GetNSlots_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;int&gt;::fgMaxSlots' ; - [2020-05-19T15:20:14.039Z] core/thread/test/CMakeFiles/corethreadtestUnit.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_CreateAndDestroy_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' . A,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5653#issuecomment-630892693:1455,error,error,1455,https://root.cern,https://github.com/root-project/root/pull/5653#issuecomment-630892693,1,['error'],['error']
Availability,[2020-05-19T16:02:03.499Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_GetNSlots_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;int&gt;::fgMaxSlots' ; - [2020-05-19T16:02:03.499Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_CreateAndDestroy_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T16:02:03.499Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_SetAtSlot_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T16:02:03.499Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_Get_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T16:02:03.499Z] core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_GetAtSlot_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' ; - [2020-05-19T16:02:03.499Z] collect2: error: ld returned 1 exit status ; - [2020-05-19T16:02:03.499Z] FAILED: core/thread/test/corethreadtestUnit ; - [2020-05-19T16:02:03.499Z] core/thread/test/CMakeFiles/corethreadtestUnit.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_GetNSlots_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;int&gt;::fgMaxSlots' ; - [2020-05-19T16:02:03.499Z] core/thread/test/CMakeFiles/corethreadtestUnit.dir/testTThreadedObject.cxx.o:testTThreadedObject.cxx:function TThreadedObject_CreateAndDestroy_Test::TestBody(): error: undefined reference to 'ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots' . A,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5651#issuecomment-630917627:1455,error,error,1455,https://root.cern,https://github.com/root-project/root/pull/5651#issuecomment-630917627,1,['error'],['error']
Availability,"[2020-10-09T14:01:13.838Z] C:\build\workspace\root-pullrequests-build\root\math\mathcore\inc\Fit/Chi2FCN.h(66,120): error C2039: 'ExecutionPolicy': is not a member of 'ROOT::Fit::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\mathcore\G__MathCore.vcxproj] ; - [2020-10-09T14:01:13.838Z] C:\build\workspace\root-pullrequests-build\root\math\mathcore\inc\Fit/Chi2FCN.h(66,1): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [C:\build\workspace\root-pullrequests-build\build\math\mathcore\G__MathCore.vcxproj] ; - [2020-10-09T14:01:13.838Z] C:\build\workspace\root-pullrequests-build\root\math\mathcore\inc\Fit/Chi2FCN.h(66,136): error C2143: syntax error: missing ',' before '&' [C:\build\workspace\root-pullrequests-build\build\math\mathcore\G__MathCore.vcxproj] ; - [2020-10-09T14:01:13.838Z] C:\build\workspace\root-pullrequests-build\root\math\mathcore\inc\Fit/Chi2FCN.h(77,1): error C2039: 'Internal': is not a member of 'ROOT::Fit::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\mathcore\G__MathCore.vcxproj] ; - [2020-10-09T14:01:13.838Z] C:\build\workspace\root-pullrequests-build\root\math\mathcore\inc\Fit/Chi2FCN.h(77,77): error C3083: 'Internal': the symbol to the left of a '::' must be a type [C:\build\workspace\root-pullrequests-build\build\math\mathcore\G__MathCore.vcxproj] ; - [2020-10-09T14:01:13.838Z] C:\build\workspace\root-pullrequests-build\root\math\mathcore\inc\Fit/Chi2FCN.h(77,87): error C2039: 'ExecutionPolicy': is not a member of 'ROOT::Fit::ROOT' [C:\build\workspace\root-pullrequests-build\build\math\mathcore\G__MathCore.vcxproj] ; - [2020-10-09T14:01:13.839Z] C:\build\workspace\root-pullrequests-build\root\math\mathcore\inc\Fit/Chi2FCN.h(77,1): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [C:\build\workspace\root-pullrequests-build\build\math\mathcore\G__MathCore.vcxproj] ; - [2020-10-09T14:01:13.839Z] C:\build\workspace\root-pullrequests-build\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6327#issuecomment-706198898:1699,error,error,1699,https://root.cern,https://github.com/root-project/root/pull/6327#issuecomment-706198898,1,['error'],['error']
Availability,"[C:\build\workspace\root-pullrequests-build\build\io\rootpcm\RootPcmObjs.vcxproj] ; - [2020-12-14T22:07:41.982Z] C:\build\workspace\root-pullrequests-build\root\core\base\inc\TROOT.h(261,38): error C2678: binary '!=': no operator found which takes a left-hand operand of type 'ROOT::Internal::TDirectoryAtomicAdapter' (or there is no acceptable conversion) [C:\build\workspace\root-pullrequests-build\build\core\BaseTROOT.vcxproj] ; - [2020-12-14T22:07:41.982Z] C:\build\workspace\root-pullrequests-build\root\core\base\inc\TROOT.h(261,38): error C2678: binary '!=': no operator found which takes a left-hand operand of type 'ROOT::Internal::TDirectoryAtomicAdapter' (or there is no acceptable conversion) [C:\build\workspace\root-pullrequests-build\build\core\meta\Meta.vcxproj] ; - [2020-12-14T22:07:42.918Z] C:\build\workspace\root-pullrequests-build\root\core\base\inc\TROOT.h(261,38): error C2678: binary '!=': no operator found which takes a left-hand operand of type 'ROOT::Internal::TDirectoryAtomicAdapter' (or there is no acceptable conversion) [C:\build\workspace\root-pullrequests-build\build\core\winnt\Winnt.vcxproj] ; - [2020-12-14T22:07:43.232Z] C:\build\workspace\root-pullrequests-build\root\core\base\inc\TROOT.h(261,38): error C2678: binary '!=': no operator found which takes a left-hand operand of type 'ROOT::Internal::TDirectoryAtomicAdapter' (or there is no acceptable conversion) [C:\build\workspace\root-pullrequests-build\build\core\base\Base.vcxproj] ; - [2020-12-14T22:07:51.151Z] C:\build\workspace\root-pullrequests-build\root\core\base\inc\TROOT.h(261,38): error C2678: binary '!=': no operator found which takes a left-hand operand of type 'ROOT::Internal::TDirectoryAtomicAdapter' (or there is no acceptable conversion) [C:\build\workspace\root-pullrequests-build\build\core\meta\Meta.vcxproj] ; - [2020-12-14T22:07:53.464Z] C:\build\workspace\root-pullrequests-build\root\core\base\inc\TROOT.h(261,38): error C2678: binary '!=': no operator found which takes a left",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6952#issuecomment-744746758:2256,error,error,2256,https://root.cern,https://github.com/root-project/root/pull/6952#issuecomment-744746758,1,['error'],['error']
Availability,[C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_utils.vcxproj] ; - C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\xmemory0(1101): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_9b60555fex': No space left on device [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\datasource_sqlite.vcxproj] ; - C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\streambuf(568): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_7eeb19c2sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\gui\sessionviewer\SessionViewer.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_report.cxx(100): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_ec90e11cgl': No space left on device [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_report.vcxproj] ; - C:\build\workspace\root-pullrequests-build\build\include\TH3.h(259): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_fb631728ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_colnames.vcxproj] ; - C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\vector(1361): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_870ac8afdb': No space left on device [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_simple.vcxproj] ; - C:\build\workspace\root-pullrequests-build\build\include\TPad.h(357): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_48e18f1aex': No space left on device [,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4317#issuecomment-527074091:2234,error,error,2234,https://root.cern,https://github.com/root-project/root/pull/4317#issuecomment-527074091,1,['error'],['error']
Availability,"[See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36226/console).; ### Errors:; - include/ROOT/RConfig.h:48:4: error: #error ""ROOT requires support for C++11 or higher."" ; - include/ROOT/RConfig.h:50:5: error: #error ""Pass `-std=c++11` as compiler argument."" ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/c++0x_warning.h:32:2: error: #error This file requires compiler and library support for the ISO C++ 2011 standard. This support is currently experimental, and must be enabled with the -std=c++11 or -std=gnu++11 compiler options. ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:70:3: error: ‘constexpr’ does not name a type ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:76:3: error: ‘constexpr’ does not name a type ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:83:3: error: ‘constexpr’ does not name a type ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:90:3: error: ‘constexpr’ does not name a type ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:98:41: error: expected initializer before ‘noexcept’ ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:102:41: error: expected initializer before ‘noexcept’ ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:108:30: error: expected initializer before ‘noexcept’ . And 4310 more. ### Warnings:; - include/TArray.h:58:4: warning: identifier ‘decltype’ is a keyword in C++11 [-Wc++0x-compat] ; - include/TIsAProxy.h:43:34: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - include/TIsAProxy.h:44:45: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by def",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411303638:1006,error,error,1006,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411303638,1,['error'],['error']
Availability,"[See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/42472/console).; ### Errors:; - include/ROOT/RConfig.h:48:4: error: #error ""ROOT requires support for C++11 or higher."" ; - include/ROOT/RConfig.h:50:5: error: #error ""Pass `-std=c++11` as compiler argument."" ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/c++0x_warning.h:32:2: error: #error This file requires compiler and library support for the ISO C++ 2011 standard. This support is currently experimental, and must be enabled with the -std=c++11 or -std=gnu++11 compiler options. ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:70:3: error: ‘constexpr’ does not name a type ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:76:3: error: ‘constexpr’ does not name a type ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:83:3: error: ‘constexpr’ does not name a type ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:90:3: error: ‘constexpr’ does not name a type ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:98:41: error: expected initializer before ‘noexcept’ ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:102:41: error: expected initializer before ‘noexcept’ ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:108:30: error: expected initializer before ‘noexcept’ . And 4220 more. ### Warnings:; - include/TArray.h:58:4: warning: identifier ‘decltype’ is a keyword in C++11 [-Wc++0x-compat] ; - include/TIsAProxy.h:43:34: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - include/TIsAProxy.h:44:45: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by def",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2711#issuecomment-425415808:1006,error,error,1006,https://root.cern,https://github.com/root-project/root/pull/2711#issuecomment-425415808,1,['error'],['error']
Availability,"[See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/42490/console).; ### Errors:; - include/ROOT/RConfig.h:48:4: error: #error ""ROOT requires support for C++11 or higher."" ; - include/ROOT/RConfig.h:50:5: error: #error ""Pass `-std=c++11` as compiler argument."" ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/c++0x_warning.h:32:2: error: #error This file requires compiler and library support for the ISO C++ 2011 standard. This support is currently experimental, and must be enabled with the -std=c++11 or -std=gnu++11 compiler options. ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:70:3: error: ‘constexpr’ does not name a type ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:76:3: error: ‘constexpr’ does not name a type ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:83:3: error: ‘constexpr’ does not name a type ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:90:3: error: ‘constexpr’ does not name a type ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:98:41: error: expected initializer before ‘noexcept’ ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:102:41: error: expected initializer before ‘noexcept’ ; - /cvmfs/sft.cern.ch/lcg/contrib/gcc/4.8.4/x86_64-slc6/include/c++/4.8.4/bits/atomic_base.h:108:30: error: expected initializer before ‘noexcept’ . And 1155 more. ### Warnings:; - include/TArray.h:58:4: warning: identifier ‘decltype’ is a keyword in C++11 [-Wc++0x-compat] ; - include/TIsAProxy.h:43:34: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default] ; - include/TIsAProxy.h:44:45: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by def",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2705#issuecomment-425417346:1006,error,error,1006,https://root.cern,https://github.com/root-project/root/pull/2705#issuecomment-425417346,1,['error'],['error']
Availability,[See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66257/console).; ### Errors:; - FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/roofit/roofit/inc -Iinclude -I/mnt/build/workspace/root-pullrequests-build/root/roofit/roofit -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/hist/hist/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/matrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/graf/inc -I/mnt/build/workspace/root-pullrequests-build/root/tree/tree/inc -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/minuit/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/foam/inc -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -std=c++11 -MD -MT roofit/roofit/CMakeFiles/RooFit.dir/src/RooBukinPdf.cxx.o -MF roofit/roofit/CMakeFiles/RooFit.dir/src/RooBukinPdf.cxx.o.d -o roofit/roofit/CMakeFiles/RooFit.dir/src/RooBukinPdf.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooBukinPdf.cxx ; - /mnt/build/workspace/root-pullrequests-build/root/roofit/roofit/src/BatchHelpers.h:81:22: error: enclosing class of constexpr non-static member function ‘double BatchHelpers::BracketAdapterWithBranch::operator[](std::size_t) const’ is not a literal type . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAddPdf.cxx:860:0: warning: ignoring #pragma omp simd [-Wunknown-pragmas],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4283#issuecomment-525175660:1711,error,error,1711,https://root.cern,https://github.com/root-project/root/pull/4283#issuecomment-525175660,1,['error'],['error']
Availability,[This PR](https://github.com/root-project/roottest/pull/202) to roottest should fix the PyROOT test failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-396154996:100,failure,failures,100,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-396154996,1,['failure'],['failures']
Availability,[This piece of code is the faulty one](https://github.com/root-project/root/blame/e6080327f4e6318692d3917152598126b76f4455/hist/histpainter/src/THistPainter.cxx#L7407). It looks weird ... I do not really understand the logic right now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12567#issuecomment-1561160055:27,fault,faulty,27,https://root.cern,https://github.com/root-project/root/issues/12567#issuecomment-1561160055,1,['fault'],['faulty']
Availability,[alma8](https://github.com/root-project/root/actions/runs/9171637864/job/25216393242?pr=15578) and [mac13](https://github.com/root-project/root/actions/runs/9171637864/job/25216391917?pr=15578) show the mentioned failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15578#issuecomment-2122430247:213,failure,failure,213,https://root.cern,https://github.com/root-project/root/pull/15578#issuecomment-2122430247,1,['failure'],['failure']
Availability,[conversionWithChecksum.tgz](https://github.com/root-project/root/files/14102267/conversionWithChecksum.tgz). contains the full example:. ```; root.exe -b -l -q writedata.C+; root.exe -b -l -q simpleread.C+ ; ```; ```; ***********************************; * Row * Instance * seg_split *; ***********************************; Error in <TBufferFile::CheckByteCount>: object of class vector<CSCSegment> read too few bytes: 4 instead of 24; * 0 * 0 * 0 *; ***********************************; Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24; ***********************************; * Row * Instance * seg_unspl *; ***********************************; Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24; Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24; * 0 * 0 * 1 *; ***********************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14491#issuecomment-1917587621:325,Error,Error,325,https://root.cern,https://github.com/root-project/root/issues/14491#issuecomment-1917587621,4,['Error'],['Error']
Availability,[core/foundation/inc/ROOT/span.hxx](https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx) should never be used in the same build as the official span. It is literally meants to be a bridge from older C++ standard (where it is not available) to the newer standard (where it is available). . Which standard did you build ROOT with? Which standard did you build your code with?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13042#issuecomment-1595244329:260,avail,available,260,https://root.cern,https://github.com/root-project/root/issues/13042#issuecomment-1595244329,2,['avail'],['available']
Availability,"\14.23.28105\include\xutility(132,48): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXInstrInfo.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2021-05-04T11:23:49.988Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/TrailingObjects.h(224,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGCXX.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2021-05-04T11:23:49.988Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree(715,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\InterfaceStubFunctionsConsumer.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2021-05-04T11:23:49.988Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility(122,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGAtomic.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2021-05-04T11:23:49.989Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector(1706,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\Precompi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8036#issuecomment-831868860:2467,error,error,2467,https://root.cern,https://github.com/root-project/root/pull/8036#issuecomment-831868860,1,['error'],['error']
Availability,"\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple(26,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\Inliner.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] ; - [2021-04-18T19:10:15.047Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/FoldingSet.h(371,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\DeclarationName.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2021-04-18T19:10:15.048Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/ArrayRef.h(239,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\PrecompiledPreamble.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2021-04-18T19:10:15.048Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(384,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\LiveRegMatrix.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2021-04-18T19:10:15.048Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Analysis\ScalarEvolutionNormalization.cpp(118,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Analysis\LLVMAnalysis.vcxproj] ; - [2021-04-18T19:10:15.048Z] C:\Program Files (x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7910#issuecomment-822045584:2532,error,error,2532,https://root.cern,https://github.com/root-project/root/pull/7910#issuecomment-822045584,1,['error'],['error']
Availability,"\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple(89,68): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\ASTImporter.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2021-09-29T19:44:55.882Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory(1670,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\Decl.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2021-09-29T19:44:55.882Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility(212,50): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\JumpThreading.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2021-09-29T19:44:55.882Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory(1414,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Lex\PPDirectives.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Lex\obj.clangLex.vcxproj] ; - [2021-09-29T19:44:55.882Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple(501,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\LoopAccessAnalysisPrinter.cpp) [C:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9048#issuecomment-930494418:3399,error,error,3399,https://root.cern,https://github.com/root-project/root/pull/9048#issuecomment-930494418,1,['error'],['error']
Availability,"\2019\Community\VC\Tools\MSVC\14.23.28105\include\unordered_map(258,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\Parser.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2021-05-04T07:51:52.743Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree(630,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\LiveInterval.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2021-05-04T07:51:52.743Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocnum(1247,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Analysis\PostOrderCFGView.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Analysis\obj.clangAnalysis.vcxproj] ; - [2021-05-04T07:51:52.743Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/ExprCXX.h(3039,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseDeclCXX.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2021-05-04T07:51:53.144Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/StringMap.h(237,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseTemplate.cpp)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8082#issuecomment-831753444:1680,error,error,1680,https://root.cern,https://github.com/root-project/root/pull/8082#issuecomment-831753444,1,['error'],['error']
Availability,"\2019\Community\VC\Tools\MSVC\14.29.30133\include\tuple(190,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\Attributor.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] ; - [2022-04-14T16:21:11.691Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\tuple(494,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Analysis\ScalarEvolutionNormalization.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Analysis\LLVMAnalysis.vcxproj] ; - [2022-04-14T16:21:11.691Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\ratio(78,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXTargetTransformInfo.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2022-04-14T16:21:11.691Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/ArrayRef.h(184,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\SCCP.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] ; - [2022-04-14T16:21:11.691Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\ratio(28,53): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXReplaceImageHandles.cpp) [C:\build\workspace\root-pullreque",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8770#issuecomment-1099368241:3378,error,error,3378,https://root.cern,https://github.com/root-project/root/pull/8770#issuecomment-1099368241,1,['error'],['error']
Availability,"\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility(151,49): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\LiveIntervals.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-03-01T09:32:43.765Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/PassManager.h(784,56): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\InferAddressSpaces.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-03-01T09:32:43.765Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits(1444,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\LiveInterval.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-03-01T09:32:43.765Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory(948,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\InlineSpiller.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-03-01T09:32:43.765Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(357,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\core\metacling\src\MetaCling.vcxproj] ; - [2022-03-01T09:32:43.765Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10002#issuecomment-1055216231:1662,error,error,1662,https://root.cern,https://github.com/root-project/root/pull/10002#issuecomment-1055216231,1,['error'],['error']
Availability,"\Community\VC\Tools\MSVC\14.32.31326\include\vector(706,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\StackMaps.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-10-05T09:38:48.507Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Format.h(104,34): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\MCTargetDesc\NVPTXMCTargetDesc.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\MCTargetDesc\LLVMNVPTXDesc.vcxproj] ; - [2022-10-05T09:38:48.507Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory(1368,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXFrameLowering.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2022-10-05T09:38:48.790Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\tuple(114,8): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Basic\Sanitizers.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Basic\obj.clangBasic.vcxproj] ; - [2022-10-05T09:38:48.790Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\unordered_map(231,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Analysis\BodyFarm.cpp) [C:\build\workspace\roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1268198987:3202,error,error,3202,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1268198987,1,['error'],['error']
Availability,"\DebugInfo\CodeView\LLVMDebugInfoCodeView.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/DebugInfo/CodeView/SymbolRecordMapping.h(43): warning C4266: 'llvm::Error llvm::codeview::SymbolVisitorCallbacks::visitSymbolBegin(llvm::codeview::CVSymbol &,uint32_t)': no override available for virtual member function from base 'llvm::codeview::SymbolVisitorCallbacks'; function is hidden (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\CodeView\SymbolDumper.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\CodeView\LLVMDebugInfoCodeView.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/DebugInfo/CodeView/SymbolSerializer.h(76): warning C4266: 'llvm::Error llvm::codeview::SymbolVisitorCallbacks::visitSymbolBegin(llvm::codeview::CVSymbol &,uint32_t)': no override available for virtual member function from base 'llvm::codeview::SymbolVisitorCallbacks'; function is hidden (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\CodeView\SymbolSerializer.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\CodeView\LLVMDebugInfoCodeView.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\CodeView\SymbolDumper.cpp(62): warning C4266: 'llvm::Error llvm::codeview::SymbolVisitorCallbacks::visitSymbolBegin(llvm::codeview::CVSymbol &,uint32_t)': no override available for virtual member function from base 'llvm::codeview::SymbolVisitorCallbacks'; function is hidden [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\CodeView\LLVMDebugInfoCodeView.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\MC\MCMachOStreamer.cpp(111): warning C4266: 'void llvm::MCObjectStreamer::EmitLabel(llvm::MCSymbol *,llvm::SMLoc,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3947#issuecomment-526762595:3648,Error,Error,3648,https://root.cern,https://github.com/root-project/root/pull/3947#issuecomment-526762595,10,"['Error', 'avail']","['Error', 'available']"
Availability,"\Lex\clangLex.dir\Release\PPConditionalDirectiveRecord.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Lex\clangLex.vcxproj] ; - [2020-05-14T12:51:36.557Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/DenseMap.h(580,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_3f6a277fex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Analysis\ThreadSafety.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Analysis\clangAnalysis.vcxproj] ; - [2020-05-14T12:51:36.557Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Bitcode/BitstreamReader.h(55,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_cc044460db': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\FrontendActions.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\clangFrontend.vcxproj] ; - [2020-05-14T12:51:36.557Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Rewrite\DeltaTree.cpp : fatal error C1085: Cannot write compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Rewrite\clangRewrite.dir\Release\DeltaTree.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Rewrite\clangRewrite.vcxproj] ; - [2020-05-14T12:51:36.557Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocale(288,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_7b314e6dsy': No s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5607#issuecomment-628614684:2081,error,error,2081,https://root.cern,https://github.com/root-project/root/pull/5607#issuecomment-628614684,1,['error'],['error']
Availability,"\Local\Temp\_CL_a3b6fe03ex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\CodeView\TypeRecordMapping.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\CodeView\LLVMDebugInfoCodeView.vcxproj] ; - [2020-08-13T08:59:59.928Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\InstCombine\InstCombineSelect.cpp(1547,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_5d1f4f63db': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\InstCombine\LLVMInstCombine.vcxproj] ; - [2020-08-13T09:00:00.377Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Casting.h(300,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_b65dea1ddb': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Bitcode\Reader\BitReader.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Bitcode\Reader\LLVMBitReader.vcxproj] ; - [2020-08-13T09:00:00.377Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/DebugInfo/CodeView/SymbolVisitorCallbacks.h(33): message : see declaration of 'llvm::codeview::SymbolVisitorCallbacks::visitSymbolBegin' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\CodeView\SymbolSerializer.cpp)C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(2752,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_aa614ad0ex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\Cod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6170#issuecomment-673358392:2322,error,error,2322,https://root.cern,https://github.com/root-project/root/pull/6170#issuecomment-673358392,1,['error'],['error']
Availability,"\Local\Temp\_CL_dcd26570ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\core\textinput\TextInput.vcxproj] ; - [2023-02-02T11:06:45.339Z] C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h(1759,5): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_5f84a9f1ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\core\zstd\Zstd.vcxproj] ; - [2023-02-02T11:06:45.339Z] C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_io.h(416,9): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_2d289af8ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\core\BaseTROOT.vcxproj] ; - [2023-02-02T11:06:45.339Z] C:\build\workspace\root-pullrequests-build\root\core\zip\src\ZDeflate.c(752,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_e4dc973dgl': No space left on device [C:\build\workspace\root-pullrequests-build\build\core\zip\Zip.vcxproj] ; - [2023-02-02T11:06:45.339Z] C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\shared\basetsd.h(370,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_af4d3f71ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\core\foundation\Foundation.vcxproj] ; - [2023-02-02T11:06:45.339Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h(62,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_47b47242ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\core\base\Base.vcxproj] ; - [2023-02-02T11:06:45.339Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring(5020,9): fatal error C1088: Cannot flush compiler in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11574#issuecomment-1413562563:1513,error,error,1513,https://root.cern,https://github.com/root-project/root/pull/11574#issuecomment-1413562563,1,['error'],['error']
Availability,"\MSVC\14.29.30133\include\memory(3180,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\PHIElimination.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-02-11T17:25:03.577Z] C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\include\clang/AST/Attrs.inc(9531,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Analysis\RetainSummaryManager.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Analysis\obj.clangAnalysis.vcxproj] ; - [2022-02-11T17:25:03.577Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(687,5): error MSB8071: Cannot parse tool output 'C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/Instructions.h(2764,31): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\InstCombine\InstCombineAddSub.cpp)' with regex '^In file included from .*$': Exception of type 'System.OutOfMemoryException' was thrown. [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\InstCombine\LLVMInstCombine.vcxproj] ; - [2022-02-11T17:25:03.577Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/type_traits.h(131,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\DiagnosticRenderer.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2022-02-11T17:25:03.577Z] C:\Progr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9872#issuecomment-1036446055:1257,error,error,1257,https://root.cern,https://github.com/root-project/root/pull/9872#issuecomment-1036446055,1,['error'],['error']
Availability,"\MSVC\14.29.30133\include\utility(245,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Driver\ToolChains\CrossWindows.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Driver\obj.clangDriver.vcxproj] ; - [2022-02-14T16:10:45.873Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\atomic(2250): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\FunctionAttrs.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] ; - [2022-02-14T16:10:47.599Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/Constants.h(255,39): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGObjCMac.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2022-02-14T16:10:47.599Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/SymbolTableListTraits.h(113): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGExprScalar.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2022-02-14T16:10:47.599Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/Constants.h(468,63): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGCoroutine.cpp) [C:\build\wo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9880#issuecomment-1039281245:2585,error,error,2585,https://root.cern,https://github.com/root-project/root/pull/9880#issuecomment-1039281245,1,['error'],['error']
Availability,"\Release\lib\LLVMTransformUtils.lib : fatal error LNK1180: insufficient disk space to complete link [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-09-21T11:36:21.643Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/DeclOpenMP.h(355,18): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_418c9b31db': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\Decl.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-09-21T11:36:21.643Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility(1279,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_7f39a830ex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SwitchLoweringUtils.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-09-21T11:36:21.643Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility(149,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_dacdb382db': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\SelectionDAG.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2022-09-21T11:36:21.921Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits(1354,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\User",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11402#issuecomment-1253584427:1751,error,error,1751,https://root.cern,https://github.com/root-project/root/pull/11402#issuecomment-1253584427,1,['error'],['error']
Availability,"\SLPVectorizer.cpp : fatal error C1085: Cannot write compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Vectorize\LLVMVectorize.dir\Release\SLPVectorizer.obj': Invalid argument [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Vectorize\LLVMVectorize.vcxproj] ; - [2022-09-27T11:13:14.083Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits(579,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\Local.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-09-27T11:13:15.619Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility(3822,12): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\InlineSimple.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] ; - [2022-09-27T11:13:15.619Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector(1724,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\MergeFunctions.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] ; - [2022-09-27T11:13:15.619Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xtree(1933,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\Mem2Reg.cpp) [C:\build\workspace\root-pullrequests-build\build\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11285#issuecomment-1259354812:1277,error,error,1277,https://root.cern,https://github.com/root-project/root/pull/11285#issuecomment-1259354812,1,['error'],['error']
Availability,"\Sema\obj.clangSema.vcxproj] ; - [2024-02-27T01:53:12.910Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector(813,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Lex\PPCaching.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Lex\obj.clangLex.vcxproj] ; - [2024-02-27T01:53:12.910Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\exception(90): fatal error C1002: compiler is out of heap space in pass 2 [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Sema\obj.clangSema.vcxproj] ; - [2024-02-27T01:53:12.910Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\llvm\include\llvm/ADT/APInt.h(1529,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Lex\PreprocessorLexer.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Lex\obj.clangLex.vcxproj] ; - [2024-02-27T01:53:13.360Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\exception(90): fatal error C1002: compiler is out of heap space in pass 2 [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Sema\obj.clangSema.vcxproj] ; - [2024-02-27T01:53:13.360Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\memory(3268,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Lex\PPMacroExpansion.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Lex\obj.clangLex.vcxproj] . And 216 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14828#issuecomment-1965661670:2855,error,error,2855,https://root.cern,https://github.com/root-project/root/pull/14828#issuecomment-1965661670,3,['error'],['error']
Availability,"\Tools\MSVC\14.23.28105\include\vector(193,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXTargetTransformInfo.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2021-04-12T13:13:32.980Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Analysis/LoopInfo.h(871,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXSubtarget.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2021-04-12T13:13:32.980Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple(315,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXReplaceImageHandles.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2021-04-12T13:13:32.980Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(181,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseStmtAsm.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2021-04-12T13:13:32.980Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/DebugInfoMetadata.h(2214,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\PeepholeOptimizer.cpp) [C:\build\workspac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-817803469:2559,error,error,2559,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-817803469,1,['error'],['error']
Availability,"\Tools\MSVC\14.29.30133\include\tuple(337,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Passes\StandardInstrumentations.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Passes\LLVMPasses.vcxproj] ; - [2022-06-14T19:00:29.259Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/Attributes.h(307,13): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\PromoteMemoryToRegister.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-06-14T19:00:29.259Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/Instructions.h(3646,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\ModuleUtils.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-06-14T19:00:29.259Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/MathExtras.h(299,37): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\SSAUpdater.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-06-14T19:00:29.259Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector(167,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\InlineSimple.cpp) [C:\build\workspace\ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10754#issuecomment-1155611203:1963,error,error,1963,https://root.cern,https://github.com/root-project/root/pull/10754#issuecomment-1155611203,1,['error'],['error']
Availability,"\Tools\MSVC\14.32.31326\include\tuple(421,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Driver\Compilation.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Driver\obj.clangDriver.vcxproj] ; - [2023-12-20T13:28:29.084Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\llvm\include\llvm/ADT/APFloat.h(987,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\AST\DeclPrinter.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2023-12-20T13:28:29.084Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xtree(867,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Driver\Driver.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Driver\obj.clangDriver.vcxproj] ; - [2023-12-20T13:28:29.084Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\llvm\include\llvm/Support/Casting.h(257,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\AST\DeclBase.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2023-12-20T13:28:29.084Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector(1054,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Driver\Job.cpp) [C:\build\workspac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14136#issuecomment-1864499583:2795,error,error,2795,https://root.cern,https://github.com/root-project/root/pull/14136#issuecomment-1864499583,1,['error'],['error']
Availability,"\Tools\MSVC\14.32.31326\include\vector(1641,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXSubtarget.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2022-09-15T13:05:29.752Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\exception(119,2): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Basic\TargetInfo.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Basic\obj.clangBasic.vcxproj] ; - [2022-09-15T13:05:29.752Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/iterator_range.h(46,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXImageOptimizer.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2022-09-15T13:05:29.752Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/StringRef.h(853,9): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Analysis\CFGStmtMap.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Analysis\obj.clangAnalysis.vcxproj] ; - [2022-09-15T13:05:29.752Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector(1647,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\ScheduleDAG.cpp) [C:\build\workspace\root-pullrequests-b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11376#issuecomment-1248083557:1228,error,error,1228,https://root.cern,https://github.com/root-project/root/pull/11376#issuecomment-1248083557,1,['error'],['error']
Availability,"\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2021-04-07T10:00:10.394Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility(1568,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\LoopTraversal.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2021-04-07T10:00:10.394Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseTentative.cpp(2124,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2021-04-07T10:00:10.394Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector(659,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\CompilerInvocation.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2021-04-07T10:00:10.394Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility(546,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Analysis\ValueTracking.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Analysis\LLVMAnalysis.vcxproj] ; - [2021-04-07T10:00:10.394Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/Lex/MacroInfo.h(433,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\InterfaceStubFunctionsCons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7795#issuecomment-814787481:1546,error,error,1546,https://root.cern,https://github.com/root-project/root/pull/7795#issuecomment-814787481,1,['error'],['error']
Availability,"\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User; s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:; \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer; enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c; lang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu; ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\belle",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-1008835389:4111,error,error,4111,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-1008835389,1,['error'],['error']
Availability,"\Users\sftnight\AppData\Local\Temp\_CL_40e43dd1db': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGLoopInfo.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2022-12-12T12:59:44.455Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/TypeLoc.h(1298,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_3934bd3fdb': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseAST.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2022-12-12T12:59:44.455Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/StringRef.h(907,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_7438ceb6ex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Serialization\ASTWriterDecl.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Serialization\obj.clangSerialization.vcxproj] ; - [2022-12-12T12:59:45.041Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/StaticAnalyzer/Core/AnalyzerOptions.h(295,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_a410ab93db': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\CompilerInvocation.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] . And 12 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11825#issuecomment-1346469529:4498,error,error,4498,https://root.cern,https://github.com/root-project/root/pull/11825#issuecomment-1346469529,2,['error'],['error']
Availability,"\VC\Tools\MSVC\14.23.28105\include\chrono(83,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\StripDeadPrototypes.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] ; - [2021-06-29T17:43:14.300Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/type_traits.h(172,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\PredicateInfo.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2021-06-29T17:43:14.300Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/DenseMap.h(617,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\Inliner.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] ; - [2021-06-29T17:43:14.300Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocale(445,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Driver\ToolChains\Arch\Sparc.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Driver\obj.clangDriver.vcxproj] ; - [2021-06-29T17:43:14.300Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/iterator_range.h(46,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\EscapeEnumerator.cpp) [C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8568#issuecomment-870796912:2564,error,error,2564,https://root.cern,https://github.com/root-project/root/pull/8568#issuecomment-870796912,1,['error'],['error']
Availability,"\VC\Tools\MSVC\14.32.31326\include\tuple(74,90): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\TargetLoweringObjectFileImpl.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-09-14T15:02:59.017Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility(1274,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\SimplifyCFG.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-09-14T15:02:59.017Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(841,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\SimplifyIndVar.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-09-14T15:02:59.017Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility(389,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\TailDuplication.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-09-14T15:02:59.017Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/CommandLine.h(1218,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\SizeOpts.cpp) [C:\build\workspace\root-pullrequests-build\bui",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11366#issuecomment-1246914758:1226,error,error,1226,https://root.cern,https://github.com/root-project/root/pull/11366#issuecomment-1246914758,1,['error'],['error']
Availability,"\\etc\\cling -IC:\\Python311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:; /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv; m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h; Exception Code: 0x80000003; #0 0x00007ffc2c2306eb HandleAbort C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\Windows\Signals.inc:424:0; #1 0x00007ffcabe91881 (C:\windows\System32\ucrtbase.dll+0x71881); #2 0x00007ffcabe92851 (C:\windows\System32\ucrtbase.dll+0x72851); #3 0x00007ffc2c1dad4c llvm::llvm_unreachable_internal(char const *, char const *, unsigned int) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\ErrorHandling.cpp:212:0; #4 0x00007ffc25258963 clang::ASTWriter::AddToken(class clang::Token const &, class llvm::SmallVectorImpl<unsigned __int64> &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWrite; r.cpp:4514:0; #5 0x00007ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0; #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:; 5117:0; #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser; ialization\ASTWriter.cpp:4649:0; #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootclin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15696#issuecomment-2277220857:2403,Error,ErrorHandling,2403,https://root.cern,https://github.com/root-project/root/pull/15696#issuecomment-2277220857,1,['Error'],['ErrorHandling']
Availability,"\_CL_ab8fd57adb': No space left on device [C:\build\workspace\root-pullrequests-build\build\roofit\roostats\RooStats.vcxproj] ; - [2022-02-25T11:27:04.735Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\memory(1097,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_5eeeca16sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_utils.vcxproj] ; - [2022-02-25T11:27:06.701Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_regression.cxx(228,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_1a260277gl': No space left on device [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_regression.vcxproj] ; - [2022-02-25T11:27:06.994Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xlocmon(37,15): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_b57b4accdb': No space left on device [C:\build\workspace\root-pullrequests-build\build\core\foundation\test\testNotFn.vcxproj] ; - [2022-02-25T11:27:07.424Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(272,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_cf619a4dex': No space left on device [C:\build\workspace\root-pullrequests-build\build\tmva\tmva\test\rbdt.vcxproj] ; - [2022-02-25T11:27:07.425Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector(1699,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_9389c421ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\test\testRooPolyFunc.vcxproj] . And 43 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9985#issuecomment-1050772518:2988,error,error,2988,https://root.cern,https://github.com/root-project/root/pull/9985#issuecomment-1050772518,3,['error'],['error']
Availability,"\algorithm(6640,66): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Driver\ToolChains\DragonFly.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Driver\obj.clangDriver.vcxproj] ; - [2022-04-08T14:09:29.686Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\list(880,63): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Analysis\CloneDetection.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Analysis\obj.clangAnalysis.vcxproj] ; - [2022-04-08T14:09:29.686Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\functional(578,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Lex\PreprocessingRecord.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Lex\obj.clangLex.vcxproj] ; - [2022-04-08T14:09:29.686Z] c1xx : fatal error C1356: unable to find mspdbcore.dll [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Basic\obj.clangBasic.vcxproj] ; - [2022-04-08T14:09:29.686Z] c1xx : fatal error C1356: unable to find mspdbcore.dll [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Serialization\obj.clangSerialization.vcxproj] ; - [2022-04-08T14:10:58.729Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\tuple(713,52): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\LowerWidenableCondition.cpp) [C:\build\workspace",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10361#issuecomment-1093118708:2347,error,error,2347,https://root.cern,https://github.com/root-project/root/pull/10361#issuecomment-1093118708,1,['error'],['error']
Availability,"\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use; rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp); [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp; roj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot; \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us; ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-1008835389:1920,error,error,1920,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-1008835389,1,['error'],['error']
Availability,"\build\core\dictgen\test\dictgen_base.dir\Release\dictgen_base.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\core\dictgen\test\dictgen_base.vcxproj] ; - [2020-06-06T00:50:53.371Z] NMAKE : fatal error U1077: '""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\bin\HostX64\x86\cl.EXE""' : return code '0x2' [C:\build\workspace\root-pullrequests-build\build\graf2d\win32gdk\glib.vcxproj] ; - [2020-06-06T00:50:53.668Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\datasource_more.cxx : fatal error C1085: Cannot write compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\datasource_more.dir\Release\datasource_more.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\datasource_more.vcxproj] ; - [2020-06-06T00:50:54.683Z] C:\build\workspace\root-pullrequests-build\root\math\minuit2\src\ParametricFunction.cxx : fatal error C1085: Cannot write compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\math\minuit2\Minuit2.dir\Release\ParametricFunction.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\math\minuit2\Minuit2.vcxproj] ; - [2020-06-06T00:51:20.444Z] C:\build\workspace\root-pullrequests-build\build\math\unuran\unuran-1.8.0-root\src\distributions\c_cauchy.c(162,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_c13a585cex': No space left on device [C:\build\workspace\root-pullrequests-build\build\math\unuran\Unuran.vcxproj] ; - [2020-06-06T00:52:00.855Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector(414,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_0dcb2a9ddb': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\fit\testRooFit.vcxproj] . And 14 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5721#issuecomment-639928485:2887,error,error,2887,https://root.cern,https://github.com/root-project/root/pull/5721#issuecomment-639928485,3,['error'],['error']
Availability,"\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-02-10T09:56:38.197Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(687,5): error MSB8071: Cannot parse tool output 'C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/Instructions.h(384,40): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\ScheduleDAGVLIW.cpp)' with regex '^In file included from .*$': Exception of type 'System.OutOfMemoryException' was thrown. [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2022-02-10T09:56:38.197Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/ilist_iterator.h(122,40): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\MachineDominators.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-02-10T09:56:38.197Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/ValueMap.h(86,49): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\MachineRegisterInfo.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-02-10T09:56:38.197Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4514,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\ExecutionEngine\RuntimeDyld\Targets\RuntimeDyldELFMips.cpp) [C:\build\workspace\root-pullreque",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9853#issuecomment-1034726695:1944,error,error,1944,https://root.cern,https://github.com/root-project/root/pull/9853#issuecomment-1034726695,1,['error'],['error']
Availability,"\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2022-04-11T11:51:42.108Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector(1817,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\ASTDiagnostic.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-04-11T11:51:42.585Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Chrono.h(38,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\core\metacling\src\MetaCling.vcxproj] ; - [2022-04-11T11:51:42.585Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector(1704,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\MachineLoopInfo.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-04-11T11:51:42.585Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility(1309,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\Sink.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-04-11T11:51:42.585Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\tuple(177,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\MIRPrintingPass.cpp) [C:\build\workspace\root-pullrequests-buil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10293#issuecomment-1094961892:2136,error,error,2136,https://root.cern,https://github.com/root-project/root/pull/10293#issuecomment-1094961892,1,['error'],['error']
Availability,"\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2022-04-10T12:22:05.538Z] c1xx : fatal error C1356: unable to find mspdbcore.dll [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2022-04-10T12:22:06.399Z] c1xx : fatal error C1356: unable to find mspdbcore.dll [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2022-04-10T12:22:06.803Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility(217,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\ScheduleDAGSDNodes.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2022-04-10T12:22:07.242Z] c1xx : fatal error C1356: unable to find mspdbcore.dll [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2022-04-10T12:22:07.242Z] c1xx : fatal error C1356: unable to find mspdbcore.dll [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2022-04-10T12:22:07.242Z] c1xx : fatal error C1356: unable to find mspdbcore.dll [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2022-04-10T12:22:07.242Z] c1xx : fatal error C1356: unable to find mspdbcore.dll [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2022-04-10T12:22:07.242Z] predefined C++ attributes (compiler internal)(664,21): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10373#issuecomment-1094300770:1337,error,error,1337,https://root.cern,https://github.com/root-project/root/pull/10373#issuecomment-1094300770,1,['error'],['error']
Availability,"\build\workspace\root-pullrequests-build\build\core\G__Core.vcxproj] ; - [2023-05-11T12:48:37.229Z] C:\build\workspace\root-pullrequests-build\build\core\G__Core.cxx(11283,69): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [C:\build\workspace\root-pullrequests-build\build\core\G__Core.vcxproj] ; - [2023-05-11T12:48:37.229Z] C:\build\workspace\root-pullrequests-build\build\core\G__Core.cxx(11283,69): error C2146: syntax error: missing ')' before identifier 'TVirtualRWMutex' [C:\build\workspace\root-pullrequests-build\build\core\G__Core.vcxproj] ; - [2023-05-11T12:48:37.229Z] C:\build\workspace\root-pullrequests-build\build\core\G__Core.cxx(11283,69): error C2275: 'ROOT::TVirtualRWMutex': expected an expression instead of a type [C:\build\workspace\root-pullrequests-build\build\core\G__Core.vcxproj] ; - [2023-05-11T12:48:37.229Z] C:\build\workspace\root-pullrequests-build\build\core\G__Core.cxx(11283,70): error C2059: syntax error: ')' [C:\build\workspace\root-pullrequests-build\build\core\G__Core.vcxproj] ; - [2023-05-11T12:48:37.229Z] C:\build\workspace\root-pullrequests-build\build\core\G__Core.cxx(11283,78): error C2059: syntax error: ')' [C:\build\workspace\root-pullrequests-build\build\core\G__Core.vcxproj] ; - [2023-05-11T12:48:37.229Z] C:\build\workspace\root-pullrequests-build\build\core\G__Core.cxx(11289,54): error C2039: 'TVirtualRWMutex': is not a member of '`global namespace'' [C:\build\workspace\root-pullrequests-build\build\core\G__Core.vcxproj] ; - [2023-05-11T12:48:37.229Z] C:\build\workspace\root-pullrequests-build\build\core\G__Core.cxx(11289,69): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [C:\build\workspace\root-pullrequests-build\build\core\G__Core.vcxproj] ; - [2023-05-11T12:48:37.229Z] C:\build\workspace\root-pullrequests-build\build\core\G__Core.cxx(11289,69): error C2146: syntax error: missing ')' before identifier 'TVirtualRWMutex' [C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11027#issuecomment-1543938766:1361,error,error,1361,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543938766,2,['error'],['error']
Availability,"\build\workspace\root-pullrequests-build\build\graf2d\win32gdk\Win32gdk.vcxproj] ; - [2023-05-30T08:41:24.323Z] C:\build\workspace\root-pullrequests-build\root\graf2d\win32gdk\inc\TGWin32VirtualXProxy.h(69,14): error C3668: 'TGWin32VirtualXProxy::InitWindow': method with override specifier 'override' did not override any base class methods [C:\build\workspace\root-pullrequests-build\build\graf2d\win32gdk\Win32gdk.vcxproj] ; - [2023-05-30T08:41:24.323Z] C:\build\workspace\root-pullrequests-build\root\graf2d\win32gdk\inc\TGWin32VirtualXProxy.h(262,17): error C3668: 'TGWin32VirtualXProxy::AddWindow': method with override specifier 'override' did not override any base class methods [C:\build\workspace\root-pullrequests-build\build\graf2d\win32gdk\Win32gdk.vcxproj] ; - [2023-05-30T08:41:24.323Z] C:\build\workspace\root-pullrequests-build\root\graf2d\win32gdk\inc\TGWin32VirtualXProxy.h(263,17): error C3668: 'TGWin32VirtualXProxy::RemoveWindow': method with override specifier 'override' did not override any base class methods [C:\build\workspace\root-pullrequests-build\build\graf2d\win32gdk\Win32gdk.vcxproj] ; - [2023-05-30T08:41:32.216Z] C:\build\workspace\root-pullrequests-build\root\graf2d\win32gdk\inc\TGWin32VirtualXProxy.h(69,25): error C2061: syntax error: identifier 'ULongPtr_t' [C:\build\workspace\root-pullrequests-build\build\graf2d\win32gdk\Win32gdk.vcxproj] ; - [2023-05-30T08:41:32.216Z] C:\build\workspace\root-pullrequests-build\root\graf2d\win32gdk\inc\TGWin32VirtualXProxy.h(262,27): error C2061: syntax error: identifier 'ULongPtr_t' [C:\build\workspace\root-pullrequests-build\build\graf2d\win32gdk\Win32gdk.vcxproj] ; - [2023-05-30T08:41:32.216Z] C:\build\workspace\root-pullrequests-build\root\graf2d\win32gdk\inc\TGWin32VirtualXProxy.h(263,30): error C2061: syntax error: identifier 'ULongPtr_t' [C:\build\workspace\root-pullrequests-build\build\graf2d\win32gdk\Win32gdk.vcxproj] ; - [2023-05-30T08:41:32.216Z] C:\build\workspace\root-pullrequests-build\root\graf2d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12898#issuecomment-1568014558:1835,error,error,1835,https://root.cern,https://github.com/root-project/root/pull/12898#issuecomment-1568014558,1,['error'],['error']
Availability,"\build\workspace\root-pullrequests-build\build\gui\guibuilder\GuiBld.vcxproj] ; - [2020-08-06T14:35:46.672Z] C:\build\workspace\root-pullrequests-build\root\math\fftw\src\TFFTRealComplex.cxx(504,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_c963ad36gl': No space left on device [C:\build\workspace\root-pullrequests-build\build\math\fftw\FFTW.vcxproj] ; - [2020-08-06T14:35:46.672Z] C:\build\workspace\root-pullrequests-build\root\math\fftw\src\TFFTReal.cxx : fatal error C1085: Cannot write compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\math\fftw\FFTW.dir\Release\TFFTReal.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\math\fftw\FFTW.vcxproj] ; - [2020-08-06T14:35:46.672Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocale(2190,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_4ba196cedb': No space left on device [C:\build\workspace\root-pullrequests-build\build\graf3d\gviz3d\Gviz3d.vcxproj] ; - [2020-08-06T14:35:46.945Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector(409,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_524ea7b6ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\gui\fitpanel\FitPanel.vcxproj] ; - [2020-08-06T14:35:47.271Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocnum(421,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_dbadd14dex': No space left on device [C:\build\workspace\root-pullrequests-build\build\graf2d\postscript\Postscript.vcxproj] ; - [2020-08-06T14:35:47.579Z] C:\build\workspace\root-pullrequests-build\root\geom\geombuilder\inc\TGeoTabManager.h(64,39): fatal error C1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6132#issuecomment-669969205:1949,error,error,1949,https://root.cern,https://github.com/root-project/root/pull/6132#issuecomment-669969205,1,['error'],['error']
Availability,\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(152): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]; 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(153): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]; 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(154): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]; 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(155): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]; 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(156): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]; 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(157): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]; 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(158): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]; 21:23:47 C:\build\workspace\root-pullrequests-build\build\include\ROOT/RVec.hxx(159): error C2955: 'std::vector': use of class template requires template argument list [C:\build\workspace\root-pullrequests-build\build\math\vecops\ROOTVecOps.vcxproj]; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2113#issuecomment-393417016:4449,error,error,4449,https://root.cern,https://github.com/root-project/root/pull/2113#issuecomment-393417016,4,['error'],['error']
Availability,"\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-02-05T01:49:05.646Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(687,5): error MSB8071: Cannot parse tool output 'c1xx: fatal error C1060: compiler is out of heap space' with regex '^\s*(?&lt;FILENAME&gt;((.:)?[^:\n\r]*?))(\((?&lt;LINE&gt;[0-9]*)(,(?&lt;COLUMN&gt;[0-9]*))?\))?\s*:\s*((?&lt;SUBCATEGORY&gt;([^:]*?))\s?)(?&lt;CATEGORY&gt;error|warning|note)\s*((?&lt;CODE&gt;[A-Za-z0-9]*))?\s*:\s*(?&lt;TEXT&gt;.*)$': Exception of type 'System.OutOfMemoryException' was thrown. [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-02-05T01:49:05.646Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Format.h(130,50): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\MachineFunctionPass.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-02-05T01:49:05.646Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\tuple(448,29): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\ASTTypeTraits.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-02-05T01:49:06.040Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector(1764,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\Reg2Mem.cpp) [C:\build\workspace\root-pullrequests-build\b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9822#issuecomment-1030494161:2727,error,error,2727,https://root.cern,https://github.com/root-project/root/pull/9822#issuecomment-1030494161,1,['error'],['error']
Availability,"\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\Interpreter\obj.clingInterpreter.vcxproj] ; - [2020-05-04T14:26:32.268Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Interpreter\DynamicLibraryManagerSymbol.cpp(893,31): error C2065: 'mbi': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\Interpreter\obj.clingInterpreter.vcxproj] ; - [2020-05-04T14:26:32.268Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Interpreter\DynamicLibraryManagerSymbol.cpp(893,44): error C2065: 'mbi': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\Interpreter\obj.clingInterpreter.vcxproj] ; - [2020-05-04T14:26:32.268Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Interpreter\DynamicLibraryManagerSymbol.cpp(893,10): error C3861: 'VirtualQuery': identifier not found [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\Interpreter\obj.clingInterpreter.vcxproj] ; - [2020-05-04T14:26:32.268Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Interpreter\DynamicLibraryManagerSymbol.cpp(896,5): error C2065: 'HMODULE': undeclared identifier [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\Interpreter\obj.clingInterpreter.vcxproj] ; - [2020-05-04T14:26:32.268Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Interpreter\DynamicLibraryManagerSymbol.cpp(896,13): error C2146: syntax error: missing ';' before identifier 'hMod' [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\Interpreter\obj.clingInterpreter.vcxproj] ; - [2020-05-04T14:26:32.268Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Interpreter\DynamicLibraryManagerSymbol.cpp(896,13): error C2065: 'hMod': undeclared identifier [C:\build\workspace",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4717#issuecomment-623498571:2192,error,error,2192,https://root.cern,https://github.com/root-project/root/pull/4717#issuecomment-623498571,1,['error'],['error']
Availability,"\build\workspace\root-pullrequests-build\build\net\auth\RootAuth.vcxproj] ; - [2020-05-11T21:04:05.533Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector(1462,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_817808d9db': No space left on device [C:\build\workspace\root-pullrequests-build\build\math\minuit2\Minuit2.vcxproj] ; - [2020-05-11T21:04:05.533Z] C:\build\workspace\root-pullrequests-build\root\core\cont\inc\TIterator.h(49,2): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_1d64a43eex': No space left on device [C:\build\workspace\root-pullrequests-build\build\tmva\tmvagui\TMVAGui.vcxproj] ; - [2020-05-11T21:04:09.441Z] C:\build\workspace\root-pullrequests-build\root\gui\sessionviewer\src\TSessionViewer.cxx(5845,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_4fc901ccgl': No space left on device [C:\build\workspace\root-pullrequests-build\build\gui\sessionviewer\SessionViewer.vcxproj] ; - [2020-05-11T21:04:10.840Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(2856,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_43cdee1eex': No space left on device [C:\build\workspace\root-pullrequests-build\build\test\TBench.vcxproj] ; - [2020-05-11T21:04:10.840Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream(172,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_9d310ce7ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\tmva\tmva\test\TestRandomGenerator.vcxproj] ; - [2020-05-11T21:04:10.840Z] C:\build\workspace\root-pullrequests-build\root\gui\gui\inc\TGGC.h(80,42): fatal error C1088: Cannot flush compil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5377#issuecomment-626964971:2668,error,error,2668,https://root.cern,https://github.com/root-project/root/pull/5377#issuecomment-626964971,1,['error'],['error']
Availability,"\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Utils\AST.cpp(1759,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_e45abc47db': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj] ; - [2024-01-31T09:19:56.943Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Sema\DeclSpec.cpp(1509,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_662bb71bgl': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Sema\obj.clangSema.vcxproj] ; - [2024-01-31T09:19:57.841Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Sema\SemaCXXScopeSpec.cpp(1137,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_37e66685gl': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Sema\obj.clangSema.vcxproj] ; - [2024-01-31T09:20:06.413Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\include\clang/AST/ExprCXX.h(1650,25): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_fb828301sy': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Sema\SemaDeclCXX.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Sema\obj.clangSema.vcxproj] ; - [2024-01-31T09:20:06.413Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Sema\SemaCast.cpp : fatal error C1085: Cannot write compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Sema\obj.clangSema.dir\Rele",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14494#issuecomment-1918701261:2800,error,error,2800,https://root.cern,https://github.com/root-project/root/pull/14494#issuecomment-1918701261,1,['error'],['error']
Availability,"\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Utils\Paths.cpp(27,1): fatal error C1189: #error: ""Unknown platform (environmental delimiter)"" [C:\build\workspace\root-pullrequests-build\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj] ; - [2020-10-04T08:55:26.501Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Utils\UTF8.cpp(163,35): error C2338: Sizes don't match [C:\build\workspace\root-pullrequests-build\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj] ; - [2020-10-04T08:55:26.501Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Utils\UTF8.cpp(260,10): error C2039: 'strcasestr': is not a member of '`global namespace'' [C:\build\workspace\root-pullrequests-build\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj] ; - [2020-10-04T08:55:26.501Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Utils\UTF8.cpp(260,6): error C3861: 'strcasestr': identifier not found [C:\build\workspace\root-pullrequests-build\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj] ; - [2020-10-04T08:55:26.501Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Utils\UTF8.cpp(262,13): error C2039: 'strcasestr': is not a member of '`global namespace'' [C:\build\workspace\root-pullrequests-build\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj] ; - [2020-10-04T08:55:27.046Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Utils\UTF8.cpp(262,10): error C3861: 'strcasestr': identifier not found [C:\build\workspace\root-pullrequests-build\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj] ; - [2020-10-04T08:56:30.622Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Interpreter\CIFactory.cpp(213,21): error C2039: 'GetVisualStudioDirs': is not a member of 'cling::utils::platform' [C:\build\workspace\root-pullrequests-build\build\interpreter\cling\lib\Interpreter\obj.clingInterpreter.vcxproj] ; - [2020-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-703225063:1190,error,error,1190,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-703225063,1,['error'],['error']
Availability,"\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Serialization\ASTWriterStmt.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Serialization\obj.clangSerialization.vcxproj] ; - [2023-09-06T09:46:09.671Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring(5016,9): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_b6f174f0db': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Basic\Cuda.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Basic\obj.clangBasic.vcxproj] ; - [2023-09-06T09:46:09.671Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Rewrite\HTMLRewrite.cpp : fatal error C1085: Cannot write compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Rewrite\obj.clangRewrite.dir\Release\HTMLRewrite.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Rewrite\obj.clangRewrite.vcxproj] ; - [2023-09-06T09:46:09.671Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory(944,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_20e4c9cfdb': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Serialization\GeneratePCH.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Serialization\obj.clangSerialization.vcxproj] ; - [2023-09-06T09:46:09.671Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\include\clang/AST/DeclBase.h(1206,1): fatal error C10",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13613#issuecomment-1708036941:3106,error,error,3106,https://root.cern,https://github.com/root-project/root/pull/13613#issuecomment-1708036941,1,['error'],['error']
Availability,"\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(77,49): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\MC\MCDisassembler\Disassembler.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\MC\MCDisassembler\LLVMMCDisassembler.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(60,45): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\BinaryFormat\Dwarf.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\BinaryFormat\LLVMBinaryFormat.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(70,46): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\BinaryFormat\Dwarf.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\BinaryFormat\LLVMBinaryFormat.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(77,49): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\BinaryFormat\Dwarf.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\BinaryFormat\LLVMBinaryFormat.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(60,45): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\TableGen\Error.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\TableGen\LLVMTableGen.vcxproj] . And 773 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4491#issuecomment-539015155:3486,error,error,3486,https://root.cern,https://github.com/root-project/root/pull/4491#issuecomment-539015155,5,"['Error', 'error']","['Error', 'error']"
Availability,"\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGCall.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2022-09-05T14:02:41.734Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/Basic/BuiltinsHexagon.def(1234,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Basic\Targets.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Basic\obj.clangBasic.vcxproj] ; - [2022-09-05T14:02:41.734Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\tuple(628,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Driver\ToolChains\Haiku.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Driver\obj.clangDriver.vcxproj] ; - [2022-09-05T14:02:41.734Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/TrailingObjects.h(237,53): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Edit\RewriteObjCFoundationAPI.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Edit\obj.clangEdit.vcxproj] ; - [2022-09-05T14:02:41.734Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector(2027,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\StackProtector.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] . And 88 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11121#issuecomment-1237092013:3883,error,error,3883,https://root.cern,https://github.com/root-project/root/pull/11121#issuecomment-1237092013,2,['error'],['error']
Availability,"\clang\lib\Basic\FileSystemStatCache.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Basic\obj.clangBasic.vcxproj] ; - [2023-10-04T02:01:10.718Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\include\clang/AST/Type.h(4655,38): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\AST\Interp\ByteCodeEmitter.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2023-10-04T02:01:10.718Z] C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\include\clang/Basic/DiagnosticSemaKinds.inc(2203): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Basic\DiagnosticIDs.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Basic\obj.clangBasic.vcxproj] ; - [2023-10-04T02:01:10.719Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector(813,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\CodeGen\CGBlocks.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2023-10-04T02:01:10.719Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\tuple(706,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\CodeGen\CGCleanup.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] . And 31 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13801#issuecomment-1746022161:3983,error,error,3983,https://root.cern,https://github.com/root-project/root/pull/13801#issuecomment-1746022161,2,['error'],['error']
Availability,\dataframe_utils.vcxproj] ; - C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\xmemory0(1101): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_9b60555fex': No space left on device [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\datasource_sqlite.vcxproj] ; - C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\streambuf(568): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_7eeb19c2sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\gui\sessionviewer\SessionViewer.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_report.cxx(100): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_ec90e11cgl': No space left on device [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_report.vcxproj] ; - C:\build\workspace\root-pullrequests-build\build\include\TH3.h(259): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_fb631728ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_colnames.vcxproj] ; - C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\vector(1361): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_870ac8afdb': No space left on device [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_simple.vcxproj] ; - C:\build\workspace\root-pullrequests-build\build\include\TPad.h(357): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_48e18f1aex': No space left on device [C:\build\workspace\root-pullrequests-build\build\gui\ged\Ged.vcxproj],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4317#issuecomment-527074091:2542,error,error,2542,https://root.cern,https://github.com/root-project/root/pull/4317#issuecomment-527074091,3,['error'],['error']
Availability,"\include\llvm/ADT/Optional.h(265,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGCall.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2022-09-05T14:02:41.734Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/Basic/BuiltinsHexagon.def(1234,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Basic\Targets.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Basic\obj.clangBasic.vcxproj] ; - [2022-09-05T14:02:41.734Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\tuple(628,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Driver\ToolChains\Haiku.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Driver\obj.clangDriver.vcxproj] ; - [2022-09-05T14:02:41.734Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/TrailingObjects.h(237,53): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Edit\RewriteObjCFoundationAPI.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Edit\obj.clangEdit.vcxproj] ; - [2022-09-05T14:02:41.734Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector(2027,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\StackProtector.cpp) [C:\bui",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11121#issuecomment-1237092013:3430,error,error,3430,https://root.cern,https://github.com/root-project/root/pull/11121#issuecomment-1237092013,1,['error'],['error']
Availability,"\include\llvm/ADT/SmallVector.h(86,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Lex\ModuleMap.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Lex\obj.clangLex.vcxproj] ; - [2022-04-13T15:33:08.456Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/ASTVector.h(48,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\ASTTypeTraits.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-04-13T15:33:09.244Z] C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\include\clang/AST/Attrs.inc(9117,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\ASTImporter.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-04-13T15:33:09.244Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/Type.h(1440,22): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\ExprCXX.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-04-13T15:33:09.244Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/OpenMPClause.h(1381,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\Comment.cpp) [C:\build\workspace\root-pu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10391#issuecomment-1098198670:3675,error,error,3675,https://root.cern,https://github.com/root-project/root/pull/10391#issuecomment-1098198670,1,['error'],['error']
Availability,"\include\llvm/CodeGen/MachineInstr.h(459,43): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\MachineFunction.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-04-08T22:11:47.619Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/Decl.h(2878,59): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\LayoutOverrideSource.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2022-04-08T22:11:47.619Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/Instructions.h(4611,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\SimplifyCFGPass.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-04-08T22:11:47.619Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\SelectionDAGBuilder.cpp(10480,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2022-04-08T22:11:47.619Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Casting.h(229,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\WholeProgramDevirt.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] . And 29 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10366#issuecomment-1093410595:3369,error,error,3369,https://root.cern,https://github.com/root-project/root/pull/10366#issuecomment-1093410595,3,['error'],['error']
Availability,"\include\llvm/Support/type_traits.h(134,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\InterleavedLoadCombinePass.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-02-11T22:42:58.197Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/ilist_node.h(104,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\ScheduleDAGRRList.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2022-02-11T22:42:58.197Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/APInt.h(241,55): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\InstructionNamer.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-02-11T22:42:58.197Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/CodeGen/MachineFunction.h(85,5): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\LiveRegMatrix.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-02-11T22:42:58.197Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(889,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\LiveRangeCalc.cpp) [C:\build\workspace\root-pullrequests-build\bui",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9867#issuecomment-1036705722:2654,error,error,2654,https://root.cern,https://github.com/root-project/root/pull/9867#issuecomment-1036705722,1,['error'],['error']
Availability,"\include\utility(280,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\Rewrite\RewriteObjC.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\Rewrite\obj.clangRewriteFrontend.vcxproj] ; - [2022-02-04T09:51:28.642Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(421,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\MachineDominators.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-02-04T09:51:28.642Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility(276,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\CreateInvocationFromCommandLine.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2022-02-04T09:51:28.642Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Casting.h(177,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\LoopStrengthReduce.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-02-04T09:51:28.642Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/OpenMPClause.h(3785,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9804#issuecomment-1029817819:2982,error,error,2982,https://root.cern,https://github.com/root-project/root/pull/9804#issuecomment-1029817819,1,['error'],['error']
Availability,"\include\xerrc.h(21,17): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Basic\FileManager.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Basic\obj.clangBasic.vcxproj] ; - [2022-04-11T08:42:02.573Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/CommandLine.h(788,44): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Analysis\ValueTracking.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Analysis\LLVMAnalysis.vcxproj] ; - [2022-04-11T08:42:02.573Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/Function.h(485,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Analysis\OrderedInstructions.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Analysis\LLVMAnalysis.vcxproj] ; - [2022-04-11T08:42:02.573Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\initializer_list(15,9): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Lex\LiteralSupport.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Lex\obj.clangLex.vcxproj] ; - [2022-04-11T08:42:02.573Z] predefined C++ types (compiler internal)(141,9): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Lex\PPMacroExpansion.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Lex\obj.clangLex.vcxproj] . And 219 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10375#issuecomment-1094733793:3327,error,error,3327,https://root.cern,https://github.com/root-project/root/pull/10375#issuecomment-1094733793,2,['error'],['error']
Availability,"\include\xstring(2663,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Driver\ToolChains\NetBSD.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Driver\obj.clangDriver.vcxproj] ; - [2021-05-03T16:14:32.828Z] C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\include\clang/AST/Attrs.inc(1415,24): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\ASTUnit.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2021-05-03T16:14:32.828Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector(2627,32): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Basic\XRayLists.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Basic\obj.clangBasic.vcxproj] ; - [2021-05-03T16:14:32.828Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility(315,19): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Driver\ToolChains\WebAssembly.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Driver\obj.clangDriver.vcxproj] ; - [2021-05-03T16:14:32.828Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector(1419,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\PassManagerBuilder",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8076#issuecomment-831375679:2106,error,error,2106,https://root.cern,https://github.com/root-project/root/pull/8076#issuecomment-831375679,1,['error'],['error']
Availability,"\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(739,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\MachineBasicBlock.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2021-04-30T11:05:03.973Z] C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\include\clang/AST/Attrs.inc(3101,37): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\DeclFriend.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2021-04-30T11:05:03.973Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\ASTConsumers.cpp(198,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2021-04-30T11:05:03.973Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\LowerEmuTLS.cpp(164,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2021-04-30T11:05:03.973Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional(819,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\ASTDumper.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2021-04-30T11:05:03.973Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility(108,1): fatal error C1060: compiler is",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7776#issuecomment-830019214:2539,error,error,2539,https://root.cern,https://github.com/root-project/root/pull/7776#issuecomment-830019214,1,['error'],['error']
Availability,"\interpreter\llvm\src\include\llvm/IR/IRBuilder.h(2144,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\InferFunctionAttrs.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] ; - [2022-02-10T09:56:38.197Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/DebugInfoMetadata.h(2287,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\MachineFunctionPrinterPass.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-02-10T09:56:38.197Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(687,5): error MSB8071: Cannot parse tool output 'C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/Instructions.h(384,40): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\ScheduleDAGVLIW.cpp)' with regex '^In file included from .*$': Exception of type 'System.OutOfMemoryException' was thrown. [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2022-02-10T09:56:38.197Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/ilist_iterator.h(122,40): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\MachineDominators.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-02-10T09:56:38.197Z] C:\build\workspace\root-pullrequests-build\root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9853#issuecomment-1034726695:1234,error,error,1234,https://root.cern,https://github.com/root-project/root/pull/9853#issuecomment-1034726695,1,['error'],['error']
Availability,"\interpreter\llvm\src\include\llvm/MC/MCWinCOFFStreamer.h(76): warning C4266: 'void llvm::MCObjectStreamer::EmitLabel(llvm::MCSymbol *,llvm::SMLoc,llvm::MCFragment *)': no override available for virtual member function from base 'llvm::MCObjectStreamer'; function is hidden (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\MC\MCWinCOFFStreamer.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\MC\LLVMMC.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\MC\WinCOFFObjectWriter.cpp(207): warning C4266: 'bool llvm::MCObjectWriter::isSymbolRefDifferenceFullyResolvedImpl(const llvm::MCAssembler &,const llvm::MCSymbol &,const llvm::MCSymbol &,bool) const': no override available for virtual member function from base 'llvm::MCObjectWriter'; function is hidden [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\MC\LLVMMC.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Transforms/IPO/Inliner.h(78): warning C4266: 'bool llvm::Pass::doInitialization(llvm::Module &)': no override available for virtual member function from base 'llvm::Pass'; function is hidden (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\AlwaysInliner.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Transforms/IPO/Inliner.h(78): warning C4266: 'bool llvm::Pass::doInitialization(llvm::Module &)': no override available for virtual member function from base 'llvm::Pass'; function is hidden (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\Inliner.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] . And 71 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4317#issuecomment-526728478:6550,avail,available,6550,https://root.cern,https://github.com/root-project/root/pull/4317#issuecomment-526728478,4,['avail'],['available']
Availability,"\interpreter\llvm\src\include\llvm/Support/AlignOf.h(59,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\LowerAtomic.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-04-11T16:00:53.377Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/Value.h(394,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVVMReflect.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2022-04-11T16:00:53.377Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/AlignOf.h(110,38): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXLowerAlloca.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2022-04-11T16:00:53.377Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Path.h(26,16): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\DeclTemplate.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-04-11T16:00:53.377Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/APFloat.h(351,27): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXFrameLowering.cpp) [C:\build\workspace\root-pullrequests-buil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10379#issuecomment-1095250574:1541,error,error,1541,https://root.cern,https://github.com/root-project/root/pull/10379#issuecomment-1095250574,1,['error'],['error']
Availability,"\interpreter\llvm\src\lib\Transforms\IPO\PartialInlining.cpp(1528,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_c57a7ae1db': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] ; - [2022-09-22T20:23:56.993Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LegalizeIntegerTypes.cpp(4182,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_b1822323db': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2022-09-22T20:23:56.993Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/Function.h(591,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_4b61adccex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\RenameIndependentSubregs.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-09-22T20:23:56.993Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\MIRPrinter.cpp : fatal error C1085: Cannot write compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.dir\Release\MIRPrinter.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-09-22T20:23:56.993Z] C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\include\clang/AST/Attrs.inc(4884,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_60193fe3ex': No space left on device (compiling source file C:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1255516910:2591,error,error,2591,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1255516910,1,['error'],['error']
Availability,"\interpreter\llvm\src\tools\clang\lib\Frontend\ChainedIncludesSource.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2023-06-01T09:09:56.335Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/APInt.h(890,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_a0ca035fsy': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Driver\ToolChains\InterfaceStubs.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Driver\obj.clangDriver.vcxproj] ; - [2023-06-01T09:09:56.335Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Casting.h(272,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_99efdc38sy': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGCUDANV.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2023-06-01T09:09:56.335Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\LayoutOverrideSource.cpp : fatal error C1085: Cannot write compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.dir\Release\LayoutOverrideSource.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2023-06-01T09:09:56.335Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseStmtAsm.cpp(964,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\Ap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12911#issuecomment-1571671148:1885,error,error,1885,https://root.cern,https://github.com/root-project/root/pull/12911#issuecomment-1571671148,1,['error'],['error']
Availability,"\lib\AST\obj.clangAST.vcxproj] ; - [2022-08-05T11:47:10.687Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/CodeGen/TargetLowering.h(1768,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_799732a5ex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\ScoreboardHazardRecognizer.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-08-05T11:47:10.960Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory(1375,47): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_534c0754ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\core\metacling\src\MetaCling.vcxproj] ; - [2022-08-05T11:47:10.960Z] C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\include\clang/AST/Attrs.inc(3266,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_f6423553ex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGCUDARuntime.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2022-08-05T11:47:10.960Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(839,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_66f5d0a4ex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\Sink.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] . And 15 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11123#issuecomment-1206361246:4460,error,error,4460,https://root.cern,https://github.com/root-project/root/pull/11123#issuecomment-1206361246,2,['error'],['error']
Availability,"\lib\Driver\ToolChains\CSKYToolChain.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Driver\obj.clangDriver.vcxproj] ; - [2024-02-14T14:42:06.656Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\llvm\include\llvm/Support/Casting.h(131,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\AST\Interp\Function.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2024-02-14T14:42:07.284Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\chrono(380,73): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Driver\ToolChains\AMDGPU.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Driver\obj.clangDriver.vcxproj] ; - [2024-02-14T14:42:07.284Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\include\clang/AST/Stmt.h(2619,25): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\AST\Interp\InterpFrame.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2024-02-14T14:42:07.284Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\llvm\include\llvm/ADT/SmallVector.h(648,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Driver\ToolChains\AMDGPUOpenMP.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Driver\obj.clangDriver.vcxproj] . And 49 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14713#issuecomment-1943999180:4054,error,error,4054,https://root.cern,https://github.com/root-project/root/pull/14713#issuecomment-1943999180,2,['error'],['error']
Availability,"\lib\Frontend\Rewrite\FrontendActions.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\Rewrite\obj.clangRewriteFrontend.vcxproj] ; - [2022-12-12T12:59:44.455Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/Basic/Diagnostic.h(182,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_40e43dd1db': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGLoopInfo.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2022-12-12T12:59:44.455Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/TypeLoc.h(1298,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_3934bd3fdb': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseAST.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2022-12-12T12:59:44.455Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/StringRef.h(907,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_7438ceb6ex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Serialization\ASTWriterDecl.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Serialization\obj.clangSerialization.vcxproj] ; - [2022-12-12T12:59:45.041Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/StaticAnalyzer/Core/AnalyzerOptions.h(295,1): fatal error C1088: C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11825#issuecomment-1346469529:3977,error,error,3977,https://root.cern,https://github.com/root-project/root/pull/11825#issuecomment-1346469529,1,['error'],['error']
