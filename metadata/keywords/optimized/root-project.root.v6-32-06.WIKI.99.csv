quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,"t*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TObjArray*GetBackground(); virtual TObjArray*GetCandidates(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual TObjArray*GetErrorNames(); virtual TObjArray*GetErrorOnBackground(); virtual TObjArray*GetErrorOnSignal(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TObjArray*GetSignal(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLimitDataSource.html:2888,Inherit,InheritsFrom,2888,root/html532/TLimitDataSource.html,https://root.cern,https://root.cern/root/html532/TLimitDataSource.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TObjArray*GetBackground(); virtual TObjArray*GetCandidates(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual TObjArray*GetErrorNames(); virtual TObjArray*GetErrorOnBackground(); virtual TObjArray*GetErrorOnSignal(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TObjArray*GetSignal(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TLimitDataSource&operator=(const TLimitDataSource&)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLimitDataSource.html:2738,Inherit,InheritsFrom,2738,root/html602/TLimitDataSource.html,https://root.cern,https://root.cern/root/html602/TLimitDataSource.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tGetFirstRow() const; virtual const char*TObject::GetIconName() const; Int_tGetIndex(UInt_t sortedIndex) const; virtual const void*GetKeyAddress(Int_t indx); virtual Int_tGetLastFound() const; virtual const char*TNamed::GetName() const; virtual Int_tGetNRows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TTable*GetTable() const; virtual const char*GetTableName() const; virtual const char*GetTableTitle() const; virtual const char*GetTableType() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); Int_toperator()(Float_t v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTableSorter.html:6310,Inherit,InheritsFrom,6310,root/html532/TTableSorter.html,https://root.cern,https://root.cern/root/html532/TTableSorter.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tGetFirstRow() const; virtual const char*TObject::GetIconName() const; Int_tGetIndex(UInt_t sortedIndex) const; virtual const void*GetKeyAddress(Int_t indx); virtual Int_tGetLastFound() const; virtual const char*TNamed::GetName() const; virtual Int_tGetNRows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TTable*GetTable() const; virtual const char*GetTableName() const; virtual const char*GetTableTitle() const; virtual const char*GetTableType() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); Int_toperator()(Float_t value); Int_toperator()(Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTableSorter.html:5547,Inherit,InheritsFrom,5547,root/html602/TTableSorter.html,https://root.cern,https://root.cern/root/html602/TTableSorter.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; const char*GetNamespaceHref() const; const char*GetNamespacePrefix() const; TXMLNode*GetNextNode(); const char*GetNodeName() const; TXMLNode::EXMLElementTypeGetNodeType() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TXMLNode*GetParent() const; TXMLNode*GetPreviousNode() const; const char*GetText() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tHasAttributes() const; Bool_tHasChildren() const; virtual ULong_tTObject::Hash() const; Bool_tHasNextNode() const; Bool_tHasParent() const; Bool_tHasPreviousNode() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TXMLNode.html:3084,Inherit,InheritsFrom,3084,root/html532/TXMLNode.html,https://root.cern,https://root.cern/root/html532/TXMLNode.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; const char*GetNamespaceHref() const; const char*GetNamespacePrefix() const; TXMLNode*GetNextNode(); const char*GetNodeName() const; TXMLNode::EXMLElementTypeGetNodeType() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TXMLNode*GetParent() const; TXMLNode*GetPreviousNode() const; const char*GetText() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tHasAttributes() const; Bool_tHasChildren() const; virtual ULong_tTObject::Hash() const; Bool_tHasNextNode() const; Bool_tHasParent() const; Bool_tHasPreviousNode() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXMLNode.html:3036,Inherit,InheritsFrom,3036,root/html602/TXMLNode.html,https://root.cern,https://root.cern/root/html602/TXMLNode.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t*TObject::GetOption() const; virtual RooArgSet*RooStats::SimpleInterval::GetParameters() const; RooStats::HypoTestResult*GetResult(int index) const; RooStats::SamplingDistribution*GetSignalAndBackgroundTestStatDist(int index) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; RooStats::SamplingDistribution*GetUpperLimitDistribution() const; doubleGetXValue(int index) const; doubleGetYError(int index) const; doubleGetYValue(int index) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; RooStats::HypoTestInverterResultHypoTestInverterResult(const char* name = 0); RooStats::HypoTestInverterResultHypoTestInverterResult(const RooStats::HypoTestInverterResult& other, const char* name); RooStats::HypoTestInverterResultHypoTestInverterResult(const char* name, const RooRealVar& scannedVariable, double cl); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooStats::SimpleInterval::IsInInterval(const RooArgSet&) const; boolIsOneSided() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; boolIsTwoSided() const; Bool_tTObject::IsZombie() const; virtual Double_tLowerLimit(); Double_tLowerLimitEstimatedError(); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HypoTestInverterResult.html:4424,Inherit,InheritsFrom,4424,root/html534/RooStats__HypoTestInverterResult.html,https://root.cern,https://root.cern/root/html534/RooStats__HypoTestInverterResult.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusselector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Begin1D(TTree* t); Initialization for 1D Histogram. void Begin2D(TTree* t); Initialization for 2D histogram. void Begin3D(TTree* t); Initialization for 3D histogram. void Begin(TTree* t); See TProofDraw::Begin(). void DefVar1D(); Define vars for 1D Histogram. void DefVar2D(); Define variables for 2D histogram. void DefVar3D(); Define variables for 3D histogram. void DefVar(); Define variables according to arguments. void Init(TTree* ); See TProofDraw::Init(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the histgram with given values. void Terminate(void); See TProofDraw::Terminate(). TProofDrawHist(); { }. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id: TProofDraw.h 39173 2011-05-12 18:04:44Z ganis $ » Last generated: 2011-07-04 15:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofDrawHist.html:8153,variab,variables,8153,root/html530/TProofDrawHist.html,https://root.cern,https://root.cern/root/html530/TProofDrawHist.html,3,['variab'],['variables']
Modifiability,"t*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusselector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Begin1D(TTree* t); Initialization for 1D Histogram. void Begin2D(TTree* t); Initialization for 2D histogram. void Begin3D(TTree* t); Initialization for 3D histogram. void Begin(TTree* t); See TProofDraw::Begin(). void DefVar1D(); Define vars for 1D Histogram. void DefVar2D(); Define variables for 2D histogram. void DefVar3D(); Define variables for 3D histogram. void DefVar(); Define variables according to arguments. void Init(TTree* ); See TProofDraw::Init(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the histgram with given values. void Terminate(void); See TProofDraw::Terminate(). TProofDrawHist(); { }. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id: TProofDraw.h 39173 2011-05-12 18:04:44Z ganis $ » Last generated: 2011-11-03 20:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofDrawHist.html:8153,variab,variables,8153,root/html532/TProofDrawHist.html,https://root.cern,https://root.cern/root/html532/TProofDrawHist.html,6,['variab'],['variables']
Modifiability,"t*_cloneSetSet owning clone of input function; RooAbsReal*_funcClonePointer to top level node of cloned function; const RooAbsReal*_funcMaxValContainer for maximum function value; RooRealVar*_funcValPtrRRVs storing function value in context and in output dataset; RooRealVar*_funcValStore; Bool_t_isValidVerbose and valid flag; static Int_tRooPrintable::_nameLength; RooArgSet_realVarsSets of discrete and real valued observabeles; Bool_t_verbose; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooAbsNumGenerator(); Destructor. void attachParameters(const RooArgSet& vars); Reattach original parameters to function clone. void printName(ostream& os) const; Print name of the generator. void printTitle(ostream& os) const; Print the title of the generator. void printClassName(ostream& os) const; Print the class name of the generator. void printArgs(ostream& os) const; Print the arguments of the generator. RooAbsNumGenerator* clone(const RooAbsReal& , const RooArgSet& genVars, const RooArgSet& condVars, const RooNumGenConfig& config, Bool_t verbose = kFALSE, const RooAbsReal* maxFuncVal = 0) const; If true, generator is in a valid state. void setVerbose(Bool_t verbose = kTRUE); If flag is true, verbose messaging will be active during generation. Bool_t isVerbose() const; Return status of verbose messaging flag. const RooArgSet * generateEvent(UInt_t remaining, Double_t& resampleRatio). Double_t getFuncMax(); { return 0 ; }. void Print(Option_t* options = 0) const; ascii printing interface. Bool_t canSampleCategories() const; Advertisement of capabilities. { return kFALSE ; }. Bool_t canSampleConditional() const; { return kFALSE ; }. » Last changed: Mon Dec 7 13:45:41 2009 » Last generated: 2009-12-07 13:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsNumGenerator.html:8490,config,config,8490,root/html526/RooAbsNumGenerator.html,https://root.cern,https://root.cern/root/html526/RooAbsNumGenerator.html,1,['config'],['config']
Modifiability,"t*_cloneSetSet owning clone of input function; RooAbsReal*_funcClonePointer to top level node of cloned function; const RooAbsReal*_funcMaxValContainer for maximum function value; RooRealVar*_funcValPtrRRVs storing function value in context and in output dataset; RooRealVar*_funcValStore; Bool_t_isValidVerbose and valid flag; static Int_tRooPrintable::_nameLength; RooArgSet_realVarsSets of discrete and real valued observabeles; Bool_t_verbose; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooAbsNumGenerator(); Destructor. void attachParameters(const RooArgSet& vars); Reattach original parameters to function clone. void printName(ostream& os) const; Print name of the generator. void printTitle(ostream& os) const; Print the title of the generator. void printClassName(ostream& os) const; Print the class name of the generator. void printArgs(ostream& os) const; Print the arguments of the generator. RooAbsNumGenerator* clone(const RooAbsReal& , const RooArgSet& genVars, const RooArgSet& condVars, const RooNumGenConfig& config, Bool_t verbose = kFALSE, const RooAbsReal* maxFuncVal = 0) const; If true, generator is in a valid state. void setVerbose(Bool_t verbose = kTRUE); If flag is true, verbose messaging will be active during generation. Bool_t isVerbose() const; Return status of verbose messaging flag. const RooArgSet * generateEvent(UInt_t remaining, Double_t& resampleRatio). Double_t getFuncMax(); { return 0 ; }. void Print(Option_t* options = 0) const; ascii printing interface. Bool_t canSampleCategories() const; Advertisement of capabilities. { return kFALSE ; }. Bool_t canSampleConditional() const; { return kFALSE ; }. » Last changed: Mon Jul 4 15:21:25 2011 » Last generated: 2011-07-04 15:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAbsNumGenerator.html:8545,config,config,8545,root/html530/RooAbsNumGenerator.html,https://root.cern,https://root.cern/root/html530/RooAbsNumGenerator.html,1,['config'],['config']
Modifiability,"t*_cloneSetSet owning clone of input function; RooAbsReal*_funcClonePointer to top level node of cloned function; const RooAbsReal*_funcMaxValContainer for maximum function value; RooRealVar*_funcValPtrRRVs storing function value in context and in output dataset; RooRealVar*_funcValStore; Bool_t_isValidVerbose and valid flag; static Int_tRooPrintable::_nameLength; RooArgSet_realVarsSets of discrete and real valued observabeles; Bool_t_verbose; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooAbsNumGenerator(); Destructor. void attachParameters(const RooArgSet& vars); Reattach original parameters to function clone. void printName(ostream& os) const; Print name of the generator. void printTitle(ostream& os) const; Print the title of the generator. void printClassName(ostream& os) const; Print the class name of the generator. void printArgs(ostream& os) const; Print the arguments of the generator. RooAbsNumGenerator* clone(const RooAbsReal& , const RooArgSet& genVars, const RooArgSet& condVars, const RooNumGenConfig& config, Bool_t verbose = kFALSE, const RooAbsReal* maxFuncVal = 0) const; If true, generator is in a valid state. void setVerbose(Bool_t verbose = kTRUE); If flag is true, verbose messaging will be active during generation. Bool_t isVerbose() const; Return status of verbose messaging flag. const RooArgSet * generateEvent(UInt_t remaining, Double_t& resampleRatio). Double_t getFuncMax(); { return 0 ; }. void Print(Option_t* options = 0) const; ascii printing interface. Bool_t canSampleCategories() const; Advertisement of capabilities. { return kFALSE ; }. Bool_t canSampleConditional() const; { return kFALSE ; }. » Last changed: Thu Nov 3 20:06:44 2011 » Last generated: 2011-11-03 20:06; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsNumGenerator.html:8545,config,config,8545,root/html532/RooAbsNumGenerator.html,https://root.cern,https://root.cern/root/html532/RooAbsNumGenerator.html,1,['config'],['config']
Modifiability,"t*fEX[fNpoints] array of X errors; Double_t*fEY[fNpoints] array of Y errors; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; TList*TGraph::fFunctionsPointer to list of functions (fits and user); TH1F*TGraph::fHistogramPointer to histogram used for drawing axis; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTGraph::fMaxSize!Current dimension of arrays fX and fY; Double_tTGraph::fMaximumMaximum value for plotting along y; Double_tTGraph::fMinimumMinimum value for plotting along y; TStringTNamed::fNameobject identifier; Int_tTGraph::fNpointsNumber of points <= fMaxSize; TStringTNamed::fTitleobject title; Double_t*TGraph::fX[fNpoints] array of X points; Double_t*TGraph::fY[fNpoints] array of Y points. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGraphErrors(); TGraphErrors default constructor. TGraphErrors(Int_t n); TGraphErrors normal constructor. the arrays are preset to zero. TGraphErrors(Int_t n, const Float_t* x, const Float_t* y, const Float_t* ex = 0, const Float_t* ey = 0); TGraphErrors normal constructor. if ex or ey are null, the corresponding arrays are preset to zero. TGraphErrors(Int_t n, const Double_t* x, const Double_t* y, const Double_t* ex = 0, const Double_t* ey = 0); TGraphErrors normal constructor. if ex or ey are null, the corresponding arrays are preset to zero. TGraphErrors(const TVectorF& vx, const TVectorF& vy, const TVectorF& vex, const TVectorF& vey); constructor with four vectors of floats in input; A grapherrors is built with the X coordinates taken from vx and Y coord from vy; and the errors from vectors vex and vey.; The number of points in the graph is the minimum of number of points; in vx and vy. TGraphErrors(const TVectorD& vx, const TVecto",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGraphErrors.html:14603,Inherit,Inheritance,14603,root/html532/TGraphErrors.html,https://root.cern,https://root.cern/root/html532/TGraphErrors.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t, Int_t maxbytes, Int_t& nbytes, Int_t& objlen, Int_t& keylen); Long64_tTFile::GetRelOffset() const; virtual Long64_tTDirectoryFile::GetSeekDir() const; virtual Long64_tTFile::GetSeekFree() const; virtual Long64_tTFile::GetSeekInfo() const; virtual Long64_tTDirectoryFile::GetSeekKeys() const; virtual Long64_tTDirectoryFile::GetSeekParent() const; virtual Long64_tGetSize() const; const TList*TFile::GetStreamerInfoCache(); virtual TList*TFile::GetStreamerInfoList(); virtual const char*TNamed::GetTitle() const; static TFile::EFileTypeTFile::GetType(const char* name, Option_t* option = """", TString* prefix = 0); virtual UInt_tTObject::GetUniqueID() const; TUUIDTDirectory::GetUUID() const; Int_tTFile::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static voidTFile::IncrementFileCounter(); virtual voidTFile::IncrementProcessIDs(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(Bool_t create); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTFile::IsArchive() const; Bool_tTFile::IsBinary() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTDirectory::IsFolder() const; virtual Bool_tTDirectoryFile::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsOpen() const; Bool_tTFile::IsRaw() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDirectoryFile::IsWritable() const; Bool_tTObject::IsZombie() const; virtual voidTFile::ls(Option_t* option = """") const; virtual voidTFile::MakeFree(Long64_t first, Long64_t last); virtual voidTFile::MakeProject(const char* dirname, const char* classes = ""*"", Option_t* option = ""new"")MENU ; virtual voidTFile::Map()MENU ; virtual Bool_tTFile::Matches(const char* name); voidTObject::MayNotUse(c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNetXNGFile.html:8095,Inherit,InheritsFrom,8095,root/html534/TNetXNGFile.html,https://root.cern,https://root.cern/root/html534/TNetXNGFile.html,3,['Inherit'],['InheritsFrom']
Modifiability,"t, Int_t maxbytes, Int_t& nbytes, Int_t& objlen, Int_t& keylen); Long64_tTFile::GetRelOffset() const; virtual Long64_tTDirectoryFile::GetSeekDir() const; virtual Long64_tTFile::GetSeekFree() const; virtual Long64_tTFile::GetSeekInfo() const; virtual Long64_tTDirectoryFile::GetSeekKeys() const; virtual Long64_tTDirectoryFile::GetSeekParent() const; virtual Long64_tGetSize() const; const TList*TFile::GetStreamerInfoCache(); virtual TList*TFile::GetStreamerInfoList(); virtual const char*TNamed::GetTitle() const; static TFile::EFileTypeTFile::GetType(const char* name, Option_t* option = """", TString* prefix = 0); virtual UInt_tTObject::GetUniqueID() const; TUUIDTDirectory::GetUUID() const; Int_tTFile::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static voidTFile::IncrementFileCounter(); virtual voidTFile::IncrementProcessIDs(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTFile::IsArchive() const; Bool_tTFile::IsBinary() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTDirectory::IsFolder() const; virtual Bool_tTDirectoryFile::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsOpen() const; Bool_tTFile::IsRaw() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDirectoryFile::IsWritable() const; Bool_tTObject::IsZombie() const; virtual voidTFile::ls(Option_t* option = """") const; virtual voidTFile::MakeFree(Long64_t first, Long64_t last); virtual voidTFile::MakeProject(const char* dirname, const char* classes = ""*"", Option_t* option = ""new"")MENU ; virtual voidTFile::Map()MENU ; virtual Bool_tTFile::Matches(const char* name); voidTObject::MayNotUse(const char* method) const; virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TWebFile.html:8010,Inherit,InheritsFrom,8010,root/html532/TWebFile.html,https://root.cern,https://root.cern/root/html532/TWebFile.html,4,['Inherit'],['InheritsFrom']
Modifiability,"t, Int_t maxbytes, Int_t& nbytes, Int_t& objlen, Int_t& keylen); Long64_tTFile::GetRelOffset() const; virtual Long64_tTDirectoryFile::GetSeekDir() const; virtual Long64_tTFile::GetSeekFree() const; virtual Long64_tTFile::GetSeekInfo() const; virtual Long64_tTDirectoryFile::GetSeekKeys() const; virtual Long64_tTDirectoryFile::GetSeekParent() const; virtual Long64_tGetSize() const; const TList*TFile::GetStreamerInfoCache(); virtual TList*TFile::GetStreamerInfoList(); virtual const char*TNamed::GetTitle() const; static TFile::EFileTypeTFile::GetType(const char* name, Option_t* option = """", TString* prefix = 0); virtual UInt_tTObject::GetUniqueID() const; TUUIDTDirectory::GetUUID() const; Int_tTFile::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static voidTFile::IncrementFileCounter(); virtual voidTFile::IncrementProcessIDs(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTFile::IsArchive() const; Bool_tTFile::IsBinary() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTDirectory::IsFolder() const; virtual Bool_tTDirectoryFile::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTFile::IsOpen() const; Bool_tTFile::IsRaw() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDirectoryFile::IsWritable() const; Bool_tTObject::IsZombie() const; virtual voidTFile::ls(Option_t* option = """") const; virtual voidTFile::MakeFree(Long64_t first, Long64_t last); virtual voidTFile::MakeProject(const char* dirname, const char* classes = ""*"", Option_t* option = ""new"")MENU ; virtual voidTFile::Map()MENU ; virtual Bool_tTFile::Matches(const char* name); voidTObject::MayNotUse(const char* method) const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMemFile.html:8198,Inherit,InheritsFrom,8198,root/html532/TMemFile.html,https://root.cern,https://root.cern/root/html532/TMemFile.html,4,['Inherit'],['InheritsFrom']
Modifiability,"t, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tgetAlpha() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); RooMCIntegrator::GeneratorTypegetGenType() const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const RooGrid&grid() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tintegral(const Double_t* yvec = 0); const RooAbsFunc*RooAbsIntegrator::integrand() const; Double_tRooAbsIntegrator::integrand(const Double_t* x) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tRooAbsIntegrator::isValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooMCIntegrator.html:3393,Inherit,InheritsFrom,3393,root/html532/RooMCIntegrator.html,https://root.cern,https://root.cern/root/html532/RooMCIntegrator.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tgetAlpha() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); RooMCIntegrator::GeneratorTypegetGenType() const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const RooGrid&grid() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tintegral(const Double_t* yvec = 0); const RooAbsFunc*RooAbsIntegrator::integrand() const; Double_tRooAbsIntegrator::integrand(const Double_t[] x) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tRooAbsIntegrator::isValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooMCIntegrator.html:3084,Inherit,InheritsFrom,3084,root/html602/RooMCIntegrator.html,https://root.cern,https://root.cern/root/html602/RooMCIntegrator.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const RooArgSet&getConfigSection(const char* name) const; RooArgSet&getConfigSection(const char* name); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; RooCategory&method1D(); const RooCategory&method1D() const; RooCategory&method1DOpen(); const RooCategory&method1DOpen() const; RooCategory&method2D(); const RooCategory&method2D() const; RooCategory&method2DOpen(); const RooCategory&method2DOpen() const; RooCategory&methodND(); const RooCategory&methodND() const; RooCategory&methodNDOpen(); const RooCategory&methodNDOpen() const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* rem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooNumIntConfig.html:3134,Inherit,InheritsFrom,3134,root/html532/RooNumIntConfig.html,https://root.cern,https://root.cern/root/html532/RooNumIntConfig.html,4,['Inherit'],['InheritsFrom']
Modifiability,"t, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const RooArgSet&getConfigSection(const char* name) const; RooArgSet&getConfigSection(const char* name); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; RooCategory&method1D(Bool_t cond, Bool_t cat); const RooCategory&method1D(Bool_t cond, Bool_t cat) const; RooCategory&method2D(Bool_t cond, Bool_t cat); const RooCategory&method2D(Bool_t cond, Bool_t cat) const; RooCategory&methodND(Bool_t cond, Bool_t cat); const RooCategory&methodND(Bool_t cond, Bool_t cat) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooNumGenConfig.html:3088,Inherit,InheritsFrom,3088,root/html532/RooNumGenConfig.html,https://root.cern,https://root.cern/root/html532/RooNumGenConfig.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const RooArgSet&getConfigSection(const char* name) const; RooArgSet&getConfigSection(const char* name); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; RooCategory&method1D(Bool_t cond, Bool_t cat); const RooCategory&method1D(Bool_t cond, Bool_t cat) const; RooCategory&method2D(Bool_t cond, Bool_t cat); const RooCategory&method2D(Bool_t cond, Bool_t cat) const; RooCategory&methodND(Bool_t cond, Bool_t cat); const RooCategory&methodND(Bool_t cond, Bool_t cat) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooNumGenConfig.html:3022,Inherit,InheritsFrom,3022,root/html602/RooNumGenConfig.html,https://root.cern,https://root.cern/root/html602/RooNumGenConfig.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; vector<long>::referencevector<long>::front(); vector<long>::const_referencevector<long>::front() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; vector<long>::iteratorvector<long>::insert(vector<long>::iterator __position, const vector<long>::value_type& __x); vector<long>::iteratorvector<long>::insert(vector<long>::iterator __position, vector<long>::value_type&& __x); voidvector<long>::insert(vector<long>::iterator __position, initializer_list<vector<long>::value_type> __l); voidvector<long>::insert(vector<long>::iterator __position, vector<bool>::size_type __n, const vector<long>::value_type& __x); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; vector<bool>::size_typevector<long>::max_size() const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTableMap.html:4840,Inherit,InheritsFrom,4840,root/html602/TTableMap.html,https://root.cern,https://root.cern/root/html602/TTableMap.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; vector<long>::referencevector<long>::front(); vector<long>::const_referencevector<long>::front() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; vector<long>::iteratorvector<long>::insert(vector<long>::iterator __position, const vector<long>::value_type& __x); vector<long>::iteratorvector<long>::insert(vector<long>::iterator __position, vector<long>::value_type&& __x); voidvector<long>::insert(vector<long>::iterator __position, initializer_list<vector<long>::value_type> __l); voidvector<long>::insert(vector<long>::iterator __position, vector<unsigned int>::size_type __n, const vector<long>::value_type& __x); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; vector<unsigned int>::size_typevector<long>::max_size() const; voidTObject::MayNotUse(const char* method) const; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TTableMap.html:4872,Inherit,InheritsFrom,4872,root/html604/TTableMap.html,https://root.cern,https://root.cern/root/html604/TTableMap.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t, Long64_t& ent, Long64_t& bytes, Long64_t& calls); TList*TVirtualPacketizer::GetFailedPackets(); virtual const char*TObject::GetIconName() const; Float_tTVirtualPacketizer::GetInitTime() const; virtual const char*TObject::GetName() const; virtual TDSetElement*GetNextPacket(TSlave* sl, TMessage* r); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Float_tTVirtualPacketizer::GetProcTime() const; TNtuple*TVirtualPacketizer::GetProgressPerf(Bool_t steal = kFALSE); Long64_tTVirtualPacketizer::GetReadCalls() const; TMap*TVirtualPacketizer::GetSlaveStats() const; TProofProgressStatus*TVirtualPacketizer::GetStatus(); virtual const char*TObject::GetTitle() const; Long64_tTVirtualPacketizer::GetTotalEntries() const; virtual UInt_tTObject::GetUniqueID() const; virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTVirtualPacketizer::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMarkBad(TSlave* s, TProofProgressStatus* status, TList** missingFiles); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPacketizerAdaptive.html:4266,Inherit,InheritsFrom,4266,root/html532/TPacketizerAdaptive.html,https://root.cern,https://root.cern/root/html532/TPacketizerAdaptive.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t, Long64_t& ent, Long64_t& bytes, Long64_t& calls); TList*TVirtualPacketizer::GetFailedPackets(); virtual const char*TObject::GetIconName() const; Float_tTVirtualPacketizer::GetInitTime() const; virtual const char*TObject::GetName() const; virtual TDSetElement*GetNextPacket(TSlave* sl, TMessage* r); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Float_tTVirtualPacketizer::GetProcTime() const; TNtuple*TVirtualPacketizer::GetProgressPerf(Bool_t steal = kFALSE); Long64_tTVirtualPacketizer::GetReadCalls() const; TMap*TVirtualPacketizer::GetSlaveStats() const; TProofProgressStatus*TVirtualPacketizer::GetStatus(); virtual const char*TObject::GetTitle() const; Long64_tTVirtualPacketizer::GetTotalEntries() const; virtual UInt_tTObject::GetUniqueID() const; virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTVirtualPacketizer::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMarkBad(TSlave* s, TProofProgressStatus* status, TList** missingFiles); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPacketizerAdaptive.html:4281,Inherit,InheritsFrom,4281,root/html602/TPacketizerAdaptive.html,https://root.cern,https://root.cern/root/html602/TPacketizerAdaptive.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t, Long64_t& ent, Long64_t& bytes, Long64_t& calls); TList*TVirtualPacketizer::GetFailedPackets(); virtual const char*TObject::GetIconName() const; Float_tTVirtualPacketizer::GetInitTime() const; virtual const char*TObject::GetName() const; virtual TDSetElement*GetNextPacket(TSlave* sl, TMessage* r); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Float_tTVirtualPacketizer::GetProcTime() const; TNtuple*TVirtualPacketizer::GetProgressPerf(Bool_t steal = kFALSE); Long64_tTVirtualPacketizer::GetReadCalls() const; TMap*TVirtualPacketizer::GetSlaveStats() const; TProofProgressStatus*TVirtualPacketizer::GetStatus(); virtual const char*TObject::GetTitle() const; Long64_tTVirtualPacketizer::GetTotalEntries() const; virtual UInt_tTObject::GetUniqueID() const; virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTVirtualPacketizer::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidTVirtualPacketizer::MarkBad(TSlave*, TProofProgressStatus*, TList**); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPacketizer.html:3743,Inherit,InheritsFrom,3743,root/html532/TPacketizer.html,https://root.cern,https://root.cern/root/html532/TPacketizer.html,4,['Inherit'],['InheritsFrom']
Modifiability,"t, Long64_t& ent, Long64_t& bytes, Long64_t& calls); TList*TVirtualPacketizer::GetFailedPackets(); virtual const char*TObject::GetIconName() const; Float_tTVirtualPacketizer::GetInitTime() const; virtual const char*TObject::GetName() const; virtual TDSetElement*GetNextPacket(TSlave* sl, TMessage* r); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Float_tTVirtualPacketizer::GetProcTime() const; TNtuple*TVirtualPacketizer::GetProgressPerf(Bool_t steal = kFALSE); Long64_tTVirtualPacketizer::GetReadCalls() const; TMap*TVirtualPacketizer::GetSlaveStats() const; TProofProgressStatus*TVirtualPacketizer::GetStatus(); virtual const char*TObject::GetTitle() const; Long64_tTVirtualPacketizer::GetTotalEntries() const; virtual UInt_tTObject::GetUniqueID() const; virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTVirtualPacketizer::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidTVirtualPacketizer::MarkBad(TSlave*, TProofProgressStatus*, TList**); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPacketizer.html:3766,Inherit,InheritsFrom,3766,root/html602/TPacketizer.html,https://root.cern,https://root.cern/root/html602/TPacketizer.html,4,['Inherit'],['InheritsFrom']
Modifiability,"t, RooSimWSTool::SplitRule& sr). Data Members; protected:. RooCmdArg_conflProtocol; string_masterCatName; map<std::string,SplitRule>_pdfmap; map<std::string,std::string>_restr. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr); Add prototype p.d.f pdfName to build configuration with associated split rules 'sr'. BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); Construct build configuration from single prototype 'pdfName' and list of arguments; that can be passed to RooSimWSTool::build() method. This routine parses SplitParam(); SplitParamConstrained() and Restrict() arguments. BuildConfig(const RooArgSet& /*legacyBuildConfig*/); Constructor to make BuildConfig from legacy RooSimPdfBuilder configuration; Empty for now. void internalAddPdf(const char* pdfName, const char* miStateList, RooSimWSTool::SplitRule& sr); Internal routine to add prototype pdf 'pdfName' with list of associated master states 'miStateNameList; and split rules 'sr' to configuration. void restrictBuild(const char* catName, const char* stateList); Restrict build by only considering state names in stateList for split in category catName. BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr). BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()). virtual ~BuildConfig(); {}. » Last changed: Mon Dec 7 13:49:03 2009 » Last generated: 2009-12-07 13:49; This page has been automatically generated. For comments or suggestions re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooSimWSTool__BuildConfig.html:5690,config,configuration,5690,root/html526/RooSimWSTool__BuildConfig.html,https://root.cern,https://root.cern/root/html526/RooSimWSTool__BuildConfig.html,1,['config'],['configuration']
Modifiability,"t, bind to it and start listening for TCP/IP connections on the port. ;  ; static int UnixUdpConnect (const char *hostname, int port);  Creates a UDP socket connection Is called via the TSocket constructor. ;  ; static int UnixUdpService (int port, int backlog);  Open a socket, bind to it and start listening for UDP connections on the port. ;  ; static int UnixUnixConnect (const char *path);  Connect to a Unix domain socket. Returns -1 in case of error. ;  ; static int UnixUnixConnect (int port);  Connect to a Unix domain socket. ;  ; static int UnixUnixService (const char *sockpath, int backlog);  Open a socket on path 'sockpath', bind to it and start listening for Unix domain connections to it. ;  ; static int UnixUnixService (int port, int backlog);  Open a socket, bind to it and start listening for Unix domain connections to it. ;  ; static int UnixWaitchild ();  Wait till child is finished. ;  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  . Private Member Functions; void FillWithCwd (char *cwd) const;  Fill buffer with current working directory. ;  . Additional Inherited Members;  Public Types inherited from TSystem; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnixSystem.html:34887,inherit,inherited,34887,doc/master/classTUnixSystem.html,https://root.cern,https://root.cern/doc/master/classTUnixSystem.html,1,['inherit'],['inherited']
Modifiability,"t, bind to it and start listening for TCP/IP connections on the port. ;  ; static int UnixUdpConnect (const char *hostname, int port);  Creates a UDP socket connection Is called via the TSocket constructor. ;  ; static int UnixUdpService (int port, int backlog);  Open a socket, bind to it and start listening for UDP connections on the port. ;  ; static int UnixUnixConnect (const char *path);  Connect to a Unix domain socket. Returns -1 in case of error. ;  ; static int UnixUnixConnect (int port);  Connect to a Unix domain socket. ;  ; static int UnixUnixService (const char *sockpath, int backlog);  Open a socket on path 'sockpath', bind to it and start listening for Unix domain connections to it. ;  ; static int UnixUnixService (int port, int backlog);  Open a socket, bind to it and start listening for Unix domain connections to it. ;  ; static int UnixWaitchild ();  Wait till child is finished. ;  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr};  ; Bool_t fDone {kFALSE};  ; TSeqCollection * fFileHandler {nullptr};  ; TString fFlagsDebug;  ; TString fFlagsOpt;  ; TSeqCollection * fHelpers {nullptr};  ; TString fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signals that were ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMacOSXSystem.html:36720,inherit,inherited,36720,doc/master/classTMacOSXSystem.html,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html,1,['inherit'],['inherited']
Modifiability,"t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TProofServ * fServ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  St",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServInterruptHandler.html:11252,inherit,inherited,11252,doc/master/classTProofServInterruptHandler.html,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html,3,['inherit'],['inherited']
Modifiability,"t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Public Attributes; RBrowser & fBrowser;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtH",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RBrowserTimer.html:12428,inherit,inherited,12428,doc/v632/classROOT_1_1RBrowserTimer.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RBrowserTimer.html,2,['inherit'],['inherited']
Modifiability,"t, const Weights &weights) constcompute the net with the given input and the given weightsDefinition NeuralNet.icc:1037; TMVA::DNN::Net::fetchOutputvoid fetchOutput(const LayerData &lastLayerData, OutputContainer &outputContainer) constDefinition NeuralNet.icc:1291; TMVA::DNN::Net::inputSizesize_t inputSize() constinput size of the DNNDefinition NeuralNet.h:1098; TMVA::DNN::Net::m_eErrorFunctionModeErrorFunction m_eErrorFunctiondenotes the error functionDefinition NeuralNet.h:1269; TMVA::DNN::Net::traindouble train(std::vector< double > &weights, std::vector< Pattern > &trainPattern, const std::vector< Pattern > &testPattern, Minimizer &minimizer, Settings &settings)start the trainingDefinition NeuralNet.icc:712; TMVA::DNN::Net::layersconst std::vector< Layer > & layers() constreturns the layers (structure)Definition NeuralNet.h:1245; TMVA::DNN::Net::prepareLayerDatastd::vector< std::vector< LayerData > > prepareLayerData(LayerContainer &layers, Batch &batch, const DropContainer &dropContainer, ItWeight itWeightBegin, ItWeight itWeightEnd, ItGradient itGradientBegin, ItGradient itGradientEnd, size_t &totalNumWeights) constDefinition NeuralNet.icc:1111; TMVA::DNN::Net::initializeWeightsvoid initializeWeights(WeightInitializationStrategy eInitStrategy, OutIterator itWeight)initialize the weights with the given strategyDefinition NeuralNet.icc:1470; TMVA::DNN::Net::outputSizesize_t outputSize() constoutput size of the DNNDefinition NeuralNet.h:1099; TMVA::DNN::Net::errorFunctiondouble errorFunction(LayerData &layerData, Container truth, ItWeight itWeight, ItWeight itWeightEnd, double patternWeight, double factorWeightDecay, EnumRegularization eRegularization) constcomputes the error of the DNNDefinition NeuralNet.icc:1579; TMVA::DNN::Net::forward_backwarddouble forward_backward(LayerContainer &layers, PassThrough &settingsAndBatch, ItWeight itWeightBegin, ItWeight itWeightEnd, ItGradient itGradientBegin, ItGradient itGradientEnd, size_t trainFromLayer, OutContainer &ou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8icc_source.html:63760,layers,layers,63760,doc/master/NeuralNet_8icc_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8icc_source.html,1,['layers'],['layers']
Modifiability,"t, const char separator) const; splits the option string at 'separator' and fills the list; 'splitV' with the primitive strings. TString StringFromInt(Long_t i); string tools. TString StringFromDouble(Double_t d); string tools. void WriteTMatrixDToXML(void* node, const char* name, TMatrixD* mat); XML helpers. void WriteTVectorDToXML(void* node, const char* name, TVectorD* vec). void ReadTVectorDFromXML(void* node, const char* name, TVectorD* vec). void ReadTMatrixDFromXML(void* node, const char* name, TMatrixD* mat). void TMVAWelcomeMessage(); direct output, eg, when starting ROOT session -> no use of Logger here. void TMVAVersionMessage(TMVA::MsgLogger& logger); prints the TMVA release number and date. void ROOTVersionMessage(TMVA::MsgLogger& logger); prints the ROOT release number and date. void TMVAWelcomeMessage(TMVA::MsgLogger& logger, TMVA::Tools::EWelcomeMessage m = kStandardWelcomeMsg); various kinds of welcome messages; ASCII text generated by this site: http://www.network-science.de/ascii. void TMVACitation(TMVA::MsgLogger& logger, TMVA::Tools::ECitation citType = kPlainText); kinds of TMVA citation. Bool_t HistoHasEquidistantBins(const TH1& h). CalcCovarianceMatrices( const std::vector<const Event*>& events, Int_t maxCls, VariableTransformBase* transformBase ). CalcCovarianceMatrices( const std::vector<Event*>& events, Int_t maxCls, VariableTransformBase* transformBase ); compute covariance matrices. TH1* GetCumulativeDist(TH1* h); get the cumulative distribution of a histogram. Double_t ComputeVariance(Double_t sumx2, Double_t sumx, Int_t nx). Tools(). TXMLEngine& xmlengine(); { return *fXMLEngine; }. int xmlenginebuffersize(); { return 10000000; }. » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-30 15:18; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__Tools.html:13035,Variab,VariableTransformBase,13035,root/html602/TMVA__Tools.html,https://root.cern,https://root.cern/root/html602/TMVA__Tools.html,2,['Variab'],['VariableTransformBase']
Modifiability,"t, const char separator) const; splits the option string at 'separator' and fills the list; 'splitV' with the primitive strings. TString StringFromInt(Long_t i); string tools. TString StringFromDouble(Double_t d); string tools. void WriteTMatrixDToXML(void* node, const char* name, TMatrixD* mat); XML helpers. void WriteTVectorDToXML(void* node, const char* name, TVectorD* vec). void ReadTVectorDFromXML(void* node, const char* name, TVectorD* vec). void ReadTMatrixDFromXML(void* node, const char* name, TMatrixD* mat). void TMVAWelcomeMessage(); direct output, eg, when starting ROOT session -> no use of Logger here. void TMVAVersionMessage(TMVA::MsgLogger& logger); prints the TMVA release number and date. void ROOTVersionMessage(TMVA::MsgLogger& logger); prints the ROOT release number and date. void TMVAWelcomeMessage(TMVA::MsgLogger& logger, TMVA::Tools::EWelcomeMessage m = kStandardWelcomeMsg); various kinds of welcome messages; ASCII text generated by this site: http://www.network-science.de/ascii. void TMVACitation(TMVA::MsgLogger& logger, TMVA::Tools::ECitation citType = kPlainText); kinds of TMVA citation. Bool_t HistoHasEquidistantBins(const TH1& h). CalcCovarianceMatrices( const std::vector<const Event*>& events, Int_t maxCls, VariableTransformBase* transformBase ). CalcCovarianceMatrices( const std::vector<Event*>& events, Int_t maxCls, VariableTransformBase* transformBase ); compute covariance matrices. TH1* GetCumulativeDist(TH1* h); get the cumulative distribution of a histogram. Double_t ComputeVariance(Double_t sumx2, Double_t sumx, Int_t nx). Tools(). TXMLEngine& xmlengine(); { return *fXMLEngine; }. int xmlenginebuffersize(); { return 10000000; }. » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__Tools.html:12462,Variab,VariableTransformBase,12462,root/html534/TMVA__Tools.html,https://root.cern,https://root.cern/root/html534/TMVA__Tools.html,2,['Variab'],['VariableTransformBase']
Modifiability,"t, const char separator) const; splits the option string at 'separator' and fills the list; 'splitV' with the primitive strings. TString StringFromInt(Long_t i); string tools. TString StringFromDouble(Double_t d); string tools. void WriteTMatrixDToXML(void* node, const char* name, TMatrixD* mat); XML helpers. void WriteTVectorDToXML(void* node, const char* name, TVectorD* vec). void ReadTVectorDFromXML(void* node, const char* name, TVectorD* vec). void ReadTMatrixDFromXML(void* node, const char* name, TMatrixD* mat). void TMVAWelcomeMessage(); direct output, eg, when starting ROOT session -> no use of Logger here. void TMVAVersionMessage(TMVA::MsgLogger& logger); prints the TMVA release number and date. void ROOTVersionMessage(TMVA::MsgLogger& logger); prints the ROOT release number and date. void TMVAWelcomeMessage(TMVA::MsgLogger& logger, TMVA::Tools::EWelcomeMessage m = kStandardWelcomeMsg); various kinds of welcome messages; ASCII text generated by this site: http://www.network-science.de/ascii. void TMVACitation(TMVA::MsgLogger& logger, TMVA::Tools::ECitation citType = kPlainText); kinds of TMVA citation. Bool_t HistoHasEquidistantBins(const TH1& h). CalcCovarianceMatrices( const std::vector<const Event*>& events, Int_t maxCls, VariableTransformBase* transformBase ). CalcCovarianceMatrices( const std::vector<Event*>& events, Int_t maxCls, VariableTransformBase* transformBase ); compute covariance matrices. TH1* GetCumulativeDist(TH1* h); get the cumulative distribution of a histogram. Double_t ComputeVariance(Double_t sumx2, Double_t sumx, Int_t nx). Tools(). TXMLEngine& xmlengine(); { return *fXMLEngine; }. int xmlenginebuffersize(); { return 10000000; }. » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-09-08 17:46; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__Tools.html:13043,Variab,VariableTransformBase,13043,root/html604/TMVA__Tools.html,https://root.cern,https://root.cern/root/html604/TMVA__Tools.html,2,['Variab'],['VariableTransformBase']
Modifiability,"t, const char* filename, const char* namePat, RooAbsArg* client); Print tree structure of expression tree on stdout, or to file if filename is specified.; If namePat is not ""*"", only nodes with names matching the pattern will be printed.; The client argument is used in recursive calls to properly display the value or shape nature; of the client-server links. It should be zero in calls initiated by users. void printCompactTree(ostream& os, const char* indent, const char* namePat, RooAbsArg* client); Print tree structure of expression tree on given ostream.; If namePat is not ""*"", only nodes with names matching the pattern will be printed.; The client argument is used in recursive calls to properly display the value or shape nature; of the client-server links. It should be zero in calls initiated by users. void printComponentTree(const char* indent = """", const char* namePat = 0); Print tree structure of expression tree on given ostream, only branch nodes are printed.; Lead nodes (variables) will not be shown. If namePat is not ""*"", only nodes with names matching the pattern will be printed. TString cleanBranchName() const; Construct a mangled name from the actual name that; is free of any math symbols that might be interpreted by TTree. UInt_t crc32(const char* data); Calculate crc32 checksum on given string. void printCompactTreeHook(ostream& os, const char* ind = """"); Hook function interface for object to insert additional information; when printed in the context of a tree structure. This default; implementation prints nothing. void registerCache(RooAbsCache& cache); Register RooAbsCache with this object. This function is called; by RooAbsCache constructors for objects that are a datamember; of this RooAbsArg. By registering itself the RooAbsArg is aware; of all its cache data members and will forward server change; and cache mode change calls to the cache objects, which in turn; can forward them their contents. void unRegisterCache(RooAbsCache& cache); Unregister a ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsArg.html:32148,variab,variables,32148,root/html526/RooAbsArg.html,https://root.cern,https://root.cern/root/html526/RooAbsArg.html,1,['variab'],['variables']
Modifiability,"t, const char* opt, Long64_t fst, TDSet* dset, const char* selec); Create a TProofQueryResult instance for this query. void SetQueryRunning(TProofQueryResult* pq); Set query in running state. Long64_t DrawSelect(TDSet* dset, const char* varexp, const char* selection = """", Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Execute the specified drawing action on a data set (TDSet).; Event- or Entry-lists should be set in the data set object using; TDSet::SetEntryList.; Returns -1 in case of error or number of selected events otherwise. Long64_t Process(TDSet* dset, const char* sel, Option_t* o = """", Long64_t nent = -1, Long64_t fst = 0); Process a data set (TDSet) using the specified selector (.C) file.; Entry- or event-lists should be set in the data set object using; TDSet::SetEntryList.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success. Int_t CreateSymLinks(TList* files, TList* wrks = 0); Create in each worker sandbox symlinks to the files in the list; Used to make the cache information available to workers. Int_t InitDataSetManager(); Initialize the dataset manager from directives or from defaults; Return 0 on success, -1 on failure. void ShowCache(Bool_t all = kFALSE); List contents of file cache. If all is true show all caches also on; slaves. If everything is ok all caches are to be the same. void ClearCache(const char* file = 0); Remove files from all file caches. Int_t Load(const char* macro, Bool_t notOnClient = kFALSE, Bool_t uniqueOnly = kTRUE, TList* wrks = 0); Copy the specified macro in the cache directory. The macro file is; uploaded if new or updated. If existing, the corresponding header; basename(macro).h or .hh, is also uploaded. For the other arguments; see TProof::Load().; Returns 0 in case of success and -1 in case of error. Int_t CopyMacroToCache(const char* macro, Int_t headerRequired = 0, TSelector** selector = 0, Int_t opt = 0, TList* wrks = 0); Copy a macro, and its possible ass",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofLite.html:30977,sandbox,sandbox,30977,root/html534/TProofLite.html,https://root.cern,https://root.cern/root/html534/TProofLite.html,4,['sandbox'],['sandbox']
Modifiability,"t, double, double);  set the initial range of an existing variable ;  ; virtual bool SetVariableLimits (unsigned int ivar, double lower, double upper);  set the limits of an already existing variable ;  ; virtual bool SetVariableLowerLimit (unsigned int ivar, double lower);  set the lower-limit of an already existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableStepSize (unsigned int ivar, double value);  set the step size of an already existing variable ;  ; virtual bool SetVariableUpperLimit (unsigned int ivar, double upper);  set the upper-limit of an already existing variable ;  ; virtual bool SetVariableValue (unsigned int ivar, double value);  set the value of an already existing variable ;  ; virtual bool SetVariableValues (const double *x);  set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  ; virtual int VariableIndex (const std::string &name) const;  get index of variable given a variable given a name return -1 if variable is not found ;  ; virtual std::string VariableName (unsigned int ivar) const;  get name of variables (override if minimizer support storing of variable names) return an empty string if variable is not found ;  . Protected Member Functions; void GetGeneticOptions (ROOT::Math::MinimizerOptions &opt) const;  . Protected Attributes; TMVA::IFitterTarget * fFitness;  ; double fMinValue;  ; GeneticMinimizerParameters fParameters;  ; std::vector< TMVA::Interval * > fRanges;  ; std::vector< double > fResult;  ;  Protected Attributes inherited from ROOT::Math::Minimizer; MinimizerOptions fOptions;  minimizer options ;  ; int fStatus = -1;  status of minimizer ;  ; bool fValidE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html:9184,variab,variables,9184,doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html,11,['variab'],"['variable', 'variables']"
Modifiability,"t, double, double);  set the initial range of an existing variable ;  ; virtual bool SetVariableLimits (unsigned int ivar, double lower, double upper);  set the limits of an already existing variable ;  ; virtual bool SetVariableLowerLimit (unsigned int ivar, double lower);  set the lower-limit of an already existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableStepSize (unsigned int ivar, double value);  set the step size of an already existing variable ;  ; virtual bool SetVariableUpperLimit (unsigned int ivar, double upper);  set the upper-limit of an already existing variable ;  ; virtual bool SetVariableValue (unsigned int ivar, double value);  set the value of an already existing variable ;  ; virtual bool SetVariableValues (const double *x);  set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  ; virtual int VariableIndex (const std::string &name) const;  get index of variable given a variable given a name return -1 if variable is not found ;  ; virtual std::string VariableName (unsigned int ivar) const;  get name of variables (override if minimizer support storing of variable names) return an empty string if variable is not found ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Attributes; std::vector< double > fCovar;  ; unsigned int fDim;  ; std::vector< double > fErrors;  ; TLinearFitter * fFitter;  ; double fMinVal;  ; unsigned int fNFree;  ; const ROOT::Math::IMultiGradFunction * fObjFunc;  ; std::vector< double > fParams;  ; bool fRobu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLinearMinimizer.html:9323,variab,variables,9323,doc/master/classTLinearMinimizer.html,https://root.cern,https://root.cern/doc/master/classTLinearMinimizer.html,11,['variab'],"['variable', 'variables']"
Modifiability,"t, dyn-casting them to TEveElement. ;  ; virtual void AnnihilateProjecteds ();  Optimized destroy of projected elements with condition there is only one parent for projected element. ;  ; ProjList_i BeginProjecteds ();  ; virtual void ClearProjectedList ();  ; ProjList_i EndProjecteds ();  ; virtual Bool_t HasProjecteds () const;  ; virtual void PropagateMainColor (Color_t color, Color_t old_color);  Set main color of projecteds if their color is the same as old_color. ;  ; virtual void PropagateMainTransparency (Char_t t, Char_t old_t);  Set main transparency of projecteds if their transparency is the same as the old one. ;  ; virtual void PropagateRenderState (Bool_t rnr_self, Bool_t rnr_children);  Set render state of projecteds. ;  ; virtual void PropagateVizParams (TEveElement *el=nullptr);  Set visualization parameters of projecteds. ;  ; virtual void RemoveProjected (TEveProjected *p);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox;  TAttBBox ();  ; virtual ~TAttBBox ();  ; Float_t * AssertBBox ();  ; Float_t * GetBBox ();  ; Bool_t GetBBoxOK () const;  ; TAttBBox & operator= (const TAttBBox &tab);  ; void ResetBBox ();  ; void SetupBBoxCube (Float_t extent, Float_t x, Float_t y, Float_t z);  Setup bounding box as cube with given extent and center position. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TEveTriangleSet * ReadTrivialFile (const char *file);  Read a simple ascii input file describing vertices and triangles. ;  ;  Static P",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTriangleSet.html:28149,inherit,inherited,28149,doc/master/classTEveTriangleSet.html,https://root.cern,https://root.cern/doc/master/classTEveTriangleSet.html,1,['inherit'],['inherited']
Modifiability,"t, dyn-casting them to TEveElement. ;  ; virtual void AnnihilateProjecteds ();  Optimized destroy of projected elements with condition there is only one parent for projected element. ;  ; ProjList_i BeginProjecteds ();  ; virtual void ClearProjectedList ();  ; ProjList_i EndProjecteds ();  ; virtual Bool_t HasProjecteds () const;  ; virtual void PropagateMainColor (Color_t color, Color_t old_color);  Set main color of projecteds if their color is the same as old_color. ;  ; virtual void PropagateMainTransparency (Char_t t, Char_t old_t);  Set main transparency of projecteds if their transparency is the same as the old one. ;  ; virtual void PropagateRenderState (Bool_t rnr_self, Bool_t rnr_children);  Set render state of projecteds. ;  ; virtual void PropagateVizParams (TEveElement *el=nullptr);  Set visualization parameters of projecteds. ;  ; virtual void RemoveProjected (TEveProjected *p);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox;  TAttBBox ();  ; virtual ~TAttBBox ();  ; Float_t * AssertBBox ();  ; Float_t * GetBBox ();  ; Bool_t GetBBoxOK () const;  ; TAttBBox & operator= (const TAttBBox &tab);  ; void ResetBBox ();  ; void SetupBBoxCube (Float_t extent, Float_t x, Float_t y, Float_t z);  Setup bounding box as cube with given extent and center position. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TGeoHMatrix * GetGeoHMatrixIdentity ();  Return static identity matrix in homogeneous representation. ;  ; static TGeoManager * GetGeoM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveGeoShape.html:29168,inherit,inherited,29168,doc/master/classTEveGeoShape.html,https://root.cern,https://root.cern/doc/master/classTEveGeoShape.html,1,['inherit'],['inherited']
Modifiability,"t, dyn-casting them to TEveElement. ;  ; virtual void AnnihilateProjecteds ();  Optimized destroy of projected elements with condition there is only one parent for projected element. ;  ; ProjList_i BeginProjecteds ();  ; virtual void ClearProjectedList ();  ; ProjList_i EndProjecteds ();  ; virtual Bool_t HasProjecteds () const;  ; virtual void PropagateMainColor (Color_t color, Color_t old_color);  Set main color of projecteds if their color is the same as old_color. ;  ; virtual void PropagateMainTransparency (Char_t t, Char_t old_t);  Set main transparency of projecteds if their transparency is the same as the old one. ;  ; virtual void PropagateRenderState (Bool_t rnr_self, Bool_t rnr_children);  Set render state of projecteds. ;  ; virtual void PropagateVizParams (TEveElement *el=nullptr);  Set visualization parameters of projecteds. ;  ; virtual void RemoveProjected (TEveProjected *p);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox;  TAttBBox ();  ; virtual ~TAttBBox ();  ; Float_t * AssertBBox ();  ; Float_t * GetBBox ();  ; Bool_t GetBBoxOK () const;  ; TAttBBox & operator= (const TAttBBox &tab);  ; void ResetBBox ();  ; void SetupBBoxCube (Float_t extent, Float_t x, Float_t y, Float_t z);  Setup bounding box as cube with given extent and center position. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveShape; static void CheckAndFixBoxOrientationEv (TEveVector box[8]);  Make sure box orientat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveBox.html:28660,inherit,inherited,28660,doc/master/classTEveBox.html,https://root.cern,https://root.cern/doc/master/classTEveBox.html,2,['inherit'],['inherited']
Modifiability,"t, dyn-casting them to TEveElement. ;  ; virtual void AnnihilateProjecteds ();  Optimized destroy of projected elements with condition there is only one parent for projected element. ;  ; ProjList_i BeginProjecteds ();  ; virtual void ClearProjectedList ();  ; ProjList_i EndProjecteds ();  ; virtual Bool_t HasProjecteds () const;  ; virtual void PropagateMainColor (Color_t color, Color_t old_color);  Set main color of projecteds if their color is the same as old_color. ;  ; virtual void PropagateMainTransparency (Char_t t, Char_t old_t);  Set main transparency of projecteds if their transparency is the same as the old one. ;  ; virtual void PropagateRenderState (Bool_t rnr_self, Bool_t rnr_children);  Set render state of projecteds. ;  ; virtual void PropagateVizParams (TEveElement *el=nullptr);  Set visualization parameters of projecteds. ;  ; virtual void RemoveProjected (TEveProjected *p);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox;  TAttBBox ();  ; virtual ~TAttBBox ();  ; Float_t * AssertBBox ();  ; Float_t * GetBBox ();  ; Bool_t GetBBoxOK () const;  ; TAttBBox & operator= (const TAttBBox &tab);  ; void ResetBBox ();  ; void SetupBBoxCube (Float_t extent, Float_t x, Float_t y, Float_t z);  Setup bounding box as cube with given extent and center position. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TEveProjected;  TEveProjected ();  Constructor. ;  ; virtual ~TEveProjected ();  Destructor. ;  ; Float_t GetDepth () const;  ; TEveProjectionManager * GetManager () const;  ; TEveProjectable * GetProjectable () const;  ; virtual void SetDepth (Float_t d);  Set depth coordinate for the el",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveBoxProjected.html:28304,inherit,inherited,28304,doc/master/classTEveBoxProjected.html,https://root.cern,https://root.cern/doc/master/classTEveBoxProjected.html,4,['inherit'],['inherited']
Modifiability,"t, dyn-casting them to TEveElement. ;  ; virtual void AnnihilateProjecteds ();  Optimized destroy of projected elements with condition there is only one parent for projected element. ;  ; ProjList_i BeginProjecteds ();  ; virtual void ClearProjectedList ();  ; ProjList_i EndProjecteds ();  ; virtual Bool_t HasProjecteds () const;  ; virtual void PropagateMainColor (Color_t color, Color_t old_color);  Set main color of projecteds if their color is the same as old_color. ;  ; virtual void PropagateMainTransparency (Char_t t, Char_t old_t);  Set main transparency of projecteds if their transparency is the same as the old one. ;  ; virtual void PropagateRenderState (Bool_t rnr_self, Bool_t rnr_children);  Set render state of projecteds. ;  ; virtual void PropagateVizParams (TEveElement *el=nullptr);  Set visualization parameters of projecteds. ;  ; virtual void RemoveProjected (TEveProjected *p);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox;  TAttBBox ();  ; virtual ~TAttBBox ();  ; Float_t * AssertBBox ();  ; virtual void ComputeBBox ()=0;  ; Float_t * GetBBox ();  ; Bool_t GetBBoxOK () const;  ; TAttBBox & operator= (const TAttBBox &tab);  ; void ResetBBox ();  ; void SetupBBoxCube (Float_t extent, Float_t x, Float_t y, Float_t z);  Setup bounding box as cube with given extent and center position. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static void CheckAndFixBoxOrientationEv (TEveVector box[8]);  Make sure box orientation is consistent with standard arrangement. ;  ; static void CheckAndFixBoxOrientationFv (Float_t box[8][3]);  Make sure box orientation is consistent with standard arrangement. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveShape.html:29375,inherit,inherited,29375,doc/master/classTEveShape.html,https://root.cern,https://root.cern/doc/master/classTEveShape.html,1,['inherit'],['inherited']
Modifiability,"t, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TGeoPatternFinder::EGeoPatternFlags { kPatternReflected; kPatternSpacedOut; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTGeoPatternFinder::fDivIndexindex of first div. node; Double_tTGeoPatternFinder::fEndending point; Int_tTGeoPatternFinder::fNdivisionsnumber of divisions; Double_tTGeoPatternFinder::fStartstarting point on divided axis; Double_tTGeoPatternFinder::fStepdivision step length; vector<ThreadData_t*>TGeoPatternFinder::fThreadData! Vector of thread private transient data; Int_tTGeoPatternFinder::fThreadSize! Size of the thread vector; TGeoVolume*TGeoPatternFinder::fVolumevolume to which applies. private:. Double_tfTxytangent of alpha. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoPatternParaY(); Default constructor. TGeoPatternParaY(TGeoVolume* vol, Int_t ndivisions); constructor. TGeoPatternParaY(TGeoVolume* vol, Int_t ndivisions, Double_t step); constructor. TGeoPatternParaY(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); constructor. TGeoPatternParaY(const TGeoPatternParaY& pf); copy constructor. TGeoPatternParaY& operator=(const TGeoPatternParaY& ); assignment operator. ~TGeoPatternParaY(); Destructor. void cd(Int_t idiv); Update current division index and global matrix to point to a given slice. Bool_t IsOnBoundary(const Double_t* point) const; Checks if the current point is on division boundary. TGeoNode * FindNode(Double_t* point, const Double_t* dir = 0); get the node division containing the query point. TGeoPatternFinder * MakeCopy(Bool_t reflect = kFALSE); Make a copy of this finder. Reflect by Z if required. void SavePrimitive(ostream& out, Option_t* option = """"); Save a primiti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPatternParaY.html:8430,Inherit,Inheritance,8430,root/html534/TGeoPatternParaY.html,https://root.cern,https://root.cern/root/html534/TGeoPatternParaY.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t, va_list va) const; voidTObject::MakeZombie(). private:. voidDrawSliceFrame(Int_t low, Int_t up) const; voidDrawSliceTextured(Double_t pos) const; voidFindMinMax(Int_t sliceBegin, Int_t sliceEnd) const; Bool_tPreparePalette() const; voidPrepareTexCoords(Double_t pos, Int_t sliceBegin, Int_t sliceEnd) const. Data Members; public:. enum ESliceAxis { kXOZ; kYOZ; kXOY; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TAxis*fAxis; TGLTH3Slice::ESliceAxisfAxisType; const TGLPlotBox*fBox; const TGLPlotCoordinates*fCoord; const TF3*fF3; const TH3*fHist; pair<double,double>fMinMax; TGLLevelPalettefPalette; Int_tfSliceWidth; TGL2DArray<Double_t>fTexCoords. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLTH3Slice(const TString& sliceName, const TH3* hist, const TGLPlotCoordinates* coord, const TGLPlotBox* box, TGLTH3Slice::ESliceAxis axis); Constructor. TGLTH3Slice(const TString& sliceName, const TH3* hist, const TF3* fun, const TGLPlotCoordinates* coord, const TGLPlotBox* box, TGLTH3Slice::ESliceAxis axis); Constructor. void SetSliceWidth(Int_t width = 1); Set Slice width. void DrawSlice(Double_t pos) const; Draw slice. void FindMinMax(Int_t sliceBegin, Int_t sliceEnd) const; Find minimum and maximum for slice.; fMinMax.first = 0.;. switch (fAxisType) {; case kXOZ:; for (Int_t level = low; level < up; ++ level); fMinMax.first += fHist->GetBinContent(fCoord->GetFirstXBin(), level, fCoord->GetFirstZBin());; fMinMax.second = fMinMax.first;; for (Int_t j = fCoord->GetFirstZBin(), jt = 0, ej = fCoord->GetLastZBin(); j <= ej; ++j, ++jt) {; for (Int_t i = fCoord->GetFirstXBin(), it = 0, ei = fCoord->GetLastXBin(); i <= ei; ++i, ++it) {; D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLTH3Slice.html:6401,Inherit,Inheritance,6401,root/html532/TGLTH3Slice.html,https://root.cern,https://root.cern/root/html532/TGLTH3Slice.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fCocoaDraw;  ; bool fDirectDraw;  ; EDrawMode fDrawMode;  ; std::unique_ptr< ROOT::MacOSX::Details::CocoaPrivate > fPimpl;  ; Drawable_t fSelectedDrawable;  ;  Protected Attributes inherited from TVirtualX; EDrawMode fDrawMode;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Types; typedef std::map< Atom_t, Window_t >::iterator selection_iterator;  . Private Member Functions;  TGCocoa (const TGCocoa &rhs);  ; Atom_t FindAtom (const std::string &atomName, bool addIfNotFound);  ; bool MakeProcessForeground ();  ; TGCocoa & operator= (const TGCocoa &rhs);  ; void SetApplicationIcon ();  . Private Attributes; std::vector< std::string > fAtomToName;  ; ROOT::MacOSX::X11::Rectangle fDisplayRect;  ; bool fDisplayShapeChanged;  ; bool fForegroundProcess;  ; ROOT::MacOSX::X11::name_to_atom_map fNameToAtom;  ; std::map< Atom_t, Window_t > fSelectionOwners;  ; bool fSetApp;  ; std::vector< GCValues_t > fX11Contexts;  . Additional Inherited Members;  Public Types inherited from TVirtualX; enum  EBoxMode { kHollow; , kFilled; };  ; enum  EDrawMode { kCopy = 1; , kXor; , kInvert; };  ; enum  ETextMode { kClear; , kOpaque; };  ; enum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCocoa.html:50025,inherit,inherited,50025,doc/master/classTGCocoa.html,https://root.cern,https://root.cern/doc/master/classTGCocoa.html,1,['inherit'],['inherited']
Modifiability,"t, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooBCPEffDecay.h>. Inheritance diagram for RooBCPEffDecay:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ DecayType. enum RooBCPEffDecay::DecayType. EnumeratorSingleSided ; DoubleSided ; Flipped . Definition at line 26 of file RooBCPEffDecay.h. Constructor & Destructor Documentation. ◆ RooBCPEffDecay() [1/3]. RooBCPEffDecay::RooBCPEffDecay ; (; ). inline . Definition at line 29 of file RooBCPEffDecay.h. ◆ RooBCPEffDecay() [2/3]. RooBCPEffDecay::RooBCPEffDecay ; (; const char * ; name, . const char * ; title, . RooRealVar & ; t, . RooAbsCategory & ; tag, . RooAbsReal & ; tau, . RooAbsReal & ; dm, . RooAbsReal & ; avgMistag, . RooAbsReal & ; CPeigenval, . RooAbsReal & ; absLambda, . RooAbsReal & ; argLambda, . RooAbsReal & ; effRatio, . RooAbsReal & ; delMistag, . const RooResolutionModel & ; model, . DecayType ; type = DoubleSided . ). Constructo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBCPEffDecay.html:77351,inherit,inherited,77351,doc/master/classRooBCPEffDecay.html,https://root.cern,https://root.cern/doc/master/classRooBCPEffDecay.html,1,['inherit'],['inherited']
Modifiability,"t, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooBCPGenDecay.h>. Inheritance diagram for RooBCPGenDecay:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ DecayType. enum RooBCPGenDecay::DecayType. EnumeratorSingleSided ; DoubleSided ; Flipped . Definition at line 26 of file RooBCPGenDecay.h. Constructor & Destructor Documentation. ◆ RooBCPGenDecay() [1/3]. RooBCPGenDecay::RooBCPGenDecay ; (; ). inline . Definition at line 29 of file RooBCPGenDecay.h. ◆ RooBCPGenDecay() [2/3]. RooBCPGenDecay::RooBCPGenDecay ; (; const char * ; name, . const char * ; title, . RooRealVar & ; t, . RooAbsCategory & ; tag, . RooAbsReal & ; tau, . RooAbsReal & ; dm, . RooAbsReal & ; avgMistag, . RooAbsReal & ; avgC, . RooAbsReal & ; avgS, . RooAbsReal & ; delMistag, . RooAbsReal & ; mu, . const RooResolutionModel & ; model, . DecayType ; type = DoubleSided . ). Constructor for RooBCPGenDecay. ; Creates an instance o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBCPGenDecay.html:77225,inherit,inherited,77225,doc/master/classRooBCPGenDecay.html,https://root.cern,https://root.cern/doc/master/classRooBCPGenDecay.html,1,['inherit'],['inherited']
Modifiability,"t, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooBDecay.h>. Inheritance diagram for RooBDecay:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ DecayType. enum RooBDecay::DecayType. EnumeratorSingleSided ; DoubleSided ; Flipped . Definition at line 29 of file RooBDecay.h. Constructor & Destructor Documentation. ◆ RooBDecay() [1/3]. RooBDecay::RooBDecay ; (; ). inline . Definition at line 32 of file RooBDecay.h. ◆ RooBDecay() [2/3]. RooBDecay::RooBDecay ; (; const char * ; name, . const char * ; title, . RooRealVar & ; t, . RooAbsReal & ; tau, . RooAbsReal & ; dgamma, . RooAbsReal & ; f0, . RooAbsReal & ; f1, . RooAbsReal & ; f2, . RooAbsReal & ; f3, . RooAbsReal & ; dm, . const RooResolutionModel & ; model, . DecayType ; type . ). Constructor for RooBDecay. ; Creates an instance of RooBDecay with the specified parameters.; Parameters. [in]nameThe name of the PDF. ; [in]titleThe title of the P",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBDecay.html:77235,inherit,inherited,77235,doc/master/classRooBDecay.html,https://root.cern,https://root.cern/doc/master/classRooBDecay.html,1,['inherit'],['inherited']
Modifiability,"t, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooBMixDecay.h>. Inheritance diagram for RooBMixDecay:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ DecayType. enum RooBMixDecay::DecayType. EnumeratorSingleSided ; DoubleSided ; Flipped . Definition at line 26 of file RooBMixDecay.h. Constructor & Destructor Documentation. ◆ RooBMixDecay() [1/3]. RooBMixDecay::RooBMixDecay ; (; ). inline . Definition at line 29 of file RooBMixDecay.h. ◆ RooBMixDecay() [2/3]. RooBMixDecay::RooBMixDecay ; (; const char * ; name, . const char * ; title, . RooRealVar & ; t, . RooAbsCategory & ; mixState, . RooAbsCategory & ; tagFlav, . RooAbsReal & ; tau, . RooAbsReal & ; dm, . RooAbsReal & ; mistag, . RooAbsReal & ; delMistag, . const RooResolutionModel & ; model, . DecayType ; type = DoubleSided . ). Constructor for RooBMixDecay. ; Creates an instance of RooBMixDecay with the specified parameters.; Parameters. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBMixDecay.html:77329,inherit,inherited,77329,doc/master/classRooBMixDecay.html,https://root.cern,https://root.cern/doc/master/classRooBMixDecay.html,1,['inherit'],['inherited']
Modifiability,"t, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooDecay.h>. Inheritance diagram for RooDecay:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ DecayType. enum RooDecay::DecayType. EnumeratorSingleSided ; DoubleSided ; Flipped . Definition at line 25 of file RooDecay.h. Constructor & Destructor Documentation. ◆ RooDecay() [1/3]. RooDecay::RooDecay ; (; ). inline . Definition at line 28 of file RooDecay.h. ◆ RooDecay() [2/3]. RooDecay::RooDecay ; (; const char * ; name, . const char * ; title, . RooRealVar & ; t, . RooAbsReal & ; tau, . const RooResolutionModel & ; model, . DecayType ; type . ). Create a new RooDecay. ; Parameters. [in]nameName of this object. ; [in]titleTitle (for e.g. plotting) ; [in]tConvolution variable (e.g. time). ; [in]tauDecay constant. ; [in]modelResolution model for the convolution. ; [in]typeOne of the decays types SingleSided, Flipped, DoubleSided . Definition at lin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDecay.html:77674,inherit,inherited,77674,doc/master/classRooDecay.html,https://root.cern,https://root.cern/doc/master/classRooDecay.html,1,['inherit'],['inherited']
Modifiability,"t, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooExtendPdf.h>. Inheritance diagram for RooExtendPdf:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooExtendPdf() [1/4]. RooExtendPdf::RooExtendPdf ; (; ). default . ◆ RooExtendPdf() [2/4]. RooExtendPdf::RooExtendPdf ; (; const char * ; name, . const char * ; title, . RooAbsPdf & ; pdf, . RooAbsReal & ; norm, . const char * ; rangeName = nullptr . ). Definition at line 56 of file RooExtendPdf.cxx. ◆ RooExtendPdf() [3/4]. RooExtendPdf::RooExtendPdf ; (; const char * ; name, . const char * ; title, . RooAbsPdf & ; pdf, . RooAbsReal::Ref ; norm, . const char * ; rangeName = nullptr . ). Constructor. ; The ExtendPdf behaves identical to the supplied input pdf, but adds an extended likelihood term. expectedEvents() will return norm if rangeName remains empty. If rangeName is not empty, norm will refer to this range, and expectedEvents will r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooExtendPdf.html:73966,inherit,inherited,73966,doc/master/classRooExtendPdf.html,https://root.cern,https://root.cern/doc/master/classRooExtendPdf.html,1,['inherit'],['inherited']
Modifiability,"t, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooExtendedTerm.h>. Inheritance diagram for RooExtendedTerm:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooExtendedTerm() [1/3]. RooExtendedTerm::RooExtendedTerm ; (; ). default . ◆ RooExtendedTerm() [2/3]. RooExtendedTerm::RooExtendedTerm ; (; const char * ; name, . const char * ; title, . const RooAbsReal & ; n . ). Constructor. ; An ExtendedTerm has no observables, it only introduces an extended ML term with the given number of expected events when an extended ML is constructed from this p.d.f. ; Definition at line 38 of file RooExtendedTerm.cxx. ◆ RooExtendedTerm() [3/3]. RooExtendedTerm::RooExtendedTerm ; (; const RooExtendedTerm & ; other, . const char * ; name = nullptr . ). Copy constructor. ; Definition at line 49 of file RooExtendedTerm.cxx. Member Function Documentation. ◆ Class(). static TClass * RooExtendedTerm::Class ; (;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooExtendedTerm.html:73175,inherit,inherited,73175,doc/master/classRooExtendedTerm.html,https://root.cern,https://root.cern/doc/master/classRooExtendedTerm.html,1,['inherit'],['inherited']
Modifiability,"t, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooNonCPEigenDecay.h>. Inheritance diagram for RooNonCPEigenDecay:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ DecayType. enum RooNonCPEigenDecay::DecayType. EnumeratorSingleSided ; DoubleSided ; Flipped . Definition at line 37 of file RooNonCPEigenDecay.h. Constructor & Destructor Documentation. ◆ RooNonCPEigenDecay() [1/4]. RooNonCPEigenDecay::RooNonCPEigenDecay ; (; void ; ). inline . Definition at line 40 of file RooNonCPEigenDecay.h. ◆ RooNonCPEigenDecay() [2/4]. RooNonCPEigenDecay::RooNonCPEigenDecay ; (; const char * ; name, . const char * ; title, . RooRealVar & ; t, . RooAbsCategory & ; tag, . RooAbsReal & ; tau, . RooAbsReal & ; dm, . RooAbsReal & ; avgW, . RooAbsReal & ; delW, . RooAbsCategory & ; rhoQ, . RooAbsReal & ; correctQ, . RooAbsReal & ; wQ, . RooAbsReal & ; a, . RooAbsReal & ; C, . RooAbsReal & ; delC, . RooAbsReal & ; S,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNonCPEigenDecay.html:78338,inherit,inherited,78338,doc/master/classRooNonCPEigenDecay.html,https://root.cern,https://root.cern/doc/master/classRooNonCPEigenDecay.html,1,['inherit'],['inherited']
Modifiability,"t,cached_end,&cached_config);; 1622 }; 1623 // Idea: Factor out this 'if' to a UseCacheRepeat function; 1624 if (config->fNeedRepeat) {; 1625 b.SetBufferOffset(bufpos);; 1626 }; 1627 return 0;; 1628 }; 1629 ; 1630 INLINE_TEMPLATE_ARGS Int_t UseCacheVectorLoop(TBuffer &b, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *conf); 1631 {; 1632 TConfigurationUseCache *config = (TConfigurationUseCache*)conf;; 1633 ; 1634 Int_t bufpos = b.Length();; 1635 TVirtualArray *cached = b.PeekDataCache();; 1636 if (cached==0) {; 1637 TStreamerElement *aElement = config->fCompInfo->fElem;; 1638 TStreamerInfo *info = (TStreamerInfo*)config->fInfo;; 1639 Warning(""ReadBuffer"",""Skipping %s::%s because the cache is missing."",info->GetName(),aElement->GetName());; 1640 char *ptr = (char*)start;; 1641 UInt_t n = (((char*)end)-((char*)start))/((TVectorLoopConfig*)loopconf)->fIncrement;; 1642 info->ReadBufferSkip(b,&ptr,config->fCompInfo,config->fCompInfo->fType+TStreamerInfo::kSkip,aElement,n,0);; 1643 } else {; 1644 TVectorLoopConfig cached_config( nullptr, cached->fClass->Size(), /* read */ kTRUE );; 1645 void *cached_start = (*cached)[0];; 1646 void *cached_end = ((char*)cached_start) + cached->fSize * cached_config.fIncrement;; 1647 config->fAction(b,cached_start,cached_end,&cached_config);; 1648 }; 1649 // Idea: Factor out this 'if' to a UseCacheRepeat function; 1650 if (config->fNeedRepeat) {; 1651 b.SetBufferOffset(bufpos);; 1652 }; 1653 return 0;; 1654 }; 1655 ; 1656 INLINE_TEMPLATE_ARGS Int_t UseCacheGenericCollection(TBuffer &b, void *, const void *, const TLoopConfiguration *loopconfig, const TConfiguration *conf); 1657 {; 1658 TConfigurationUseCache *config = (TConfigurationUseCache*)conf;; 1659 ; 1660 Int_t bufpos = b.Length();; 1661 TVirtualArray *cached = b.PeekDataCache();; 1662 if (cached==0) {; 1663 TStreamerElement *aElement = config->fCompInfo->fElem;; 1664 TStreamerInfo *info = (TStreamerInfo*)config->fInfo;; 1665 ; 1666 TVirtualColl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:68083,config,config,68083,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,2,['config'],['config']
Modifiability,"t,pair<double,double> >ROOT::Fit::FitResult::fMinosErrorsmap contains the two Minos errors; unsigned intROOT::Fit::FitResult::fNCallsnumber of function calls; unsigned intROOT::Fit::FitResult::fNFreenumber of fit free parameters (total parameters are in size of parameter vector); TStringTNamed::fNameobject identifier; unsigned intROOT::Fit::FitResult::fNdfnumber of degree of freedom; boolROOT::Fit::FitResult::fNormalizedflag for indicating is errors are normalized; vector<string>ROOT::Fit::FitResult::fParNamesparameter names (only with FCN only fits, when fFitFunc=0); vector<pair<double,double> >ROOT::Fit::FitResult::fParamBoundsparameter bounds; vector<double>ROOT::Fit::FitResult::fParamsparameter values. Size is total number of parameters; intROOT::Fit::FitResult::fStatusminimizer status code; TStringTNamed::fTitleobject title; doubleROOT::Fit::FitResult::fValminimum function value; boolROOT::Fit::FitResult::fValidflag for indicating valid fit. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFitResult(const ROOT::Fit::FitResult& f); constructor from an IFitResult; copy the contained TF1 pointer function if it is. void Print(Option_t* option = """") const; print result of the fit, by default chi2, parameter values and errors; if option ""V"" is given print also error matrix and correlation. TMatrixDSym GetCovarianceMatrix() const; Return the covariance matrix from fit; The matrix is a symmetric matrix with a size N equal to; the total number of parameters considered in the fit including the fixed ones; The matrix row and columns corresponding to the fixed parameters will contain only zero's. TMatrixDSym GetCorrelationMatrix() const; Return the correlation matrix from fit.; The matrix is a symmetric matrix with a size N equal to; the total number of parameters considered in the fit including the fixed ones; The matrix row and columns corresponding to the fixed parameters will contain only zero's. TFitResult(int status = 0); Def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFitResult.html:11185,Inherit,Inheritance,11185,root/html602/TFitResult.html,https://root.cern,https://root.cern/root/html602/TFitResult.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t. ;  . Protected Member Functions; double evaluate () const override;  Return 1 if x is in range, zero otherwise. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TString integralNameSuffix (const RooArgSet &iset, const RooArgSet *nset=nullptr, const char *rangeName=nullptr, bool omitEmpty=false) const;  Construct string with unique suffix name to give to integral object that encodes integrated observables, normalization observables and the integration range name. ;  ; bool isValid () const override;  Check if current value is valid. ;  ; virtual bool isValidReal (double, bool printError=false) const;  Interface function to check if given value is a valid value for this object. Returns true unless overridden. ;  ; void makeProjectionSet (const RooAbsArg *plotVar, const RooArgSet *allVars, RooArgSet &projectedVars, bool silent) const;  Utility function for plotOn() that constructs the set of observables to project when plotting ourselves as function of 'plotVar'. ;  ; bool matchArgs (const RooArgSet &allDeps, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRangeBoolean.html:48640,parameteriz,parameterized,48640,doc/master/classRooRangeBoolean.html,https://root.cern,https://root.cern/doc/master/classRooRangeBoolean.html,1,['parameteriz'],['parameterized']
Modifiability,"t. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions; void initializeOwnedDataHist (std::unique_ptr< RooDataHist > &&dataHist);  . Friends; class RooAbsCachedReal;  . Additional Inherited Members;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooHistFunc.html:59579,inherit,inherited,59579,doc/master/classRooHistFunc.html,https://root.cern,https://root.cern/doc/master/classRooHistFunc.html,3,['inherit'],['inherited']
Modifiability,"t. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Private Member Functions;  TGEventHandler (const TGEventHandler &)=delete;  ; void * GetSender () override;  ; TGEventHandler & operator= (const TGEventHandler &)=delete;  . Private Attributes; Bool_t fIsActive;  kTRUE if handler is active, kFALSE if not active ;  ; TObject * fObject;  ; TGWindow * fWindow;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGEventHandler.html:14566,inherit,inherited,14566,doc/master/classTGEventHandler.html,https://root.cern,https://root.cern/doc/master/classTGEventHandler.html,1,['inherit'],['inherited']
Modifiability,"t. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClassMenuItem.html:6664,inherit,inherits,6664,doc/master/classTClassMenuItem.html,https://root.cern,https://root.cern/doc/master/classTClassMenuItem.html,1,['inherit'],['inherits']
Modifiability,"t. ;  ; virtual void SetTextAlign (Short_t align=11);  Set the text alignment. ;  ; virtual void SetTextAngle (Float_t tangle=0);  Set the text angle. ;  ; virtual void SetTextAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColor (Color_t tcolor=1);  Set the text color. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TGLAxis (const TGLAxis &)=delete;  ; TGLAxis & operator= (const TGLAxis &)=delete;  . Private Attributes; Double_t fAngle1;  ; Double_t fAngle2;  ; Double_t fAngle3;  ; Double_t fAxisLength;  ; Double_t fGridLength;  ; TString * fLabels;  ; Double_t fLabelsOffset;  ; Double_t fLabelsSize;  ; Int_t fNDiv;  ; Int_t fNDiv1;  ; Int_t fNDiv2;  ; Int_t fNDiv3;  ; Int_t fNTicks1;  ; Int_t fNTicks2;  ; TGLText * fText;  ; Double_t fTickMarksLength;  ; Int_t fTickMarksOrientation;  ; Double_t * fTicks1;  ; Double_t * fTicks2;  ; Double_t fWmax;  ; Double_t fWmin;  . Additional Inherited Members;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLAxis.html:5276,inherit,inherited,5276,doc/master/classTGLAxis.html,https://root.cern,https://root.cern/doc/master/classTGLAxis.html,2,['inherit'],['inherited']
Modifiability,"t. ;  ; void Scale (Double_t c1=1, Option_t *option="""") override;  Multiply this profile by a constant c1. ;  ; virtual void SetBinEntries (Int_t bin, Double_t w);  Set the number of entries in bin. ;  ; void SetBins (Int_t nbins, Double_t xmin, Double_t xmax) override;  Redefine x axis parameters. ;  ; void SetBins (Int_t nx, const Double_t *xbins) override;  Redefine x axis parameters. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow. ;  ; void SetBuffer (Int_t buffersize, Option_t *option="""") override;  Set the buffer size in units of 8 bytes (double). ;  ; virtual void SetErrorOption (Option_t *option="""");  Set option to compute profile errors. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TProfile. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Sumw2 (Bool_t flag=kTRUE) override;  Create/delete structure to store sum of squares of weights per bin. ;  ;  Public Member Functions inherited from TH1D;  TH1D ();  Constructor. ;  ;  TH1D (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins);  Create a 1-Dim histogram with variable bins of type double (see TH1::TH1 for explanation of parameters) ;  ;  TH1D (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins);  Create a 1-Dim histogram with variable bins of type double (see TH1::TH1 for explanation of parameters) ;  ;  TH1D (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup);  Create a 1-Dim histogram with fix bins of type double (see TH1::TH1 for explanation of parameters) ;  ;  TH1D (const TH1D &h1d);  Constructor. ;  ;  TH1D (const TVectorD &v);  Create a histogram from a TVectorD by default the histogram name is ""TVectorD"" and title = """". ;  ;  ~TH1D () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by a weight w Passin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile.html:9889,inherit,inherited,9889,doc/master/classTProfile.html,https://root.cern,https://root.cern/doc/master/classTProfile.html,1,['inherit'],['inherited']
Modifiability,"t. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TGLColorSet & GetDefaultColorSet ();  Returns reference to the default color-set. ;  ; static Bool_t IsUsingDefaultColorSetForNewViewers ();  Returns the value of the static flag that determines if new viewers should use the default color-set. ;  ; static void SetAxisLabelScale (Float_t als);  Sets static scaling facor that allows simple guide axies to have label values scaled relative to actual scene dimensions. ;  ; static void UseDefaultColorSetForNewViewers (Bool_t x);  Sets static flag that determines if new viewers should use the default color-set. ;  ;  Static Public Member Functions inherited from TVirtualViewer3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualViewer3D * Viewer3D (TVirtualPad *pad=nullptr, Option_t *type="""");  Create a Viewer 3D of specified type. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGLViewerBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGLLockable; static TClass * Class (); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLViewer.html:28024,inherit,inherited,28024,doc/master/classTGLViewer.html,https://root.cern,https://root.cern/doc/master/classTGLViewer.html,1,['inherit'],['inherited']
Modifiability,"t. ;  ; void registerProxy (RooSetProxy &proxy);  Register an RooSetProxy in the proxy list. ;  ; void setProxyNormSet (const RooArgSet *nset);  Forward a change in the cached normalization argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TF1 * _func = nullptr;  ; RooListProxy _list;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTFnPdfBinding.html:67169,inherit,inherited,67169,doc/master/classRooTFnPdfBinding.html,https://root.cern,https://root.cern/doc/master/classRooTFnPdfBinding.html,1,['inherit'],['inherited']
Modifiability,"t. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooListProxy x;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooUniform.html:67494,inherit,inherited,67494,doc/master/classRooUniform.html,https://root.cern,https://root.cern/doc/master/classRooUniform.html,1,['inherit'],['inherited']
Modifiability,"t. Double_t evaluate() const; Calculate the current value. void resetErrorCounters(Int_t resetValue = 10); Reset error counter to given value, limiting the number; of future error messages for this pdf to 'resetValue'. Bool_t checkObservables(const RooArgSet* nset) const; Check if PDF is valid for given normalization set.; Coeffient and PDF must be non-overlapping, but pdf-coefficient; pairs may overlap each other. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& numVars, const RooArgSet* normSet, const char* rangeName = 0) const. void getCompIntList(const RooArgSet* nset, const RooArgSet* iset, RooAddModel::pRooArgList& compIntList, Int_t& code, const char* isetRangeName) const; Check if this configuration was created before. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given scenario code. Double_t expectedEvents(const RooArgSet* nset) const; Return the number of expected events, which is either the sum of all coefficients; or the sum of the components extended terms. void selectNormalization(const RooArgSet* depSet = 0, Bool_t force = kFALSE); Interface function used by test statistics to freeze choice of observables; for interpretation of fraction coefficients. void selectNormalizationRange(const char* rangeName = 0, Bool_t force = kFALSE); Interface function used by test statistics to freeze choice of range; for interpretation of fraction coefficients. RooAbsGenContext* genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; Return specialized context to efficiently generate toy events from RooAddPdfs. Bool_t isDirectGenSafe(const RooAbsArg& arg) const; Direct generation is safe if all components say so. Int_t getGenerator(const RooArgSet& directVars, RooArgSet& generateVars, Bool_t staticInitOK = kTRUE) const; Return pseud-code that indicates if all components can do internal genera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAddModel.html:47067,extend,extended,47067,root/html528/RooAddModel.html,https://root.cern,https://root.cern/root/html528/RooAddModel.html,9,['extend'],['extended']
Modifiability,"t. Fill the passed array with the covariance matrix elements; if the variable is fixed or const the value is zero.; The array will be filled as cov[i *ndim + j]; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. bool GetHessianMatrix(double* h) const. Fill the passed array with the Hessian matrix elements; The Hessian matrix is the matrix of the second derivatives; and is the inverse of the covariance matrix; If the variable is fixed or const the values for that variables are zero.; The array will be filled as h[i *ndim + j]. int CovMatrixStatus() const. return the status of the covariance matrix. double Correlation(unsigned int i, unsigned int j) const. return correlation coefficient between variable i and j.; If the variable is fixed or const the return value is zero. double GlobalCC(unsigned int i) const. get global correlation coefficient for the variable i. This is a number between zero and one which gives; the correlation between the i-th variable and that linear combination of all other variables which; is most strongly correlated with i.; If the variable is fixed or const the return value is zero. bool GetMinosError(unsigned int i, double& errLow, double& errUp, int = 0). get the minos error for parameter i, return false if Minos failed; A minimizaiton must be performed befre, return false if no minimization has been done; In case of Minos failed the status error is updated as following; status += 10 * minosStatus where the minos status is:; status = 1 : maximum number of function calls exceeded when running for lower error; status = 2 : maximum number of function calls exceeded when running for upper error; status = 3 : new minimum found when running for lower error; status = 4 : new minimum found when running for upper error; status = 5 : any other failure. bool Scan(unsigned int i, unsigned int& nstep, do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ROOT__Minuit2__Minuit2Minimizer.html:9912,variab,variable,9912,root/html530/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html530/ROOT__Minuit2__Minuit2Minimizer.html,3,['variab'],['variable']
Modifiability,"t. Non-trivial splits can be performed; using an intermediate 'category function' (RooMappedCategory,; RooGenericCategory,RooThresholdCategory etc), i.e. any RooAbsCategory; derived objects that calculates its output as function of one or more; input RooRealVars and/or RooCategories.; . Such 'function categories' objects must be constructed by the user prior; to building the PDF. In the RooSimPdfBuilder::buildPdf() function these; objects can be passed in an optional RooArgSet called 'auxiliary categories':; . const RooSimultaneous* buildPdf(const RooArgSet& buildConfig, const RooAbsData* dataSet, ; const RooArgSet& auxSplitCats, Bool_t verbose=kFALSE) {; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; . Objects passed in this argset can subsequently be used in the build configuration, e.g.; . RooMappedCategory tagMap(""tagMap"",""Mapped tagging category"",tagCat,""CutBased"") ;; tagMap.map(""Lep"",""CutBased"") ;; tagMap.map(""Kao"",""CutBased"") ;; tagMap.map(""NT*"",""NeuralNet"") ; ; ...; builder.buildPdf(config,D,tagMap) ;; ^^^^^^. physModels = pdf; splitCats = tagCat runBlock; pdf = tagCat : signalRes ; tagMap : fudgeFactor ; ^^^^^^; . In the above example signalRes will be split in signalRes_Kao,signalRes_Lep,; signalRes_NT1,signalRes_NT2, while fudgeFactor will be split in fudgeFactor_CutBased; and fudgeFactor_NeuralNet.; . Category functions passed in the auxSplitCats RooArgSet can be used regularly; in the splitting configuration. They should not be listed in splitCats,; but must be able to be expressed completely in terms of the splitCats that ; are listed.; ; Multiple connected builds. Sometimes you want to build multiple PDFs for independent consecutive fits ; that share some of their parameters. For example, we have two prototype PDFs ; pdfA(x;p,q) and pdfB(x;p,r) that have a common parameter p. ; We want to build a RooSimultaneous for both pdfA and B, ; which involves a split of parameter p and we would like to build the; simultaneous pdfs simA and simB such that still share their (no",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooSimPdfBuilder.html:11680,config,config,11680,root/html526/RooSimPdfBuilder.html,https://root.cern,https://root.cern/root/html526/RooSimPdfBuilder.html,11,['config'],['config']
Modifiability,t. inline . Definition at line 103 of file TGLEventHandler.h. ◆ GetDoInternalSelection(). Bool_t TGLEventHandler::GetDoInternalSelection ; (; ); const. inline . Definition at line 100 of file TGLEventHandler.h. ◆ GetSecSelType(). Int_t TGLEventHandler::GetSecSelType ; (; ); const. inline . Definition at line 97 of file TGLEventHandler.h. ◆ GetTooltipPixelTolerance(). Int_t TGLEventHandler::GetTooltipPixelTolerance ; (; ); const. inline . Definition at line 94 of file TGLEventHandler.h. ◆ GrabMouse(). void TGLEventHandler::GrabMouse ; (; ). protectedvirtual . Acquire mouse grab. ; Definition at line 99 of file TGLEventHandler.cxx. ◆ HandleButton(). Bool_t TGLEventHandler::HandleButton ; (; Event_t * ; event). overridevirtual . Handle mouse button 'event'. ; Reimplemented from TGEventHandler.; Definition at line 435 of file TGLEventHandler.cxx. ◆ HandleConfigureNotify(). Bool_t TGLEventHandler::HandleConfigureNotify ; (; Event_t * ; event). overridevirtual . Handle configure notify 'event' - a window resize/movement. ; Reimplemented from TGEventHandler.; Definition at line 704 of file TGLEventHandler.cxx. ◆ HandleCrossing(). Bool_t TGLEventHandler::HandleCrossing ; (; Event_t * ; event). overridevirtual . Handle generic Event_t type 'event' - provided to catch focus changes and terminate any interaction in viewer. ; Reimplemented from TGEventHandler.; Definition at line 403 of file TGLEventHandler.cxx. ◆ HandleDoubleClick(). Bool_t TGLEventHandler::HandleDoubleClick ; (; Event_t * ; event). overridevirtual . Handle mouse double click 'event'. ; Reimplemented from TGEventHandler.; Definition at line 672 of file TGLEventHandler.cxx. ◆ HandleEvent(). Bool_t TGLEventHandler::HandleEvent ; (; Event_t * ; event). overridevirtual . Handle generic Event_t type 'event' - provided to catch focus changes and terminate any interaction in viewer. ; Reimplemented from TGEventHandler.; Definition at line 351 of file TGLEventHandler.cxx. ◆ HandleExpose(). Bool_t TGLEventHandler::Hand,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLEventHandler.html:22835,config,configure,22835,doc/master/classTGLEventHandler.html,https://root.cern,https://root.cern/doc/master/classTGLEventHandler.html,1,['config'],['configure']
Modifiability,"t. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 286 of file TPluginManager.h. ◆ LoadHandlerMacros(). void TPluginManager::LoadHandlerMacros ; (; const char * ; path). private . Load all plugin macros from the specified path/base directory. ; Definition at line 431 of file TPluginManager.cxx. ◆ LoadHandlersFromEnv(). void TPluginManager::LoadHandlersFromEnv ; (; TEnv * ; env). Load plugin handlers specified in config file, like: ; Plugin.TSQLServer: ^mysql: TMySQLServer MySQL ""TMySQLServer(...)""; +Plugin.TSQLServer: ^pgsql: TPgSQLServer PgSQL ""TPgSQLServer(...)""; The + allows the extension of an already defined resource (see TEnv). ; Definition at line 391 of file TPluginManager.cxx. ◆ LoadHandlersFromPluginDirs(). void TPluginManager::LoadHandlersFromPluginDirs ; (; const char * ; base = nullptr). Load plugin handlers specified via macros in a list of plugin directories. ; The $ROOTSYS/etc/plugins is the default top plugin directory specified in $ROOTSYS/etc/system.rootrc. The macros must have names like <BaseClass>/PX0_<PluginClass>.C, e.g. //TSQLServer/P20_TMySQLServer.C, to allow easy sorting and grouping. If the BaseClass is in a namespace the directory must have the name NameSpace@BaseClass as : is a reserved pathname character on some operating systems. Macros not beginning with 'P' and ending with "".C"" are ignored. If base is specified only plugin macros for that base class are loaded. The macros typically should look like: void P10_TDCacheFile(); {; gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; ""DCache"", ""TDCacheFile(const char*,Option_t*,const char*,Int_t)"");; }; In general these macros should not cause side effects, by changing global ROOT state via, e.g. gSystem calls, etc. However, in specific cases this might be useful, e.g. adding a library search path, adding a specific dependency, check on some OS or ROOT capability or downloading of the plugin. ; Definition at line 490 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPluginManager.html:18241,plugin,plugins,18241,doc/master/classTPluginManager.html,https://root.cern,https://root.cern/doc/master/classTPluginManager.html,2,['plugin'],"['plugin', 'plugins']"
Modifiability,"t. protected . This is a helper function for std::vector<PDEFoamCell*> FindCells(...) and a generalisation of PDEFoamCell* FindCell(). ; It saves in 'cells' all cells, which contain the coordinates specifies in 'txvec'. Note, that not all coordinates have to be specified in 'txvec'.; Parameters:. txvec - event vector in foam coordinates [0,1]. The key is the dimension and the value is the event coordinate. Note, that not all coordinates have to be specified.; cell - cell to start searching with (usually root cell fCells[0]); cells - list of cells that were found . Definition at line 1117 of file PDEFoam.cxx. ◆ FindCells() [3/3]. std::vector< TMVA::PDEFoamCell * > TMVA::PDEFoam::FindCells ; (; const std::vector< Float_t > & ; txvec); const. protected . Find all cells, that contain txvec. ; This function can be used, when the dimension of the foam is greater than the dimension of txvec. E.g. this is the case for multi-target regression.; Parameters:. txvec - event vector of variables, transformed into foam coordinates [0,1]. The size of txvec can be smaller than the dimension of the foam. Return value:. vector of cells, that fit txvec . Definition at line 1164 of file PDEFoam.cxx. ◆ GetCellElement(). Double_t TMVA::PDEFoam::GetCellElement ; (; const PDEFoamCell * ; cell, . UInt_t ; i . ); const. protected . Returns cell element i of cell 'cell'. ; If the cell has no elements or the index 'i' is out of range, than 0 is returned. ; Definition at line 1415 of file PDEFoam.cxx. ◆ GetCellValue() [1/3]. Float_t TMVA::PDEFoam::GetCellValue ; (; const PDEFoamCell * ; cell, . ECellValue ; cv . ). virtual . Returns the cell value of 'cell' corresponding to the given option 'cv'. ; This function should be overridden by the subclass in order to specify which cell elements to return for a given cell value 'cv'. By default kValue returns cell element 0, and kValueError returns cell element 1. ; Reimplemented in TMVA::PDEFoamMultiTarget, and TMVA::PDEFoamTarget.; Definition at line ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoam.html:27646,variab,variables,27646,doc/master/classTMVA_1_1PDEFoam.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoam.html,1,['variab'],['variables']
Modifiability,"t. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; Bool_tExtractBlobValues(); const char*GetClassFieldName(Int_t n); Int_tGetNumClassFields(); voidTObject::MakeZombie(); Bool_tShiftBlobRow(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSQLResult*fBlobData!; const char*fBlobPrefixName! name prefix in current blob row; TSQLRow*fBlobRow!; TSQLStatement*fBlobStmt!; const char*fBlobTypeName! name type (without prefix) in current blob row; TSQLResult*fClassData!; TSQLRow*fClassRow!; Bool_tfCurrentBlob!; TSQLClassInfo*fInfo!; Int_tfLocatedColumn!; const char*fLocatedField!; const char*fLocatedValue!; Long64_tfObjId!; Bool_tfOwner!; TObjArray*fUnpack! . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSQLObjectData(); default contrsuctor. TSQLObjectData(TSQLClassInfo* sqlinfo, Long64_t objid, TSQLResult* classdata, TSQLRow* classrow, TSQLResult* blobdata, TSQLStatement* blobstmt); normal contrsuctor,. ~TSQLObjectData(); destructor of TSQLObjectData object. Int_t GetNumClassFields(); return number of columns in class table result. const char* GetClassFieldName(Int_t n); get name of class table column. Bool_t LocateColumn(const char* colname, Bool_t isblob = kFALSE); locate column of that name in results. Bool_t ShiftBlobRow(); shift cursor to next blob value. Bool_t ExtractBlobValues(); extract from curent blob row value and names identifiers. void AddUnpack(const char* tname, const char* value); add emulated data; this used to place version or TObject raw data, read from normal tables. void AddUnpackInt(const char* tname, Int_t value); emulate integer value in raw data. void ShiftToNextValue(); shift to next column or next row in b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSQLObjectData.html:6639,Inherit,Inheritance,6639,root/html532/TSQLObjectData.html,https://root.cern,https://root.cern/root/html532/TSQLObjectData.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t.; . Function Members (Methods); public:. virtual~RooDataHistSliceIter(); static TClass*Class(); virtual const TCollection*GetCollection() const; virtual Option_t*TIterator::GetOption() const; virtual TClass*IsA() const; virtual TObject*Next(); virtual booloperator!=(const TIterator& aIter) const; TObject*TIterator::operator()(); virtual TObject*operator*() const; RooDataHistSliceIter&operator=(const RooDataHistSliceIter&); Bool_tTIterator::operator==(const TIterator& other) const; virtual voidReset(); RooDataHistSliceIter(const RooDataHistSliceIter& other); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). protected:. virtual TIterator&operator=(const TIterator&); RooDataHistSliceIter(RooDataHist& hist, RooAbsArg& sliceArg). Data Members; protected:. Int_t_baseIndex; Int_t_curStep; RooDataHist*_hist; Int_t_nStep; RooAbsArg*_sliceArg; Int_t_stepSize. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooDataHistSliceIter(RooDataHist& hist, RooAbsArg& sliceArg); Construct an iterator over all bins of RooDataHist 'hist' in the slice defined; by the values of the arguments in 'sliceArg'. RooDataHistSliceIter(const RooDataHistSliceIter& other); Copy constructor. ~RooDataHistSliceIter(); Destructor. const TCollection* GetCollection() const; Dummy. TObject* Next(); Iterator increment operator. void Reset(); Reset iterator position to beginning. TObject * operator*() const; Iterator dereference operator, not functional for this iterator. bool operator!=(const TIterator& aIter) const; Returns true if position of this iterator differs from position; of iterator 'aIter'. TIterator& operator=(const TIterator& ); Prohibit iterator assignment. » Last changed: Tue Jun 2 15:30:17 2015 » Last generated: 2015-06-02 15:30; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooDataHistSliceIter.html:1442,Inherit,Inheritance,1442,root/html604/RooDataHistSliceIter.html,https://root.cern,https://root.cern/root/html604/RooDataHistSliceIter.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t.; . Function Members (Methods); public:. virtual~RooDataHistSliceIter(); static TClass*Class(); virtual const TCollection*GetCollection() const; virtual Option_t*TIterator::GetOption() const; virtual TClass*IsA() const; virtual TObject*Next(); virtual booloperator!=(const TIterator& aIter) const; TObject*TIterator::operator()(); virtual TObject*operator*() const; RooDataHistSliceIter&operator=(const RooDataHistSliceIter&); Bool_tTIterator::operator==(const TIterator& other) const; virtual voidReset(); RooDataHistSliceIter(const RooDataHistSliceIter& other); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). protected:. virtual TIterator&operator=(const TIterator&); RooDataHistSliceIter(RooDataHist& hist, RooAbsArg& sliceArg). Data Members; protected:. Int_t_baseIndex; Int_t_curStep; RooDataHist*_hist; Int_t_nStep; RooAbsArg*_sliceArg; Int_t_stepSize. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooDataHistSliceIter(RooDataHist& hist, RooAbsArg& sliceArg); Construct an iterator over all bins of RooDataHist 'hist' in the slice defined; by the values of the arguments in 'sliceArg'. RooDataHistSliceIter(const RooDataHistSliceIter& other); Copy constructor. ~RooDataHistSliceIter(); Destructor. const TCollection* GetCollection() const; Dummy. TObject* Next(); Iterator increment operator. void Reset(); Reset iterator position to beginning. TObject * operator*() const; Iterator dereference operator, not functional for this iterator. bool operator!=(const TIterator& aIter) const; Returns true if position of this iterator differs from position; of iterator 'aIter'. TIterator& operator=(const TIterator& ); Prohibit iterator assignment. » Last changed: Tue Jun 30 14:32:27 2015 » Last generated: 2015-06-30 14:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooDataHistSliceIter.html:1442,Inherit,Inheritance,1442,root/html602/RooDataHistSliceIter.html,https://root.cern,https://root.cern/root/html602/RooDataHistSliceIter.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveElementObjectPtr(TObject* obj, Bool_t own = kTRUE); Constructor. TEveElementObjectPtr(TObject* obj, Color_t& mainColor, Bool_t own = kTRUE); Constructor. TEveElementObjectPtr(const TEveElementObjectPtr& e); Copy constructor.; If object pointed to is owned it is cloned.; It is assumed that the main-color has its origin in the TObject pointed to so; it is fixed here accordingly. TEveElementObjectPtr* CloneElement() const; Clone the element via copy constructor.; Virtual from TEveElement. TObject* GetObject(const TEveException& eh = ""TEveElementObjectPtr::GetObject "") const; Return external object.; Virtual from TEveElement. void ExportToCINT(char* var_name); Export external object to CINT with variable name var_name.; Virtual from TEveElement. ~TEveElementObjectPtr(); Destructor. TEveElement& operator=(const TEveElementObjectPtr& ). Bool_t GetOwnObject() const; { return fOwnObject; }. void SetOwnObject(Bool_t o); { fOwnObject = o; }. » Last changed: root/eve:$Id$ » Last generated: 2015-06-02 15:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TEveElementObjectPtr.html:19990,variab,variable,19990,root/html604/TEveElementObjectPtr.html,https://root.cern,https://root.cern/root/html604/TEveElementObjectPtr.html,2,['variab'],['variable']
Modifiability,"t.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveElementObjectPtr(TObject* obj, Bool_t own = kTRUE); Constructor. TEveElementObjectPtr(TObject* obj, Color_t& mainColor, Bool_t own = kTRUE); Constructor. TEveElementObjectPtr(const TEveElementObjectPtr& e); Copy constructor.; If object pointed to is owned it is cloned.; It is assumed that the main-color has its origin in the TObject pointed to so; it is fixed here accordingly. TEveElementObjectPtr* CloneElement() const; Clone the element via copy constructor.; Virtual from TEveElement. TObject* GetObject(const TEveException& eh = ""TEveElementObjectPtr::GetObject "") const; Return external object.; Virtual from TEveElement. void ExportToCINT(char* var_name); Export external object to CINT with variable name var_name.; Virtual from TEveElement. ~TEveElementObjectPtr(); Destructor. TEveElement& operator=(const TEveElementObjectPtr& ). Bool_t GetOwnObject() const; { return fOwnObject; }. void SetOwnObject(Bool_t o); { fOwnObject = o; }. » Last changed: root/eve:$Id$ » Last generated: 2015-06-30 14:44; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveElementObjectPtr.html:19990,variab,variable,19990,root/html602/TEveElementObjectPtr.html,https://root.cern,https://root.cern/root/html602/TEveElementObjectPtr.html,2,['variab'],['variable']
Modifiability,"t.Definition TCollection.h:186; TCollection::SetCurrentCollectionvoid SetCurrentCollection()Set this collection to be the globally accessible collection.Definition TCollection.cxx:688; TCollection::GetCurrentCollectionstatic TCollection * GetCurrentCollection()Return the globally accessible collection.Definition TCollection.cxx:680; TCollection::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRemove object from this collection and recursively remove the object from all other objects (and coll...Definition TCollection.cxx:574; TCollection::CapacityInt_t Capacity() constDefinition TCollection.h:167; TCollection::RemoveAllvoid RemoveAll()Definition TCollection.h:204; TCollection::UseRWLockvirtual bool UseRWLock(Bool_t enable=true)Set this collection to use a RW lock upon access, making it thread safe.Definition TCollection.cxx:761; TCollection::fgEmptyingGarbagestatic Bool_t fgEmptyingGarbageDefinition TCollection.h:136; TCollection::AssertClassBool_t AssertClass(TClass *cl) constMake sure all objects in this collection inherit from class cl.Definition TCollection.cxx:223; TCollection::fgGarbageStackstatic Int_t fgGarbageStackDefinition TCollection.h:137; TCollection::endTIter end() constDefinition TCollection.h:293; TCollection::lsvoid ls(Option_t *option="""") const overrideList (ls) all objects in this collection.Definition TCollection.cxx:382; TCollection::GrowByvirtual Int_t GrowBy(Int_t delta) constIncrease the collection's capacity by delta slots.Definition TCollection.cxx:360; TCollection::SetNamevoid SetName(const char *name)Definition TCollection.h:206; TCollection::beginTIter begin() constDefinition TCollection.h:292; TCollection::EStatusBitsEStatusBitsDefinition TCollection.h:143; TCollection::kUseRWLock@ kUseRWLockDefinition TCollection.h:146; TCollection::kIsOwner@ kIsOwnerDefinition TCollection.h:144; TCollection::AddAllvirtual void AddAll(const TCollection *col)Add all objects from collection col to this collection.Definition TCollection.cxx:195",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCollection_8h_source.html:19054,inherit,inherit,19054,doc/master/TCollection_8h_source.html,https://root.cern,https://root.cern/doc/master/TCollection_8h_source.html,1,['inherit'],['inherit']
Modifiability,"t.Logoff: rootlogoff.C; Record ROOT session commands in a given history file (default is $(HOME)/.root_hist). If set to “-”, it turn off the command recording.; Rint.History: $(HOME)/.root_hist; Next two lines set the history file size handling. Once HistSize is reached, the last HistSave entries are removed. If HistSize is set to 0, it turns off command recording. Both values can be overridden by environment variable ROOT_HIST=size[:save], where the “:save” part is optional.; Rint.HistSize: 500; Rint.HistSave: 400; 28.6.6 ACLiC Specific Settings; ACLiC.Linkdef specifies the suffix that will be added to the script name to try to locate a custom linkdef file when generating the dictionary.; ACLiC.Linkdef: _linkdef; The top directory for storing the libraries produced by ACLiC is set by:; ACLiC.BuildDir: /where/I/would/like/my/compiled/scripts; The additional include directives for ACLiC compilations are set by:; ACLiC.IncludePaths: -I/where/the/includes/are; 28.6.7 PROOF Related Variables; PROOF debug options.; Proof.DebugLevel: 0; Proof.DebugMask:-1; PROOF GDB hooks allows a debugger to be attached early in the startup phase of proofserv:0 - don’t wait; 1 - master proofserv enters wait loop; 2 - slave proofserv enters wait loop; 3 - any proofserv enters wait loop; Proof.GdbHook: 0; On the master to enable the parallel startup of workers using threads set next to “yes” (default is “no”):; Proof.ParallelStartup: no; Proof.StatsHist: no; Proof.StatsTrace: no; Proof.SlaveStatsTrace: no; Proof.CondorHome: /opt/condor; Proof.CondorConfig: /opt/condor/etc/condor_config; PEAC.GmUrl: http://somewhere:8080/clarens/; PEAC.LmUrl: http://elsewhere:8080/clarens/; 28.6.7.1 Server Authentication in TServerSocket; General setting: file with server access rules; SrvAuth.DaemonRc: /etc/root/system.daemonrc; Check of host equivalence via /etc/hosts.equiv or $HOME/.rhosts.; SrvAuth.CheckHostsEquivalence: 1; Force file opening via TNetFile (TNetXNGFile) if a hostname is specified in the U",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1263449,Variab,Variables,1263449,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['Variab'],['Variables']
Modifiability,t.cxx;  ► sapdb;  ► inc;  LinkDef.h;  TSapDBResult.h;  TSapDBRow.h;  TSapDBServer.h;  ► src;  TSapDBResult.cxx;  TSapDBRow.cxx;  TSapDBServer.cxx;  ► sqlite;  ► inc;  LinkDef.h;  TSQLiteResult.h;  TSQLiteRow.h;  TSQLiteServer.h;  TSQLiteStatement.h;  ► src;  TSQLiteResult.cxx;  TSQLiteRow.cxx;  TSQLiteServer.cxx;  TSQLiteStatement.cxx;  ► tmva;  ► pymva;  ► inc;  ► TMVA;  MethodPyAdaBoost.h;  MethodPyGTB.h;  MethodPyRandomForest.h;  PyMethodBase.h;  LinkDef.h;  ► src;  MethodPyAdaBoost.cxx;  MethodPyGTB.cxx;  MethodPyRandomForest.cxx;  PyMethodBase.cxx;  ► test;  Classification.C;  ► rmva;  ► inc;  ► TMVA;  MethodC50.h;  MethodRSNNS.h;  MethodRSVM.h;  MethodRXGB.h;  RMethodBase.h;  LinkDef.h;  ► src;  MethodC50.cxx;  MethodRSNNS.cxx;  MethodRSVM.cxx;  MethodRXGB.cxx;  RMethodBase.cxx;  ► test;  Classification.C;  ► tmva;  ► inc;  ► TMVA;  BDTEventWrapper.h;  BinarySearchTree.h;  BinarySearchTreeNode.h;  BinaryTree.h;  CCPruner.h;  CCTreeWrapper.h;  ClassifierFactory.h;  ClassInfo.h;  Config.h;  Configurable.h;  ConvergenceTest.h;  CostComplexityPruneTool.h;  CrossEntropy.h;  DataInputHandler.h;  DataSet.h;  DataSetFactory.h;  DataSetInfo.h;  DataSetManager.h;  DecisionTree.h;  DecisionTreeNode.h;  Event.h;  ExpectedErrorPruneTool.h;  Factory.h;  FitterBase.h;  GeneticAlgorithm.h;  GeneticFitter.h;  GeneticGenes.h;  GeneticPopulation.h;  GeneticRange.h;  GiniIndex.h;  GiniIndexWithLaplace.h;  IFitterTarget.h;  IMethod.h;  Interval.h;  IPruneTool.h;  KDEKernel.h;  LDA.h;  LogInterval.h;  MCFitter.h;  MethodANNBase.h;  MethodBase.h;  MethodBayesClassifier.h;  MethodBDT.h;  MethodBoost.h;  MethodCategory.h;  MethodCFMlpANN.h;  MethodCFMlpANN_def.h;  MethodCFMlpANN_Utils.h;  MethodCompositeBase.h;  MethodCuts.h;  MethodDT.h;  MethodFDA.h;  MethodFisher.h;  MethodHMatrix.h;  MethodKNN.h;  MethodLD.h;  MethodLikelihood.h;  MethodMLP.h;  MethodPDEFoam.h;  MethodPDERS.h;  MethodRuleFit.h;  MethodSVM.h;  MethodTMlpANN.h;  MinuitFitter.h;  MinuitWrapper.h;  MisClassificationErr,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/files.html:88948,Config,Config,88948,root/html606/files.html,https://root.cern,https://root.cern/root/html606/files.html,1,['Config'],['Config']
Modifiability,"t.h:22; RooFormulaVarA RooFormulaVar is a generic implementation of a real-valued object, which takes a RooArgList of serv...Definition RooFormulaVar.h:30; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; Note that x[i] is an expression reserved for TFormula. All variable references are automatically converted to the TFormula-native format. If a variable with the name x is given, the RooFormula interprets x[i] as a list position, but x without brackets as the name of a RooFit object.; The last two versions, while slightly less readable, are more versatile because the names of the arguments are not hard coded. ; Definition at line 25 of file RooGenericPdf.h. Public Member Functions;  RooGenericPdf ();  ;  RooGenericPdf (const char *name, const char *title, const char *formula, const RooArgList &dependents);  Constructor with a name, title, formula expression and a list of variables. ;  ;  RooGenericPdf (const char *name, const char *title, const RooArgList &dependents);  Constructor with formula expression and list of input variables. ;  ;  RooGenericPdf (const RooGenericPdf &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooGenericPdf () override;  ; TObject * clone (const char *newname) const override;  ; const RooArgList & dependents () const;  ; void dumpFormula ();  ; const char * expression () const;  ; RooAbsArg * getParameter (const char *name) const;  Return pointer to parameter with given name. ;  ; RooAbsArg * getParameter (Int_t index) const;  Return pointer to parameter at given index. ;  ; TClass * IsA () const override;  ; size_t nParameters () const;  Return the number of parameters. ;  ; void printMetaArgs (std::ostream &os) const override;  Add formula expression as meta argument in printing interface. ;  ; void printMultiline (std::ostream &os, Int_t content, bool verbose=false, TString indent="""") const override;  Print info about this object to the specified stream. ;  ; bool readFromStream (std::istream &i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGenericPdf.html:2273,variab,variables,2273,doc/master/classRooGenericPdf.html,https://root.cern,https://root.cern/doc/master/classRooGenericPdf.html,1,['variab'],['variables']
Modifiability,"t/path/to/my/file. The 'as3' scheme is accepted for backwards compatibility but its usage is; deprecated. The recommended way to create an instance of this class is through; TFile::Open, for instance:. TFile* f1 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file""); TFile* f2 = TFile::Open(""gs://storage.googleapis.com/bucket/path/to/my/file""). The specified scheme (i.e. s3, s3http, s3https, ...) determines the underlying; transport protocol to use for downloading the file contents, namely HTTP or HTTPS.; The 's3', 's3https', 'gs' and 'gshttps' schemes imply using HTTPS as the transport; protocol. The 's3http', 'as3' and 'gshttp' schemes imply using HTTP as the transport; protocol. The 'options' argument can contain 'NOPROXY' if you want to bypass; the HTTP proxy when retrieving this file's contents. As for any TWebFile-derived; object, the URL of the web proxy can be specified by setting an environmental; variable 'http_proxy'. If this variable is set, we ask that proxy to route our; requests HTTP(S) requests to the file server. In addition, you can also use the 'options' argument to provide the access key; and secret key to be used for authentication purposes for this file by using a; string of the form ""AUTH=myAccessKey:mySecretkey"". This may be useful to; open several files hosted by different providers in the same program/macro,; where the environemntal variables solution is not convenient (see below). If you need to specify both NOPROXY and AUTH separate them by ' '; (blank), for instance:; ""NOPROXY AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+"". Examples:; TFile* f1 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file"",; ""NOPROXY AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+"");; TFile* f2 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file"",; ""AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+"");. If there is no authentication information in the 'options' argument; (i.e. not AUTH=""",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TS3WebFile.html:28029,variab,variable,28029,root/html534/TS3WebFile.html,https://root.cern,https://root.cern/root/html534/TS3WebFile.html,6,['variab'],['variable']
Modifiability,"t2::MinuitParameter&Parameter(unsigned int i) const; const ROOT::Minuit2::MnUserParameters&Parameters() const; vector<double>Params() const; const ROOT::Minuit2::MnMachinePrecision&Precision() const; voidRelease(unsigned int); voidRelease(const char*); voidRemoveLimits(unsigned int); voidRemoveLimits(const char*); voidSetError(unsigned int, double); voidSetError(const char*, double); voidSetLimits(unsigned int, double, double); voidSetLimits(const char*, double, double); voidSetPrecision(double); voidSetValue(unsigned int, double); voidSetValue(const char*, double); const ROOT::Minuit2::MnUserParameterState&State() const; const ROOT::Minuit2::MnStrategy&Strategy() const; doubleValue(unsigned int) const; doubleValue(const char*) const; unsigned intVariableParameters() const. Data Members; protected:. const ROOT::Minuit2::FCNBase&fFCN; unsigned intfNumCall; ROOT::Minuit2::MnUserParameterStatefState; ROOT::Minuit2::MnStrategyfStrategy; boolfUseGrad. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MnApplication(const FCNBase& fcn, const MnUserParameterState& state, const MnStrategy& stra, unsigned int nfcn = 0); constructor from non-gradient functions. MnApplication(const FCNGradientBase& fcn, const MnUserParameterState& state, const MnStrategy& stra, unsigned int nfcn = 0); constructor from gradient function. virtual ~MnApplication(); { }. FunctionMinimum operator()(unsigned int maxfcn = 0, double tolerance = 0.10000000000000001). Minimize the function; @param maxfcn : max number of function calls (if = 0) default is used which is set to; 200 + 100 * npar + 5 * npar**2; @param tolerance : value used for terminating iteration procedure.; For example, MIGRAD will stop iterating when edm (expected distance from minimum) will be:; edm < tolerance * 10**-3; Default value of tolerance used is 0.1. const FCNBase& Fcnbase() const; {return fFCN;}. unsigned int NumOfCalls() const; {return fNumCall;}. const std::vector<ROOT::Minuit2::Minu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Minuit2__MnApplication.html:3163,Inherit,Inheritance,3163,root/html602/ROOT__Minuit2__MnApplication.html,https://root.cern,https://root.cern/root/html602/ROOT__Minuit2__MnApplication.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t2::MinuitParameter&Parameter(unsigned int i) const; const ROOT::Minuit2::MnUserParameters&Parameters() const; vector<double>Params() const; const ROOT::Minuit2::MnMachinePrecision&Precision() const; voidRelease(unsigned int); voidRelease(const char*); voidRemoveLimits(unsigned int); voidRemoveLimits(const char*); voidSetError(unsigned int, double); voidSetError(const char*, double); voidSetLimits(unsigned int, double, double); voidSetLimits(const char*, double, double); voidSetPrecision(double); voidSetValue(unsigned int, double); voidSetValue(const char*, double); const ROOT::Minuit2::MnUserParameterState&State() const; const ROOT::Minuit2::MnStrategy&Strategy() const; doubleValue(unsigned int) const; doubleValue(const char*) const; unsigned intVariableParameters() const. Data Members; protected:. const ROOT::Minuit2::FCNBase&fFCN; unsigned intfNumCall; ROOT::Minuit2::MnUserParameterStatefState; ROOT::Minuit2::MnStrategyfStrategy; boolfUseGrad. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~MnApplication(); { }. FunctionMinimum operator()(unsigned int maxfcn = 0, double tolerance = 0.1). Minimize the function; @param maxfcn : max number of function calls (if = 0) default is used which is set to; 200 + 100 * npar + 5 * npar**2; @param tolerance : value used for terminating iteration procedure.; For example, MIGRAD will stop iterating when edm (expected distance from minimum) will be:; edm < tolerance * 10**-3; Default value of tolerance used is 0.1. const FCNBase& Fcnbase() const; {return fFCN;}. unsigned int NumOfCalls() const; {return fNumCall;}. const std::vector<ROOT::Minuit2::MinuitParameter>& MinuitParameters() const; facade: forward interface of MnUserParameters and MnUserTransformation; via MnUserParameterState; access to parameters (row-wise). std::vector<double> Params() const; access to parameters and errors in column-wise representation. std::vector<double> Errors() const. void Add(const char* Name, do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Minuit2__MnApplication.html:2602,Inherit,Inheritance,2602,root/html532/ROOT__Minuit2__MnApplication.html,https://root.cern,https://root.cern/root/html532/ROOT__Minuit2__MnApplication.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnUserCovariance&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnUserCovariance&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::MnFcn&, const ROOT::Minuit2::GradientCalculator&, const ROOT::Minuit2::MinimumSeed&, const ROOT::Minuit2::MnStrategy&, unsigned int, double) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const vector<double>&, unsigned int, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const vector<double>&, unsigned int, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.1) const; ROOT::Minuit2::CombinedMinimizer&operator=(const ROOT::Minuit2::CombinedMinimizer&); virtual const ROOT::Minuit2::MinimumSeedGenerator&SeedGenerator() const. Data Members; private:. ROOT::Minuit2::CombinedMinimumBuilderfMinBuilder; ROOT::Minuit2::MnSeedGeneratorfMinSeedGen. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CombinedMinimizer(); {}. ~CombinedMinimizer(); {}. » Last changed: root/minuit2:$Id: CombinedMinimizer.h 21530 2007-12-20 11:14:35Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Minuit2__CombinedMinimizer.html:3944,Inherit,Inheritance,3944,root/html532/ROOT__Minuit2__CombinedMinimizer.html,https://root.cern,https://root.cern/root/html532/ROOT__Minuit2__CombinedMinimizer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t64_t)get_random() << 31);; 20423 ; 20424#if defined(USE_LUA) && defined(USE_WEBSOCKET); 20425 new_dom->shared_lua_websockets = NULL;; 20426#endif; 20427 ; 20428#if !defined(NO_SSL) && !defined(USE_MBEDTLS); 20429 if (!init_ssl_ctx(ctx, new_dom)) {; 20430 /* Init SSL failed */; 20431 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20432 mg_snprintf(NULL,; 20433 NULL, /* No truncation check for error buffers */; 20434 error->text,; 20435 error->text_buffer_size,; 20436 ""%s"",; 20437 ""Initializing SSL context failed"");; 20438 }; 20439 mg_free(new_dom);; 20440 return -3;; 20441 }; 20442#endif; 20443 ; 20444 /* Add element to linked list. */; 20445 mg_lock_context(ctx);; 20446 ; 20447 idx = 0;; 20448 dom = &(ctx->dd);; 20449 for (;;) {; 20450 if (!mg_strcasecmp(new_dom->config[AUTHENTICATION_DOMAIN],; 20451 dom->config[AUTHENTICATION_DOMAIN])) {; 20452 /* Domain collision */; 20453 mg_cry_ctx_internal(ctx,; 20454 ""domain %s already in use"",; 20455 new_dom->config[AUTHENTICATION_DOMAIN]);; 20456 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20457 mg_snprintf(NULL,; 20458 NULL, /* No truncation check for error buffers */; 20459 error->text,; 20460 error->text_buffer_size,; 20461 ""Domain %s specified by %s is already in use"",; 20462 new_dom->config[AUTHENTICATION_DOMAIN],; 20463 config_options[AUTHENTICATION_DOMAIN].name);; 20464 }; 20465 mg_free(new_dom);; 20466 mg_unlock_context(ctx);; 20467 return -5;; 20468 }; 20469 ; 20470 /* Count number of domains */; 20471 idx++;; 20472 ; 20473 if (dom->next == NULL) {; 20474 dom->next = new_dom;; 20475 break;; 20476 }; 20477 dom = dom->next;; 20478 }; 20479 ; 20480 mg_unlock_context(ctx);; 20481 ; 20482 /* Return domain number */; 20483 return idx;; 20484}; 20485 ; 20486 ; 20487int; 20488mg_start_domain(struct mg_context *ctx, const char **options); 20489{; 20490 return mg_start_domain2(ctx, options, NULL);; 20491}; 20492 ; 20493 ; 20494/* Feature check API function */; 20495unsigned; 20496mg_check_feature(unsig",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:611575,config,config,611575,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,4,['config'],['config']
Modifiability,"t64_t)get_random() << 31);; 20424 ; 20425#if defined(USE_LUA) && defined(USE_WEBSOCKET); 20426 new_dom->shared_lua_websockets = NULL;; 20427#endif; 20428 ; 20429#if !defined(NO_SSL) && !defined(USE_MBEDTLS); 20430 if (!init_ssl_ctx(ctx, new_dom)) {; 20431 /* Init SSL failed */; 20432 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20433 mg_snprintf(NULL,; 20434 NULL, /* No truncation check for error buffers */; 20435 error->text,; 20436 error->text_buffer_size,; 20437 ""%s"",; 20438 ""Initializing SSL context failed"");; 20439 }; 20440 mg_free(new_dom);; 20441 return -3;; 20442 }; 20443#endif; 20444 ; 20445 /* Add element to linked list. */; 20446 mg_lock_context(ctx);; 20447 ; 20448 idx = 0;; 20449 dom = &(ctx->dd);; 20450 for (;;) {; 20451 if (!mg_strcasecmp(new_dom->config[AUTHENTICATION_DOMAIN],; 20452 dom->config[AUTHENTICATION_DOMAIN])) {; 20453 /* Domain collision */; 20454 mg_cry_ctx_internal(ctx,; 20455 ""domain %s already in use"",; 20456 new_dom->config[AUTHENTICATION_DOMAIN]);; 20457 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20458 mg_snprintf(NULL,; 20459 NULL, /* No truncation check for error buffers */; 20460 error->text,; 20461 error->text_buffer_size,; 20462 ""Domain %s specified by %s is already in use"",; 20463 new_dom->config[AUTHENTICATION_DOMAIN],; 20464 config_options[AUTHENTICATION_DOMAIN].name);; 20465 }; 20466 mg_free(new_dom);; 20467 mg_unlock_context(ctx);; 20468 return -5;; 20469 }; 20470 ; 20471 /* Count number of domains */; 20472 idx++;; 20473 ; 20474 if (dom->next == NULL) {; 20475 dom->next = new_dom;; 20476 break;; 20477 }; 20478 dom = dom->next;; 20479 }; 20480 ; 20481 mg_unlock_context(ctx);; 20482 ; 20483 /* Return domain number */; 20484 return idx;; 20485}; 20486 ; 20487 ; 20488int; 20489mg_start_domain(struct mg_context *ctx, const char **options); 20490{; 20491 return mg_start_domain2(ctx, options, NULL);; 20492}; 20493 ; 20494 ; 20495/* Feature check API function */; 20496unsigned; 20497mg_check_feature(unsig",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:611608,config,config,611608,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,4,['config'],['config']
Modifiability,"t::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTSQLResult::fRowCountnumber of rows in result. private:. Int_tfColumnCountnumber of columns in result; TString*fFields[fColumnCount] array containing field strings; Int_tfNextRowrow iterator; TObjArray*fResultquery result (TTreeRow objects). Class Charts. Inheritance Chart:. TObject. ←; TSQLResult. ←; TTreeResult. Function documentation; TTreeResult(); Create a query result object. TTreeResult(Int_t nfields); Create a query result object. ~TTreeResult(); Cleanup result object. void Close(Option_t* option = """"); Close query result. Bool_t IsValid(Int_t field); Check if result set is open and field index within range. Int_t GetFieldCount(); Get number of fields in result. const char * GetFieldName(Int_t field); Get name of specified field. TSQLRow * Next(); Get next query result row. The returned object must be; deleted by the user and becomes invalid when the result set is; closed or deleted. void AddField(Int_t field, const char* fieldname); Add field name to result set. This is an internal method that is not; exported via the abstract interface and that should not be user called. void AddRow(TSQLRow* row); Adopt a row to result set. This is an internal method that is not; exported via the abstract interface and that should not be user called. T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeResult.html:6416,Inherit,Inheritance,6416,root/html602/TTreeResult.html,https://root.cern,https://root.cern/root/html602/TTreeResult.html,2,['Inherit'],['Inheritance']
Modifiability,"t::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TNDArrayT<unsigned short>fArraybin content; TObjArrayTHnBase::fAxesaxes of the histogram; TObjArrayTHnBase::fBrowsables! browser-helpers for each axis; Int_t*THn::fCoordBuf! Temporary buffer; Double_tTHnBase::fEntriesnumber of entries, spread over chunks; Double_t*THnBase::fIntegral! array with bin weight sums; enum(anonymous)THnBase::fIntegralStatus! status of integral; TStringTNamed::fNameobject identifier; Int_tTHnBase::fNdimensionsnumber of dimensions; TNDArrayT<Double_t>THn::fSumw2bin error, lazy allocation happens in TNDArrayT; TStringTNamed::fTitleobject title; Double_tTHnBase::fTsumwtotal sum of weights; Double_tTHnBase::fTsumw2total sum of weights squared; -1 if no errors are calculated; TArrayDTHnBase::fTsumwxtotal sum of weight*X for each dimension; TArrayDTHnBase::fTsumwx2total sum of weight*X*X for each dimension; static THnBase::(anonymous)THnBase::kInvalidInt; static THnBase::(anonymous)THnBase::kNoInt; static THnBase::(anonymous)THnBase::kValidInt. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THn& operator=(const THn&). GetArray(); Increment the bin content of ""bin"" by ""w"",; return the bin index. return GetArray(). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-30 15:12; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THnT_unsigned_short_.html:12308,Inherit,Inheritance,12308,root/html602/THnT_unsigned_short_.html,https://root.cern,https://root.cern/root/html602/THnT_unsigned_short_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TNDArrayT<unsigned short>fArraybin content; TObjArrayTHnBase::fAxesaxes of the histogram; TObjArrayTHnBase::fBrowsables! browser-helpers for each axis; Int_t*THn::fCoordBuf! Temporary buffer; Double_tTHnBase::fEntriesnumber of entries, spread over chunks; Double_t*THnBase::fIntegral! array with bin weight sums; enum(anonymous)THnBase::fIntegralStatus! status of integral; TStringTNamed::fNameobject identifier; Int_tTHnBase::fNdimensionsnumber of dimensions; TNDArrayT<Double_t>THn::fSumw2bin error, lazy allocation happens in TNDArrayT; TStringTNamed::fTitleobject title; Double_tTHnBase::fTsumwtotal sum of weights; Double_tTHnBase::fTsumw2total sum of weights squared; -1 if no errors are calculated; TArrayDTHnBase::fTsumwxtotal sum of weight*X for each dimension; TArrayDTHnBase::fTsumwx2total sum of weight*X*X for each dimension; static THnBase::(anonymous)THnBase::kInvalidInt; static THnBase::(anonymous)THnBase::kNoInt; static THnBase::(anonymous)THnBase::kValidInt. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THn& operator=(const THn&). GetArray(); Increment the bin content of ""bin"" by ""w"",; return the bin index. return GetArray(). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-09-08 17:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/THnT_unsigned_short_.html:12308,Inherit,Inheritance,12308,root/html604/THnT_unsigned_short_.html,https://root.cern,https://root.cern/root/html604/THnT_unsigned_short_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TDataSet::EDataSetPassTDataSet::kPrune; static TDataSet::EDataSetPassTDataSet::kRefs; static TDataSet::EBitOptTDataSet::kReset; static TDataSet::EBitOptTDataSet::kSet; static TObject::(anonymous)TObject::kSingleKey; static TDataSet::EDataSetPassTDataSet::kStop; static TDataSet::EDataSetPassTDataSet::kStruct; static TDataSet::EDataSetPassTDataSet::kUp; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSeqCollection*TDataSet::fListList of the the the objects included into this dataset; TStringTNamed::fNameobject identifier; TObject*fObjTObject to be inserted; TDataSet*TDataSet::fParentpointer to mother of the directory; TStringTNamed::fTitleobject title; static TDataSet*TDataSet::fgMainSetpointer the main dataset;; static TObjectSet::EOwnerBitskIsOwner. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TObjectSet(const Char_t* name, TObject* obj = 0, Bool_t makeOwner = kTRUE); to be documented. TObjectSet(TObject* obj = 0, Bool_t makeOwner = kTRUE); to be documented. ~TObjectSet(); to be documented. TObject * AddObject(TObject* obj, Bool_t makeOwner = kTRUE); Aliase for SetObject method. void Browse(TBrowser* b); Browse this dataset (called by TBrowser). void Delete(Option_t* opt = """"); to be documented. Bool_t DoOwner(Bool_t done = kTRUE); Set / Reset the ownerships and returns the previous; status of the ownerships. TDataSet * Instance() const; apply the class default ctor to instantiate a new object of the same kind.; This is a base method to be overriden by the classes; derived from TDataSet (to support TDataSetIter::Mkdir for example). TObject * SetObject(TObject* obj, Bool_t makeOwner); - Replace the embedded object with a new supplied; - Destroy the preivous embedded object if this is its owner; - Return the previous embedded ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TObjectSet.html:10109,Inherit,Inheritance,10109,root/html602/TObjectSet.html,https://root.cern,https://root.cern/root/html602/TObjectSet.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tfAxisAxis number where object is divided; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TRotMatrix*TNode::fMatrixPointer to rotation matrix; TStringTNamed::fNameobject identifier; Int_tfNdivNumber of divisions; TList*TNode::fNodesList of son nodes (if any); TStringTNode::fOptionList of options if any; TNode*TNode::fParentPointer to parent positioned volume; TShape*TNode::fShapePointer to shape definition; TStringTNamed::fTitleobject title; Int_tTNode::fVisibilityVisibility flag; Double_tTNode::fXX offset with respect to parent object; Double_tTNode::fYY offset with respect to parent object; Double_tTNode::fZZ offset with respect to parent object; static TNode::(anonymous)TNode::kSonsInvisible. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TNodeDiv(); NodeDiv default constructor. TNodeDiv(const char* name, const char* title, const char* shapename, Int_t ndiv, Int_t axis, Option_t* option = """"); NodeDiv normal constructor. name is the name of the node; title is title; shapename is the name of the referenced shape; x,y,z are the offsets of the volume with respect to his mother; matrixname is the name of the rotation matrix. This new node is added into the list of sons of the current node. TNodeDiv(const char* name, const char* title, TShape* shape, Int_t ndiv, Int_t axis, Option_t* option = """"); NodeDiv normal constructor. name is the name of the node; title is title; shape is the pointer to the shape definition; ndiv number of divisions; axis number of the axis for the division. This new node is added into the list of sons of the current node. ~TNodeDiv(); NodeDiv default destructor. void Draw(Option_t* option = """"); Draw Referenced node with current parameters. void Pain",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNodeDiv.html:9538,Inherit,Inheritance,9538,root/html602/TNodeDiv.html,https://root.cern,https://root.cern/root/html602/TNodeDiv.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::DoError(int level, const char* location, const char* fmt, va_list va) const; Double_tinvTrans(Double_t x) const; voidTObject::MakeZombie(); Double_ttrans(Double_t x) const. Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. Double_t*_array! Array of transformed bin boundaries; RooAbsBinning*_inputInput binning; static Int_tRooPrintable::_nameLength; Double_t_offsetOffset of tranformation; Double_t_slopeSlope of transformation; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooLinTransBinning(const RooAbsBinning& input, Double_t slope = 1.0, Double_t offset = 0.0, const char* name = 0); Constructor with a given input binning and the slope and offset to be applied to; construct the linear transformation. RooLinTransBinning(const RooLinTransBinning& , const char* name = 0); Copy constructor. ~RooLinTransBinning(); Destructor. void setRange(Double_t xlo, Double_t xhi). Double_t* array() const; Return array of bin boundaries. void updateInput(const RooAbsBinning& input, Double_t slope = 1.0, Double_t offset = 0.0); Update the slope and offset parameters and the pointer to the input binning. RooLinTransBinning(const char* name = 0); coverity[UNINIT_CTOR]. RooAbsBinning* clone(const char* name = 0) const; { return new RooLinTransBinning(*this,name) ; }. Int_t numBoundaries() const; { return _input->numBoundaries() ; }. Int_t binNumber(Double_t x) const; { return _input->binNumber(invTrans(x)) ; }. Double_t binC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooLinTransBinning.html:8535,Inherit,Inheritance,8535,root/html532/RooLinTransBinning.html,https://root.cern,https://root.cern/root/html532/RooLinTransBinning.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum { kBackIncreasingWindow; kBackDecreasingWindow; kBackSuccessiveFiltering; kBackOneStepFiltering; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TH1*fHistogramresulting histogram; Int_tfMaxPeaksMaximum number of peaks to be found; Int_tfNPeaksnumber of peaks found; TStringTNamed::fNameobject identifier; Float_t*fPosition[fNPeaks] array of current peak positions; Float_t*fPositionX[fNPeaks] X positions of peaks; Float_t*fPositionY[fNPeaks] Y positions of peaks; Float_t*fPositionZ[fNPeaks] Z positions of peaks; Float_tfResolutionresolution of the neighboring peaks; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSpectrum3(); Constructor. TSpectrum3(Int_t maxpositions, Float_t resolution = 1); maxpositions: maximum number of peaks; resolution: determines resolution of the neighboring peaks; default value is 1 correspond to 3 sigma distance; between peaks. Higher values allow higher resolution; (smaller distance between peaks.; May be set later through SetResolution. ~TSpectrum3(); Destructor. const char * Background(const TH1* hist, int niter, Option_t* option = ""goff""). ONE-DIMENSIONAL BACKGROUND ESTIMATION FUNCTION; This function calculates background spectrum from source in h.; The result is placed in the vector pointed by spectrum pointer. Function parameters:; spectrum: pointer to the vector of source spectrum; size: length of spectrum and working space vectors; number_of_iterations, for details we refer to manual. void Print(Option_t* option = """") const; Print the array of positions. Int_t Search(const TH1* hist, Double_t sigma = 2, Opti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSpectrum3.html:8706,Inherit,Inheritance,8706,root/html532/TSpectrum3.html,https://root.cern,https://root.cern/root/html532/TSpectrum3.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tTProofDraw::fDimensionDimension of the current expression; TH1*fHistogram; TStringTProofDraw::fInitialExp; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusselector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Begin1D(TTree* t); Initialization for 1D Histogram. void Begin2D(TTree* t); Initialization for 2D histogram. void Begin3D(TTree* t); Initialization for 3D histogram. void Begin(TTree* t); See TProofDraw::Begin(). void DefVar1D(); Define vars for 1D Histogram. void DefVar2D(); Define variables for 2D histogram. void DefVar3D(); Define variables for 3D histogram. void DefVar(); Define variables according to arguments. void Init(TTree* ); See TProofDraw::Init(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the histgram with given values. void Terminate(void); See TProofDr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofDrawHist.html:7696,variab,variable,7696,root/html530/TProofDrawHist.html,https://root.cern,https://root.cern/root/html530/TProofDrawHist.html,3,['variab'],['variable']
Modifiability,"t::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. char*TBranch::fAddress! Address of 1st leaf (variable or object); Int_t*TBranch::fBasketBytes[fMaxBaskets] Lenght of baskets on file; Long64_t*TBranch::fBasketEntry[fMaxBaskets] Table of first entry in eack basket; Long64_t*TBranch::fBasketSeek[fMaxBaskets] Addresses of baskets on file; Int_tTBranch::fBasketSizeInitial Size of Basket Buffer; TObjArrayTBranch::fBaskets-> List of baskets of this branch; TStringfBlockNameHbook block name; TObjArrayTBranch::fBranches-> List of Branches of this branch; TList*TBranch::fBrowsables! List of TVirtualBranchBrowsables used for Browse(); Int_tTBranch::fCompress(=1 branch is compressed, 0 otherwise); TDirectory*TBranch::fDirectory! Pointer to directory where this branch buffers are stored; Long64_tTBranch::fEntriesNumber of entries; TBuffer*TBranch::fEntryBuffer! Buffer used to directly pass the content without streaming; Long64_tTBranch::fEntryNumberCurrent entry number (last one filled in this branch); Int_tTBranch::fEntryOffsetLenInitial Length of fEntryOffset table in the basket buffers; TStringTBranch::fFileNameName of file where buffers are stored ("""" if in same file as Tree header); Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Long64_tTBranch::fFirstEntryNumber of the first entry in this branch; TObjArrayTBranch::fLeaves-> List of leaves of this branch; Int_tTBranch::fMaxBasketsMaximum number of Baskets so far; TBranch*TBranch::fMother! Pointer to top-level parent branch in the tree.; Int_tTBranch::fNBaskets! Number of baskets in memory; TStringTNamed::fNameobject identifier; Int_tTBranch::fNleaves! Number of leaves; Int_tTBranch::fOffsetOffset of this branch; TBranch*TBranch::fParent! Pointer to parent branch.; Int_tTBranch::fRead",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THbookBranch.html:9906,variab,variable,9906,root/html528/THbookBranch.html,https://root.cern,https://root.cern/root/html528/THbookBranch.html,1,['variab'],['variable']
Modifiability,"t::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. char*fBuffer[fBufferSize] buffer of contiguous prefetched blocks; Int_tfBufferSizeAllocated size of fBuffer; TFile*fFilePointer to file; Int_tfNtotTotal size of cached blocks; Bool_tfRecursiveflag to avoid recursive calls; Long64_tfSeekStartSeek value of first block in cache. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFileCacheWrite(); Default Constructor. TFileCacheWrite(TFile* file, Int_t buffersize); Creates a TFileCacheWrite data structure.; The write cache will be connected to file.; The size of the cache will be buffersize,; if buffersize < 10000 a default size of 512 Kbytes is used. ~TFileCacheWrite(); Destructor. Bool_t Flush(); Flush the current write buffer to the file.; Returns kTRUE in case of error. void Print(Option_t* option = """") const; Print class internal structure. Int_t ReadBuffer(char* buf, Long64_t pos, Int_t len); Called by the read cache to check if the requested data is not; in the write cache buffer.; Returns -1 if data not in write cache,; 0 otherwise. Int_t WriteBuffer(const char* buf, Long64_t pos, Int_t len); Write buffer at position pos in the write buffer.; The function returns 1 if the buffer has been successfully entered into the write buffer.; The function returns 0 in case WriteBuffer() was recusively called via ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFileCacheWrite.html:6688,Inherit,Inheritance,6688,root/html602/TFileCacheWrite.html,https://root.cern,https://root.cern/root/html602/TFileCacheWrite.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringfClassesList of classes to be drawn; TString**fCnames![fNclasses] class names; Int_t*fCparent!parent number of classes (temporary); TClass**fCpointer![fNclasses] pointers to the TClass objects; Int_t*fCstatus[fNclasses] classes status; TString**fCtitles![fNclasses] class titles; char**fDerived![fNclasses] table to indicate if i derives from j; Float_tfLabelDxwidth along x of TPaveLabels in per cent of pad; TList**fLinks![fNclasses] for each class, the list of referenced(ing) classes; TStringTNamed::fNameobject identifier; Int_tfNclassescurrent number of classes; Int_t*fNdata[fNclasses] Number of data members per class; TString**fOptions![fNclasses] List of options per class; Int_t*fParents[fNclasses] parent number of classes (permanent); Int_tfShowCodif 1 show classes referenced by implementation; Int_tfShowHasif 1 show ""has a"" relationship; Int_tfShowMulif 1 show multiple inheritance; Int_tfShowRefif 1 show classes relationship other than inheritance; TStringfSourceDirConcatenated source directories; TStringTNamed::fTitleobject title; Float_tfYoffsetoffset at top of picture in per cent of pad. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TClassTree(); TClassTree default constructor. TClassTree(const char* name, const char* classes = """"); TClassTree constructor. ~TClassTree(); TClassTree default destructor. void Draw(const char* classes = """"); Draw the inheritance tree and relations for the list of classes; see this class header for the syntax and examples. Int_t FindClass(const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TClassTree.html:11976,inherit,inheritance,11976,root/html602/TClassTree.html,https://root.cern,https://root.cern/root/html602/TClassTree.html,8,['inherit'],['inheritance']
Modifiability,"t::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TStatus::EProcStatuskNotOk; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Int_tfExitStatusQuery exit status ((Int_t)TVirtualProofPlayer::EExitStatus or -1);; THashListfInfoMsgslist of info messages; TIterfIter!iterator in messages; TListfMsgslist of error messages; Long_tfResMaxMstMax resident memory used by the master; Long_tfResMemMaxMax resident memory used by the worker; Long_tfVirtMaxMstMax virtual memory used by the master; Long_tfVirtMemMaxMax virtual memory used by the worker. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TStatus. Function documentation; TStatus(); Default constructor. void Add(const char* mesg); Add an error message. void AddInfo(const char* mesg); Add an info message. Int_t Merge(TCollection* list); PROOF Merge() function. void Print(Option_t* option = """") const; Standard print function. void Reset(); Reset the iterator on the messages. const char * NextMesg(); Return the next message or 0. void SetMemValues(Long_t vmem = -1, Long_t rmem = -1, Bool_t master = kFALSE); Set max memory values. void Streamer(TBuffer& ); Stream an object of class TStatus. TStatus(). virtual ~TStatus(); { }. Bool_t IsOk() const; { return TestBit(kNotOk) ? kFALSE : kTRUE; }. Int_t GetExitStatus() const; { return fExitStatus; }. Long_t GetResMemMax(Bool_t master = kFALSE) const; { return ((master) ? fResMaxMst : fResMemMax); }. Long_t GetVirtMemMax(Bool_t master = kFALSE) const; { return ((master) ? fVirtMaxMst : fVirtMemMax); }. void SetExitStatus(Int_t est); { fExitStatus =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStatus.html:6963,Inherit,Inheritance,6963,root/html602/TStatus.html,https://root.cern,https://root.cern/root/html602/TStatus.html,2,['Inherit'],['Inheritance']
Modifiability,"t::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. RooArgSet_compSplitCatSetList of owned composite splitting categories; list<RooSuperCategory*>_fitCatListThe supercategories that we built; RooArgSet_protoPdfSetSet of prototype PDFS; TList_retiredCustomizerListRetired customizer from previous builds (own their PDF branch nodes); list<RooSimultaneous*>_simPdfListThe simpdfs that we built; RooArgSet_splitNodeListList of owned split nodes; RooArgSet_splitNodeListOwnedList of all split nodes. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooSimPdfBuilder(const RooArgSet& pdfProtoList). RooArgSet* createProtoBuildConfig(); Make RooArgSet of configuration objects. void addSpecializations(const RooArgSet& specSet). RooSimultaneous* buildPdf(const RooArgSet& buildConfig, const RooArgSet& dependents, const RooArgSet* auxSplitCats = 0, Bool_t verbose = kFALSE); Initialize needed components. ~RooSimPdfBuilder(). RooSimPdfBuilder(const RooArgSet& pdfProtoList). RooSimultaneous* buildPdf(const RooArgSet& buildConfig, const RooArgSet& dependents, const RooArgSet* auxSplitCats = 0, Bool_t verbose = kFALSE). return buildPdf(buildConfig,*dataSet->get(),&auxSplitCats,verbose). RooSimultaneous* buildPdf(const RooArgSet& buildConfig, const RooArgSet& dependents, const RooArgSet& auxSplitCats, Bool_t verbose = kFALSE). const RooArgSet& splitLeafList(); { return _splitNodeList; }. » Last changed: Tue Jun 30 14:35:44 2015 » Last generated: 2015-06-30 14:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooSimPdfBuilder.html:20244,config,configuration,20244,root/html602/RooSimPdfBuilder.html,https://root.cern,https://root.cern/root/html602/RooSimPdfBuilder.html,2,['config'],['configuration']
Modifiability,"t::EvalContext & ; ctx); const. overrideprivatevirtual . Compute multiple values of Bernstein distribution. ; Reimplemented from RooAbsReal.; Definition at line 92 of file RooBernstein.cxx. ◆ evaluate(). double RooBernstein::evaluate ; (; ); const. overrideprivatevirtual . Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ; Implements RooAbsReal.; Definition at line 78 of file RooBernstein.cxx. ◆ fillBuffer(). void RooBernstein::fillBuffer ; (; ); const. private . Definition at line 68 of file RooBernstein.cxx. ◆ getAnalyticalIntegral(). Int_t RooBernstein::getAnalyticalIntegral ; (; RooArgSet & ; allVars, . RooArgSet & ; analVars, . const char * ; rangeName = nullptr . ); const. overridevirtual . Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ; 'integSet' is the set of dependents for which integration is requested. The function should copy the subset of dependents it can analytically integrate to anaIntSet and return a unique identification code for this integration configuration. If no integration can be performed, zero should be returned. ; Reimplemented from RooAbsReal.; Definition at line 98 of file RooBernstein.cxx. ◆ IsA(). TClass * RooBernstein::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsPdf.; Definition at line 53 of file RooBernstein.h. ◆ selectNormalizationRange(). void RooBernstein::selectNormalizationRange ; (; const char * ; rangeName = nullptr, . bool ; force = false . ). overridevirtual . Force use of a given normalisation range. ; Needed for functions or PDFs (e.g. RooAddPdf) whose shape depends on the choice of normalisation. ; Reimplemented from RooAbsReal.; Definition at line 61 of file RooBernstein.cxx. ◆ Streamer(). void RooBernstein::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsPdf. ◆ StreamerNVirtual(). void RooBernstein::S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBernstein.html:78064,config,configuration,78064,doc/master/classRooBernstein.html,https://root.cern,https://root.cern/doc/master/classRooBernstein.html,1,['config'],['configuration']
Modifiability,"t::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static RooCFunction2Map<double,unsigned int,double>&fmap(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; const char*name() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction2Ref_double_unsigned_int_double_.html:3256,Inherit,InheritsFrom,3256,root/html534/RooCFunction2Ref_double_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html534/RooCFunction2Ref_double_unsigned_int_double_.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static RooCFunction2Map<double,unsigned int,double>&fmap(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; const char*name() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction2Ref_double_unsigned_int_double_.html:2974,Inherit,InheritsFrom,2974,root/html602/RooCFunction2Ref_double_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction2Ref_double_unsigned_int_double_.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*GetListOfEdges() const; TList*GetListOfNodes() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; Int_tLayout(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGraphStruct.html:4646,Inherit,InheritsFrom,4646,root/html532/TGraphStruct.html,https://root.cern,https://root.cern/root/html532/TGraphStruct.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*GetListOfEdges() const; TList*GetListOfNodes() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; Int_tLayout(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGraphStruct.html:4593,Inherit,InheritsFrom,4593,root/html602/TGraphStruct.html,https://root.cern,https://root.cern/root/html602/TGraphStruct.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const RooAbsNumGenerator*getProtoSampler(const char* name); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; static RooNumGenFactory&instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooNumGenFactory.html:2996,Inherit,InheritsFrom,2996,root/html532/RooNumGenFactory.html,https://root.cern,https://root.cern/root/html532/RooNumGenFactory.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const RooAbsNumGenerator*getProtoSampler(const char* name); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; static RooNumGenFactory&instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooNumGenFactory.html:2996,Inherit,InheritsFrom,2996,root/html602/RooNumGenFactory.html,https://root.cern,https://root.cern/root/html602/RooNumGenFactory.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidFinishPolygon(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; Int_tGetNvert() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_t*GetX(); Double_t*GetY(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsClockwise() const; Bool_tIsConvex() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; Bool_tIsFinished() const; virtual Bool_tTObject::IsFolder() const; Bool_tIsIllegalCheck() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPolygon.html:3922,Inherit,InheritsFrom,3922,root/html532/TGeoPolygon.html,https://root.cern,https://root.cern/root/html532/TGeoPolygon.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual RooDataSet*finalizeRun(); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tinitializeInstance(); virtual Bool_tinitializeRun(Int_t); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooDLLSignificanceMCSModule.html:3350,Inherit,InheritsFrom,3350,root/html532/RooDLLSignificanceMCSModule.html,https://root.cern,https://root.cern/root/html532/RooDLLSignificanceMCSModule.html,8,['Inherit'],['InheritsFrom']
Modifiability,"t::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual RooDataSet*finalizeRun(); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tinitializeInstance(); virtual Bool_tinitializeRun(Int_t); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsMCStudyModule.html:2985,Inherit,InheritsFrom,2985,root/html602/RooAbsMCStudyModule.html,https://root.cern,https://root.cern/root/html602/RooAbsMCStudyModule.html,10,['Inherit'],['InheritsFrom']
Modifiability,"t::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TList*GetClasses(); const char*GetDoc() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; THashList&GetSub(); TModuleDocInfo*GetSuper() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsSelected() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TModuleDocInfo.html:3166,Inherit,InheritsFrom,3166,root/html532/TModuleDocInfo.html,https://root.cern,https://root.cern/root/html532/TModuleDocInfo.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TList*GetClasses(); const char*GetDoc() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; THashList&GetSub(); TModuleDocInfo*GetSuper() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsSelected() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TModuleDocInfo.html:3085,Inherit,InheritsFrom,3085,root/html602/TModuleDocInfo.html,https://root.cern,https://root.cern/root/html602/TModuleDocInfo.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TObject*GetPlottedObject() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; RooStats::LikelihoodIntervalPlotLikelihoodIntervalPlot(); RooStats::LikelihoodIntervalPlotLikelihoodIntervalPlot(RooStats::LikelihoodInterval* theInterval); RooStats::LikelihoodIntervalPlotLikelihoodIntervalPlot(const RooStats::LikelihoodIntervalPlot&); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); stati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__LikelihoodIntervalPlot.html:2811,Inherit,InheritsFrom,2811,root/html534/RooStats__LikelihoodIntervalPlot.html,https://root.cern,https://root.cern/root/html534/RooStats__LikelihoodIntervalPlot.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TObject*GetPlottedObject() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; RooStats::LikelihoodIntervalPlotLikelihoodIntervalPlot(); RooStats::LikelihoodIntervalPlotLikelihoodIntervalPlot(RooStats::LikelihoodInterval* theInterval); RooStats::LikelihoodIntervalPlotLikelihoodIntervalPlot(const RooStats::LikelihoodIntervalPlot&); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__LikelihoodIntervalPlot.html:2817,Inherit,InheritsFrom,2817,root/html602/RooStats__LikelihoodIntervalPlot.html,https://root.cern,https://root.cern/root/html602/RooStats__LikelihoodIntervalPlot.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; voidField(const Double_t* x, Double_t* B); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TVirtualMagField*GetField() const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; static TGeoGlobalMagField*Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsLocked(); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; voidLock(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoGlobalMagField.html:3011,Inherit,InheritsFrom,3011,root/html532/TGeoGlobalMagField.html,https://root.cern,https://root.cern/root/html532/TGeoGlobalMagField.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TDataMember*GetDataMember() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; static voidGetName(TString& output, TDataMember* dm); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TMemberStreamer*GetStreamer() const; Long_tGetThisOffset() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsObject() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRealData.html:2940,Inherit,InheritsFrom,2940,root/html534/TRealData.html,https://root.cern,https://root.cern/root/html534/TRealData.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TDataMember*GetDataMember() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; static voidGetName(TString& output, TDataMember* dm); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TMemberStreamer*GetStreamer() const; Long_tGetThisOffset() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsObject() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRealData.html:2882,Inherit,InheritsFrom,2882,root/html602/TRealData.html,https://root.cern,https://root.cern/root/html602/TRealData.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual TObjString*TMacro::GetLineWith(const char* text) const; TList*TMacro::GetListOfLines() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Bool_tTMacro::Load() constMENU ; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TEveMacro&op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveMacro.html:2688,Inherit,InheritsFrom,2688,root/html602/TEveMacro.html,https://root.cern,https://root.cern/root/html602/TEveMacro.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual TObjString*TMacro::GetLineWith(const char* text) const; TList*TMacro::GetListOfLines() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TEveMacro&operator=(const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveMacro.html:2759,Inherit,InheritsFrom,2759,root/html532/TEveMacro.html,https://root.cern,https://root.cern/root/html532/TEveMacro.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::FindObject(const TObject* obj) const; Int_tGetBest() const; TFoamCell*GetDau0() const; TFoamCell*GetDau1() const; virtual Option_t*TObject::GetDrawOption() const; Double_tGetDriv() const; static Long_tTObject::GetDtorOnly(); voidGetHcub(TFoamVect&, TFoamVect&) const; voidGetHSize(TFoamVect&) const; virtual const char*TObject::GetIconName() const; Double_tGetIntg() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TFoamCell*GetPare() const; Double_tGetPrim() const; Int_tGetSerial() const; Int_tGetStat() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetVolume() const; Double_tGetXdiv() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFoamCell.html:2946,Inherit,InheritsFrom,2946,root/html532/TFoamCell.html,https://root.cern,https://root.cern/root/html532/TFoamCell.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::FindObject(const TObject* obj) const; Int_tGetBest() const; TFoamCell*GetDau0() const; TFoamCell*GetDau1() const; virtual Option_t*TObject::GetDrawOption() const; Double_tGetDriv() const; static Long_tTObject::GetDtorOnly(); voidGetHcub(TFoamVect&, TFoamVect&) const; voidGetHSize(TFoamVect&) const; virtual const char*TObject::GetIconName() const; Double_tGetIntg() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TFoamCell*GetPare() const; Double_tGetPrim() const; Int_tGetSerial() const; Int_tGetStat() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetVolume() const; Double_tGetXdiv() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFoamCell.html:2892,Inherit,InheritsFrom,2892,root/html602/TFoamCell.html,https://root.cern,https://root.cern/root/html602/TFoamCell.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const TMatrixDSymGetMatrix(); virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; const TMatrixD&GetU() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TMatrixDSymInvert(); Bool_tInvert(TMatrixDSym& inv); TMatrixDSymInvert(Bool_t& status); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDecompChol.html:3229,Inherit,InheritsFrom,3229,root/html532/TDecompChol.html,https://root.cern,https://root.cern/root/html532/TDecompChol.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const TMatrixDSymGetMatrix(); virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; const TMatrixD&GetU() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TMatrixDSymInvert(); Bool_tInvert(TMatrixDSym& inv); TMatrixDSymInvert(Bool_t& status); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDecompChol.html:2997,Inherit,InheritsFrom,2997,root/html602/TDecompChol.html,https://root.cern,https://root.cern/root/html602/TDecompChol.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::FindObject(const TObject* obj) const; TDictionary*GetClass() const; const char*GetDeclFileName() const; const char*GetDeclFileSysName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetHtmlFileName() const; virtual const char*TObject::GetIconName() const; const char*GetImplFileName() const; const char*GetImplFileSysName() const; TList&GetListOfTypedefs(); TModuleDocInfo*GetModule() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tHash() const; Bool_tHaveSource() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsSelected() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TClassDocInfo.html:3018,Inherit,InheritsFrom,3018,root/html532/TClassDocInfo.html,https://root.cern,https://root.cern/root/html532/TClassDocInfo.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::FindObject(const TObject* obj) const; TDictionary*GetClass() const; const char*GetDeclFileName() const; const char*GetDeclFileSysName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetHtmlFileName() const; virtual const char*TObject::GetIconName() const; const char*GetImplFileName() const; const char*GetImplFileSysName() const; TList&GetListOfTypedefs(); TModuleDocInfo*GetModule() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tHash() const; Bool_tHaveSource() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsSelected() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TClassDocInfo&operator=(const TCla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TClassDocInfo.html:2709,Inherit,InheritsFrom,2709,root/html602/TClassDocInfo.html,https://root.cern,https://root.cern/root/html602/TClassDocInfo.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::FindObject(const TObject* obj) const; TObject*RooLinkedList::First() const; RooFIterRooLinkedList::fwdIterator() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tRooLinkedList::getHashTableSize() const; virtual const char*TObject::GetIconName() const; virtual const char*RooLinkedList::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tRooLinkedList::GetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tRooLinkedList::Hash() const; Int_tRooLinkedList::IndexOf(const char* name) const; Int_tRooLinkedList::IndexOf(const TObject* arg) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; RooLinkedListIterRooLinkedList::iterator(Bool_t dir = kTRUE) const; virtual voidTObject::ls(Option_t* option = """") const; TIterator*RooLinkedList::MakeIterator(Bool_t dir = kTRUE) const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooRefCountList.html:3136,Inherit,InheritsFrom,3136,root/html602/RooRefCountList.html,https://root.cern,https://root.cern/root/html602/RooRefCountList.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual voidGetLastValues(const char*, const char*, const char*, const char*, Bool_t = kFALSE); virtual TMap*GetMap(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidGetValues(const char*, const char*, const char*, const char*, Long_t, Long_t, Bool_t = kFALSE); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TVirtualMonitoringReader&",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVirtualMonitoringReader.html:2847,Inherit,InheritsFrom,2847,root/html532/TVirtualMonitoringReader.html,https://root.cern,https://root.cern/root/html532/TVirtualMonitoringReader.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual voidGetLastValues(const char*, const char*, const char*, const char*, Bool_t = kFALSE); virtual TMap*GetMap(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidGetValues(const char*, const char*, const char*, const char*, Long_t, Long_t, Bool_t = kFALSE); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TVirtualMonitoringReader&operator=(const TVirtualMoni",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualMonitoringReader.html:2768,Inherit,InheritsFrom,2768,root/html602/TVirtualMonitoringReader.html,https://root.cern,https://root.cern/root/html602/TVirtualMonitoringReader.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; void*GetAddress() const; Int_tGetArrayDim() const; static TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetFullTypeName() const; virtual const char*TObject::GetIconName() const; Int_tGetMaxIndex(Int_t dim) const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGlobal.html:2864,Inherit,InheritsFrom,2864,root/html532/TGlobal.html,https://root.cern,https://root.cern/root/html532/TGlobal.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; TObject*TTimer::GetObject(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TTimeTTimer::GetTime() const; UInt_tTTimer::GetTimerID(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; Bool_tTTimer::HasTimedOut() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTSysEvtHandler::IsActive() const; Bool_tTTimer::IsAsync() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTTimer::IsInterruptingSyscalls() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTTimer::IsSync() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTSysEvtHandler::Notified()SIGNAL ; virtual Bool_tNotify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSigna",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProcessEventTimer.html:5606,Inherit,InheritsFrom,5606,root/html532/TProcessEventTimer.html,https://root.cern,https://root.cern/root/html532/TProcessEventTimer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; TObject*TTimer::GetObject(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TTimeTTimer::GetTime() const; UInt_tTTimer::GetTimerID(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; Bool_tTTimer::HasTimedOut() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTSysEvtHandler::IsActive() const; Bool_tTTimer::IsAsync() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTTimer::IsInterruptingSyscalls() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTTimer::IsSync() const; Bool_tTObject::IsZombie() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTSysEvtHandler::Notified()SIGNAL ; virtual Bool_tNotify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProcessEventTimer.html:5580,Inherit,InheritsFrom,5580,root/html602/TProcessEventTimer.html,https://root.cern,https://root.cern/root/html602/TProcessEventTimer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; static UInt_tGetNProcessIDs(); static UInt_tGetObjectCount(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; TObjArray*GetObjects() const; static Bool_tTObject::GetObjectStat(); TObject*GetObjectWithID(UInt_t uid); virtual Option_t*TObject::GetOption() const; static TProcessID*GetPID(); static TObjArray*GetPIDs(); static TProcessID*GetProcessID(UShort_t pid); static TProcessID*GetProcessWithUID(const TObject* obj); static TProcessID*GetProcessWithUID(UInt_t uid, const void* obj); static TProcessID*GetSessionProcessID(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Int_tIncrementCount(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; static Bool_tIsValid(TProcessID* pid); Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProcessID.html:4386,Inherit,InheritsFrom,4386,root/html532/TProcessID.html,https://root.cern,https://root.cern/root/html532/TProcessID.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; static UInt_tGetNProcessIDs(); static UInt_tGetObjectCount(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; TObjArray*GetObjects() const; static Bool_tTObject::GetObjectStat(); TObject*GetObjectWithID(UInt_t uid); virtual Option_t*TObject::GetOption() const; static TProcessID*GetPID(); static TObjArray*GetPIDs(); static TProcessID*GetProcessID(UShort_t pid); static TProcessID*GetProcessWithUID(const TObject* obj); static TProcessID*GetProcessWithUID(UInt_t uid, const void* obj); static TProcessID*GetSessionProcessID(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Int_tIncrementCount(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; static Bool_tIsValid(TProcessID* pid); Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProcessID.html:4372,Inherit,InheritsFrom,4372,root/html602/TProcessID.html,https://root.cern,https://root.cern/root/html602/TProcessID.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNfill() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TTreeFormula*GetSelect() const; virtual Long64_tGetSelectedRows() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_t*GetV1() const; virtual Double_t*GetV2() const; virtual Double_t*GetV3() const; virtual Double_t*GetV4() const; virtual Double_t*GetVal(Int_t) const; virtual TTreeFormula*GetVar(Int_t) const; virtual TTreeFormula*GetVar1() const; virtual TTreeFormula*GetVar2() const; virtual TTreeFormula*GetVar3() const; virtual TTreeFormula*GetVar4() const; virtual Double_t*GetW() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual Int_tMakeClass(const char* classname, const char* option); virtual Int_tMakeCode(const char* filename); virtual Int_tMakeProxy(const char* classname, const char* macrofilename = 0, const char* cutfilename = 0, const char* option = 0, Int_t maxUnrolling = 3); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVirtualTreePlayer.html:3921,Inherit,InheritsFrom,3921,root/html532/TVirtualTreePlayer.html,https://root.cern,https://root.cern/root/html532/TVirtualTreePlayer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNfill() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TTreeFormula*GetSelect() const; virtual Long64_tGetSelectedRows() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_t*GetV1() const; virtual Double_t*GetV2() const; virtual Double_t*GetV3() const; virtual Double_t*GetV4() const; virtual Double_t*GetVal(Int_t) const; virtual TTreeFormula*GetVar(Int_t) const; virtual TTreeFormula*GetVar1() const; virtual TTreeFormula*GetVar2() const; virtual TTreeFormula*GetVar3() const; virtual TTreeFormula*GetVar4() const; virtual Double_t*GetW() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual Int_tMakeClass(const char* classname, const char* option); virtual Int_tMakeCode(const char* filename); virtual Int_tMakeProxy(const char* classname, const char* macrofilename = 0, const char* cutfilename = 0, const char* option = 0, Int_t maxUnrolling = 3); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualTreePlayer.html:3945,Inherit,InheritsFrom,3945,root/html602/TVirtualTreePlayer.html,https://root.cern,https://root.cern/root/html602/TVirtualTreePlayer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::GetNewClass() const; Int_tTStreamerElement::GetNewType() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTStreamerElement::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual Int_tGetSize() const; TMemberStreamer*TStreamerElement::GetStreamer() const; virtual const char*TNamed::GetTitle() const; Int_tTStreamerElement::GetTObjectOffset() const; Int_tTStreamerElement::GetType() const; const char*TStreamerElement::GetTypeName() const; const char*TStreamerElement::GetTypeNameBasic() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTStreamerElement::GetXmax() const; Double_tTStreamerElement::GetXmin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tHasCounter() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TObject* obj = 0); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsaPointer() const; virtual Bool_tTStreamerElement::IsBase() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTStreamerElement::IsOldFormat(const char* newTypeName); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTStreamerElement::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TStreamerBasicPointer.html:3837,Inherit,InheritsFrom,3837,root/html532/TStreamerBasicPointer.html,https://root.cern,https://root.cern/root/html532/TStreamerBasicPointer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TObject*GetParent() const; Bool_tGetRotateTitle() const; virtual Float_tTAttAxis::GetTickLength() const; virtual const char*GetTicks() const; virtual Bool_tGetTimeDisplay() const; virtual const char*GetTimeFormat() const; virtual const char*GetTimeFormatOnly() const; virtual const char*GetTitle() const; virtual Color_tTAttAxis::GetTitleColor() const; virtual Style_tTAttAxis::GetTitleFont() const; virtual Float_tTAttAxis::GetTitleOffset() const; virtual Float_tTAttAxis::GetTitleSize() const; virtual UInt_tTObject::GetUniqueID() const; const TArrayD*GetXbins() const; Double_tGetXmax() const; Double_tGetXmin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidImportAttributes(const TAxis* axis); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsVariableBinSize() const; Bool_tTObject::IsZombie() const; virtual voidLabelsOption(Option_t* option = ""h"")MENU ; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TAxis.html:4514,Inherit,InheritsFrom,4514,root/html532/TAxis.html,https://root.cern,https://root.cern/root/html532/TAxis.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TObject*GetParent() const; Bool_tGetRotateTitle() const; virtual Float_tTAttAxis::GetTickLength() const; virtual const char*GetTicks() const; virtual Bool_tGetTimeDisplay() const; virtual const char*GetTimeFormat() const; virtual const char*GetTimeFormatOnly() const; virtual const char*GetTitle() const; virtual Color_tTAttAxis::GetTitleColor() const; virtual Style_tTAttAxis::GetTitleFont() const; virtual Float_tTAttAxis::GetTitleOffset() const; virtual Float_tTAttAxis::GetTitleSize() const; virtual UInt_tTObject::GetUniqueID() const; const TArrayD*GetXbins() const; Double_tGetXmax() const; Double_tGetXmin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidImportAttributes(const TAxis* axis); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsVariableBinSize() const; Bool_tTObject::IsZombie() const; virtual voidLabelsOption(Option_t* option = ""h"")MENU ; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TAxis.html:4491,Inherit,InheritsFrom,4491,root/html602/TAxis.html,https://root.cern,https://root.cern/root/html602/TAxis.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t::GetUniqueID() const; const Text_t*RooAbsReal::getUnit() const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; Bool_tRooAbsHiddenReal::isHidden() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooUnblindCPAsymVar.html:15699,Inherit,InheritsFrom,15699,root/html532/RooUnblindCPAsymVar.html,https://root.cern,https://root.cern/root/html532/RooUnblindCPAsymVar.html,4,['Inherit'],['InheritsFrom']
Modifiability,"t::MakeZombie(). Data Members; public:. TH1D*fWtHst1Histogram of the weight wt; TH1D*fWtHst2Histogram of wt filled with wt; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. Double_tfNentNo. of MC events; Int_tfnBinNo. of bins on the weight distribution; Double_tfwmaxMaximum analyzed weight. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFoamMaxwt(); Constructor for streamer. TFoamMaxwt(Double_t , Int_t ); Principal user constructor. TFoamMaxwt(TFoamMaxwt& From); Explicit COPY CONSTRUCTOR (unused, so far). ~TFoamMaxwt(); Destructor. void Reset(); Reseting weight analysis. TFoamMaxwt& operator=(const TFoamMaxwt& ); substitution =. void Fill(Double_t ); Filling analyzed weight. void Make(Double_t , Double_t& ); Calculates Efficiency= aveWt/wtLim for a given tolerance level epsilon<<1; To be called at the end of the MC run. void GetMCeff(Double_t , Double_t& , Double_t& ); Calculates Efficiency= aveWt/wtLim for a given tolerance level epsilon<<1; using information stored in two histograms.; To be called at the end of the MC run. » Last changed: root/foam:$Id$ » Last generated: 2015-06-02 15:48; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TFoamMaxwt.html:6238,Inherit,Inheritance,6238,root/html604/TFoamMaxwt.html,https://root.cern,https://root.cern/root/html604/TFoamMaxwt.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::MakeZombie(). Data Members; public:. TH1D*fWtHst1Histogram of the weight wt; TH1D*fWtHst2Histogram of wt filled with wt; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. Double_tfNentNo. of MC events; Int_tfnBinNo. of bins on the weight distribution; Double_tfwmaxMaximum analyzed weight. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFoamMaxwt(); Constructor for streamer. TFoamMaxwt(Double_t , Int_t ); Principal user constructor. TFoamMaxwt(TFoamMaxwt& From); Explicit COPY CONSTRUCTOR (unused, so far). ~TFoamMaxwt(); Destructor. void Reset(); Reseting weight analysis. TFoamMaxwt& operator=(const TFoamMaxwt& ); substitution =. void Fill(Double_t ); Filling analyzed weight. void Make(Double_t , Double_t& ); Calculates Efficiency= aveWt/wtLim for a given tolerance level epsilon<<1; To be called at the end of the MC run. void GetMCeff(Double_t , Double_t& , Double_t& ); Calculates Efficiency= aveWt/wtLim for a given tolerance level epsilon<<1; using information stored in two histograms.; To be called at the end of the MC run. » Last changed: root/foam:$Id$ » Last generated: 2015-06-30 14:49; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFoamMaxwt.html:6238,Inherit,Inheritance,6238,root/html602/TFoamMaxwt.html,https://root.cern,https://root.cern/root/html602/TFoamMaxwt.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::MakeZombie(); static voidregisterIntegrator(RooNumIntFactory& fact). Data Members; public:. enum SamplingMode { Importance; ImportanceOnly; Stratified; };; enum GeneratorType { QuasiRandom; PseudoRandom; };; enum Stage { AllStages; ReuseGrid; RefineGrid; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_t_alphaGrid stiffness parameter; UInt_t_calls_per_boxScratch variables preserved between calls to vegas1/2/2; Double_t_chi_sum; Double_t_chisq; const RooAbsFunc*RooAbsIntegrator::_functionPointer to function binding of integrand; RooMCIntegrator::GeneratorType_genTypeGenerator type; RooGrid_gridSampling grid definition; UInt_t_it_num; UInt_t_it_start; Double_t_jac; Int_t_modeSampling mode; Int_t_nIntegratePerDimNumber of integration samplings (per dim); Int_t_nRefineIterNumber of refinement iterations; Int_t_nRefinePerDimNumber of refinement samplings (per dim); Bool_tRooAbsIntegrator::_printEvalCounterIf true print number of function evaluation required for integration; Double_t_result; UInt_t_samples; Double_t_sigmaScratch variables preserved between calls to vegas1/2/2; Double_t_sum_wgts; TStopwatch_timerTimer; Bool_tRooAbsIntegrator::_validIs integrator in valid state?; Bool_t_verboseVerbosity control; Double_t_wtd_int_sum. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerIntegrator(RooNumIntFactory& fact); This function registers class RooMCIntegrator, its configuration options; and its capabilities with RooNumIntFactory. RooMCIntegrator(); Default constructor. RooMCIntegrator(const RooAbsFunc& function, RooMCIntegrator::SamplingMode mode = Importance, RooMCIntegrator::GeneratorType genType = QuasiRandom, Bool_t verbose = kFALSE); Construct an integrator over 'function' with given sam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooMCIntegrator.html:7070,variab,variables,7070,root/html526/RooMCIntegrator.html,https://root.cern,https://root.cern/root/html526/RooMCIntegrator.html,2,['variab'],['variables']
Modifiability,"t::MakeZombie(); static voidregisterIntegrator(RooNumIntFactory& fact). Data Members; public:. enum SamplingMode { Importance; ImportanceOnly; Stratified; };; enum GeneratorType { QuasiRandom; PseudoRandom; };; enum Stage { AllStages; ReuseGrid; RefineGrid; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_t_alphaGrid stiffness parameter; UInt_t_calls_per_boxScratch variables preserved between calls to vegas1/2/2; Double_t_chi_sum; Double_t_chisq; const RooAbsFunc*RooAbsIntegrator::_functionPointer to function binding of integrand; RooMCIntegrator::GeneratorType_genTypeGenerator type; RooGrid_gridSampling grid definition; UInt_t_it_num; UInt_t_it_start; Double_t_jac; Int_t_modeSampling mode; Int_t_nIntegratePerDimNumber of integration samplings (per dim); Int_t_nRefineIterNumber of refinement iterations; Int_t_nRefinePerDimNumber of refinement samplings (per dim); Bool_tRooAbsIntegrator::_printEvalCounterIf true print number of function evaluation required for integration; Double_t_result; UInt_t_samples; Double_t_sigmaScratch variables preserved between calls to vegas1/2/2; Double_t_sum_wgts; TStopwatch_timerTimer; Bool_tRooAbsIntegrator::_validIs integrator in valid state?; Bool_t_verboseVerbosity control; Double_t_wtd_int_sum. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerIntegrator(RooNumIntFactory& fact); This function registers class RooMCIntegrator, its configuration options; and its capabilities with RooNumIntFactory. RooMCIntegrator(); Default constructor. coverity[UNINIT_CTOR]. RooMCIntegrator(const RooAbsFunc& function, RooMCIntegrator::SamplingMode mode = Importance, RooMCIntegrator::GeneratorType genType = QuasiRandom, Bool_t verbose = kFALSE); Construct an integrator over 'f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooMCIntegrator.html:7056,variab,variables,7056,root/html528/RooMCIntegrator.html,https://root.cern,https://root.cern/root/html528/RooMCIntegrator.html,12,['variab'],['variables']
Modifiability,"t::MarkerSize(Size_t size) Select the ROOT marker size . RooFit::FillStyle(Style_t style) Select fill style, default is filled. . RooFit::FillColor(Color_t color) Select fill color by ROOT color code . RooFit::XErrorSize(double frac) Select size of X error bar as fraction of the bin width, default is 1. Misc. other options . RooFit::Name(const char* name) Give curve specified name in frame. Useful if curve is to be referenced later . RooFit::Invisible() Add curve to frame, but do not display. Useful in combination AddTo() . RooFit::AddTo(const char* name, double wgtSel, double wgtOther) Add constructed histogram to already existing histogram with given name and relative weight factors. Reimplemented in RooDataHist.; Definition at line 1712 of file RooAbsData.cxx. ◆ plotOn() [3/3]. RooPlot * RooAbsData::plotOn ; (; RooPlot * ; frame, . PlotOpt ; o . ); const. protectedvirtual . Create and fill a histogram of the frame's variable and append it to the frame. ; The frame variable must be one of the data sets dimensions.; The plot range and the number of plot bins is determined by the parameters of the plot variable of the frame (RooAbsReal::setPlotRange(), RooAbsReal::setPlotBins()).; The optional cut string expression can be used to select the events to be plotted. The cut specification may refer to any variable contained in the data set.; The drawOptions are passed to the TH1::Draw() method. See alsoRooAbsData::plotOn(RooPlot*,const RooLinkedList&) const ; Reimplemented in RooDataHist, and RooDataHist.; Definition at line 1843 of file RooAbsData.cxx. ◆ Print(). void RooAbsData::Print ; (; Option_t * ; option = nullptr); const. inlineoverridevirtual . This method must be overridden when a class wants to print itself. ; Reimplemented from TObject.; Definition at line 225 of file RooAbsData.h. ◆ printClassName(). void RooAbsData::printClassName ; (; std::ostream & ; os); const. overridevirtual . Print class name of dataset. ; Reimplemented from RooPrintable.; Definition ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsData.html:59859,variab,variable,59859,doc/master/classRooAbsData.html,https://root.cern,https://root.cern/doc/master/classRooAbsData.html,1,['variab'],['variable']
Modifiability,"t::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* opt = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidRemoveHandler(const char* base, const char* regexp = 0); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; Int_tWritePluginMacros(const char* dir, const char* plugin = 0) const; Int_tWritePluginRecords(const char* envFile, const char* plugin = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPluginManager.html:8167,plugin,plugin,8167,root/html534/TPluginManager.html,https://root.cern,https://root.cern/root/html534/TPluginManager.html,4,['plugin'],['plugin']
Modifiability,"t::ParameterSettingsParameterSettings(const string& name, double val, double err, double min, double max); voidRelease(); voidRemoveLimits(); voidSet(const string& name, double value); voidSet(const string& name, double value, double step); voidSet(const string& name, double value, double step, double lower, double upper); voidSetLimits(double low, double up); voidSetLowerLimit(double low); voidSetName(const string& name); voidSetStepSize(double err); voidSetUpperLimit(double up); voidSetValue(double val); doubleStepSize() const; doubleUpperLimit() const; doubleValue() const. Data Members; private:. boolfFixflag to control if parameter is fixed ; boolfHasLowerLimitflag to control lower parameter limit; boolfHasUpperLimitflag to control upper parameter limit; doublefLowerLimitlower parameter limit; stringfNameparameter name; doublefStepSizeparameter step size (used by minimizer); doublefUpperLimitupper parameter limit; doublefValueparameter value. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ParameterSettings(). Default constructor. {}. ParameterSettings(const string& name, double val, double err); constructor for unlimited named Parameter. {}. ParameterSettings(const string& name, double val, double err, double min, double max); constructor for double limited Parameter. SetLimits(double low, double up). ParameterSettings(const string& name, double val); constructor for fixed Parameter. {}. void Set(const string& name, double value, double step); set value and name (unlimited parameter). SetName(const string& name). SetValue(double val). SetStepSize(double err). void Set(const string& name, double value, double step, double lower, double upper); set a limited parameter. void Set(const string& name, double value); set a fixed parameter. Fix(). ~ParameterSettings(). Destructor (no operations). {}. double Value() const; copy constructor and assignment operators (leave them to the compiler); return parameter value. { return fV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Fit__ParameterSettings.html:2326,Inherit,Inheritance,2326,root/html532/ROOT__Fit__ParameterSettings.html,https://root.cern,https://root.cern/root/html532/ROOT__Fit__ParameterSettings.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~TFoamIntegrand(); { }. Double_t Density(Int_t ndim, Double_t* ). » Last changed: root/foam:$Id$ » Last generated: 2015-03-13 19:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFoamIntegrand.html:5244,Inherit,Inheritance,5244,root/html534/TFoamIntegrand.html,https://root.cern,https://root.cern/root/html534/TFoamIntegrand.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual Bool_tselfNormalized() const; TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidsetGeneratorConfig(); voidsetGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); voidsetNormRange(const char* rangeName); voidsetNormRangeOverride(const char* rangeName); voidsetNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidsetTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsPdf.html:31199,config,config,31199,root/html532/RooAbsPdf.html,https://root.cern,https://root.cern/root/html532/RooAbsPdf.html,1,['config'],['config']
Modifiability,"t::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Bool_tfHasKink; Bool_tfHasV0; Bool_tfIsRecIs reconstructed.; Int_tfLabel; Int_tfNClus; Int_tfNHits. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveMCTrack& operator=(const TEveMCRecCrossRef& ); { *((TParticle*)this) = p; return *this; }. TEveMCRecCrossRef(); {}. virtual ~TEveMCRecCrossRef(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveMCRecCrossRef.html:5275,Inherit,Inheritance,5275,root/html534/TEveMCRecCrossRef.html,https://root.cern,https://root.cern/root/html534/TEveMCRecCrossRef.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableIdentityTransformVariableIdentityTransform(TMVA::DataSetInfo& dsi); TMVA::VariableIdentityTransformVariableIdentityTransform(const TMVA::VariableIdentityTransform&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidWriteTransformationToStream(ostream&) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__VariableIdentityTransform.html:6379,Variab,VariableInfo,6379,root/html534/TMVA__VariableIdentityTransform.html,https://root.cern,https://root.cern/root/html534/TMVA__VariableIdentityTransform.html,10,['Variab'],"['VariableIdentityTransform', 'VariableIdentityTransformVariableIdentityTransform', 'VariableInfo', 'VariableTransformBase', 'Variables']"
Modifiability,"t::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; vector<TProofDrawListOfGraphs::Point3D_t>*fVectorvector. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; std::vector<T> * GetVector() const; { return fVector; }. Long64_t Merge(TCollection* list). » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-09-08 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofVectorContainer_TProofDrawListOfGraphs__Point3D_t_.html:6252,Inherit,Inheritance,6252,root/html534/TProofVectorContainer_TProofDrawListOfGraphs__Point3D_t_.html,https://root.cern,https://root.cern/root/html534/TProofVectorContainer_TProofDrawListOfGraphs__Point3D_t_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_t_inSharedList! Is in shared list; Int_t_refCount! Use count ; TUUID_uuidUnique object ID. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooSharedProperties(); Destructor. Bool_t operator==(const RooSharedProperties& other); Return true of unique id of this property is equal to that of other. void Print(Option_t* opts = 0) const; Printing interface. RooSharedProperties* clone(). void increaseRefCount(); { _refCount++ ; }. void decreaseRefCount(); { if (_refCount>0) _refCount-- ; }. Int_t refCount() const; { return _refCount ; }. void setInSharedList(); { _inSharedList = kTRUE ; }. Bool_t inSharedList() const; { return _inSharedList ; }. » Last changed: Fri Dec 2 14:27:03 2011 » Last generated: 2011-12-02 14:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooSharedProperties.html:5638,Inherit,Inheritance,5638,root/html532/RooSharedProperties.html,https://root.cern,https://root.cern/root/html532/RooSharedProperties.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::SetState(TGLOverlayElement::EState s); voidSetupClips(const TGLBoundingBox& sceneBBox); voidSetupCurrentClip(const TGLBoundingBox& sceneBBox); voidSetupCurrentClipIfInvalid(const TGLBoundingBox& sceneBBox); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). protected:. voidTGLOverlayElement::ProjectionMatrixPushIdentity(). private:. TGLClipSet(const TGLClipSet&); TGLClipSet&operator=(const TGLClipSet&). Data Members; public:. enum TGLOverlayElement::ERole { kUser; kViewer; kAnnotation; kAll; };; enum TGLOverlayElement::EState { kInvisible; kDisabled; kActive; kAllVisible; };. protected:. Bool_tfAutoUpdate; TGLClipBox*fClipBox; TGLClipPlane*fClipPlane; TGLClip*fCurrentClip! the current clipping shape; TGLBoundingBoxfLastBBox; TGLManipSet*fManip; TGLOverlayElement::ERoleTGLOverlayElement::fRole; Bool_tfShowClip; Bool_tfShowManip; TGLOverlayElement::EStateTGLOverlayElement::fState. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLClipSet(); Constructor. ~TGLClipSet(); Destructor. Bool_t MouseEnter(TGLOvlSelectRecord& selRec); Mouse has enetered this element.; Forward to ManipSet. Bool_t MouseStillInside(TGLOvlSelectRecord& selRec); A new overlay hit is about to be processed.; Forward to ManipSet. Bool_t Handle(TGLRnrCtx& rnrCtx, TGLOvlSelectRecord& selRec, Event_t* event); Handle overlay event.; Forward to ManipSet. void MouseLeave(); Mouse has left the element.; Forward to ManipSet. void Render(TGLRnrCtx& rnrCtx); Render clip-shape and manipulator. void FillPlaneSet(TGLPlaneSet_t& set) const; Forward request to fill the plane-set to the current clip. void SetupClips(const TGLBoundingBox& sceneBBox); Setup clipping objects for given scene bounding box. void SetupCurrentClip(const TGLBoundingBox& sceneBBox); Setup current clipping object for given scene bounding box. void SetupCurrentClipIfInvalid(const TGLBoundingBox& sceneBBox); Setup current clipping objec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLClipSet.html:2494,Inherit,Inheritance,2494,root/html532/TGLClipSet.html,https://root.cern,https://root.cern/root/html532/TGLClipSet.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TSQLRow(const TSQLRow&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TSQLRow(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance Chart:. TObject. ←; TSQLRow. ←. TMySQLRow. TTreeRow. Function documentation; TSQLRow(); { }. virtual ~TSQLRow(); { }. void Close(Option_t* option = """"). ULong_t GetFieldLength(Int_t field). const char * GetField(Int_t field). const char * operator[](Int_t field); { return GetField(field); }. » Author: Fons Rademakers 25/11/99 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id$ » Last generated: 2015-06-02 14:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSQLRow.html:6022,Inherit,Inheritance,6022,root/html602/TSQLRow.html,https://root.cern,https://root.cern/root/html602/TSQLRow.html,1,['Inherit'],['Inheritance']
Modifiability,"t::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TSQLRow(const TSQLRow&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TSQLRow(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance Chart:. TObject. ←; TSQLRow. ←. TMySQLRow. TTreeRow. Function documentation; TSQLRow(); { }. virtual ~TSQLRow(); { }. void Close(Option_t* option = """"). ULong_t GetFieldLength(Int_t field). const char * GetField(Int_t field). const char * operator[](Int_t field); { return GetField(field); }. » Author: Fons Rademakers 25/11/99 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id$ » Last generated: 2015-06-02 16:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TSQLRow.html:6022,Inherit,Inheritance,6022,root/html604/TSQLRow.html,https://root.cern,https://root.cern/root/html604/TSQLRow.html,1,['Inherit'],['Inheritance']
Modifiability,"t::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Bool_tfCustom. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TQRootGuiFactory(const char* name = ""QRoot"", const char* title = ""Qt/ROOT GUI Factory""); TQRootGuiFactory ctor.; The default implementation is not customized.; The ROOT TRootCanvas class is being used. ~TQRootGuiFactory(); destructor. TCanvasImp * CreateCanvasImp(TCanvas* c, const char* title, UInt_t width, UInt_t height); Create a ROOT native GUI version of TCanvasImp; @param TCanvas *c (ptr to ROOT TCanvas); @param char* title (title for canvas); @param width; @param height; @return QCanvasImp*. TCanvasImp * CreateCanvasImp(TCanvas* c, const char* title, Int_t x, Int_t y, UInt_t width, UInt_t height); Create a ROOT native GUI version of TCanvasImp; @param TCanvas *c (ptr to ROOT TCanvas); @param char* title (title for canvas); @param x; @param y; @param width; @param height; @return TQCanvasImp*. TQRootGuiFactory(const char* name = ""QRoot"", const char* title = ""Qt/ROOT GUI Factory""). void SetCustomFlag(Bool_t custom); { fCustom=custo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TQRootGuiFactory.html:6770,Inherit,Inheritance,6770,root/html532/TQRootGuiFactory.html,https://root.cern,https://root.cern/root/html532/TQRootGuiFactory.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::TGTextLayout ; (; const TGTextLayout & ; tlayout). protecteddelete . ◆ TGTextLayout() [2/2]. TGTextLayout::TGTextLayout ; (; ). inline . Definition at line 121 of file TGFont.h. ◆ ~TGTextLayout(). TGTextLayout::~TGTextLayout ; (; ). override . destructor ; Definition at line 900 of file TGFont.cxx. Member Function Documentation. ◆ CharBbox(). Int_t TGTextLayout::CharBbox ; (; Int_t ; index, . Int_t * ; x, . Int_t * ; y, . Int_t * ; w, . Int_t * ; h . ); const. Use the information in the TGTextLayout token to return the bounding box for the character specified by index. ; The width of the bounding box is the advance width of the character, and does not include and left- or right-bearing. Any character that extends partially outside of the text layout is considered to be truncated at the edge. Any character which is located completely outside of the text layout is considered to be zero-width and pegged against the edge.; The height of the bounding box is the line height for this font, extending from the top of the ascent to the bottom of the descent. Information about the actual height of the individual letter is not available.; A text layout that contains no characters is considered to contain a single zero-width placeholder character.; The return value is 0 if the index did not specify a character in the text layout, or non-zero otherwise. In that case, *bbox is filled with the bounding box of the character.; layout – Layout information, from a previous call to ComputeTextLayout(). index – The index of the character whose bbox is desired. x, y – Filled with the upper-left hand corner, in pixels, of the bounding box for the character specified by index, if non-NULL. w, h – Filled with the width and height of the bounding box for the character specified by index, if non-NULL. ; Definition at line 1109 of file TGFont.cxx. ◆ Class(). static TClass * TGTextLayout::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGTextLay",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextLayout.html:12968,extend,extending,12968,doc/master/classTGTextLayout.html,https://root.cern,https://root.cern/doc/master/classTGTextLayout.html,1,['extend'],['extending']
Modifiability,"t::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. static doubledummyFunction(double, double, double, double). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. static RooCFunction4Map<double,double,double,double,double>*_fmapPointer to mapping service object; void*_ptr! Pointer to embedded function. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction4Ref<VO,VI1,VI2,VI3,VI4> Streamer(TBuffer& R__b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. VO operator()(double x, double y, double z, double w) const; Evaluate embedded function. const char* name() const; Return registered name of embedded function. If function; is not registered return string with hex presentation; of function pointer value. const char* argName(Int_t iarg); Return suggested name for i-t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction4Ref_double_double_double_double_double_.html:6562,Inherit,Inheritance,6562,root/html534/RooCFunction4Ref_double_double_double_double_double_.html,https://root.cern,https://root.cern/root/html534/RooCFunction4Ref_double_double_double_double_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. char*fData[fNumData] data; Int_tTNDArray::fNdimPlusOneNumber of dimensions plus one; intfNumDatanumber of bins, product of fSizes; Long64_t*TNDArray::fSizes[fNdimPlusOne] bin count. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Init(Int_t ndim, const Int_t* nbins, bool addOverflow = false). void Reset(Option_t* = """"). Double_t AtAsDouble(ULong64_t linidx) const. void SetAsDouble(ULong64_t linidx, Double_t value). void AddAt(ULong64_t linidx, Double_t value). TNDArray& operator=(const TNDArrayT<char>& ). TNDArrayRef<T> operator[](Int_t idx) const. T At(const Int_t* idx) const. return At(GetBin(idx)). T& At(const Int_t* idx). return At(ULong64_t linidx). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-30 15:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNDArrayT_char_.html:6976,Inherit,Inheritance,6976,root/html602/TNDArrayT_char_.html,https://root.cern,https://root.cern/root/html602/TNDArrayT_char_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. char*fData[fNumData] data; Int_tTNDArray::fNdimPlusOneNumber of dimensions plus one; intfNumDatanumber of bins, product of fSizes; Long64_t*TNDArray::fSizes[fNdimPlusOne] bin count. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Init(Int_t ndim, const Int_t* nbins, bool addOverflow = false). void Reset(Option_t* = """"). Double_t AtAsDouble(ULong64_t linidx) const. void SetAsDouble(ULong64_t linidx, Double_t value). void AddAt(ULong64_t linidx, Double_t value). TNDArray& operator=(const TNDArrayT<char>& ). TNDArrayRef<T> operator[](Int_t idx) const. T At(const Int_t* idx) const. return At(GetBin(idx)). T& At(const Int_t* idx). return At(ULong64_t linidx). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-09-08 17:47; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TNDArrayT_char_.html:6976,Inherit,Inheritance,6976,root/html604/TNDArrayT_char_.html,https://root.cern,https://root.cern/root/html604/TNDArrayT_char_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. long*fData[fNumData] data; Int_tTNDArray::fNdimPlusOneNumber of dimensions plus one; intfNumDatanumber of bins, product of fSizes; Long64_t*TNDArray::fSizes[fNdimPlusOne] bin count. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Init(Int_t ndim, const Int_t* nbins, bool addOverflow = false). void Reset(Option_t* = """"). Double_t AtAsDouble(ULong64_t linidx) const. void SetAsDouble(ULong64_t linidx, Double_t value). void AddAt(ULong64_t linidx, Double_t value). TNDArray& operator=(const TNDArrayT<long>& ). TNDArrayRef<T> operator[](Int_t idx) const. T At(const Int_t* idx) const. return At(GetBin(idx)). T& At(const Int_t* idx). return At(ULong64_t linidx). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-30 15:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNDArrayT_long_.html:6976,Inherit,Inheritance,6976,root/html602/TNDArrayT_long_.html,https://root.cern,https://root.cern/root/html602/TNDArrayT_long_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. long*fData[fNumData] data; Int_tTNDArray::fNdimPlusOneNumber of dimensions plus one; intfNumDatanumber of bins, product of fSizes; Long64_t*TNDArray::fSizes[fNdimPlusOne] bin count. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Init(Int_t ndim, const Int_t* nbins, bool addOverflow = false). void Reset(Option_t* = """"). Double_t AtAsDouble(ULong64_t linidx) const. void SetAsDouble(ULong64_t linidx, Double_t value). void AddAt(ULong64_t linidx, Double_t value). TNDArray& operator=(const TNDArrayT<long>& ). TNDArrayRef<T> operator[](Int_t idx) const. T At(const Int_t* idx) const. return At(GetBin(idx)). T& At(const Int_t* idx). return At(ULong64_t linidx). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-09-08 17:47; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TNDArrayT_long_.html:6976,Inherit,Inheritance,6976,root/html604/TNDArrayT_long_.html,https://root.cern,https://root.cern/root/html604/TNDArrayT_long_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. THnSparseArrayChunk(const THnSparseArrayChunk&); THnSparseArrayChunk&operator=(const THnSparseArrayChunk&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. TArray*fContentbin content; Int_tfCoordinateAllocationSize! size of the allocated coordinate buffer; -1 means none or fCoordinatesSize; Char_t*fCoordinates[fCoordinatesSize] compact bin coordinate buffer; Int_tfCoordinatesSizesize of the bin coordinate buffer; Int_tfSingleCoordinateSizesize of a single bin coordinate; TArrayD*fSumw2bin errors. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THnSparseArrayChunk(Int_t coordsize, bool errors, TArray* cont); (Default) initialize a chunk. Takes ownership of cont (~THnSparseArrayChunk deletes it),; and create an ArrayF for errors if ""errors"" is true. ~THnSparseArrayChunk(); Destructor. void AddBin(Int_t idx, const Char_t* idxbuf); Create a new bin in this chunk. void Sumw2(); Turn on support of errors. THnSparseArrayChunk(const THnSparseArrayChunk& ). THnSparseArrayChunk& operator=(const THnSparseArrayChunk& ). THnSparseArrayChunk(); {}. void AddBinContent(Int_t idx, Double_t v = 1.). Int_t GetEntries() const; { return fCoordinatesSize / fSingleCoordinateSize; }. Bool_t Matches(Int_t idx, const Char_t* idxbuf) const; Check whether bin at idx batches idxbuf.; If we don't store indexes we trust the caller that it does match,; see comment in THnSparseCompactBinCoord::GetHash(). » Author: Axel Naumann (2007-09-11) » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THnSparseArrayChunk.html:6160,Inherit,Inheritance,6160,root/html532/THnSparseArrayChunk.html,https://root.cern,https://root.cern/root/html532/THnSparseArrayChunk.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. THnSparseArrayChunk(const THnSparseArrayChunk&); THnSparseArrayChunk&operator=(const THnSparseArrayChunk&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. TArray*fContentbin content; Int_tfCoordinateAllocationSize! size of the allocated coordinate buffer; -1 means none or fCoordinatesSize; Char_t*fCoordinates[fCoordinatesSize] compact bin coordinate buffer; Int_tfCoordinatesSizesize of the bin coordinate buffer; Int_tfSingleCoordinateSizesize of a single bin coordinate; TArrayD*fSumw2bin errors. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THnSparseArrayChunk(Int_t coordsize, bool errors, TArray* cont); (Default) initialize a chunk. Takes ownership of cont (~THnSparseArrayChunk deletes it),; and create an ArrayF for errors if ""errors"" is true. ~THnSparseArrayChunk(); Destructor. void AddBin(Int_t idx, const Char_t* idxbuf); Create a new bin in this chunk. void Sumw2(); Turn on support of errors. THnSparseArrayChunk(const THnSparseArrayChunk& ). THnSparseArrayChunk& operator=(const THnSparseArrayChunk& ). THnSparseArrayChunk(); {}. void AddBinContent(Int_t idx, Double_t v = 1.). Int_t GetEntries() const; { return fCoordinatesSize / fSingleCoordinateSize; }. Bool_t Matches(Int_t idx, const Char_t* idxbuf) const; Check whether bin at idx batches idxbuf.; If we don't store indexes we trust the caller that it does match,; see comment in THnSparseCompactBinCoord::GetHash(). » Author: Axel Naumann (2007-09-11) » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THnSparseArrayChunk.html:6179,Inherit,Inheritance,6179,root/html534/THnSparseArrayChunk.html,https://root.cern,https://root.cern/root/html534/THnSparseArrayChunk.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TLeaf&TLeaf::operator=(const TLeaf&). Data Members; public:. enum TLeaf::[unnamed] { kIndirectAddress; kNewValue; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TBranch*TLeaf::fBranch! Pointer to supporting branch (we do not own the branch); Bool_tTLeaf::fIsRange(=kTRUE if leaf has a range, kFALSE otherwise); Bool_tTLeaf::fIsUnsigned(=kTRUE if unsigned, kFALSE otherwise); TLeaf*TLeaf::fLeafCountPointer to Leaf count if variable length (we do not own the counter); Int_tTLeaf::fLenNumber of fixed length elements; Int_tTLeaf::fLenTypeNumber of bytes for this data type; Bool_tfMaximumMaximum value if leaf range is specified; Bool_tfMinimumMinimum value if leaf range is specified; TStringTNamed::fNameobject identifier; Int_tTLeaf::fNdata! Number of elements in fAddress data buffer; Int_tTLeaf::fOffsetOffset in ClonesArray object (if one); Bool_t**fPointer!Address of a pointer to data buffer!; TStringTNamed::fTitleobject title; Bool_t*fValue!Pointer to data buffer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLeafO(); Default constructor for LeafB*-*-*-*-*-*-*-*-; *-* ============================. TLeafO(TBranch* parent, const char* name, const char* type); Create a LeafB*-*-; *-* ==============; -. ~TLeafO(); Default destructor for a LeafB*-*-*-*-*-*-; *-* ===============================. void Export(TClonesArray* list, Int_t n); -*Export element from local leaf buffer to ClonesArray; *-* ====================================================. void FillBasket(TBuffer& b); -*-*-*-*Pack leaf elements in ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TLeafO.html:6987,variab,variable,6987,root/html528/TLeafO.html,https://root.cern,https://root.cern/root/html528/TLeafO.html,6,['variab'],['variable']
Modifiability,"t::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TLeaf&TLeaf::operator=(const TLeaf&). Data Members; public:. enum TLeaf::[unnamed] { kIndirectAddress; kNewValue; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TBranch*TLeaf::fBranch! Pointer to supporting branch (we do not own the branch); Bool_tTLeaf::fIsRange(=kTRUE if leaf has a range, kFALSE otherwise); Bool_tTLeaf::fIsUnsigned(=kTRUE if unsigned, kFALSE otherwise); TLeaf*TLeaf::fLeafCountPointer to Leaf count if variable length (we do not own the counter); Int_tTLeaf::fLenNumber of fixed length elements; Int_tTLeaf::fLenTypeNumber of bytes for this data type; Char_tfMaximumMaximum value if leaf range is specified; Char_tfMinimumMinimum value if leaf range is specified; TStringTNamed::fNameobject identifier; Int_tTLeaf::fNdata! Number of elements in fAddress data buffer; Int_tTLeaf::fOffsetOffset in ClonesArray object (if one); Char_t**fPointer!Address of a pointer to data buffer!; TStringTNamed::fTitleobject title; Char_t*fValue!Pointer to data buffer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLeafB(); -- Default constructor. TLeafB(TBranch* parent, const char* name, const char* type); -- Create a LeafB. ~TLeafB(); -- Destructor. void Export(TClonesArray* list, Int_t n); -- Export element from local leaf buffer to a ClonesArray. void FillBasket(TBuffer& b); -- Pack leaf elements into Basket output buffer. const char * GetTypeName() const; -- Returns name of leaf type. void Import(TClonesArray* list, Int_t n); -- Import element from ClonesArray into local leaf buffer. void PrintValue(In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TLeafB.html:7050,variab,variable,7050,root/html528/TLeafB.html,https://root.cern,https://root.cern/root/html528/TLeafB.html,6,['variab'],['variable']
Modifiability,"t::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum TRefCnt::EReferenceFlag { kStaticInit; };. protected:. TStringTNamed::fNameobject identifier; UInt_tTRefCnt::fRefs(1 less than) number of references; TStringTNamed::fTitleobject title. private:. Int_tfBarHeightHeight of underline or overstrike bar; FontAttributes_tfFAActual font attributes obtained when the font was created; FontMetrics_tfFMCached font metrics; FontH_tfFontHFont handle (derived from fontstruct); FontStruct_tfFontStructLow level graphics fontstruct; TObjString*fNamedHashPointer to the named object TGFont was based on; Int_tfTabWidthWidth of tabs in this font (pixels).; charfTypes[256]Array giving types of all characters in; Int_tfUnderlineHeightHeight of underline bar (used for drawing; Int_tfUnderlinePosOffset from baseline to origin of underline bar; Int_tfWidths[256]Array giving widths of all possible characters in the font. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TGFont(); Delete font. void GetFontMetrics(FontMetrics_t* m) const; Get font metrics. FontStruct_t operator()() const; Not inline due to a bug in g++ 2.96 20000731 (Red Hat Linux 7.0). void Print(Option_t* option = """") const; Print font info. Int_t PostscriptFontName(TString* dst) const; Return the name of the corresponding Postscript font for this TGFont. The return value is the pointsize of the TGFont. The name of the; Postscript font is appended to ds. If the font does not exist on the printer, the print job will fail at; print time. Given a ""reasonable"" Postscript printer, the following; TGFont font families should print correctly:. Avant Garde, Arial, Bookman, Courier, Courier New, Geneva,; Helvetica, Monaco, New Century Schoolbook, New York,; Palatino, Symbol, Times, Times New Roman, Zapf Chancery,; and Zapf Dingbats. Any other TGFont font families may not print correctly because the; computed Postscript font name may be incorre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGFont.html:7668,Inherit,Inheritance,7668,root/html532/TGFont.html,https://root.cern,https://root.cern/root/html532/TGFont.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::d_ptr; EMouseButtonfButton; TQtWidget*fCanvasWidget; boolfDeleteNotify; QColor*fEraseColorColor to paint widget background with our PainEvent; QPixmap*fErasePixmappixmap to paint widget background with our PainEvent; QCursor*fGrabButtonCursor; UInt_tfGrabButtonMaskmodifier button mask for TVirtualX::GrabButton; UInt_tfGrabEventButtonMaskinput event mask for TVirtualX::GrabButton; UInt_tfGrabEventPointerMaskinput event mask for TVirtualX::GrabPointer; QCursor*fGrabPointerCursor; map<QKeySequence,QShortcut*>fGrabbedKey; TQtClientGuard*fGuard; boolfIsClosing; TGWindow*fMyRootWindowback pointer to the host window object; QCursor*fNormalPointerCursor; Bool_tfPointerOwner; UInt_tfSaveSelectInputMaskTo save dutinr the grabbing the selectInput; UInt_tfSelectEventMaskinput mask for SelectInput; ushortQPaintDevice::paintersrefcount; static const QMetaObjectQObject::staticQtMetaObject. private:. static const QMetaObjectExtraDatastaticMetaObjectExtraData. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TQtClientWidget(TQtClientGuard* guard, QWidget* parent = 0, const char* name = 0, Qt::WFlags f = 0). ~TQtClientWidget(); fprintf(stderr, ""TQtClientWidget::~TQtClientWidget dtor %p\n"", this);; remove the event filter. void closeEvent(QCloseEvent* ev); This Qt QCloseEvent event handler. void setEraseColor(const QColor& color); Color to paint widget background with our PainEvent. void setErasePixmap(const QPixmap& pixmap); pixmap to paint widget background with our PainEvent. bool IsGrabbed(Event_t& ev); - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -; XGrabButton(3X11) XLIB FUNCTIONS XGrabButton(3X11); * The pointer is not grabbed, and the specified button is logically; pressed when the specified modifier keys are logically down,; and no other buttons or modifier keys are logically down.; * The grab_window contains the pointer.; * The confine_to window (if any) is viewable.; * A passive grab on the same bu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TQtClientWidget.html:21380,Inherit,Inheritance,21380,root/html604/TQtClientWidget.html,https://root.cern,https://root.cern/root/html604/TQtClientWidget.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Bool_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Bool_tfLogX; Bool_tfLogY; Bool_tfLogZ; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TObject*fPlotPlot object.; TStringfPlotOptionOptions for the plot-painter.; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEvePlot3D.html:18319,variab,variable,18319,root/html528/TEvePlot3D.html,https://root.cern,https://root.cern/root/html528/TEvePlot3D.html,1,['variab'],['variable']
Modifiability,"t::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Bool_tfLogX; Bool_tfLogY; Bool_tfLogZ; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TObject*fPlotPlot object.; TStringfPlotOptionOptions for the plot-painter.; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEvePlot3D.html:18685,variab,variable,18685,root/html530/TEvePlot3D.html,https://root.cern,https://root.cern/root/html530/TEvePlot3D.html,5,['variab'],['variable']
Modifiability,"t::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; TEveElement::List_tTEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; Bool_tfLogX; Bool_tfLogY; Bool_tfLogZ; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TObject*fPlotPlot object.; TStringfPlotOptionOptions for the plot-painter.; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag use",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEvePlot3D.html:19059,variab,variable,19059,root/html602/TEvePlot3D.html,https://root.cern,https://root.cern/root/html602/TEvePlot3D.html,4,['variab'],['variable']
Modifiability,"t::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Bool_tTEveElement::fDestructing!; Float_tfExtrudeextrude depth; Int_tfFontFileFTFont file name; Int_tfFontModeFTFont FTGL class id; Int_tfFontSizeFTFont face size; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Bool_tfLightingforce lighting; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; Float_tfPolygonOffset[2]depth test; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringfTexttext; Color_tfTextColortext color; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveText.html:18523,variab,variable,18523,root/html528/TEveText.html,https://root.cern,https://root.cern/root/html528/TEveText.html,1,['variab'],['variable']
Modifiability,"t::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tfExtrudeextrude depth; Int_tfFontFileFTFont file name; Int_tfFontModeFTFont FTGL class id; Int_tfFontSizeFTFont face size; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Bool_tfLightingforce lighting; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; Float_tfPolygonOffset[2]depth test; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringfTexttext; Color_tfTextColortext color; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveText.html:18757,variab,variable,18757,root/html530/TEveText.html,https://root.cern,https://root.cern/root/html530/TEveText.html,5,['variab'],['variable']
Modifiability,"t::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; TEveElement::List_tTEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; TEveWindow*fCurrentWindow; TEveWindow*fDefaultContainer; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveWindowManager.html:23239,variab,variable,23239,root/html602/TEveWindowManager.html,https://root.cern,https://root.cern/root/html602/TEveWindowManager.html,4,['variab'],['variable']
Modifiability,"t::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Float_tTEveProjected::fDepthz coordinate; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Double_tTEveTrackList::fLimPHighest track p in the container.; Double_tTEveTrackList::fLimPtHighest track pT in the container.; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Double_tTEveTrackList::fMaxPMaximum track pfor display selection.; Double_tTEveTrackList::fMaxPtMaximum track pTfor display selection.; Double_tTEveTrackList::fMinPMinimum track pfor display selection.; Double_tTEveTrackList::fMinPtMinimum track pTfor display selection.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; TEveTrackPropagator*TEveTrackList::fPropagatorBasic track rendering parameters, not enforced to e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveTrackListProjected.html:22611,variab,variable,22611,root/html530/TEveTrackListProjected.html,https://root.cern,https://root.cern/root/html530/TEveTrackListProjected.html,5,['variab'],['variable']
Modifiability,"t::fLastWriteBufferSize! Size of the buffer last time we wrote it to disk; Int_tTKey::fLeftNumber of bytes left in current segment; TDirectory*TKey::fMotherDir! pointer to mother directory; TStringTNamed::fNameobject identifier; Int_tTKey::fNbytesNumber of bytes for the object on file; Int_tTBasket::fNevBufNumber of entries in basket; Int_tTBasket::fNevBufSizeLength in Int_t of fEntryOffset OR fixed length of each entry if fEntryOffset is null!; Int_tTKey::fObjlenLength of uncompressed object in bytes; Bool_tTBasket::fOwnsCompressedBuffer! Whether or not we own the compressed buffer.; UShort_tTKey::fPidOffset! Offset to be added to the pid index in this key/buffer. This is actually saved in the high bits of fSeekPdir; TSQLResult**fResultPtr!; TSQLRow**fRowPtr!; Long64_tTKey::fSeekKeyLocation of object on file; Long64_tTKey::fSeekPdirLocation of parent directory on file; TStringTNamed::fTitleobject title; Int_tTKey::fVersionKey version identifier. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBasketSQL(); Default constructor. TBasketSQL(const char* name, const char* title, TBranch* branch, TSQLResult** rs, TString* insert_query, vector<Int_t>* vc, TSQLRow** row); Regular constructor. ~TBasketSQL(); Destructor. void CreateBuffer(const char* name, TString title, vector<Int_t>* vc, TBranch* branch, TSQLResult** rs); Create a TSQLBuffer for this basket. void PrepareBasket(Long64_t entry); Prepare the basket for the next entry. Int_t ReadBasketBytes(Long64_t pos, TFile* file); See TBasket::ReadBasketBytes. This is not implemented in TBasketSQL. Int_t ReadBasketBuffers(Long64_t pos, Int_t len, TFile* file); See TBasket::ReadBasketBuffers. This is not implemented in TBasketSQL. void Reset(); See TBasket::Reset. void Update(Int_t offset, Int_t skipped); See TBasket::Update. TBasketSQL(const TBasketSQL& ). TBasketSQL& operator=(const TBasketSQL& ). TSQLResult * GetResultSet(); { return *fResultPtr;}. » Author: Philippe Canal 2005 »",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBasketSQL.html:9671,Inherit,Inheritance,9671,root/html532/TBasketSQL.html,https://root.cern,https://root.cern/root/html532/TBasketSQL.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::fTextAlignText alignment; Float_tTAttText::fTextAngleText angle; Color_tTAttText::fTextColorText color index; Font_tTAttText::fTextFontText font number; Float_tTAttText::fTextSizeText size; Float_tfTickSizeSize of primary tick mark in NDC; TStringfTimeFormatTime format, ex: 09/12/99 12:34:00; TStringfTitleaxis title; Float_tfTitleOffsetOffset of title wrt axis; Float_tfTitleSizeSize of title in NDC; Double_tfWmaxHighest value on the axis; Double_tfWminLowest value on the axis; Double_tTLine::fX1X of 1st point; Double_tTLine::fX2X of 2nd point; static Float_tfXAxisExpXOffset!Exponent X offset for the X axis; static Float_tfXAxisExpYOffset!Exponent Y offset for the X axis; Double_tTLine::fY1Y of 1st point; Double_tTLine::fY2Y of 2nd point; static Float_tfYAxisExpXOffset!Exponent X offset for the Y axis; static Float_tfYAxisExpYOffset!Exponent Y offset for the Y axis; static Int_tfgMaxDigits!Number of digits above which the 10>N notation is used. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGaxis(). TGaxis default constructor.; ; . TGaxis(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax, Double_t wmin, Double_t wmax, Int_t ndiv = 510, Option_t* chopt = """", Double_t gridlength = 0). TGaxis normal constructor.; ; . TGaxis(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax, const char* funcname, Int_t ndiv = 510, Option_t* chopt = """", Double_t gridlength = 0). Constructor with a TF1 to map axis values.; ; . TGaxis(const TGaxis& ). Copy constructor.; ; . TGaxis& operator=(const TGaxis& ). Assignement operator.; ; . ~TGaxis(). TGaxis default destructor.; ; . void CenterLabels(Bool_t center = kTRUE). If center = kTRUE axis labels are centered in the center of the bin.; The default is to center on the primary tick marks.; This option does not make sense if there are more bins than tick marks.; ; . void CenterTitle(Bool_t center = kTRUE). If center = kTRUE axis title will be centered.; The default is right adju",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGaxis.html:34222,Inherit,Inheritance,34222,root/html604/TGaxis.html,https://root.cern,https://root.cern/root/html604/TGaxis.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::fTextAlignText alignment; Float_tTAttText::fTextAngleText angle; Color_tTAttText::fTextColorText color index; Font_tTAttText::fTextFontText font number; Float_tTAttText::fTextSizeText size; Float_tfTickSizeSize of primary tick mark in NDC; TStringfTimeFormatTime format, ex: 09/12/99 12:34:00; TStringfTitleaxis title; Float_tfTitleOffsetOffset of title wrt axis; Float_tfTitleSizeSize of title in NDC; Double_tfWmaxHighest value on the axis; Double_tfWminLowest value on the axis; Double_tTLine::fX1X of 1st point; Double_tTLine::fX2X of 2nd point; static Float_tfXAxisExpXOffset!Exponent X offset for the X axis; static Float_tfXAxisExpYOffset!Exponent Y offset for the X axis; Double_tTLine::fY1Y of 1st point; Double_tTLine::fY2Y of 2nd point; static Float_tfYAxisExpXOffset!Exponent X offset for the Y axis; static Float_tfYAxisExpYOffset!Exponent Y offset for the Y axis; static Int_tfgMaxDigits!Number of digits above which the 10>N notation is used. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGaxis(); TGaxis default constructor. TGaxis(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax, Double_t wmin, Double_t wmax, Int_t ndiv = 510, Option_t* chopt = """", Double_t gridlength = 0); TGaxis normal constructor.; See explanation of parameters in PaintAxis. TGaxis(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax, const char* funcname, Int_t ndiv = 510, Option_t* chopt = """", Double_t gridlength = 0); TGaxis constructor with a TF1 to map axis values. See explanation of parameters in PaintAxis; Instead of the wmin,wmax arguments of the normal constructor, the; name of a TF1 function can be specified. This function will be used; by TGaxis::PaintAxis to map the user coordinates to the axis values; and ticks.; Examples:; void gaxis3a(); {; gStyle->SetOptStat(0);. TH2F *h2 = new TH2F(""h"",""Axes"",100,0,10,100,-2,2);; h2->Draw();. TF1 *f1=new TF1(""f1"",""-x"",-10,10);; TGaxis *A1 = new TGaxis(0,2,10,2,""f1"",510,""-"");; A1->Se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGaxis.html:13658,Inherit,Inheritance,13658,root/html534/TGaxis.html,https://root.cern,https://root.cern/root/html534/TGaxis.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static const TGFont*fgDefaultFont; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGGC*fgDefaultGC; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*fgDefaultSelectedBackgroundGC; static TGGC*fgDefaultSelectedGC; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Init(Pixel_t bg); Initialize a text view widget. TGTextView(const TGWindow* parent = 0, UInt_t w = 1, UInt_t h = 1, Int_t id = -1, UInt_t sboptions = 0, Pixel_t back = GetWhitePixel()); Create a text view widget. TGTextView(const TGWindow* parent, UInt_t w, UInt_t h, TGText* text, Int_t id = -1, UInt_t sboptions = 0, Pixel_t back = GetWhitePixel()); Create a text view widget. TGTextView(const TGWindow* parent, UInt_t w, UInt_t h, const char* string, Int_t id = -1, UInt_t sboptions = 0, Pixel_t back = GetWhitePixel()); Create a text view widget. ~TGTextView(); Cleanup text view widget. void SetBackground(Pixel_t p); set background color. void SetSelectBack(Pixel_t p); set selected text background color. void SetSelectFore(Pixel_t p); set selected text color. void SetText(TGText* text); Adopt a new text buffer. The text will be deleted by this object. void AddText(TGText* text); Add text to the view widget. void AddLine(const char* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGTextView.html:24018,Inherit,Inheritance,24018,root/html532/TGTextView.html,https://root.cern,https://root.cern/root/html532/TGTextView.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::fgListTreeIcons[9]; static const TGPicture*TEveElement::fgRnrIcons[4]. protected:. UChar_tTEveElement::fCSCBits; Bool_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Bool_tTEveElement::fDestructing!; TGLSceneInfo*fGLSceneInfo; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; TEveScene*fScene; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveViewer*fViewer; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveSceneInfo.html:17133,variab,variable,17133,root/html528/TEveSceneInfo.html,https://root.cern,https://root.cern/root/html528/TEveSceneInfo.html,1,['variab'],['variable']
Modifiability,"t::fgListTreeIcons[9]; static const TGPicture*TEveElement::fgRnrIcons[4]. protected:. UChar_tTEveElement::fCSCBits; Bool_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; TGLSceneInfo*fGLSceneInfo; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; TEveScene*fScene; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveViewer*fViewer; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveSceneInfo.html:17367,variab,variable,17367,root/html530/TEveSceneInfo.html,https://root.cern,https://root.cern/root/html530/TEveSceneInfo.html,5,['variab'],['variable']
Modifiability,"t::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. ULong_tfAllMembersCountNumber of all members (class and its daughters); Bool_tfCollapsedCondition - true if node is collapsed (we don't see dauthers); Float_tfHeightHeight of outlining box; UInt_tfLevelLevel number; UInt_tfMaxLevelNumber of levels displayed when the node is top node on scene; UInt_tfMaxObjectsNumber of objects displayed when the node is top node on scene; TList*fMembersList of daughter nodes; ULong_tfMembersCountNumber of members in class; TStringfNameName of node; ENodeTypefNodeTypeType of node; TStructNode*fParentPointer to parent node, NULL if not exist; void*fPointerPointer to data (address of variable); ULong_tfSizeMemory allocated by class without pointers and list elements; ULong_tfTotalSizeTotal allocated memory; TStringfTypeNameName of type; Bool_tfVisibleCondition - true if node is visible; Float_tfWidthWidth of outlining box; Float_tfXX coordinate in 3D space; Float_tfYY coordinate in 3D space; static EScalingTypefgScalBy. Class Charts. Inheritance Chart:. TObject. ←; TStructNode. Function documentation; TStructNode(TString name, TString typeName, void* pointer, TStructNode* parent, ULong_t size, ENodeType type); Constructs node with name ""name"" of class ""typeName"" and given parent ""parent"" which represents pointer ""pointer"".; Size of node is set to ""size"" and type is set to ""type"". ~TStructNode(); Destructs list of nodes. Int_t Compare(const TObject* obj) const; Overrided method. Compare to objects of TStructNode class. ULong_t G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStructNode.html:7940,variab,variable,7940,root/html602/TStructNode.html,https://root.cern,https://root.cern/root/html602/TStructNode.html,4,['variab'],['variable']
Modifiability,"t::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Double_tfAA of element; Double_t*fAbundances[fNisotopes] Array of relative isotope abundances; TObjArray*fIsotopesList of isotopes; Int_tfNNumber of nucleons; TStringTNamed::fNameobject identifier; Int_tfNisotopesNumber of isotopes for the element; TStringTNamed::fTitleobject title; Int_tfZZ of element; static TGeoElement::EGeoElementkElemDefined; static TGeoElement::EGeoElementkElemUsed; static TGeoElement::EGeoElementkElementChecked. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoElement(); Default constructor. TGeoElement(const char* name, const char* title, Int_t z, Double_t a); Obsolete constructor. TGeoElement(const char* name, const char* title, Int_t nisotopes); Element having isotopes. TGeoElement(const char* name, const char* title, Int_t z, Int_t n, Double_t a); Constructor. void Print(Option_t* option = """") const; Print this isotope. TGeoElementTable * GetElementTable(); Returns pointer to the table. void AddIsotope(TGeoIsotope* isotope, Double_t relativeAbundance); Add an isotope for this element. All isotopes have to be isotopes of the same element. Double_t Neff() const; Returns effective number of nucleons. TGeoIsotope * GetIsotope(Int_t i) const; Return i-th isotope in the element. Double_t GetRelativeAbundance(Int_t i) const; Return relative abundance of i-th isotope in this element. TGeoElement(const TGeoElement& other). TGeoElement & operator=(const TGeoElement& other). virtual ~TGeoElemen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoElement.html:7289,Inherit,Inheritance,7289,root/html602/TGeoElement.html,https://root.cern,https://root.cern/root/html602/TGeoElement.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TVirtualPacketizer::EStatusBitskIsTree; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Bool_tfAWLastFillWhether to fill the last measurement; Int_tfActWrksLastActive workers at fProcTimeLast; Long_tfCircNCircularity; TNtupleD*fCircProgKeeps circular info for ""instantenous""; TList*fConfigParamsList of configuration parameters; TStringfDataSetName of the dataset being processed (for dataset-driven runs); Float_tfEffSessLastNumber of effective sessions at fProcTimeLast; Float_tfEvtRateLastEvt rate at fProcTimeLast; TList*fFailedPacketsa list of packets that failed while processing; Float_tfInitTimetime before processing; Float_tfMBsReadLastMBs read at fProcTimeLast; Double_tfMaxPacketTimemaximum packet time; Double_tfMinPacketTimeminimum packet time; Float_tfProcTimetime since start of processing; Float_tfProcTimeLastTime of the last measurement; TTimer*fProgressprogress updates timer; TNtuple*fProgressPerf{Active workers, evt rate, MBs read} as a function of processing time; TProofProgressStatus*fProgressStatuspointer to status in the player.; Float_tfReportPeriodTime between reports if nothing changes (estimated proc time / 100); TMap*fSlaveStatsslave status, keyed by correspondig TSlave; TTimefStartTimetime offset; Bool_tfStopTermination of Process() requested?; Float_tfTimeUpdttime between updates; Long64_tfTotalEntriestotal number of entries to be distributed;; TVirtualPacketizer::EUseEstOptfUseEstOptControl usage of estimated values for the progress info; Bool_tfValidConstructed properly?; static TVirtualPacketizer::EUseEstOptkEstAverage; sta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualPacketizer.html:8050,config,configuration,8050,root/html602/TVirtualPacketizer.html,https://root.cern,https://root.cern/root/html602/TVirtualPacketizer.html,2,['config'],['configuration']
Modifiability,"t::kIsReferenced; static TFormula::(anonymous)kLinear; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TFormula::(anonymous)kNormalized; static TObject::(anonymous)TObject::kNotDeleted; static TFormula::(anonymous)kNotGlobal; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TBitsfAlreadyFound! cache for information; Double_t*fConst[fNconst] Array of fNconst formula constants; TString*fExpr[fNoper] List of expressions; TString*fExprOptimized![fNOperOptimized] List of expressions; TObjArrayfFunctionsArray of function calls to make; TObjArrayfLinearPartsLinear parts if the formula is linear (contains '|' or ""++""); Int_tfNOperOptimized!Number of operators after optimization; TStringTNamed::fNameobject identifier; TString*fNames[fNpar] Array of parameter names; Int_tfNconstNumber of constants; Int_tfNdimDimension of function (1=1-Dim, 2=2-Dim,etc); Int_tfNoperNumber of operators; Int_tfNparNumber of parameters; Int_tfNstringNumber of different constants character strings; Int_tfNumberformula number identifier; Int_tfNvalNumber of different variables in expression; TOperOffset*fOperOffset![fNOperOptimized] Offsets of operrands; Int_t*fOperOptimized![fNOperOptimized] List of operators. (See documentation for changes made at version 7); TFormula::TFuncGfOptimal!pointer to optimal function; Double_t*fParams[fNpar] Array of fNpar parameters; TFormulaPrimitive**fPredefined![fNPar] predefined function; TStringTNamed::fTitleobject title; static TFormula::(anonymous)kAdd; static TFormula::(anonymous)kAnd; static TFormula::(anonymous)kBinary; static TFormula::(anonymous)kBitAnd; static TFormula::(anonymous)kBitOr; static TFormula::(anonymous)kBoolOptimize; static TFormula::(anonymous)kBoolOptimizeAnd; static TFormula::(an",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFormula.html:13063,variab,variables,13063,root/html602/TFormula.html,https://root.cern,https://root.cern/root/html602/TFormula.html,2,['variab'],['variables']
Modifiability,"t::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TDictionary::ESTLTypeTDictionary::kNone; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TDictionary::ESTLTypeTDictionary::kSet; static TObject::(anonymous)TObject::kSingleKey; static TDictionary::ESTLTypeTDictionary::kUnorderedMap; static TDictionary::ESTLTypeTDictionary::kUnorderedMultimap; static TDictionary::ESTLTypeTDictionary::kUnorderedMultiset; static TDictionary::ESTLTypeTDictionary::kUnorderedSet; static TDictionary::ESTLTypeTDictionary::kVector; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Int_tfArrayDimNumber of array dimensions; TStringfArrayIndexString representation of the index variable name; Int_t*fArrayMaxIndex[fArrayDim] Maximum index for each dimension; TClass*fClass!pointer to the class; TDataType*fDataType!pointer to data basic type descriptor; TStringfFullTypeNamefull type description of data member, e,g.: ""class TDirectory*"".; DataMemberInfo_t*fInfo!pointer to CINT data member info; Long_tfOffsetoffset; TList*fOptionslist of possible values 0=no restrictions; Long_tfPropertyProperty; Int_tfSTLContSTL type; TStringfTrueTypeNamefull type description with no typedef; TStringfTypeNamedata member type, e,g.: ""class TDirectory*"" -> ""TDirectory"".; TMethodCall*fValueGetter!method that returns a value;; TMethodCall*fValueSetter!method which sets value;; static TDataMember::(anonymous)kObjIsPersistent. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDataMember(DataMemberInfo_t* info = 0, TClass* cl = 0); Default TDataMember ctor. TDataMembers are constructed in TClass; via a call to TCling::CreateListOfDataMembers(). It parses the comment; string, initializes optionlist and getter/setter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TDataMember.html:12772,variab,variable,12772,root/html604/TDataMember.html,https://root.cern,https://root.cern/root/html604/TDataMember.html,2,['variab'],['variable']
Modifiability,"t::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringfAlignmentcolumn alignment: 'l' for justify left, 'c' for center, 'r' for right; TVirtualPad*fBBCanvascanvas for bounding box determination; Int_tTDocDirective::fCountercounter to generate unique names, -1 to ignore; TDocOutput*TDocDirective::fDocOutputparser invoking this handler; TDocParser*TDocDirective::fDocParserparser invoking this handler; Int_tfFontSizefontsize for current latex block, in pixels; THtml*TDocDirective::fHtmlparser's THtml object; TMacro*fLatexcollection of lines; TStringTNamed::fNameobject identifier; TStringTDocDirective::fParametersparameters to the directive; Bool_tfSepIsRegexpwhether fSeparator is a regexp expression; TStringfSeparatorcolumn separator, often ""=""; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TDocLatexDirective(); Destructor. void AddLine(const TSubString& line); Add a latex line. void CreateLatex(const char* filename); Create a gif file named filename from a latex expression in fLatex.; Called when ""Begin_Latex""/""End_Latex"" is processed. void GetBoundingBox(TLatex& latex, const char* text, Float_t& width, Float_t& height); Determines the bounding box for text as height and width.; Assumes that we are in batch mode. TList* GetListOfLines() const; Get the list of lines as TObjStrings. Bool_t GetResult(TString& result); convert fLatex to a gif by creating a TLatex, drawing it on a; temporary canvas, and saving that to a filename in the output; directory. void AddParameter(const TString& name, const char* value = 0); Parse fParameters, setting fFontSize, fAlignment, and fSeparator. const char* GetEndTag() const; get the tag ending this directive. void DeleteOutput() const; Delete output for the parser's current class or modul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDocLatexDirective.html:8376,Inherit,Inheritance,8376,root/html602/TDocLatexDirective.html,https://root.cern,https://root.cern/root/html602/TDocLatexDirective.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::kOverwrite; static TDataSet::EDataSetPassTDataSet::kPrune; static TDataSet::EDataSetPassTDataSet::kRefs; static TDataSet::EBitOptTDataSet::kReset; static TDataSet::EBitOptTDataSet::kSet; static TObject::(anonymous)TObject::kSingleKey; static TDataSet::EDataSetPassTDataSet::kStop; static TDataSet::EDataSetPassTDataSet::kStruct; static TDataSet::EDataSetPassTDataSet::kUp; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. ULong_tfLastIndxindex pof the last used table row;; void*fLastRowpointer to the last used table row; fLastRow = table[fLastIndx]; TSeqCollection*TDataSet::fListList of the the the objects included into this dataset; TStringTNamed::fNameobject identifier; TDataSet*TDataSet::fParentpointer to mother of the directory; TTable*fTablethe ""TTable"" object this object is pthe proxy for; TStringTNamed::fTitleobject title; static TDataSet*TDataSet::fgMainSetpointer the main dataset;. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void AddAt(TDataSet* dataset, Int_t idx); {TDataSet::AddAt(dataset,idx);}. void * operator[](Int_t i). const void * operator[](Int_t i) const; if (!GetThisTable()->BoundsOk(""TChair::operator[]"", i)); i = 0;. TTable * GetThisTable(); {return fTable; }. const TTable * GetThisTable() const; {return fTable; }. void * GetOffset(const void* base, ULong_t offset); { return (void *)((Char_t *)base + offset);}. TChair(); { ; }. TChair(TTable* table); { ; }. TChair(const TChair& org); TChair &operator=(const TChair &rhs){ assert(0); return rhs;}. {assert(0);}. virtual ~TChair(); {;}. void Adopt(Int_t n, void* array); {GetThisTable()->Adopt(n,array);}. void AddAt(TDataSet* dataset, Int_t idx). const void * At(Int_t i) const; {return GetThisTable()->At(i);}. void Browse(TBrowser* b); {GetThisTable()->Browse(b);}. void CopySet(TChair& chair); {GetThisTable()->CopySet(*chair.GetThisTable());}. Int_t CopyRows(const TChair* srcChair, Int_t srcRow = 0,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TChair.html:11253,Inherit,Inheritance,11253,root/html602/TChair.html,https://root.cern,https://root.cern/root/html602/TChair.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TThread*fConsumerconsumer thread; TFile*fFilereference to the file; TMutex*fMutexPendingListmutex for the pending list; TMutex*fMutexReadListmutex for the list of read blocks; TCondition*fNewBlockAddedsignal the addition of a new pending block; TStringfPathCachepath to the cache directory; TList*fPendingBlockslist of pending blocks to be read; TCondition*fReadBlockAddedsignal the addition of a new red block; TList*fReadBlockslist of blocks read; TSemaphore*fSemChangeFilesemaphore used when changin a file in TChain; TSemaphore*fSemMasterWorkersemaphore used to kill the consumer thread; TSemaphore*fSemWorkerMastersemaphore used to notify the master that worker is killed; Bool_tfThreadJoinedmark if async thread was joined; TStopwatchfWaitTimetime wating to prefetch a buffer (in usec). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFilePrefetch(TFile* ); Constructor. ~TFilePrefetch(); Destructor. void WaitFinishPrefetch(); Killing the async prefetching thread. void ReadAsync(TFPBlock* , Bool_t& ); Read one block and insert it in prefetchBuffers list. void ReadListOfBlocks(); Get blocks specified in prefetchBlocks. Bool_t BinarySearchReadList(TFPBlock* , Long64_t , Int_t , Int_t* ); Search for a requested element in a block and return the index. Long64_t GetWaitTime(); Return the time spent wating for buffer to be read in microseconds. Bool_t ReadBuffer(char* , Long64_t , Int_t ); Return a prefetched element. void ReadBlock(Long64_t* , Int_t* , Int_t ); Create a TFPBlock object or recycle one and add it to the prefetchBlocks list. void AddPendingBlock(TFPBlock* ); Safe method to add a block to the pendingList. TFPBlock* GetPendingBlock(); Safe method to remove a block from the pendingList. void AddReadBlock(TFPBlock* ); Safe method to add a block to the readList.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFilePrefetch.html:7112,Inherit,Inheritance,7112,root/html602/TFilePrefetch.html,https://root.cern,https://root.cern/root/html602/TFilePrefetch.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Double_t_epsAbsAbsolute precision; Double_t_epsRelRelative precision; const RooAbsFunc*RooAbsIntegrator::_functionPointer to function binding of integrand; Bool_tRooAbsIntegrator::_printEvalCounterIf true print number of function evaluation required for integration; Bool_t_useIntegrandLimitsUse limits in function binding?; Bool_tRooAbsIntegrator::_validIs integrator in valid state?; Double_t*_x! do not persist; Double_t_xmax! Upper integration bound; Double_t_xmin! Lower integration bound. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerIntegrator(RooNumIntFactory& fact); Register RooGaussKronrodIntegrator1D, its parameters and capabilities with RooNumIntConfig. RooGaussKronrodIntegrator1D(); coverity[UNINIT_CTOR]; Default constructor. RooGaussKronrodIntegrator1D(const RooAbsFunc& function, const RooNumIntConfig& config); Construct integral on 'function' using given configuration object. The integration; range is taken from the definition in the function binding. RooGaussKronrodIntegrator1D(const RooAbsFunc& function, Double_t xmin, Double_t xmax, const RooNumIntConfig& config); Construct integral on 'function' using given configuration object in the given range. RooAbsIntegrator* clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; Clone integrator with given function and configuration. Needed for RooNumIntFactory. Bool_t initialize(); Perform one-time initialization of integrator. ~RooGaussKronrodIntegrator1D(); Destructor. Bool_t setLimits(Double_t* xmin, Double_t* xmax); Change our integration limits. Return kTRUE if the new limits are; ok, or otherwise kFALSE. Always returns kFALSE and does nothing; if this object was constructed to always use our integrand's limits. Bool_t checkLimits() const; Check that our integration range is finite and otherwise return kFALSE.; Up",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooGaussKronrodIntegrator1D.html:8553,config,config,8553,root/html602/RooGaussKronrodIntegrator1D.html,https://root.cern,https://root.cern/root/html602/RooGaussKronrodIntegrator1D.html,8,['config'],"['config', 'configuration']"
Modifiability,"t::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tfDimensionDimension of the current expression; TList*fFormulaList! Pointer to a list of coordinated list TTreeFormula (used by Scan and Query); TH1*fHistogram! Pointer to histogram used for the projection; TList*fInput! input list to the selector; const char*fScanFileNameName of the file where Scan is redirected; Bool_tfScanRedirectSwitch to redirect TTree::Scan output to a file; Long64_tfSelectedRowsNumber of selected entries; TSelectorDraw*fSelector! Pointer to current selector; TClass*fSelectorClass! Pointer to the actual class of the TSelectorFromFile; TSelector*fSelectorFromFile! Pointer to a user defined selector created by this TTreePlayer object; TSelector*fSelectorUpdate! Set to the selector address when it's entry list needs to be updated by the UpdateFormulaLeaves function; TTree*fTree! Pointer to current Tree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TTreePlayer(); Default Tree constructor*-*-*-; *-* ========================. ~TTreePlayer(); Tree destructor*-*-*-*-; *-* =================. TVirtualIndex * BuildIndex(const TTree* T, const char* majorname, const char* minorname); Build the index for the tree (see TTree::BuildIndex). TTree * CopyTree(const char* selection, Option_t* option, Long64_t nentries, Long64_t firstentry); copy a Tree with selection; make a clone of this Tree header.; then copy the selected entries. selection is a standard selection expression (see TTreePlayer::Draw); option is reserved for possible future use; nentries is the number of entries to process (default is all); first is the first entry to process (default is 0). IMPORTANT: The copied tree stays connected with this tree until this tree; is deleted. In particular, any changes in branch addresses; in this tree are forwarded to the clone trees. Any changes; made to the branch addresses of the copied tre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TTreePlayer.html:9769,Inherit,Inheritance,9769,root/html604/TTreePlayer.html,https://root.cern,https://root.cern/root/html604/TTreePlayer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t::kZombie. protected:. UChar_tTEveElement::fCSCBits; Bool_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; TEveElement::List_tTEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; TEveCompositeFrame*TEveWindow::fEveFrame; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTEveWindow::fShowTitleBar; TRefTEveElement::fSourceExternal object that is represented by this element.; TGTab*fTab; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveWindowTab.html:20463,variab,variable,20463,root/html602/TEveWindowTab.html,https://root.cern,https://root.cern/root/html602/TEveWindowTab.html,4,['variab'],['variable']
Modifiability,"t::kZombie. protected:. UChar_tTEveElement::fCSCBits; Bool_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; TEveElement::List_tTEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; TEveCompositeFrame*TEveWindow::fEveFrame; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; TGPack*fPack; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTEveWindow::fShowTitleBar; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user da",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveWindowPack.html:20640,variab,variable,20640,root/html602/TEveWindowPack.html,https://root.cern,https://root.cern/root/html602/TEveWindowPack.html,4,['variab'],['variable']
Modifiability,"t::kZombie. protected:. UChar_tTEveElement::fCSCBits; Bool_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; TEveElement::List_tTEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Float_tTEveProjected::fDepthz coordinate; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable*TEveProjected::fProjectablelink to original object; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destructio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveElementListProjected.html:19421,variab,variable,19421,root/html602/TEveElementListProjected.html,https://root.cern,https://root.cern/root/html602/TEveElementListProjected.html,4,['variab'],['variable']
Modifiability,"t::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::MethodANNBase&operator=(const TMVA::MethodANNBase&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; virtual voidPrintNetwork() const; voidTMVA::Configurable::PrintOptions() const; virtual voidProcessOptions(); voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidSetActivation(TMVA::TActivation* activation); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodANNBase.html:10503,Config,Configurable,10503,root/html602/TMVA__MethodANNBase.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodANNBase.html,2,['Config'],['Configurable']
Modifiability,"t::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::MethodCFMlpANN&operator=(const TMVA::MethodCFMlpANN&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescripti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodCFMlpANN.html:11800,Config,Configurable,11800,root/html602/TMVA__MethodCFMlpANN.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodCFMlpANN.html,2,['Config'],['Configurable']
Modifiability,"t::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::MethodCategory&operator=(const TMVA::MethodCategory&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidTMVA::MethodCompositeBase::ReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Confi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodCategory.html:11071,Config,Configurable,11071,root/html602/TMVA__MethodCategory.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodCategory.html,2,['Config'],['Configurable']
Modifiability,"t::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::SimulatedAnnealingFitter&operator=(const TMVA::SimulatedAnnealingFitter&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidTMVA::Configurable::PrintOptions() const; virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual Double_tRun(vector<Double_t>& pars); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidSetParameters(Int_t fMaxCalls, Double_t fInitialTemperature, Double_t fMinTemperature, Double_t fEps, TString fKernelTemperatureS, Double_t fTemperatureScale, Double_t fTemperatureAdaptiveStep, Bool_t fUseDefaultScale, Bool_t fUseDefaultTemperature); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; TMVA::SimulatedAnnealingFitterSimulatedAnnealingFitter(const TMVA::SimulatedAnnealingFitter&); TMVA::SimulatedAnnealingFitterSimulatedAnnealingFitter(TMVA::IFitterTarget& target, const TString& name, const vector<TMVA::Interval*>& ranges, const TString& theOption); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_Stream",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__SimulatedAnnealingFitter.html:5148,Config,Configurable,5148,root/html602/TMVA__SimulatedAnnealingFitter.html,https://root.cern,https://root.cern/root/html602/TMVA__SimulatedAnnealingFitter.html,2,['Config'],['Configurable']
Modifiability,"t::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidTMVA::Configurable::PrintOptions() const; virtual voidTMVA::IFitterTarget::ProgressNotifier(TString, TString); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual Double_tRun(vector<Double_t>& pars); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MinuitFitter.html:5138,Config,Configurable,5138,root/html532/TMVA__MinuitFitter.html,https://root.cern,https://root.cern/root/html532/TMVA__MinuitFitter.html,3,['Config'],['Configurable']
Modifiability,"t; Bool_tTMVA::VariableTransformBase::IsNormalised() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TMVA::MsgLogger&TMVA::VariableTransformBase::Log() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::VariableGaussTransform&operator=(const TMVA::VariableGaussTransform&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual Bool_tPrepareTransformation(const vector<TMVA::Event*>&); virtual voidTObject::Print(Option_t* option = """") const; virtual voidPrintTransformation(ostream& o); virtual Int_tTObject::Read(const char* name); virtual voidReadFromXML(void* trfnode); virtual voidReadTransformationFromStream(istream&, const TString&); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableGaussTransform.html:4440,Variab,VariableGaussTransform,4440,root/html602/TMVA__VariableGaussTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableGaussTransform.html,2,['Variab'],['VariableGaussTransform']
Modifiability,"t; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum EConfigBits { kSendSummary; kSendDataSetInfo; kSendFileInfo; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfDataSetInfoVrsVersion of the dataset info 'table'; Int_tfFileInfoVrsVersion of the file info 'table'; TStringTNamed::fNameobject identifier; Int_tfSummaryVrsVersion of the summary 'table'; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~TProofMonSender(); { }. Int_t SetSendOptions(const char* ); This changes the send control options. Bool_t IsValid() const; Object validity. { return (TestBit(TObject::kInvalidObject)) ? kFALSE : kTRUE; }. Int_t SendSummary(TList* , const char* ); Summary record. Int_t SendDataSetInfo(TDSet* , TList* , const char* , const char* ); Information about the dataset(s) processed. Int_t SendFileInfo(TDSet* , TList* , const char* , const char* ); Detailed information about files. » Author: G.Ganis July 2011 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-09-08 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofMonSender.html:6146,Inherit,Inheritance,6146,root/html534/TProofMonSender.html,https://root.cern,https://root.cern/root/html534/TProofMonSender.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t; Int_tTObject::TestBits(UInt_t f) const; virtual voidUnzipEvent(TObject* tree, Long64_t pos, Double_t start, Int_t complen, Int_t objlen); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum EEventType { kUnDefined; kPacket; kStart; kStop; kFile; kFileOpen; kFileRead; kRate; kNumEventType; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TVirtualPerfStats *& CurrentPerfStats(); Return the current ROOT perf stats if any. const char * EventType(TVirtualPerfStats::EEventType type); Return the name of the event type. virtual ~TVirtualPerfStats(); {}. void SimpleEvent(TVirtualPerfStats::EEventType type). void PacketEvent(const char* slave, const char* slavename, const char* filename, Long64_t eventsprocessed, Double_t latency, Double_t proctime, Double_t cputime, Long64_t bytesRead). void FileOpenEvent(TFile* file, const char* filename, Double_t start). void FileReadEvent(TFile* file, Int_t len, Double_t start). void UnzipEvent(TObject* tree, Long64_t pos, Double_t start, Int_t complen, Int_t objlen). void RateEvent(Double_t proctime, Double_t deltatime, Long64_t eventsprocessed, Long64_t bytesRead). Long64_t GetBytesRead() const. void SetNumEvents(Long64_t num). Long64_t GetNumEvents() const. » Author: Kristjan Gulbrandsen 11/05/04 » Copyright (C) 1995-2004, Rene Brun and ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TVirtualPerfStats.html:6425,Inherit,Inheritance,6425,root/html534/TVirtualPerfStats.html,https://root.cern,https://root.cern/root/html534/TVirtualPerfStats.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t; Long64_tTBranch::GetReadEntry() const; virtual Int_tTBranch::GetRow(Int_t row); Int_tTBranch::GetSplitLevel() const; Int_tGetStreamerType() const; TBranch*TBranch::GetSubBranch(const TBranch* br) const; virtual TClass*GetTargetClass(); virtual const char*TNamed::GetTitle() const; Long64_tTBranch::GetTotalSize(Option_t* option = """") const; Long64_tTBranch::GetTotBytes(Option_t* option = """") const; TTree*TBranch::GetTree() const; Int_tGetType() const; virtual const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetValue(Int_t i, Int_t len, Bool_t subarr = kFALSE) const; virtual void*GetValuePointer() const; Int_tTBranch::GetWriteBasket() const; Long64_tTBranch::GetZipBytes(Option_t* option = """") const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBranch::IsAutoDelete() const; Bool_tIsBranchFolder() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; virtual Bool_tIsObjectOwner() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTBranch::KeepCircular(Long64_t maxEntries); virtual Int_tTBranch::LoadBaskets(); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBranchElement.html:6391,Inherit,InheritsFrom,6391,root/html532/TBranchElement.html,https://root.cern,https://root.cern/root/html532/TBranchElement.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t; Return correlation matrix ;. RooAbsPdf* createHessePdf(const RooArgSet& params) const; Return a p.d.f that represents the fit result as a multi-variate probability densisty; function on the floating fit parameters, including correlations. void SetName(const char* name); Change name of RooFitResult object. void SetNameTitle(const char* name, const char* title); Change name and title of RooFitResult object. void printName(ostream& os) const; Print name of fit result. void printTitle(ostream& os) const; Print title of fit result. void printClassName(ostream& os) const; Print class name of fit result. void printArgs(ostream& os) const; Print arguments of fit result, i.e. the parameters of the fit. void printValue(ostream& os) const; Print the value of the fit result, i.e.g the status, minimized FCN, edm and covariance quality code. Int_t defaultPrintContents(Option_t* opt) const; Configure default contents to be printed. RooPrintable::StyleOption defaultPrintStyle(Option_t* opt) const; Configure mapping of Print() arguments to RooPrintable print styles. void Streamer(TBuffer& ); Stream an object of class RooFitResult. TObject* Clone(const char* newname = 0) const. TObject* clone() const; { return new RooFitResult(*this); }. void Print(Option_t* options = 0) const; Printing interface. Int_t status() const; Accessors. UInt_t numStatusHistory() const; { return _statusHistory.size() ; }. Int_t covQual() const; Return MINUIT quality code of covariance matrix. Int_t numInvalidNLL() const; Return number of NLL evaluations with problems. Double_t edm() const; Return estimated distance to minimum. Double_t minNll() const; Return minimized -log(L) value. const RooArgList& constPars() const; Return list of constant parameters. const RooArgList& floatParsInit() const; Return list of floating parameters before fit. const RooArgList& floatParsFinal() const; Return list of floarting parameters after fit. Double_t correlation(const RooAbsArg& par1, const RooAbsArg& par2) const; Retur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooFitResult.html:16587,Config,Configure,16587,root/html534/RooFitResult.html,https://root.cern,https://root.cern/root/html534/RooFitResult.html,3,['Config'],['Configure']
Modifiability,"t; Return correlation matrix ;. RooAbsPdf* createHessePdf(const RooArgSet& params) const; Return a p.d.f that represents the fit result as a multi-variate probability densisty; function on the floating fit parameters, including correlations. void SetName(const char* name); Change name of RooFitResult object. void SetNameTitle(const char* name, const char* title); Change name and title of RooFitResult object. void printName(ostream& os) const; Print name of fit result. void printTitle(ostream& os) const; Print title of fit result. void printClassName(ostream& os) const; Print class name of fit result. void printArgs(ostream& os) const; Print arguments of fit result, i.e. the parameters of the fit. void printValue(ostream& os) const; Print the value of the fit result, i.e.g the status, minimized FCN, edm and covariance quality code. Int_t defaultPrintContents(Option_t* opt) const; Configure default contents to be printed. RooPrintable::StyleOption defaultPrintStyle(Option_t* opt) const; Configure mapping of Print() arguments to RooPrintable print styles. void Streamer(TBuffer& b); Stream an object of class RooFitResult. TObject* Clone(const char* newname = 0) const. TObject* clone() const; { return new RooFitResult(*this); }. void Print(Option_t* options = 0) const; Printing interface. Int_t status() const; Accessors. UInt_t numStatusHistory() const; { return _statusHistory.size() ; }. Int_t covQual() const; Return MINUIT quality code of covariance matrix. Int_t numInvalidNLL() const; Return number of NLL evaluations with problems. Double_t edm() const; Return estimated distance to minimum. Double_t minNll() const; Return minimized -log(L) value. const RooArgList& constPars() const; Return list of constant parameters. const RooArgList& floatParsInit() const; Return list of floating parameters before fit. const RooArgList& floatParsFinal() const; Return list of floarting parameters after fit. Double_t correlation(const RooAbsArg& par1, const RooAbsArg& par2) const; Retu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooFitResult.html:16544,Config,Configure,16544,root/html532/RooFitResult.html,https://root.cern,https://root.cern/root/html532/RooFitResult.html,1,['Config'],['Configure']
Modifiability,"t; Return the number of degrees of freedom in the fit; the fNDF parameter has been previously computed during a fit.; The number of degrees of freedom corresponds to the number of points; used in the fit minus the number of free parameters. Int_t GetNumberFreeParameters() const; Return the number of free parameters. char * GetObjectInfo(Int_t px, Int_t py) const; Redefines TObject::GetObjectInfo.; Displays the function info (x, function value); corresponding to cursor position px,py. Double_t GetParError(Int_t ipar) const; Return value of parameter number ipar. void GetParLimits(Int_t ipar, Double_t& parmin, Double_t& parmax) const; Return limits for parameter ipar. Double_t GetProb() const; Return the fit probability. Int_t GetQuantiles(Int_t nprobSum, Double_t* q, const Double_t* probSum); Compute Quantiles for density distribution of this function; Quantile x_q of a probability distribution Function F is defined as. For instance the median of a distribution is defined as that value; of the random variable for which the distribution function equals 0.5:. code from Eddy Offermann, Renaissance. input parameters; - this TF1 function; - nprobSum maximum size of array q and size of array probSum; - probSum array of positions where quantiles will be computed.; It is assumed to contain at least nprobSum values.; output; - return value nq (<=nprobSum) with the number of quantiles computed; - array q filled with nq quantiles. Getting quantiles from two histograms and storing results in a TGraph,; a so-called QQ-plot. TGraph *gr = new TGraph(nprob);; f1->GetQuantiles(nprob,gr->GetX());; f2->GetQuantiles(nprob,gr->GetY());; gr->Draw(""alp"");. Double_t GetRandom(); Return a random number following this function shape. The distribution contained in the function fname (TF1) is integrated; over the channel contents.; It is normalized to 1.; For each bin the integral is approximated by a parabola.; The parabola coefficients are stored as non persistent data members; Getting one ran",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TF1.html:44956,variab,variable,44956,root/html528/TF1.html,https://root.cern,https://root.cern/root/html528/TF1.html,10,['variab'],['variable']
Modifiability,"t; RooAbsArg*findArg(const RooAbsArg*) const; virtual TObject*FindObject(const char* name) const; virtual TObject*FindObject(const TObject* obj) const; TObject*First() const; RooFIterfwdIterator() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tgetHashTableSize() const; virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Int_tIndexOf(const char* name) const; Int_tIndexOf(const TObject* arg) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; RooLinkedListIteriterator(Bool_t dir = kTRUE) const; virtual voidTObject::ls(Option_t* option = """") const; TIterator*MakeIterator(Bool_t dir = kTRUE) const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooLinkedList.html:2938,Inherit,InheritsFrom,2938,root/html532/RooLinkedList.html,https://root.cern,https://root.cern/root/html532/RooLinkedList.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t; RooAbsData*RooAbsOptTestStatistic::_dataClonePointer to internal clone if input data; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; static RooArgSet_emptySetSupports named argument constructor; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; RooAbsData::ErrorType_etypeError type store in associated RooDataHist; static Bool_tRooAbsArg::_flipACleanStatic flag controlling flipping status of all AClean nodes to ADirty ;; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; RooAbsReal*RooAbsTestStatistic::_funcPointer to original input function; RooAbsReal*RooAbsOptTestStatistic::_funcClonePointer to internal clone of input function; RooArgSet*RooAbsOptTestStatistic::_funcCloneSetSet owning all components of internal clone of input function; RooChi2Var::FuncMode_funcModeFunction, P.d.f. or extended p.d.f?; RooArgSet*RooAbsOptTestStatistic::_funcObsSetList of observables in the pdf expression; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooArgSet*RooAbsOptTestStatistic::_normSetPointer to set with observables used for normalization; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooAbsData*RooAbsOptTestStatistic::_origDataOriginal data ; RooAbsReal*RooAbsOptTestStatistic::_origFuncOriginal function ; Bool_tRooAbsOptTestStatistic::_ownDataDo we own the dataset; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooSetProxyRooAbsTestStatistic::_paramSetParameters of the test statistic (=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooChi2Var.html:35940,extend,extended,35940,root/html532/RooChi2Var.html,https://root.cern,https://root.cern/root/html532/RooChi2Var.html,1,['extend'],['extended']
Modifiability,"t; RooAbsData*RooAbsOptTestStatistic::_dataClonePointer to internal clone if input data; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; static RooArgSet_emptySetSupports named argument constructor; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; RooAbsData::ErrorType_etypeError type store in associated RooDataHist; static Bool_tRooAbsArg::_flipACleanStatic flag controlling flipping status of all AClean nodes to ADirty ;; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; RooAbsReal*RooAbsTestStatistic::_funcPointer to original input function; RooAbsReal*RooAbsOptTestStatistic::_funcClonePointer to internal clone of input function; RooArgSet*RooAbsOptTestStatistic::_funcCloneSetSet owning all components of internal clone of input function; RooChi2Var::FuncMode_funcModeFunction, P.d.f. or extended p.d.f?; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooArgSet*RooAbsOptTestStatistic::_normSetPointer to set with observables used for normalization ; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; Bool_tRooAbsOptTestStatistic::_ownDataDo we own the dataset; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooSetProxyRooAbsTestStatistic::_paramSetParameters of the test statistic (=parameters of the input function); Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooChi2Var.html:34414,extend,extended,34414,root/html526/RooChi2Var.html,https://root.cern,https://root.cern/root/html526/RooChi2Var.html,1,['extend'],['extended']
Modifiability,"t; RooAbsData*RooAbsOptTestStatistic::_dataClonePointer to internal clone if input data; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; static RooArgSet_emptySetSupports named argument constructor; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; RooAbsData::ErrorType_etypeError type store in associated RooDataHist; static Bool_tRooAbsArg::_flipACleanStatic flag controlling flipping status of all AClean nodes to ADirty ;; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; RooAbsReal*RooAbsTestStatistic::_funcPointer to original input function; RooAbsReal*RooAbsOptTestStatistic::_funcClonePointer to internal clone of input function; RooArgSet*RooAbsOptTestStatistic::_funcCloneSetSet owning all components of internal clone of input function; RooChi2Var::FuncMode_funcModeFunction, P.d.f. or extended p.d.f?; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooArgSet*RooAbsOptTestStatistic::_normSetPointer to set with observables used for normalization; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; Bool_tRooAbsOptTestStatistic::_ownDataDo we own the dataset; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgSetRooAbsOptTestStatistic::_ownedDataObs! Dataset observables we've agreed to own; RooSetProxyRooAbsTestStatistic::_paramSetParameters of the test statistic (=parameters of the input function); Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of pl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooChi2Var.html:35306,extend,extended,35306,root/html530/RooChi2Var.html,https://root.cern,https://root.cern/root/html530/RooChi2Var.html,1,['extend'],['extended']
Modifiability,"t; RooAbsData*RooAbsOptTestStatistic::_dataClonePointer to internal clone if input data; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; static RooArgSet_emptySetSupports named argument constructor; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; RooAbsData::ErrorType_etypeError type store in associated RooDataHist; static Bool_tRooAbsArg::_flipACleanStatic flag controlling flipping status of all AClean nodes to ADirty ;; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; RooAbsReal*RooAbsTestStatistic::_funcPointer to original input function; RooAbsReal*RooAbsOptTestStatistic::_funcClonePointer to internal clone of input function; RooArgSet*RooAbsOptTestStatistic::_funcCloneSetSet owning all components of internal clone of input function; RooChi2Var::FuncMode_funcModeFunction, P.d.f. or extended p.d.f?; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooArgSet*RooAbsOptTestStatistic::_normSetPointer to set with observables used for normalization; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; Bool_tRooAbsOptTestStatistic::_ownDataDo we own the dataset; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooSetProxyRooAbsTestStatistic::_paramSetParameters of the test statistic (=parameters of the input function); Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitSe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooChi2Var.html:34681,extend,extended,34681,root/html528/RooChi2Var.html,https://root.cern,https://root.cern/root/html528/RooChi2Var.html,1,['extend'],['extended']
Modifiability,"t; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooExtendedTerm(); Constructor. RooExtendedTerm(const char* name, const char* title, const RooAbsReal& n); Constructor. An ExtendedTerm has no observables, it only introduces an extended; ML term with the given number of expected events when an extended ML is constructed; from this p.d.f. RooExtendedTerm(const RooExtendedTerm& other, const char* name = 0); Copy constructor. ~RooExtendedTerm(); Destructor. Double_t expectedEvents(const RooArgSet* nset) const; Return number of expected events from associated event count variable. TObject* clone(const char* newname) const; { return new RooExtendedTerm(*this,newname) ; }. Double_t evaluate() const; { return 1. ; }. ExtendMode extendMode() const; { return CanBeExtended ; }. Double_t expectedEvents(const RooArgSet* nset) const. » Last changed: Thu Sep 23 19:59:36 2010 » Last generated: 2010-09-23 19:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooExtendedTerm.html:40050,extend,extended,40050,root/html528/RooExtendedTerm.html,https://root.cern,https://root.cern/root/html528/RooExtendedTerm.html,4,"['extend', 'variab']","['extendMode', 'extended', 'variable']"
Modifiability,"t; TGLManip&TGLManip::operator=(const TGLManip&). private:. Double_tCalculateAngleDelta(const TPoint& mouse, const TGLCamera& camera); TGLLine3CalculateRingLine(const TPoint& mouse, const TGLCamera& camera) const; voidDrawAxisRing(const TGLVertex3& origin, const TGLVector3& axis, Double_t radius, Float_t* rgba) const. Data Members; protected:. Bool_tTGLManip::fActive! manipulator is active?; TPointTGLManip::fFirstMouse! first (start) mouse position (in WINDOW coords); TPointTGLManip::fLastMouse! last (latest) mouse position (in WINDOW coords); UInt_tTGLManip::fSelectedWidget! active width (axis) component; TGLPhysicalShape*TGLManip::fShape! manipulated shape. private:. TGLVertex3fActiveRingCenter! center of active ring; TGLPlanefActiveRingPlane! plane of the active ring (widget); TGLLine3fRingLine; TGLLine3fRingLineOld; Bool_tfShallowFront! front or back of the active shallow ring?; Bool_tfShallowRing! does active ring form shallow angle to eye?. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Double_t Angle(const TGLVector3& v1, const TGLVector3& v2); Calculate unsigned angle between vectors v1 and v2. Double_t Angle(const TGLVector3& v1, const TGLVector3& v2, const TGLVector3& ref); Calculate signed angle between vectors v1 and v2, using ref to define right handed coord system; If v1.v2 parallel to ref vector: +ive for clockwise, -ive for anticlockwise; If v1.v2 antiparallel to ref vector: -ive for clockwise, +ive for anticlockwise. TGLRotateManip(); Construct rotation manipulator not bound to any physical shape. TGLRotateManip(TGLPhysicalShape* shape); Construct rotation manipulator bound to TGLPhysicalShape 'shape'. ~TGLRotateManip(); Destory the rotation manipulator. void Draw(const TGLCamera& camera) const; Draw rotate manipulator - axis rings drawn from attached; physical center, in plane defined by axis as normal, in red(X),; green(Y) and blue(Z), with white center sphere. If selected; widget (mouse over) this is dra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLRotateManip.html:2812,Inherit,Inheritance,2812,root/html532/TGLRotateManip.html,https://root.cern,https://root.cern/root/html532/TGLRotateManip.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t; XMLNsPointer_tFindNs(XMLNodePointer_t xmlnode, const char* nsname); char*Makenstr(const char* start, int len); char*Makestr(const char* str); voidTObject::MakeZombie(); voidOutputValue(char* value, TXMLOutputStream* out); XMLDocPointer_tParseStream(TXMLInputStream* input); XMLNodePointer_tReadNode(XMLNodePointer_t xmlparent, TXMLInputStream* inp, Int_t& resvalue); voidSaveNode(XMLNodePointer_t xmlnode, TXMLOutputStream* out, Int_t layout, Int_t level); voidTruncateNsExtension(XMLNodePointer_t xmlnode); voidUnpackSpecialCharacters(char* target, const char* source, int srclen). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Bool_tfSkipComments! if true, do not create comments nodes in document during parsing. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TXMLEngine(); default (normal) constructor of TXMLEngine class. ~TXMLEngine(); destructor for TXMLEngine object. Bool_t HasAttr(XMLNodePointer_t xmlnode, const char* name); checks if node has attribute of specified name. const char* GetAttr(XMLNodePointer_t xmlnode, const char* name); returns value of attribute for xmlnode. Int_t GetIntAttr(XMLNodePointer_t node, const char* name); returns value of attribute as integer. XMLAttrPointer_t NewAttr(XMLNodePointer_t xmlnode, XMLNsPointer_t , const char* name, const char* value); creates new attribute for xmlnode,; namespaces are not supported for attributes. XMLAttrPointer_t NewIntAttr(XMLNodePointer_t xmlnode, const char* name, Int_t value); create node attribute with integer value. void FreeAttr(XMLNodePointer_t xmlnode, const char* name); remove attribute from xmlnode. void FreeAllAttr(XMLNodePointer_t xmlnode); Free all attributes of the node. XMLAttrPointer_t GetFirstAttr(XMLNodePointe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TXMLEngine.html:9443,Inherit,Inheritance,9443,root/html532/TXMLEngine.html,https://root.cern,https://root.cern/root/html532/TXMLEngine.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t; and is responsible for deleting it. TH2F * createHistogram(const char *name, const RooAbsRealLValue &yvar, 					const char *zAxisLabel, const RooAbsBinning** bins); Create an empty 2D-histogram with appropriate scale and labels for this variable (x); and the specified y variable. TH3F * createHistogram(const char* name, const RooAbsRealLValue& yvar, const RooAbsRealLValue& zvar, const char* tAxisLabel, Double_t* xlo = 0, Double_t* xhi = 0, Int_t* nBins = 0) const; Create an empty 3D-histogram with appropriate scale and labels for this variable (x); and the specified y,z variables. This method uses the default plot ranges for x,y,z which; can be changed using the setPlotMin(),setPlotMax() methods, and the default binning which; can be changed with setPlotBins(). The caller takes ownership of the returned object; and is responsible for deleting it. TH3F * createHistogram(const char *name, const RooAbsRealLValue &yvar, const RooAbsRealLValue &zvar, 					const char* tAxisLabel, const RooAbsBinning** bins); Create an empty 3D-histogram with appropriate scale and labels for this variable (x); and the specified y,z variables. TH1 * createHistogram(const char *name, RooArgList &vars, const char *tAxisLabel, 				 Double_t* xlo, Double_t* xhi, Int_t* nBins); Create 1-, 2- or 3-d ROOT histogram with labels taken; from the variables in 'vars' and the with range and binning; specified in xlo,xhi and nBins. The dimensions of the arrays xlo,xhi,; nBins should match the number of objects in vars. TH1 * createHistogram(const char *name, RooArgList &vars, const char *tAxisLabel, const RooAbsBinning** bins); Create a 1,2, or 3D-histogram with appropriate scale and labels.; Binning and ranges are taken from the variables themselves and can be changed by; calling their setPlotMin/Max() and setPlotBins() methods. A histogram can be filled; using RooAbsReal::fillHistogram() or RooTreeData::fillHistogram().; The caller takes ownership of the returned object and is responsible for deleti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsRealLValue.html:45391,variab,variable,45391,root/html526/RooAbsRealLValue.html,https://root.cern,https://root.cern/root/html526/RooAbsRealLValue.html,2,['variab'],"['variable', 'variables']"
Modifiability,"t; boolRunOnePoint(double thisX, bool adaptive = false, double clTarget = -1) const; voidSetAutoScan(); static voidSetCloseProof(Bool_t flag); virtual voidSetConfidenceLevel(Double_t cl); virtual voidSetData(RooAbsData&); voidSetFixedScan(int nBins, double xMin = 1, double xMax = -1, bool scanLog = false); voidSetMaximumToys(int ntoys); virtual voidSetModel(const RooStats::ModelConfig&); voidSetNumErr(double err); virtual voidSetTestSize(Double_t size); boolSetTestStatistic(RooStats::TestStatistic& stat); voidSetVerbose(int level = 1); virtual voidShowMembers(TMemberInspector& insp) const; virtual Double_tSize() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidUseCLs(bool on = true). protected:. static voidCheckInputModels(const RooStats::HypoTestCalculatorGeneric& hc, const RooRealVar& scanVar); voidCreateResults() const; RooStats::HypoTestResult*Eval(RooStats::HypoTestCalculatorGeneric& hc, bool adaptive, double clsTarget) const; static RooRealVar*GetVariableToScan(const RooStats::HypoTestCalculatorGeneric& hc); RooStats::HypoTestInverterHypoTestInverter(const RooStats::HypoTestInverter& rhs); RooStats::HypoTestInverter&operator=(const RooStats::HypoTestInverter& rhs). Data Members; public:. static RooStats::HypoTestInverter::ECalculatorTypekAsymptotic; static RooStats::HypoTestInverter::ECalculatorTypekFrequentist; static RooStats::HypoTestInverter::ECalculatorTypekHybrid; static RooStats::HypoTestInverter::ECalculatorTypekUndefined. private:. RooStats::HypoTestInverter::ECalculatorTypefCalcType; RooStats::HypoTestCalculatorGeneric*fCalculator0pointer to the calculator passed in the constructor; unique_ptr<RooStats::HypoTestCalculatorGeneric>fHC! pointer to the generic hypotest calculator used; unique_ptr<TGraphErrors>fLimitPlot! plot of limits; intfMaxToysmaximum number of toys to run; intfNBins; doublefNumErr; RooStats::HypoTestInverterResult*fResultspointer to the result; boolfScanLog; RooRealVar*fScannedVar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HypoTestInverter.html:4515,adapt,adaptive,4515,root/html602/RooStats__HypoTestInverter.html,https://root.cern,https://root.cern/root/html602/RooStats__HypoTestInverter.html,4,['adapt'],['adaptive']
Modifiability,"t; const char*getCatLabel(const char* name, const char* defVal = """", Bool_t verbose = kFALSE) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tRooAbsCollection::getHashTableSize() const; virtual const char*TObject::GetIconName() const; virtual const char*RooAbsCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tgetRealValue(const char* name, Double_t defVal = 0, Bool_t verbose = kFALSE) const; Int_tRooAbsCollection::getSize() const; const char*getStringValue(const char* name, const char* defVal = """", Bool_t verbose = kFALSE) const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tisInRange(const char* rangeSpec); Bool_tTObject::IsOnHeap() const; Bool_tRooAbsCollection::isOwning() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; RooLinkedListIterRooAbsCollection::iterator(Bool_t dir = kIterForward) const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidoperator delete(void* ptr); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooArgSet.html:6925,Inherit,InheritsFrom,6925,root/html534/RooArgSet.html,https://root.cern,https://root.cern/root/html534/RooArgSet.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t; const char*getCatLabel(const char* name, const char* defVal = """", Bool_t verbose = kFALSE) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tRooAbsCollection::getHashTableSize() const; virtual const char*TObject::GetIconName() const; virtual const char*RooAbsCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tgetRealValue(const char* name, Double_t defVal = 0, Bool_t verbose = kFALSE) const; Int_tRooAbsCollection::getSize() const; const char*getStringValue(const char* name, const char* defVal = """", Bool_t verbose = kFALSE) const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tisInRange(const char* rangeSpec); Bool_tTObject::IsOnHeap() const; Bool_tRooAbsCollection::isOwning() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; RooLinkedListIterRooAbsCollection::iterator(Bool_t dir = kIterForward) const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidoperator delete(void* ptr); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*oper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooArgSet.html:5251,Inherit,InheritsFrom,5251,root/html602/RooArgSet.html,https://root.cern,https://root.cern/root/html602/RooArgSet.html,2,['Inherit'],['InheritsFrom']
Modifiability,t; double&operator()(Int_t i); voidoperator*=(double val); voidoperator*=(const TMatrixTSparseRow_const<double>& r); voidoperator+=(double val); voidoperator+=(const TMatrixTSparseRow_const<double>& r); voidoperator=(double val); voidoperator=(const TMatrixTSparseRow_const<double>& r); TMatrixTSparseRow<double>&operator=(const TMatrixTSparseRow<double>& r); voidoperator=(const TVectorT<double>& vec); doubleoperator[](Int_t i) const; double&operator[](Int_t i); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; protected:. const Int_t*TMatrixTSparseRow_const<double>::fColPtrcolumn index pointer; const double*TMatrixTSparseRow_const<double>::fDataPtrdata pointer; TMatrixTBase<double>*TMatrixTSparseRow_const<double>::fMatrixthe matrix I am a row of; Int_tTMatrixTSparseRow_const<double>::fNindexindex range; Int_tTMatrixTSparseRow_const<double>::fRowIndeffective row index. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TElementActionT<Element> &); {return *this;}. TElementPosActionT<Element>& operator=(const TElementPosActionT<Element> &); {return *this;}. TMatrixTRow_const<Element>& operator=(const TMatrixTRow_const<Element>& trc). const Element & operator()(Int_t i) const. Element & operator()(Int_t i). const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. Element & operator[](Int_t i); { return (*( TMatrixTRow<Element> *)this)(i); }. void operator=(Element val). void operator+=(Element val). void operator*=(Element val). void operator+=(const TMatrixTRow_const<Element> &r). void operator*=(const TMatrixTRow_const<Element> &r). const Element * GetDataPtr() const; { return fDataPtr; }. » Last changed: root/matrix:$Id: TMatrixTUtils.h 36047 2010-10-04 06:43:15Z brun $ » Last generated: 2011-11-03 20:20; This page has been automatically generated. For comments or suggestions r,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMatrixTSparseRow_double_.html:2482,Inherit,Inheritance,2482,root/html532/TMatrixTSparseRow_double_.html,https://root.cern,https://root.cern/root/html532/TMatrixTSparseRow_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11 )); };  ; enum  EGeoOptimizationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt = (1ULL << ( 20 )); };  ; enum  EGeoVisibilityAtt { ;   kVisOverride = (1ULL << ( 0 )); , kVisNone = (1ULL << ( 1 )); , kVisThis = (1ULL << ( 2 )); , kVisDaughters = (1ULL << ( 3 )); , ;   kVisOneLevel = (1ULL << ( 4 )); , kVisStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoNode; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoNode; TGeoExtension * fFWExtension = nullptr;  Transient user-defined extension to volumes. ;  ; TGeoVolume * fMother = nullptr;  ; Int_t fNovlp = 0;  ; Int_t fNumber = 0;  ; Int_t * fOverlaps = nullptr;  ; TGeoExtension * fUserExtension = nullptr;  ; TGeoVolume * fVolume = nullptr;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  . #include <TGeoNode.h>. Inheritance diagram for TGeoNodeMatrix:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoNodeMatrix.html:18710,inherit,inherited,18710,doc/master/classTGeoNodeMatrix.html,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html,2,['inherit'],['inherited']
Modifiability,"t; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11 )); };  ; enum  EGeoOptimizationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt = (1ULL << ( 20 )); };  ; enum  EGeoVisibilityAtt { ;   kVisOverride = (1ULL << ( 0 )); , kVisNone = (1ULL << ( 1 )); , kVisThis = (1ULL << ( 2 )); , kVisDaughters = (1ULL << ( 3 )); , ;   kVisOneLevel = (1ULL << ( 4 )); , kVisStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoNode; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoNode; TGeoExtension * fFWExtension = nullptr;  Transient user-defined extension to volumes. ;  ; TGeoVolume * fMother = nullptr;  ; Int_t fNovlp = 0;  ; Int_t fNumber = 0;  ; Int_t * fOverlaps = nullptr;  ; TGeoExtension * fUserExtension = nullptr;  ; TGeoVolume * fVolume = nullptr;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  . #include <TGeoNode.h>. Inheritance diagram for TGeoNodeOffset:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoNodeOffset.html:18750,inherit,inherited,18750,doc/master/classTGeoNodeOffset.html,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html,2,['inherit'],['inherited']
Modifiability,"t; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr);  Register a std::atomic<TDirectory*> that will soon be pointing to this TDirectory object. ;  ; void UnregisterContext (TContext *ctxt);  UnRegister a TContext pointing to this TDirectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  . Protected Attributes; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static Bool_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTDirectory.html:18787,inherit,inherited,18787,doc/v632/classTDirectory.html,https://root.cern,https://root.cern/doc/v632/classTDirectory.html,2,['inherit'],['inherited']
Modifiability,"t; float*operator float*(); TEveVectorT<float>&operator*=(float s); TEveVectorT<float>&operator+=(const TEveVectorT<float>& v); TEveVectorT<float>&operator-=(const TEveVectorT<float>& v); TEveVectorT<float>&operator=(const TEveVectorT<float>&); floatoperator[](Int_t idx) const; float&operator[](Int_t idx); TEveVectorT<float>Orthogonal() const; voidOrthoNormBase(TEveVectorT<float>& a, TEveVectorT<float>& b) const; floatPerp() const; floatPerp2() const; floatPhi() const; floatR() const; voidSet(const Float_t* v); voidSet(const Double_t* v); voidSet(const TVector3& v); voidSet(float x, float y, float z); voidShowMembers(TMemberInspector&); floatSquareDistance(const TEveVectorT<float>& b) const; voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TEveVectorT<float>&Sub(const TEveVectorT<float>& a, const TEveVectorT<float>& b); floatTheta() const. Data Members; public:. floatfX; floatfY; floatfZComponents of the vector. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; template<typename TT> void TEveVectorT<TT> Dump() const; Dump to stdout as ""(x, y, z)\n"". template<typename TT> void TEveVectorT<TT> Set(const TVector3& v); Set from TVector3. template<typename TT> TT TEveVectorT<TT> Eta() const; Calculate eta of the point, pretending it's a momentum vector. template<typename TT> TT TEveVectorT<TT> Normalize(float length = 1); Normalize the vector to length if current length is non-zero.; Returns the old magnitude. template<typename TT> TEveVectorT<TT> TEveVectorT<TT> Orthogonal() const; Returns an orthogonal vector (not normalized). template<typename TT> void TEveVectorT<TT> OrthoNormBase(TEveVectorT<float>& a, TEveVectorT<float>& b) const; Set vectors a and b to be normal to this and among themselves,; both of length 1. TT TEveVectorT<TT> Phi() const. TT TEveVectorT<TT> Theta() const. TT TEveVectorT<TT> CosTheta() const. TT TEveVectorT<TT> Distance(const TEveVectorT<float>& b) const. TT TEveVectorT<T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveVectorT_float_.html:2223,Inherit,Inheritance,2223,root/html534/TEveVectorT_float_.html,https://root.cern,https://root.cern/root/html534/TEveVectorT_float_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t; kRead; kWrite; kDoNotDelete; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTStreamerElement::fArrayDimnumber of array dimensions; Int_tTStreamerElement::fArrayLengthcumulative size of all array dims; TClass*TStreamerElement::fClassObject!pointer to class of object; TStringfCountClassname of the class with the counter; TStringfCountNamename of data member holding the array count; Int_tfCountVersionversion number of the class with the counter; TStreamerBasicType*fCounter!pointer to basic type counter; Double_tTStreamerElement::fFactor!Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin); Int_tTStreamerElement::fMaxIndex[5]Maximum array index for array dimension ""dim""; TStringTNamed::fNameobject identifier; TClass*TStreamerElement::fNewClass!new element class when reading; Int_tTStreamerElement::fNewType!new element type when reading; Int_tTStreamerElement::fOffset!element offset in class; Int_tTStreamerElement::fSizesizeof element; TMemberStreamer*TStreamerElement::fStreamer!pointer to element Streamer; Int_tTStreamerElement::fTObjectOffset!base offset for TObject if the element inherits from it; TStringTNamed::fTitleobject title; Int_tTStreamerElement::fTypeelement type; TStringTStreamerElement::fTypeNameData type name of data member; Double_tTStreamerElement::fXmax!Maximum of data member if a range is specified [xmin,xmax,nbits]; Double_tTStreamerElement::fXmin!Minimum of data member if a range is specified [xmin,xmax,nbits]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TStreamerBasicPointer(); Default ctor. TStreamerBasicPointer(const char* name, const char* title, Int_t offset, Int_t dtype, const char* countName, const char* countClass, Int_t version, const char* typeName)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TStreamerBasicPointer.html:9039,inherit,inherits,9039,root/html528/TStreamerBasicPointer.html,https://root.cern,https://root.cern/root/html528/TStreamerBasicPointer.html,4,['inherit'],['inherits']
Modifiability,"t; kRead; kWrite; kDoNotDelete; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTStreamerElement::fArrayDimnumber of array dimensions; Int_tTStreamerElement::fArrayLengthcumulative size of all array dims; TClass*TStreamerElement::fClassObject!pointer to class of object; TStringfCountClassname of the class with the counter; TStringfCountNamename of data member holding the array count; Int_tfCountVersionversion number of the class with the counter; TStreamerBasicType*fCounter!pointer to basic type counter; Double_tTStreamerElement::fFactor!Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin); Int_tTStreamerElement::fMaxIndex[5]Maximum array index for array dimension ""dim""; TStringTNamed::fNameobject identifier; TClass*TStreamerElement::fNewClass!new element class when reading; Int_tTStreamerElement::fNewType!new element type when reading; Int_tTStreamerElement::fOffset!element offset in class; Int_tTStreamerElement::fSizesizeof element; TMemberStreamer*TStreamerElement::fStreamer!pointer to element Streamer; Int_tTStreamerElement::fTObjectOffset!base offset for TObject if the element inherits from it; TStringTNamed::fTitleobject title; Int_tTStreamerElement::fTypeelement type; TStringTStreamerElement::fTypeNameData type name of data member; Double_tTStreamerElement::fXmax!Maximum of data member if a range is specified [xmin,xmax,nbits]; Double_tTStreamerElement::fXmin!Minimum of data member if a range is specified [xmin,xmax,nbits]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TStreamerLoop(); Default ctor. TStreamerLoop(const char* name, const char* title, Int_t offset, const char* countName, const char* countClass, Int_t version, const char* typeName); Create a TStreamerLoop obje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TStreamerLoop.html:9014,inherit,inherits,9014,root/html528/TStreamerLoop.html,https://root.cern,https://root.cern/root/html528/TStreamerLoop.html,4,['inherit'],['inherits']
Modifiability,"t; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooExtendPdf(); Default constructor. RooExtendPdf(const char* name, const char* title, const RooAbsPdf& pdf, const RooAbsReal& norm, const char* rangeName = 0); Constructor. The ExtendedPdf behaves identical to the supplied input pdf,; but adds an extended likelihood term. The expected number of events return; is 'norm'. If a rangename is given, the number of events is interpreted as. RooExtendPdf(const RooExtendPdf& other, const char* name = 0); Copy constructor. ~RooExtendPdf(); Destructor. Double_t expectedEvents(const RooArgSet* nset) const; Return the number of expected events, which is. n / [ Int(xC,yF) pdf(x,y) / Int(xF,yF) pdf(x,y) ]. Where x is the set of dependents with cuts defined; and y are the other dependents. xC is the integration; of x over the cut range, xF is the integration of; x over the full range. TObject* clone(const char* newname) const; { return new RooExtendPdf(*this,newname) ; }. Double_t evaluate() const; { return _pdf ; }. Bool_t forceAnalyticalInt(const RooAbsArg& ) const; { return kTRUE ; }. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Forward determination of analytical integration capab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooExtendPdf.html:45657,extend,extended,45657,root/html602/RooExtendPdf.html,https://root.cern,https://root.cern/root/html602/RooExtendPdf.html,6,"['Extend', 'extend']","['ExtendedPdf', 'extended']"
Modifiability,"t; more convenient of the other Tokenize method when saving the tokens is not needed. ; Definition at line 310 of file TRegexp.cxx. ◆ ToLower(). void TString::ToLower ; (; ). Change string to lower-case. ; Definition at line 1182 of file TString.cxx. ◆ ToUpper(). void TString::ToUpper ; (; ). Change string to upper case. ; Definition at line 1195 of file TString.cxx. ◆ UItoa(). TString TString::UItoa ; (; UInt_t ; value, . Int_t ; base . ). static . Converts a UInt_t (twice the range of an Int_t) to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2119 of file TString.cxx. ◆ ULLtoa(). TString TString::ULLtoa ; (; ULong64_t ; value, . Int_t ; base . ). static . Converts a ULong64_t (twice the range of an Long64_t) to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2171 of file TString.cxx. ◆ UnLink(). void TString::UnLink ; (; ); const. inlineprivate . Definition at line 263 of file TString.h. ◆ View(). std::string_view TString::View ; (; ); const. inline . Definition at line 452 of file TString.h. ◆ WriteString(). void TString::WriteString ; (; TBuffer & ; b, . const TString * ; a . ). static . Write TString object to buffer. ; Simplified version of TBuffer::WriteObject (does not keep track of multiple references to the same string). We need to have it here because TBuffer::ReadObject can only handle descendant of TObject ; Definition at line 1428 of file TString.cxx. ◆ Zero(). void TString::Zero ; (; ). inlineprivate . Definition at line 264 of file TString.h. Friends And Related Symbol Documentation. ◆ operator+ [1/11]. TString operator+ ; (; char ; c, . const TString & ; s . ). friend . Add stri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTString.html:56832,enhance,enhanced,56832,doc/v632/classTString.html,https://root.cern,https://root.cern/doc/v632/classTString.html,4,"['adapt', 'enhance']","['adapted', 'enhanced']"
Modifiability,"t; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; vector<double>_high; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; vector<int>_interpCode; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; vector<double>_low; static Int_tRooPrintable::_nameLength; double_nominal; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; TIterator*_paramIter! do not persist; RooListProxy_paramList; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__HistFactory__FlexibleInterpVar.html:33413,config,configuration,33413,root/html532/RooStats__HistFactory__FlexibleInterpVar.html,https://root.cern,https://root.cern/root/html532/RooStats__HistFactory__FlexibleInterpVar.html,2,['config'],['configuration']
Modifiability,"t; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; Double_tTGeoTubeSeg::GetPhi1() const; Double_tTGeoTubeSeg::GetPhi2() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tGetPointsOnSegments(Int_t npoints, Double_t* array) const; virtual Double_tTGeoTube::GetRmax() const; virtual Double_tTGeoTube::GetRmin() const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; Double_tGetZcoord(Double_t xc, Double_t yc, Double_t zc) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tTGeoTube::HasRmin() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(Double_t* point, Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tTGeoTube::IsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGeoShape::IsReflected() const; Bool_tTGeoShape::IsRunTimeShape() const; static Bool_tTGeoShape::IsSameWithinTolerance(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoCtub.html:6843,Inherit,InheritsFrom,6843,root/html532/TGeoCtub.html,https://root.cern,https://root.cern/root/html532/TGeoCtub.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; Double_tTGeoTubeSeg::GetPhi1() const; Double_tTGeoTubeSeg::GetPhi2() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tGetPointsOnSegments(Int_t npoints, Double_t* array) const; virtual Double_tTGeoTube::GetRmax() const; virtual Double_tTGeoTube::GetRmin() const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; Double_tGetZcoord(Double_t xc, Double_t yc, Double_t zc) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tTGeoTube::HasRmin() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, const Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(const Double_t* point, const Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tTGeoTube::IsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(const Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGeoShape::IsReflected() const; Bool_tTGeoShape::IsRunTimeShape() const; static Bool_tTGeoShape",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoCtub.html:7598,Inherit,InheritsFrom,7598,root/html534/TGeoCtub.html,https://root.cern,https://root.cern/root/html534/TGeoCtub.html,3,['Inherit'],['InheritsFrom']
Modifiability,"t; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tTSeqCollection::GetLast() const; virtual TList*GetListForObject(const char* name) const; virtual TList*GetListForObject(const TObject* obj) const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**TList::GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTCollection::GetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tTSeqCollection::IndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; Bool_tTList::IsAscending(); virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tTSeqCollection::IsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*TList::Last() const; Int_tTSeqCollection::LastIndex() const; virtual TObjLink*TList::LastLink() const; voidLoad(); virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator*TList::MakeIterator(Bool_t dir = kIterForward) const; virtual TIterator*TCollection::MakeReverseIterator() const; voidTObject::MayNotUse(const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TListOfFunctionTemplates.html:4215,Inherit,InheritsFrom,4215,root/html602/TListOfFunctionTemplates.html,https://root.cern,https://root.cern/root/html602/TListOfFunctionTemplates.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t; static Long_tTObject::GetDtorOnly(); virtual Long64_tTDataSetManager::GetGroupQuota(const char* group); virtual TMap*TDataSetManager::GetGroupQuotaMap(); virtual Long64_tTDataSetManager::GetGroupUsed(const char* group); virtual const char*TObject::GetIconName() const; Long_tGetModTime(const char* uri); const char*GetMSSUrl() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetStageOpts() const; virtual TMap*TDataSetManager::GetSubDataSets(const char* uri, const char* excludeservers); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTDataSetManager::MonitorUsedSpace(TVirtualMonitoringWriter* monitoring); virtual Bool_tTObject::Notify(); virtual Int_tNotifyUpdate(const char* group, const char* user, const char* dspath, Long_t mtime, const char* checksum = 0); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDataSetManagerFile.html:4115,Inherit,InheritsFrom,4115,root/html534/TDataSetManagerFile.html,https://root.cern,https://root.cern/root/html534/TDataSetManagerFile.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t; static Long_tTObject::GetDtorOnly(); virtual Long64_tTDataSetManager::GetGroupQuota(const char* group); virtual TMap*TDataSetManager::GetGroupQuotaMap(); virtual Long64_tTDataSetManager::GetGroupUsed(const char* group); virtual const char*TObject::GetIconName() const; Long_tGetModTime(const char* uri); const char*GetMSSUrl() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetStageOpts() const; virtual TMap*TDataSetManager::GetSubDataSets(const char* uri, const char* excludeservers); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTDataSetManager::MonitorUsedSpace(TVirtualMonitoringWriter* monitoring); virtual Bool_tTObject::Notify(); virtual Int_tNotifyUpdate(const char* group, const char* user, const char* dspath, Long_t mtime, const char* checksum = 0); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDataSetManagerFile.html:3979,Inherit,InheritsFrom,3979,root/html602/TDataSetManagerFile.html,https://root.cern,https://root.cern/root/html602/TDataSetManagerFile.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void Create (const char *host, const char *user, Int_t nmeth=0, Int_t *authmeth=nullptr, char **details=nullptr);  Create hostauth object. ;  . Private Attributes; Bool_t fActive;  ; TString fDetails [kMAXSEC];  ; Int_t fFailure [kMAXSEC];  ; TString fHost;  ; Int_t fMethods [kMAXSEC];  ; Int_t fNumMethods;  ; TList * fSecContexts;  ; Char_t fServer;  ; Int_t fSuccess [kMAXSEC];  ; TString fUser;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <THostAuth.h>. Inheritance diagram for THostAuth:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera inst",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHostAuth.html:12490,inherit,inherited,12490,doc/master/classTHostAuth.html,https://root.cern,https://root.cern/doc/master/classTHostAuth.html,1,['inherit'],['inherited']
Modifiability,"t; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; ROOT::Math::Delaunay2D fDelaunay;  ! Delaunay interpolator class ;  ; TGraph2D * fGraph2D;  ! 2D graph containing the user data ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TGraphDelaunay2D (const TGraphDelaunay2D &)=delete;  ; TGraphDelaunay2D & operator= (const TGraphDelaunay2D &)=delete;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGraphDelaunay2D.h>. Inheritance diagram for TGraphDelaunay2D:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Triangles. typedef ROOT::Math::Delaunay2D::Triangles TGraphDelaunay2D::Triangles. Definition at line 48 of file TGraphDelaunay2D.h. Constructor & Destructor Documentation. ◆ TGraphDelaunay2D() [1/2]. TGraphDelaunay2D::TGraphDelaunay2D ; (; const TGraphDelaunay2D & ; ). privatedelete . ◆ TGraphDelaunay2D() [2/2]. TGraphDelaunay2D::TGraphDelaunay2D ; (; TGraph2D * ; g = nullptr). TGraphDelaunay2D normal constructor. ; Definition at line 49 of file TGraphDelaunay2D.cxx. Member Function Documentation. ◆ begin(). Triangles::const_iterator TGraphDelaunay2D::begin ; (; ); const. inline . Definition at line 65 of file T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphDelaunay2D.html:12998,inherit,inherited,12998,doc/master/classTGraphDelaunay2D.html,https://root.cern,https://root.cern/doc/master/classTGraphDelaunay2D.html,2,['inherit'],['inherited']
Modifiability,"t; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void DefVar () override;  Define relevant variables. ;  ; void DoFill (Long64_t entry, Double_t w, const Double_t *v) override;  Fills the histogram with the given values. ;  ;  Protected Member Functions inherited from TProofDraw; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual Bool_t CompileVariables ();  Compiles each variable from fTreeDrawArgsParser for the tree fTree. ;  ; void FillWeight ();  Get weight from input list, if any. ;  ; virtual Bool_t ProcessSingle (Long64_t, Int_t);  Processes a single variable from an entry. ;  ; void SetCanvas (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TProfile2D * fProfile;  ;  Protected Attributes inherited from TProofDraw; Int_t fDimension;  ; TString fInitialExp;  ; TTreeFormulaManager * fManager;  ; Int_t fMultiplicity;  ; Bool_t fObjEval;  ; TTreeFormula * fSelect;  ; TString fSelection;  ; TStatus * fStatus;  ; TTree * fTree;  ; TTreeDrawArgsParser fTreeDrawArgsParser;  ; TTreeFormula * fVar [4];  ; Double_t fWeight;  ;  Protected Attributes inherited from TSelector; EA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawProfile2D.html:12113,variab,variable,12113,doc/master/classTProofDrawProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProofDrawProfile2D.html,1,['variab'],['variable']
Modifiability,t; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TSystem::EAclicModeTSystem::kOpt; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSystem::EAclicModeTSystem::fAclicModeWhether the compilation should be done debug or opt; Int_tTSystem::fAclicPropertiesVarious boolean flag for change ACLiC's behavior.; Int_tTSystem::fBeepDurationUsed by Beep(); Int_tTSystem::fBeepFreqUsed by Beep(); TStringTSystem::fBuildArchArchitecure for which ROOT was built (passed to ./configure); TStringTSystem::fBuildCompilerCompiler used to build this ROOT; TStringTSystem::fBuildCompilerVersionCompiler version used to build this ROOT; TStringTSystem::fBuildDirLocation where to build ACLiC shared library and use as scratch area.; TStringTSystem::fBuildNodeDetailed information where ROOT was built; TSeqCollection*TSystem::fCompiledList of shared libs from compiled macros to be deleted; Bool_tTSystem::fDoneTrue if eventloop should be finished; TSeqCollection*TSystem::fFileHandlerList of file handlers; TStringTSystem::fFlagsDebugFlags for debug compilation; TStringTSystem::fFlagsOptFlags for optimized compilation; TSeqCollection*TSystem::fHelpersList of helper classes for alternative file/directory access; TStringTSystem::fHostnameHostname; Bool_tTSystem::fInControlTrue if in eventloop; TStringTSystem::fIncludePathUsed to expand $IncludePath in the directives given to SetMakeSharedLib and SetMakeExe; Bool_tTSystem::fInsideNotifyUsed by DispatchTimers(); Bool_tTNetSystem::fIsLocalTRUE if the path points to this host; Int_tTSystem::fLevelLevel of nested eventloops; TStringTSystem::fLinkdefSu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXNetSystem.html:17751,config,configure,17751,root/html602/TXNetSystem.html,https://root.cern,https://root.cern/root/html602/TXNetSystem.html,4,['config'],['configure']
Modifiability,t; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TSystem::EAclicModeTSystem::kOpt; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSystem::EAclicModeTSystem::fAclicModeWhether the compilation should be done debug or opt; Int_tTSystem::fAclicPropertiesVarious boolean flag for change ACLiC's behavior.; Int_tTSystem::fBeepDurationUsed by Beep(); Int_tTSystem::fBeepFreqUsed by Beep(); TStringTSystem::fBuildArchArchitecure for which ROOT was built (passed to ./configure); TStringTSystem::fBuildCompilerCompiler used to build this ROOT; TStringTSystem::fBuildCompilerVersionCompiler version used to build this ROOT; TStringTSystem::fBuildDirLocation where to build ACLiC shared library and use as scratch area.; TStringTSystem::fBuildNodeDetailed information where ROOT was built; TSeqCollection*TSystem::fCompiledList of shared libs from compiled macros to be deleted; Bool_tTSystem::fDoneTrue if eventloop should be finished; TSeqCollection*TSystem::fFileHandlerList of file handlers; TStringTSystem::fFlagsDebugFlags for debug compilation; TStringTSystem::fFlagsOptFlags for optimized compilation; TSeqCollection*TSystem::fHelpersList of helper classes for alternative file/directory access; TStringTSystem::fHostnameHostname; Bool_tTSystem::fInControlTrue if in eventloop; TStringTSystem::fIncludePathUsed to expand $IncludePath in the directives given to SetMakeSharedLib and SetMakeExe; Bool_tTSystem::fInsideNotifyUsed by DispatchTimers(); Bool_tfIsLocalTRUE if the path points to this host; Int_tTSystem::fLevelLevel of nested eventloops; TStringTSystem::fLinkdefSuffixDefault ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNetSystem.html:18994,config,configure,18994,root/html602/TNetSystem.html,https://root.cern,https://root.cern/root/html602/TNetSystem.html,4,['config'],['configure']
Modifiability,t; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TSystem::EAclicModeTSystem::kOpt; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSystem::EAclicModeTSystem::fAclicModeWhether the compilation should be done debug or opt; Int_tTSystem::fAclicPropertiesVarious boolean flag for change ACLiC's behavior.; Int_tTSystem::fBeepDurationUsed by Beep(); Int_tTSystem::fBeepFreqUsed by Beep(); TStringTSystem::fBuildArchArchitecure for which ROOT was built (passed to ./configure); TStringTSystem::fBuildCompilerCompiler used to build this ROOT; TStringTSystem::fBuildCompilerVersionCompiler version used to build this ROOT; TStringTSystem::fBuildDirLocation where to build ACLiC shared library and use as scratch area.; TStringTSystem::fBuildNodeDetailed information where ROOT was built; TSeqCollection*TSystem::fCompiledList of shared libs from compiled macros to be deleted; Bool_tTSystem::fDoneTrue if eventloop should be finished; TSeqCollection*TSystem::fFileHandlerList of file handlers; TStringTSystem::fFlagsDebugFlags for debug compilation; TStringTSystem::fFlagsOptFlags for optimized compilation; TSeqCollection*TSystem::fHelpersList of helper classes for alternative file/directory access; TStringTSystem::fHostnameHostname; Bool_tTSystem::fInControlTrue if in eventloop; TStringTSystem::fIncludePathUsed to expand $IncludePath in the directives given to SetMakeSharedLib and SetMakeExe; Bool_tTSystem::fInsideNotifyUsed by DispatchTimers(); Int_tTSystem::fLevelLevel of nested eventloops; TStringTSystem::fLinkdefSuffixDefault suffix for linkdef files to be used by ACLiC (see EA,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNetXNGSystem.html:17240,config,configure,17240,root/html602/TNetXNGSystem.html,https://root.cern,https://root.cern/root/html602/TNetXNGSystem.html,12,['config'],['configure']
Modifiability,"t; static TStreamerElement::ESTLtypeTStreamerElement::kSTLunorderedset; static TStreamerElement::ESTLtypeTStreamerElement::kSTLvector; static TObject::(anonymous)TObject::kSingleKey; static TStreamerElement::(anonymous)TStreamerElement::kWholeObject; static TStreamerElement::(anonymous)TStreamerElement::kWrite; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTStreamerElement::fArrayDimnumber of array dimensions; Int_tTStreamerElement::fArrayLengthcumulative size of all array dims; TClass*TStreamerElement::fClassObject!pointer to class of object; Double_tTStreamerElement::fFactor!Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin); Int_tTStreamerElement::fMaxIndex[5]Maximum array index for array dimension ""dim""; TStringTNamed::fNameobject identifier; TClass*TStreamerElement::fNewClass!new element class when reading; Int_tTStreamerElement::fNewType!new element type when reading; Int_tTStreamerElement::fOffset!element offset in class; Int_tTStreamerElement::fSizesizeof element; TMemberStreamer*TStreamerElement::fStreamer!pointer to element Streamer; Int_tTStreamerElement::fTObjectOffset!base offset for TObject if the element inherits from it; TStringTNamed::fTitleobject title; Int_tTStreamerElement::fTypeelement type; TStringTStreamerElement::fTypeNameData type name of data member; Double_tTStreamerElement::fXmax!Maximum of data member if a range is specified [xmin,xmax,nbits]; Double_tTStreamerElement::fXmin!Minimum of data member if a range is specified [xmin,xmax,nbits]. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TStreamerElement. ←; TStreamerObject. Function documentation; TStreamerObject(); Default ctor. TStreamerObject(const char* name, const char* title, Int_t offset, const char* typeName); Create a TStreamerObject object. ~TStreamerObject(); TStreamerObject dtor. void Init(TObject* obj = 0); Setup the element. const char * GetInclude() const; Return the proper in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TStreamerObject.html:10387,inherit,inherits,10387,root/html604/TStreamerObject.html,https://root.cern,https://root.cern/root/html604/TStreamerObject.html,2,['inherit'],['inherits']
Modifiability,"t; static TStreamerElement::ESTLtypeTStreamerElement::kSTLunorderedset; static TStreamerElement::ESTLtypeTStreamerElement::kSTLvector; static TObject::(anonymous)TObject::kSingleKey; static TStreamerElement::(anonymous)TStreamerElement::kWholeObject; static TStreamerElement::(anonymous)TStreamerElement::kWrite; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTStreamerElement::fArrayDimnumber of array dimensions; Int_tTStreamerElement::fArrayLengthcumulative size of all array dims; TClass*TStreamerElement::fClassObject!pointer to class of object; Double_tTStreamerElement::fFactor!Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin); Int_tTStreamerElement::fMaxIndex[5]Maximum array index for array dimension ""dim""; TStringTNamed::fNameobject identifier; TClass*TStreamerElement::fNewClass!new element class when reading; Int_tTStreamerElement::fNewType!new element type when reading; Int_tTStreamerElement::fOffset!element offset in class; Int_tTStreamerElement::fSizesizeof element; TMemberStreamer*TStreamerElement::fStreamer!pointer to element Streamer; Int_tTStreamerElement::fTObjectOffset!base offset for TObject if the element inherits from it; TStringTNamed::fTitleobject title; Int_tTStreamerElement::fTypeelement type; TStringTStreamerElement::fTypeNameData type name of data member; Double_tTStreamerElement::fXmax!Maximum of data member if a range is specified [xmin,xmax,nbits]; Double_tTStreamerElement::fXmin!Minimum of data member if a range is specified [xmin,xmax,nbits]. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TStreamerElement. ←; TStreamerObjectAny. Function documentation; TStreamerObjectAny(); Default ctor. TStreamerObjectAny(const char* name, const char* title, Int_t offset, const char* typeName); Create a TStreamerObjectAny object. ~TStreamerObjectAny(); TStreamerObjectAny dtor. void Init(TObject* obj = 0); Setup the element. const char * GetInclude() const; Re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TStreamerObjectAny.html:10413,inherit,inherits,10413,root/html604/TStreamerObjectAny.html,https://root.cern,https://root.cern/root/html604/TStreamerObjectAny.html,2,['inherit'],['inherits']
Modifiability,"t; static TStreamerElement::ESTLtypeTStreamerElement::kSTLunorderedset; static TStreamerElement::ESTLtypeTStreamerElement::kSTLvector; static TObject::(anonymous)TObject::kSingleKey; static TStreamerElement::(anonymous)TStreamerElement::kWholeObject; static TStreamerElement::(anonymous)TStreamerElement::kWrite; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTStreamerElement::fArrayDimnumber of array dimensions; Int_tTStreamerElement::fArrayLengthcumulative size of all array dims; TClass*TStreamerElement::fClassObject!pointer to class of object; Double_tTStreamerElement::fFactor!Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin); Int_tTStreamerElement::fMaxIndex[5]Maximum array index for array dimension ""dim""; TStringTNamed::fNameobject identifier; TClass*TStreamerElement::fNewClass!new element class when reading; Int_tTStreamerElement::fNewType!new element type when reading; Int_tTStreamerElement::fOffset!element offset in class; Int_tTStreamerElement::fSizesizeof element; TMemberStreamer*TStreamerElement::fStreamer!pointer to element Streamer; Int_tTStreamerElement::fTObjectOffset!base offset for TObject if the element inherits from it; TStringTNamed::fTitleobject title; Int_tTStreamerElement::fTypeelement type; TStringTStreamerElement::fTypeNameData type name of data member; Double_tTStreamerElement::fXmax!Maximum of data member if a range is specified [xmin,xmax,nbits]; Double_tTStreamerElement::fXmin!Minimum of data member if a range is specified [xmin,xmax,nbits]. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TStreamerElement. ←; TStreamerObjectAnyPointer. Function documentation; TStreamerObjectAnyPointer(); Default ctor. TStreamerObjectAnyPointer(const char* name, const char* title, Int_t offset, const char* typeName); Create a TStreamerObjectAnyPointer object. ~TStreamerObjectAnyPointer(); TStreamerObjectAnyPointer dtor. void Init(TObject* obj = 0); Setup the el",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TStreamerObjectAnyPointer.html:10457,inherit,inherits,10457,root/html604/TStreamerObjectAnyPointer.html,https://root.cern,https://root.cern/root/html604/TStreamerObjectAnyPointer.html,2,['inherit'],['inherits']
Modifiability,"t; static TStreamerElement::ESTLtypeTStreamerElement::kSTLunorderedset; static TStreamerElement::ESTLtypeTStreamerElement::kSTLvector; static TObject::(anonymous)TObject::kSingleKey; static TStreamerElement::(anonymous)TStreamerElement::kWholeObject; static TStreamerElement::(anonymous)TStreamerElement::kWrite; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTStreamerElement::fArrayDimnumber of array dimensions; Int_tTStreamerElement::fArrayLengthcumulative size of all array dims; TClass*TStreamerElement::fClassObject!pointer to class of object; Double_tTStreamerElement::fFactor!Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin); Int_tTStreamerElement::fMaxIndex[5]Maximum array index for array dimension ""dim""; TStringTNamed::fNameobject identifier; TClass*TStreamerElement::fNewClass!new element class when reading; Int_tTStreamerElement::fNewType!new element type when reading; Int_tTStreamerElement::fOffset!element offset in class; Int_tTStreamerElement::fSizesizeof element; TMemberStreamer*TStreamerElement::fStreamer!pointer to element Streamer; Int_tTStreamerElement::fTObjectOffset!base offset for TObject if the element inherits from it; TStringTNamed::fTitleobject title; Int_tTStreamerElement::fTypeelement type; TStringTStreamerElement::fTypeNameData type name of data member; Double_tTStreamerElement::fXmax!Maximum of data member if a range is specified [xmin,xmax,nbits]; Double_tTStreamerElement::fXmin!Minimum of data member if a range is specified [xmin,xmax,nbits]. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TStreamerElement. ←; TStreamerObjectPointer. Function documentation; TStreamerObjectPointer(); Default ctor. TStreamerObjectPointer(const char* name, const char* title, Int_t offset, const char* typeName); Create a TStreamerObjectPointer object. ~TStreamerObjectPointer(); TStreamerObjectPointer dtor. void Init(TObject* obj = 0); Setup the element. const char ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TStreamerObjectPointer.html:10420,inherit,inherits,10420,root/html604/TStreamerObjectPointer.html,https://root.cern,https://root.cern/root/html604/TStreamerObjectPointer.html,2,['inherit'],['inherits']
Modifiability,"t; static TStreamerElement::ESTLtypeTStreamerElement::kSTLunorderedset; static TStreamerElement::ESTLtypeTStreamerElement::kSTLvector; static TObject::(anonymous)TObject::kSingleKey; static TStreamerElement::(anonymous)TStreamerElement::kWholeObject; static TStreamerElement::(anonymous)TStreamerElement::kWrite; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTStreamerElement::fArrayDimnumber of array dimensions; Int_tTStreamerElement::fArrayLengthcumulative size of all array dims; TClass*TStreamerElement::fClassObject!pointer to class of object; Double_tTStreamerElement::fFactor!Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin); Int_tTStreamerElement::fMaxIndex[5]Maximum array index for array dimension ""dim""; TStringTNamed::fNameobject identifier; TClass*TStreamerElement::fNewClass!new element class when reading; Int_tTStreamerElement::fNewType!new element type when reading; Int_tTStreamerElement::fOffset!element offset in class; Int_tTStreamerElement::fSizesizeof element; TMemberStreamer*TStreamerElement::fStreamer!pointer to element Streamer; Int_tTStreamerElement::fTObjectOffset!base offset for TObject if the element inherits from it; TStringTNamed::fTitleobject title; Int_tTStreamerElement::fTypeelement type; TStringTStreamerElement::fTypeNameData type name of data member; Double_tTStreamerElement::fXmax!Maximum of data member if a range is specified [xmin,xmax,nbits]; Double_tTStreamerElement::fXmin!Minimum of data member if a range is specified [xmin,xmax,nbits]. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TStreamerElement. ←; TStreamerString. Function documentation; TStreamerString(); Default ctor. TStreamerString(const char* name, const char* title, Int_t offset); Create a TStreamerString object. ~TStreamerString(); TStreamerString dtor. const char * GetInclude() const; Return the proper include for this element. Int_t GetSize() const; Returns size of anyclas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TStreamerString.html:10339,inherit,inherits,10339,root/html604/TStreamerString.html,https://root.cern,https://root.cern/root/html604/TStreamerString.html,2,['inherit'],['inherits']
Modifiability,"t; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fDim; }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. { return fState.VariableParameters(); }. bool ProvidesError() const; minimizer provides error and error matrix. { return true; }. const double * Errors() const; return errors at the minimum. double CovMatrix(unsigned int i, unsigned int j) const. return covariance matrix elements; if the variable is fixed or const the value is zero; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. bool GetCovMatrix(double* cov) const. Fill the passed array with the covariance matrix elements; if the variable is fixed or const the value is zero.; The array will be filled as cov[i *ndim + j]; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. bool GetHessianMatrix(double* h) const. Fill the passed array with the Hessian matrix elements; The Hessian matrix is the matrix of the second derivatives; and is the inverse of the covariance matrix; If the variable is fixed or const the values for that variables are zero.; The array will be filled as h[i *ndim + j]. int CovMatrixStatus() const. return the status of the covariance matrix. double Correlation(unsigned int i, unsigned int j) const. return correlation coefficient between variable i and j.; If the variable is fixed or const the return value is zero. double GlobalCC(unsigned int i) const. get global correlation coefficient for the variable i. This is a number between zero and one which gives; the correlation between the i-th variable and that linear combination of all other variables whi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ROOT__Minuit2__Minuit2Minimizer.html:9077,variab,variables,9077,root/html530/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html530/ROOT__Minuit2__Minuit2Minimizer.html,3,['variab'],['variables']
Modifiability,"t; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fDim; }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. { return fState.VariableParameters(); }. bool ProvidesError() const; minimizer provides error and error matrix. { return true; }. const double * Errors() const; return errors at the minimum. double CovMatrix(unsigned int i, unsigned int j) const. return covariance matrix elements; if the variable is fixed or const the value is zero; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. bool GetCovMatrix(double* cov) const. Fill the passed array with the covariance matrix elements; if the variable is fixed or const the value is zero.; The array will be filled as cov[i *ndim + j]; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. bool GetHessianMatrix(double* h) const. Fill the passed array with the Hessian matrix elements; The Hessian matrix is the matrix of the second derivatives; and is the inverse of the covariance matrix; If the variable is fixed or const the values for that variables are zero.; The array will be filled as h[i *ndim + j]. int CovMatrixStatus() const. return the status of the covariance matrix; status = -1 : not available (inversion failed or Hesse failed); status = 0 : available but not positive defined; status = 1 : covariance only approximate; status = 2 : full matrix but forced pos def; status = 3 : full accurate matrix. double Correlation(unsigned int i, unsigned int j) const. return correlation coefficient between variable i and j.; If the variable is fixed or const the return value is zero. double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Minuit2__Minuit2Minimizer.html:10514,variab,variables,10514,root/html534/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Minuit2__Minuit2Minimizer.html,6,['variab'],['variables']
Modifiability,"t; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Double_tNewFitness(Double_t oldF, Double_t newF); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::GeneticFitter&operator=(const TMVA::GeneticFitter&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidTMVA::Configurable::PrintOptions() const; virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual Double_tRun(vector<Double_t>& pars); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__GeneticFitter.html:4568,Config,Configurable,4568,root/html602/TMVA__GeneticFitter.html,https://root.cern,https://root.cern/root/html602/TMVA__GeneticFitter.html,2,['Config'],['Configurable']
Modifiability,"t; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual Double_tGetTmax() const; virtual Double_tGetTmin() const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis(); const TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis(); const TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis(); const TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH3::Integral(Option_t* option = """") const; virtual Double_tTH3::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Option_t* option = """") const; virtual Double_tTH3::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Double_t& err, Option_t* option = """") const; virtual Double_tTH3::Interpolate(Double_t x); virtual Double_tTH3::Interpolate(Double_t x, Double_t y); virtual Double_tTH3::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProfile3D.html:13084,Inherit,InheritsFrom,13084,root/html602/TProfile3D.html,https://root.cern,https://root.cern/root/html602/TProfile3D.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis(); const TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis(); const TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis(); const TAxis*TH1::GetZaxis() const; virtual Double_tGetZmax() const; virtual Double_tGetZmin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH2::Integral(Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Option_t* = """") const; virtual Double_tTH2::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tTH2::Interpolate(Double_t x); virtual Double_tTH2::Interpolate(Double_t x, Double_t y); virtual Double_tTH2::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProfile2D.html:13264,Inherit,InheritsFrom,13264,root/html602/TProfile2D.html,https://root.cern,https://root.cern/root/html602/TProfile2D.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis(); const TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis(); const TAxis*TH1::GetYaxis() const; virtual Double_tGetYmax() const; virtual Double_tGetYmin() const; TAxis*TH1::GetZaxis(); const TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH1::Integral(Option_t* option = """") const; virtual Double_tTH1::Integral(Int_t binx1, Int_t binx2, Option_t* option = """") const; virtual Double_tTH1::IntegralAndError(Int_t binx1, Int_t binx2, Double_t& err, Option_t* option = """") const; virtual Double_tTH1::Interpolate(Double_t x); virtual Double_tTH1::Interpolate(Double_t x, Double_t y); virtual Double_tTH1::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Double_tTH1::KolmogorovTest(const TH1* h2, Option_t* option = """") const; virtual voidL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProfile.html:12804,Inherit,InheritsFrom,12804,root/html602/TProfile.html,https://root.cern,https://root.cern/root/html602/TProfile.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t; virtual Int_tGetNfill() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TTreeFormula*GetSelect() const; virtual Long64_tGetSelectedRows() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_t*GetV1() const; virtual Double_t*GetV2() const; virtual Double_t*GetV3() const; virtual Double_t*GetV4() const; virtual Double_t*GetVal(Int_t) const; virtual TTreeFormula*GetVar(Int_t) const; virtual TTreeFormula*GetVar1() const; virtual TTreeFormula*GetVar2() const; virtual TTreeFormula*GetVar3() const; virtual TTreeFormula*GetVar4() const; virtual Double_t*GetW() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual Int_tMakeClass(const char* classname, const char* option); virtual Int_tMakeCode(const char* filename); virtual Int_tMakeProxy(const char* classname, const char* macrofilename = 0, const char* cutfilename = 0, const char* option = 0, Int_t maxUnrolling = 3); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* pt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVirtualTreePlayer.html:3987,Inherit,InheritsFrom,3987,root/html532/TVirtualTreePlayer.html,https://root.cern,https://root.cern/root/html532/TVirtualTreePlayer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t; virtual Int_tGetNfill() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TTreeFormula*GetSelect() const; virtual Long64_tGetSelectedRows() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_t*GetV1() const; virtual Double_t*GetV2() const; virtual Double_t*GetV3() const; virtual Double_t*GetV4() const; virtual Double_t*GetVal(Int_t) const; virtual TTreeFormula*GetVar(Int_t) const; virtual TTreeFormula*GetVar1() const; virtual TTreeFormula*GetVar2() const; virtual TTreeFormula*GetVar3() const; virtual TTreeFormula*GetVar4() const; virtual Double_t*GetW() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual Int_tMakeClass(const char* classname, const char* option); virtual Int_tMakeCode(const char* filename); virtual Int_tMakeProxy(const char* classname, const char* macrofilename = 0, const char* cutfilename = 0, const char* option = 0, Int_t maxUnrolling = 3); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::oper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualTreePlayer.html:4011,Inherit,InheritsFrom,4011,root/html602/TVirtualTreePlayer.html,https://root.cern,https://root.cern/root/html602/TVirtualTreePlayer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tGetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tGetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TShape.html:3307,Inherit,InheritsFrom,3307,root/html532/TShape.html,https://root.cern,https://root.cern/root/html532/TShape.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tGetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tGetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TShape.html:3231,Inherit,InheritsFrom,3231,root/html602/TShape.html,https://root.cern,https://root.cern/root/html602/TShape.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t; virtual TObject*TObject::FindObject(const TObject* obj) const; UInt_tGetAttachBottom() const; UInt_tGetAttachLeft() const; UInt_tGetAttachRight() const; UInt_tGetAttachTop() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; ULong_tTGLayoutHints::GetLayoutHints() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTGLayoutHints::GetPadBottom() const; Int_tTGLayoutHints::GetPadLeft() const; Int_tTGLayoutHints::GetPadRight() const; Int_tTGLayoutHints::GetPadTop() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGLayoutHints::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGTableLayoutHints.html:4527,Inherit,InheritsFrom,4527,root/html532/TGTableLayoutHints.html,https://root.cern,https://root.cern/root/html532/TGTableLayoutHints.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t; virtual TObject*TObject::FindObject(const TObject* obj) const; UInt_tGetAttachBottom() const; UInt_tGetAttachLeft() const; UInt_tGetAttachRight() const; UInt_tGetAttachTop() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; ULong_tTGLayoutHints::GetLayoutHints() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTGLayoutHints::GetPadBottom() const; Int_tTGLayoutHints::GetPadLeft() const; Int_tTGLayoutHints::GetPadRight() const; Int_tTGLayoutHints::GetPadTop() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGLayoutHints::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTableLayoutHints.html:4312,Inherit,InheritsFrom,4312,root/html602/TGTableLayoutHints.html,https://root.cern,https://root.cern/root/html602/TGTableLayoutHints.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TGeoElement*GetElement(Int_t z); TGeoElementRN*GetElementRN(Int_t ENDFcode) const; TGeoElementRN*GetElementRN(Int_t a, Int_t z, Int_t iso = 0) const; TObjArray*GetElementsRN() const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; Int_tGetNelements() const; Int_tGetNelementsRN() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tHasDefaultElements() const; virtual ULong_tTObject::Hash() const; Bool_tHasRNElements() const; voidImportElementsRN(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoElementTable.html:3302,Inherit,InheritsFrom,3302,root/html532/TGeoElementTable.html,https://root.cern,https://root.cern/root/html532/TGeoElementTable.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TGeoElement*GetElement(Int_t z); TGeoElementRN*GetElementRN(Int_t ENDFcode) const; TGeoElementRN*GetElementRN(Int_t a, Int_t z, Int_t iso = 0) const; TObjArray*GetElementsRN() const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; Int_tGetNelements() const; Int_tGetNelementsRN() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tHasDefaultElements() const; virtual ULong_tTObject::Hash() const; Bool_tHasRNElements() const; voidImportElementsRN(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoElementTable.html:3282,Inherit,InheritsFrom,3282,root/html602/TGeoElementTable.html,https://root.cern,https://root.cern/root/html602/TGeoElementTable.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Int_tGetLastPoint() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; Int_tGetN() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_t*GetX() const; Double_t*GetY() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* list); virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPolyLine.html:3337,Inherit,InheritsFrom,3337,root/html532/TPolyLine.html,https://root.cern,https://root.cern/root/html532/TPolyLine.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Int_tGetLastPoint() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; Int_tGetN() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_t*GetX() const; Double_t*GetY() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* list); virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPolyLine.html:3107,Inherit,InheritsFrom,3107,root/html602/TPolyLine.html,https://root.cern,https://root.cern/root/html602/TPolyLine.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t; virtual const char*TObject::GetName() const; virtual Long64_tTFileCacheRead::GetNoCacheBytesRead() const; virtual Int_tTFileCacheRead::GetNoCacheReadCalls() const; Int_tTFileCacheRead::GetNseek() const; Int_tTFileCacheRead::GetNtot() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Long64_tTFileCacheRead::GetPrefetchedBlocks() const; virtual TFilePrefetch*TFileCacheRead::GetPrefetchObj(); virtual Int_tTFileCacheRead::GetReadCalls() const; virtual const char*TObject::GetTitle() const; TTree*GetTree() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTFileCacheRead::GetUnzipBuffer(char**, Long64_t, Int_t, Bool_t*); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTFileCacheRead::IsAsyncReading() const; Bool_tIsAutoCreated() const; virtual Bool_tIsEnabled() const; virtual Bool_tTFileCacheRead::IsEnablePrefetching() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsLearning() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLearnPrefill(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTreeCache.html:12792,Inherit,InheritsFrom,12792,root/html534/TTreeCache.html,https://root.cern,https://root.cern/root/html534/TTreeCache.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t; virtual const char*TObject::GetName() const; virtual Long64_tTFileCacheRead::GetNoCacheBytesRead() const; virtual Int_tTFileCacheRead::GetNoCacheReadCalls() const; Int_tTFileCacheRead::GetNseek() const; Int_tTFileCacheRead::GetNtot() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Long64_tTFileCacheRead::GetPrefetchedBlocks() const; virtual TFilePrefetch*TFileCacheRead::GetPrefetchObj(); virtual Int_tTFileCacheRead::GetReadCalls() const; virtual const char*TObject::GetTitle() const; TTree*GetTree() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTFileCacheRead::GetUnzipBuffer(char**, Long64_t, Int_t, Bool_t*); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTFileCacheRead::IsAsyncReading() const; Bool_tIsAutoCreated() const; virtual Bool_tIsEnabled() const; virtual Bool_tTFileCacheRead::IsEnablePrefetching() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsLearning() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLearnPrefill(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeCache.html:12755,Inherit,InheritsFrom,12755,root/html602/TTreeCache.html,https://root.cern,https://root.cern/root/html602/TTreeCache.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t; virtual voidDoFill(Long64_t entry, Double_t w, const Double_t* v); voidTProofDraw::FillWeight(); voidTObject::MakeZombie(); virtual Bool_tTProofDraw::ProcessSingle(Long64_t, Int_t); voidTProofDraw::SetCanvas(const char* objname); voidTProofDraw::SetDrawAtt(TObject* o); voidTProofDraw::SetError(const char* sub, const char* mesg). private:. voidDefVar1D(); voidDefVar2D(); voidDefVar3D(). Data Members; public:. enum TProofDraw::[unnamed] { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TH1*fHistogram; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Begin1D(TTree* t); Initialization for 1D Histogram. void Begin2D(TTree* t); Initialization for 2D histogram. void Beg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofDrawHist.html:7158,variab,variability,7158,root/html534/TProofDrawHist.html,https://root.cern,https://root.cern/root/html534/TProofDrawHist.html,2,['variab'],['variability']
Modifiability,"t; virtual voidDoFill(Long64_t entry, Double_t w, const Double_t* v); voidTProofDraw::FillWeight(); voidTObject::MakeZombie(); virtual Bool_tTProofDraw::ProcessSingle(Long64_t, Int_t); voidTProofDraw::SetCanvas(const char* objname); voidTProofDraw::SetDrawAtt(TObject* o); voidTProofDraw::SetError(const char* sub, const char* mesg). private:. voidDefVar1D(); voidDefVar2D(); voidDefVar3D(). Data Members; public:. enum TProofDraw::[unnamed] { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tTProofDraw::fDimensionDimension of the current expression; TH1*fHistogram; TStringTProofDraw::fInitialExp; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusselector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Begin1D(TTree* t); Initialization for 1D Histogram. void Begin2D(TTree* t); Initialization for 2D histogram. void Begin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofDrawHist.html:7092,variab,variability,7092,root/html530/TProofDrawHist.html,https://root.cern,https://root.cern/root/html530/TProofDrawHist.html,3,['variab'],['variability']
Modifiability,"t; virtual voidForceDecay(); voidForceParticleDecay(Int_t particle, Int_t product, Int_t mult); voidForceParticleDecay(Int_t particle, Int_t* products, Int_t* mult, Int_t npart); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Float_tGetLifetime(Int_t kf); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tGetPartialBranchingRatio(Int_t ipart); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual Int_tImportParticles(TClonesArray* particles); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(); virtual voidTObject::Inspect() constMENU ; static TPythia6Decayer*Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::opera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPythia6Decayer.html:2993,Inherit,InheritsFrom,2993,root/html532/TPythia6Decayer.html,https://root.cern,https://root.cern/root/html532/TPythia6Decayer.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t; virtual voidGetMeshNumbers(Int_t& nvert, Int_t& nsegs, Int_t& npols) const; virtual const char*TGeoShape::GetName() const; virtual Int_tGetNmeshVertices() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tGetPointsOnSegments(Int_t, Double_t*) const; Double_tGetRhi() const; Double_tGetRlo() const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(Double_t* point, Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tIsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGeoShape::IsReflected() const; Bool_tTGeoShape::IsRunTimeShape() const; static Bool_tTGeoShape::IsSameWithinTolerance(Double_t a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoParaboloid.html:5692,Inherit,InheritsFrom,5692,root/html532/TGeoParaboloid.html,https://root.cern,https://root.cern/root/html532/TGeoParaboloid.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t; virtual voidGetMeshNumbers(Int_t& nvert, Int_t& nsegs, Int_t& npols) const; virtual const char*TGeoShape::GetName() const; virtual Int_tGetNmeshVertices() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tGetPointsOnSegments(Int_t, Double_t*) const; Double_tGetRhi() const; Double_tGetRlo() const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, const Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(const Double_t* point, const Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tIsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(const Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGeoShape::IsReflected() const; Bool_tTGeoShape::IsRunTimeShape() const; static Bool_tTGeoShape::IsSameWi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoParaboloid.html:6311,Inherit,InheritsFrom,6311,root/html534/TGeoParaboloid.html,https://root.cern,https://root.cern/root/html534/TGeoParaboloid.html,3,['Inherit'],['InheritsFrom']
Modifiability,"t; virtual voidGetPointComplex(const Int_t* ipoint, Double_t& re, Double_t& im, Bool_t fromInput = kFALSE) const; virtual Double_tGetPointReal(Int_t ipoint, Bool_t fromInput = kFALSE) const; virtual Double_tGetPointReal(const Int_t* ipoint, Bool_t fromInput = kFALSE) const; virtual voidGetPoints(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* re, Double_t* im, Bool_t fromInput = kFALSE) const; virtual Double_t*GetPointsReal(Bool_t fromInput = kFALSE) const; virtual Int_tGetSign() const; virtual Int_tGetSize() const; virtual const char*TObject::GetTitle() const; virtual Option_t*GetTransformFlag() const; virtual Option_t*GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(Option_t* flags, Int_t, const Int_t*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInplace() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFFTComplexReal.html:4792,Inherit,InheritsFrom,4792,root/html532/TFFTComplexReal.html,https://root.cern,https://root.cern/root/html532/TFFTComplexReal.html,4,['Inherit'],['InheritsFrom']
Modifiability,"t; virtual voidGetPointComplex(const Int_t* ipoint, Double_t& re, Double_t& im, Bool_t fromInput = kFALSE) const; virtual Double_tGetPointReal(Int_t ipoint, Bool_t fromInput = kFALSE) const; virtual Double_tGetPointReal(const Int_t* ipoint, Bool_t fromInput = kFALSE) const; virtual voidGetPoints(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* re, Double_t* im, Bool_t fromInput = kFALSE) const; virtual Double_t*GetPointsReal(Bool_t fromInput = kFALSE) const; virtual Int_tGetSign() const; virtual Int_tGetSize() const; virtual const char*TObject::GetTitle() const; virtual Option_t*GetTransformFlag() const; virtual Option_t*GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(Option_t* flags, Int_t, const Int_t*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInplace() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFFTComplexReal.html:4635,Inherit,InheritsFrom,4635,root/html602/TFFTComplexReal.html,https://root.cern,https://root.cern/root/html602/TFFTComplexReal.html,4,['Inherit'],['InheritsFrom']
Modifiability,"t; virtual voidParameterGradient(double x, const double* par, double* grad) const; virtual stringParameterName(unsigned int i) const; virtual const double*Parameters() const; static voidSetDerivPrecision(double eps); virtual voidSetParameters(const double* p); ROOT::Math::WrappedTF1WrappedTF1(TF1& f); ROOT::Math::WrappedTF1WrappedTF1(const ROOT::Math::WrappedTF1& rhs). private:. virtual doubleDoDerivative(double x) const; virtual doubleDoEval(double x) const; virtual doubleDoEvalPar(double x, const double* p) const; virtual doubleDoParameterDerivative(double x, const double* p, unsigned int ipar) const. Data Members; private:. TF1*fFuncpointer to ROOT function; boolfLinearflag for linear functions ; vector<double>fParamscached vector with parameter values; boolfPolynomialflag for polynomial functions ; doublefX[1]! cached vector for x value (needed for TF1::EvalPar signature) ; static doublefgEpsepsilon used in derivative calculation h ~ eps |x|. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; WrappedTF1(TF1& f). constructor from a TF1 function pointer. virtual ~WrappedTF1(). Destructor (no operations). TF1 Function pointer is not owned. {}. WrappedTF1(TF1& f). Copy constructor. ROOT::Math::IGenFunction * Clone() const; @name interface inherited from IFunction . Clone the wrapper but not the original function. const double * Parameters() const; @name interface inherited from IParamFunction ; get the parameter values (return values cachen inside, those inside TF1 might be different). void SetParameters(const double* p); set parameter values (only the cached one in this class,leave unchanges those of TF1). unsigned int NPar() const; return number of parameters. std::string ParameterName(unsigned int i) const; return parameter name (this is stored in TF1). void ParameterGradient(double x, const double* par, double* grad) const; evaluate the derivative of the function with respect to the parameters. void FdF(double x, double& f,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__WrappedTF1.html:2529,Inherit,Inheritance,2529,root/html532/ROOT__Math__WrappedTF1.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__WrappedTF1.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); virtual Bool_tRooAbsPdf::syncNormalization(const RooArgSet* dset, Bool_t adjustProxies = kTRUE) const; Double_tRooAbsReal::traceEval(const RooArgSet* set) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum Setting { Linear; NonLinear; NonLinearPosFractions; NonLinearLinFractions; };; enum RooAbsPdf::ExtendMode { CanNotBeExtended; CanBeExtended; MustBeExtended; };; enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. TMatrixD*_M; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooObjCacheManager_cacheMgr! The cache manager; RooRefCountListRooAbsArg::_clientListlist of client obje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooMomentMorph.html:36237,Extend,ExtendMode,36237,root/html532/RooMomentMorph.html,https://root.cern,https://root.cern/root/html532/RooMomentMorph.html,2,"['Config', 'Extend']","['ConfigChange', 'ExtendMode']"
Modifiability,"t; virtual voidTCollection::PrintCollectionHeader(Option_t* option) const. Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TCollection::(anonymous)TCollection::kInitCapacity; static TCollection::(anonymous)TCollection::kInitHashTableCapacity; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Bool_tTList::fAscending! sorting order (when calling Sort() or for TSortedList); TObjLink*TList::fCache! cache to speedup sequential calling of Before() and After() functions; TObjLink*TList::fFirst! pointer to first entry in linked list; TStringfJobIDthe job's ID; TObjLink*TList::fLast! pointer to last entry in linked list; TStringTCollection::fNamename of the collection; Int_tTCollection::fSizenumber of elements in collection; Bool_tTSeqCollection::fSortedtrue if collection has been sorted; static TCollection::(anonymous)TCollection::kIsOwner. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGridJobStatusList(); { }. virtual ~TGridJobStatusList(); { }. » Author: Andreas-Joachim Peters 10/12/2006 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id$ » Last generated: 2015-06-30 15:06; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGridJobStatusList.html:10668,Inherit,Inheritance,10668,root/html602/TGridJobStatusList.html,https://root.cern,https://root.cern/root/html602/TGridJobStatusList.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t; virtual voidTCollection::PrintCollectionHeader(Option_t* option) const. Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TCollection::(anonymous)TCollection::kInitCapacity; static TCollection::(anonymous)TCollection::kInitHashTableCapacity; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Bool_tTList::fAscending! sorting order (when calling Sort() or for TSortedList); TObjLink*TList::fCache! cache to speedup sequential calling of Before() and After() functions; TObjLink*TList::fFirst! pointer to first entry in linked list; TStringfJobIDthe job's ID; TObjLink*TList::fLast! pointer to last entry in linked list; TStringTCollection::fNamename of the collection; Int_tTCollection::fSizenumber of elements in collection; Bool_tTSeqCollection::fSortedtrue if collection has been sorted; static TCollection::(anonymous)TCollection::kIsOwner. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGridJobStatusList(); { }. virtual ~TGridJobStatusList(); { }. » Author: Andreas-Joachim Peters 10/12/2006 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id$ » Last generated: 2015-09-08 17:44; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGridJobStatusList.html:10668,Inherit,Inheritance,10668,root/html604/TGridJobStatusList.html,https://root.cern,https://root.cern/root/html604/TGridJobStatusList.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Double_tTRandom::Gaus(Double_t mean = 0, Double_t sigma = 1); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Int_tGetLuxury() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual UInt_tGetSeed() const; static voidGetTableSeeds(UInt_t* seeds, Int_t index); const UInt_t*GetTheSeeds() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual UInt_tTRandom::Integer(UInt_t imax); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Double_tTRandom::Landau(Double_t mean = 0, Double_t sigma = 1); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRandom1.html:3229,Inherit,InheritsFrom,3229,root/html532/TRandom1.html,https://root.cern,https://root.cern/root/html532/TRandom1.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Double_tTRandom::Gaus(Double_t mean = 0, Double_t sigma = 1); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Int_tGetLuxury() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual UInt_tGetSeed() const; static voidGetTableSeeds(UInt_t* seeds, Int_t index); const UInt_t*GetTheSeeds() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual UInt_tTRandom::Integer(UInt_t imax); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Double_tTRandom::Landau(Double_t mean = 0, Double_t sigma = 1); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRandom1.html:3123,Inherit,InheritsFrom,3123,root/html602/TRandom1.html,https://root.cern,https://root.cern/root/html602/TRandom1.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidFinishEvent(); virtual voidFinishPrimary(); virtual voidFinishWorkerRun() const; virtual voidGeaneStepping(); virtual voidGeneratePrimaries(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitForWorker() const; virtual voidInitGeometry(); virtual voidTObject::Inspect() constMENU ; static TVirtualMCApplication*Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidMerge(TVirtualMCApplication*); virtual Bool_tMisalignGeometry(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TVirtualMCApplication.html:3037,Inherit,InheritsFrom,3037,root/html534/TVirtualMCApplication.html,https://root.cern,https://root.cern/root/html534/TVirtualMCApplication.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidFinishEvent(); virtual voidFinishPrimary(); virtual voidFinishWorkerRun() const; virtual voidGeaneStepping(); virtual voidGeneratePrimaries(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitForWorker() const; virtual voidInitGeometry(); virtual voidTObject::Inspect() constMENU ; static TVirtualMCApplication*Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidMerge(TVirtualMCApplication*); virtual Bool_tMisalignGeometry(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualMCApplication.html:3061,Inherit,InheritsFrom,3061,root/html602/TVirtualMCApplication.html,https://root.cern,https://root.cern/root/html602/TVirtualMCApplication.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t; voidTObject::MakeZombie(). Data Members; public:. TQueryDescription*fActQuerycurrent (actual) query; TStringfAddressserver address; Bool_tfAttachedkTRUE if attached; Bool_tfAutoEnableenable packages at session startup time; TStringfConfigFileconfiguration file name; Bool_tfConnectedkTRUE if connected; Bool_tfLocalkTRUE if session is local; Int_tfLogLevellog (debug) level; TStringfNamesession name; Int_tfNbHistosnumber of feedback histos; TList*fPackageslist of packages; Int_tfPortcommunication port; TProof*fProofpointer on TProof used by this session; TProofMgr*fProofMgrProof sessions manager; TList*fQuerieslist of queries in this session; Bool_tfSynckTRUE if in sync mode; TStringfTagsession unique identifier; TStringfUserNameuser name (on server); static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance Chart:. TObject. ←; TSessionDescription. Function documentation; const char * GetName() const; { return fQueryName; }. » Author: Marek Biskup, Jakub Madejczyk, Bertrand Bellenot 10/08/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/sessionviewer:$Id$ » Last generated: 2015-06-02 16:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TSessionDescription.html:6584,Inherit,Inheritance,6584,root/html604/TSessionDescription.html,https://root.cern,https://root.cern/root/html604/TSessionDescription.html,1,['Inherit'],['Inheritance']
Modifiability,"t; voidTObject::MakeZombie(). Data Members; public:. TQueryDescription*fActQuerycurrent (actual) query; TStringfAddressserver address; Bool_tfAttachedkTRUE if attached; Bool_tfAutoEnableenable packages at session startup time; TStringfConfigFileconfiguration file name; Bool_tfConnectedkTRUE if connected; Bool_tfLocalkTRUE if session is local; Int_tfLogLevellog (debug) level; TStringfNamesession name; Int_tfNbHistosnumber of feedback histos; TList*fPackageslist of packages; Int_tfPortcommunication port; TProof*fProofpointer on TProof used by this session; TProofMgr*fProofMgrProof sessions manager; TList*fQuerieslist of queries in this session; Bool_tfSynckTRUE if in sync mode; TStringfTagsession unique identifier; TStringfUserNameuser name (on server); static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance Chart:. TObject. ←; TSessionDescription. Function documentation; const char * GetName() const; { return fQueryName; }. » Author: Marek Biskup, Jakub Madejczyk, Bertrand Bellenot 10/08/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/sessionviewer:$Id$ » Last generated: 2015-06-30 15:30; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSessionDescription.html:6584,Inherit,Inheritance,6584,root/html602/TSessionDescription.html,https://root.cern,https://root.cern/root/html602/TSessionDescription.html,1,['Inherit'],['Inheritance']
Modifiability,"t; voidTObject::MakeZombie(). private:. TEveVSD(const TEveVSD&); TEveVSD&operator=(const TEveVSD&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. TEveClusterfC; TEveRecCascadefCC; TEveMCRecCrossReffGI; TEveHitfH; TEveMCTrackfK; TEveRecKinkfKK; TEveRecTrackfR; TTree*fTreeC! Clusters.; TTree*fTreeCC! Cascades.; TTree*fTreeGI! Sim-Rec cross references.; TTree*fTreeH! Hits.; TTree*fTreeK! Kinematics.; TTree*fTreeKK! Kinks.; TTree*fTreeR! Reconstructed tracks.; TTree*fTreeV0! VO's.; TEveRecV0fV0; TEveCluster*fpC!; TEveRecCascade*fpCC!; TEveMCRecCrossRef*fpGI!; TEveHit*fpH!; TEveMCTrack*fpK!; TEveRecKink*fpKK!; TEveRecTrack*fpR!; TEveRecV0*fpV0!. protected:. Int_tfBuffSize!; TDirectory*fDirectory!; TFile*fFile!; Int_tfVerbose!. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveVSD(const char* name = ""TEveVSD"", const char* title = """"); Constructor. ~TEveVSD(); Destructor. void SetDirectory(TDirectory* dir); Set directory in which the trees are (or will be) created. void CreateTrees(); Create internal trees. void DeleteTrees(); Delete interal trees. void CreateBranches(); Create internal VSD branches. void SetBranchAddresses(); Set branche addresses of internal trees. void WriteTrees(); Does nothing here ... reimplemented in sub-classes. void LoadTrees(); Load internal trees from directory. void DisableTObjectStreamersForVSDStruct(); Disble TObject streamers for those VSD structs that inherit from; TObject directly. TEveVSD(const TEveVSD& ). TEveVSD& operator=(const TEveVSD& ). » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveVSD.html:6792,inherit,inherit,6792,root/html534/TEveVSD.html,https://root.cern,https://root.cern/root/html534/TEveVSD.html,4,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherit']"
Modifiability,"t; voidTObject::MakeZombie(); TTableIter(). private:. TTableIter&operator=(const TTableIter& org); TTableIter(const TTableIter& org). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. Int_tfFirstIndx; Int_tfIndx; const TTableSorter*fTableSorter; Int_tfTotalKeys. Class Charts. Inheritance Chart:. TObject. ←; TTableIter. Function documentation; TTableIter(const TTableSorter* table, Float_t& keyvalue); to be documented. TTableIter(const TTableSorter* table, Long_t& keyvalue); to be documented. TTableIter(const TTableSorter* table, Int_t& keyvalue); to be documented. TTableIter(const TTableSorter* table, Short_t& keyvalue); to be documented. TTableIter(const TTableSorter* table, Double_t& keyvalue); to be documented. Int_t CountKey(Float_t& keyvalue); to be documented. Int_t CountKey(Long_t& keyvalue); to be documented. Int_t CountKey(Int_t& keyvalue); to be documented. Int_t CountKey(Short_t& keyvalue); to be documented. Int_t CountKey(Double_t& keyvalue); to be documented. Int_t Next(); to be documented. Int_t Next(Int_t idx); to be documented. Int_t Reset(Int_t indx = 0); to be documented. Int_t GetNRows() const. { return fTotalKeys;}. Int_t operator()(). { return Next();}. Int_t operator[](Int_t idx). { return Next(idx);}. TTableIter(const TTableIter& org). TTableIt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTableIter.html:6326,Inherit,Inheritance,6326,root/html602/TTableIter.html,https://root.cern,https://root.cern/root/html602/TTableIter.html,2,['Inherit'],['Inheritance']
Modifiability,"t; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMonitor*TProof::fAllMonitormonitor activity on all valid slave sockets; TList*TProof::fAvailablePackageslist of available packages; TList*TProof::fBadSlavesdead slaves (subset of all slaves); Long64_tTProof::fBytesReadynumber of bytes staged; Int_tTProof::fCollectTimeoutTimeout for (some) collect actions; TStringTProof::fConfDirdirectory containing cluster config information; TStringTProof::fConfFilefile containing config information; TStringTProof::fDataPoolUrldefault data pool entry point URL; Bool_tTProof::fDataReadytrue if data is ready to be analyzed; Bool_tTProof::fDynamicStartupare the workers started dynamically?; TList*TProof::fEnabledPackageslist of enabled packages; TStringTProof::fImagemaster's image name; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; TProofMgr*TProof::fManagermanager to which this session belongs (if any); Bool_tTProof::fMasterServtrue if we are a master server; TStringTNamed::fNameobject identifier; Int_tTProof::fProtocolremote PROOF server protocol version number; TProof::EQueryModeTProof::fQueryModedefault query mode; TList*TProof::fRunningDSetsTemporary datasets used for async running; TProofMgr::EServTypeTProof::fServTypetype of server: proofd, XrdProofd; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TList*TProof::fSlaveslist of all slave servers as in config file; TStringTNamed::fTitleobject title; Long64_tTProof::fTotalBytesnumber of bytes to be analyzed; TUrlTProof::fUrlUrl of the master; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TSemaphore*TProof::fgSemaphoresemaphore to control no of parallel startup threads. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofSuperMaster(const char* masteru",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofSuperMaster.html:22402,config,config,22402,root/html528/TProofSuperMaster.html,https://root.cern,https://root.cern/root/html528/TProofSuperMaster.html,12,['config'],['config']
Modifiability,"t; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMonitor*TProof::fAllMonitormonitor activity on all valid slave sockets; TList*TProof::fAvailablePackageslist of available packages; TList*TProof::fBadSlavesdead slaves (subset of all slaves); Long64_tTProof::fBytesReadynumber of bytes staged; Int_tTProof::fCollectTimeoutTimeout for (some) collect actions; TStringTProof::fConfDirdirectory containing cluster config information; TStringTProof::fConfFilefile containing config information; TStringTProof::fDataPoolUrldefault data pool entry point URL; Bool_tTProof::fDataReadytrue if data is ready to be analyzed; Bool_tTProof::fDynamicStartupare the workers started dynamically?; TList*TProof::fEnabledPackageslist of enabled packages; TStringTProof::fImagemaster's image name; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; TProofMgr*TProof::fManagermanager to which this session belongs (if any); Bool_tTProof::fMasterServtrue if we are a master server; TStringTNamed::fNameobject identifier; Int_tTProof::fProtocolremote PROOF server protocol version number; TProof::EQueryModeTProof::fQueryModedefault query mode; TList*TProof::fRunningDSetsTemporary datasets used for async running; TProofMgr::EServTypeTProof::fServTypetype of server: proofd, XrdProofd; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TList*TProof::fSlaveslist of all slave servers as in config file; TStringTNamed::fTitleobject title; Long64_tTProof::fTotalBytesnumber of bytes to be analyzed; TUrlTProof::fUrlUrl of the master; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TSemaphore*TProof::fgSemaphoresemaphore to control no of parallel startup threads. private:. TCondor*fCondorproxy for our Condor pool; TTimer*fTimertimer for delayed Condor COD suspend. Class Charts. Inheritance",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofCondor.html:22516,config,config,22516,root/html528/TProofCondor.html,https://root.cern,https://root.cern/root/html528/TProofCondor.html,12,['config'],['config']
Modifiability,"t; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMonitor*TProof::fAllMonitormonitor activity on all valid slave sockets; TList*TProof::fAvailablePackageslist of available packages; TList*TProof::fBadSlavesdead slaves (subset of all slaves); Long64_tTProof::fBytesReadynumber of bytes staged; Int_tTProof::fCollectTimeoutTimeout for (some) collect actions; TStringTProof::fConfDirdirectory containing cluster config information; TStringTProof::fConfFilefile containing config information; TStringTProof::fDataPoolUrldefault data pool entry point URL; Bool_tTProof::fDataReadytrue if data is ready to be analyzed; Bool_tTProof::fDynamicStartupare the workers started dynamically?; TList*TProof::fEnabledPackageslist of enabled packages; TStringTProof::fImagemaster's image name; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; TProofMgr*TProof::fManagermanager to which this session belongs (if any); Bool_tTProof::fMasterServtrue if we are a master server; TStringTNamed::fNameobject identifier; Int_tTProof::fProtocolremote PROOF server protocol version number; TProof::EQueryModeTProof::fQueryModedefault query mode; TList*TProof::fRunningDSetsTemporary datasets used for async running; TProofMgr::EServTypeTProof::fServTypetype of server: proofd, XrdProofd; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TList*TProof::fSlaveslist of all slave servers as in config file; TStringTNamed::fTitleobject title; Long64_tTProof::fTotalBytesnumber of bytes to be analyzed; TUrlTProof::fUrlUrl of the master; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TSemaphore*TProof::fgSemaphoresemaphore to control no of parallel startup threads. private:. TStringfCacheDirDirectory containing cache of user files; TProofLockPath*fCacheLockCache dir locker; TStringfDataSetDi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofLite.html:22632,config,config,22632,root/html528/TProofLite.html,https://root.cern,https://root.cern/root/html528/TProofLite.html,12,['config'],['config']
Modifiability,"t; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. RooDataSet*_cacheDataset holding generared values of observables; RooArgSet_catVars; RooArgSet*_cloneSetSet owning clone of input function; RooAbsReal*_funcClonePointer to top level node of cloned function; const RooAbsReal*_funcMaxValContainer for maximum function value; RooRealVar*_funcValPtrRRVs storing function value in context and in output dataset; RooRealVar*_funcValStore; Bool_t_isValidVerbose and valid flag; static Int_tRooPrintable::_nameLength; RooArgSet_realVarsSets of discrete and real valued observabeles; Bool_t_verbose; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooAbsNumGenerator(); Destructor. void attachParameters(const RooArgSet& vars); Reattach original parameters to function clone. void printName(ostream& os) const; Print name of the generator. void printTitle(ostream& os) const; Print the title of the generator. void printClassName(ostream& os) const; Print the class name of the generator. void printArgs(ostream& os) const; Print the arguments of the generator. RooAbsNumGenerator* clone(const RooAbsReal& , const RooArgSet& genVars, const RooArgSet& condVars, const RooNumGenConfig& config, Bool_t verbose = kFALSE, const RooAbsReal* maxFuncVal = 0) const; If true, generator is in a valid state. void setVerbose(Bool_t verbose = kTRUE); If flag is true, verbose messaging will be active during generation. Bool_t isVerbose() const; Return status of verbose messaging flag. const RooArgSet * generateEvent(UInt_t remaining, Double_t& resampleRatio). Double_t getFuncMax(); { return 0 ; }. void P",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsNumGenerator.html:7950,Inherit,Inheritance,7950,root/html534/RooAbsNumGenerator.html,https://root.cern,https://root.cern/root/html534/RooAbsNumGenerator.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t;  ; DeclId_t GetDeclId () const;  ; const char * GetQualifiedName () const;  ; EDataType GetUnderlyingType () const;  Get the underlying integer type of the enum: enum E { kOne }; // ==> int enum F: long; // ==> long Returns kNumDataTypes if the enum is unknown / invalid. ;  ; TClass * IsA () const override;  ; Bool_t IsValid ();  Return true if this enum object is pointing to a currently loaded enum. ;  ; TEnum & operator= (const TEnum &);  Assign operator. ;  ; Long_t Property () const override;  Get property description word. For meaning of bits see EProperty. ;  ; void SetClass (TClass *cl);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Update (DeclId_t id);  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TDictionary & operator= (const TDictionary &other);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTEnum.html:3142,inherit,inherited,3142,doc/v632/classTEnum.html,https://root.cern,https://root.cern/doc/v632/classTEnum.html,4,['inherit'],['inherited']
Modifiability,"t;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TStreamerSTL (const TStreamerSTL &)=delete;  ; TStreamerSTL & operator= (const TStreamerSTL &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepeat = (1ULL << ( 10 )); , kRead = (1ULL << ( 11 )); , ;   kWrite = (1ULL << ( 12 )); , kDoNotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ESTLtype { ;   kSTL = ROOT::kSTLany; , kSTLstring = ROOT::kSTLstring; , kSTLvector = ROOT::kSTLvector; , kSTLlist = ROOT::kSTLlist; , ;   kSTLforwardlist = ROOT::kSTLforwardlist; , kSTLdeque = ROOT::kSTLdeque; , kSTLmap = ROOT::kSTLmap; , kSTLmultimap = ROOT::kSTLmultimap; , ;   kSTLset = ROOT::kSTLset; , kSTLmultiset = ROOT::kSTLmultiset; , kSTLunorderedset = ROOT::kSTLunorderedset; , kSTLunorderedmultiset = ROOT::kSTLunorderedmultiset; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerSTL.html:15109,inherit,inherited,15109,doc/master/classTStreamerSTL.html,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html,1,['inherit'],['inherited']
Modifiability,"t;  ; EHTTPVerb GetHTTPVerb () const;  ; const TString & GetObjectKey () const;  ; TString GetRequest (TS3HTTPRequest::EHTTPVerb httpVerb, Bool_t appendCRLF=kTRUE);  Returns the HTTP request ready to be sent to the server. ;  ; const TString & GetSecretKey () const;  ; const TString & GetTimeStamp () const;  ; TClass * IsA () const override;  ; TS3HTTPRequest & SetAccessKey (const TString &accessKey);  ; TS3HTTPRequest & SetAuthKeys (const TString &accessKey, const TString &secretKey);  ; TS3HTTPRequest & SetAuthType (TS3HTTPRequest::EAuthType authType);  ; TS3HTTPRequest & SetBucket (const TString &bucket);  ; TS3HTTPRequest & SetHost (const TString &host);  ; TS3HTTPRequest & SetObjectKey (const TString &objectKey);  ; TS3HTTPRequest & SetSecretKey (const TString &secretKey);  ; TS3HTTPRequest & SetSessionToken (const TString &token);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTS3HTTPRequest.html:2685,inherit,inherited,2685,doc/master/classTS3HTTPRequest.html,https://root.cern,https://root.cern/doc/master/classTS3HTTPRequest.html,1,['inherit'],['inherited']
Modifiability,"t;  ; Int_t GetNx () const;  ; Int_t GetNy () const;  ; Int_t GetNz () const;  ; Float_t GetOx () const;  ; Float_t GetOy () const;  ; Float_t GetOz () const;  ; void GetPosition (Float_t *p);  Get current position. ;  ; TClass * IsA () const override;  ; void Reset ();  Reset position to origin. ;  ; void SetDs (Float_t dx, Float_t dy, Float_t dz=0);  ; void SetNs (Int_t nx, Int_t ny, Int_t nz=1);  ; void SetOs (Float_t ox, Float_t oy, Float_t oz=0);  ; void SetTrans (TEveTrans *mx);  Set position into the translation part of mx. ;  ; void SetTransAdvance (TEveTrans *mx);  Set position into the translation part of mx and advance to the next grid position. ;  ; Bool_t Step ();  Move to the next grid position. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Subtract (TEveGridStepper &s);  Subtract current position of 's' from origin of this. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveGridStepper.html:2495,inherit,inherited,2495,doc/master/classTEveGridStepper.html,https://root.cern,https://root.cern/doc/master/classTEveGridStepper.html,1,['inherit'],['inherited']
Modifiability,"t;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TGeoBuilder * Instance (TGeoManager *geom);  Return pointer to singleton. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoBuilder ();  static pointer to singleton ;  ;  TGeoBuilder (const TGeoBuilder &)=delete;  ; TGeoBuilder & operator= (const TGeoBuilder &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Attributes; static TGeoBuilder * fgInstance = nullptr;  . Private Member Functions; void SetGeometry (TGeoManager *geom);  current geometry ;  . Private Attributes; TGeoManager * fGeometry;  . Additional In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoBuilder.html:15913,inherit,inherited,15913,doc/master/classTGeoBuilder.html,https://root.cern,https://root.cern/doc/master/classTGeoBuilder.html,1,['inherit'],['inherited']
Modifiability,"t;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TProofDraw; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSelector; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TSelector * GetSelector (const char *filename);  The code in filename is loaded (interpreted or compiled, see below), filename must contain a valid class implementation derived from TSelector. ;  ; static bool IsStandardDraw (const char *selec);  Find out if this is a standard selection used for Draw actions (either TSelectorDraw, TProofDraw or deriving from them). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawEntryList.html:10245,inherit,inherited,10245,doc/master/classTProofDrawEntryList.html,https://root.cern,https://root.cern/doc/master/classTProofDrawEntryList.html,18,['inherit'],['inherited']
Modifiability,"t;  ; TGeoShape * fShape;  ; Char_t fTransparency;  ; TGeoExtension * fUserExtension;  ; TGeoVoxelFinder * fVoxels;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Private Member Functions;  TGeoVolumeAssembly (const TGeoVolumeAssembly &)=delete;  Mutex for concurrent operations. ;  ; TGeoVolumeAssembly & operator= (const TGeoVolumeAssembly &)=delete;  . Additional Inherited Members;  Public Types inherited from TGeoVolume; enum  EGeoVolumeTypes { ;   kVolumeReplicated = (1ULL << ( 14 )); , kVolumeSelected = (1ULL << ( 15 )); , kVolumeDiv = (1ULL << ( 16 )); , kVolumeOverlap = (1ULL << ( 17 )); , ;   kVolumeImportNodes = (1ULL << ( 18 )); , kVolumeMulti = (1ULL << ( 19 )); , kVoxelsXYZ = (1ULL << ( 20 )); , kVoxelsCyl = (1ULL << ( 21 )); , ;   kVolumeClone = (1ULL << ( 22 )); , kVolumeAdded = (1ULL << ( 23 )); , kVolumeOC = (1ULL << ( 21 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TGeoAtt; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOver",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVolumeAssembly.html:28151,inherit,inherited,28151,doc/master/classTGeoVolumeAssembly.html,https://root.cern,https://root.cern/doc/master/classTGeoVolumeAssembly.html,1,['inherit'],['inherited']
Modifiability,"t;  ; TString fTrueTypeName;  ; TString fTypeName;  ; TMethodCall * fValueGetter;  ; TMethodCall * fValueSetter;  method that returns a value; ;  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TDataMember.h>. Inheritance diagram for TDataMember:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TDataMember::EStatusBits. private . EnumeratorkObjIsPersistent . De",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDataMember.html:21851,inherit,inherited,21851,doc/master/classTDataMember.html,https://root.cern,https://root.cern/doc/master/classTDataMember.html,1,['inherit'],['inherited']
Modifiability,t;  ; class  REveCalo2D;  ; class  REveCalo3D;  ; class  REveCaloData;  ; class  REveCaloDataHist;  ; class  REveCaloDataSelector;  ; class  REveCaloDataSliceSelector;  ; class  REveCaloDataVec;  ; class  REveCaloLego;  ; class  REveCaloViz;  ; class  REveChunkManager;  ; class  REveChunkVector;  ; class  REveClient;  ; class  REveCluster;  REveCluster Reconstructed cluster (also used in VSD). More...;  ; class  REveCollectionCompound;  ; class  REveCompound;  ; class  REveCompoundProjected;  ; class  REveDataCollection;  ; class  REveDataColumn;  ; class  REveDataItem;  ; class  REveDataItemList;  ; class  REveDataProxyBuilderBase;  ; class  REveDataSimpleProxyBuilder;  ; class  REveDataSimpleProxyBuilderTemplate;  ; class  REveDataTable;  ; class  REveDigitSet;  ; class  REveElement;  ; class  REveEllipsoid;  ; class  REveEllipsoidProjected;  ; class  REveException;  REveException Exception-type thrown by Eve classes. More...;  ; class  REveFrameBox;  ; class  REveGeoManagerHolder;  REveGeoManagerHolder Exception-safe global variable holders. More...;  ; class  REveGeoPolyShape;  ; class  REveGeoShape;  ; class  REveGeoShapeExtract;  ; class  REveGeoShapeProjected;  ; class  REveGeoTopNodeData;  ; class  REveGeoTopNodeViz;  ; class  REveHit;  REveHit Monte Carlo hit (also used in VSD). More...;  ; class  REveJetCone;  ; class  REveJetConeProjected;  ; class  REveLine;  REveLine An arbitrary polyline with fixed line and marker attributes. More...;  ; class  REveLineProjected;  ; class  REveMagField;  REveMagField Abstract interface to magnetic field. More...;  ; class  REveMagFieldConst;  REveMagFieldConst Interface to constant magnetic field. More...;  ; class  REveMagFieldDuo;  REveMagFieldDuo Interface to magnetic field with two different values depending on radius. More...;  ; class  REveManager;  ; class  REveMCRecCrossRef;  REveMCRecCrossRef Cross-reference of sim/rec data per particle (also used in VSD). More...;  ; class  REveMCTrack;  REveMCTrack. More...; ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Experimental.html:6728,variab,variable,6728,doc/master/namespaceROOT_1_1Experimental.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Experimental.html,1,['variab'],['variable']
Modifiability,t;  ; class  REveCalo2D;  ; class  REveCalo3D;  ; class  REveCaloData;  ; class  REveCaloDataHist;  ; class  REveCaloDataSelector;  ; class  REveCaloDataSliceSelector;  ; class  REveCaloDataVec;  ; class  REveCaloLego;  ; class  REveCaloViz;  ; class  REveChunkManager;  ; class  REveChunkVector;  ; class  REveClient;  ; class  REveCluster;  REveCluster Reconstructed cluster (also used in VSD). More...;  ; class  REveCollectionCompound;  ; class  REveCompound;  ; class  REveCompoundProjected;  ; class  REveDataCollection;  ; class  REveDataColumn;  ; class  REveDataItem;  ; class  REveDataItemList;  ; class  REveDataProxyBuilderBase;  ; class  REveDataSimpleProxyBuilder;  ; class  REveDataSimpleProxyBuilderTemplate;  ; class  REveDataTable;  ; class  REveDigitSet;  ; class  REveElement;  ; class  REveEllipsoid;  ; class  REveEllipsoidProjected;  ; class  REveException;  REveException Exception-type thrown by Eve classes. More...;  ; class  REveFrameBox;  ; class  REveGeoManagerHolder;  REveGeoManagerHolder Exception-safe global variable holders. More...;  ; class  REveGeoPolyShape;  ; class  REveGeoShape;  ; class  REveGeoShapeExtract;  ; class  REveGeoShapeProjected;  ; class  REveHit;  REveHit Monte Carlo hit (also used in VSD). More...;  ; class  REveJetCone;  ; class  REveJetConeProjected;  ; class  REveLine;  REveLine An arbitrary polyline with fixed line and marker attributes. More...;  ; class  REveLineProjected;  ; class  REveMagField;  REveMagField Abstract interface to magnetic field. More...;  ; class  REveMagFieldConst;  REveMagFieldConst Interface to constant magnetic field. More...;  ; class  REveMagFieldDuo;  REveMagFieldDuo Interface to magnetic field with two different values depending on radius. More...;  ; class  REveManager;  ; class  REveMCRecCrossRef;  REveMCRecCrossRef Cross-reference of sim/rec data per particle (also used in VSD). More...;  ; class  REveMCTrack;  REveMCTrack. More...;  ; class  REvePathMarkT;  Special-point on track: More...; ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1Experimental.html:6905,variab,variable,6905,doc/v632/namespaceROOT_1_1Experimental.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1Experimental.html,1,['variab'],['variable']
Modifiability,"t;  ; const Shape_t & GetShape () const;  ; std::size_t GetSize () const;  ; const Shape_t & GetStrides () const;  ; bool IsOwner () const;  ; bool IsView () const;  ; Value_t & operator() (const Index_t &idx);  Access elements. ;  ; const Value_t & operator() (const Index_t &idx) const;  Access elements. ;  ; Value_t & operator() (Idx... idx);  Access elements. ;  ; const Value_t & operator() (Idx... idx) const;  Access elements. ;  ; RTensor< Value_t, Container_t > Reshape (const Shape_t &shape) const;  Reshape tensor. ;  ; RTensor< Value_t, Container_t > Resize (const Shape_t &shape);  Resize tensor. ;  ; RTensor< Value_t, Container_t > Slice (const Slice_t &slice);  Create a slice of the tensor. ;  ; RTensor< Value_t, Container_t > Squeeze () const;  Squeeze dimensions. ;  ; RTensor< Value_t, Container_t > Transpose () const;  Transpose. ;  . Friends; class TCpuMatrix< AFloat >;  . Additional Inherited Members;  Protected Member Functions inherited from TMVA::Experimental::RTensor< AFloat, TCpuBuffer< AFloat > >; void ReshapeInplace (const Shape_t &shape);  Reshape tensor in place. ;  . #include <TMVA/DNN/Architectures/Cpu/CpuTensor.h>. Inheritance diagram for TMVA::DNN::TCpuTensor< AFloat >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Matrix_t. template<typename AFloat > . using TMVA::DNN::TCpuTensor< AFloat >::Matrix_t = TCpuMatrix<AFloat>. Definition at line 49 of file CpuTensor.h. ◆ MemoryLayout. template<typename AFloat > . using TMVA::DNN::TCpuTensor< AFloat >::MemoryLayout = TMVA::Experimental::MemoryLayout. Definition at line 48 of file CpuTensor.h. ◆ Scalar_t. template<typename AFloat > . using TMVA::DNN::TCpuTensor< AFloat >::Scalar_t = AFloat. Definition at line 50 of file CpuTensor.h. ◆ Shape_t. template<typename AFloat > . using TMVA::DNN::TCpuTensor< AFloat >::Shape_t = typename TMVA::Experimental::RTensor<AFloat>::Shape_t. Definition at line 47 of file CpuTensor.h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TCpuTensor.html:5556,inherit,inherited,5556,doc/master/classTMVA_1_1DNN_1_1TCpuTensor.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TCpuTensor.html,1,['inherit'],['inherited']
Modifiability,"t;  ; int idxmin (const double &m) const;  ; Int_t ij (const Int_t &i, const Int_t &j) const;  ; void initialize ();  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TString integralNameSuffix (const RooArgSet &iset, const RooArgSet *nset=nullptr, const char *rangeName=nullptr, bool omitEmpty=false) const;  Construct string with unique suffix name to give to integral object that encodes integrated observables, normalization observables and the integration range name. ;  ; bool isValid () const override;  Check if current value is valid. ;  ; virtual bool isValidReal (double, bool printError=false) const;  Interface function to check if given value is a valid value for this object. Returns true unless overridden. ;  ; void makeProjectionSet (const RooAbsArg *plotVar, const RooArgSet *allVars, RooArgSet &projectedVars, bool silent) const;  Utility function for plotOn() that constructs the set of observables to project when plotting ourselves as function of 'plotVar'. ;  ; bool matchArgs (const RooArgSet &allDeps, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMomentMorphFunc.html:51151,parameteriz,parameterized,51151,doc/master/classRooMomentMorphFunc.html,https://root.cern,https://root.cern/doc/master/classRooMomentMorphFunc.html,1,['parameteriz'],['parameterized']
Modifiability,"t;  ; virtual void GetPosition (Long64_t &min, Long64_t &max) const;  ; virtual void GetPosition (Long64_t *min, Long64_t *max) const;  ; TClass * IsA () const override;  ; void MapSubwindows () override;  map sub windows ;  ; virtual void PositionChanged ();  ; virtual void Pressed ();  ; virtual void Released ();  ; virtual void SetPosition (Double_t min, Double_t max);  ; virtual void SetPosition (Float_t min, Float_t max);  ; virtual void SetPosition (Int_t min, Int_t max);  ; virtual void SetPosition (Long64_t min, Long64_t max);  ; virtual void SetRange (Double_t min, Double_t max);  ; virtual void SetRange (Float_t min, Float_t max);  ; virtual void SetRange (Int_t min, Int_t max);  ; virtual void SetRange (Long64_t min, Long64_t max);  ; virtual void SetScale (Int_t scale);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDoubleHSlider.html:3563,inherit,inherited,3563,doc/master/classTGDoubleHSlider.html,https://root.cern,https://root.cern/doc/master/classTGDoubleHSlider.html,1,['inherit'],['inherited']
Modifiability,"t;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsStudy; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; RooArgSet _fitObs;  ! ;  ; std::string _fitObsName;  ; RooLinkedList _fitOpts;  ; RooAbsPdf * _fitPdf = nullptr;  ! ;  ; std::string _fitPdfName;  ; RooArgSet _genObs;  ! ;  ; std::string _genObsName;  ; RooLinkedList _genOpts;  ; RooAbsPdf * _genPdf = nullptr;  ! ;  ; std::string _genPdfN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGenFitStudy.html:11031,inherit,inherited,11031,doc/master/classRooGenFitStudy.html,https://root.cern,https://root.cern/doc/master/classRooGenFitStudy.html,3,['inherit'],['inherited']
Modifiability,"t;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsStudy; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; RooArgSet fParamPoint;  ; unsigned int fRandomSeed;  ; ToyMCSampler * fToyMCSampler;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1ToyMCStudy.html:10478,inherit,inherited,10478,doc/master/classRooStats_1_1ToyMCStudy.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1ToyMCStudy.html,3,['inherit'],['inherited']
Modifiability,"t;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TContextMenu; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1UL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveContextMenu.html:12069,inherit,inherited,12069,doc/master/classTEveContextMenu.html,https://root.cern,https://root.cern/doc/master/classTEveContextMenu.html,3,['inherit'],['inherited']
Modifiability,"t;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TGLSceneInfo * fGLSceneInfo;  ; TEveScene * fScene;  ; TEveViewer * fViewer;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveSceneInfo.html:25523,inherit,inherited,25523,doc/master/classTEveSceneInfo.html,https://root.cern,https://root.cern/doc/master/classTEveSceneInfo.html,3,['inherit'],['inherited']
Modifiability,"t;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQueryResult; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TProofQueryResult (Int_t seqnum, const char *opt, TList *inlist, Long64_t entries, Long64_t first, TDSet *dset, const char *selec, TObject *elist=0);  Main constructor. ;  ; void RecordEnd (EQueryStatus status, TList *outlist=0) override;  End of query settings. ;  ; void SetFinalized",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofQueryResult.html:10787,inherit,inherited,10787,doc/master/classTProofQueryResult.html,https://root.cern,https://root.cern/doc/master/classTProofQueryResult.html,3,['inherit'],['inherited']
Modifiability,"t;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystemFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TSystemDirectory (const TSystemDirectory &)=delete;  ; TSystemDirectory * FindDirObj (const char *name);  Method that returns system directory object if it exists in list, 0 otherwise. ;  ; TSystemFile * FindFileObj (const char *name, const char *dir);  Method that returns system fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystemDirectory.html:11265,inherit,inherited,11265,doc/master/classTSystemDirectory.html,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html,3,['inherit'],['inherited']
Modifiability,"t;  ; void Initialize ();  ; virtual TClass * IsA () const;  ; MsgLogger & Log () const;  ; void PrintCell (Long_t iCell=0);  Prints geometry of and elements of 'iCell', as well as relations to parent and daughter cells. ;  ; void PrintCells ();  Prints geometry of ALL cells of the FOAM. ;  ; virtual TH2D * Project2 (Int_t idim1, Int_t idim2, ECellValue cell_value=kValue, PDEFoamKernelBase *kernel=nullptr, UInt_t nbin=50);  Project foam variable idim1 and variable idim2 to histogram. ;  ; void ResetCellElements ();  Remove the cell elements from all cells. ;  ; void RootPlot2dim (const TString &filename, TString opt, Bool_t createCanvas=kTRUE, Bool_t colors=kTRUE);  Debugging tool which plots the cells of a 2-dimensional PDEFoam as rectangles in C++ format readable for ROOT. ;  ; void SetDensity (PDEFoamDensityBase *dens);  ; void SetDim (Int_t kDim);  Sets dimension of cubical space. ;  ; void SetEvPerBin (Int_t EvPerBin);  ; void SetInhiDiv (Int_t, Int_t);  This can be called before Create, after setting kDim It defines which variables are excluded in the process of the cell division. ;  ; void SetMaxDepth (UInt_t maxdepth);  ; void SetnBin (Int_t nBin);  ; void SetnCells (Long_t nCells);  ; void SetNmin (UInt_t val);  ; void SetnSampl (Long_t nSampl);  ; void SetXmax (Int_t idim, Double_t wmax);  set upper foam bound in dimension idim ;  ; void SetXmin (Int_t idim, Double_t wmin);  set lower foam bound in dimension idim ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; std::vector< Float_t > VarTransform (const std::vector< Float_t > &invec) const;  ; Float_t VarTransform (Int_t idim, Float_t x) const;  ; std::vector< Float_t > VarTransformInvers (const std::vector< Float_t > &invec) const;  ; Float_t VarTransformInvers (Int_t idim, Float_t x) const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &obj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoam.html:4798,variab,variables,4798,doc/master/classTMVA_1_1PDEFoam.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoam.html,1,['variab'],['variables']
Modifiability,"t;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Member Functions;  REvePointSetArray (const REvePointSetArray &)=delete;  ; REvePointSetArray & operator= (const REvePointSetArray &)=delete;  . Additional Inherited Members;  Public Types inherited from ROOT::Experimental::REveElement; typedef std::list< REveAunt * > AuntList_t;  ; enum  EChangeBits { ;   kCBColorSelection = BIT(0); , kCBTransBBox = BIT(1); , kCBObjProps = BIT(2); , kCBVisibility = BIT(3); , ;   kCBElementAdded = BIT(4). };  ; typedef std::list< REveElement * > List_t;  ; typedef std::set< REveElement * > Set_t;  ;  Public Types inherited from ROOT::Experimental::REveProjectable; typedef std::list< REveProjected * > ProjList_t;  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Protected Types inherited from ROOT::Experimental::REveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = BIT(0); , kCSCBTakeMotherAsMaster = BIT(1); , kCSCBApplyMainColorToAllChildren = BIT(2); , kCSCBApplyMainColorToMatchingChildren = BIT(3); , ;   kCSCBApplyMainTransparencyToAllChildren = BIT(4); , kCSCBApplyMainTransparencyToMatchingChildren = BIT(5). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Member Functions inherited from ROOT::Experimental::REveElement; virtual void AnnihilateRecursively ();  Protected member function called from REveElement::Ann",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSetArray.html:18460,inherit,inherited,18460,doc/master/classROOT_1_1Experimental_1_1REvePointSetArray.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSetArray.html,2,['inherit'],['inherited']
Modifiability,"t;  As RooAbsPdf::generateBinned(const RooArgSet&, const RooCmdArg&,const RooCmdArg&, const RooCmdArg&,const RooCmdArg&, const RooCmdArg&,const RooCmdArg&) const. ;  ; virtual void generateEvent (Int_t code);  Interface for generation of an event using the algorithm corresponding to the specified code. ;  ; RooArgSet * getAllConstraints (const RooArgSet &observables, RooArgSet &constrainedParams, bool stripDisconnected=true) const;  This helper function finds and collects all constraints terms of all component p.d.f.s and returns a RooArgSet with all those terms. ;  ; virtual RooArgSet * getConstraints (const RooArgSet &, RooArgSet const &, RooArgSet &) const;  ; virtual Int_t getGenerator (const RooArgSet &directVars, RooArgSet &generateVars, bool staticInitOK=true) const;  Load generatedVars with the subset of directVars that we can generate events for, and return a code that specifies the generator algorithm we will use. ;  ; const RooNumGenConfig * getGeneratorConfig () const;  Return the numeric MC generator configuration used for this object. ;  ; void getLogProbabilities (std::span< const double > pdfValues, double *output) const;  ; virtual double getLogVal (const RooArgSet *set=nullptr) const;  Return the log of the current value with given normalization An error message is printed if the argument of the log is negative. ;  ; double getNorm (const RooArgSet &nset) const;  Get normalisation term needed to normalise the raw values returned by getVal(). ;  ; virtual double getNorm (const RooArgSet *set=nullptr) const;  Get normalisation term needed to normalise the raw values returned by getVal(). ;  ; const RooAbsReal * getNormIntegral (const RooArgSet &nset) const;  ; virtual const RooAbsReal * getNormObj (const RooArgSet *set, const RooArgSet *iset, const TNamed *rangeName=nullptr) const;  Return pointer to RooAbsReal object that implements calculation of integral over observables iset in range rangeName, optionally taking the integrand normalized over obser",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimultaneous.html:13841,config,configuration,13841,doc/master/classRooSimultaneous.html,https://root.cern,https://root.cern/doc/master/classRooSimultaneous.html,1,['config'],['configuration']
Modifiability,"t;  F distribution. ;  ; double tDist (double nu) const;  t student distribution ;  ; double Rayleigh (double sigma) const;  Rayleigh distribution. ;  ; double Logistic (double a) const;  Logistic distribution. ;  ; double Pareto (double a, double b) const;  Pareto distribution. ;  ; void Dir2D (double &x, double &y) const;  generate random numbers in a 2D circle of radious 1 ;  ; void Dir3D (double &x, double &y, double &z) const;  generate random numbers in a 3D sphere of radious 1 ;  ; unsigned int Poisson (double mu) const;  Poisson distribution. ;  ; unsigned int Binomial (double p, unsigned int n) const;  Binomial distribution. ;  ; unsigned int NegativeBinomial (double p, double n) const;  Negative Binomial distribution. ;  ; std::vector< unsigned int > Multinomial (unsigned int ntot, const std::vector< double > &p) const;  Multinomial distribution. ;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::Math::GSLRandomEngine; void SetType (GSLRngWrapper *r);  internal method used by the derived class to set the type of generators ;  ; GSLRngWrapper * Engine ();  internal method to return the engine Used by class like GSLMCIntegrator to set the engine ;  . #include <Math/GSLRndmEngines.h>. Inheritance diagram for ROOT::Math::GSLRngMT:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ BaseType. typedef GSLRandomEngine ROOT::Math::GSLRngMT::BaseType. Definition at line 343 of file GSLRndmEngines.h. Constructor & Destructor Documentation. ◆ GSLRngMT(). ROOT::Math::GSLRngMT::GSLRngMT ; (; ). Definition at line 395 of file GSLRndmEngines.cxx. Libraries for ROOT::Math::GSLRngMT:. [legend]; The documentation for this class was generated from the following files:; math/mathmore/inc/Math/GSLRndmEngines.h; math/mathmore/src/GSLRndmEngines.cxx. ROOTMathGSLRngMT. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMT.html:4619,inherit,inherited,4619,doc/master/classROOT_1_1Math_1_1GSLRngMT.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMT.html,1,['inherit'],['inherited']
Modifiability,"t;  Fill the files available in the file system below fPathInfo.fInputPath. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static void * MakeClassThreaded (void *info);  Entry point of worker threads for multi-threaded MakeAll(). ;  . Protected Attributes; Bool_t fBatch;  ; TString fCounter;  ; TString fCounterFormat;  ; DocEntityInfo_t fDocEntityInfo;  ; DocSyntax_t fDocSyntax;  ; TFileDefinition * fFileDef;  ; TGClient * fGClient;  ; LinkInfo_t fLinkInfo;  ; TFileSysDB * fLocalFiles;  ; TVirtualMutex * fMakeClassMutex;  ; TModuleDefinition * fModuleDef;  ; OutputStyle_t fOutputStyle;  ; TPathDefinition * fPathDef;  ; PathInfo_t fPathInfo;  ; TString fProductName;  ; Int_t fThreadedClassCount;  ; TIter * fThreadedClassIter;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <THtml.h>. Inheritance diagram for THtml:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EConvertOutput. enum THtml::EConvertOutput. EnumeratorkNoOutput ; kInterpretedOutput ; kCompiledOutput ; kForceOutput ; kSeparateProcessOutput . Definition at line 233 of file THtml.h. Constructor & Destructor Documentation. ◆ THtml(). THtml::THtml ; (; ). Create a THtml object. ; In case output directory does not exist an error will be printed and gHtml stays 0 also zombie bit will be set. ; Definition at line 1221 of file THtml.cxx. ◆ ~THtml(). THtml::~THtml ; (; ). override . Default destructor. ; Definition at line 1263 of file THtml.cxx. Member Function Documentation. ◆ AddMacroPath(). void THtml::AddMacroPath ; (; const char * ; path). Add path to the directories to be searched for macro files that are to be executed via the TDocMacroDirect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTHtml.html:36263,inherit,inherited,36263,doc/v632/classTHtml.html,https://root.cern,https://root.cern/doc/v632/classTHtml.html,2,['inherit'],['inherited']
Modifiability,"t;  Get normalisation term needed to normalise the raw values returned by getVal(). ;  ; const RooAbsReal * getNormIntegral (const RooArgSet &nset) const;  ; virtual const RooAbsReal * getNormObj (const RooArgSet *set, const RooArgSet *iset, const TNamed *rangeName=nullptr) const;  Return pointer to RooAbsReal object that implements calculation of integral over observables iset in range rangeName, optionally taking the integrand normalized over observables nset. ;  ; double getValV (const RooArgSet *set=nullptr) const override;  Return current value, normalized by integrating over the observables in nset. ;  ; virtual void initGenerator (Int_t code);  Interface for one-time initialization to setup the generator for the specified code. ;  ; TClass * IsA () const override;  ; virtual bool isDirectGenSafe (const RooAbsArg &arg) const;  Check if given observable can be safely generated using the pdfs internal generator mechanism (if that existsP). ;  ; bool mustBeExtended () const;  If true PDF must provide extended likelihood term. ;  ; const char * normRange () const;  ; virtual RooPlot * paramOn (RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Add a box with parameter values (and errors) to the specified frame. ;  ; RooPlot * plotOn (RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const override;  Helper calling plotOn(RooPlot*, RooLinkedList&) const. ;  ; RooPlot * plotOn (RooPlot *frame, RooLinkedList &cmdList) const override;  Plot (project) PDF on specified frame. ;  ; GenSpec * prepareMultiGen (const RooArgSet &whatVars, const RooCmdArg &arg1={}, const RooCmdArg &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFixedProdPdf.html:11133,extend,extended,11133,doc/master/classRooFixedProdPdf.html,https://root.cern,https://root.cern/doc/master/classRooFixedProdPdf.html,5,['extend'],['extended']
Modifiability,"t;  Get number of decay channels of this element. ;  ; Double_t GetSpecificActivity () const override;  Get the activity in Bq of a gram of material made from this element. ;  ; Double_t HalfLife () const;  ; TClass * IsA () const override;  ; Int_t IsoNo () const;  ; Bool_t IsRadioNuclide () const override;  ; Double_t Level () const;  ; Double_t MassEx () const;  ; Int_t MassNo () const;  ; Double_t NatAbun () const;  ; const char * PJ () const;  ; void Print (Option_t *option="""") const override;  Print info about the element;. ;  ; TGeoBatemanSol * Ratio () const;  ; void ResetRatio ();  Clears the existing ratio. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive for RN elements. ;  ; Bool_t Stable () const;  ; Double_t Status () const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Double_t TG_F () const;  ; Double_t TG_S () const;  ; Double_t TH_F () const;  ; Double_t TH_S () const;  ;  Public Member Functions inherited from TGeoElement;  TGeoElement ();  Default constructor. ;  ;  TGeoElement (const char *name, const char *title, Int_t nisotopes);  Element having isotopes. ;  ;  TGeoElement (const char *name, const char *title, Int_t z, Double_t a);  Obsolete constructor. ;  ;  TGeoElement (const char *name, const char *title, Int_t z, Int_t n, Double_t a);  Constructor. ;  ;  ~TGeoElement () override;  destructor ;  ; Double_t A () const;  ; void AddIsotope (TGeoIsotope *isotope, Double_t relativeAbundance);  Add an isotope for this element. All isotopes have to be isotopes of the same element. ;  ; void ComputeDerivedQuantities ();  Calculate properties for an atomic number. ;  ; Double_t GetfCoulomb () const;  ; Double_t GetfRadTsai () const;  ; TGeoIsotope * GetIsotope (Int_t i) const;  Return i-th isotope in the element. ;  ; Int_t GetNisotopes () const;  ; Double_t GetRelativeAbundance (Int_t i) const;  Return relati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoElementRN.html:2932,inherit,inherited,2932,doc/master/classTGeoElementRN.html,https://root.cern,https://root.cern/doc/master/classTGeoElementRN.html,1,['inherit'],['inherited']
Modifiability,"t;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLHistPainter.html:11402,inherit,inherits,11402,doc/master/classTGLHistPainter.html,https://root.cern,https://root.cern/doc/master/classTGLHistPainter.html,3,['inherit'],['inherits']
Modifiability,"t;  Getters. ;  ; void IncrementGlobalStep ();  Increments the global step. ;  ; void SetLearningRate (size_t learningRate);  Setters. ;  ; void Step ();  Performs one step of optimization. ;  . Protected Member Functions; void UpdateBiases (size_t layerIndex, std::vector< Matrix_t > &biases, const std::vector< Matrix_t > &biasGradients);  Update the biases, given the current bias gradients. ;  ; void UpdateWeights (size_t layerIndex, std::vector< Matrix_t > &weights, const std::vector< Matrix_t > &weightGradients);  Update the weights, given the current weight gradients. ;  . Protected Attributes; Scalar_t fMomentum;  The momentum used for training. ;  ; std::vector< std::vector< Matrix_t > > fPastBiasGradients;  The sum of the past bias gradients associated with the deep net. ;  ; std::vector< std::vector< Matrix_t > > fPastWeightGradients;  The sum of the past weight gradients associated with the deep net. ;  ;  Protected Attributes inherited from TMVA::DNN::VOptimizer< Architecture_t, Layer_t, DeepNet_t >; DeepNet_t & fDeepNet;  The reference to the deep net. ;  ; size_t fGlobalStep;  The current global step count during training. ;  ; Scalar_t fLearningRate;  The learning rate used for training. ;  . #include <TMVA/DNN/SGD.h>. Inheritance diagram for TMVA::DNN::TSGD< Architecture_t, Layer_t, DeepNet_t >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Matrix_t. template<typename Architecture_t , typename Layer_t = VGeneralLayer<Architecture_t>, typename DeepNet_t = TDeepNet<Architecture_t, Layer_t>> . using TMVA::DNN::TSGD< Architecture_t, Layer_t, DeepNet_t >::Matrix_t = typename Architecture_t::Matrix_t. Definition at line 48 of file SGD.h. ◆ Scalar_t. template<typename Architecture_t , typename Layer_t = VGeneralLayer<Architecture_t>, typename DeepNet_t = TDeepNet<Architecture_t, Layer_t>> . using TMVA::DNN::TSGD< Architecture_t, Layer_t, DeepNet_t >::Scalar_t = typename Architec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TSGD.html:2935,inherit,inherited,2935,doc/master/classTMVA_1_1DNN_1_1TSGD.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TSGD.html,1,['inherit'],['inherited']
Modifiability,"t;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TSlider * fSlider;  Pointer to slider. ;  ;  Protected Attributes inherited from TWbox; Short_t fBorderMode {0};  Bordermode (-1=down, 0 = no border, 1=up) ;  ; Short_t fBorderSize {0};  window box bordersize in pixels ;  ;  Protected Attributes inherited from TBox; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TBox; enum  { kCannotMove = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TSliderBox.h>. Inheritance diagram for TSliderBox:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSliderBox() [1/3]. TSliderBox::TSliderBox ; (; const TSliderBox & ; sb). inlineprotected . Definition at line",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSliderBox.html:17996,inherit,inherited,17996,doc/master/classTSliderBox.html,https://root.cern,https://root.cern/doc/master/classTSliderBox.html,2,['inherit'],['inherited']
Modifiability,"t;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TSelector * GetSelector (const char *filename);  The code in filename is loaded (interpreted or compiled, see below), filename must contain a valid class implementation derived from TSelector. ;  ; static bool IsStandardDraw (const char *selec);  Find out if this is a standard selection used for Draw actions (either TSelectorDraw, TProofDraw or deriving from them). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; EAbort fAbort;  Abort status. ;  ; TList * fInput;  List of objects available during processing. ;  ; TObject * fObject;  ! Current object if processing object (vs. TTree) ;  ; TString fOption;  Option given to TTree::Process. ;  ; TSelectorList * fOutput;  ! List of objects created during processing ;  ; Long64_t fStatus;  Selector status. ;  . Private Member Functions;  TSelector (const TSelector &);  ; TSelector & operator= (const TSelector &);  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Fun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelector.html:13322,inherit,inherited,13322,doc/master/classTSelector.html,https://root.cern,https://root.cern/doc/master/classTSelector.html,1,['inherit'],['inherited']
Modifiability,t;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGWidget;  TGWidget ();  ;  TGWidget (Int_t id);  ; virtual ~TGWidget ();  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  ;  Public Member Functions inherited from TGNumberFormat; virtual ~TGNumberFormat ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWind,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGNumberEntry.html:26332,inherit,inherited,26332,doc/master/classTGNumberEntry.html,https://root.cern,https://root.cern/doc/master/classTGNumberEntry.html,2,['inherit'],['inherited']
Modifiability,t;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGWidget;  TGWidget ();  ;  TGWidget (Int_t id);  ; virtual ~TGWidget ();  ; virtual void Associate (const TGWindow *w);  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGTable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pix,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSimpleTable.html:25932,inherit,inherited,25932,doc/master/classTGSimpleTable.html,https://root.cern,https://root.cern/doc/master/classTGSimpleTable.html,3,['inherit'],['inherited']
Modifiability,t;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGWidget;  TGWidget ();  ;  TGWidget (Int_t id);  ; virtual ~TGWidget ();  ; virtual void Associate (const TGWindow *w);  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGView; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pix,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextView.html:27030,inherit,inherited,27030,doc/master/classTGTextView.html,https://root.cern,https://root.cern/doc/master/classTGTextView.html,3,['inherit'],['inherited']
Modifiability,"t;  Return the log of the current value with given normalization An error message is printed if the argument of the log is negative. ;  ; double getNorm (const RooArgSet &nset) const;  Get normalisation term needed to normalise the raw values returned by getVal(). ;  ; const RooAbsReal * getNormIntegral (const RooArgSet &nset) const;  ; virtual const RooAbsReal * getNormObj (const RooArgSet *set, const RooArgSet *iset, const TNamed *rangeName=nullptr) const;  Return pointer to RooAbsReal object that implements calculation of integral over observables iset in range rangeName, optionally taking the integrand normalized over observables nset. ;  ; virtual void initGenerator (Int_t code);  Interface for one-time initialization to setup the generator for the specified code. ;  ; virtual bool isDirectGenSafe (const RooAbsArg &arg) const;  Check if given observable can be safely generated using the pdfs internal generator mechanism (if that existsP). ;  ; bool mustBeExtended () const;  If true PDF must provide extended likelihood term. ;  ; const char * normRange () const;  ; virtual RooPlot * paramOn (RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Add a box with parameter values (and errors) to the specified frame. ;  ; RooPlot * plotOn (RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const override;  Helper calling plotOn(RooPlot*, RooLinkedList&) const. ;  ; RooPlot * plotOn (RooPlot *frame, RooLinkedList &cmdList) const override;  Plot (project) PDF on specified frame. ;  ; GenSpec * prepareMultiGen (const RooArgSet &whatVars, const RooCmdArg &arg1={}, const RooCmdArg &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGaussModel.html:12836,extend,extended,12836,doc/master/classRooGaussModel.html,https://root.cern,https://root.cern/doc/master/classRooGaussModel.html,4,['extend'],['extended']
Modifiability,"t;; 2733 offset += baseclass->Size();; 2734 } else if (element->IsA() == TStreamerSTL::Class()) {; 2735 TStreamerSTL *base = (TStreamerSTL*)element;; 2736 TClass *baseclass = base->GetClassPointer();; 2737 if (!baseclass) return -1;; 2738 Int_t subOffset = baseclass->GetBaseClassOffsetRecurse(cl);; 2739 if (subOffset == -2) return -2;; 2740 if (subOffset != -1) return offset+subOffset;; 2741 offset += baseclass->Size();; 2742 ; 2743 } else {; 2744 Error(""GetBaseClassOffsetRecurse"",""Unexpected element type for base class: %s\n"",element->IsA()->GetName());; 2745 }; 2746 }; 2747 }; 2748 return -1;; 2749 }; 2750 }; 2751 ; 2752 TClass *c;; 2753 Int_t off;; 2754 TBaseClass *inh;; 2755 TObjLink *lnk = nullptr;; 2756 if (fBase.load() == nullptr); 2757 lnk = GetListOfBases()->FirstLink();; 2758 else; 2759 lnk = fBase.load()->FirstLink();; 2760 ; 2761 // otherwise look at inheritance tree; 2762 while (lnk) {; 2763 inh = (TBaseClass *)lnk->GetObject();; 2764 //use option load=kFALSE to avoid a warning like:; 2765 //""Warning in <TClass::TClass>: no dictionary for class TRefCnt is available""; 2766 //We can not afford to not have the class if it exist, so we; 2767 //use kTRUE.; 2768 c = inh->GetClassPointer(kTRUE); // kFALSE);; 2769 if (c) {; 2770 if (cl == c) {; 2771 if ((inh->Property() & kIsVirtualBase) != 0); 2772 return -2;; 2773 return inh->GetDelta();; 2774 }; 2775 off = c->GetBaseClassOffsetRecurse(cl);; 2776 if (off == -2) return -2;; 2777 if (off != -1) {; 2778 return off + inh->GetDelta();; 2779 }; 2780 }; 2781 lnk = lnk->Next();; 2782 }; 2783 return -1;; 2784}; 2785 ; 2786////////////////////////////////////////////////////////////////////////////////; 2787/// - Return data member offset to the base class ""cl"".; 2788/// - Returns -1 in case ""cl"" is not a base class.; 2789/// Takes care of multiple inheritance.; 2790 ; 2791Int_t TClass::GetBaseClassOffset(const TClass *toBase, void *address, bool isDerivedObject); 2792{; 2793 // Warning(""GetBaseClassOffset"",""Requires th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:103405,inherit,inheritance,103405,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"t;; 2800 offset += baseclass->Size();; 2801 } else if (element->IsA() == TStreamerSTL::Class()) {; 2802 TStreamerSTL *base = (TStreamerSTL*)element;; 2803 TClass *baseclass = base->GetClassPointer();; 2804 if (!baseclass) return -1;; 2805 Int_t subOffset = baseclass->GetBaseClassOffsetRecurse(cl);; 2806 if (subOffset == -2) return -2;; 2807 if (subOffset != -1) return offset+subOffset;; 2808 offset += baseclass->Size();; 2809 ; 2810 } else {; 2811 Error(""GetBaseClassOffsetRecurse"",""Unexpected element type for base class: %s\n"",element->IsA()->GetName());; 2812 }; 2813 }; 2814 }; 2815 return -1;; 2816 }; 2817 }; 2818 ; 2819 TClass *c;; 2820 Int_t off;; 2821 TBaseClass *inh;; 2822 TObjLink *lnk = nullptr;; 2823 if (fBase.load() == nullptr); 2824 lnk = GetListOfBases()->FirstLink();; 2825 else; 2826 lnk = fBase.load()->FirstLink();; 2827 ; 2828 // otherwise look at inheritance tree; 2829 while (lnk) {; 2830 inh = (TBaseClass *)lnk->GetObject();; 2831 //use option load=kFALSE to avoid a warning like:; 2832 //""Warning in <TClass::TClass>: no dictionary for class TRefCnt is available""; 2833 //We can not afford to not have the class if it exist, so we; 2834 //use kTRUE.; 2835 c = inh->GetClassPointer(kTRUE); // kFALSE);; 2836 if (c) {; 2837 if (cl == c) {; 2838 if ((inh->Property() & kIsVirtualBase) != 0); 2839 return -2;; 2840 return inh->GetDelta();; 2841 }; 2842 off = c->GetBaseClassOffsetRecurse(cl);; 2843 if (off == -2) return -2;; 2844 if (off != -1) {; 2845 return off + inh->GetDelta();; 2846 }; 2847 }; 2848 lnk = lnk->Next();; 2849 }; 2850 return -1;; 2851}; 2852 ; 2853////////////////////////////////////////////////////////////////////////////////; 2854/// - Return data member offset to the base class ""cl"".; 2855/// - Returns -1 in case ""cl"" is not a base class.; 2856/// Takes care of multiple inheritance.; 2857 ; 2858Int_t TClass::GetBaseClassOffset(const TClass *toBase, void *address, bool isDerivedObject); 2859{; 2860 // Warning(""GetBaseClassOffset"",""Requires th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:106156,inherit,inheritance,106156,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"t<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTEveWindow::fShowTitleBar; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Pixel_tTEveWindow::fgCurrentBackgroundColor; static Bool_tfgInitInternal; static UInt_tTEveWindow::fgMainFrameDefHeight; static UInt_tTEveWindow::fgMainFrameDefWidth; static Pixel_tTEveWindow::fgMiniBarBackgroundColor; static Bool_tfgRecreateGlOnDockOps. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveViewer(const char* n = ""TEveViewer"", const char* t = """"); Constructor.; The base-class TEveWindowFrame is constructed without a frame so; a default composite-frame is instantiated and stored in fGUIFrame.; Cleanup is set to no-cleanup as viewers need to be zapped with some; more care. ~TEveViewer(); Destructor. void InitInternal(); Initialize static data-members according to running conditions. void PreUndock(); Virtual function called before a window is undocked.; On mac we have to force recreation of gl-context. void PostDock(); Virtual function called after a window is docked.; On mac we have to force recreation of gl-context. const TGPicture* GetListTreeIcon(Bool_t open = kFALSE); Return TEveViewer icon. void SetGLViewer(TGLViewer* viewer, TGFrame* frame); Set TGLViewer that is represented by this object.; The old gl-viewer is deleted. TGLSAViewer* SpawnGLViewer(TGedEditor* ged = 0, Bool_t stereo = kFALSE); Spawn new GLViewer a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveViewer.html:22522,Inherit,Inheritance,22522,root/html532/TEveViewer.html,https://root.cern,https://root.cern/root/html532/TEveViewer.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t="""") const overridePrint list of registered plugin handlers.Definition TPluginManager.cxx:637; The use of the plugin library manager removes all textual references to hard-coded class and library names and the resulting dependencies in the base classes. The plugin manager is used to extend a.o. TFile, TSQLServer, TGrid, etc. functionality. ; Definition at line 258 of file TPluginManager.h. Public Member Functions;  TPluginManager ();  Constructor. ;  ;  ~TPluginManager ();  Clean up the plugin manager. ;  ; void AddHandler (const char *base, const char *regexp, const char *className, const char *pluginName, const char *ctor=nullptr, const char *origin=nullptr);  Add plugin handler to the list of handlers. ;  ; TPluginHandler * FindHandler (const char *base, const char *uri=nullptr);  Returns the handler if there exists a handler for the specified URI. ;  ; TClass * IsA () const override;  ; void LoadHandlersFromEnv (TEnv *env);  Load plugin handlers specified in config file, like: ;  ; void LoadHandlersFromPluginDirs (const char *base=nullptr);  Load plugin handlers specified via macros in a list of plugin directories. ;  ; void Print (Option_t *opt="""") const override;  Print list of registered plugin handlers. ;  ; void RemoveHandler (const char *base, const char *regexp=nullptr);  Remove handler for the specified base class and the specified regexp. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t WritePluginMacros (const char *dir, const char *plugin=nullptr) const;  Write in the specified directory the plugin macros. ;  ; Int_t WritePluginRecords (const char *envFile, const char *plugin=nullptr) const;  Write in the specified environment config file the plugin records. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPluginManager.html:4747,plugin,plugin,4747,doc/master/classTPluginManager.html,https://root.cern,https://root.cern/doc/master/classTPluginManager.html,4,"['config', 'plugin']","['config', 'plugin']"
Modifiability,"t=0) override;  Write this object to the current directory. ;  ; virtual void WriteDirHeader ();  ; virtual void WriteKeys ();  ; template<typename T > ; std::enable_if_t<!std::is_base_of< TObject, T >::value, Int_t > WriteObject (const T *obj, const char *name, Option_t *option="""", Int_t bufsize=0);  Write an object with proper type checking. ;  ; template<typename T > ; std::enable_if_t< std::is_base_of< TObject, T >::value, Int_t > WriteObject (const T *obj, const char *name, Option_t *option="""", Int_t bufsize=0);  Write an object with proper type checking. ;  ; virtual Int_t WriteObjectAny (const void *, const char *, const char *, Option_t *="""", Int_t=0);  ; virtual Int_t WriteObjectAny (const void *, const TClass *, const char *, Option_t *="""", Int_t=0);  ; virtual Int_t WriteTObject (const TObject *obj, const char *name=nullptr, Option_t *="""", Int_t=0);  Write an object with proper type checking. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTROOT.html:19609,inherit,inherited,19609,doc/v632/classTROOT.html,https://root.cern,https://root.cern/doc/v632/classTROOT.html,2,['inherit'],['inherited']
Modifiability,"t=0) override;  Write this object to the current directory. ;  ; virtual void WriteDirHeader ();  ; virtual void WriteKeys ();  ; template<typename T > ; std::enable_if_t<!std::is_base_of< TObject, T >::value, Int_t > WriteObject (const T *obj, const char *name, Option_t *option="""", Int_t bufsize=0);  Write an object with proper type checking. ;  ; template<typename T > ; std::enable_if_t< std::is_base_of< TObject, T >::value, Int_t > WriteObject (const T *obj, const char *name, Option_t *option="""", Int_t bufsize=0);  Write an object with proper type checking. ;  ; virtual Int_t WriteObjectAny (const void *, const char *, const char *, Option_t *="""", Int_t=0);  ; virtual Int_t WriteObjectAny (const void *, const TClass *, const char *, Option_t *="""", Int_t=0);  ; virtual Int_t WriteTObject (const TObject *obj, const char *name=nullptr, Option_t *="""", Int_t=0);  Write an object with proper type checking. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTDirectory.html:8859,inherit,inherited,8859,doc/v632/classTDirectory.html,https://root.cern,https://root.cern/doc/v632/classTDirectory.html,2,['inherit'],['inherited']
Modifiability,"t=20) override;  ; void SetRaytracing (Bool_t=kTRUE) override;  ; void SetTopVisible (Bool_t on=kTRUE) override;  ; void SetTopVolume (TGeoVolume *) override;  ; void SetVisLevel (Int_t=3) override;  ; void SetVisOption (Int_t=0) override;  ; Int_t ShapeDistancetoPrimitive (const TGeoShape *, Int_t, Int_t, Int_t) const override;  ; void Test (Int_t, Option_t *) override;  ; void TestOverlaps (const char *) override;  ; Bool_t TestVoxels (TGeoVolume *) override;  ; void UnbombTranslation (const Double_t *, Double_t *) override;  ; Double_t Weight (Double_t, Option_t *=""v"") override;  ;  Public Member Functions inherited from TVirtualGeoPainter;  TVirtualGeoPainter (TGeoManager *manager);  Geometry painter default constructor. ;  ;  ~TVirtualGeoPainter () override;  Geometry painter default destructor. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeoPainter.html:5576,inherit,inherited,5576,doc/v632/classROOT_1_1RGeoPainter.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeoPainter.html,2,['inherit'],['inherited']
Modifiability,"t=kTRUE);  Set whether all colors should return grayscale values. ;  ; static void SetPalette (Int_t ncolors, Int_t *colors, Float_t alpha=1.);  Static function. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fNumber;  Color number identifier. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions; void Allocate ();  Make this color known to the graphics system. ;  . Static Private Member Functions; static Float_t HLStoRGB1 (Float_t rn1, Float_t rn2, Float_t huei);  Static method. Auxiliary to HLS2RGB(). ;  . Private Attributes; Float_t fAlpha;  Alpha (transparency) ;  ; Float_t fBlue;  Fraction of Blue. ;  ; Float_t fGreen;  Fraction of Green. ;  ; Float_t fHue;  Hue. ;  ; Float_t fLight;  Light. ;  ; Float_t fRed;  Fraction of Red. ;  ; Float_t fSaturation;  Saturation. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTColor.html:41998,inherit,inherited,41998,doc/master/classTColor.html,https://root.cern,https://root.cern/doc/master/classTColor.html,1,['inherit'],['inherited']
Modifiability,"t=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void DoRedraw () override;  Draw vertical progress bar. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Additional Inherited Members;  Public Types inherited from TGProgressBar; enum  { kProgressBarStandardWidth = 16; , kProgressBarTextWidth = 24; , kBlockSize = 8; , kBlockSpace = 2; };  ; enum  EBarType { kStandard; , kFancy; };  ; enum  EFillType { kSolidFill; , kBlockFill; };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGVProgressBar.html:24238,inherit,inherited,24238,doc/master/classTGVProgressBar.html,https://root.cern,https://root.cern/doc/master/classTGVProgressBar.html,3,['inherit'],['inherited']
Modifiability,"t=std::numeric_limits< std::size_t >::max()) const =0;  ; virtual void resetCache ();  Internal method – Remove cached function values. ;  ; virtual void setArgStatus (const RooArgSet &set, bool active);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooArgSet _cachedVars;  ! External variables cached with this data set ;  ; std::unique_ptr< RooAbsDataStore > _dstore;  Data storage implementation. ;  ; std::unique_ptr< RooArgSet > _globalObservables;  Snapshot of global observables. ;  ; const TNamed * _namePtr = nullptr;  ! De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; std::map< std::string, RooAbsData * > _ownedComponents;  Owned external components. ;  ; RooArgSet _vars;  Dimensions of this data set. ;  ; StorageType storageType;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static StorageType defaultStorageType =RooAbsData::Vector;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . Private Member Functions; void copyGlobalObservables (const RooAbsData &other);  ; void copyImpl (const RooAbsData &other, const char *newname);  . Private Attributes; const RooFit::UniqueId< RooAbsData > _uniqueId;  ! ;  . Friends; class RooAbsOptTestStatistic;  ; struct RooFit::TestStatistics::ConstantTermsOptimizer;  ; class RooFit::TestStatistics::RooAbsL;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <RooAbsData.h>. Inheritance diagram for RooAbsData:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ CategorySpans. using RooAbsData::CategorySpans = std::map<RooFit::Detail::DataKey, std::sp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsData.html:31270,inherit,inherited,31270,doc/master/classRooAbsData.html,https://root.cern,https://root.cern/doc/master/classRooAbsData.html,1,['inherit'],['inherited']
Modifiability,"t> RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1,const RooCmdArg& arg2,; 1599 const RooCmdArg& arg3,const RooCmdArg& arg4, const RooCmdArg& arg5,const RooCmdArg& arg6) const; 1600{; 1601 ; 1602 // Select the pdf-specific commands; 1603 RooCmdConfig pc(""RooAbsPdf::generate("" + std::string(GetName()) + "")"");; 1604 pc.defineString(""dsetName"",""Name"",0,"""") ;; 1605 pc.defineInt(""verbose"",""Verbose"",0,0) ;; 1606 pc.defineInt(""extended"",""Extended"",0,0) ;; 1607 pc.defineInt(""nEvents"",""NumEvents"",0,0) ;; 1608 pc.defineDouble(""nEventsD"",""NumEventsD"",0,-1.) ;; 1609 pc.defineInt(""expectedData"",""ExpectedData"",0,0) ;; 1610 ; 1611 // Process and check varargs; 1612 pc.process(arg1,arg2,arg3,arg4,arg5,arg6) ;; 1613 if (!pc.ok(true)) {; 1614 return nullptr;; 1615 }; 1616 ; 1617 // Decode command line arguments; 1618 double nEvents = pc.getDouble(""nEventsD"") ;; 1619 if (nEvents<0) {; 1620 nEvents = pc.getInt(""nEvents"") ;; 1621 }; 1622 //bool verbose = pc.getInt(""verbose"") ;; 1623 bool extended = pc.getInt(""extended"") ;; 1624 bool expectedData = pc.getInt(""expectedData"") ;; 1625 const char* dsetName = pc.getString(""dsetName"") ;; 1626 ; 1627 if (extended) {; 1628 //nEvents = (nEvents==0?Int_t(expectedEvents(&whatVars)+0.5):nEvents) ;; 1629 nEvents = (nEvents==0 ? expectedEvents(&whatVars) :nEvents) ;; 1630 cxcoutI(Generation) << "" Extended mode active, number of events generated ("" << nEvents << "") is Poisson fluctuation on ""; 1631 << GetName() << ""::expectedEvents() = "" << nEvents << endl ;; 1632 // If Poisson fluctuation results in zero events, stop here; 1633 if (nEvents==0) {; 1634 return nullptr ;; 1635 }; 1636 } else if (nEvents==0) {; 1637 cxcoutI(Generation) << ""No number of events specified , number of events generated is ""; 1638 << GetName() << ""::expectedEvents() = "" << expectedEvents(&whatVars)<< endl ;; 1639 }; 1640 ; 1641 // Forward to appropriate implementation; 1642 auto data = generateBinned(whatVars,nEvents,expectedData,extended);; 1643 ; 164",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:79369,extend,extended,79369,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['extend'],['extended']
Modifiability,"t>fRegulatorsthe priors as regulator; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class; TObjArray*fSynapsesarray of pointers to synapses, no structural data; boolfUseRegulatorzjh; TRandom3*frgenrandom number generator for various uses. private:. TObjArray*fInputLayercache this for fast access; TStringfLayerSpeclayout specification option; Int_tfNcyclesnumber of epochs to train; TStringfNeuronInputTypename of neuron input calculator class; TStringfNeuronTypename of neuron activation function class; vector<TNeuron*>fOutputNeuronscache this for fast access; static const Bool_tfgDEBUGdebug flag. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void DeclareOptions(); define the options (their key words) that can be set in the option string; here the options valid for ALL MVA methods are declared.; know options: NCycles=xx :the number of training cycles; Normalize=kTRUE,kFALSe :if normalised in put variables should be used; HiddenLayser=""N-1,N-2"" :the specification of the hidden layers; NeuronType=sigmoid,tanh,radial,linar : the type of activation function; used at the neuronn. void ProcessOptions(); do nothing specific at this moment. vector<Int_t>* ParseLayoutString(TString layerSpec); parse layout specification string and return a vector, each entry; containing the number of neurons to go in each successive layer. void InitANNBase(); initialize ANNBase object. ~MethodANNBase(); destructor. void DeleteNetwork(); delete/clear network. void DeleteNetworkLayer(TObjArray*& layer); delete a network layer. void BuildNetwork(vector<Int_t>* layout, vector<Double_t>* weights = NULL, Bool_t fromFile = kFALSE); build network given a layout (number of neurons in each layer); and optional weights array. void BuildLayers(vector<Int_t>* layout, Bool_t from_file = false); build the network layers. void BuildLayer(Int_t numNeurons, TObjArray* curLayer, TObjArray* prevLayer, Int_t layerIndex, Int_t numLayers, Bool_t from_file = false",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodANNBase.html:18319,variab,variables,18319,root/html528/TMVA__MethodANNBase.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodANNBase.html,8,"['layers', 'variab']","['layers', 'variables']"
Modifiability,"tAbsTolerance(double absTol); voidSetFunction(const ROOT::Math::IMultiGenFunction& f); voidSetRelTolerance(double relTol); intStatus() const. protected:. ROOT::Math::VirtualIntegratorMultiDim*CreateIntegrator(ROOT::Math::IntegrationMultiDim::Type type, double absTol, double relTol, unsigned int ncall). private:. ROOT::Math::IntegratorMultiDimIntegratorMultiDim(const ROOT::Math::IntegratorMultiDim&); ROOT::Math::IntegratorMultiDim&operator=(const ROOT::Math::IntegratorMultiDim&). Data Members; private:. ROOT::Math::VirtualIntegratorMultiDim*fIntegratorpointer to multi-dimensional integrator base class. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; IntegratorMultiDim(ROOT::Math::IntegrationMultiDim::Type type = IntegrationMultiDim::kADAPTIVE, double absTol = 1.E-9, double relTol = 1E-6, unsigned int ncall = 100000); Generic constructor of multi dimensional Integrator. By default uses the Adaptive integration method. @param type integration type (adaptive, MC methods, etc..); @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals. IntegratorMultiDim(const ROOT::Math::IMultiGenFunction& f, ROOT::Math::IntegrationMultiDim::Type type = IntegrationMultiDim::kADAPTIVE, double absTol = 1.E-9, double relTol = 1E-6, unsigned int ncall = 100000); Generic Constructor of multi dimensional Integrator passing a function. By default uses the adaptive integration method. @param f integration function (multi-dim interface); @param type integration type (adaptive, MC methods, etc..); @param absTol desired absolute Error; @param relTol desired relative Error; @param ncall number of function calls (apply only to MC integratioon methods). SetFunction(const ROOT::Math::IMultiGenFunction& f). IntegratorMultiDim(const Function & f, unsigned int dim, IntegrationMultiDim::Type type = IntegrationMultiDim::kADAPTIVE, double absTol = 1.E-9, double relTol = 1E-6, unsigned int ncall = 100000",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__IntegratorMultiDim.html:2434,adapt,adaptive,2434,root/html526/ROOT__Math__IntegratorMultiDim.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__IntegratorMultiDim.html,1,['adapt'],['adaptive']
Modifiability,"tAnalyticalIntergral advertises the analytical integrals that are supported. ;  ; Int_t getGenerator (const RooArgSet &directVars, RooArgSet &generateVars, bool staticInitOK=true) const override;  Load generatedVars with the subset of directVars that we can generate events for, and return a code that specifies the generator algorithm we will use. ;  ; RooAbsReal const & getMedian () const;  Get the median parameter. ;  ; RooAbsReal const & getShapeK () const;  Get the shape parameter. ;  ; RooAbsReal const & getX () const;  Get the x variable. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void translate (RooFit::Detail::CodeSquashContext &ctx) const override;  This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ;  ; bool useStandardParametrization () const;  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Analytical integral with normalization (see RooAbsReal::analyticalIntegralWN() for further information). ;  ; virtual RooAbsGenContext * autoGenContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, bool autoBinned=true, const char *binnedTag="""") const;  ; virtual RooAbsGenContext * binnedGenContext (const RooArgSet &vars, bool verbose=false) const;  Return a binned generator context. ;  ; bool canBeExtended () const;  If true, PDF can provide extended likelih",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLognormal.html:2836,inherit,inherited,2836,doc/master/classRooLognormal.html,https://root.cern,https://root.cern/doc/master/classRooLognormal.html,1,['inherit'],['inherited']
Modifiability,"tArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TEvePointSet; TArrayI * fIntIds;  ; Int_t fIntIdsPerPoint;  ; TString fTitle;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCnt;  Counter for parents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from TPointSet3D; TRefArray fIds;  ; Bool_t fOwnIds;  ;  Protected Attributes inher",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEvePointSetProjected.html:45581,inherit,inherited,45581,doc/master/classTEvePointSetProjected.html,https://root.cern,https://root.cern/doc/master/classTEvePointSetProjected.html,2,['inherit'],['inherited']
Modifiability,"tAsymErrorBuffer(Double_t* newBufL, Double_t* newBufH); voidRooVectorDataStore::RealVector::setBufArg(RooAbsReal* arg); voidRooVectorDataStore::RealVector::setBuffer(RooAbsReal* real, Double_t* newBuf); voidRooVectorDataStore::RealVector::setDependents(const RooArgSet& deps); voidsetErrorBuffer(Double_t* newBuf); voidRooVectorDataStore::RealVector::setNativeBuffer(Double_t* newBuf = 0); voidRooVectorDataStore::RealVector::setNset(RooArgSet* newNset); virtual voidShowMembers(TMemberInspector& insp) const; Int_tRooVectorDataStore::RealVector::size() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidwrite(Int_t i). Data Members; protected:. vector<Double_t>RooVectorDataStore::RealVector::_vec. private:. Double_t*_bufE!; Double_t*_bufEH!; Double_t*_bufEL!; Double_t*_nativeBufE!; Double_t*_nativeBufEH!; Double_t*_nativeBufEL!; vector<Double_t>*_vecE; vector<Double_t>*_vecEH; vector<Double_t>*_vecEL. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Streamer(TBuffer& ); Stream an object of class RooVectorDataStore::RealFullVector. Int_t fill(); Write current row. void reserve(Int_t siz); reserve storage for nEvt entries. const RooArgSet* get(Int_t idx) const. const RooArgSet* getNative(Int_t idx) const. void reset(). RealVector& operator=(const RooVectorDataStore::RealFullVector& other). void write(Int_t i); std::cout << ""write("" << this << "") ["" << i << ""] nativeReal = "" << _nativeReal << "" = "" << _nativeReal->GetName() << "" real = "" << _real << "" buf = "" << _buf << "" value = "" << *_buf << "" native getVal() = "" << _nativeReal->getVal() << "" getVal() = "" << _real->getVal() << std::endl ;. void resize(Int_t siz). RealFullVector(UInt_t initialCapacity = (1024 / sizeof(Double_t))). RealFullVector(RooAbsReal* arg, UInt_t initialCapacity = (1024 / sizeof(Double_t))). virtual ~RealFullVector(). RealFullVector(const RealFullVector& other, RooAbsReal* real=0). RealFullVector(const Re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooVectorDataStore__RealFullVector.html:2873,Inherit,Inheritance,2873,root/html602/RooVectorDataStore__RealFullVector.html,https://root.cern,https://root.cern/root/html602/RooVectorDataStore__RealFullVector.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tAttribute(""StoreError""); on each X-type observable for which the error should be stored and add datapoints to the dataset as follows. RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; are the Double_t values that correspond to the Y and its error. RooXYChi2Var(const RooXYChi2Var& other, const char* name = 0); Copy constructor. void initialize(); Common constructor initialization. void initIntegrator(); Initialize bin content integrator. ~RooXYChi2Var(); Destructor. Double_t xErrorContribution(Double_t ydata) const; Calculate contribution to internal error due to error on 'x' coordinates; at point i. Double_t fy() const; Return function value requested bu present configuration. If integration is required, the function value integrated; over the bin volume divided by the bin volume is returned,; otherwise the value at the bin center is returned.; The bin volume is defined by the error on the 'X' coordinates. If an extended p.d.f. is used as function, its value is; also multiplied by the expected number of events here. Double_t evaluatePartition(Int_t firstEvent, Int_t lastEvent, Int_t stepSize) const; Calculate chi^2 in partition from firstEvent to lastEvent using given stepSize. RooArgSet requiredExtraObservables() const; Inform base class that observable yvar cannot be optimized away from the dataset. TObject* clone(const char* newname) const; { return new RooXYChi2Var(*this,newname); }. RooAbsTestStatistic* create(const char* name, const char* title, RooAbsReal& pdf, RooAbsData& adata, const RooArgSet& , const char* , const char* , Int_t , Bool_t , Bool_t , Bool_t ); Virtual constructor. Double_t defaultErrorLevel() const; The default error level for MINUIT error analysis for a chi^2 is 1.0. RooNumIntConfig& binIntegratorConfig(); { return _intConfig ; }. const RooNumIntConfig& binIntegratorConfig() const; { return _intConfig ; }. Bool_t allowFunctionCache(); Disable function (component) cachin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooXYChi2Var.html:41031,extend,extended,41031,root/html528/RooXYChi2Var.html,https://root.cern,https://root.cern/root/html528/RooXYChi2Var.html,4,['extend'],['extended']
Modifiability,"tAttribute(""StoreError""); on each X-type observable for which the error should be stored and add datapoints to the dataset as follows. RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; are the Double_t values that correspond to the Y and its error. RooXYChi2Var(const RooXYChi2Var& other, const char* name = 0); Copy constructor. void initialize(); Common constructor initialization. void initIntegrator(); Initialize bin content integrator. ~RooXYChi2Var(); Destructor. Double_t xErrorContribution(Double_t ydata) const; Calculate contribution to internal error due to error on 'x' coordinates; at point i. Double_t fy() const; Return function value requested bu present configuration. If integration is required, the function value integrated; over the bin volume divided by the bin volume is returned,; otherwise the value at the bin center is returned.; The bin volume is defined by the error on the 'X' coordinates. If an extended p.d.f. is used as function, its value is; also multiplied by the expected number of events here. Double_t evaluatePartition(Int_t firstEvent, Int_t lastEvent, Int_t stepSize) const; Calculate chi^2 in partition from firstEvent to lastEvent using given stepSize. RooArgSet requiredExtraObservables() const; Inform base class that observable yvar cannot be optimized away from the dataset. TObject* clone(const char* newname) const; { return new RooXYChi2Var(*this,newname); }. RooAbsTestStatistic* create(const char* name, const char* title, RooAbsReal& pdf, RooAbsData& adata, const RooArgSet& , const char* , const char* , Int_t , Bool_t , Bool_t , Bool_t ); Virtual constructor. Double_t defaultErrorLevel() const; The default error level for MINUIT error analysis for a chi^2 is 1.0. RooNumIntConfig& binIntegratorConfig(); { return _intConfig ; }. const RooNumIntConfig& binIntegratorConfig(); { return _intConfig ; }. Bool_t allowFunctionCache(); Disable function (component) caching if i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooXYChi2Var.html:40714,extend,extended,40714,root/html526/RooXYChi2Var.html,https://root.cern,https://root.cern/root/html526/RooXYChi2Var.html,1,['extend'],['extended']
Modifiability,"tAttribute(""StoreError""); on each X-type observable for which the error should be stored and add datapoints to the dataset as follows. RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; are the Double_t values that correspond to the Y and its error. RooXYChi2Var(const RooXYChi2Var& other, const char* name = 0); Copy constructor. void initialize(); Common constructor initialization. void initIntegrator(); Initialize bin content integrator. ~RooXYChi2Var(); Destructor. Double_t xErrorContribution(Double_t ydata) const; Calculate contribution to internal error due to error on 'x' coordinates; at point i. Double_t fy() const; Return function value requested bu present configuration. If integration is required, the function value integrated; over the bin volume divided by the bin volume is returned,; otherwise the value at the bin center is returned.; The bin volume is defined by the error on the 'X' coordinates. If an extended p.d.f. is used as function, its value is; also multiplied by the expected number of events here. Double_t evaluatePartition(Int_t firstEvent, Int_t lastEvent, Int_t stepSize) const; Calculate chi^2 in partition from firstEvent to lastEvent using given stepSize. RooArgSet requiredExtraObservables() const; Inform base class that observable yvar cannot be optimized away from the dataset. TObject* clone(const char* newname) const; { return new RooXYChi2Var(*this,newname); }. RooAbsTestStatistic* create(const char* name, const char* title, RooAbsReal& pdf, RooAbsData& adata, const RooArgSet& , const char* , const char* , Int_t , RooFit::MPSplit , Bool_t , Bool_t , Bool_t ); Virtual constructor. Double_t defaultErrorLevel() const; The default error level for MINUIT error analysis for a chi^2 is 1.0. RooNumIntConfig& binIntegratorConfig(); { return _intConfig ; }. const RooNumIntConfig& binIntegratorConfig() const; { return _intConfig ; }. Bool_t allowFunctionCache(); Disable function ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooXYChi2Var.html:47041,extend,extended,47041,root/html534/RooXYChi2Var.html,https://root.cern,https://root.cern/root/html534/RooXYChi2Var.html,6,['extend'],['extended']
Modifiability,"tAttributes(Int_t align, Float_t angle, Int_t col, Int_t font, Float_t tsize); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. static Int_tTQObject::CheckConnectArgs(TQObject* sender, TClass* sender_class, const char* signal, TClass* receiver_class, const char* slot); voidTGedEditor::ConfigureGedFrames(Bool_t objChaged); static Bool_tTQObject::ConnectToClass(TQObject* sender, const char* signal, TClass* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::ConnectToClass(const char* sender_class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); virtual TGedFrame*CreateNameFrame(const TGWindow* parent, const char* tab_name); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidTGFrame::DoRedraw(); virtual voidTGFrame::Draw3dRectangle(UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h); static Time_tTGFrame::GetLastClick(); TStringTGMainFrame::GetMWMfuncString() const; TStringTGMainFrame::GetMWMinpString() const; TStringTGMainFrame::GetMWMvalueString() const; TStringTGFrame::GetOptionString() const; const TGResourcePool*TGFrame::GetResourcePool() const; virtual void*TGFrame::GetSender(); virtual const char*TQObject::GetSenderClassName() const; voidTObject::MakeZombie(); virtual voidTGFrame::StartGuiBuilding(Bool_t on = kTRUE). private:. TEveGedEditor(const TEveGedEditor&); TEveGedEditor&operator=(const TEveGedEditor&). Data Members; public:. enum TGMainFrame::[unnamed] { kDontCallClose; };; enum TGFrame::[unnamed] { kDeleteWindowCalled; };; enum TGWindow::EEditMode { kEditEnable; kEditDisable; kEditDisableEvents; kEditDisableGrab; kEditDisableLayout; kEditDisableResize; kEditDisableHeight; kEditDisableWidth",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveGedEditor.html:19509,Config,ConfigureGedFrames,19509,root/html532/TEveGedEditor.html,https://root.cern,https://root.cern/root/html532/TEveGedEditor.html,2,['Config'],['ConfigureGedFrames']
Modifiability,"tBBoxOK () const;  ; virtual TClass * IsA () const;  ; TAttBBox & operator= (const TAttBBox &tab);  ; void ResetBBox ();  ; void SetupBBoxCube (Float_t extent, Float_t x, Float_t y, Float_t z);  Setup bounding box as cube with given extent and center position. ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from ROOT::Experimental::REveSecondarySelectable;  REveSecondarySelectable ()=default;  ; virtual ~REveSecondarySelectable ();  ; Bool_t GetAlwaysSecSelect () const;  ; SelectionSet_t & RefHighlightedSet ();  ; SelectionSet_t & RefSelectedSet ();  ; void SetAlwaysSecSelect (Bool_t f);  . Protected Attributes; int fCapacity {0};  ; std::vector< REveVector > fPoints;  ; int fSize {0};  ; int fTexX {0};  ; int fTexY {0};  ;  Protected Attributes inherited from ROOT::Experimental::REveElement; AuntList_t fAunts;  ; Bool_t fCanEditMainColor {kFALSE};  ; Bool_t fCanEditMainTrans {kFALSE};  ; Bool_t fCanEditMainTransparency {kFALSE};  ; UChar_t fChangeBits {0};  ; TClass * fChildClass {nullptr};  ; List_t fChildren;  ; REveCompound * fCompound {nullptr};  ; UChar_t fCSCBits {0};  ; Color_t fDefaultColor {kPink};  ; Int_t fDenyDestroy {0};  ; Bool_t fDestroyOnZeroRefCnt {kTRUE};  Deny-destroy count. ;  ; Char_t fDestructing {kNone};  ; Short_t fImpliedSelected {0};  ; Color_t * fMainColorPtr {nullptr};  ; std::unique_ptr< REveTrans > fMainTrans;  ; Char_t fMainTransparency {0};  ; REveElement * fMother {nullptr};  ; std::string fName;  ; Bool_t fPickable {false};  ; std::unique_ptr< REveRenderData > fRenderData;  Externally assigned and controlled user data. ;  ; Bool_t fRnrChildren {kTRUE};  ; Bool_t fRnrSelf {kTRUE};  ; REveScene * fScene {nullptr};  ; REveElement * fSelectionMaster {nullptr};  ; std::string fTitle;  ; void * fUserData {nullptr};  ; REveElement * fVizModel {nullptr};  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSet.html:17150,inherit,inherited,17150,doc/master/classROOT_1_1Experimental_1_1REvePointSet.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSet.html,1,['inherit'],['inherited']
Modifiability,"tBegin + totalNumWeights);; 1447 ; 1448 ; 1449 // ------------- backpropagation -------------; 1450 backPropagate (layerPatternData, settings, trainFromLayer, totalNumWeights);; 1451 ; 1452 ; 1453 // --- compile the measures; 1454 double batchSize = std::distance (std::begin (batch), std::end (batch));; 1455 for (auto it = itGradientBegin; it != itGradientEnd; ++it); 1456 (*it) /= batchSize;; 1457 ; 1458 ; 1459 sumError /= sumWeights;; 1460 return sumError;; 1461 }; 1462 ; 1463 ; 1464 ; 1465/*! \brief initialization of the weights; 1466 *; 1467 *; 1468 */; 1469 template <typename OutIterator>; 1470 void Net::initializeWeights (WeightInitializationStrategy eInitStrategy, OutIterator itWeight); 1471 {; 1472 if (eInitStrategy == WeightInitializationStrategy::XAVIER); 1473 {; 1474 // input and output properties; 1475 int numInput = inputSize ();; 1476 ; 1477 // compute variance and mean of input and output; 1478 //...; 1479 ; 1480 ; 1481 // compute the weights; 1482 for (auto& layer: layers ()); 1483 {; 1484 double nIn = numInput;; 1485 double stdDev = sqrt (2.0/nIn);; 1486 for (size_t iWeight = 0, iWeightEnd = layer.numWeights (numInput); iWeight < iWeightEnd; ++iWeight); 1487 {; 1488 (*itWeight) = DNN::gaussDouble (0.0, stdDev); // factor 2.0 for ReLU; 1489 ++itWeight;; 1490 }; 1491 numInput = layer.numNodes ();; 1492 }; 1493 return;; 1494 }; 1495 ; 1496 if (eInitStrategy == WeightInitializationStrategy::XAVIERUNIFORM); 1497 {; 1498 // input and output properties; 1499 int numInput = inputSize ();; 1500 ; 1501 // compute variance and mean of input and output; 1502 //...; 1503 ; 1504 ; 1505 // compute the weights; 1506 for (auto& layer: layers ()); 1507 {; 1508 double nIn = numInput;; 1509 double minVal = -sqrt(2.0/nIn);; 1510 double maxVal = sqrt (2.0/nIn);; 1511 for (size_t iWeight = 0, iWeightEnd = layer.numWeights (numInput); iWeight < iWeightEnd; ++iWeight); 1512 {; 1513 ; 1514 (*itWeight) = DNN::uniformDouble (minVal, maxVal); // factor 2.0 for ReLU; 1515 ++itWei",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8icc_source.html:49771,layers,layers,49771,doc/master/NeuralNet_8icc_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8icc_source.html,1,['layers'],['layers']
Modifiability,"tBinError) since the bin error will not be recalculated after setting the content and a default error = 0 will be used for those bins.; See convention for numbering bins in TH1::GetBin ; Reimplemented in TH2Poly.; Definition at line 9206 of file TH1.cxx. ◆ SetBinError() [2/3]. void TH1::SetBinError ; (; Int_t ; binx, . Int_t ; biny, . Double_t ; error . ). virtual . See convention for numbering bins in TH1::GetBin. ; Reimplemented in TH2Poly.; Definition at line 9241 of file TH1.cxx. ◆ SetBinError() [3/3]. void TH1::SetBinError ; (; Int_t ; binx, . Int_t ; biny, . Int_t ; binz, . Double_t ; error . ). virtual . See convention for numbering bins in TH1::GetBin. ; Reimplemented in TH2Poly.; Definition at line 9251 of file TH1.cxx. ◆ SetBinErrorOption(). virtual void TH1::SetBinErrorOption ; (; EBinErrorOpt ; type). inlinevirtual . Definition at line 381 of file TH1.h. ◆ SetBins() [1/6]. void TH1::SetBins ; (; Int_t ; nx, . const Double_t * ; xBins . ). virtual . Redefine x axis parameters with variable bin sizes. ; The X axis parameters are modified. The bins content array is resized if errors (Sumw2) the errors array is resized The previous bin contents are lost To change only the axis limits, see TAxis::SetRange xBins is supposed to be of length nx+1 ; Reimplemented in TProfile, TProfile2D, and TProfile3D.; Definition at line 8794 of file TH1.cxx. ◆ SetBins() [2/6]. void TH1::SetBins ; (; Int_t ; nx, . const Double_t * ; xBins, . Int_t ; ny, . const Double_t * ; yBins . ). virtual . Redefine x and y axis parameters with variable bin sizes. ; The X and Y axis parameters are modified. The bins content array is resized if errors (Sumw2) the errors array is resized The previous bin contents are lost To change only the axis limits, see TAxis::SetRange xBins is supposed to be of length nx+1, yBins is supposed to be of length ny+1 ; Reimplemented in TProfile2D, TProfile, and TProfile3D.; Definition at line 8848 of file TH1.cxx. ◆ SetBins() [3/6]. void TH1::SetBins ; (; Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:205101,variab,variable,205101,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['variab'],['variable']
Modifiability,"tBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; THtml::TFileSysEntryTFileSysEntry(const THtml::TFileSysEntry&); THtml::TFileSysEntryTFileSysEntry(const char* name, THtml::TFileSysDir* parent); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfLevellevel of directory; TStringfNamename of the element; THtml::TFileSysDir*fParentparent directory. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFileSysEntry(const char* name, THtml::TFileSysDir* parent); {}. const char* GetName() const; { return fName; }. ULong_t Hash() const; { return fName.Hash(); }. void GetFullName(TString& fullname, Bool_t asIncluded) const. TFileSysDir* GetParent() const; { return fParent; }. Int_t GetLevel() const; { return fLevel; }. TFileSysEntry(const char* name, THtml::TFileSysDir* parent); { fFiles.SetOwner(); fDirs.SetOwner(); }. TString fInputPath; // directories to look for classes; prepended to Decl/ ImplFileName(). » Author: Nenad Buncic 18/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/html:$Id: THtml.h 27910 2009-03-21 17:26:55Z axel $ » Last generated: 2011-11-03 20:18; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THtml__TFileSysEntry.html:5501,Inherit,Inheritance,5501,root/html532/THtml__TFileSysEntry.html,https://root.cern,https://root.cern/root/html532/THtml__TFileSysEntry.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); Bool_tRooAbsOptTestStatistic::setData(RooAbsData& data, Bool_t cloneData = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; virtual voidShowMembers(TMemberInspector& insp, char* parent); RooMoment*RooAbsReal::sigma(RooRealVar& obs); RooMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooChi2Var.html:24367,config,config,24367,root/html526/RooChi2Var.html,https://root.cern,https://root.cern/root/html526/RooChi2Var.html,4,['config'],['config']
Modifiability,"tBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetForceDecay(Int_t type); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~TVirtualMCDecayer(); {;}. void Init(). void Decay(Int_t idpart, TLorentzVector* p). Int_t ImportParticles(TClonesArray* particles). void SetForceDecay(Int_t type). void ForceDecay(). Float_t GetPartialBranchingRatio(Int_t ipart). Float_t GetLifetime(Int_t kf). void ReadDecayTable(). » Author: Andreas Morsch 13/04/2002 » Copyright (C) 2006, Rene Brun and Fons Rademakers. *; » Last changed: root/eg:$Id$ » Last generated: 2015-03-15 16:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TVirtualMCDecayer.html:5676,Inherit,Inheritance,5676,root/html534/TVirtualMCDecayer.html,https://root.cern,https://root.cern/root/html534/TVirtualMCDecayer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tBits { kMark; kArray; };; enum TDataSet::EBitOpt { kSet; kReset; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. static const char*TTable::fgTypeName[13]. protected:. TTableDescriptor*TGenericTable::fColDescriptors; TSeqCollection*TDataSet::fListList of the the the objects included into this dataset; Long_tTTable::fMaxIndexThe used capacity of this array; Int_tTTable::fNNumber of array elements; TStringTNamed::fNameobject identifier; TDataSet*TDataSet::fParentpointer to mother of the directory; Long_tTTable::fSizeSize of the one element (row) of the table; Char_t*TTable::fTableArray of (fN*fSize) longs; TStringTNamed::fTitleobject title; static TDataSet*TDataSet::fgMainSetpointer the main dataset;. private:. Int_tfResponseLocation. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TResponseTable(); to be documented. TResponseTable(const char* name, const char* volumepath, const char* responseDefintion, Int_t allocSize); Set an empty descriptor. void AddVolumePath(const char* path); to be documented. void AddResponse(const char* chit); to be documented. void AddElement(const char* path, TTable::EColumnType type); to be documented. void SetResponse(int track, int* nvl, float* response); Add one extra his/digit to the table; Reallocate the table if needed. Int_t FindResponseLocation(TTableDescriptor& dsc); Look up the table descriptor to find the; first respnse value location; TResponsetable layout:; offset; +0 int TRACK; +1; ... int <volume path description>; +nVl.; +nVl+1 <---- fResponseLocation; ... response values; RowSize. TResponseTable(). virtual ~TResponseTable(); {}. » Last changed: root/table:$Id$ » Last generated: 2015-03-14 16:48; This page has been automatically generated. For comments or suggestions r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TResponseTable.html:14529,Inherit,Inheritance,14529,root/html534/TResponseTable.html,https://root.cern,https://root.cern/root/html534/TResponseTable.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tBits { kMark; kArray; };; enum TDataSet::EBitOpt { kSet; kReset; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. static const char*TTable::fgTypeName[13]. protected:. TTableDescriptor*TGenericTable::fColDescriptors; TSeqCollection*TDataSet::fListList of the the the objects included into this dataset; Long_tTTable::fMaxIndexThe used capacity of this array; Int_tTTable::fNNumber of array elements; TStringTNamed::fNameobject identifier; TDataSet*TDataSet::fParentpointer to mother of the directory; Long_tTTable::fSizeSize of the one element (row) of the table; Char_t*TTable::fTableArray of (fN*fSize) longs; TStringTNamed::fTitleobject title; static TDataSet*TDataSet::fgMainSetpointer the main dataset;. private:. Int_tfResponseLocation. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TResponseTable(); to be documented. TResponseTable(const char* name, const char* volumepath, const char* responseDefintion, Int_t allocSize); Set an empty descriptor. void AddVolumePath(const char* path); to be documented. void AddResponse(const char* chit); to be documented. void AddElement(const char* path, TTable::EColumnType type); to be documented. void SetResponse(int track, int* nvl, float* response); Add one extra his/digit to the table; Reallocate the table if needed. Int_t FindResponseLocation(TTableDescriptor& dsc); Look up the table descriptor to find the; first respnse value location; TResponsetable layout:; offset; +0 int TRACK; +1; ... int <volume path description>; +nVl.; +nVl+1 <---- fResponseLocation; ... response values; RowSize. TResponseTable(). virtual ~TResponseTable(); {}. » Last changed: root/table:$Id: TResponseTable.h 27753 2009-03-11 09:41:27Z brun $ » Last generated: 2011-11-03 20:22; This page has been aut",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TResponseTable.html:14510,Inherit,Inheritance,14510,root/html532/TResponseTable.html,https://root.cern,https://root.cern/root/html532/TResponseTable.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tBranchAddress(""ev"",&ev);; // create two histograms; TH1F *hpx = new TH1F(""hpx"",""px distribution"",100,-3,3);; TH2F *hpxpy = new TH2F(""hpxpy"",""py vs px"",30,-3,3,30,-3,3);; //read all entries and fill the histograms; Int_t nentries = (Int_t)t1->GetEntries();; for (Int_t i=0; i<nentries; i++) {; t1->GetEntry(i);; hpx->Fill(px);; hpxpy->Fill(px,py);; }; // We do not close the file. We want to keep the generated; // histograms we open a browser and the TreeViewer; if (gROOT->IsBatch()) return;; new TBrowser ();; t1->StartViewer();. //In the browser, click on ""ROOT Files"", then on ""tree1.root""; //You can click on the histogram icons in the right panel to draw; //them in the TreeViewer, follow the instructions in the Help.; }; 12.15 Example 2: A Tree with a C Structure; The executable script for this example is $ROOTSYS/tutorials/tree/tree2.C.In this example we show:. how to build branches from a C structure; how to make a branch with a fixed length array; how to make a branch with a variable length array; how to read selective branches; how to fill a histogram from a branch; how to use TTree::Draw to show a 3D plot. A C structure (struct) is used to build a ROOT tree. In general we discourage the use of C structures, we recommend using a class instead. However, we do support them for legacy applications written in C or FORTRAN. The example struct holds simple variables and arrays. It maps to a Geant3 common block /gctrak/.This is the definition of the common block/structure:; const Int_t MAXMEC = 30;; // PARAMETER (MAXMEC=30); // COMMON/GCTRAK/VECT(7),GETOT,GEKIN,VOUT(7); // + ,NMEC,LMEC(MAXMEC); // + ,NAMEC(MAXMEC),NSTEP; // + ,PID,DESTEP,DESTEL,SAFETY,SLENG; // + ,STEP,SNEXT,SFIELD,TOFG,GEKRAT,UPWGHT. typedef struct {; Float_t vect[7];; Float_t getot;; Float_t gekin;; Float_t vout[7];; Int_t nmec;; Int_t lmec[MAXMEC];; Int_t namec[MAXMEC];; Int_t nstep;; Int_t pid;; Float_t destep;; Float_t destel;; Float_t safety;; Float_t sleng;; Float_t step;; Float_t snext;; Float_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:560255,variab,variable,560255,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variable']
Modifiability,"tCamera*TGLPlotPainter::fCamera; TGLPlotCoordinates*TGLPlotPainter::fCoord; Bool_tTGLPlotPainter::fDrawAxes; Bool_tTGLPlotPainter::fDrawPalette; Bool_tTGLPlotPainter::fHighColor; TH1*TGLPlotPainter::fHist; TPointTGLPlotPainter::fMousePosition; Double_tTGLPlotPainter::fPadPhi; Double_tTGLPlotPainter::fPadTheta; const Float_t*TGLPlotPainter::fPhysicalShapeColor; Int_tTGLPlotPainter::fSelectedPart; TGLSelectionBufferTGLPlotPainter::fSelection; Int_tTGLPlotPainter::fSelectionBase; Bool_tTGLPlotPainter::fSelectionPass; Bool_tTGLPlotPainter::fUpdateSelection; TAxis*TGLPlotPainter::fXAxis; Double_tTGLPlotPainter::fXOYSectionPos; Double_tTGLPlotPainter::fXOZSectionPos; TAxis*TGLPlotPainter::fYAxis; Double_tTGLPlotPainter::fYOZSectionPos; TAxis*TGLPlotPainter::fZAxis; vector<Double_t>TGLPlotPainter::fZLevels. private:. TF3*fF3; Rgl::Mc::TIsoMesh<double>fMesh; TGLTF3Painter::ETF3StylefStyle; TGLTH3SlicefXOYSlice; TGLTH3SlicefXOZSlice; TGLTH3SlicefYOZSlice. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLTF3Painter(TF3* fun, TH1* hist, TGLPlotCamera* camera, TGLPlotCoordinates* coord); Constructor. char * GetPlotInfo(Int_t px, Int_t py); Coords for point on surface under cursor. Bool_t InitGeometry(); Create mesh. void StartPan(Int_t px, Int_t py); User clicks right mouse button (in a pad). void Pan(Int_t px, Int_t py); User's moving mouse cursor, with middle mouse button pressed (for pad).; Calculate 3d shift related to 2d mouse movement.; Slicing is disabled (since somebody has broken it). void AddOption(const TString& stringOption); No options for tf3. void ProcessEvent(Int_t event, Int_t px, Int_t py); Change color sheme. void InitGL() const; Initialize OpenGL state variables. void DeInitGL() const; Initialize OpenGL state variables. void DrawToSelectionBuffer() const; Draw triangles, no normals, no lighting. void DrawDefaultPlot() const; Surface with material properties and lighting. void DrawMaplePlot() const; Colored surface,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLTF3Painter.html:3746,Inherit,Inheritance,3746,root/html532/TGLTF3Painter.html,https://root.cern,https://root.cern/root/html532/TGLTF3Painter.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSigna",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQCommand.html:30252,inherit,inherited,30252,doc/master/classTQCommand.html,https://root.cern,https://root.cern/doc/master/classTQCommand.html,12,['inherit'],['inherited']
Modifiability,"tCapacity; kInitHashTableCapacity; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TClass*fClass!Pointer to the class; TObject**TObjArray::fCont!Array contents; TObjArray*fKeep!Saved copies of pointers to objects; Int_tTObjArray::fLastLast element in array containing an object; Int_tTObjArray::fLowerBoundLower bound of the array; TStringTCollection::fNamename of the collection; Int_tTCollection::fSizenumber of elements in collection; Bool_tTSeqCollection::fSortedtrue if collection has been sorted. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TClonesArray(); Default Constructor. TClonesArray(const char* classname, Int_t size = 1000, Bool_t call_dtor = kFALSE); Create an array of clone objects of classname. The class must inherit from; TObject. If the class defines its own operator delete(), make sure that; it looks like this:. void MyClass::operator delete(void *vp); {; if ((Long_t) vp != TObject::GetDtorOnly()); ::operator delete(vp); // delete space; else; TObject::SetDtorOnly(0);; }. The second argument s indicates an approximate number of objects; that will be entered in the array. If more than s objects are entered,; the array will be automatically expanded. The third argument is not used anymore and only there for backward; compatibility reasons. TClonesArray(const TClass* cl, Int_t size = 1000, Bool_t call_dtor = kFALSE); Create an array of clone objects of class cl. The class must inherit from; TObject. If the class defines an own operator delete(), make sure that; it looks like this:. void MyClass::operator delete(void *vp); {; if ((Long_t) vp != TObject::GetDtorOnly()); ::operator delete(vp); // delete space; else; TObject::SetDtorOnly(0);; }. The second argument, s, indicates an approximate num",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TClonesArray.html:14025,inherit,inherit,14025,root/html528/TClonesArray.html,https://root.cern,https://root.cern/root/html528/TClonesArray.html,6,['inherit'],['inherit']
Modifiability,tCgi fastcgi engine for THttpServer; TFeldmanCousins calculate the CL upper limit using the Feldman-Cousins method; TFile ROOT file; TFileCacheRead TFile cache when reading; TFileCacheWrite TFile cache when writing; TFileCollection Collection of TFileInfo objects; TFileDrawMap Draw a 2-d map of the objects in a file; TFileHandler Handles events on file descriptors; TFileInfo Describes generic file info including meta data information; TFileInfoMeta Describes TFileInfo meta data; TFileIter TFile class iterator; TFileMergeInfo ; TFileMerger File copying and merging services; TFilePrefetch File block prefetcher; TFileSet TDataSet class to read the native file system directory structure in; TFileStager ABC defining interface to a stager; TFitEditor Fit Panel interface; TFitParametersDialog Fit function parameters dialog; TFitResult Class holding the result of the fit; TFitResultPtr indirection to TFitResult; TFitter The ROOT standard fitter based on TMinuit; TFoam General purpose self-adapting Monte Carlo event generator; TFoamCell Single cell of FOAM; TFoamIntegrand n-dimensional real positive integrand of FOAM; TFoamMaxwt Controlling of the MC weight (maximum weight); TFoamSampler ; TFoamVect n-dimensional vector with dynamical allocation; TFolder Describe a folder: a list of objects and folders; TFormula ; TFormulaParamOrder ; TFractionFitter Fits MC fractions to data histogram; TFrame Pad graphics frame; TFrameEditor editor of TFrame objects; TFree Description of free segments on a file; TFriendElement A friend element of another TTree; TFumili The FUMILI Minimization package; TFumiliMinimizer Implementation of Minimizer interface using TFumili; TFunction Dictionary for global function; TFunctionParametersDialog Function parameters dialog; TFunctionTemplate Dictionary for function template; TG16ColorSelector 16 color cells; TGApplication GUI application singleton; TGButton Button widget abstract base class; TGButtonGroup Organizes TGButtons in a group; TGCanvas A can,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ClassIndex.html:71964,adapt,adapting,71964,root/html604/ClassIndex.html,https://root.cern,https://root.cern/root/html604/ClassIndex.html,2,['adapt'],['adapting']
Modifiability,"tCgi fastcgi engine for THttpServer; TFeldmanCousins calculate the CL upper limit using the Feldman-Cousins method; TFile ROOT file; TFileCacheRead TFile cache when reading; TFileCacheWrite TFile cache when writing; TFileCollection Collection of TFileInfo objects; TFileDrawMap Draw a 2-d map of the objects in a file; TFileHandler Handles events on file descriptors; TFileInfo Describes generic file info including meta data information; TFileInfoMeta Describes TFileInfo meta data; TFileIter TFile class iterator; TFileMergeInfo ; TFileMerger File copying and merging services; TFilePrefetch File block prefetcher; TFileSet TDataSet class to read the native file system directory structure in; TFileStager ABC defining interface to a stager; TFitEditor Fit Panel interface; TFitParametersDialog Fit function parameters dialog; TFitResult Class holding the result of the fit; TFitResultPtr indirection to TFitResult; TFitter The ROOT standard fitter based on TMinuit; TFoam General purpose self-adapting Monte Carlo event generator; TFoamCell Single cell of FOAM; TFoamIntegrand n-dimensional real positive integrand of FOAM; TFoamMaxwt Controlling of the MC weight (maximum weight); TFoamSampler ; TFoamVect n-dimensional vector with dynamical allocation; TFolder Describe a folder: a list of objects and folders; TFormula The formula base class f(x,y,z,par); TFormulaPrimitive The primitive formula; TFractionFitter Fits MC fractions to data histogram; TFrame Pad graphics frame; TFrameEditor editor of TFrame objects; TFree Description of free segments on a file; TFriendElement A friend element of another TTree; TFumili The FUMILI Minimization package; TFumiliMinimizer Implementation of Minimizer interface using TFumili; TFunction Dictionary for global function; TFunctionParametersDialog Function parameters dialog; TFunctionTemplate Dictionary for function template; TG16ColorSelector 16 color cells; TGApplication GUI application singleton; TGButton Button widget abstract base class; TGBut",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ClassIndex.html:71372,adapt,adapting,71372,root/html602/ClassIndex.html,https://root.cern,https://root.cern/root/html602/ClassIndex.html,2,['adapt'],['adapting']
Modifiability,"tClassVersion; defined in TClassTable.cxx. Note on class version numbers:; If no class number has been specified, TClass::GetVersion will return -1; The Class Version 0 request the whole object to be transient; The Class Version 1, unless specified via ClassDef indicates that the; I/O should use the TClass checksum to distinguish the layout of the class. void SetCurrentStreamerInfo(TVirtualStreamerInfo* info); Set pointer to current TVirtualStreamerInfo. Int_t Size() const; Return size of object of this class. TClass * Load(TBuffer& b); Load class description from I/O buffer and return class object. void Store(TBuffer& b) const; Store class description on I/O buffer. Bool_t IsLoaded() const; Return true if the shared library of this class is currently in the a; process's memory. Return false, after the shared library has been; unloaded or if this is an 'emulated' class created from a file's StreamerInfo. Bool_t IsStartingWithTObject() const; Returns true if this class inherits from TObject and if the start of; the TObject parts is at the very beginning of the objects.; Concretly this means that the following code is proper for this class:; ThisClass *ptr;; void *void_ptr = (void)ptr;; TObject *obj = (TObject*)void_ptr;; This code would be wrong if 'ThisClass' did not inherit 'first' from; TObject. Bool_t IsTObject() const; Return kTRUE is the class inherits from TObject. Bool_t IsForeign() const; Return kTRUE is the class is Foreign (the class does not have a Streamer method). void PostLoadCheck(); Do the initialization that can only be done after the CINT dictionary has; been fully populated and can not be delayed efficiently. Long_t Property() const; Set TObject::fBits and fStreamerType to cache information about the; class. The bits are; kIsTObject : the class inherits from TObject; kStartWithTObject: TObject is the left-most class in the inheritance tree; kIsForeign : the class doe not have a Streamer method; The value of fStreamerType are; kTObject : the class i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TClass.html:33839,inherit,inherits,33839,root/html526/TClass.html,https://root.cern,https://root.cern/root/html526/TClass.html,5,['inherit'],['inherits']
Modifiability,"tCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style. private:. TGeoBatemanSol::BtCoef_t*fCoeff[fNcoeff] Array of coefficients; Int_tfCsizeSize of the array of coefficients; TGeoElementRN*fElemReferred RN element; TGeoElementRN*fElemTopTop RN element; Double_tfFactorConstant factor that applies to all coefficients; Int_tfNcoeffNumber of coefficients; Double_tfTmaxMaximum value of the time interval; Double_tfTminMinimum value of the time interval. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoBatemanSol(TGeoElementRN* elem); Default ctor. TGeoBatemanSol(const TObjArray* chain); Default ctor. TGeoBatemanSol(const TGeoBatemanSol& other); Copy constructor. ~TGeoBatemanSol(); Destructor. TGeoBatemanSol& operator=(const TGeoBatemanSol& other); Assignment. TGeoBatemanSol& operator+=(const TGeoBatemanSol& other); Addition of other solution. Double_t Concentration(Double_t time) const; Find concentration of the element at a given time. void Draw(Option_t* option = """"); Draw the solution of Bateman equation versus time. void FindSolution(const TObjArray* array); Find the solution for the Bateman equations corresponding to the decay; chain described by an array ending with element X.; A->B->...->X; Cn = SUM [Ain * exp(-LMBDi*t)];; Cn - concentration Nx/Na; n - order of X in chain (A->B->X => n=3); LMBDi - decay constant for element of order i in the chain; Ain = LMBD1*...*LMBD(n-1) * br1*...*br(n-1)/(LMBD1-LMBDi)...(LMBDn-LMBDi);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoBatemanSol.html:8395,Inherit,Inheritance,8395,root/html532/TGeoBatemanSol.html,https://root.cern,https://root.cern/root/html532/TGeoBatemanSol.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications; static Long64_tTProofServ::fgLastEntryLast entry before exception; static TStringTProofServ::fgLastMsgMessage about status before exception. private:. TProofServLiteInterruptHandler*fInterruptHandler; TStringfSockPathunix socket path; Bool_tfTerminatedtrue if Terminate() has been already called. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofServLite(Int_t* argc, char** argv, FILE* flog = 0); Main constructor. Int_t CreateServer(); Finalize the server setup. If master, create the TProof instance to talk; the worker or submaster nodes.; Return 0 on success, -1 on error. ~TProofServLite(); Cleanup. Not really necessary since after this dtor there is no; live anyway. void HandleSigPipe(); Called when the client is not alive anymore; terminate the session. void HandleTermination(); Called when the client is not alive anymore; terminate the session. Int_t Setup(); Print the ProofServ logo on standard output.; Return 0 on success, -1 on error. void Terminate(Int_t status); Terminate the proof server. void HandleFork(TMessage* mess); Cloning itself via fork. Int_t SetupOnFork(const char* ord); Finalize the server setup afetr forking.; Return 0 on success, -1 on error. » Author: G. Ganis Oct 2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofServLite.html:17538,Inherit,Inheritance,17538,root/html534/TProofServLite.html,https://root.cern,https://root.cern/root/html534/TProofServLite.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMVA::Event*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::DataSetInfo*TMVA::VariableTransformBase::fDsiOutput; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fGetget variables/targets/spectators; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fPutput variables/targets/spectators; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableIdentityTransform( DataSetInfo& dsi ); constructor. void Initialize(); nothing to initialize. Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); the identity does not need to be prepared, only calculate the normalization. void AttachXMLTo(void* parent); identity transformation to write to XML; Log() << kFATAL << ""Please implement writing of transformation as XML"" << Endl;. void ReadFromXML(void* trfnode); reding the identity transformation from XML. const TMVA::Event* Transform(const TMVA::Event *const , Int_t cls) const; identity transform returns same event. void MakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); creates C++ code fragment of the indentity transform for inclusion in standalone C++ class. VariableIdentityTransform( DataSetInfo& dsi ). virtual ~VariableIdentityTransform( void ); {}. void WriteTransformationToStream(ostream& ) const; {}. void ReadTransformationFromStream(istream& , const TString& ); { Se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableIdentityTransform.html:9231,Variab,VariableIdentityTransform,9231,root/html532/TMVA__VariableIdentityTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableIdentityTransform.html,2,['Variab'],['VariableIdentityTransform']
Modifiability,"tCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMVA::Event*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::DataSetInfo*TMVA::VariableTransformBase::fDsiOutput; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fGetget variables/targets/spectators; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fPutput variables/targets/spectators; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableRearrangeTransform( DataSetInfo& dsi ); constructor. ~VariableRearrangeTransform(). void Initialize(); initialization of the rearrangement transformation; (nothing to do). Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); prepare transformation --> (nothing to do). const TMVA::Event* Transform(const TMVA::Event *const , Int_t cls) const. const TMVA::Event* InverseTransform(const TMVA::Event *const , Int_t cls) const. std::vector<TString>* GetTransformationStrings(Int_t cls) const; creates string with variable transformations applied. void AttachXMLTo(void* parent); // create XML description of Rearrange transformation. void ReadFromXML(void* trfnode); // Read the transformation matrices from the xml node. void PrintTransformation(ostream& o); prints the transformation ranges. void MakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); creates a normalizing function. VariableRearrangeTransform( DataSetInfo& dsi ). void Writ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableRearrangeTransform.html:9181,Variab,VariableRearrangeTransform,9181,root/html532/TMVA__VariableRearrangeTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableRearrangeTransform.html,2,['Variab'],['VariableRearrangeTransform']
Modifiability,"tCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Bool_tTMVA::MethodBase::fSetupCompletedis method setup; const TMVA::Event*TMVA::MethodBase::fTmpEvent! temporary event when testing on a different DataSet than the own one. protected:. TMVA::Types::EAnalysisTypeTMVA::MethodBase::fAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; vector<TCut>fCategoryCuts; vector<UInt_t>fCategorySpecIdx; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; Int_tTMVA::MethodCompositeBase::fMethodIndex; vector<Double_t>TMVA::MethodCompositeBase::fMethodWeight; vector<IMethod*>fMethods; vector<IMethod*>TMVA::MethodCompositeBase::fMethodsvector of all classifiers; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in input variable histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class; vector<std::vector<UInt_t> >fVarMaps; vector<TString>fVars. private:. vector<TTreeFormula*>fCatFormulas; TTree*fCatTree! needed in conjunction with TTreeFormulas for evaluation category expressions; TMVA::DataSetManager*fDataSetManagerDSMTEST. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodCategory(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodCategory.html:16346,variab,variables,16346,root/html530/TMVA__MethodCategory.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodCategory.html,6,['variab'],"['variable', 'variables']"
Modifiability,"tCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TDataSet::EDataSetPassTDataSet::kPrune; static TDataSet::EDataSetPassTDataSet::kRefs; static TDataSet::EBitOptTDataSet::kReset; static TDataSet::EBitOptTDataSet::kSet; static TObject::(anonymous)TObject::kSingleKey; static TDataSet::EDataSetPassTDataSet::kStop; static TDataSet::EDataSetPassTDataSet::kStruct; static TDataSet::EDataSetPassTDataSet::kUp; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSeqCollection*TDataSet::fListList of the the the objects included into this dataset; TStringTNamed::fNameobject identifier; TDataSet*TDataSet::fParentpointer to mother of the directory; TStringTNamed::fTitleobject title; static TDataSet*TDataSet::fgMainSetpointer the main dataset;. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFileSet(); to be documented. TFileSet(const TString& dirname, const Char_t* filename = 0, Bool_t expand = kTRUE, Int_t maxDepth = 10). Creates TFileSet; Convert the ""opearting system"" file system tree into the memory resided TFileSet. Parameters:. dirname - the name of the ""native file system"" directory; to convert into TFileSet; setname - the name of this TFileSet (it is the ""base name""; of the ""dirname"" by default); expand - flag whether the ""dirname"" must be ""expanded; (kTRUE by default); maxDeep - the max number of the levels of the directory to read in; (=10 by default); Note: If the ""dirname"" points to non-existent object, for examoe it is dead-link; ---- the object is marked as ""Zombie"" and this flag is propagated upwards. ~TFileSet(); to be documented. Bool_t IsEmpty() const; to be documented. Long_t HasData() const; This implementation is done in the TDataSet::Purge() method in mind; Since this method returns non-zero for fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFileSet.html:9873,Inherit,Inheritance,9873,root/html602/TFileSet.html,https://root.cern,https://root.cern/root/html602/TFileSet.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Bool_tTList::fAscending! sorting order (when calling Sort() or for TSortedList); TObjLink*TList::fCache! cache to speedup sequential calling of Before() and After() functions; TObjLink*TList::fFirst! pointer to first entry in linked list; TObjLink*TList::fLast! pointer to last entry in linked list; TStringTCollection::fNamename of the collection; Int_tTCollection::fSizenumber of elements in collection; Bool_tTSeqCollection::fSortedtrue if collection has been sorted; THashTable*THashList::fTableHashtable used for quick lookup of objects; static TCollection::(anonymous)TCollection::kIsOwner. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TListOfEnumsWithLock(TClass* cl = 0). ~TListOfEnumsWithLock(); Destructor. void AddFirst(TObject* obj); Add object at the beginning of the list. void AddFirst(TObject* obj, Option_t* opt); Add object at the beginning of the list and also store option.; Storing an option is useful when one wants to change the behaviour; of an object a little without having to create a complete new; copy of the object. This feature is used, for example, by the Draw(); method. It allows the same object to be drawn in different ways. void AddLast(TObject* obj); Add object at the end of the list. void AddLast(TObject* obj, Option_t* opt); Add object at the end of the list and also store option.; Storing an option is useful when one wants to change the behaviour; of an object a little without having to create a complete new; copy of the object. This feature is used, for example, by the Draw(); method. It allows the same object to be drawn in different ways. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TListOfEnumsWithLock.html:11103,Inherit,Inheritance,11103,root/html602/TListOfEnumsWithLock.html,https://root.cern,https://root.cern/root/html602/TListOfEnumsWithLock.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Float_t*TAttBBox::fBBox! Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max); TRefArrayfIdsUser-provided point identifications; Int_tTPolyMarker3D::fLastPointThe index of the last filled point; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTPolyMarker3D::fNNumber of allocated points; TStringTPolyMarker3D::fNameName of polymarker; TStringTPolyMarker3D::fOptionOptions; Bool_tfOwnIdsFlag specifying id-objects are owned by the point-set; Float_t*TPolyMarker3D::fP[3*fN] Array of X,Y,Z coordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPointSet3D(const TPointSet3D& t); Copy constructor. ~TPointSet3D(); Destructor. void CopyIds(const TPointSet3D& t); Copy id objects from point-set 't'. TPointSet3D& operator=(const TPointSet3D& t); Assignement operator. void ComputeBBox(); Compute the bounding box of this points set. void SetPointId(TObject* id); Set id of last point.; Use this method if you also use TPolyMarker3D::SetNextPoint(). void SetPointId(Int_t n, TObject* id); Set id of point n. void ClearIds(); Clears the id-array. If ids are owned the TObjects are deleted. void PointSelected(Int_t n); This virtual method is called from TPointSet3DGL when a point is; selected.; At this point it just prints out n and id of the point (if it exists).; To make something useful out of this do:; a) subclass and re-implement this method;; b) extend this class to include TExec or some other kind of callback. void Streamer(TBuffer& ); Stream an object of class TPointSet3D. TPointSet3",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPointSet3D.html:9600,Inherit,Inheritance,9600,root/html602/TPointSet3D.html,https://root.cern,https://root.cern/root/html602/TPointSet3D.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TArc*fArc! pointer to utility arc; TCanvas*fCanvas! Canvas used to draw the Color Wheel; Double_tfDrCircles radius; TGraph*fGraph! pointer to utility graph; TLine*fLine! pointer to utility line; Double_tfR0Minimum radius for circles; Double_tfRgrayMaximum radius of gray circle; Double_tfRmaxMaximum radius for rectangles; Double_tfRminMinimum radius for rectangles; TText*fText! pointer to utility text; Double_tfX[15]X coordinates of the center of circles; Double_tfY[15]Y coordinates of the center of circles. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TColorWheel(); constructor. ~TColorWheel(); destructor. Int_t DistancetoPrimitive(Int_t px, Int_t py); always return the color wheel. void Draw(Option_t* option = """"); Paint the color wheel. Int_t GetColor(Int_t px, Int_t py) const; Return the color number pointed by the mouse. char * GetObjectInfo(Int_t px, Int_t py) const; Return the color number pointed by the mouse. Int_t InCircles(Double_t x, Double_t y, Int_t coffset, Double_t angle) const; Return the color number when the mouse point to a circle. Int_t InGray(Double_t x, Double_t y) const; Return the color number when the mouse point to the gray circle. Int_t InRectangles(Double_t x, Double_t y, Int_t coffset, Double_t angle) const; Return the color number when the mouse point to a rectangle. void Paint(Option_t* option = """"); Paint the color wheel. void PaintCircle(Int_t coffset, Int_t n, Double_t x, Double_t y, Double_t ang) const; Draw one color of type circle. void PaintCirc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TColorWheel.html:8185,Inherit,Inheritance,8185,root/html602/TColorWheel.html,https://root.cern,https://root.cern/root/html602/TColorWheel.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tCollection() const; virtual Option_t*GetOption() const; virtual TClass*IsA() const; virtual TObject*Next(); virtual Bool_toperator!=(const TIterator&) const; Bool_toperator!=(const TTreeFriendLeafIter&) const; TObject*TIterator::operator()(); virtual TObject*operator*() const; virtual TIterator&operator=(const TIterator& rhs); TTreeFriendLeafIter&operator=(const TTreeFriendLeafIter& rhs); Bool_tTIterator::operator==(const TIterator& other) const; virtual voidReset(); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TTreeFriendLeafIter(const TTreeFriendLeafIter& iter); TTreeFriendLeafIter(const TTree* t, Bool_t dir = kIterForward). protected:. TTreeFriendLeafIter(). Data Members; protected:. Bool_tfDirectioniteration direction; TIterator*fLeafItercurrent leaf sub-iterator.; TTree*fTreetree being iterated; TIterator*fTreeItercurrent tree sub-iterator. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TTreeFriendLeafIter(const TTree* t, Bool_t dir = kIterForward); Create a new iterator. By default the iteration direction; is kIterForward. To go backward use kIterBackward. TTreeFriendLeafIter(const TTreeFriendLeafIter& iter); Copy constructor. Does NOT copy the 'cursor' location!. TIterator& operator=(const TIterator& rhs); Overridden assignment operator. Does NOT copy the 'cursor' location!. TTreeFriendLeafIter& operator=(const TTreeFriendLeafIter& rhs); Overridden assignment operator. Does NOT copy the 'cursor' location!. TObject* Next(); Go the next friend element. Option_t* GetOption() const; Returns the object option stored in the list. void Reset(Option_t* option = """"). TTreeFriendLeafIter(); { }. ~TTreeFriendLeafIter(); { SafeDelete(fLeafIter); SafeDelete(fTreeIter); }. const TCollection * GetCollection() const; { return 0; }. TObject * operator*() const; TODO: Implement me. » Author: Rene Brun 12/01/96 » Copyright (C) 1995-20",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TTreeFriendLeafIter.html:1489,Inherit,Inheritance,1489,root/html604/TTreeFriendLeafIter.html,https://root.cern,https://root.cern/root/html604/TTreeFriendLeafIter.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; RooCategoryProxy_stateProxy to hiding state category; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAbsHiddenReal(const char* name, const char* title, const char* unit = """"); Constructor. RooAbsHiddenReal(const char* name, const char* title, RooAbsCategory& blindState, const char* unit = """"); Constructor. RooAbsHiddenReal(const RooAbsHiddenReal& other, const char* name = 0); Copy constructor. ~RooAbsHiddenReal(); Destructor. void printValue(ostream& stream) const; Special version of printValue that doesn't reveal the objects value. Bool_t readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); Special version of readFromStream that disallows reading from stream. void writeToStream(ostream& os, Bool_t compact) const; Special version of writeToStream that disallows reading from stream. RooAbsCategory& dummyBlindState() const; Return reference to internal dummy RooCategory implementation; blinding state switch. inline RooAbsHiddenReal(); Constructors, assignment etc. Bool_t isHidden() const; If true, hiding mode is acti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsHiddenReal.html:37663,Inherit,Inheritance,37663,root/html602/RooAbsHiddenReal.html,https://root.cern,https://root.cern/root/html602/RooAbsHiddenReal.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  . #include <RooRealSumPdf.h>. Inheritance diagram for RooRealSumPdf:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooRealSumPdf() [1/5]. RooRealSumPdf::RooRealSumPdf ; (; ). Default constructor coverity[UNINIT_CTOR]. ; Definition at line 70 of file RooRealSumPdf.cxx. ◆ RooRealSumPdf() [2/5]. RooRealSumPdf::RooRealSumPdf ; (; const char * ; name, . const char * ; title . ). Constructor with name and title. ; Definition at line 75 of file RooRealSumPdf.cxx. ◆ RooRealSumPdf() [3/5]. RooRealSumPdf::RooRealSumPdf ; (; const char * ; name, . const char * ; title, . const RooArgList & ; inFuncList, . const RooArgList & ; inCoefList, . bool ; extended = false . ). Constructor for a PDF from a list of functions and coefficients. ; It implements ; \[; \sum_i \mathrm{coef}_i \cdot \mathrm{func}_i,; \]. if \( N_\mathrm{coef} = N_\mathrm{func} \). With extended=true, the coefficients can take any values. With extended=false, there is the danger of getting a degenerate minimisation problem because a PDF has to be normalised, which needs one degree of freedom less.; A plain (normalised) PDF can therefore be implemented with one less coefficient. RooFit then computes ; \[; \sum_i^{N-1} \mathrm{coef}_i \cdot \mathrm{func}_i + (1 - \sum_i \mathrm{coef}_i ) \cdot \mathrm{func}_N,; \]. if \( N_\mathrm{coef} = N_\mathrm{func} - 1 \).; All coefficients and functions are allowed to be negative but the sum (i.e. the PDF) is not, which is enforced at runtime.; Parameters. nameName of the PDF ; titleTitle (for plotting) ; inFuncListList of functions to sum ; inCoefListList of coefficients ; extendedInterpret as extended PDF (requires equal number",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealSumPdf.html:78378,extend,extended,78378,doc/master/classRooRealSumPdf.html,https://root.cern,https://root.cern/doc/master/classRooRealSumPdf.html,1,['extend'],['extended']
Modifiability,"tComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  . #include <RooRealSumPdf.h>. Inheritance diagram for RooRealSumPdf:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooRealSumPdf() [1/5]. RooRealSumPdf::RooRealSumPdf ; (; ). Default constructor coverity[UNINIT_CTOR]. ; Definition at line 72 of file RooRealSumPdf.cxx. ◆ RooRealSumPdf() [2/5]. RooRealSumPdf::RooRealSumPdf ; (; const char * ; name, . const char * ; title . ). Constructor with name and title. ; Definition at line 77 of file RooRealSumPdf.cxx. ◆ RooRealSumPdf() [3/5]. RooRealSumPdf::RooRealSumPdf ; (; const char * ; name, . const char * ; title, . const RooArgList & ; inFuncList, . const RooArgList & ; inCoefList, . bool ; extended = false . ). Constructor for a PDF from a list of functions and coefficients. ; It implements ; \[; \sum_i \mathrm{coef}_i \cdot \mathrm{func}_i,; \]. if \( N_\mathrm{coef} = N_\mathrm{func} \). With extended=true, the coefficients can take any values. With extended=false, there is the danger of getting a degenerate minimisation problem because a PDF has to be normalised, which needs one degree of freedom less.; A plain (normalised) PDF can therefore be implemented with one less coefficient. RooFit then computes ; \[; \sum_i^{N-1} \mathrm{coef}_i \cdot \mathrm{func}_i + (1 - \sum_i \mathrm{coef}_i ) \cdot \mathrm{func}_N,; \]. if \( N_\mathrm{coef} = N_\mathrm{func} - 1 \).; All coefficients and functions are allowed to be negative but the sum (i.e. the PDF) is not, which is enforced at runtime.; Parameters. nameName of the PDF ; titleTitle (for plotting) ; inFuncListList of functions to sum ; inCoefListList of coefficients ; extendedInterpret as extended PDF (requires equal number",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooRealSumPdf.html:79499,extend,extended,79499,doc/v632/classRooRealSumPdf.html,https://root.cern,https://root.cern/doc/v632/classRooRealSumPdf.html,1,['extend'],['extended']
Modifiability,tComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChebychev.html:70820,inherit,inherited,70820,doc/master/classRooChebychev.html,https://root.cern,https://root.cern/doc/master/classRooChebychev.html,13,['inherit'],['inherited']
Modifiability,"tCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction1Ref<double,int>funcFunction pointer reference; RooRealProxyxArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction1Ref<VO,VI> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registered name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction1Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Mar 10 17:14:45 2015 »",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction1Binding_double_int_.html:36243,Inherit,Inheritance,36243,root/html534/RooCFunction1Binding_double_int_.html,https://root.cern,https://root.cern/root/html534/RooCFunction1Binding_double_int_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,tConfig ; (; ). static . Return reference to instance of default numeric integrator configuration object. ; Definition at line 44 of file RooNumIntConfig.cxx. ◆ defaultPrintStyle(). RooPrintable::StyleOption RooNumIntConfig::defaultPrintStyle ; (; Option_t * ; opt); const. overridevirtual . Reimplemented from RooPrintable.; Definition at line 240 of file RooNumIntConfig.cxx. ◆ epsAbs(). double RooNumIntConfig::epsAbs ; (; ); const. inline . Definition at line 50 of file RooNumIntConfig.h. ◆ epsRel(). double RooNumIntConfig::epsRel ; (; ); const. inline . Definition at line 51 of file RooNumIntConfig.h. ◆ getConfigSection() [1/2]. RooArgSet & RooNumIntConfig::getConfigSection ; (; const char * ; name). Return section with configuration parameters for integrator with given (class) name. ; Definition at line 205 of file RooNumIntConfig.cxx. ◆ getConfigSection() [2/2]. const RooArgSet & RooNumIntConfig::getConfigSection ; (; const char * ; name); const. Retrieve configuration information specific to integrator with given name. ; Definition at line 214 of file RooNumIntConfig.cxx. ◆ IsA(). TClass * RooNumIntConfig::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 87 of file RooNumIntConfig.h. ◆ method1D() [1/2]. RooCategory & RooNumIntConfig::method1D ; (; ). inline . Definition at line 34 of file RooNumIntConfig.h. ◆ method1D() [2/2]. const RooCategory & RooNumIntConfig::method1D ; (; ); const. inline . Definition at line 37 of file RooNumIntConfig.h. ◆ method1DOpen() [1/2]. RooCategory & RooNumIntConfig::method1DOpen ; (; ). inline . Definition at line 42 of file RooNumIntConfig.h. ◆ method1DOpen() [2/2]. const RooCategory & RooNumIntConfig::method1DOpen ; (; ); const. inline . Definition at line 45 of file RooNumIntConfig.h. ◆ method2D() [1/2]. RooCategory & RooNumIntConfig::method2D ; (; ). inline . Definition at line 35 of file RooNumIntConfig.h. ◆ method2D() [2/2]. const RooCategory ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumIntConfig.html:17843,config,configuration,17843,doc/master/classRooNumIntConfig.html,https://root.cern,https://root.cern/doc/master/classRooNumIntConfig.html,1,['config'],['configuration']
Modifiability,"tConfig* cfg = static_cast<const RooNumIntConfig*>(pc.getObject(""numIntConfig"",nullptr)) ;; 534 ; 535 return createIntegral(iset,nset,cfg,rangeName) ;; 536}; 537 ; 538 ; 539 ; 540 ; 541 ; 542////////////////////////////////////////////////////////////////////////////////; 543/// Create an object that represents the integral of the function over one or more observables listed in iset.; 544/// The actual integration calculation is only performed when the return object is evaluated. The name; 545/// of the integral object is automatically constructed from the name of the input function, the variables; 546/// it integrates and the range integrates over. If nset is specified the integrand is request; 547/// to be normalized over nset (only meaningful when the integrand is a pdf). If rangename is specified; 548/// the integral is performed over the named range, otherwise it is performed over the domain of each; 549/// integrated observable. If cfg is specified it will be used to configure any numeric integration; 550/// aspect of the integral. It will not force the integral to be performed numerically, which is; 551/// decided automatically by RooRealIntegral.; 552 ; 553RooFit::OwningPtr<RooAbsReal> RooAbsReal::createIntegral(const RooArgSet& iset, const RooArgSet* nset,; 554 const RooNumIntConfig* cfg, const char* rangeName) const; 555{; 556 if (!rangeName || strchr(rangeName,',')==nullptr) {; 557 // Simple case: integral over full range or single limited range; 558 return createIntObj(iset,nset,cfg,rangeName);; 559 }; 560 ; 561 // Integral over multiple ranges; 562 std::vector<std::string> tokens = ROOT::Split(rangeName, "","");; 563 ; 564 if(RooHelpers::checkIfRangesOverlap(iset, tokens)) {; 565 std::stringstream errMsg;; 566 errMsg << GetName() << "" : integrating with respect to the variables "" << iset << "" on the ranges \"""" << rangeName; 567 << ""\"" is not possible because the ranges are overlapping"";; 568 const std::string errMsgString = errMsg.str();; 569 coutE(Integra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:20339,config,configure,20339,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['config'],['configure']
Modifiability,"tConfig* specialIntegratorConfig(Bool_t createOnTheFly); Returns the specialized integrator configuration for _this_ RooAbsReal.; If this object has no specialized configuration, a null pointer is returned,; unless createOnTheFly is kTRUE in which case a clone of the default integrator; configuration is created, installed as specialized configuration, and returned. const RooNumIntConfig* getIntegratorConfig(); Return the numeric integration configuration used for this object. If; a specialized configuration was associated with this object, that configuration; is returned, otherwise the default configuration for all RooAbsReals is returned. RooNumIntConfig* getIntegratorConfig(); Return the numeric integration configuration used for this object. If; a specialized configuration was associated with this object, that configuration; is returned, otherwise the default configuration for all RooAbsReals is returned. void setIntegratorConfig(const RooNumIntConfig& config); Set the given integrator configuration as default numeric integration; configuration for this object. void setIntegratorConfig(); Remove the specialized numeric integration configuration associated; with this object. void selectNormalization(const RooArgSet* depSet = 0, Bool_t force = kFALSE); Interface function to force use of a given set of observables; to interpret function value. Needed for functions or p.d.f.s; whose shape depends on the choice of normalization such as; RooAddPdf. void selectNormalizationRange(const char* rangeName = 0, Bool_t force = kFALSE); Interface function to force use of a given normalization range; to interpret function value. Needed for functions or p.d.f.s; whose shape depends on the choice of normalization such as; RooAddPdf. void setCacheCheck(Bool_t flag); Activate cache validation mode. Int_t getMaxVal(const RooArgSet& vars) const; Advertise capability to determine maximum value of function for given set of; observables. If no direct generator method is provided, this inf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsReal.html:59900,config,config,59900,root/html526/RooAbsReal.html,https://root.cern,https://root.cern/root/html526/RooAbsReal.html,3,['config'],"['config', 'configuration']"
Modifiability,"tCounter) {; 1022 degree = sdegree.Atoi();; 1023 counter = TString(formula(openingBracketPos + 1, formula.Index(')', polPos) - openingBracketPos)).Atoi();; 1024 } else {; 1025 Int_t temp = polPos + 3;; 1026 while (temp < formula.Length() && isdigit(formula[temp])) {; 1027 defaultDegree = false;; 1028 temp++;; 1029 }; 1030 degree = TString(formula(polPos + 3, temp - polPos - 3)).Atoi();; 1031 counter = 0;; 1032 }; 1033 ; 1034 TString replacement = TString::Format(""[%d]"", counter);; 1035 if (polPos - 1 < 0 || !IsFunctionNameChar(formula[polPos - 1]) || formula[polPos - 1] == ':') {; 1036 variable = ""x"";; 1037 defaultVariable = true;; 1038 } else {; 1039 Int_t tmp = polPos - 1;; 1040 while (tmp >= 0 && IsFunctionNameChar(formula[tmp]) && formula[tmp] != ':') {; 1041 tmp--;; 1042 }; 1043 variable = formula(tmp + 1, polPos - (tmp + 1));; 1044 }; 1045 Int_t param = counter + 1;; 1046 Int_t tmp = 1;; 1047 while (tmp <= degree) {; 1048 if (tmp > 1); 1049 replacement.Append(TString::Format(""+[%d]*%s^%d"", param, variable.Data(), tmp));; 1050 else; 1051 replacement.Append(TString::Format(""+[%d]*%s"", param, variable.Data()));; 1052 param++;; 1053 tmp++;; 1054 }; 1055 // add parenthesis before and after; 1056 if (degree > 0) {; 1057 replacement.Insert(0, '(');; 1058 replacement.Append(')');; 1059 }; 1060 TString pattern;; 1061 if (defaultCounter && !defaultDegree) {; 1062 pattern = TString::Format(""%spol%d"", (defaultVariable ? """" : variable.Data()), degree);; 1063 } else if (defaultCounter && defaultDegree) {; 1064 pattern = TString::Format(""%spol"", (defaultVariable ? """" : variable.Data()));; 1065 } else {; 1066 pattern = TString::Format(""%spol%d(%d)"", (defaultVariable ? """" : variable.Data()), degree, counter);; 1067 }; 1068 ; 1069 if (!formula.Contains(pattern)) {; 1070 Error(""HandlePolN"", ""Error handling polynomial function - expression is %s - trying to replace %s with %s "",; 1071 formula.Data(), pattern.Data(), replacement.Data());; 1072 break;; 1073 }; 1074 if (formula == p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:38535,variab,variable,38535,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variable']
Modifiability,"tCovarianceMatrix(). Double_t * TBackCompFitter::GetCovarianceMatrix ; (; ); const. overridevirtual . Get the error matrix in a pointer to a NxN array. ; excluding the fixed parameters ; Implements TVirtualFitter.; Definition at line 467 of file TBackCompFitter.cxx. ◆ GetCovarianceMatrixElement(). Double_t TBackCompFitter::GetCovarianceMatrixElement ; (; Int_t ; i, . Int_t ; j . ); const. overridevirtual . Get error matrix element (return all zero if matrix is not available) ; Implements TVirtualFitter.; Definition at line 498 of file TBackCompFitter.cxx. ◆ GetErrors(). Int_t TBackCompFitter::GetErrors ; (; Int_t ; ipar, . Double_t & ; eplus, . Double_t & ; eminus, . Double_t & ; eparab, . Double_t & ; globcc . ); const. overridevirtual . Get fit errors. ; Implements TVirtualFitter.; Definition at line 511 of file TBackCompFitter.cxx. ◆ GetFitConfig(). ROOT::Fit::FitConfig & TBackCompFitter::GetFitConfig ; (; ). inline . Get reference to Fit configuration (NOTE: it will be invalid when class is deleted) ; Definition at line 91 of file TBackCompFitter.h. ◆ GetFitData(). const ROOT::Fit::FitData & TBackCompFitter::GetFitData ; (; ); const. inline . Get reference to Fit Data object (NOTE: it will be invalid when class is deleted) ; Definition at line 100 of file TBackCompFitter.h. ◆ GetFitResult(). const ROOT::Fit::FitResult & TBackCompFitter::GetFitResult ; (; ); const. inline . Get reference to Fit Result object (NOTE: it will be invalid when class is deleted) ; Definition at line 94 of file TBackCompFitter.h. ◆ GetMinimizer(). ROOT::Math::Minimizer * TBackCompFitter::GetMinimizer ; (; ); const. Return a pointer to the minimizer. ; the return pointer will be valid after fitting and as long a new fit will not be done. For keeping a minimizer pointer the method ReCreateMinimizer() could eventually be used ; Definition at line 779 of file TBackCompFitter.cxx. ◆ GetNumberFreeParameters(). Int_t TBackCompFitter::GetNumberFreeParameters ; (; ); const. overridevirtual . Impl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBackCompFitter.html:29470,config,configuration,29470,doc/master/classTBackCompFitter.html,https://root.cern,https://root.cern/doc/master/classTBackCompFitter.html,1,['config'],['configuration']
Modifiability,"tCurrentStreamerInfoTVirtualStreamerInfo * GetCurrentStreamerInfo()Definition TClass.h:439; TClass::GetDirectoryAutoAddROOT::DirAutoAdd_t GetDirectoryAutoAdd() constReturn the wrapper around the directory auto add function.Definition TClass.cxx:7487; TClass::AddImplFilevoid AddImplFile(const char *filename, int line)Definition TClass.cxx:1952; TClass::GetListOfMethodOverloadsTCollection * GetListOfMethodOverloads(const char *name) constReturn the collection of functions named ""name"".Definition TClass.cxx:3827; TClass::fEnumsstd::atomic< TListOfEnums * > fEnumsDefinition TClass.h:205; TClass::HasNoInfoOrEmuOrFwdDeclaredDeclstatic Bool_t HasNoInfoOrEmuOrFwdDeclaredDecl(const char *)Definition TClass.cxx:3398; TClass::fOVRMutexTVirtualMutex * fOVRMutexDefinition TClass.h:342; TClass::GetListOfEnumsTList * GetListOfEnums(Bool_t load=kTRUE)Return a list containing the TEnums of a class.Definition TClass.cxx:3686; TClass::IsStartingWithTObjectBool_t IsStartingWithTObject() constReturns true if this class inherits from TObject and if the start of the TObject parts is at the very...Definition TClass.cxx:5929; TClass::GetListOfMethodsTList * GetListOfMethods(Bool_t load=kTRUE)Return list containing the TMethods of a class.Definition TClass.cxx:3812; TClass::TClassTClass()Internal, default constructor.Definition TClass.cxx:1065; TClass::fDeclFileLineShort_t fDeclFileLineDefinition TClass.h:215; TClass::GetNmethodsInt_t GetNmethods()Return the number of methods of this class Note that in case the list of methods is not yet created,...Definition TClass.cxx:4573; TClass::fIsOffsetStreamerSetstd::atomic< Bool_t > fIsOffsetStreamerSetIndicates whether the ClassInfo is supposed to be available.Definition TClass.h:261; TClass::IgnoreTObjectStreamervoid IgnoreTObjectStreamer(Bool_t ignore=kTRUE)When the class kIgnoreTObjectStreamer bit is set, the automatically generated Streamer will not call ...Definition TClass.cxx:4841; TClass::GetStreamerTClassStreamer * GetStreamer() constReturn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:318973,inherit,inherits,318973,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,2,['inherit'],['inherits']
Modifiability,"tCurrentStreamerInfoTVirtualStreamerInfo * GetCurrentStreamerInfo()Definition TClass.h:439; TClass::GetDirectoryAutoAddROOT::DirAutoAdd_t GetDirectoryAutoAdd() constReturn the wrapper around the directory auto add function.Definition TClass.cxx:7554; TClass::AddImplFilevoid AddImplFile(const char *filename, int line)Definition TClass.cxx:2019; TClass::GetListOfMethodOverloadsTCollection * GetListOfMethodOverloads(const char *name) constReturn the collection of functions named ""name"".Definition TClass.cxx:3894; TClass::fEnumsstd::atomic< TListOfEnums * > fEnumsDefinition TClass.h:205; TClass::HasNoInfoOrEmuOrFwdDeclaredDeclstatic Bool_t HasNoInfoOrEmuOrFwdDeclaredDecl(const char *)Definition TClass.cxx:3465; TClass::fOVRMutexTVirtualMutex * fOVRMutexDefinition TClass.h:342; TClass::GetListOfEnumsTList * GetListOfEnums(Bool_t load=kTRUE)Return a list containing the TEnums of a class.Definition TClass.cxx:3753; TClass::IsStartingWithTObjectBool_t IsStartingWithTObject() constReturns true if this class inherits from TObject and if the start of the TObject parts is at the very...Definition TClass.cxx:5996; TClass::GetListOfMethodsTList * GetListOfMethods(Bool_t load=kTRUE)Return list containing the TMethods of a class.Definition TClass.cxx:3879; TClass::TClassTClass()Internal, default constructor.Definition TClass.cxx:1132; TClass::fDeclFileLineShort_t fDeclFileLineDefinition TClass.h:215; TClass::GetNmethodsInt_t GetNmethods()Return the number of methods of this class Note that in case the list of methods is not yet created,...Definition TClass.cxx:4640; TClass::fIsOffsetStreamerSetstd::atomic< Bool_t > fIsOffsetStreamerSetIndicates whether the ClassInfo is supposed to be available.Definition TClass.h:261; TClass::IgnoreTObjectStreamervoid IgnoreTObjectStreamer(Bool_t ignore=kTRUE)When the class kIgnoreTObjectStreamer bit is set, the automatically generated Streamer will not call ...Definition TClass.cxx:4908; TClass::GetStreamerTClassStreamer * GetStreamer() constReturn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:321611,inherit,inherits,321611,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,2,['inherit'],['inherits']
Modifiability,"tDefPointSetCapacity (Int_t c);  ; void SetMarkerColor (Color_t tcolor=1) override;  Set marker color, propagate to children. ;  ; void SetMarkerSize (Size_t msize=1) override;  Set marker size, propagate to children. ;  ; void SetMarkerStyle (Style_t mstyle=1) override;  Set marker style, propagate to children. ;  ; void SetOwnIds (Bool_t o);  Propagate id-object ownership to children. ;  ; void SetPointId (TObject *id);  Set external object id of the last added point. ;  ; void SetRange (Double_t min, Double_t max);  Set active range of the separating quantity. ;  ; virtual Int_t Size (Bool_t under=kFALSE, Bool_t over=kFALSE) const;  Get the total number of filled points. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TakeAction (TEvePointSelector *) override;  Called from TEvePointSelector when internal arrays of the tree-selector are filled up and need to be processed. ;  ;  Public Member Functions inherited from TEveElement;  TEveElement ();  Default constructor. ;  ;  TEveElement (Color_t &main_color);  Constructor. ;  ;  TEveElement (const TEveElement &e);  Copy constructor. ;  ; virtual ~TEveElement ();  Destructor. ;  ; virtual Bool_t AcceptElement (TEveElement *el);  Check if el can be added to this element. ;  ; virtual void AddElement (TEveElement *el);  Add el to the list of children. ;  ; virtual TGListTreeItem * AddIntoListTree (TGListTree *ltree, TEveElement *parent);  Add this render element into ltree to all items belonging to parent. ;  ; virtual TGListTreeItem * AddIntoListTree (TGListTree *ltree, TGListTreeItem *parent_lti);  Add this element into ltree to an already existing item parent_lti. ;  ; virtual TGListTreeItem * AddIntoListTrees (TEveElement *parent);  Add this render element into all list-trees and all items belonging to parent. ;  ; virtual void AddParent (TEveElement *re);  Add re into the list parents. ;  ; virtual void AddStamp (UChar_t bits);  Add (bitwise or) give",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEvePointSetArray.html:3076,inherit,inherited,3076,doc/master/classTEvePointSetArray.html,https://root.cern,https://root.cern/doc/master/classTEvePointSetArray.html,1,['inherit'],['inherited']
Modifiability,"tDefaultTree; static TDataSetManager::EDataSetWorkOptskShowDefault; static TObject::(anonymous)TObject::kSingleKey; static TDataSetManager::EDataSetWorkOptskStageOnly; static TDataSetManager::EDataSetWorkOptskStagedFiles; static TDataSetManager::EDataSetWorkOptskTouch; static TDataSetManager::EDataSetStatusBitskTrustInfo; static TDataSetManager::EDataSetStatusBitskUseCache; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Long64_tfAvgFileSizeAverage file size to be used to estimate the dataset size (in MB); TUrifBaseBase URI used to parse dataset names; TStringfCommonGroupGroup that stores the COMMON datasets; TStringfCommonUserUser that stores the COMMON datasets; TStringfGroupGroup to which the owner of this session belongs; TStringfGroupConfigFilePath to the group config file; TMapfGroupQuotaGroup quotas (read from config file); TMapfGroupUsed<group> --> <used bytes> (TParameter); Long_tfMTimeGroupConfigLast modification of the group config file; Int_tfNDisappearedFilesNumber of files disappared in the last ScanDataSet operation; Int_tfNOpenedFilesNumber of files opened in the last ScanDataSet operation; Int_tfNTouchedFilesNumber of files touched in the last ScanDataSet operation; TStringfUserOwner of the session; TMapfUserUsed<group> --> <map of users> --> <value>; static TStringfgCommonDataSetTagName for common datasets, default: COMMON; static TList*fgDataSetSrvMapsList of TPair(TRegexp, TObjString) for mapping server coordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDataSetManager(const char* group = 0, const char* user = 0, const char* options = 0). Main constructor. ~TDataSetManager(); Destructor. void ParseInitOpts(const char* opts); Parse the opts string and set the init bits accordingly; Available options:; Cq: set kCheckQuota; Ar: set kAllowRegister; Av: set kAllowVerify; Ti: set kTrustInfo; Sb: set kIsSandbox; Ca: set kUseCache or kDoNotUseCa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDataSetManager.html:10693,config,config,10693,root/html602/TDataSetManager.html,https://root.cern,https://root.cern/root/html602/TDataSetManager.html,12,['config'],['config']
Modifiability,tDefaultWKSize(unsigned int size); voidROOT::Math::BaseIntegratorOptions::SetExtraOptions(const ROOT::Math::IOptions& opt); voidSetIntegrator(const char* name); voidSetNCalls(unsigned int calls); voidROOT::Math::BaseIntegratorOptions::SetRelTolerance(double tol); voidROOT::Math::BaseIntegratorOptions::SetWKSize(unsigned int size); unsigned intROOT::Math::BaseIntegratorOptions::WKSize() const. protected:. voidROOT::Math::BaseIntegratorOptions::ClearExtra(). Data Members; protected:. doubleROOT::Math::BaseIntegratorOptions::fAbsToleranceabsolute tolerance ; ROOT::Math::IOptions*ROOT::Math::BaseIntegratorOptions::fExtraOptionsextra options ; intROOT::Math::BaseIntegratorOptions::fIntegTypeIntegrator type (value converted from enum); unsigned intROOT::Math::BaseIntegratorOptions::fNCalls(max) funxtion calls; doubleROOT::Math::BaseIntegratorOptions::fRelTolerancerelative tolerance ; unsigned intROOT::Math::BaseIntegratorOptions::fWKSizeworkspace size. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BaseIntegratorOptions & operator=(const ROOT::Math::IntegratorMultiDimOptions& rhs); assignment operators. std::string Integrator() const; name of 1D integrator. IntegrationOneDim::Type IntegratorType() const; type of the integrator (return the enumeration type). { return (IntegrationOneDim::Type) fIntegType; }. void SetIntegrator(const char* name); set 1D integrator name. void Print(ostream& os = std::cout) const; print all the options. void SetDefaultIntegrator(const char* name); static methods for setting and retrieving the default options. void SetDefaultAbsTolerance(double tol). void SetDefaultRelTolerance(double tol). void SetDefaultWKSize(unsigned int size). std::string DefaultIntegrator(). IntegrationOneDim::Type DefaultIntegratorType(). double DefaultAbsTolerance(). double DefaultRelTolerance(). unsigned int DefaultWKSize(). ROOT::Math::IOptions & Default(const char* name); retrieve specific options - if not existing create a ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__IntegratorMultiDimOptions.html:2998,Inherit,Inheritance,2998,root/html532/ROOT__Math__IntegratorMultiDimOptions.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__IntegratorMultiDimOptions.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tDefinition TDirectory.h:222; TDirectory::lsvoid ls(Option_t *option="""") const overrideList Directory contents.Definition TDirectory.cxx:1143; TDirectory::Appendvirtual void Append(TObject *obj, Bool_t replace=kFALSE)Append object to this directory.Definition TDirectory.cxx:199; TDirectory::SetNamevoid SetName(const char *newname) overrideSet the name for directory If the directory name is changed after the directory was written once,...Definition TDirectory.cxx:1287; TDirectory::BuildDirectoryvoid BuildDirectory(TFile *motherFile, TDirectory *motherDir)Initialise directory to defaults.Definition TDirectory.cxx:249; TDirectory::CurrentDirectorystatic std::atomic< TDirectory * > & CurrentDirectory()Return the current directory for the current thread.Definition TDirectory.cxx:432; TDirectory::Removevirtual TObject * Remove(TObject *)Remove an object from the in-memory list.Definition TDirectory.cxx:1212; TDirectory::fListTList * fListDefinition TDirectory.h:142; TEnvThe TEnv class reads config files, by default named .rootrc.Definition TEnv.h:124; TEnv::GetValuevirtual Int_t GetValue(const char *name, Int_t dflt) constReturns the integer value for a resource.Definition TEnv.cxx:491; TEnv::SetValuevirtual void SetValue(const char *name, const char *value, EEnvLevel level=kEnvChange, const char *type=nullptr)Set the value of a resource or create a new resource.Definition TEnv.cxx:736; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TFolder<div class=""legacybox""><h2>Legacy Code</h2> TFolder is a legacy interface: there will be no bug fixes...Definition TFolder.h:30; TFolder::FindObjectAnyvirtual TObject * FindObjectAny(const char *name) constReturn a pointer to the first object with name starting at this folder.Definition TFolder.cxx:343; TFolder::AddFolderTFolder * AddFolder(const char *name, const char *title, TCollection *collection=nullptr)Create a new folder and add it to the list of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8cxx_source.html:134928,config,config,134928,doc/master/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8cxx_source.html,2,['config'],['config']
Modifiability,"tDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Attributes inherited from TBasket; static constexpr int kIOBitCount = 1;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TBasket; virtual void ReadResetBuffer (Int_t basketnumber);  Reset the read basket TBuffer memory allocation if needed. ;  ;  Protected Member Functions inherited from TKey; void Build (TDirectory *motherDir, const char *classname, Long64_t filepos);  Method used in all TKey constructor to initialize basic data fields. ;  ; virtual void Create (Int_t nbytes, TFile *f=nullptr);  Create a TKey object of specified size. ;  ; Int_t Read (const char *name) override;  Read contents of object with specified name from the current directory. ;  ; void Reset ();  Reset the key as it had not been 'filled' yet. ;  ; virtual Int_t WriteFileKeepBuffer (TFile *f=nullptr);  Write the encoded object supported by this key. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TBasketSQL.h>. Inheritance diagram for TBasketSQL:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TBasketSQL() [1/3]. TBasketSQL::TBasketSQL ; (; const TBasketSQL & ; ). private . ◆ TBask",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBasketSQL.html:20371,inherit,inherited,20371,doc/master/classTBasketSQL.html,https://root.cern,https://root.cern/doc/master/classTBasketSQL.html,1,['inherit'],['inherited']
Modifiability,tDensity. TMVA::PDEFoamDiscriminant←. TMVA::PDEFoamDecisionTree. TMVA::PDEFoamDiscriminantDensity. TMVA::PDEFoamEvent←. TMVA::PDEFoamMultiTarget. TMVA::PDEFoamEventDensity. TMVA::PDEFoamKernelBase←. TMVA::PDEFoamKernelGauss. TMVA::PDEFoamKernelLinN. TMVA::PDEFoamKernelTrivial. TMVA::PDEFoamKernelGauss. TMVA::PDEFoamKernelLinN. TMVA::PDEFoamKernelTrivial. TMVA::PDEFoamMultiTarget. TMVA::PDEFoamTarget. TMVA::PDEFoamTargetDensity. TMVA::PDEFoamVect. TMVA::PDF. TMVA::Reader. TMVA::RootFinder. TMVA::SdivSqrtSplusB. TMVA::SimulatedAnnealingFitter. TMVA::TActivationIdentity. TMVA::TActivationRadial. TMVA::TActivationSigmoid. TMVA::TActivationTanh. TMVA::TNeuron. TMVA::TNeuronInputAbs. TMVA::TNeuronInputSqSum. TMVA::TNeuronInputSum. TMVA::TSpline1. TMVA::TSpline2. TMVA::TSynapse. TMVA::Timer. TMVA::VariableDecorrTransform. TMVA::VariableGaussTransform. TMVA::VariableIdentityTransform. TMVA::VariableNormalizeTransform. TMVA::VariablePCATransform. TMVA::VariableRearrangeTransform. TMVA::VariableTransformBase←. TMVA::VariableDecorrTransform. TMVA::VariableGaussTransform. TMVA::VariableIdentityTransform. TMVA::VariableNormalizeTransform. TMVA::VariablePCATransform. TMVA::VariableRearrangeTransform. TMacro←. TEveMacro. TMap. TMapFile. TMapIter. TMarker. TMarker3DBox. TMaterial←. TMixture. TMathText. TMatrixT<double>. TMatrixT<float>. TMatrixTBase<double>←. TMatrixT<double>. TMatrixTSparse<double>. TMatrixTSym<double>. TMatrixTBase<float>←. TMatrixT<float>. TMatrixTSparse<float>. TMatrixTSym<float>. TMatrixTColumn<double>. TMatrixTColumn<float>. TMatrixTDiag<double>. TMatrixTDiag<float>. TMatrixTFlat<double>. TMatrixTFlat<float>. TMatrixTLazy<double>←. THaarMatrixT<double>. THilbertMatrixT<double>. TMatrixTLazy<float>←. THaarMatrixT<float>. THilbertMatrixT<float>. TMatrixTRow<double>. TMatrixTRow<float>. TMatrixTSparse<double>. TMatrixTSparse<float>. TMatrixTSparseDiag<double>. TMatrixTSparseDiag<float>. TMatrixTSparseRow<double>. TMatrixTSparseRow<float>. TMatrixTSub<double>. TM,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassHierarchy.html:77281,Variab,VariableTransformBase,77281,root/html534/ClassHierarchy.html,https://root.cern,https://root.cern/root/html534/ClassHierarchy.html,2,['Variab'],['VariableTransformBase']
Modifiability,"tDevice; virtual ~TGLPaintDevice ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TGLWidget * Create (const TGLFormat &format, const TGWindow *parent, Bool_t selectInput, Bool_t shareDefault, const TGLPaintDevice *shareDevice, UInt_t width, UInt_t height);  Static constructor for creating widget with given pixel format. ;  ; static TGLWidget * Create (const TGWindow *parent, Bool_t selectInput, Bool_t shareDefault, const TGLPaintDevice *shareDevice, UInt_t width, UInt_t height);  Static constructor for creating widget with default pixel format. ;  ; static TGLWidget * CreateDummy ();  Static constructor for creating widget with default pixel format. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLWidget.html:21289,inherit,inherited,21289,doc/master/classTGLWidget.html,https://root.cern,https://root.cern/doc/master/classTGLWidget.html,1,['inherit'],['inherited']
Modifiability,"tDir = NULL); TMVA::MethodTMlpANNMethodTMlpANN(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = ""3000:N-1:N-2"", TDirectory* theTargetDir = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::IMethod&TMVA::IMethod::operator=(const TMVA::IMethod&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodTMlpANN.html:9578,Config,Configurable,9578,root/html534/TMVA__MethodTMlpANN.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodTMlpANN.html,1,['Config'],['Configurable']
Modifiability,"tDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static bool _printScientific;  ; static Int_t _printSigDigits;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . Additional Inherited Members;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:70782,inherit,inherited,70782,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,1,['inherit'],['inherited']
Modifiability,"tDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooHypoSpace.html:10940,inherit,inherited,10940,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooHypoSpace.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooHypoSpace.html,13,['inherit'],['inherited']
Modifiability,"tDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpider.html:12823,inherit,inherited,12823,doc/master/classTSpider.html,https://root.cern,https://root.cern/doc/master/classTSpider.html,1,['inherit'],['inherited']
Modifiability,"tDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual TClass * IsA () const;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNLLVar_1_1xRooHypoSpace.html:10837,inherit,inherited,10837,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNLLVar_1_1xRooHypoSpace.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNLLVar_1_1xRooHypoSpace.html,1,['inherit'],['inherited']
Modifiability,"tDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXTRU.html:13533,inherit,inherited,13533,doc/master/classTXTRU.html,https://root.cern,https://root.cern/doc/master/classTXTRU.html,82,['inherit'],['inherited']
Modifiability,"tDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32VirtualXProxy.html:41924,inherit,inherited,41924,doc/master/classTGWin32VirtualXProxy.html,https://root.cern,https://root.cern/doc/master/classTGWin32VirtualXProxy.html,1,['inherit'],['inherited']
Modifiability,"tDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a new TAttText. ;  ; virtual Short_t GetTextAlign () const;  Return the text alignment. ;  ; virtual Float_t GetTextAngle () const;  Return the text angle. ;  ; virtual Color_t GetTextColor () const;  Return the text color. ;  ; virtual Font_t GetTextFont () const;  Return the text font. ;  ; virtual Float_t GetTextSize () const;  Return the text size. ;  ; virtual Float_t GetTextSizePercent (Float_t size);  Return the text in percent of the pad size. ;  ; virtual void Modify ();  Change current text attributes if necessary. ;  ; virtual void ResetAttText (Option_t *toption="""");  Reset this text attributes to default values. ;  ; virtual void SaveTextAttributes (std::ostream &out, const char *name, Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAnnotation.html:20248,inherit,inherited,20248,doc/master/classTAnnotation.html,https://root.cern,https://root.cern/doc/master/classTAnnotation.html,11,['inherit'],['inherited']
Modifiability,"tDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tGetEntryNumberFriend(const TTree*); virtual Long64_tGetEntryNumberWithBestIndex(Long64_t major, Long64_t minor) const; virtual Long64_tGetEntryNumberWithIndex(Long64_t major, Long64_t minor) const; virtual const char*TObject::GetIconName() const; virtual const char*GetMajorName() const; virtual const char*GetMinorName() const; virtual Long64_tGetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual TTree*GetTree() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TVirtualIndex&operator=(c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TVirtualIndex.html:2941,Inherit,InheritsFrom,2941,root/html534/TVirtualIndex.html,https://root.cern,https://root.cern/root/html534/TVirtualIndex.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tGetEntryNumberFriend(const TTree*); virtual Long64_tGetEntryNumberWithBestIndex(Long64_t major, Long64_t minor) const; virtual Long64_tGetEntryNumberWithIndex(Long64_t major, Long64_t minor) const; virtual const char*TObject::GetIconName() const; virtual const char*GetMajorName() const; virtual const char*GetMinorName() const; virtual Long64_tGetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual TTree*GetTree() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TVirtualIndex&operator=(const TVirtualIndex&); virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualIndex.html:2965,Inherit,InheritsFrom,2965,root/html602/TVirtualIndex.html,https://root.cern,https://root.cern/root/html602/TVirtualIndex.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual TStdExceptionHandler::EStatusHandle(exception& exc); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTSysEvtHandler::IsActive() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTSysEvtHandler::Notified()SIGNAL ; virtual Bool_tNotify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TStdExceptionHandler.html:5264,Inherit,InheritsFrom,5264,root/html532/TStdExceptionHandler.html,https://root.cern,https://root.cern/root/html532/TStdExceptionHandler.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual TStdExceptionHandler::EStatusHandle(exception& exc); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTSysEvtHandler::IsActive() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTSysEvtHandler::Notified()SIGNAL ; virtual Bool_tTStdExceptionHandler::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveManager__TExceptionHandler.html:5163,Inherit,InheritsFrom,5163,root/html532/TEveManager__TExceptionHandler.html,https://root.cern,https://root.cern/root/html532/TEveManager__TExceptionHandler.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual TStdExceptionHandler::EStatusHandle(exception& exc); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTSysEvtHandler::IsActive() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTSysEvtHandler::Notified()SIGNAL ; virtual Bool_tNotify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStdExceptionHandler.html:5289,Inherit,InheritsFrom,5289,root/html602/TStdExceptionHandler.html,https://root.cern,https://root.cern/root/html602/TStdExceptionHandler.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual TStdExceptionHandler::EStatusHandle(exception& exc); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTSysEvtHandler::IsActive() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTSysEvtHandler::Notified()SIGNAL ; virtual Bool_tTStdExceptionHandler::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveManager__TExceptionHandler.html:5164,Inherit,InheritsFrom,5164,root/html602/TEveManager__TExceptionHandler.html,https://root.cern,https://root.cern/root/html602/TEveManager__TExceptionHandler.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableNormalizeTransformVariableNormalizeTransform(TMVA::DataSetInfo& dsi); TMVA::VariableNormalizeTransformVariableNormalizeTransform(const TMVA::VariableNormalizeTransform&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidWriteTransformationToStream(ostream&) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__VariableNormalizeTransform.html:6399,Variab,VariableInfo,6399,root/html534/TMVA__VariableNormalizeTransform.html,https://root.cern,https://root.cern/root/html534/TMVA__VariableNormalizeTransform.html,10,['Variab'],"['VariableInfo', 'VariableNormalizeTransform', 'VariableNormalizeTransformVariableNormalizeTransform', 'VariableTransformBase', 'Variables']"
Modifiability,"tDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableRearrangeTransformVariableRearrangeTransform(TMVA::DataSetInfo& dsi); TMVA::VariableRearrangeTransformVariableRearrangeTransform(const TMVA::VariableRearrangeTransform&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidWriteTransformationToStream(ostream&) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__VariableRearrangeTransform.html:6324,Variab,VariableInfo,6324,root/html534/TMVA__VariableRearrangeTransform.html,https://root.cern,https://root.cern/root/html534/TMVA__VariableRearrangeTransform.html,10,['Variab'],"['VariableInfo', 'VariableRearrangeTransform', 'VariableRearrangeTransformVariableRearrangeTransform', 'VariableTransformBase', 'Variables']"
Modifiability,"tDrawOptions(Option_t* option, TString& plotOpt, TString& drawOpt); Sets User defined drawing options. void GetOptions(string optionType, string option); Gets User defined KDE construction options. void AssureOptions(); Sets missing construction options to default ones. void CheckOptions(Bool_t isUserDefinedKernel = kFALSE); Sets User global options. void SetKernelType(TKDE::EKernelType kern); Sets User option for the choice of kernel estimator. void SetIteration(TKDE::EIteration iter); Sets User option for fixed or adaptive iteration. void SetMirror(TKDE::EMirror mir); Sets User option for mirroring the data. void SetBinning(TKDE::EBinning ); Sets User option for binning the weights. void SetNBins(UInt_t nbins); Sets User option for number of bins. void SetUseBinsNEvents(UInt_t nEvents); Sets User option for the minimum number of events for allowing automatic binning. void SetTuneFactor(Double_t rho); Factor which can be used to tune the smoothing.; It is used as multiplicative factor for the fixed and adaptive bandwidth.; A value < 1 will reproduce better the tails but oversmooth the peak; while a factor > 1 will overestimate the tail. void SetRange(Double_t xMin, Double_t xMax); Sets minimum range value and maximum range value. void SetUseBins(); Sets User option for using binned weights. void SetMirror(); Sets the mirroring. void SetData(const Double_t* data); Sets the data events input sample or bin centres for binned option and computes basic estimators. void InitFromNewData(); re-initialize when new data have been filled in TKDE; re-compute kernel quantities and mean and sigma. void SetMirroredEvents(); Mirrors the data. void SetMean(); Computes input data's mean. void SetSigma(Double_t R); Computes input data's sigma. void SetKernel(); Sets the kernel density estimator. void SetKernelFunction(TKDE::KernelFunction_Ptr kernfunc = 0); Sets kernel estimator. void SetCanonicalBandwidths(); Sets the canonical bandwidths according to the kernel type. void SetKernelS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TKDE.html:12400,adapt,adaptive,12400,root/html528/TKDE.html,https://root.cern,https://root.cern/root/html528/TKDE.html,6,['adapt'],['adaptive']
Modifiability,"tDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  { kSizeMax = 5; };  ; enum  { kWorkMax = 100; };  ; enum  EVectorStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; void Allocate (Int_t nrows, Int_t row_lwb=0, Int_t init=0);  Allocate new vector. ;  ; void Delete_m (Int_t size, Element *&);  Delete data pointer m, if it was assigned on the heap. ;  ; Int_t Memcpy_m (Element *newp, const Element *oldp, Int_t copySize, Int_t newSize, Int_t oldSize);  Copy copySize doubles from *oldp to *newp . ;  ; Element * New_m (Int_t size);  default kTRUE, when Use array kFALSE ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Element fDataStack [kSizeMax];  ; Element * fElements {nullptr};  ; Bool_t fIsOwner {kTRUE};  data container ;  ; Int_t fNrows {0};  ; Int_t fRowLwb {0};  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVectorT.html:17496,inherit,inherited,17496,doc/master/classTVectorT.html,https://root.cern,https://root.cern/doc/master/classTVectorT.html,1,['inherit'],['inherited']
Modifiability,"tDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; RooDataSet * fDataSet;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <RooStats/ToyMCStudy.h>. Inheritance diagram for RooStats::ToyMCPayload:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ToyMCPayload() [1/2]. RooStats::ToyMCPayload::ToyMCPayload ; (; ). inline . Definition at line 73 of file ToyMCStudy.h. ◆ ToyMCPayload() [2/2]. RooStats::ToyMCPayload::ToyMCPayload ; (; RooDataSet * ; sd). inline . Definition at line 78 of file ToyMCStudy.h. Member Function Documentation. ◆ Class(). static TClass * RooStats::ToyMCPayload::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooStats::ToyMCPayload::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Vers",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1ToyMCPayload.html:10688,inherit,inherited,10688,doc/master/classRooStats_1_1ToyMCPayload.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1ToyMCPayload.html,2,['inherit'],['inherited']
Modifiability,"tDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; MsgLogger * fLogger;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMVA/PDEFoamKernelBase.h>. Inheritance diagram for TMVA::PDEFoamKernelBase:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ PDEFoamKernelBase() [1/2]. TMVA::PDEFoamKernelBase::PDEFoamKernelBase ; (; ). message logger ; Default constructor for streamer. ; Definition at line 51 of file PDEFoamKernelBase.cxx. ◆ PDEFoamKernelBase() [2/2]. TMVA::PDEFoamKernelBase::PDEFoamKernelBase ; (; const PDEFoamKernelBase & ; other). Copy constructor. ; Definition at line 60 of file PDEFoamKernelBase.cxx. ◆ ~PDEFoamKernelBase(). TMVA::PDEFoamKernelBase::~PDEFoamKernelBase ; (; ). virtual . Destructor. ; Definition at line 69 of file PDEFoamKernelBase.cxx. Member Function Documentation. ◆ Class(). static TClass * TMVA::PDEFoamKernelBase::Cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamKernelBase.html:10127,inherit,inherited,10127,doc/master/classTMVA_1_1PDEFoamKernelBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamKernelBase.html,2,['inherit'],['inherited']
Modifiability,"tDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetPoints (Double_t *points) const override;  Create BRIK points. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Styl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBRIK.html:15362,inherit,inherited,15362,doc/master/classTBRIK.html,https://root.cern,https://root.cern/doc/master/classTBRIK.html,1,['inherit'],['inherited']
Modifiability,"tDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetPoints (Double_t *points) const override;  Create GTRA points. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fAlpha1;  ; Float_t fAlpha2;  ; Float_t fBl1;  ; Float_t fBl2;  ; Float_t fH1;  ; Float_t fH2;  ; Float_t fTl1;  ; Float_t fTl2;  ; Float_t fTwist;  ;  Protected Attributes inherited from TBRIK; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTRA.html:17870,inherit,inherited,17870,doc/master/classTGTRA.html,https://root.cern,https://root.cern/doc/master/classTGTRA.html,1,['inherit'],['inherited']
Modifiability,"tDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetPoints (Double_t *points) const override;  Create PARA points. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fAlpha;  ; Float_t fPhi;  ; Float_t fTheta;  ;  Protected Attributes inherited from TBRIK; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPARA.html:16288,inherit,inherited,16288,doc/master/classTPARA.html,https://root.cern,https://root.cern/doc/master/classTPARA.html,1,['inherit'],['inherited']
Modifiability,"tDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetPoints (Double_t *points) const override;  Create TRAP points. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fAlpha1;  ; Float_t fAlpha2;  ; Float_t fBl1;  ; Float_t fBl2;  ; Float_t fH1;  ; Float_t fH2;  ; Float_t fTl1;  ; Float_t fTl2;  ;  Protected Attributes inherited from TBRIK; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Lin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTRAP.html:17100,inherit,inherited,17100,doc/master/classTTRAP.html,https://root.cern,https://root.cern/doc/master/classTTRAP.html,1,['inherit'],['inherited']
Modifiability,"tDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetPoints (Double_t *points) const override;  Create TRD1 points. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fDx2;  ;  Protected Attributes inherited from TBRIK; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTRD1.html:15931,inherit,inherited,15931,doc/master/classTTRD1.html,https://root.cern,https://root.cern/doc/master/classTTRD1.html,1,['inherit'],['inherited']
Modifiability,"tDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetPoints (Double_t *points) const override;  Create TRD2 points. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fDx2;  ; Float_t fDy2;  ;  Protected Attributes inherited from TBRIK; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTRD2.html:16061,inherit,inherited,16061,doc/master/classTTRD2.html,https://root.cern,https://root.cern/doc/master/classTTRD2.html,1,['inherit'],['inherited']
Modifiability,"tDtorOnly(); Float_tTBRIK::GetDx() const; virtual Float_tGetDx2() const; Float_tTBRIK::GetDy() const; Float_tTBRIK::GetDz() const; virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTShape::GetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTRD1.html:3393,Inherit,InheritsFrom,3393,root/html532/TTRD1.html,https://root.cern,https://root.cern/root/html532/TTRD1.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tDtorOnly(); Float_tTBRIK::GetDx() const; virtual Float_tGetDx2() const; Float_tTBRIK::GetDy() const; Float_tTBRIK::GetDz() const; virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTShape::GetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTRD1.html:3271,Inherit,InheritsFrom,3271,root/html602/TTRD1.html,https://root.cern,https://root.cern/root/html602/TTRD1.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tDtorOnly(); virtual Int_tGetErrorCode() const; virtual const char*GetErrorMsg() const; static const char*GetFloatFormat(); const char*GetHost() const; virtual const char*TObject::GetIconName() const; virtual Int_tGetMaxIdentifierLength(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetPort() const; virtual TSQLTableInfo*GetTableInfo(const char* tablename); virtual TSQLResult*GetTables(const char* dbname, const char* wild = 0); virtual TList*GetTablesList(const char* wild = 0); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual Bool_tHasStatement() const; virtual Bool_tHasTable(const char* tablename); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsConnected() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsError() const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSQLServer.html:3802,Inherit,InheritsFrom,3802,root/html532/TSQLServer.html,https://root.cern,https://root.cern/root/html532/TSQLServer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tDtorOnly(); virtual Int_tGetErrorCode() const; virtual const char*GetErrorMsg() const; static const char*GetFloatFormat(); const char*GetHost() const; virtual const char*TObject::GetIconName() const; virtual Int_tGetMaxIdentifierLength(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetPort() const; virtual TSQLTableInfo*GetTableInfo(const char* tablename); virtual TSQLResult*GetTables(const char* dbname, const char* wild = 0); virtual TList*GetTablesList(const char* wild = 0); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual Bool_tHasStatement() const; virtual Bool_tHasTable(const char* tablename); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsConnected() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsError() const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSQLServer.html:4114,Inherit,InheritsFrom,4114,root/html602/TSQLServer.html,https://root.cern,https://root.cern/root/html602/TSQLServer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tDtorOnly(); virtual TStringGetExpFormula(Option_t* option = """") const; virtual const char*TObject::GetIconName() const; virtual const TObject*GetLinearPart(Int_t i); virtual const char*TNamed::GetName() const; virtual Int_tGetNdim() const; virtual Int_tGetNpar() const; virtual Int_tGetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetParameter(Int_t ipar) const; Double_tGetParameter(const char* name) const; virtual Double_t*GetParameters() const; virtual voidGetParameters(Double_t* params); virtual const char*GetParName(Int_t ipar) const; virtual Int_tGetParNumber(const char* name) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsLinear(); virtual Bool_tIsNormalized(); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFormula.html:6960,Inherit,InheritsFrom,6960,root/html532/TFormula.html,https://root.cern,https://root.cern/root/html532/TFormula.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TH1F*RooStats::SamplingDistPlot::GetTH1F(const RooStats::SamplingDistribution* samplDist = NULL); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; RooStats::HypoTestPlotHypoTestPlot(); RooStats::HypoTestPlotHypoTestPlot(RooStats::HypoTestResult& result, Int_t bins = 100, Option_t* opt = ""NORMALIZE HIST""); RooStats::HypoTestPlotHypoTestPlot(RooStats::HypoTestResult& result, Int_t bins, Double_t min, Double_t max, Option_t* opt = ""NORMALIZE HIST""); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HypoTestPlot.html:3950,Inherit,InheritsFrom,3950,root/html534/RooStats__HypoTestPlot.html,https://root.cern,https://root.cern/root/html534/RooStats__HypoTestPlot.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. RooStats::SamplingSummaryLookup::LookupTablefLookupTablemap ( Index, ( CL, leftside tail prob) ). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SamplingSummaryLookup(); {}. virtual ~SamplingSummaryLookup(); {}. void Add(Double_t cl, Double_t leftside); add cl,leftside pair to lookup table. Int_t GetLookupIndex(Double_t cl, Double_t leftside); get index for cl,leftside pair. Double_t GetConfidenceLevel(Int_t index). Double_t GetLeftSideTailFraction(Int_t index). » Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__SamplingSummaryLookup.html:5578,Inherit,Inheritance,5578,root/html534/RooStats__SamplingSummaryLookup.html,https://root.cern,https://root.cern/root/html534/RooStats__SamplingSummaryLookup.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tDy() const; Float_tGetDy2() const; Float_tTBRIK::GetDz() const; virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTShape::GetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTRD2.html:3585,Inherit,InheritsFrom,3585,root/html532/TTRD2.html,https://root.cern,https://root.cern/root/html532/TTRD2.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tDy() const; Float_tGetDy2() const; Float_tTBRIK::GetDz() const; virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTShape::GetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTRD2.html:3449,Inherit,InheritsFrom,3449,root/html602/TTRD2.html,https://root.cern,https://root.cern/root/html602/TTRD2.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tElement(Int_t position) const; virtual Double_tGetMax() const; virtual Double_tGetMean() const; virtual Double_tGetMin() const; virtual Int_tGetNbins() const; virtual Double_tGetRndm(TRandom3&) const; virtual Double_tGetStepSize(Int_t iBin = 0) const; virtual Double_tGetWidth() const; TMVA::IntervalInterval(const TMVA::Interval& other); TMVA::IntervalInterval(Double_t min, Double_t max, Int_t nbins = 0); virtual TClass*IsA() const; TMVA::Interval&operator=(const TMVA::Interval&); virtual voidPrint(ostream& os) const; voidSetMax(Double_t m); voidSetMin(Double_t m); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). private:. TMVA::MsgLogger&Log() const. Data Members; protected:. Double_tfMaxthe constraints of the Interval; Double_tfMinthe constraints of the Interval; Int_tfNbinswhen >0 : number of bins (discrete interval); when ==0 continuous interval. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Interval(Double_t min, Double_t max, Int_t nbins = 0); defines minimum and maximum of an interval; when nbins > 0, interval describes a discrete distribution (equally distributed in the interval); when nbins == 0, interval describes a continous interval. Interval(const TMVA::Interval& other). ~Interval(); destructor. Double_t GetElement(Int_t position) const; calculates the value of the ""number"" bin in a discrete interval.; Parameters:; Double_t position. Double_t GetStepSize(Int_t iBin = 0) const; retuns the step size between the numbers of a ""discrete Interval"". Double_t GetRndm(TRandom3& ) const; get uniformely distributed number within interval. Double_t GetWidth() const. Double_t GetMean() const. void Print(ostream& os) const. TMVA::MsgLogger& Log() const. Double_t GetMin() const; accessors; accessors. { return fMin; }. Double_t GetMax() const; { return fMax; }. Int_t GetNbins() const; { return fNbins; }. void SetMax(Double_t m); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__Interval.html:2231,Inherit,Inheritance,2231,root/html602/TMVA__Interval.html,https://root.cern,https://root.cern/root/html602/TMVA__Interval.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tElementTitle(). const char * TEveGeoNode::GetElementTitle ; (; ); const. overridevirtual . Return title, taken from geo-node. Used via TEveElement. ; Reimplemented from TEveElement.; Definition at line 109 of file TEveGeoNode.cxx. ◆ GetMainTransparency(). Char_t TEveGeoNode::GetMainTransparency ; (; ); const. overridevirtual . Get transparency – it is taken from the geo node. ; Reimplemented from TEveElement.; Definition at line 202 of file TEveGeoNode.cxx. ◆ GetName(). const char * TEveGeoNode::GetName ; (; ); const. overridevirtual . Return name, taken from geo-node. Used via TObject. ; Reimplemented from TObject.; Definition at line 85 of file TEveGeoNode.cxx. ◆ GetNode(). TGeoNode * TEveGeoNode::GetNode ; (; ); const. inline . Definition at line 54 of file TEveGeoNode.h. ◆ GetObject(). TObject * TEveGeoNode::GetObject ; (; const TEveException & ; eh); const. inlineoverridevirtual . Get a TObject associated with this render-element. ; Most cases uses double-inheritance from TEveElement and TObject so we just do a dynamic cast here. If some TEveElement descendant implements a different scheme, this virtual method should be overriden accordingly. ; Reimplemented from TEveElement.; Definition at line 46 of file TEveGeoNode.h. ◆ GetTitle(). const char * TEveGeoNode::GetTitle ; (; ); const. overridevirtual . Return title, taken from geo-node. Used via TObject. ; Reimplemented from TObject.; Definition at line 93 of file TEveGeoNode.cxx. ◆ IsA(). TClass * TEveGeoNode::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TEveElement.; Reimplemented in TEveGeoTopNode.; Definition at line 84 of file TEveGeoNode.h. ◆ operator=(). TEveGeoNode & TEveGeoNode::operator= ; (; const TEveGeoNode & ; ). private . ◆ Save(). void TEveGeoNode::Save ; (; const char * ; file, . const char * ; name = ""Extract"", . Bool_t ; leafs_only = kFALSE . ). Save TEveGeoShapeExtract tree starting at this node. ; This function is obsolete, use SaveE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveGeoNode.html:35388,inherit,inheritance,35388,doc/master/classTEveGeoNode.html,https://root.cern,https://root.cern/doc/master/classTEveGeoNode.html,1,['inherit'],['inheritance']
Modifiability,"tFCN(const ROOT::Math::IMultiGradFunction& fcn, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); boolSetFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); voidSetFunction(const ROOT::Fit::Fitter::IModelFunction& func, bool useGradient = false); voidSetFunction(const ROOT::Fit::Fitter::IModel1DFunction& func, bool useGradient = false); voidSetFunction(const ROOT::Fit::Fitter::IGradModelFunction& func, bool useGradient = true); voidSetFunction(const ROOT::Fit::Fitter::IGradModel1DFunction& func, bool useGradient = true). protected:. boolDoBinnedLikelihoodFit(bool extended = true); boolDoInitMinimizer(); boolDoLeastSquareFit(); boolDoLinearFit(); boolDoMinimization(const ROOT::Math::IMultiGenFunction* chifunc = 0); boolDoMinimization(const ROOT::Fit::Fitter::BaseFunc& f, const ROOT::Math::IMultiGenFunction* chifunc = 0); boolDoUnbinnedLikelihoodFit(bool extended = false); voidDoUpdateFitConfig(); voidExamineFCN(); intGetNCallsFromFCN(); voidSetData(const ROOT::Fit::FitData& data); voidSetData<ROOT::Fit::BinData>(const shared_ptr<ROOT::Fit::BinData>& data); voidSetData<ROOT::Fit::UnBinData>(const shared_ptr<ROOT::Fit::UnBinData>& data); voidSetFunctionAndData(const ROOT::Fit::Fitter::IModelFunction& func, const ROOT::Fit::FitData& data). private:. ROOT::Fit::FitterFitter(const ROOT::Fit::Fitter&); ROOT::Fit::Fitter&operator=(const ROOT::Fit::Fitter& rhs). Data Members; private:. boolfBinFitflag to indicate if fit is binned; ROOT::Fit::FitConfigfConfigfitter configuration (options and parameter settings); shared_ptr<ROOT::Fit::FitData>fData! pointer to the fit data (binned or unbinned data); intfDataSizesize of data sets (need for Fumili or LM fitters); intfFitTypetype of fit (0 undefined, 1 least square, 2 likelihood); shared_ptr<ROOT::Fit::Fitter::IModelFunction>fFunc! copy of the fitted function containing on output the fit result; shared_ptr<ROOT::Math::Minimizer>",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Fit__Fitter.html:3695,extend,extended,3695,root/html604/ROOT__Fit__Fitter.html,https://root.cern,https://root.cern/root/html604/ROOT__Fit__Fitter.html,4,['extend'],['extended']
Modifiability,"tFile, TDirectory* theTargetDir = 0); TMVA::MethodLDMethodLD(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& dsi, const TString& theOption = ""LD"", TDirectory* theTargetDir = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::IMethod&TMVA::IMethod::operator=(const TMVA::IMethod&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; virtual voidProcessOptions(); voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& i); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodLD.html:9128,Config,Configurable,9128,root/html534/TMVA__MethodLD.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodLD.html,1,['Config'],['Configurable']
Modifiability,"tFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; Int_tTWbox::GetLightColor() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTBox::GetX1() const; Double_tTBox::GetX2() const; Double_tTBox::GetY1() const; Double_tTBox::GetY2() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTBox::HideToolTip(Int_t event); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBox::IsBeingResized() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Int_tTBox::IsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTBox::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFrame.html:3269,Inherit,InheritsFrom,3269,root/html532/TFrame.html,https://root.cern,https://root.cern/root/html532/TFrame.html,4,['Inherit'],['InheritsFrom']
Modifiability,"tFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; Int_tTWbox::GetLightColor() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTBox::GetX1() const; Double_tTBox::GetX2() const; Double_tTBox::GetY1() const; Double_tTBox::GetY2() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTBox::HideToolTip(Int_t event); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBox::IsBeingResized() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Int_tTBox::IsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTBox::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFrame.html:3243,Inherit,InheritsFrom,3243,root/html602/TFrame.html,https://root.cern,https://root.cern/root/html602/TFrame.html,4,['Inherit'],['InheritsFrom']
Modifiability,"tFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTTUBE::GetNdiv() const; virtual Int_tTShape::GetNumber() const; virtual Int_tTTUBE::GetNumberOfDivisions() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tGetPhi() const; virtual Float_tTTUBE::GetRmax() const; virtual Float_tTTUBE::GetRmin() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THYPE.html:3477,Inherit,InheritsFrom,3477,root/html532/THYPE.html,https://root.cern,https://root.cern/root/html532/THYPE.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTTUBE::GetNdiv() const; virtual Int_tTShape::GetNumber() const; virtual Int_tTTUBE::GetNumberOfDivisions() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tGetPhi() const; virtual Float_tTTUBE::GetRmax() const; virtual Float_tTTUBE::GetRmin() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THYPE.html:3328,Inherit,InheritsFrom,3328,root/html602/THYPE.html,https://root.cern,https://root.cern/root/html602/THYPE.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tFillColor (Color_t col) override;  Set fill color. ;  ; void SetFillStyle (Style_t sty) override;  Set fill style. ;  ; void SetLineColor (Color_t col) override;  Set lin color. ;  ; void SetLineStyle (Style_t sty) override;  Set line style. ;  ; void SetLineWidth (Width_t wid) override;  Set line width. ;  ; void SetNdivRadial (Int_t div);  Set number of radial divisions. ;  ; void SetNx (UInt_t nx);  Set the X number of sub pads. ;  ; void SetNy (UInt_t ny);  Set the Y number of sub pads. ;  ; void SetSegmentDisplay (bool seg);  Set the segment display or not. ;  ; void SetSelectionExpression (const char *selexp);  Compile selection expression if there is one. ;  ; void SetShowRange (bool showrange);  ; void SetVariablesExpression (const char *varexp);  Compile the variables expression from the given string varexp. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void SuperposeTo (TSpider *sp);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpider.html:5702,inherit,inherited,5702,doc/master/classTSpider.html,https://root.cern,https://root.cern/doc/master/classTSpider.html,1,['inherit'],['inherited']
Modifiability,"tFillStyle() const; Agnode_t*GetGVNode(); virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; voidLayout(); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttText::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGraphNode.html:3192,Inherit,InheritsFrom,3192,root/html532/TGraphNode.html,https://root.cern,https://root.cern/root/html532/TGraphNode.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tFirstPoint () const;  ; Int_t GetId () const;  ; const Double_t * GetLastPoint () const;  ; Int_t GetLastPoint (Double_t &x, Double_t &y, Double_t &z, Double_t &t) const;  ; TVirtualGeoTrack * GetMother () const;  ; TObject * GetMotherParticle () const;  ; const char * GetName () const override;  Get the PDG name. ;  ; Int_t GetNdaughters () const;  ; Int_t GetParentId () const;  ; TObject * GetParticle () const;  ; Int_t GetPDG () const;  ; Bool_t HasPoints () const;  ; TClass * IsA () const override;  ; Bool_t IsInTimeRange () const;  True if track TOF range overlaps with time interval of TGeoManager. ;  ; void SetId (Int_t id);  ; void SetName (const char *name);  Set a default name for this track. ;  ; void SetParent (TVirtualGeoTrack *parent);  ; virtual void SetParticle (TObject *particle);  ; virtual void SetPDG (Int_t pdgcode);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTrack.html:7190,inherit,inherited,7190,doc/master/classTGeoTrack.html,https://root.cern,https://root.cern/doc/master/classTGeoTrack.html,1,['inherit'],['inherited']
Modifiability,"tFisherCoefficients(const TMVA::DecisionTree::EventList& eventSample, UInt_t nFisherVars, UInt_t* mapVarInFisher); calculate the fisher coefficients for the event sample and the variables used. Double_t TrainNodeFull(const TMVA::DecisionTree::EventList& eventSample, TMVA::DecisionTreeNode* node). TMVA::DecisionTreeNode* GetEventNode(const TMVA::Event& e) const; get the pointer to the leaf node where a particular event ends up in...; (used in gradient boosting). Double_t CheckEvent(const TMVA::Event& , Bool_t UseYesNoLeaf = kFALSE) const; the event e is put into the decision tree (starting at the root node); and the output is NodeType (signal) or (background) of the final node (basket); in which the given events ends up. I.e. the result of the classification if; the event for this decision tree. Double_t SamplePurity(TMVA::DecisionTree::EventList eventSample); calculates the purity S/(S+B) of a given event sample. vector< Double_t > GetVariableImportance(); Return the relative variable importance, normalized to all; variables together having the importance 1. The importance in; evaluated as the total separation-gain that this variable had in; the decision trees (weighted by the number of events). Double_t GetVariableImportance(UInt_t ivar); returns the relative improtance of variable ivar. DecisionTreeNode* GetRoot() const; Retrieves the address of the root node. { return dynamic_cast<TMVA::DecisionTreeNode*>(fRoot); }. DecisionTreeNode * CreateNode(UInt_t ) const; { return new DecisionTreeNode(); }. BinaryTree* CreateTree() const; { return new DecisionTree(); }. const char* ClassName() const; { return ""DecisionTree""; }. Double_t TrainNode(const TMVA::DecisionTree::EventList& eventSample, TMVA::DecisionTreeNode* node); determine the way how a node is split (which variable, which cut value). { return TrainNodeFast( eventSample, node ); }. void SetPruneMethod(TMVA::DecisionTree::EPruneMethod m = kCostComplexityPruning); { fPruneMethod = m; }. void SetPruneStrength(Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__DecisionTree.html:14550,variab,variable,14550,root/html530/TMVA__DecisionTree.html,https://root.cern,https://root.cern/root/html530/TMVA__DecisionTree.html,6,['variab'],"['variable', 'variables']"
Modifiability,"tFlagswidget status flags (OR of EWidgetStatus); Int_tTGWidget::fWidgetIdthe widget id (used for event processing); UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGShutterItem(const TGWindow* p = 0, TGHotString* s = 0, Int_t id = -1, UInt_t options = 0); Create a shutter item. ~TGShutterItem(); Clan up shutter item. void SavePrimitive(ostream& out, Option_t* option = """"); Save a shutter item widget as a C++ statement(s) on output stream out. TGShutterItem(const TGShutterItem& ). TGShutterItem& operator=(const TGShutterItem& ). TGButton * GetButton() const; { return fButton; }. TGFrame * GetContainer() const; { return fCanvas->GetContainer(); }. void Selected(); { Emit("" Selected()""); }. » Author: Fons Rademakers 18/9/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-03-13 19:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGShutterItem.html:19680,Inherit,Inheritance,19680,root/html534/TGShutterItem.html,https://root.cern,https://root.cern/root/html534/TGShutterItem.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tFlagswidget status flags (OR of EWidgetStatus); Int_tTGWidget::fWidgetIdthe widget id (used for event processing); UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. private:. TTree*fTreePointer to the tree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTreeTable(TGWindow* p = 0, Int_t id = -1, TTree* tree = 0, const char* expression = 0, const char* selection = 0, const char* option = 0, UInt_t nrows = 50, UInt_t ncolumns = 10); TGTreeTable constructor. ~TGTreeTable(); TGTreeTable destructor. TGTreeTable(TGWindow* p = 0, Int_t id = -1, TTree* tree = 0, const char* expression = 0, const char* selection = 0, const char* option = 0, UInt_t nrows = 50, UInt_t ncolumns = 10). » Author: Roel Aaij 30/08/2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: Tue Jun 30 14:58:39 2015 » Last generated: 2015-06-30 14:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTreeTable.html:25570,Inherit,Inheritance,25570,root/html602/TGTreeTable.html,https://root.cern,https://root.cern/root/html602/TGTreeTable.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tFunPos < formula.Length()) {; 1165 char c = formula[lastFunPos];; 1166 // check if also last character is not alphanumeric or is not an operator and not a parenthesis ( or [.; 1167 // Parenthesis [] are used to express the variables; 1168 if (isalnum(c) || (!IsOperator(c) && c != '(' && c != ')' && c != '[' && c != ']')) {; 1169 // std::cout << ""last character for function "" << funName << "" is "" << c << "" skip .."" << std::endl;; 1170 funPos = formula.Index(funName, lastFunPos);; 1171 continue;; 1172 }; 1173 }; 1174 }; 1175 ; 1176 if (isNormalized) {; 1177 SetBit(kNormalized, true);; 1178 }; 1179 std::vector<TString> variables;; 1180 Int_t dim = 0;; 1181 TString varList = """";; 1182 Bool_t defaultVariables = false;; 1183 ; 1184 // check if function has specified the [...] e.g. gaus[x,y]; 1185 Int_t openingBracketPos = funPos + funName.Length() + (isNormalized ? 1 : 0);; 1186 Int_t closingBracketPos = kNPOS;; 1187 if (openingBracketPos > formula.Length() || formula[openingBracketPos] != '[') {; 1188 dim = funDim;; 1189 variables.resize(dim);; 1190 for (Int_t idim = 0; idim < dim; ++idim); 1191 variables[idim] = defaultVariableNames[idim];; 1192 defaultVariables = true;; 1193 } else {; 1194 // in case of [..] found, assume they specify all the variables. Use it to get function dimension; 1195 closingBracketPos = formula.Index(']', openingBracketPos);; 1196 varList = formula(openingBracketPos + 1, closingBracketPos - openingBracketPos - 1);; 1197 dim = varList.CountChar(',') + 1;; 1198 variables.resize(dim);; 1199 Int_t Nvar = 0;; 1200 TString varName = """";; 1201 for (Int_t i = 0; i < varList.Length(); ++i) {; 1202 if (IsFunctionNameChar(varList[i])) {; 1203 varName.Append(varList[i]);; 1204 }; 1205 if (varList[i] == ',') {; 1206 variables[Nvar] = varName;; 1207 varName = """";; 1208 Nvar++;; 1209 }; 1210 }; 1211 if (varName != """") // we will miss last variable; 1212 {; 1213 variables[Nvar] = varName;; 1214 }; 1215 }; 1216 // check if dimension obtained from [...] is compa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:44484,variab,variables,44484,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variables']
Modifiability,"tG The algorithm uses Stoke's theorem over the border of the closed polygon. ;  ; TObject * GetObjectX () const;  ; TObject * GetObjectY () const;  ; const char * GetVarX () const;  ; const char * GetVarY () const;  ; virtual Double_t IntegralHist (TH2 *h, Option_t *option="""") const;  Compute the integral of 2-d histogram h for all bins inside the cut if option ""width"" is specified, the integral is the sum of the bin contents multiplied by the bin width in x and in y. ;  ; TClass * IsA () const override;  ; TCutG & operator= (const TCutG &);  Assignment operator. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive as a C++ statement(s) on output stream out. ;  ; virtual void SetObjectX (TObject *obj);  Set the X object (and delete the previous one if any). ;  ; virtual void SetObjectY (TObject *obj);  Set the Y object (and delete the previous one if any). ;  ; virtual void SetVarX (const char *varx);  Set X variable. ;  ; virtual void SetVarY (const char *vary);  Set Y variable. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TCutG. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGraph;  TGraph ();  Graph default constructor. ;  ;  TGraph (const char *filename, const char *format=""%lg %lg"", Option_t *option="""");  Graph constructor reading input from filename. ;  ;  TGraph (const TF1 *f, Option_t *option="""");  Graph constructor importing its parameters from the TF1 object passed as argument. ;  ;  TGraph (const TGraph &gr);  Copy constructor for this graph. ;  ;  TGraph (const TH1 *h);  Graph constructor importing its parameters from the TH1 object passed as argument. ;  ;  TGraph (const TVectorD &vx, const TVectorD &vy);  Graph constructor with two vectors of doubles in input A graph is build with the X coordinates taken from vx and Y coord from vy The number of points in the graph is the minimum of number of points in vx and vy. ;  ;  TGraph (con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCutG.html:5278,variab,variable,5278,doc/master/classTCutG.html,https://root.cern,https://root.cern/doc/master/classTCutG.html,1,['variab'],['variable']
Modifiability,"tGetAt(Int_t i) const; Int_tTArray::GetSize() const; Stat_tGetSum() const; virtual TClass*IsA() const; TArrayF&operator=(const TArrayF& rhs); Float_t&operator[](Int_t i); Float_toperator[](Int_t i) const; static TArray*TArray::ReadArray(TBuffer& b, const TClass* clReq); voidReset(); voidReset(Float_t val); virtual voidSet(Int_t n); voidSet(Int_t n, const Float_t* array); virtual voidSetAt(Double_t v, Int_t i); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TArrayF(); TArrayF(Int_t n); TArrayF(const TArrayF& array); TArrayF(Int_t n, const Float_t* array); static voidTArray::WriteArray(TBuffer& b, const TArray* a). protected:. Bool_tTArray::BoundsOk(const char* where, Int_t at) const; Bool_tTArray::OutOfBoundsError(const char* where, Int_t i) const. Data Members; public:. Float_t*fArray[fN] Array of fN floats; Int_tTArray::fNNumber of array elements. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TArrayF(); Default TArrayF ctor. TArrayF(Int_t n); Create TArrayF object and set array size to n floats. TArrayF(Int_t n, const Float_t* array); Create TArrayF object and initialize it with values of array. TArrayF(const TArrayF& array); Copy constructor. TArrayF & operator=(const TArrayF& rhs); TArrayF assignment operator. ~TArrayF(); Delete TArrayF object. void Adopt(Int_t n, Float_t* array); Adopt array arr into TArrayF, i.e. don't copy arr but use it directly; in TArrayF. User may not delete arr, TArrayF dtor will do it. void AddAt(Float_t c, Int_t i); Add float c at position i. Check for out of bounds. void Set(Int_t n); Set size of this array to n floats.; A new array is created, the old contents copied to the new array,; then the old array is deleted.; This function should not be called if the array was declared via Adopt. void Set(Int_t n, const Float_t* array); Set size of this array to n floats and set the contents.; This fun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TArrayF.html:1575,Inherit,Inheritance,1575,root/html602/TArrayF.html,https://root.cern,https://root.cern/root/html602/TArrayF.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tGetAt(Int_t i) const; Int_tTArray::GetSize() const; Stat_tGetSum() const; virtual TClass*IsA() const; TArrayS&operator=(const TArrayS& rhs); Short_t&operator[](Int_t i); Short_toperator[](Int_t i) const; static TArray*TArray::ReadArray(TBuffer& b, const TClass* clReq); voidReset(); voidReset(Short_t val); virtual voidSet(Int_t n); voidSet(Int_t n, const Short_t* array); virtual voidSetAt(Double_t v, Int_t i); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TArrayS(); TArrayS(Int_t n); TArrayS(const TArrayS& array); TArrayS(Int_t n, const Short_t* array); static voidTArray::WriteArray(TBuffer& b, const TArray* a). protected:. Bool_tTArray::BoundsOk(const char* where, Int_t at) const; Bool_tTArray::OutOfBoundsError(const char* where, Int_t i) const. Data Members; public:. Short_t*fArray[fN] Array of fN shorts; Int_tTArray::fNNumber of array elements. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TArrayS(); Default TArrayS ctor. TArrayS(Int_t n); Create TArrayS object and set array size to n shorts. TArrayS(Int_t n, const Short_t* array); Create TArrayS object and initialize it with values of array. TArrayS(const TArrayS& array); Copy constructor. TArrayS & operator=(const TArrayS& rhs); TArrayS assignment operator. ~TArrayS(); Delete TArrayS object. void Adopt(Int_t n, Short_t* array); Adopt array arr into TArrayS, i.e. don't copy arr but use it directly; in TArrayS. User may not delete arr, TArrayS dtor will do it. void AddAt(Short_t c, Int_t i); Add short c at position i. Check for out of bounds. void Set(Int_t n); Set size of this array to n shorts.; A new array is created, the old contents copied to the new array,; then the old array is deleted.; This function should not be called if the array was declared via Adopt. void Set(Int_t n, const Short_t* array); Set size of this array to n shorts and set the contents.; This fun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TArrayS.html:1575,Inherit,Inheritance,1575,root/html602/TArrayS.html,https://root.cern,https://root.cern/root/html602/TArrayS.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tGetErrorCode() const; virtual const char*TObject::GetIconName() const; TInetAddressGetInetAddress() const; TTimeStampGetLastUsage(); virtual TInetAddressGetLocalInetAddress(); virtual Int_tGetLocalPort(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tGetOption(ESockOptions opt, Int_t& val); Int_tGetPort() const; Int_tGetRemoteProtocol() const; TSecContext*GetSecContext() const; const char*GetService() const; Int_tGetServType() const; static ULong64_tGetSocketBytesRecv(); static ULong64_tGetSocketBytesSent(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetUrl() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidNetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TUDPSocket.html:3542,Inherit,InheritsFrom,3542,root/html532/TUDPSocket.html,https://root.cern,https://root.cern/root/html532/TUDPSocket.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tGetErrorCode() const; virtual const char*TObject::GetIconName() const; TInetAddressGetInetAddress() const; TTimeStampGetLastUsage(); virtual TInetAddressGetLocalInetAddress(); virtual Int_tGetLocalPort(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tGetOption(ESockOptions opt, Int_t& val); Int_tGetPort() const; Int_tGetRemoteProtocol() const; TSecContext*GetSecContext() const; const char*GetService() const; Int_tGetServType() const; static ULong64_tGetSocketBytesRecv(); static ULong64_tGetSocketBytesSent(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetUrl() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidNetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TUDPSocket.html:3223,Inherit,InheritsFrom,3223,root/html602/TUDPSocket.html,https://root.cern,https://root.cern/root/html602/TUDPSocket.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tGetNbytesKeys() const; virtual Int_tGetNkeys() const; virtual void*GetObjectChecked(const char* namecycle, const char* classname); virtual void*GetObjectChecked(const char* namecycle, const TClass* cl); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual void*GetObjectUnchecked(const char* namecycle); virtual Option_t*TObject::GetOption() const; virtual const char*TDirectory::GetPath() const; virtual const char*TDirectory::GetPathStatic() const; virtual Long64_tGetSeekDir() const; virtual Long64_tGetSeekKeys() const; virtual Long64_tGetSeekParent() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TUUIDTDirectory::GetUUID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTDirectory::IsFolder() const; virtual Bool_tIsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsWritable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual TDirectory*mkdir(const char* name, const char* title = """"); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual TFile*OpenFile(const char* name, Option_t* option = """", const char* ftitle = """", Int_t compress = 1, Int_t netopt = 0); voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDirectoryFile.html:4798,Inherit,InheritsFrom,4798,root/html602/TDirectoryFile.html,https://root.cern,https://root.cern/root/html602/TDirectoryFile.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tGetOffset(Int_t columnIndex) const; virtual Int_tGetOffset(const Char_t* columnName = 0) const; virtual Option_t*TObject::GetOption() const; virtual TDataSet*TDataSet::GetParent() const; virtual TClass*GetRowClass() const; virtual TTableDescriptor*GetRowDescriptors() const; virtual Long_tGetRowSize() const; Int_tGetSize() const; virtual TTableDescriptor*GetTableDescriptors() const; virtual Long_tGetTableSize() const; virtual const char*TNamed::GetTitle() const; virtual const Char_t*GetType() const; static TTable::EColumnTypeGetTypeId(const char* typeName); static const char*GetTypeName(TTable::EColumnType type); virtual UInt_tGetTypeSize(Int_t columnIndex) const; virtual Int_tGetTypeSize(const Char_t* columnName = 0) const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Long_tHasData() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Long_tInsertRows(const void* rows, Long_t indx, UInt_t nRows = 1); virtual voidTObject::Inspect() constMENU ; virtual TDataSet*TDataSet::Instance() const; static TDataSet*TDataSet::instance(); voidTDataSet::InvertAllMarks()MENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTDataSet::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; virtual Bool_tTDataSet::IsMarked() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDataSet::IsThisDir(const char* dirname, int len = -1, int ignorecase = 0) const; Bool_tTObject::IsZombie() const; virtual TDataSet*TDataSet::Last() const; virtual voidTDataSet::ls(Option_t* option = """") const; virtual voidTDataSet::ls(Int_t depth) const; virtual Char_t*MakeExpression(const Char_t** expressions, Int_t nExpressions); voidTD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTable.html:10136,Inherit,InheritsFrom,10136,root/html532/TTable.html,https://root.cern,https://root.cern/root/html532/TTable.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tGetOffset(Int_t columnIndex) const; virtual Int_tGetOffset(const Char_t* columnName = 0) const; virtual Option_t*TObject::GetOption() const; virtual TDataSet*TDataSet::GetParent() const; virtual TClass*GetRowClass() const; virtual TTableDescriptor*GetRowDescriptors() const; virtual Long_tGetRowSize() const; Int_tGetSize() const; virtual TTableDescriptor*GetTableDescriptors() const; virtual Long_tGetTableSize() const; virtual const char*TNamed::GetTitle() const; virtual const Char_t*GetType() const; static TTable::EColumnTypeGetTypeId(const char* typeName); static const char*GetTypeName(TTable::EColumnType type); virtual UInt_tGetTypeSize(Int_t columnIndex) const; virtual Int_tGetTypeSize(const Char_t* columnName = 0) const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Long_tHasData() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Long_tInsertRows(const void* rows, Long_t indx, UInt_t nRows = 1); virtual voidTObject::Inspect() constMENU ; virtual TDataSet*TDataSet::Instance() const; static TDataSet*TDataSet::instance(); voidTDataSet::InvertAllMarks()MENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTDataSet::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; virtual Bool_tTDataSet::IsMarked() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDataSet::IsThisDir(const char* dirname, int len = -1, int ignorecase = 0) const; Bool_tTObject::IsZombie() const; virtual TDataSet*TDataSet::Last() const; virtual voidTDataSet::ls(Option_t* option = """") const; virtual voidTDataSet::ls(Int_t depth) const; virtual Char_t*MakeExpression(const Char_t*[] expressions, Int_t nExpressions); voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTable.html:9893,Inherit,InheritsFrom,9893,root/html602/TTable.html,https://root.cern,https://root.cern/root/html602/TTable.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tGetTickLength(Option_t* axis = ""X"") const; Double_tGetTimeOffset() const; virtual const char*TNamed::GetTitle() const; Int_tGetTitleAlign(); Width_tGetTitleBorderSize() const; Color_tGetTitleColor(Option_t* axis = ""X"") const; Color_tGetTitleFillColor() const; Style_tGetTitleFont(Option_t* axis = ""X"") const; Float_tGetTitleFontSize() const; Float_tGetTitleH() const; Float_tGetTitleOffset(Option_t* axis = ""X"") const; const char*GetTitlePS() const; Float_tGetTitleSize(Option_t* axis = ""X"") const; Style_tGetTitleStyle() const; Color_tGetTitleTextColor() const; Float_tGetTitleW() const; Float_tGetTitleX() const; Float_tGetTitleXOffset() const; Float_tGetTitleXSize() const; Float_tGetTitleY() const; Float_tGetTitleYOffset() const; Float_tGetTitleYSize() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsReading() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TStyle.html:7244,Inherit,InheritsFrom,7244,root/html532/TStyle.html,https://root.cern,https://root.cern/root/html532/TStyle.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tGetTickLength(Option_t* axis = ""X"") const; Double_tGetTimeOffset() const; virtual const char*TNamed::GetTitle() const; Int_tGetTitleAlign(); Width_tGetTitleBorderSize() const; Color_tGetTitleColor(Option_t* axis = ""X"") const; Color_tGetTitleFillColor() const; Style_tGetTitleFont(Option_t* axis = ""X"") const; Float_tGetTitleFontSize() const; Float_tGetTitleH() const; Float_tGetTitleOffset(Option_t* axis = ""X"") const; const char*GetTitlePS() const; Float_tGetTitleSize(Option_t* axis = ""X"") const; Style_tGetTitleStyle() const; Color_tGetTitleTextColor() const; Float_tGetTitleW() const; Float_tGetTitleX() const; Float_tGetTitleXOffset() const; Float_tGetTitleXSize() const; Float_tGetTitleY() const; Float_tGetTitleYOffset() const; Float_tGetTitleYSize() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsReading() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStyle.html:7184,Inherit,InheritsFrom,7184,root/html602/TStyle.html,https://root.cern,https://root.cern/root/html602/TStyle.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tGetTitleFromTop() const; Float_tGetXBetween() const; Float_tGetXdate() const; Float_tGetYBetween() const; Float_tGetYdate() const; virtual TClass*IsA() const; TAttCanvas&operator=(const TAttCanvas&); virtual voidPrint(Option_t* option = """") const; virtual voidResetAttCanvas(Option_t* option = """"); virtual voidSetAdate(Float_t adate); virtual voidSetTitleFromTop(Float_t titlefromtop); virtual voidSetXBetween(Float_t xbetween); virtual voidSetXdate(Float_t xdate); virtual voidSetYBetween(Float_t ybetween); virtual voidSetYdate(Float_t ydate); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; private:. Float_tfAdateAlignment for the date; Float_tfTitleFromTopY distance of Global Title from top; Float_tfXBetweenX distance between pads; Float_tfXdateX position where to draw the date; Float_tfYBetweenY distance between pads; Float_tfYdateX position where to draw the date. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TAttCanvas(); Default constructor. ~TAttCanvas(); Destructor. void Copy(TAttCanvas& attcanvas) const; Copy constructor. void Print(Option_t* option = """") const; Print canvas attributes. void ResetAttCanvas(Option_t* option = """"); Print canvas attributes. TAttCanvas(). Float_t GetAdate() const; { return fAdate;}. Float_t GetTitleFromTop() const; { return fTitleFromTop;}. Float_t GetXBetween() const; { return fXBetween;}. Float_t GetXdate() const; { return fXdate;}. Float_t GetYBetween() const; { return fYBetween;}. Float_t GetYdate() const; { return fYdate;}. void SetAdate(Float_t adate); { fAdate=adate;}. void SetTitleFromTop(Float_t titlefromtop); { fTitleFromTop=titlefromtop;}. void SetXBetween(Float_t xbetween); { fXBetween=xbetween;}. void SetXdate(Float_t xdate); { fXdate=xdate;}. void SetYBetween(Float_t ybetween); { fYBetween=ybetween;}. void SetYdate(Float_t ydate); { fYdate=ydate;}. » Author: Rene Brun 12/12/94 » Copyright (C)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TAttCanvas.html:1506,Inherit,Inheritance,1506,root/html532/TAttCanvas.html,https://root.cern,https://root.cern/root/html532/TAttCanvas.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tGlobalMax ();  return the global maximum. ;  ; Double_t GetGlobalMin ();  return the global minimum. ;  ; bool GetGlobalScale ();  ; Color_t GetLineColor ();  ; Width_t GetLineWidth ();  ; Int_t GetNbins ();  get the binning of the histograms. ;  ; Long64_t GetNentries ();  ; UInt_t GetNvar ();  ; TParallelCoordSelect * GetSelection (const char *title);  Get a selection from its title. ;  ; TList * GetSelectList ();  ; TTree * GetTree ();  return the tree if fTree is defined. ;  ; Double_t * GetVariable (const char *var);  Get the variables values from its title. ;  ; Double_t * GetVariable (Int_t i);  Get the variables values from its index. ;  ; TList * GetVarList ();  ; bool GetVertDisplay () const;  ; Int_t GetWeightCut () const;  ; TClass * IsA () const override;  ; void Paint (Option_t *options="""") override;  Paint the parallel coordinates graph. ;  ; bool RemoveVariable (const char *var);  Delete the variable ""vartitle"" from the graph. ;  ; void RemoveVariable (TParallelCoordVar *var);  Delete a variable from the graph. ;  ; void ResetTree ();  Reset the tree entry list to the initial one.. ;  ; void SaveEntryLists (const char *filename="""", bool overwrite=false);  Save the entry lists in a root file ""filename.root"". ;  ; void SavePrimitive (std::ostream &out, Option_t *options) override;  Save the TParallelCoord in a macro. ;  ; void SaveTree (const char *filename="""", bool overwrite=false);  Save the tree in a file if fTreeFileName == """". ;  ; void SetAxisHistogramBinning (Int_t n=100);  Set the same histogram axis binning for all axis. ;  ; void SetAxisHistogramHeight (Double_t h=0.5);  Set the same histogram axis height for all axis. ;  ; void SetAxisHistogramLineWidth (Int_t lw=2);  Set the same histogram axis line width for all axis. ;  ; void SetCandleChart (bool can);  Set a candle chart display. ;  ; void SetCurrentEntries (TEntryList *entries);  ; void SetCurrentFirst (Long64_t);  Set the first entry to be displayed. ;  ; void SetCurrentN (Long64_t);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoord.html:9762,variab,variable,9762,doc/master/classTParallelCoord.html,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html,1,['variab'],['variable']
Modifiability,"tGuides ();  Configuration of guides GUI called from SetModel(). ;  ; void SetModel (TObject *obj) override;  Sets model or disables/hides viewer. ;  ; void SetRotatorMode ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateCameraCenter ();  Update current camera with GUI state. ;  ; void UpdateMaxDrawTimes ();  Slot for fMaxSceneDrawTimeHQ and fMaxSceneDrawTimeLQ. ;  ; void UpdatePointLineStuff ();  Slot for point-sizes and line-widths. ;  ; void UpdateRotator ();  Update rotator related variables. ;  ; void UpdateStereo ();  Update stereo related variables. ;  ; void UpdateViewerAxes (Int_t id);  Update viewer with GUI state. ;  ; void UpdateViewerReference ();  Update viewer with GUI state. ;  ; virtual void ViewerRedraw ();  Initiate redraw of the viewer. ;  ;  Public Member Functions inherited from TGedFrame;  TGedFrame (const TGWindow *p=nullptr, Int_t width=140, Int_t height=30, UInt_t options=kChildFrame, Pixel_t back=GetDefaultFrameBackground());  Constructor of the base GUI attribute frame. ;  ;  ~TGedFrame () override;  Destructor of the base GUI attribute frame. ;  ; virtual Bool_t AcceptModel (TObject *);  ; virtual void ActivateBaseClassEditors (TClass *cl);  Provide list of editors for base-classes. ;  ; virtual void AddExtraTab (TGedSubFrame *sf);  Adds tab container to list of extra tabs. ;  ;  ClassDefOverride (TGedFrame, 0);  ; virtual TGVerticalFrame * CreateEditorTabSubFrame (const char *name);  Create a vertical frame to be used by 'owner' in extra tab 'name'. ;  ; Option_t * GetDrawOption () const override;  Get draw options of the selected object. ;  ; TList * GetExtraTabs ();  ; TGedEditor * GetGedEditor ();  ; TClass * GetModelClass ();  ; Int_t GetPriority ();  ; virtual void Refresh (TObject *model);  Refresh the GUI info about the object attributes. ;  ; void SetDrawOption (Option_t *option="""") override;  Set drawing option for obj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLViewerEditor.html:2600,inherit,inherited,2600,doc/master/classTGLViewerEditor.html,https://root.cern,https://root.cern/doc/master/classTGLViewerEditor.html,1,['inherit'],['inherited']
Modifiability,"tHandler() const; const char*GetMsd() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetOrdinal() const; Int_tGetParallel() const; Int_tGetPerfIdx() const; Int_tGetPort() const; TProof*GetProof() const; const char*GetProofWorkDir() const; Int_tGetProtocol() const; Float_tGetRealTime() const; const char*GetROOTVersion() const; const char*GetSessionTag() const; Int_tGetSlaveType() const; TSocket*GetSocket() const; Int_tGetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetUser() const; const char*GetWorkDir() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSlave.html:3164,Inherit,InheritsFrom,3164,root/html532/TSlave.html,https://root.cern,https://root.cern/root/html532/TSlave.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tHandler() const; const char*GetMsd() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetOrdinal() const; Int_tGetParallel() const; Int_tGetPerfIdx() const; Int_tGetPort() const; TProof*GetProof() const; const char*GetProofWorkDir() const; Int_tGetProtocol() const; Float_tGetRealTime() const; const char*GetROOTVersion() const; const char*GetSessionTag() const; Int_tGetSlaveType() const; TSocket*GetSocket() const; Int_tGetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetUser() const; const char*GetWorkDir() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSlave.html:3188,Inherit,InheritsFrom,3188,root/html602/TSlave.html,https://root.cern,https://root.cern/root/html602/TSlave.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tHandler.ArrowKeyFactor: -1.0; OpenGL.EventHandler.MouseDragFactor: -1.0; OpenGL.EventHandler.MouseWheelFactor: -1.0; ROOT::MacOSX::OpenGLDefinition ROOTOpenGLView.h:74. Definition at line 29 of file TGLEventHandler.h. Public Member Functions;  TGLEventHandler (TGWindow *w, TObject *obj);  Constructor. ;  ;  ~TGLEventHandler () override;  Destructor. ;  ;  ClassDefOverride (TGLEventHandler, 0);  ; virtual void ClearMouseOver ();  Clear mouse-over state and emit mouse-over signals. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Process event of type 'event' - one of EEventType types, occurring at window location px, py This is provided for use when embedding GL viewer into pad. ;  ; Bool_t GetArcBall () const;  ; Bool_t GetDoInternalSelection () const;  ; Int_t GetSecSelType () const;  ; Int_t GetTooltipPixelTolerance () const;  ; Bool_t HandleButton (Event_t *event) override;  Handle mouse button 'event'. ;  ; Bool_t HandleConfigureNotify (Event_t *event) override;  Handle configure notify 'event' - a window resize/movement. ;  ; Bool_t HandleCrossing (Event_t *event) override;  Handle generic Event_t type 'event' - provided to catch focus changes and terminate any interaction in viewer. ;  ; Bool_t HandleDoubleClick (Event_t *event) override;  Handle mouse double click 'event'. ;  ; Bool_t HandleEvent (Event_t *event) override;  Handle generic Event_t type 'event' - provided to catch focus changes and terminate any interaction in viewer. ;  ; virtual Bool_t HandleExpose (Event_t *event);  Handle window expose 'event' - show. ;  ; Bool_t HandleFocusChange (Event_t *event) override;  Handle generic Event_t type 'event' - provided to catch focus changes and terminate any interaction in viewer. ;  ; Bool_t HandleKey (Event_t *event) override;  Handle keyboard 'event'. ;  ; Bool_t HandleMotion (Event_t *event) override;  Handle mouse motion 'event'. ;  ; Bool_t HandleTimer (TTimer *t) override;  If mouse delay timer times out emit signal. ;  ; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLEventHandler.html:1773,config,configure,1773,doc/master/classTGLEventHandler.html,https://root.cern,https://root.cern/doc/master/classTGLEventHandler.html,1,['config'],['configure']
Modifiability,"tHints(const TGTableLayoutHints&); TGTableLayoutHints&operator=(const TGTableLayoutHints&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum TRefCnt::EReferenceFlag { kStaticInit; };. protected:. UInt_tfAttachBottomrespectively; UInt_tfAttachLeftColumn/row division number on which; UInt_tfAttachRightto attach the frame. Starts at 0; UInt_tfAttachTopand goes to # columns / # rows; ULong_tTGLayoutHints::fLayoutHintslayout hints (combination of ELayoutHints); Int_tTGLayoutHints::fPadbottomamount of bottom padding; Int_tTGLayoutHints::fPadleftamount of left padding; Int_tTGLayoutHints::fPadrightamount of right padding; Int_tTGLayoutHints::fPadtopamount of top padding; UInt_tTRefCnt::fRefs(1 less than) number of references. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SavePrimitive(ostream& out, Option_t* = """"). TGTableLayoutHints(const TGTableLayoutHints& ). TGTableLayoutHints& operator=(const TGTableLayoutHints& ). TGTableLayoutHints(UInt_t attach_left, UInt_t attach_right, UInt_t attach_top, UInt_t attach_bottom, ULong_t hints = kLHintsNormal, UInt_t padleft = 0, UInt_t padright = 0, UInt_t padtop = 0, UInt_t padbottom = 0); { }. virtual ~TGTableLayoutHints(); { }. UInt_t GetAttachLeft() const; { return fAttachLeft; }. UInt_t GetAttachRight() const; { return fAttachRight; }. UInt_t GetAttachTop() const; { return fAttachTop; }. UInt_t GetAttachBottom() const; { return fAttachBottom; }. » Author: Brett Viren 04/15/2001 » Copyright (C) 2001, Brett Viren *; » Last changed: root/gui:$Id: TGTableLayout.h 23115 2008-04-10 13:35:37Z rdm $ » Last generated: 2011-11-03 20:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGTableLayoutHints.html:8397,Inherit,Inheritance,8397,root/html532/TGTableLayoutHints.html,https://root.cern,https://root.cern/root/html532/TGTableLayoutHints.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tHistoPvals(TH1* histo, double percentage); virtual const char*TObject::GetIconName() const; doubleGetMedian(TH1* histo); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; doubleGetSBCenter(double n_sigmas = 1, bool display = false); TH1F*GetSBhisto(); double*GetSBIntExtremes(double frac); doubleGetSBmean(); doubleGetSBrms(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; RooStats::HybridPlotHybridPlot(const RooStats::HybridPlot&); RooStats::HybridPlotHybridPlot(const char* name, const char* title, const vector<double>& sb_values, const vector<double>& b_values, double testStat_data, int n_bins, bool verbosity = true); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__HybridPlot.html:3440,Inherit,InheritsFrom,3440,root/html532/RooStats__HybridPlot.html,https://root.cern,https://root.cern/root/html532/RooStats__HybridPlot.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tHistoPvals(TH1* histo, double percentage); virtual const char*TObject::GetIconName() const; doubleGetMedian(TH1* histo); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; doubleGetSBCenter(double n_sigmas = 1, bool display = false); TH1F*GetSBhisto(); double*GetSBIntExtremes(double frac); doubleGetSBmean(); doubleGetSBrms(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; RooStats::HybridPlotHybridPlot(const RooStats::HybridPlot&); RooStats::HybridPlotHybridPlot(const char* name, const char* title, const vector<double>& sb_values, const vector<double>& b_values, double testStat_data, int n_bins, bool verbosity = true); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HybridPlot.html:3440,Inherit,InheritsFrom,3440,root/html602/RooStats__HybridPlot.html,https://root.cern,https://root.cern/root/html602/RooStats__HybridPlot.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tHook() const; virtual intPreAltHook(RooArgSet* parameterPoint, double obsTestStat) const; virtual voidPreHook() const; virtual intPreNullHook(RooArgSet* parameterPoint, double obsTestStat) const. Data Members; protected:. const RooStats::ModelConfig*RooStats::HypoTestCalculatorGeneric::fAltModel; unsigned intRooStats::HypoTestCalculatorGeneric::fAltToysSeedto have same toys for alternate; const RooArgSet*fConditionalMLEsAlt; const RooArgSet*fConditionalMLEsNull; const RooAbsData*RooStats::HypoTestCalculatorGeneric::fData; RooStats::TestStatSampler*RooStats::HypoTestCalculatorGeneric::fDefaultSampler; RooStats::TestStatistic*RooStats::HypoTestCalculatorGeneric::fDefaultTestStat; intfNToysAlt; intfNToysAltTail; intfNToysNull; intfNToysNullTail; const RooStats::ModelConfig*RooStats::HypoTestCalculatorGeneric::fNullModel; RooStats::TestStatSampler*RooStats::HypoTestCalculatorGeneric::fTestStatSampler. private:. RooArgSet*fFitInfo; boolfStoreFitInfo. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void PreHook() const. void PostHook() const. int PreNullHook(RooArgSet* parameterPoint, double obsTestStat) const. int PreAltHook(RooArgSet* parameterPoint, double obsTestStat) const. FrequentistCalculator(const RooAbsData& data, const RooStats::ModelConfig& altModel, const RooStats::ModelConfig& nullModel, RooStats::TestStatSampler* sampler = 0). ~FrequentistCalculator(). void SetToys(int toysNull, int toysAlt); set number of toys. { fNToysNull = toysNull; fNToysAlt = toysAlt; }. void SetNToysInTails(int toysNull, int toysAlt); set least number of toys in tails. { fNToysNullTail = toysNull; fNToysAltTail = toysAlt; }. void SetConditionalMLEsNull(const RooArgSet* c); set given nuisance parameters to a specific value that will be used instead of their; profiled value for Null toys. void SetConditionalMLEsAlt(const RooArgSet* c); set given nuisance parameters to a specific value that will be used instead of their; profiled value for Alte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__FrequentistCalculator.html:3812,Inherit,Inheritance,3812,root/html602/RooStats__FrequentistCalculator.html,https://root.cern,https://root.cern/root/html602/RooStats__FrequentistCalculator.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tHub based build system.; Bugs and Issues fixed in this release; More than 200 items were addressed for this release. The full list is:. [#15621] - Buffer overflow in TBranch::Init; [#15610] - Memory leak in TTree getattr pythonization; [#15590] - Infinite recursion in TFile::Open; [#15460] - TEnum::GetEnum(“B”)->GetUnderlyingType() does not following typedefs; [#15413] - Fails to build with cuDNN version 9; [#15406] - TEnum::GetEnum does not seem to see ‘through’ using statements.; [#15399] - Memory leak with jitted nodes if the execution is never triggered; [#15396] - [TMVA] Pymva test (Keras) failing on 632 and main; [#15370] - Broken link in HS3 printout; [#15340] - Webgraphics: canvas displayed, but many error printed; [#15253] - C++ standard not propagated via CMake anymore; [#15197] - RBDT does not support xgboost inference; [#15156] - Segfault in TMVA::Experimental::SOFIE::RModel::Streamer; [#15139] - cmake option -Dall=YES breaks the cmake; [#15118] - jsoninterface does not build if provided with RapidYAML; [#15108] - Turn off clang-format for Linkdef files; [#15090] - TClass::GetClassInfo() is not thread safe; [#15077] - Passing different floating point types to RVec utility functions; [#15048] - [ntuple] Handling of virtual inheritance broken; [#15040] - RDataFrame Inaccurate example of progress bar from documentation; [#15028] - RDataFrame Unable to cacheread remote file; [#15027] - spurrious cmake message about AfterImage with -Dminimal=ON; [#14981] - RVecs leak memory with np.asarray in pyROOT; [#14964] - ROOT-HEAD fails with “cling interactive line includer >>>: fatal error: module file ‘[snip]/Vc.pcm’ not found: module file not found”; [#14958] - ROOT_HEAD failed with error message: Fail to detect cryptographic random generator; [#14921] - ROOT Fails to build macOS 14.4 arm64 Xcode 15.3; [#14914] - VecOps::Take with default argument doesn’t check correctly the out of boundary condition; [#14910] - hadd issue when using parallelization together with in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/release-notes.html:25918,inherit,inheritance,25918,doc/v632/release-notes.html,https://root.cern,https://root.cern/doc/v632/release-notes.html,1,['inherit'],['inheritance']
Modifiability,"tIOFeatures (TIOFeatures &features);  ; virtual bool SetMakeClass (bool decomposeObj=true);  Set the branch in a mode where the object are decomposed (Also known as MakeClass mode). ;  ; virtual void SetObject (void *objadd);  Set object this branch is pointing to. ;  ; virtual void SetOffset (Int_t offset=0);  ; virtual void SetStatus (bool status=true);  Set branch status to Process or DoNotProcess. ;  ; virtual void SetTree (TTree *tree);  ; virtual void SetupAddresses ();  If the branch address is not set, we set all addresses starting with the top level parent branch. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool SupportsBulkRead () const;  Returns true if this branch supports bulk IO, false otherwise. ;  ; virtual void UpdateAddress ();  ; virtual void UpdateFile ();  Refresh the value of fDirectory (i.e. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranch.html:9898,inherit,inherited,9898,doc/master/classTBranch.html,https://root.cern,https://root.cern/doc/master/classTBranch.html,1,['inherit'],['inherited']
Modifiability,"tIconName() const; Returns mime type name of object. Used by the TBrowser (via TGMimeTypes; class). Override for class of which you would like to have different; icons for objects of the same class. UInt_t GetUniqueID() const; Return the unique object id. char * GetObjectInfo(Int_t px, Int_t py) const; Returns string containing info about the object at position (px,py).; This method is typically overridden by classes of which the objects; can report peculiarities for different positions.; Returned string will be re-used (lock in MT environment). const char * GetTitle() const; Returns title of object. This default method returns the class title; (i.e. description). Classes that give objects a title should override; this method. Bool_t HandleTimer(TTimer* timer); Execute action in response of a timer timing out. This method; must be overridden if an object has to react to timers. ULong_t Hash() const; Return hash value for this object. Bool_t InheritsFrom(const char* classname) const; Returns kTRUE if object inherits from class ""classname"". Bool_t InheritsFrom(const TClass* cl) const; Returns kTRUE if object inherits from TClass cl. void Inspect() const; Dump contents of this object in a graphics canvas.; Same action as Dump but in a graphical form.; In addition pointers to other objects can be followed. The following picture is the Inspect of a histogram object:. /*; ; */. Bool_t IsFolder() const; Returns kTRUE in case object contains browsable objects (like containers; or lists of other objects). Bool_t IsEqual(const TObject* obj) const; Default equal comparison (objects are equal if they have the same; address in memory). More complicated classes might want to override; this function. void ls(Option_t* option = """") const; The ls function lists the contents of a class on stdout. Ls output; is typically much less verbose then Dump(). Bool_t Notify(); This method must be overridden to handle object notifcation. void Paint(Option_t* option = """"); This method must be ove",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TObject.html:10855,inherit,inherits,10855,root/html528/TObject.html,https://root.cern,https://root.cern/root/html528/TObject.html,14,"['Inherit', 'inherit']","['InheritsFrom', 'inherits']"
Modifiability,"tIconName() const; virtual Int_tTSeqCollection::GetLast() const; TList*THashList::GetListForObject(const char* name) const; TList*THashList::GetListForObject(const TObject* obj) const; virtual const char*TCollection::GetName() const; virtual TEnum*GetObject(const char*) const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**TList::GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTCollection::GetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tTSeqCollection::IndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; Bool_tTList::IsAscending(); virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tIsLoaded() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tTSeqCollection::IsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*TList::Last() const; Int_tTSeqCollection::LastIndex() const; virtual TObjLink*TList::LastLink() const; virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator*TList::MakeIterator(Bool_t dir = kIterForward) const; virtual TIterator*TCollection::MakeReverseIterator() const; voidTObject::MayNotUse(const char* method) const; Long64_tTSeqCollection::Merge(TCol",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TListOfEnums.html:4273,Inherit,InheritsFrom,4273,root/html602/TListOfEnums.html,https://root.cern,https://root.cern/root/html602/TListOfEnums.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tIllegalIndex(const char* method, Int_t idx) const; voidInit(Int_t capacity); Int_tLogIndex(Int_t idx) const; Bool_tLowWaterMark() const; voidMoveGapTo(Int_t newGapStart); TOrdCollection&operator=(const TOrdCollection&); Int_tPhysIndex(Int_t idx) const; voidSetCapacity(Int_t newCapacity). Data Members; public:. enum { kDefaultCapacity; kMinExpand; kShrinkFactor; };; enum TCollection::[unnamed] { kIsOwner; kInitCapacity; kInitHashTableCapacity; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTCollection::fNamename of the collection; Int_tTCollection::fSizenumber of elements in collection; Bool_tTSeqCollection::fSortedtrue if collection has been sorted. private:. Int_tfCapacity; TObject**fCont; Int_tfGapSize; Int_tfGapStart. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TOrdCollection(Int_t capacity = kDefaultCapacity); Create an ordered collection. ~TOrdCollection(); Delete the collection. Objects are not deleted unless the TOrdCollection; is the owner (set via SetOwner()). void AddAt(TObject* obj, Int_t idx); Insert object at position idx in the collection. void AddFirst(TObject* obj); Insert object at beginning of collection. void AddLast(TObject* obj); Add object at the end of the collection. void AddBefore(const TObject* before, TObject* obj); Insert object before object before in the collection. void AddAfter(const TObject* after, TObject* obj); Insert object after object after in the collection. TObject * After(const TObject* obj) const; Return the object after object obj. Returns 0 if obj is last; in collection. TObject * At(Int_t idx) const; Returns the object at position idx. Returns 0 if idx is out of range. TObject * Before(const TObject* obj) const; Returns the object before object obj. R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TOrdCollection.html:9541,Inherit,Inheritance,9541,root/html532/TOrdCollection.html,https://root.cern,https://root.cern/root/html532/TOrdCollection.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tInetAddress() const; TTimeStampTSocket::GetLastUsage(); virtual TInetAddressGetLocalInetAddress(); virtual Int_tTSocket::GetLocalPort(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tGetOption(ESockOptions opt, Int_t& val); Int_tTSocket::GetPort() const; Int_tTSocket::GetRemoteProtocol() const; TSecContext*TSocket::GetSecContext() const; const char*TSocket::GetService() const; Int_tTSocket::GetServType() const; Int_tGetSize() const; static ULong64_tTSocket::GetSocketBytesRecv(); static ULong64_tTSocket::GetSocketBytesSent(); Int_tTSocket::GetTcpWindowSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*TSocket::GetUrl() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSocket::IsAuthenticated() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidTSocket::NetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPSocket.html:4208,Inherit,InheritsFrom,4208,root/html532/TPSocket.html,https://root.cern,https://root.cern/root/html532/TPSocket.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tInetAddress() const; TTimeStampTSocket::GetLastUsage(); virtual TInetAddressGetLocalInetAddress(); virtual Int_tTSocket::GetLocalPort(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tGetOption(ESockOptions opt, Int_t& val); Int_tTSocket::GetPort() const; Int_tTSocket::GetRemoteProtocol() const; TSecContext*TSocket::GetSecContext() const; const char*TSocket::GetService() const; Int_tTSocket::GetServType() const; Int_tGetSize() const; static ULong64_tTSocket::GetSocketBytesRecv(); static ULong64_tTSocket::GetSocketBytesSent(); Int_tTSocket::GetTcpWindowSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*TSocket::GetUrl() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSocket::IsAuthenticated() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidTSocket::NetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPSocket.html:3803,Inherit,InheritsFrom,3803,root/html602/TPSocket.html,https://root.cern,https://root.cern/root/html602/TPSocket.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTXMLParser::GetParseCode() const; const char*TXMLParser::GetParseCodeMessage(Int_t parseCode) const; Bool_tTXMLParser::GetReplaceEntities() const; Bool_tTXMLParser::GetStopOnError() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Bool_tTXMLParser::GetValidate() const; const char*TXMLParser::GetValidateError() const; const char*TXMLParser::GetValidateWarning() const; virtual TXMLDocument*GetXMLDocument() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator dele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDOMParser.html:5503,Inherit,InheritsFrom,5503,root/html532/TDOMParser.html,https://root.cern,https://root.cern/root/html532/TDOMParser.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTXMLParser::GetParseCode() const; const char*TXMLParser::GetParseCodeMessage(Int_t parseCode) const; Bool_tTXMLParser::GetReplaceEntities() const; Bool_tTXMLParser::GetStopOnError() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Bool_tTXMLParser::GetValidate() const; const char*TXMLParser::GetValidateError() const; const char*TXMLParser::GetValidateWarning() const; virtual TXMLDocument*GetXMLDocument() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDOMParser.html:5490,Inherit,InheritsFrom,5490,root/html602/TDOMParser.html,https://root.cern,https://root.cern/root/html602/TDOMParser.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tInfo*TMVA::VariableTransformBase::fDsiOutput; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fGetget variables/targets/spectators; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fPutput variables/targets/spectators; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. private:. vector<TMatrixD*>fDecorrMatrices! Decorrelation matrix [class0/class1/.../all classes]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableDecorrTransform( DataSetInfo& dsi ); constructor. ~VariableDecorrTransform(); destructor. void Initialize(); initialisation. Bool_t PrepareTransformation(const vector<TMVA::Event*>& ); calculate the decorrelation matrix and the normalization. std::vector<TString>* GetTransformationStrings(Int_t cls) const; creates string with variable transformations applied. const TMVA::Event* Transform(const TMVA::Event*const , Int_t cls) const; apply the decorrelation transformation. const TMVA::Event* InverseTransform(const TMVA::Event*const , Int_t cls) const; apply the inverse decorrelation transformation ...; TODO : ... build the inverse transformation. void CalcSQRMats(const vector<TMVA::Event*>& , Int_t maxCls); compute square-root matrices for signal and background. void WriteTransformationToStream(ostream& ) const; write the decorrelation matrix to the stream. void AttachXMLTo(void* parent); node attachment to parent. void ReadFromXML(void* trfnode); Read the transformation matrices from the xml node. void ReadTransformationFromStream(istream& , const TString& ); Read the decorellation matrix from an input stream. void PrintTransformation(ostream& o); prints the transformation matrix. void MakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); creat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableDecorrTransform.html:10502,variab,variable,10502,root/html602/TMVA__VariableDecorrTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableDecorrTransform.html,4,['variab'],['variable']
Modifiability,"tInfo;  Name of the host system, ROOT version and date. ;  ; TText * fHostInfoText;  Graphics Text object with the fHostInfo data. ;  ; TString fName;  Name of this TTreePerfStats. ;  ; Int_t fNleaves;  Number of leaves in the tree. ;  ; TPaveText * fPave;  Pointer to annotation pavetext. ;  ; Int_t fReadaheadSize;  Read-ahead cache size. ;  ; Int_t fReadCalls;  Number of read calls. ;  ; Double_t fRealNorm;  Real time scale factor for fGraphTime. ;  ; Double_t fRealTime;  Real time. ;  ; TGaxis * fRealTimeAxis;  Pointer to TGaxis object showing real-time. ;  ; TTree * fTree;  ! Pointer to the Tree being monitored ;  ; Int_t fTreeCacheSize;  TTreeCache buffer size. ;  ; Long64_t fUnzipInputSize;  Compressed bytes seen by the decompressor. ;  ; Long64_t fUnzipObjSize;  Uncompressed bytes produced by the decompressor. ;  ; Double_t fUnzipTime;  Time spent uncompressing the data. ;  ; TStopwatch * fWatch;  TStopwatch pointer. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TTreePerfStats.h>. Inheritance diagram for TTreePerfStats:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ BasketList_t. using TTreePerfStats::BasketList_t = std::vector<std::pair<TBranch*, std::vector<size_t> >>. Definition at line 48 of file TTreePerfStats.h. Constructor & Destructor Documentation. ◆ TTreePerfStats() [1/2]. TTreePerfStats::TTreePerfStats ; (; ). default constructor (used when reading an object only) ; Definition at line 107 of file TTreePerfStats.cxx. ◆ TTreePerfStats() [2/2]. TTreePerfStats::TTreePerfStats ; (; const char * ; name, . TTree * ; T . ). Create a TTree I/O perf stats object. ; Definition at line 138 of file TTreePerfStats.cxx. ◆ ~TTreePerfStats(). TTreePerfStats::~TTreePerfStats ; (; ). override . Destructor. ; Definition at line 188 of file TTreePerfStats.cxx. Member Function Documentation. ◆ Browse(). v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreePerfStats.html:19130,inherit,inherited,19130,doc/master/classTTreePerfStats.html,https://root.cern,https://root.cern/doc/master/classTTreePerfStats.html,1,['inherit'],['inherited']
Modifiability,"tIntegratorConfig()Remove the specialized numeric integration configuration associated with this object.Definition RooAbsReal.cxx:3346; RooAbsReal::forceNumIntvirtual void forceNumInt(bool flag=true)Definition RooAbsReal.h:169; RooAbsReal::getIntegratorConfigconst RooNumIntConfig * getIntegratorConfig() constReturn the numeric integration configuration used for this object.Definition RooAbsReal.cxx:3309; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooExponentialExponential PDF.Definition RooExponential.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooMsgService::instancestatic RooMsgService & instance()Return reference to singleton instance.Definition RooMsgService.cxx:345; RooMsgService::getStreamStreamConfig & getStream(Int_t id)Definition RooMsgService.h:161; RooNumIntConfigHolds the configuration parameters of the various numeric integrators used by RooRealIntegral.Definition RooNumIntConfig.h:25; RooPowerSumRooPowerSum implements a power law PDF of the form.Definition RooPowerSum.h:20; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; RooRealVar::setBinsvoid setBins(Int_t nBins, const char *name=nullptr)Create a uniform binning under name 'name' for this variable.Definition RooRealVar.cxx:396; RooFit::RooConstRooConstVar & RooConst(double val)Definition RooGlobalFunc.cxx:1131; RooFit::NormSetRooCmdArg NormSet(Args_t &&... argsOrArgSet)Definition RooGlobalFunc.h:371; RooFit::IntegrateBinsRooCmdArg IntegrateBins(double precision)Integrate the PDF over bins.Definition RooGlobalFunc.cxx:507; RooFit::OffsetRooCmdArg Offset(std::string const &mode)Definition RooGlobalFunc.cxx:756; RooFit::SaveRooCmdArg Save(bool flag=true)Definition RooGlobalFunc.cxx:649; RooFit::SumW2ErrorRooCmdArg SumW2Error(bool flag)Definition RooGlobalFunc.cxx:733; RooFit::PrintLevelRooCmd",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf614__binned__fit__problems_8C.html:11208,config,configuration,11208,doc/master/rf614__binned__fit__problems_8C.html,https://root.cern,https://root.cern/doc/master/rf614__binned__fit__problems_8C.html,1,['config'],['configuration']
Modifiability,"tLeafCount() const; virtual TLeaf*GetLeafCounter(Int_t& countval) const; virtual Int_tGetLen() const; virtual Int_tGetLenStatic() const; virtual Int_tGetLenType() const; virtual Int_tGetMaximum() const; virtual Int_tGetMinimum() const; virtual const char*TNamed::GetName() const; virtual Int_tGetNdata() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tGetOffset() const; virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetValue(Int_t i = 0) const; virtual void*GetValuePointer() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidImport(TClonesArray*, Int_t); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsOnTerminalBranch() const; virtual Bool_tIsRange() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsUnsigned() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLeaf.html:3046,Inherit,InheritsFrom,3046,root/html532/TLeaf.html,https://root.cern,https://root.cern/root/html532/TLeaf.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tLenStatic() const; virtual Int_tTLeaf::GetLenType() const; virtual Int_tGetMaximum() const; TMethodCall*GetMethodCall(const char* name); virtual Int_tTLeaf::GetMinimum() const; virtual const char*TNamed::GetName() const; virtual Int_tGetNdata() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tTLeaf::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetValue(Int_t i = 0) const; virtual Long64_tGetValueLong64(Int_t i = 0) const; virtual LongDouble_tGetValueLongDouble(Int_t i = 0) const; virtual void*GetValuePointer() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTLeaf::Import(TClonesArray*, Int_t); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsOnTerminalBranch() const; virtual Bool_tTLeaf::IsRange() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTLeaf::IsUnsigned() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::oper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TLeafElement.html:3319,Inherit,InheritsFrom,3319,root/html534/TLeafElement.html,https://root.cern,https://root.cern/root/html534/TLeafElement.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tLenStatic() const; virtual Int_tTLeaf::GetLenType() const; virtual Int_tGetMaximum() const; TMethodCall*GetMethodCall(const char* name); virtual Int_tTLeaf::GetMinimum() const; virtual const char*TNamed::GetName() const; virtual Int_tGetNdata() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tTLeaf::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetValue(Int_t i = 0) const; virtual Long64_tGetValueLong64(Int_t i = 0) const; virtual LongDouble_tGetValueLongDouble(Int_t i = 0) const; virtual void*GetValuePointer() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTLeaf::Import(TClonesArray*, Int_t); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsOnTerminalBranch() const; virtual Bool_tTLeaf::IsRange() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTLeaf::IsUnsigned() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLeafElement.html:3197,Inherit,InheritsFrom,3197,root/html602/TLeafElement.html,https://root.cern,https://root.cern/root/html602/TLeafElement.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tLine& attline) const; Int_tDistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Color_tGetLineColor() const; virtual Style_tGetLineStyle() const; virtual Width_tGetLineWidth() const; virtual TClass*IsA() const; virtual voidModify(); TAttLine&operator=(const TAttLine&); virtual voidResetAttLine(Option_t* option = """"); virtual voidSaveLineAttributes(ostream& out, const char* name, Int_t coldef = 1, Int_t stydef = 1, Int_t widdef = 1); virtual voidSetLineAttributes()MENU ; virtual voidSetLineColor(Color_t lcolor); virtual voidSetLineColorAlpha(Color_t lcolor, Float_t lalpha); virtual voidSetLineStyle(Style_t lstyle); virtual voidSetLineWidth(Width_t lwidth); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. Color_tfLineColorline color; Style_tfLineStyleline style; Width_tfLineWidthline width. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TAttLine(); AttLine default constructor. TAttLine(Color_t lcolor, Style_t lstyle, Width_t lwidth); AttLine normal constructor.; Line attributes are taking from the argument list; color : must be one of the valid color index; style : 1=solid, 2=dash, 3=dash-dot, 4=dot-dot. New styles can be; defined using TStyle::SetLineStyleString.; width : expressed in pixel units. ~TAttLine(); AttLine destructor. void Copy(TAttLine& attline) const; Copy this line attributes to a new TAttLine. Int_t DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); Compute distance from point px,py to a line.; Compute the closest distance of approach from point px,py to this line.; The distance is computed in pixels units. Algorithm:. A(x1,y1) P B(x2,y2); -----------------+------------------------------; |; |; |; |; M(x,y). Let us call a = distance AM A=a**2; b = distance BM B=b**2; c = distance AB C=c**2; d = distance PM D=d*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TAttLine.html:4000,Inherit,Inheritance,4000,root/html534/TAttLine.html,https://root.cern,https://root.cern/root/html534/TAttLine.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTVirtualPS::fNByteNumber of bytes written in the file (PDF); TStringTNamed::fNameobject identifier; Bool_tTVirtualPS::fPrintedTrue when a page must be printed; Bool_tfRangeTrue when a range has been defined; Int_tTVirtualPS::fSizBufferBuffer size; ofstream*TVirtualPS::fStreamFile stream identifier; Short_tTAttText::fTextAlignText alignment; Float_tTAttText::fTextAngleText angle; Color_tTAttText::fTextColorText color index; Font_tTAttText::fTextFontText font number; Float_tTAttText::fTextSizeText size; TStringTNamed::fTitleobject title; Int_tfTypeWorkstation type used to know if the SVG is open; Float_tfXsizePage size along X; Float_tfYsizePage size along Y; Double_tfYsizeSVGPage's Y size in SVG units. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSVG(); Default SVG constructor. TSVG(const char* filename, Int_t type = -113); Initialize the SVG interface. fname : SVG file name; wtype : SVG workstation type. Not used in the SVG driver. But as TSVG; inherits from TVirtualPS it should be kept. Anyway it is not; necessary to specify this parameter at creation time because it; has a default value (which is ignore in the SVG case). void Open(const char* filename, Int_t type = -111); Open a SVG file. ~TSVG(); Default SVG destructor. void Close(Option_t* opt = """"); Close a SVG file. void On(); Activate an already open SVG file. void Off(); Deactivate an already open SVG file. void DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); Draw a Box. void DrawFrame(Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t mode, Int_t border, Int_t dark, Int_t light); Draw a Frame around a box. mode = -1 the box looks as it is behind the screen; mode = 1 the box looks as it is in front",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSVG.html:12494,Inherit,Inheritance,12494,root/html534/TSVG.html,https://root.cern,https://root.cern/root/html534/TSVG.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions;  TView3D (const TView3D &);  Set to TRUE after ExecuteRotateView. ;  ; TView3D & operator= (const TView3D &);  Assignment operator. ;  ; void ResetView (Double_t longitude, Double_t latitude, Double_t psi, Int_t &irep);  Set view direction (in spherical coordinates). ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Bool_t fAutoRange;  ; Bool_t fChanged;  ; Bool_t fDefaultOutline;  ; Double_t fDproj;  ; Double_t fDview;  ; Double_t fLatitude;  ; Double_t fLongitude;  ; TSeqCollection * fOutline;  ; Double_t fPsi;  ; Double_t fRmax [3];  ; Double_t fRmin [3];  ; Int_t fSystem;  ; Double_t fTB [16];  ; Double_t fTback [16];  ; Double_t fTN [16];  ; Double_t fTnorm [16];  ; Double_t fUpix;  ; Double_t fUVcoord [4];  ; Double_t fVpix;  ; Double_t fX1 [3];  ; Double_t fX2 [3];  ; Double_t fY1 [3];  ; Double_t fY2 [3];  ; Double_t fZ1 [3];  ; Double_t fZ2 [3];  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TView3D.h>. Inheritance diagram for TView3D:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkPerspective . Definition at line 66 of file TView3D.h. Constructor & Destructor Documentation. ◆ TView3D() [1/3]. TView3D::TView3D ; (; const TView3D & ; tv). protected . Set to TRUE after ExecuteRotateView. ; Copy constructor. ; Definition a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTView3D.html:22823,inherit,inherited,22823,doc/master/classTView3D.html,https://root.cern,https://root.cern/doc/master/classTView3D.html,1,['inherit'],['inherited']
Modifiability,"tLineWidth() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const TAttParticle*GetParticle() const; virtual Int_tGetSecondMother() const; virtual Double_tGetTime() const; virtual Double_tGetTimeEnd() const; virtual const char*GetTitle() const; virtual Double_tGetTotalEnergy() const; virtual const char*GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetXMomentum() const; virtual Double_tGetXPosition() const; virtual Double_tGetYMomentum() const; virtual Double_tGetYPosition() const; virtual Double_tGetZMomentum() const; virtual Double_tGetZPosition() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPrimary.html:3434,Inherit,InheritsFrom,3434,root/html532/TPrimary.html,https://root.cern,https://root.cern/root/html532/TPrimary.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tLineWidth() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const TAttParticle*GetParticle() const; virtual Int_tGetSecondMother() const; virtual Double_tGetTime() const; virtual Double_tGetTimeEnd() const; virtual const char*GetTitle() const; virtual Double_tGetTotalEnergy() const; virtual const char*GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetXMomentum() const; virtual Double_tGetXPosition() const; virtual Double_tGetYMomentum() const; virtual Double_tGetYPosition() const; virtual Double_tGetZMomentum() const; virtual Double_tGetZPosition() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TPrimary&operator=(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPrimary.html:3185,Inherit,InheritsFrom,3185,root/html602/TPrimary.html,https://root.cern,https://root.cern/root/html602/TPrimary.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; G__p2memfuncfDecImpSelElement; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Bool_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; map<TEveElement*,set<TEveElement*>,less<TEveElement*>,allocator<pair<TEveElement*const,set<TEveElement*> > > >fImpliedSelected; Short_tTEveElement::fImpliedSelected!; G__p2memfuncfIncImpSelElement; Bool_tfIsMaster; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Int_tfPickToSelect; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; G__p2memfuncfSelElement; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveSelection.html:22597,variab,variable,22597,root/html528/TEveSelection.html,https://root.cern,https://root.cern/root/html528/TEveSelection.html,1,['variab'],['variable']
Modifiability,"tList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; G__p2memfuncfDecImpSelElement; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; map<TEveElement*,set<TEveElement*>,less<TEveElement*>,allocator<pair<TEveElement*const,set<TEveElement*> > > >fImpliedSelected; Short_tTEveElement::fImpliedSelected!; G__p2memfuncfIncImpSelElement; Bool_tfIsMaster; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Int_tfPickToSelect; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; G__p2memfuncfSelElement; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveSelection.html:22963,variab,variable,22963,root/html530/TEveSelection.html,https://root.cern,https://root.cern/root/html530/TEveSelection.html,5,['variab'],['variable']
Modifiability,"tListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TXMLParser; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDOMParser.html:11754,inherit,inherited,11754,doc/master/classTDOMParser.html,https://root.cern,https://root.cern/doc/master/classTDOMParser.html,4,['inherit'],['inherited']
Modifiability,"tListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyRooNumRunningInt::funcProxy to functions whose running integral is calculated; RooRealProxyRooNumRunningInt::xIntergrated observable. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNumCdf(const char* name, const char* title, RooAbsPdf& _pdf, RooRealVar& _x, const char* binningName = ""cache""); Construct a cumulative distribution function from given input p.d.f over observable x.; using a numeric sampling algorithm. Use binning named 'bname' to control sampling; granularity. RooNumCdf(const RooNumCdf& other, const char* name = 0); Copy constructor. ~RooNumCdf(); Destructor. void fillCacheObject(RooAbsCachedReal::FuncCacheElem& cacheFunc) const; Fill cache using running integral cache elements calculate(); method with specification of cdf-specific boundary conditions. TObject* clone(const char* newname) const; { return new RooNumCdf(*this,newname); }. » Last changed: Thu Nov 3 20:08:49 2011 » Last generated: 2011-11-03 20:08; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooNumCdf.html:35143,Inherit,Inheritance,35143,root/html532/RooNumCdf.html,https://root.cern,https://root.cern/root/html532/RooNumCdf.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooFormulaVar(const char* name, const char* title, const char* formula, const RooArgList& dependents); Constructor with formula expression and list of input variables. RooFormulaVar(const char* name, const char* title, const RooArgList& dependents); Constructor with formula expression, title and list of input variables. RooFormulaVar(const RooFormulaVar& other, const char* name = 0); Copy constructor. ~RooFormulaVar(); Destructor. RooFormula& formula() const; Return reference to internal RooFormula object. Double_t evaluate() const; Calculate current value of object from internal formula. Bool_t isValidReal(Double_t value, Bool_t printError) const; Check if given value is valid. Bool_t redirectServersHook(const RooAbsCollection& newServerList, Bool_t mustReplaceAll, Bool_t nameChange, Bool_t isRecursive); Propagate server change information to embedded RooFormula object. void printMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print info about this object to the specified stream. void printMetaArgs(ostream& os)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooFormulaVar.html:38421,variab,variables,38421,root/html602/RooFormulaVar.html,https://root.cern,https://root.cern/root/html602/RooFormulaVar.html,4,['variab'],['variables']
Modifiability,tLo;  ; std::vector< double > _xDatLo3s;  ; std::vector< double > _xVarHi;  ; std::vector< double > _xVarHiM3s;  ; std::vector< double > _xVarHiP3s;  ; std::vector< double > _xVarLo;  ; std::vector< double > _xVarLoM3s;  ; std::vector< double > _xVarLoP3s;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNDKeysPdf.html:75730,inherit,inherited,75730,doc/master/classRooNDKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRooNDKeysPdf.html,1,['inherit'],['inherited']
Modifiability,"tLogVal ; (; const RooArgSet * ; set = nullptr); const. virtual . Return the log of the current value with given normalization An error message is printed if the argument of the log is negative. ; Reimplemented in RooLegacyExpPoly, and RooHistConstraint.; Definition at line 620 of file RooAbsPdf.cxx. ◆ getNorm() [1/2]. double RooAbsPdf::getNorm ; (; const RooArgSet & ; nset); const. inline . Get normalisation term needed to normalise the raw values returned by getVal(). ; Note that getVal(normalisationVariables) will automatically apply the normalisation term returned here. Parameters. nsetSet of variables to normalise over. . Definition at line 195 of file RooAbsPdf.h. ◆ getNorm() [2/2]. double RooAbsPdf::getNorm ; (; const RooArgSet * ; nset = nullptr); const. virtual . Get normalisation term needed to normalise the raw values returned by getVal(). ; Note that getVal(normalisationVariables) will automatically apply the normalisation term returned here. Parameters. nsetSet of variables to normalise over. . Reimplemented in RooResolutionModel.; Definition at line 419 of file RooAbsPdf.cxx. ◆ getNormIntegral(). const RooAbsReal * RooAbsPdf::getNormIntegral ; (; const RooArgSet & ; nset); const. inline . Definition at line 255 of file RooAbsPdf.h. ◆ getNormObj(). const RooAbsReal * RooAbsPdf::getNormObj ; (; const RooArgSet * ; set, . const RooArgSet * ; iset, . const TNamed * ; rangeName = nullptr . ); const. virtual . Return pointer to RooAbsReal object that implements calculation of integral over observables iset in range rangeName, optionally taking the integrand normalized over observables nset. ; Definition at line 443 of file RooAbsPdf.cxx. ◆ getValV(). double RooAbsPdf::getValV ; (; const RooArgSet * ; nset = nullptr); const. overridevirtual . Return current value, normalized by integrating over the observables in nset. ; If nset is 0, the unnormalized value is returned. All elements of nset must be lvalues.; Unnormalized values are not cached. Doing so would ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:129063,variab,variables,129063,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,1,['variab'],['variables']
Modifiability,"tMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidRooAbsReal::enableOffsetting(Bool_t); virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Bool_tRooAbsPdf::evalError(); static RooAbsReal::EvalErrorIterRooAbsReal::evalErrorIter(); static RooAbsReal::ErrorLoggingModeRooAbsReal::evalErrorLoggingMode(); virtual Double_tevaluate() const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual Double_texpectedEvents(const RooArgSet* nset) const; virtual Double_texpectedEvents(const RooArgSet& nset) const; RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual Double_tRooAbsPdf::extendedTerm(Double_t observedEvents, const RooArgSet* nset = 0) const; virtual RooAbsPdf::ExtendModeextendMode() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAddModel.html:11743,Extend,ExtendModeextendMode,11743,root/html534/RooAddModel.html,https://root.cern,https://root.cern/root/html534/RooAddModel.html,15,['Extend'],['ExtendModeextendMode']
Modifiability,"tMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidRooAbsReal::enableOffsetting(Bool_t); virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Bool_tRooAbsPdf::evalError(); static RooAbsReal::EvalErrorIterRooAbsReal::evalErrorIter(); static RooAbsReal::ErrorLoggingModeRooAbsReal::evalErrorLoggingMode(); virtual Double_tevaluate() const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual Double_texpectedEvents(const RooArgSet* nset) const; virtual Double_texpectedEvents(const RooArgSet& nset) const; RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual Double_tRooAbsPdf::extendedTerm(Double_t observedEvents, const RooArgSet* nset = 0) const; virtual RooAbsPdf::ExtendModeextendMode() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; RooArgSet*findPdfNSet(RooAbsPdf& pdf) const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooProdPdf.html:12208,Extend,ExtendModeextendMode,12208,root/html534/RooProdPdf.html,https://root.cern,https://root.cern/root/html534/RooProdPdf.html,3,['Extend'],['ExtendModeextendMode']
Modifiability,"tMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidRooAbsReal::enableOffsetting(Bool_t); virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Bool_tRooAbsPdf::evalError(); static RooAbsReal::EvalErrorIterRooAbsReal::evalErrorIter(); static RooAbsReal::ErrorLoggingModeRooAbsReal::evalErrorLoggingMode(); virtual Double_tevaluate() const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual Double_texpectedEvents(const RooArgSet* nset) const; virtual Double_texpectedEvents(const RooArgSet& nset) const; RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual Double_tRooAbsPdf::extendedTerm(Double_t observedEvents, const RooArgSet* nset = 0) const; virtual RooAbsPdf::ExtendModeextendMode() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual RooDataHist*fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooSimultaneous.html:11357,Extend,ExtendModeextendMode,11357,root/html534/RooSimultaneous.html,https://root.cern,https://root.cern/root/html534/RooSimultaneous.html,3,['Extend'],['ExtendModeextendMode']
Modifiability,"tMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidsetEps(Double_t e); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector& insp); RooMoment*RooAbsReal::sigma(RooRealVar& obs); RooMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooDerivative.html:23263,config,config,23263,root/html532/RooDerivative.html,https://root.cern,https://root.cern/root/html532/RooDerivative.html,2,['config'],['config']
Modifiability,"tMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Bool_tTEveElement::fDestructing!; TEveCompositeFrame*fEveFrame; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tfShowTitleBar; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fViz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveWindow.html:19463,variab,variable,19463,root/html528/TEveWindow.html,https://root.cern,https://root.cern/root/html528/TEveWindow.html,1,['variab'],['variable']
Modifiability,"tMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; TEveCompositeFrame*fEveFrame; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tfShowTitleBar; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fViz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveWindow.html:19829,variab,variable,19829,root/html530/TEveWindow.html,https://root.cern,https://root.cern/root/html530/TEveWindow.html,5,['variab'],['variable']
Modifiability,"tManip(TGLPhysicalShape::EManip manip); voidSetMode(TGLClip::EMode mode); voidTGLPhysicalShape::SetTransform(const TGLMatrix& transform); voidTGLPhysicalShape::SetTransform(const Double_t* vals); voidTGLPhysicalShape::SetTranslation(const TGLVertex3& translation); virtual voidSetup(const TGLBoundingBox& bbox); virtual voidSetup(const TGLVector3&, const TGLVector3&); voidTGLPhysicalShape::SetupGLColors(TGLRnrCtx& rnrCtx, const Float_t* color = 0) const; virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); UInt_tTimeStamp() const; voidTGLPhysicalShape::Translate(const TGLVector3& vect). Data Members; public:. enum EMode { kOutside; kInside; };; enum TGLPhysicalShape::EManip { kTranslateX; kTranslateY; kTranslateZ; kTranslateAll; kScaleX; kScaleY; kScaleZ; kScaleAll; kRotateX; kRotateY; kRotateZ; kRotateAll; kManipAll; };. protected:. TGLClip::EModefMode; UInt_tfTimeStamp; Bool_tfValid. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TGLClip(); Destroy clip object. void Setup(const TGLVector3& , const TGLVector3& ); Setup the clipping object with two vectors.; The interpretation of the two is different for plane and box; clipping objects. void Draw(TGLRnrCtx& rnrCtx) const; Draw out clipping object with blending and back + front filling.; Some clip objects are single face which we want to see both sides of. void Modified(); { TGLPhysicalShape::Modified(); IncTimeStamp(); }. void Setup(const TGLBoundingBox& bbox). EMode GetMode() const; { return fMode; }. void SetMode(TGLClip::EMode mode). UInt_t TimeStamp() const; { return fTimeStamp; }. void IncTimeStamp(); { ++fTimeStamp; }. Bool_t IsValid() const; { return fValid; }. void Invalidate(); { fValid = kFALSE; }. void PlaneSet(TGLPlaneSet_t& set) const. » Author: Richard Maunder 16/09/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id: TGLClip.h 32465 2010-03-04 20:29:52Z ma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLClip.html:3554,Inherit,Inheritance,3554,root/html532/TGLClip.html,https://root.cern,https://root.cern/root/html532/TGLClip.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tMarker(); static TClass*Class(); voidCopy(TAttMarker& attmarker) const; virtual Color_tGetMarkerColor() const; virtual Size_tGetMarkerSize() const; virtual Style_tGetMarkerStyle() const; virtual TClass*IsA() const; virtual voidModify(); TAttMarker&operator=(const TAttMarker&); virtual voidResetAttMarker(Option_t* toption = """"); virtual voidSaveMarkerAttributes(ostream& out, const char* name, Int_t coldef = 1, Int_t stydef = 1, Int_t sizdef = 1); virtual voidSetMarkerAttributes()MENU ; virtual voidSetMarkerColor(Color_t mcolor = 1); virtual voidSetMarkerColorAlpha(Color_t mcolor, Float_t malpha); virtual voidSetMarkerSize(Size_t msize = 1); virtual voidSetMarkerStyle(Style_t mstyle = 1); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. Color_tfMarkerColorMarker color index; Size_tfMarkerSizeMarker size; Style_tfMarkerStyleMarker style. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TAttMarker(); TAttMarker default constructor. Default text attributes are taking from the current style. TAttMarker(Color_t color, Style_t style, Size_t msize); TAttMarker normal constructor. Text attributes are taking from the argument list; color : Marker Color Index; style : Marker style (from 1 to 30); size : marker size (float). ~TAttMarker(); TAttMarker destructor. void Copy(TAttMarker& attmarker) const; Copy this marker attributes to a new TAttMarker. void Modify(); Change current marker attributes if necessary. void ResetAttMarker(Option_t* toption = """"); Reset this marker attributes to the default values. void SaveMarkerAttributes(ostream& out, const char* name, Int_t coldef = 1, Int_t stydef = 1, Int_t sizdef = 1); Save line attributes as C++ statement(s) on output stream out. void SetMarkerAttributes(); Invoke the DialogCanvas Marker attributes. void SetMarkerColorAlpha(Color_t mcolor, Float_t malpha); Set a transparent mark",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TAttMarker.html:5293,Inherit,Inheritance,5293,root/html534/TAttMarker.html,https://root.cern,https://root.cern/root/html534/TAttMarker.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; TMaterial*TShape::GetMaterial() const; virtual const char*GetName() const; virtual Int_tTShape::GetNumber() const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TPoints3DABC*GetPoints() const; virtual TShape*GetShape() const; virtual Size_tGetSizeAttribute() const; virtual Bool_tGetSmooth() const; virtual Style_tGetStyleAttribute() const; virtual const char*GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Float_tGetWidthFactor() const; static Double_t*Gyrot(Double_t* dirc, Double_t cosang, Double_t sinang, Double_t** trans); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPolyLineShape.html:4073,Inherit,InheritsFrom,4073,root/html532/TPolyLineShape.html,https://root.cern,https://root.cern/root/html532/TPolyLineShape.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TGLScene; typedef std::vector< DrawElement_t * >::iterator DrawElementPtrVec_i;  ; typedef std::vector< DrawElement_t * > DrawElementPtrVec_t;  ; typedef std::vector< DrawElement_t >::iterator DrawElementVec_i;  ; typedef std::vector< DrawElement_t > DrawElementVec_t;  ; typedef std::map< TObject *, TGLLogicalShape * > LogicalShapeMap_t;  ; typedef LogicalShapeMap_t::const_iterator LogicalShapeMapCIt_t;  ; typedef LogicalShapeMap_t::iterator LogicalShapeMapIt_t;  ; typedef LogicalShapeMap_t::value_type LogicalShapeMapValueType_t;  ; typedef std::map< UInt_t, TGLPhysicalShape * > PhysicalShapeMap_t;  ; typedef PhysicalShapeMap_t::const_iterator PhysicalShapeMapCIt_t;  ; typedef PhysicalShapeMap_t::iterator PhysicalShapeMapIt_t;  ; typedef PhysicalShapeMap_t::value_type PhysicalShapeMapValueType_t;  ; typedef ShapeVec_t::iterator ShapeVec_i;  ; typedef std::vector< const TGLPhysicalShape * > ShapeVec_t;  ;  Public Types inherited from TGLLockable; enum  ELock { kUnlocked; , kDrawLock; , kSelectLock; , kModifyLock; };  . #include <TGLScenePad.h>. Inheritance diagram for TGLScenePad:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ CSPart_t. typedef std::pair<UInt_t, RootCsg::TBaseMesh*> TGLScenePad::CSPart_t. protected . Definition at line 48 of file TGLScenePad.h. Constructor & Destructor Documentation. ◆ TGLScenePad() [1/2]. TGLScenePad::TGLScenePad ; (; const TGLScenePad & ; ). privatedelete . ◆ ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLScenePad.html:23639,inherit,inherited,23639,doc/master/classTGLScenePad.html,https://root.cern,https://root.cern/doc/master/classTGLScenePad.html,2,['inherit'],['inherited']
Modifiability,"tMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_t*fAllocSize![fNumPIDs] allocated size of array fParentIDs for each ProcessID; Int_tfDefaultSize!default size for a new PID array; vector<Int_t>fMapPIDtoInternal! cache of pid to index in fProcessGUIDs; Int_t*fN![fNumPIDs] current maximum number of IDs in array fParentIDs for each ProcessID; Int_tfNumPIDs!number of known ProcessIDs; TObject*fOwnerObject owning this TRefTable; Int_tfParentID!current parent ID in fParents (latest call to SetParent); Int_t**fParentIDs![fNumPIDs][fAllocSize] array of Parent IDs; TObjArray*fParentsarray of Parent objects (eg TTree branch) holding the referenced objects; vector<std::string>fProcessGUIDsUUIDs of TProcessIDs used in fParentIDs; Int_tfSizedummy for backward compatibility; UInt_tfUID!Current uid (set by TRef::GetObject); TProcessID*fUIDContext!TProcessID the current uid is referring to; static TRefTable*fgRefTablePointer to current TRefTable. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TRefTable(); Default constructor for I/O. TRefTable(TObject* owner, Int_t size); Create a TRefTable with initial size. ~TRefTable(); Destructor. Int_t Add(Int_t uid, TProcessID* context = 0); Add a new uid to the table.; we add a new pair (uid,fparent) to the map; This function is called by TObject::Streamer or TStreamerInfo::WriteBuffer. Int_t AddInternalIdxForPID(TProcessID* procid); Add the internal index for fProcessIDs, fAllocSize, etc given a PID. void Clear(Option_t* = """"); Clear all entries in the table. Int_t Expand(Int_t pid, Int_t newsize); Expand fParentIDs to newsize for ProcessID pid. Int_t ExpandForIID(Int_t iid, Int_t newsize); Expand fParentIDs to newsize for internel ProcessID index iid. void ExpandPIDs(Int_t numpids); Expand the arrays of managed PIDs. void FillBuffer(TBuffer& b); Fill buffer b with the fN elements in fParentdIDs.; This function is called by TBranchRef::FillLeaves. Int_t FindPIDGUID(const char* guid)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRefTable.html:8219,Inherit,Inheritance,8219,root/html532/TRefTable.html,https://root.cern,https://root.cern/root/html532/TRefTable.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMonitor*TProof::fAllMonitormonitor activity on all valid slave sockets; TList*TProof::fAvailablePackageslist of available packages; TList*TProof::fBadSlavesdead slaves (subset of all slaves); Long64_tTProof::fBytesReadynumber of bytes staged; Int_tTProof::fCollectTimeoutTimeout for (some) collect actions; TStringTProof::fConfDirdirectory containing cluster config information; TStringTProof::fConfFilefile containing config information; TStringTProof::fDataPoolUrldefault data pool entry point URL; Bool_tTProof::fDataReadytrue if data is ready to be analyzed; Bool_tTProof::fDynamicStartupare the workers started dynamically?; TList*TProof::fEnabledPackageslist of enabled packages; TStringTProof::fImagemaster's image name; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; TProofMgr*TProof::fManagermanager to which this session belongs (if any); Bool_tTProof::fMasterServtrue if we are a master server; TStringTNamed::fNameobject identifier; Int_tTProof::fProtocolremote PROOF server protocol version number; TProof::EQueryModeTProof::fQueryModedefault query mode; TList*TProof::fRunningDSetsTemporary datasets used for async running; TSelector*TProof::fSelectorSelector to be processed, if any; TProofMgr::EServTypeTProof::fServTypetype of server: proofd, XrdProofd; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TList*TProof::fSlaveslist of all slave servers as in config file; TList*TProof::fTerminatedSlaveInfoslist of unique infos of terminated slaves; TStringTNamed::fTitleobject title; Long64_tTProof::fTotalBytesnumber of bytes to be analyzed; TUrlTProof::fUrlUrl of the master; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TSemaphore*TProof::fgSemaphoresemaphore to control no of parallel startup threads. Class Charts. Inheritance; Inherited Members; Includes; Lib",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofSuperMaster.html:24777,config,config,24777,root/html534/TProofSuperMaster.html,https://root.cern,https://root.cern/root/html534/TProofSuperMaster.html,6,['config'],['config']
Modifiability,"tMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMonitor*TProof::fAllMonitormonitor activity on all valid slave sockets; TList*TProof::fAvailablePackageslist of available packages; TList*TProof::fBadSlavesdead slaves (subset of all slaves); Long64_tTProof::fBytesReadynumber of bytes staged; Int_tTProof::fCollectTimeoutTimeout for (some) collect actions; TStringTProof::fConfDirdirectory containing cluster config information; TStringTProof::fConfFilefile containing config information; TStringTProof::fDataPoolUrldefault data pool entry point URL; Bool_tTProof::fDataReadytrue if data is ready to be analyzed; Bool_tTProof::fDynamicStartupare the workers started dynamically?; TList*TProof::fEnabledPackageslist of enabled packages; TStringTProof::fImagemaster's image name; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; TProofMgr*TProof::fManagermanager to which this session belongs (if any); Bool_tTProof::fMasterServtrue if we are a master server; TStringTNamed::fNameobject identifier; Int_tTProof::fProtocolremote PROOF server protocol version number; TProof::EQueryModeTProof::fQueryModedefault query mode; TList*TProof::fRunningDSetsTemporary datasets used for async running; TSelector*TProof::fSelectorSelector to be processed, if any; TProofMgr::EServTypeTProof::fServTypetype of server: proofd, XrdProofd; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TList*TProof::fSlaveslist of all slave servers as in config file; TList*TProof::fTerminatedSlaveInfoslist of unique infos of terminated slaves; TStringTNamed::fTitleobject title; Long64_tTProof::fTotalBytesnumber of bytes to be analyzed; TUrlTProof::fUrlUrl of the master; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TSemaphore*TProof::fgSemaphoresemaphore to control no of parallel startup threads. private:. TCondor*fCondorproxy for our Condor pool; TTimer*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofCondor.html:24982,config,config,24982,root/html534/TProofCondor.html,https://root.cern,https://root.cern/root/html534/TProofCondor.html,6,['config'],['config']
Modifiability,"tMatrixT< Element >; Definition at line 141 of file TMatrixTLazy.h. Public Member Functions;  THilbertMatrixT ();  ;  THilbertMatrixT (Int_t no_rows, Int_t no_cols);  ;  THilbertMatrixT (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb);  ; virtual ~THilbertMatrixT ();  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMatrixTLazy< Element >;  TMatrixTLazy ();  ;  TMatrixTLazy (Int_t nrows, Int_t ncols);  ;  TMatrixTLazy (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb);  ;  ~TMatrixTLazy () override;  ; Int_t GetColLwb () const;  ; Int_t GetColUpb () const;  ; Int_t GetRowLwb () const;  ; Int_t GetRowUpb () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHilbertMatrixT.html:1388,inherit,inherited,1388,doc/master/classTHilbertMatrixT.html,https://root.cern,https://root.cern/doc/master/classTHilbertMatrixT.html,1,['inherit'],['inherited']
Modifiability,"tMaxTerms).; However, since there's an infinite number of \( F_l\) to choose from, the user is asked to give the maximum power. \( P_{max,i}\), of each variable \( x_i\) to be considered in the minimization of \( S\) (TMultiDimFit::SetMaxPowers).; One way of obtaining values for the maximum power in variable \( i\), is to perform a regular fit to the dependent quantity \( D\), using a polynomial only in \( x_i\). The maximum power is \( P_{max,i}\) is then the power that does not significantly improve the one-dimensional least-square fit over \( x_i\) to \( D\) 5.; There are still a huge amount of possible choices for \( F_l\); in fact there are \(\prod_{i=1}^{N} (P_{max,i} + 1)\) possible choices. Obviously we need to limit this. To this end, the user is asked to set a power control limit, \( Q\) (TMultiDimFit::SetPowerLimit), and a function \( F_l\) is only accepted if ; \[; Q_l = \sum_{i=1}^{N} \frac{P_{li}}{P_{max,i}} < Q; \]. where \( P_{li}\) is the leading power of variable \( x_i\) in function \( F_l\) (TMultiDimFit::MakeCandidates). So the number of functions increase with \( Q\) (1, 2 is fine, 5 is way out). Gram-Schmidt Orthogonalisation; To further reduce the number of functions in the final expression, only those functions that significantly reduce \( S\) is chosen. What ‘significant’ means, is chosen by the user, and will be discussed below (see 2.3).; The functions \( F_l\) are generally not orthogonal, which means one will have to evaluate all possible \( F_l\)'s over all data-points before finding the most significant 1. We can, however, do better then that. By applying the modified Gram-Schmidt orthogonalisation algorithm [5] [3] to the functions \( F_l\), we can evaluate the contribution to the reduction of \( S\) from each function in turn, and we may delay the actual inversion of the curvature-matrix (TMultiDimFit::MakeGramSchmidt).; So we are let to consider an \( M\times L\) matrix \(\mathsf{F}\), an element of which is given by ; \[; f_{jl} = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiDimFit.html:5375,variab,variable,5375,doc/master/classTMultiDimFit.html,https://root.cern,https://root.cern/doc/master/classTMultiDimFit.html,1,['variab'],['variable']
Modifiability,"tMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TMVA::MethodBase::EWeightFileTypeTMVA::MethodBase::kROOT; static TObject::(anonymous)TObject::kSingleKey; static TMVA::MethodBase::EWeightFileTypeTMVA::MethodBase::kTEXT; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TMVA::Types::EAnalysisTypeTMVA::MethodBase::fAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; TMVA::MethodBase*TMVA::MethodCompositeBase::fCurrentMethod; UInt_tTMVA::MethodCompositeBase::fCurrentMethodIdx; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Double_t>TMVA::MethodCompositeBase::fMethodWeight; vector<TMVA::IMethod*>TMVA::MethodCompositeBase::fMethodsvector of all classifiers; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in input variable histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. Double_tfAdaBoostBetaADA boost parameter, default is 1; vector<TH1*>fBTrainBgdMVAHist; vector<TH1*>fBTrainSigMVAHist; Double_tfBaggedSampleFractionrel.Size of bagged sample; UInt_tfBoostNumNumber of times the classifier is boosted; TStringfBoostTypestring specifying the boost type; Double_tfBoostWeightthe weight used to boost the next classifier; TStringfBoostedMethodNamedetails of the boosted classifier; TStringfBoostedMet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodBoost.html:18693,variab,variables,18693,root/html602/TMVA__MethodBoost.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodBoost.html,8,['variab'],"['variable', 'variables']"
Modifiability,"tMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TStringfAnchoranchor in object (after #); TStringfFileremote object; TStringfFileOA!file with option and anchor; TStringfHostremote host; TStringfHostFQ!fully qualified host name; TStringfOptionsoptions/search (after ?); TMap*fOptionsMap!map containing options key/value pairs; TStringfPasswdpassword; Int_tfPortport through which to contact remote server; TStringfProtocolprotocol: http, ftp, news, root, proof, ...; TStringfUrlfull URL; TStringfUseruser name; static THashList*fgHostFQDNslist of resolved host FQDNs; static TObjArray*fgSpecialProtocolslist of special protocols; static TUrl::EStatusBitskUrlHasDefaultPort; static TUrl::EStatusBitskUrlWithDefaultPort. Class Charts. Inheritance Chart:. TObject. ←; TUrl. Function documentation; TUrl(const char* url, Bool_t defaultIsFile = kFALSE); Parse url character string and split in its different subcomponents.; Use IsValid() to check if URL is legal. url: [proto://][user[:passwd]@]host[:port]/file.ext[?options][#anchor]. Known protocols: http, root, proof, ftp, news and any special protocols; defined in the rootrc Url.Special key.; The default protocol is ""http"", unless defaultIsFile is true in which; case the url is assumed to be of type ""file"".; If a passwd contains a @ it must be escaped by a \\, e.g.; ""pip@"" becomes ""pip\\@"". Default ports: http=80, root=1094, proof=1093, ftp=20, news=119.; Port #1093 has been assigned by IANA (www.iana.org) to proofd.; Port #1094 has been assigned by IANA (www.iana.org) to rootd. ~TUrl(); Cleanup. void SetUrl(const char* url, Bool_t defaultIsFile = kFALSE); Parse url character string and split in its different subcomponents.; Use IsValid() to check if URL is legal. url: [proto://]",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TUrl.html:7474,Inherit,Inheritance,7474,root/html602/TUrl.html,https://root.cern,https://root.cern/root/html602/TUrl.html,2,['Inherit'],['Inheritance']
Modifiability,"tMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TMatrixDfCovarianceMatrixCovariance matrix; TVectorDfEigenValuesEigenvalue vector of trans; TMatrixDfEigenVectorsEigenvector matrix of trans; TList*fHistogramsList of histograms; Bool_tfIsNormalisedNormalize matrix?; TVectorDfMeanValuesMean value over all data points; TStringTNamed::fNameobject identifier; Int_tfNumberOfDataPointsNumber of data points; Int_tfNumberOfVariablesNumber of variables; TVectorDfOffDiagonalelements of the tridiagonal; TVectorDfSigmasvector of sigmas; Bool_tfStoreDataShould we store input data?; TStringTNamed::fTitleobject title; Double_tfTraceTrace of covarience matrix; TVectorDfUserDataVector of original data points. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPrincipal(); Empty CTOR, Do not use. TPrincipal(Int_t nVariables, Option_t* opt = ""ND""); Ctor. Argument is number of variables in the sample of data; Options are:; N Normalize the covariance matrix (default); D Store input data (default). The created object is named ""principal"" by default. TPrincipal(const TPrincipal& ); copy constructor. TPrincipal& operator=(const TPrincipal& ); assignement operator. ~TPrincipal(); destructor. void AddRow(const Double_t* x). /*; >; Add a data point and update the covariance matrix. The input; array must be fNumberOfVariables long. The Covariance matrix and mean values of the input data is caculated; on the fly by the following equations:. since this is a really fast method, with no rounding errors (please; refer to CERN 72-21 pp. 54-106). The data is stored internally in a TVectorD, in the following; way:. With as defined in the class description.; ; */; . void Browse(TBrowser* b); Browse the TPrinc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPrincipal.html:12607,Inherit,Inheritance,12607,root/html602/TPrincipal.html,https://root.cern,https://root.cern/root/html602/TPrincipal.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tMetaArgs (std::ostream &os) const override;  Customized printing of arguments of a RooAddPdf to more intuitively reflect the contents of the product operator construction. ;  ; void resetErrorCounters (Int_t resetValue=10) override;  Reset error counter to given value, limiting the number of future error messages for this pdf to 'resetValue'. ;  ; bool selfNormalized () const override;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ; void setCacheAndTrackHints (RooArgSet &) override;  Label OK'ed components of a RooAddPdf with cache-and-track. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void translate (RooFit::Detail::CodeSquashContext &ctx) const override;  This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ;  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; virtual RooAbsGenContext * autoGenContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, bool autoBinned=true, const char *binnedTag="""") const;  ; virtual RooAbsGenContext * binnedGenContext (const RooArgSet &vars, bool verbose=false) const;  Return a binned generator context. ;  ; bool canBeExtended () const;  If true, PDF can provide extended likelihood term. ;  ; RooFit::OwningPtr< RooAbsReal > createCdf (const RooArgSet &iset, const RooArgSet &nset=RooArgSet());  Create a cumulative distribution function of this p.d.f in terms of the observables listed in iset. ;  ; RooFit::OwningPtr< RooAbs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAddPdf.html:6699,inherit,inherited,6699,doc/v632/classRooAddPdf.html,https://root.cern,https://root.cern/doc/v632/classRooAddPdf.html,2,['inherit'],['inherited']
Modifiability,"tMethod(const char* method) const; TMVA::IMethod*AddMethod(const TCut&, const TString& theVariables, TMVA::Types::EMVA theMethod, const TString& theTitle, const TString& theOptions); voidTMVA::Configurable::AddOptionsXMLTo(void* parent) const; voidTMVA::MethodBase::AddOutput(TMVA::Types::ETreeType type, TMVA::Types::EAnalysisType analysisType); virtual voidAddWeightsXMLTo(void* parent) const; virtual voidTObject::AppendPad(Option_t* option = """"); TDirectory*TMVA::MethodBase::BaseDir() const; virtual voidTObject::Browse(TBrowser* b); voidTMVA::Configurable::CheckForUnusedOptions() const; virtual voidTMVA::MethodBase::CheckSetup(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; TMVA::ConfigurableTMVA::Configurable::Configurable(const TString& theOption = """"); TMVA::ConfigurableTMVA::Configurable::Configurable(const TMVA::Configurable&); virtual voidTObject::Copy(TObject& object) const; virtual const TMVA::Ranking*CreateRanking(); TMVA::DataSet*TMVA::MethodBase::Data() const; TMVA::DataSetInfo&TMVA::MethodBase::DataInfo() const; virtual voidTMVA::MethodBase::DeclareCompatibilityOptions(); virtual voidTObject::Delete(Option_t* option = """")MENU ; voidTMVA::MethodBase::DisableWriting(Bool_t setter); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodCategory.html:1659,Config,Configurable,1659,root/html602/TMVA__MethodCategory.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodCategory.html,2,['Config'],['Configurable']
Modifiability,"tMin(const char* name, Double_t value); Set minimum of name range to given value. If name is null; minimum of default range is set. void setMax(const char* name, Double_t value); Set maximum of name range to given value. If name is null; maximum of default range is set. void setRange(const char* name, Double_t min, Double_t max); Set range named 'name to [min,max]. If name is null; range of default range is adjusted. If no range with; 'name' exists it is created on the fly. void setRange(const char* name, RooAbsReal& min, RooAbsReal& max); Create or modify a parameterized range named 'name' that has external functions; min and max parameterizing its boundaries. Bool_t readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); Read object contents from given stream. void writeToStream(ostream& os, Bool_t compact) const; Write object contents to given stream. void printValue(ostream& os) const; Print value of variable. void printExtras(ostream& os) const; Print extras of variable: (asymmetric) error, constant flag, limits and binning. Int_t defaultPrintContents(Option_t* opt) const; Mapping of Print() option string to RooPrintable contents specifications. void printMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Detailed printing interface. TString* format(const RooCmdArg& formatArg) const; Format contents of RooRealVar for pretty printing on RooPlot; parameter boxes. This function processes the named arguments; taken by paramOn() and translates them to an option string; parsed by RooRealVar::format(Int_t sigDigits, const char *options). TString * format(Int_t sigDigits, const char* options) const; Format numeric value of RooRealVar and its error in a variety of ways. To control what is shown use the following options; N = show name; H = hide value; E = show error; A = show asymmetric error instead of parabolic error (if available); U = show unit. To control how it is shown use these options; L = TLatex mode; X = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooRealVar.html:41792,variab,variable,41792,root/html526/RooRealVar.html,https://root.cern,https://root.cern/root/html526/RooRealVar.html,11,['variab'],['variable']
Modifiability,"tMode(double mode); voidSetPdfArea(double area); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; private:. doublefAreaarea below pdf; const ROOT::Math::IBaseFunctionOneDim*fCdfpointer to the cdf (cumulative dist.); const ROOT::Math::IBaseFunctionOneDim*fDPdfpointer to the derivative of the pdf; boolfHasAreaflag to control if distribution has a pre-computed area below the pdf; boolfHasDomainflag to control if distribution has a defined domain (otherwise is [-inf,+inf]; boolfHasModeflag to control if distribution has a pre-computed mode; boolfIsLogPdfflag to control if function pointer represent log of pdf; doublefModemode of the distribution; boolfOwnFuncflag to indicate if class manages the function pointers; const ROOT::Math::IBaseFunctionOneDim*fPdfpointer to the pdf ; doublefXmaxupper value of the domain; doublefXminlower value of the domain . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TUnuranContDist(const ROOT::Math::IGenFunction& pdf, const ROOT::Math::IGenFunction* dpdf = 0, bool isLogPdf = false, bool copyFunc = false); Constructor from generic function interfaces; manage the functions and clone them if flag copyFunc is true. TUnuranContDist(TF1* pdf = 0, TF1* deriv = 0, bool isLogPdf = false); Constructor from a TF1 objects; function pointers are managed by class. TUnuranContDist(const TUnuranContDist& ); Implementation of copy constructor. ~TUnuranContDist(); destructor implementation. void SetCdf(const ROOT::Math::IGenFunction& cdf); set cdf distribution using a generic function interface. void SetCdf(TF1* cdf); set cumulative distribution function from a TF1. double Pdf(double x) const; evaluate the pdf of the distribution. double DPdf(double x) const; evaluate the derivative of the pdf; if derivative function is not given is evaluated numerically. double Cdf(double x) const; evaluate the integral (cdf) on t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TUnuranContDist.html:2132,Inherit,Inheritance,2132,root/html534/TUnuranContDist.html,https://root.cern,https://root.cern/root/html534/TUnuranContDist.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tMsgType(TMVA::EMsgType t); voidSetNodePurityLimit(Double_t l); voidSetNTrees(Int_t d); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidSetShrinkage(Double_t s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidSetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); voidSetUseNvars(Int_t n); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); Double_tTestTreeQuality(TMVA::DecisionTree* dt); virtual voidTrain(); voidTMVA::MethodBase::TrainMethod(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTMVA::MethodBase::WriteEvaluationHistosToFile(TMVA::Types::ETreeType treetype); virtual voidWriteMonitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodBDT.html:17216,Config,Configurable,17216,root/html534/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodBDT.html,1,['Config'],['Configurable']
Modifiability,"tMssUrl(Bool_t = kFALSE); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TProofDesc*TProofMgr::GetProofDesc(Int_t id); virtual TProofDesc*TProofMgr::GetProofDesc(TProof* p); virtual Int_tTProofMgr::GetRemoteProtocol() const; virtual TProofLog*GetSessionLogs(Int_t ridx = 0, const char* stag = 0, const char* pattern = ""-v \""| SvcMsg\"""", Bool_t rescan = kFALSE); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual const char*TProofMgr::GetUrl(); virtual voidGrep(const char* what, const char* how = 0, const char* where = 0); virtual Bool_tHandleError(const void* in = 0); virtual Bool_tHandleInput(const void*); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTProofMgr::IsLite() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTProofMgr::IsProofd() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; virtual voidLs(const char* what = ""~/"", const char* how = 0, const char* where = 0); virtual Bool_tMatchUrl(const char* url); voidTObject::MayNotUse(const char* method) const; virtual Int_tMd5sum(const char* what, TString& sum, const char* where = 0); virtual voidMore(const char* what, const char* how = 0, const char* where = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TXProofMgr.html:3983,Inherit,InheritsFrom,3983,root/html534/TXProofMgr.html,https://root.cern,https://root.cern/root/html534/TXProofMgr.html,3,['Inherit'],['InheritsFrom']
Modifiability,"tMvaValue(Double_t* err, Double_t* errUpper, UInt_t useNTrees); Return the MVA value (range [-1;1]) that classifies the; event according to the majority vote from the total number of; decision trees. Double_t PrivateGetMvaValue(TMVA::Event& ev, Double_t* err = 0, Double_t* errUpper = 0, UInt_t useNTrees = 0); Return the MVA value (range [-1;1]) that classifies the; event according to the majority vote from the total number of; decision trees. const std::vector<Float_t>& GetMulticlassValues(); get the multiclass MVA response for the BDT classifier. const std::vector<Float_t> & GetRegressionValues(); get the regression value generated by the BDTs. void WriteMonitoringHistosToFile( void ); Here we could write some histograms created during the processing; to the output file. vector< Double_t > GetVariableImportance(); Return the relative variable importance, normalized to all; variables together having the importance 1. The importance in; evaluated as the total separation-gain that this variable had in; the decision trees (weighted by the number of events). Double_t GetVariableImportance(UInt_t ivar); Returns the measure for the variable importance of variable ""ivar""; which is later used in GetVariableImportance() to calculate the; relative variable importances. const TMVA::Ranking* CreateRanking(); Compute ranking of input variables. void GetHelpMessage() const; Get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". void MakeClassSpecific(ostream& , const TString& ) const; make ROOT-independent C++ class for classifier response (classifier-specific implementation). void MakeClassSpecificHeader(ostream& , const TString& ) const; specific class header. void MakeClassInstantiateNode(TMVA::DecisionTreeNode* n, ostream& fout, const TString& className) const; recursively descends a tree and writes the node instance to the output streem. const std::vector<TMVA::DecisionTree*>& GetForest() const; { return fFore",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodBDT.html:33507,variab,variable,33507,root/html530/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodBDT.html,3,['variab'],['variable']
Modifiability,"tNBins(Int_t bins); virtual voidSetNuisanceParameters(const RooArgSet&); voidSetParameterPointsToTest(RooAbsData& pointsToTest); virtual voidSetParameters(const RooArgSet&); virtual voidSetPdf(RooAbsPdf&); voidSetPOIPointsToTest(RooAbsData& poiToTest); virtual voidSetTestSize(Double_t size); virtual voidShowMembers(TMemberInspector& insp) const; virtual Double_tSize() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidUseAdaptiveSampling(bool flag = true). private:. voidCreateParameterPoints() const; voidCreateTestStatSampler() const. Data Members; private:. Bool_tfAdaptiveSamplingcontrols use of adaptive sampling algorithm; Double_tfAdditionalNToysFactorgive user ability to ask for more toys; RooStats::ConfidenceBelt*fConfBelt; Bool_tfCreateBeltcontrols use if ConfidenceBelt should be saved to a TFile; RooAbsData&fDatadata set; Bool_tfDoProfileConstructioninstead of full construction over nuisance parametrs, do profile; Bool_tfFluctuateDatatell ToyMCSampler to fluctuate number of entries in dataset; RooStats::ModelConfig&fModel; Int_tfNbinsnumber of samples per variable; RooAbsData*fPOIToTestvalue of POI points to perform the construction; RooAbsData*fPointsToTestpoints to perform the construction; Bool_tfSaveBeltToFilecontrols use if ConfidenceBelt should be saved to a TFile; Double_tfSizesize of the test (eg. specified rate of Type I error); RooStats::ToyMCSampler*fTestStatSamplerthe test statistic sampler. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FeldmanCousins(RooAbsData& data, RooStats::ModelConfig& model); standard constructor. ~FeldmanCousins(); destructor; if(fOwnsWorkspace && fWS) delete fWS;. void SetModel(const RooStats::ModelConfig& ); set the model. TestStatSampler* GetTestStatSampler() const. void CreateTestStatSampler() const; specify the Test Statistic and create a ToyMC test statistic sampler. void CreateParameterPoints() const; specify the paramete",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__FeldmanCousins.html:3350,adapt,adaptive,3350,root/html602/RooStats__FeldmanCousins.html,https://root.cern,https://root.cern/root/html602/RooStats__FeldmanCousins.html,8,"['adapt', 'variab']","['adaptive', 'variable']"
Modifiability,"tNRows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TPave::GetOption() const; Int_tTPave::GetShadowColor() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTBox::GetX1() const; Double_tTPave::GetX1NDC() const; Double_tTBox::GetX2() const; Double_tTPave::GetX2NDC() const; Double_tTBox::GetY1() const; Double_tTPave::GetY1NDC() const; Double_tTBox::GetY2() const; Double_tTPave::GetY2NDC() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTPave::Hash() const; virtual voidTBox::HideToolTip(Int_t event); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInsertEntry(const char* objectName = """", const char* label = """", Option_t* option = ""lpf"")MENU ; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBox::IsBeingResized() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Int_tTBox::IsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTPave::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTPave::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLegend.html:7835,Inherit,InheritsFrom,7835,root/html532/TLegend.html,https://root.cern,https://root.cern/root/html532/TLegend.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tNRows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TPave::GetOption() const; Int_tTPave::GetShadowColor() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTBox::GetX1() const; Double_tTPave::GetX1NDC() const; Double_tTBox::GetX2() const; Double_tTPave::GetX2NDC() const; Double_tTBox::GetY1() const; Double_tTPave::GetY1NDC() const; Double_tTBox::GetY2() const; Double_tTPave::GetY2NDC() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTPave::Hash() const; virtual voidTBox::HideToolTip(Int_t event); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInsertEntry(const char* objectName = """", const char* label = """", Option_t* option = ""lpf"")MENU ; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBox::IsBeingResized() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Int_tTBox::IsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTPave::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTPave::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLegend.html:8193,Inherit,InheritsFrom,8193,root/html602/TLegend.html,https://root.cern,https://root.cern/root/html602/TLegend.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tNSegments() constReturn of segments for cylindrical shapes, if 0 - default value will be used.Definition RGeomData.hxx:344; ROOT::RGeomDescription::fNodesstd::vector< TGeoNode * > fNodes! flat list of all nodesDefinition RGeomData.hxx:242; ROOT::RGeomDescription::GetJsonCompint GetJsonComp() constReturns JSON compression level for data transfer.Definition RGeomData.hxx:354; ROOT::RGeomDescription::Buildvoid Build(TGeoManager *mgr, const std::string &volname="""")Collect information about geometry hierarchy into flat list like it done in JSROOT ClonedNodes....Definition RGeomData.cxx:425; ROOT::RGeomDrawingObject with full description for drawing geometry It includes list of visible items and list of nodes...Definition RGeomData.hxx:177; ROOT::RGeomDrawing::numnodesint numnodestotal number of nodes in descriptionDefinition RGeomData.hxx:180; ROOT::RGeomDrawing::visiblesstd::vector< RGeomVisible > visiblesall visible itemsDefinition RGeomData.hxx:182; ROOT::RGeomDrawing::cfgRGeomConfig * cfgcurrent configurationsDefinition RGeomData.hxx:179; ROOT::RGeomDrawing::nodesstd::vector< RGeomNode * > nodesall used nodes to display visible items and not known for clientDefinition RGeomData.hxx:181; ROOT::RGeomNodeBase::materialstd::string materialname of the materialDefinition RGeomData.hxx:53; ROOT::RGeomNodeBase::sortidint sortid! place in sorted array, to check cuts, or id of original node when used search structuresDefinition RGeomData.hxx:54; ROOT::RGeomNodeBase::colorstd::string colorrgb code in hex formatDefinition RGeomData.hxx:52; ROOT::RGeomNodeBase::idint idnode id, index in arrayDefinition RGeomData.hxx:46; ROOT::RGeomNodeFull node description including matrices and other attributes.Definition RGeomData.hxx:71; ROOT::RGeomNode::opacityfloat opacity! opacity of the colorDefinition RGeomData.hxx:78; TAttFill::GetFillColorvirtual Color_t GetFillColor() constReturn the fill area color.Definition TAttFill.h:30; TAttLine::GetLineColorvirtual Color_t GetLineColor() constRe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RGeomData_8cxx_source.html:85964,config,configurationsDefinition,85964,doc/master/RGeomData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RGeomData_8cxx_source.html,2,['config'],['configurationsDefinition']
Modifiability,"tNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooSetProxy_paramSetSet of parameters to which constraints apply; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; RooListProxy_set1Set of constraint terms; TIterator*_setIter1! do not persist; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooConstraintSum(); Default constructor. RooConstraintSum(const char* name, con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooConstraintSum.html:35254,config,configuration,35254,root/html534/RooConstraintSum.html,https://root.cern,https://root.cern/root/html534/RooConstraintSum.html,2,['config'],['configuration']
Modifiability,"tName() const; virtual Int_tGetNmeshVertices() const; Int_tGetNumberOfDivisions() const; Int_tGetNz() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; Double_tGetPhi1() const; Double_tGetPhi2() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tGetPointsOnSegments(Int_t, Double_t*) const; virtual Double_tGetRmax() const; virtual Double_tGetRmin() const; Double_tGetTheta1() const; Double_tGetTheta2() const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(Double_t* point, Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tIsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Int_tIsOnBoundary(Double_t* point) const; Bool_tTObject::IsOnHeap() const; Bool_tIsPointInside(Double_t* point",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoSphere.html:5574,Inherit,InheritsFrom,5574,root/html532/TGeoSphere.html,https://root.cern,https://root.cern/root/html532/TGeoSphere.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tName() const; virtual Int_tGetNmeshVertices() const; Int_tGetNumberOfDivisions() const; Int_tGetNz() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; Double_tGetPhi1() const; Double_tGetPhi2() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tGetPointsOnSegments(Int_t, Double_t*) const; virtual Double_tGetRmax() const; virtual Double_tGetRmin() const; Double_tGetTheta1() const; Double_tGetTheta2() const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, const Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(const Double_t* point, const Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tIsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(const Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Int_tIsOnBoundary(const Double_t* point) const; Bool_tTObject::IsOnHeap() const; Bool_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoSphere.html:6193,Inherit,InheritsFrom,6193,root/html534/TGeoSphere.html,https://root.cern,https://root.cern/root/html534/TGeoSphere.html,3,['Inherit'],['InheritsFrom']
Modifiability,"tName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTXMLParser::GetParseCode() const; const char*TXMLParser::GetParseCodeMessage(Int_t parseCode) const; Bool_tTXMLParser::GetReplaceEntities() const; Bool_tTXMLParser::GetStopOnError() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Bool_tTXMLParser::GetValidate() const; const char*TXMLParser::GetValidateError() const; const char*TXMLParser::GetValidateWarning() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual voidOnCdataBlock(const char* text, Int_t len)SIGNAL ; virtual voidOnCharacters(const char* characters)SIGNAL ; virtual voidOnCommen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSAXParser.html:5624,Inherit,InheritsFrom,5624,root/html532/TSAXParser.html,https://root.cern,https://root.cern/root/html532/TSAXParser.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTXMLParser::GetParseCode() const; const char*TXMLParser::GetParseCodeMessage(Int_t parseCode) const; Bool_tTXMLParser::GetReplaceEntities() const; Bool_tTXMLParser::GetStopOnError() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Bool_tTXMLParser::GetValidate() const; const char*TXMLParser::GetValidateError() const; const char*TXMLParser::GetValidateWarning() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual voidOnCdataBlock(const char* text, Int_t len)SIGNAL ; virtual voidOnCharacters(const char* characters)SIGNAL ; virtual voidOnComment(const char* text)SIGNAL ; virtual vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSAXParser.html:5635,Inherit,InheritsFrom,5635,root/html602/TSAXParser.html,https://root.cern,https://root.cern/root/html602/TSAXParser.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TFITSHDU::HDURecord*GetRecord(const char* keyword); Int_tGetRecordNumber() const; Int_tGetTabNColumns() const; Int_tGetTabNRows() const; TVectorD*GetTabRealVectorCell(Int_t rownum, Int_t colnum); TVectorD*GetTabRealVectorCell(Int_t rownum, const char* colname); TObjArray*GetTabRealVectorCells(Int_t colnum); TObjArray*GetTabRealVectorCells(const char* colname); TVectorD*GetTabRealVectorColumn(Int_t colnum); TVectorD*GetTabRealVectorColumn(const char* colname); TObjArray*GetTabStringColumn(Int_t colnum); TObjArray*GetTabStringColumn(const char* colname); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFITSHDU.html:3381,Inherit,InheritsFrom,3381,root/html532/TFITSHDU.html,https://root.cern,https://root.cern/root/html532/TFITSHDU.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tNdim() const; virtual Int_tROOT::v5::TFormula::GetNpar() const; virtual Int_tROOT::v5::TFormula::GetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tROOT::v5::TFormula::GetParameter(Int_t ipar) const; Double_tROOT::v5::TFormula::GetParameter(const char* name) const; virtual Double_t*ROOT::v5::TFormula::GetParameters() const; virtual voidROOT::v5::TFormula::GetParameters(Double_t* params); virtual const char*ROOT::v5::TFormula::GetParName(Int_t ipar) const; virtual Int_tROOT::v5::TFormula::GetParNumber(const char* name) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tROOT::v5::TFormula::IsLinear() const; virtual Bool_tROOT::v5::TFormula::IsNormalized() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__v5__TF1Data.html:4476,Inherit,InheritsFrom,4476,root/html604/ROOT__v5__TF1Data.html,https://root.cern,https://root.cern/root/html604/ROOT__v5__TF1Data.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tNorm (const RooArgSet &nset) const;  Get normalisation term needed to normalise the raw values returned by getVal(). ;  ; virtual double getNorm (const RooArgSet *set=nullptr) const;  Get normalisation term needed to normalise the raw values returned by getVal(). ;  ; const RooAbsReal * getNormIntegral (const RooArgSet &nset) const;  ; virtual const RooAbsReal * getNormObj (const RooArgSet *set, const RooArgSet *iset, const TNamed *rangeName=nullptr) const;  Return pointer to RooAbsReal object that implements calculation of integral over observables iset in range rangeName, optionally taking the integrand normalized over observables nset. ;  ; virtual void initGenerator (Int_t code);  Interface for one-time initialization to setup the generator for the specified code. ;  ; virtual bool isDirectGenSafe (const RooAbsArg &arg) const;  Check if given observable can be safely generated using the pdfs internal generator mechanism (if that existsP). ;  ; bool mustBeExtended () const;  If true PDF must provide extended likelihood term. ;  ; const char * normRange () const;  ; virtual RooPlot * paramOn (RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Add a box with parameter values (and errors) to the specified frame. ;  ; RooPlot * plotOn (RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const override;  Helper calling plotOn(RooPlot*, RooLinkedList&) const. ;  ; RooPlot * plotOn (RooPlot *frame, RooLinkedList &cmdList) const override;  Plot (project) PDF on specified frame. ;  ; GenSpec * prepareMultiGen (const RooArgSet &whatVars, const RooCmdArg &arg1={}, const RooCmdArg &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAddPdf.html:14464,extend,extended,14464,doc/v632/classRooAddPdf.html,https://root.cern,https://root.cern/doc/v632/classRooAddPdf.html,3,['extend'],['extended']
Modifiability,"tNpar()); constructor from a TF1 function pointer. WrappedTF1(TF1& f); fParams(rhs.fParams); copy constructor. void ParameterGradient(double x, const double* par, double* grad) const; evaluate the derivative of the function with respect to the parameters. double DoDerivative(double x) const; return the function derivatives w.r.t. x. double DoParameterDerivative(double x, const double* p, unsigned int ipar) const; evaluate the derivative of the function with respect to the parameters; IMPORTANT NOTE: TF1::GradientPar returns 0 for fixed parameters to avoid computing useless derivatives; BUT the TLinearFitter wants to have the derivatives also for fixed parameters.; so in case of fLinear (or fPolynomial) a non-zero value will be returned for fixed parameters. void SetDerivPrecision(double eps); { fgEps = eps; }. double GetDerivPrecision(); { return fgEps; }. virtual ~WrappedTF1(). Destructor (no operations). TF1 Function pointer is not owned. {}. ROOT::Math::IGenFunction * Clone() const; @name interface inherited from IFunction . Clone the wrapper but not the original function. const double * Parameters() const; @name interface inherited from IParamFunction ; get the parameter values (return values cachen inside, those inside TF1 might be different). void SetParameters(const double* p); set parameter values; need to call also SetParameters in TF1 in ace some other operations (re-normalizations) are needed. unsigned int NPar() const; return number of parameters. std::string ParameterName(unsigned int i) const; return parameter name (this is stored in TF1). void FdF(double x, double& f, double& deriv) const; calculate function and derivative at same time (required by IGradient interface). double DoEvalPar(double x, const double* p) const; evaluate function passing coordinates x and vector of parameters. double DoEval(double x) const; evaluate function using the cached parameter values (of TF1); re-implement for better efficiency. » Author: L. Moneta Wed Sep 6 09:52:26 20",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__WrappedTF1.html:4879,inherit,inherited,4879,root/html604/ROOT__Math__WrappedTF1.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__WrappedTF1.html,2,['inherit'],['inherited']
Modifiability,"tNumber () const;  ; ULong_t GetPixel () const;  Return pixel value corresponding to this color. ;  ; Float_t GetRed () const;  ; virtual void GetRGB (Float_t &r, Float_t &g, Float_t &b) const;  ; Float_t GetSaturation () const;  ; TClass * IsA () const override;  ; void ls (Option_t *option="""") const override;  List this color with its attributes. ;  ; TColor & operator= (const TColor &color);  ; void Print (Option_t *option="""") const override;  Dump this color with its attributes. ;  ; virtual void SetAlpha (Float_t a);  ; void SetName (const char *name) override;  Set the color name and change also the name of the ""dark"" and ""bright"" associated colors if they exist. ;  ; virtual void SetRGB (Float_t r, Float_t g, Float_t b);  Initialize this color and its ""dark"" and ""bright"" associated colors. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTColor.html:26386,inherit,inherited,26386,doc/master/classTColor.html,https://root.cern,https://root.cern/doc/master/classTColor.html,1,['inherit'],['inherited']
Modifiability,"tNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooExtendPdf(); Default constructor. RooExtendPdf(const char* name, const char* title, const RooAbsPdf& pdf, const RooAbsReal& norm, const char* rangeName = 0); Constructor. The ExtendedPdf behaves identical to the supplied input pdf,; but adds an extended likelihood term. The expected number of events return; is 'norm'. If a rangename is given, the number of events is interpreted as. RooExtendPdf(const RooExtendPdf& other, const char* name = 0); Copy constructor. ~RooExtendPdf(); Destructor. Double_t expectedEvents(const RooArgSet* nset) const; Return the number of expected events, which is. n / [ Int(xC,yF) pdf(x,y) / Int(xF,yF) pdf(x,y) ]. Where x is the set of dependents with cuts defined; and y are the other dependents. xC is the integration; of x over the cut range, xF is the integration of; x over the full range. TObject* clone(const char* newname) const; { return new RooExtendPdf(*this,newname) ; }. Double_t evaluate() const; { return _pdf ; }. Bool_t forceAnalyticalInt(const RooAbsArg& ) const; { return kTRUE ; }. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Forward determination of analytical integration capab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooExtendPdf.html:41023,extend,extended,41023,root/html528/RooExtendPdf.html,https://root.cern,https://root.cern/root/html528/RooExtendPdf.html,5,"['Extend', 'extend']","['ExtendedPdf', 'extended']"
Modifiability,"tNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooExtendPdf(); Default constructor. RooExtendPdf(const char* name, const char* title, const RooAbsPdf& pdf, const RooAbsReal& norm, const char* rangeName = 0); Constructor. The ExtendedPdf behaves identical to the supplied input pdf,; but adds an extended likelihood term. The expected number of events return; is 'norm'. If a rangename is given, the number of events is interpreted as. RooExtendPdf(const RooExtendPdf& other, const char* name = 0); Copy constructor. ~RooExtendPdf(); Destructor. Double_t expectedEvents(const RooArgSet* nset); Return the number of expected events, which is. n / [ Int(xC,yF) pdf(x,y) / Int(xF,yF) pdf(x,y) ]. Where x is the set of dependents with cuts defined; and y are the other dependents. xC is the integration; of x over the cut range, xF is the integration of; x over the full range. TObject* clone(const char* newname) const; { return new RooExtendPdf(*this,newname) ; }. Double_t evaluate() const; { return _pdf ; }. Bool_t forceAnalyticalInt(const RooAbsArg& ) const; { return kTRUE ; }. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Forward determination of analytical integration capabilitie",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooExtendPdf.html:40206,extend,extended,40206,root/html526/RooExtendPdf.html,https://root.cern,https://root.cern/root/html526/RooExtendPdf.html,1,['extend'],['extended']
Modifiability,"tObjClassName(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTBranch::GetOffset() const; virtual Option_t*TObject::GetOption() const; Int_tTBranch::GetReadBasket() const; Long64_tTBranch::GetReadEntry() const; virtual Int_tTBranch::GetRow(Int_t row); Int_tTBranch::GetSplitLevel() const; TBranch*TBranch::GetSubBranch(const TBranch* br) const; virtual const char*TNamed::GetTitle() const; Long64_tTBranch::GetTotalSize(Option_t* option = """") const; Long64_tTBranch::GetTotBytes(Option_t* option = """") const; TTree*TBranch::GetTree() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTBranch::GetWriteBasket() const; Long64_tTBranch::GetZipBytes(Option_t* option = """") const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBranch::IsAutoDelete() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTBranch::KeepCircular(Long64_t maxEntries); virtual Int_tTBranch::LoadBaskets(); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBranchObject.html:5246,Inherit,InheritsFrom,5246,root/html532/TBranchObject.html,https://root.cern,https://root.cern/root/html532/TBranchObject.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tObjClassName(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTBranch::GetOffset() const; virtual Option_t*TObject::GetOption() const; Int_tTBranch::GetReadBasket() const; Long64_tTBranch::GetReadEntry() const; virtual Int_tTBranch::GetRow(Int_t row); Int_tTBranch::GetSplitLevel() const; TBranch*TBranch::GetSubBranch(const TBranch* br) const; virtual const char*TNamed::GetTitle() const; Long64_tTBranch::GetTotalSize(Option_t* option = """") const; Long64_tTBranch::GetTotBytes(Option_t* option = """") const; TTree*TBranch::GetTree() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTBranch::GetWriteBasket() const; Long64_tTBranch::GetZipBytes(Option_t* option = """") const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBranch::IsAutoDelete() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTBranch::KeepCircular(Long64_t maxEntries); virtual Int_tTBranch::LoadBaskets(); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBranchObject.html:4871,Inherit,InheritsFrom,4871,root/html602/TBranchObject.html,https://root.cern,https://root.cern/root/html602/TBranchObject.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; std::atomic_int fCount;  ; std::atomic_flag fLock;  Array pointing to the referenced objects. ;  ; ROOT::Internal::TAtomicPointer< TObjArray * > fObjects;  Reference count to this object (from TFile) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static std::atomic_uint fgNumber;  ; static TExMap * fgObjPIDs = nullptr;  ; static TProcessID * fgPID = nullptr;  Spin lock for initialization of fObjects. ;  ; static TObjArray * fgPIDs = nullptr;  . Private Member Functions;  TProcessID (const TProcessID &ref)=delete;  ; TProcessID & operator= (const TProcessID &ref)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TProcessID.h>. Inheritance diagram for TProcessID:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProcessID.html:14651,inherit,inherited,14651,doc/master/classTProcessID.html,https://root.cern,https://root.cern/doc/master/classTProcessID.html,1,['inherit'],['inherited']
Modifiability,"tObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const char * GetInputNeuronTitle (Int_t in);  Returns the name of any neuron from the input layer. ;  ; Int_t GetLayers ();  Returns the number of layers. ;  ; TString GetNeuronFormula (Int_t idx);  Returns the formula used as input for neuron (idx) in the first layer. ;  ; Int_t GetNeurons (Int_t layer);  Returns the number of neurons in given layer. ;  ; const char * GetOutputNeuronTitle (Int_t out);  Returns the name of any neuron from the output layer. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; TTree * fAnalysisTree;  ; TTree * fIOTree;  ; TMultiLayerPerceptron * fNetwork;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMLPAnalyzer.h>. Inheritance diagram for TMLPAnalyzer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMLPAnalyzer() [1/2]. TMLPAnalyzer::TMLPAnalyzer ; (; TMultiLayerPerceptron & ; net). inline . Definition at line 40 of file TMLPAnalyzer.h. ◆ TMLP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMLPAnalyzer.html:11557,inherit,inherited,11557,doc/master/classTMLPAnalyzer.html,https://root.cern,https://root.cern/doc/master/classTMLPAnalyzer.html,1,['inherit'],['inherited']
Modifiability,"tObjectStat(); virtual Option_t*TObject::GetOption() const; ULong_tTColor::GetPixel() const; Float_tTColor::GetRed() const; virtual voidTColor::GetRGB(Float_t& r, Float_t& g, Float_t& b) const; Float_tTColor::GetSaturation() const; const TColorGradient::Point&GetStart() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static voidTColor::HLS2RGB(Float_t h, Float_t l, Float_t s, Float_t& r, Float_t& g, Float_t& b); static voidTColor::HLS2RGB(Int_t h, Int_t l, Int_t s, Int_t& r, Int_t& g, Int_t& b); static voidTColor::HLStoRGB(Float_t h, Float_t l, Float_t s, Float_t& r, Float_t& g, Float_t& b); static voidTColor::HSV2RGB(Float_t h, Float_t s, Float_t v, Float_t& r, Float_t& g, Float_t& b); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; static voidTColor::InitializeColors(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTColor::IsGrayscale(); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTColor::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static ULong_tTColor::Number2Pixel(Int_t ci); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TLinearGradient.html:5333,Inherit,InheritsFrom,5333,root/html534/TLinearGradient.html,https://root.cern,https://root.cern/root/html534/TLinearGradient.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tObjectStat(); virtual Option_t*TObject::GetOption() const; ULong_tTColor::GetPixel() const; Float_tTColor::GetRed() const; virtual voidTColor::GetRGB(Float_t& r, Float_t& g, Float_t& b) const; Float_tTColor::GetSaturation() const; const TColorGradient::Point&GetStart() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static voidTColor::HLS2RGB(Float_t h, Float_t l, Float_t s, Float_t& r, Float_t& g, Float_t& b); static voidTColor::HLS2RGB(Int_t h, Int_t l, Int_t s, Int_t& r, Int_t& g, Int_t& b); static voidTColor::HLStoRGB(Float_t h, Float_t l, Float_t s, Float_t& r, Float_t& g, Float_t& b); static voidTColor::HSV2RGB(Float_t h, Float_t s, Float_t v, Float_t& r, Float_t& g, Float_t& b); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; static voidTColor::InitializeColors(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTColor::IsGrayscale(); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTColor::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static ULong_tTColor::Number2Pixel(Int_t ci); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLinearGradient.html:4957,Inherit,InheritsFrom,4957,root/html602/TLinearGradient.html,https://root.cern,https://root.cern/root/html602/TLinearGradient.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Protected Attributes inherited from RooResolutionModel; RooFormulaVar * _basis = nullptr;  Basis function convolved with this resolution model. ;  ; Int_t _basisCode;  Identifier code for selected basis function. ;  ; bool _ownBasis;  Flag indicating ownership of _basis. ;  ; RooTemplateProxy< RooAbsRealLValue > x;  Dependent/convolution variable. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGExpModel.html:74484,variab,variable,74484,doc/master/classRooGExpModel.html,https://root.cern,https://root.cern/doc/master/classRooGExpModel.html,2,['variab'],['variable']
Modifiability,"tOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBrowserTimer.html:13559,inherit,inherited,13559,doc/master/classTBrowserTimer.html,https://root.cern,https://root.cern/doc/master/classTBrowserTimer.html,1,['inherit'],['inherited']
Modifiability,"tOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGColorDialog (const TGColorDialog &)=delete;  ; TGColorDialog & operator= (const TGColorDialog &)=delete;  . Additional Inherited Members;  Public Types inherited from TGTransientFrame; enum  EPlacement { ;   kCenter; , kLeft; , kRight; , kTop; , ;   kBottom; , kTopLeft; , kTopRight; , kBottomLeft; , ;   kBottomRight. };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGMainFrame; enum  { kDontCallClose = (1ULL << ( 14 )); };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGColorDialog.html:35550,inherit,inherited,35550,doc/master/classTGColorDialog.html,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html,1,['inherit'],['inherited']
Modifiability,"tOfTypes(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidExecute(TMethod* method, TObjArray* params, int* error = 0); voidTObject::MakeZombie(). Data Members; public:. enum EErrorCode { kNoError; kRecoverable; kDangerous; kFatal; kProcessing; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TInterpreter *& Instance(); returns gInterpreter global. void Execute(TMethod* method, TObjArray* params, int* error = 0). virtual ~TInterpreter(); { }. void AddIncludePath(const char* path). Int_t AutoLoad(const char* classname). void ClearFileBusy(). void ClearStack(). void EnableAutoLoading(). void EndOfLineAction(). Int_t GetExitCode() const. TEnv * GetMapfile() const; { return 0; }. Int_t GetMore() const. Int_t GenerateDictionary(const char* classes, const char* includes = 0, const char* options = 0). char * GetPrompt(). const char * GetSharedLibs(). const char * GetClassSharedLibs(const char* cls). const char * GetSharedLibDeps(const char* lib). const char * GetIncludePath(). const char * GetSTLIncludePath() const; { return """"; }. TObjArray * GetRootMapFiles() const. Int_t InitializeDictionaries(). Bool_t IsLoaded(const char* filename) const. Int_t Load(const char* filenam, Bool_t system = kFALSE). void LoadMacro(const char* file",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TInterpreter.html:17350,Inherit,Inheritance,17350,root/html532/TInterpreter.html,https://root.cern,https://root.cern/root/html532/TInterpreter.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tOn(frame);; kest1.plotOn(frame);; kest2.plotOn(frame, LineStyle(kDashed), LineColor(kRed));; ; // Plot kernel estimation pdfs with regular and increased bandwidth; RooPlot *frame2 = x.frame(Title(""Adaptive kernel estimation pdf with regular, increased bandwidth""));; kest1.plotOn(frame2);; kest3.plotOn(frame2, LineColor(kMagenta));; ; // C r e a t e l o w s t a t s 2 - D d a t a s e t; // -------------------------------------------------------; ; // Construct a 2D toy pdf for sampling; RooRealVar y(""y"", ""y"", 0, 20);; RooPolynomial py(""py"", ""py"", y, RooArgList(0.01, 0.01, -0.0004));; RooProdPdf pxy(""pxy"", ""pxy"", RooArgSet(p, py));; std::unique_ptr<RooDataSet> data2{pxy.generate({x, y}, 1000)};; ; // C r e a t e 2 - D k e r n e l e s t i m a t i o n p d f; // ---------------------------------------------------------------; ; // Create 2D adaptive kernel estimation pdf with mirroring; RooNDKeysPdf kest4(""kest4"", ""kest4"", RooArgSet(x, y), *data2, ""am"");; ; // Create 2D adaptive kernel estimation pdf with mirroring and double bandwidth; RooNDKeysPdf kest5(""kest5"", ""kest5"", RooArgSet(x, y), *data2, ""am"", 2);; ; // Create a histogram of the data; TH1 *hh_data = data2->createHistogram(""hh_data"", x, Binning(10), YVar(y, Binning(10)));; ; // Create histogram of the 2d kernel estimation pdfs; TH1 *hh_pdf = kest4.createHistogram(""hh_pdf"", x, Binning(25), YVar(y, Binning(25)));; TH1 *hh_pdf2 = kest5.createHistogram(""hh_pdf2"", x, Binning(25), YVar(y, Binning(25)));; hh_pdf->SetLineColor(kBlue);; hh_pdf2->SetLineColor(kMagenta);; ; TCanvas *c = new TCanvas(""rf707_kernelestimation"", ""rf707_kernelestimation"", 800, 800);; c->Divide(2, 2);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; frame->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.8);; frame2->Draw();; c->cd(3);; gPad->SetLeftMargin(0.15);; hh_data->GetZaxis()->SetTitleOffset(1.4);; hh_data->Draw(""lego"");; c->cd(4);; gPad->SetLeftMargin(0.20);; hh_pdf->Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf707__kernelestimation_8C.html:2786,adapt,adaptive,2786,doc/master/rf707__kernelestimation_8C.html,https://root.cern,https://root.cern/doc/master/rf707__kernelestimation_8C.html,2,['adapt'],['adaptive']
Modifiability,"tOptionAxis ();  ; TGraphPolargram * GetPolargram ();  ; Double_t * GetXpol ();  Return points in polar coordinates. ;  ; Double_t * GetYpol ();  Return points in polar coordinates. ;  ; TClass * IsA () const override;  ; void SetMaximum (Double_t maximum=1) override;  Set the maximum of the graph. ;  ; void SetMaxPolar (Double_t maximum=6.28318530717958623);  Set maximum Polar. ;  ; void SetMaxRadial (Double_t maximum=1);  Set maximum radial at the intersection of the positive X axis part and the circle. ;  ; void SetMinimum (Double_t minimum=0) override;  Set the minimum of the graph. ;  ; void SetMinPolar (Double_t minimum=0);  Set minimum Polar. ;  ; void SetMinRadial (Double_t minimum=0);  Set minimum radial in the center of the circle. ;  ; void SetOptionAxis (Bool_t opt);  ; void SetPolargram (TGraphPolargram *p);  ; void Streamer (TBuffer &) override;  Stream an object of class TGraphErrors. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGraphErrors;  TGraphErrors ();  TGraphErrors default constructor. ;  ;  TGraphErrors (const char *filename, const char *format=""%lg %lg %lg %lg"", Option_t *option="""");  GraphErrors constructor reading input from filename. ;  ;  TGraphErrors (const TGraphErrors &gr);  TGraphErrors copy constructor. ;  ;  TGraphErrors (const TH1 *h);  TGraphErrors constructor importing its parameters from the TH1 object passed as argument. ;  ;  TGraphErrors (const TVectorD &vx, const TVectorD &vy, const TVectorD &vex, const TVectorD &vey);  Constructor with four vectors of doubles in input. ;  ;  TGraphErrors (const TVectorF &vx, const TVectorF &vy, const TVectorF &vex, const TVectorF &vey);  Constructor with four vectors of floats in input. ;  ;  TGraphErrors (Int_t n);  TGraphErrors normal constructor. ;  ;  TGraphErrors (Int_t n, const Double_t *x, const Double_t *y, const Double_t *ex=nullptr, const Double_t *ey=nullptr);  TGraphErrors normal constructor. ;  ;  TGraphErrors (I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphPolar.html:4036,inherit,inherited,4036,doc/master/classTGraphPolar.html,https://root.cern,https://root.cern/doc/master/classTGraphPolar.html,1,['inherit'],['inherited']
Modifiability,"tOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; UInt_tTargetSelectionToUInt(TMVA::ETargetSelection ts) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); virtual voidTrain(); voidTMVA::MethodBase::TrainMethod(); voidTrainMonoTargetRegression(); voidTrainMultiClassification(); voidTrainMultiTargetRegression(); voidTrainSeparatedClassification(); voidTrainUnifiedClassification(); TMVA::MethodPDEFoam::EKernelUIntToKernel(UInt_t iker); TMVA::ETargetSelectionUIntToTargetSelection(UInt_t its); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTMVA::MethodBase::WriteEvaluationHistosToFile(TMVA::Types::ETreeType treetype); voidWriteFoamsToFile() const; virtual voidTMVA::MethodBase::WriteMonitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodPDEFoam.html:14592,Config,Configurable,14592,root/html602/TMVA__MethodPDEFoam.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodPDEFoam.html,2,['Config'],['Configurable']
Modifiability,"tOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event*const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableNormalizeTransformVariableNormalizeTransform(TMVA::DataSetInfo& dsi); TMVA::VariableNormalizeTransformVariableNormalizeTransform(const TMVA::VariableNormalizeTransform&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; TMVA::VariableTransformBaseTMVA::VariableTransformBase::VariableTransformBase(const TMVA::VariableTransformBase&); TMVA::VariableTransformBaseTMVA::VariableTransformBase::VariableTransformBase(TMVA::DataSetInfo& dsi, TMVA::Types::EVariableTransform tf, const TString& trfName); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidWriteTransformationToStream(ostream&) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableNormalizeTransform.html:6737,Variab,VariableTransformBase,6737,root/html602/TMVA__VariableNormalizeTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableNormalizeTransform.html,28,['Variab'],"['VariableInfo', 'VariableNormalizeTransform', 'VariableNormalizeTransformVariableNormalizeTransform', 'VariableTransformBase', 'VariableTransformBaseTMVA', 'Variables']"
Modifiability,"tOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event*const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableRearrangeTransformVariableRearrangeTransform(TMVA::DataSetInfo& dsi); TMVA::VariableRearrangeTransformVariableRearrangeTransform(const TMVA::VariableRearrangeTransform&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; TMVA::VariableTransformBaseTMVA::VariableTransformBase::VariableTransformBase(const TMVA::VariableTransformBase&); TMVA::VariableTransformBaseTMVA::VariableTransformBase::VariableTransformBase(TMVA::DataSetInfo& dsi, TMVA::Types::EVariableTransform tf, const TString& trfName); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidWriteTransformationToStream(ostream&) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableRearrangeTransform.html:6662,Variab,VariableTransformBase,6662,root/html602/TMVA__VariableRearrangeTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableRearrangeTransform.html,28,['Variab'],"['VariableInfo', 'VariableRearrangeTransform', 'VariableRearrangeTransformVariableRearrangeTransform', 'VariableTransformBase', 'VariableTransformBaseTMVA', 'Variables']"
Modifiability,"tPadStyle (std::shared_ptr< RStyle > &&style);  Assign style for the pad. ;  ;  Public Member Functions inherited from ROOT::Experimental::RDisplayItem;  RDisplayItem ()=default;  ;  RDisplayItem (bool dummy);  ; virtual ~RDisplayItem ();  ; virtual void BuildFullId (const std::string &prefix);  Build full id, including prefix and object index. ;  ; unsigned GetIndex () const;  ; std::string GetObjectID () const;  ; void SetIndex (unsigned indx);  ; void SetObjectID (const std::string &id);  ; void SetObjectIDAsPtr (const void *ptr);  Assign id using arbitrary pointer value Typically drawable pointer should be used here. ;  ; void SetStyle (RStyle *style);  . Protected Attributes; const RAttrMap * fAttr {nullptr};  temporary pointer on attributes ;  ; PadPrimitives_t fPrimitives;  display items for all primitives in the pad ;  ; std::vector< std::shared_ptr< RStyle > > fStyles;  ! locked styles of the objects and pad until streaming is performed ;  ;  Protected Attributes inherited from ROOT::Experimental::RDisplayItem; bool fDummy {false};  if true, just placeholder for drawable which does not changed ;  ; unsigned fIndex {0};  ! index inside current pad, used to produce fully-qualified id, not send to client ;  ; std::string fObjectID;  unique object identifier ;  ; RStyle * fStyle {nullptr};  style object ;  . Additional Inherited Members;  Static Public Member Functions inherited from ROOT::Experimental::RDisplayItem; static std::string ObjectIDFromPtr (const void *ptr);  Construct fillid using pointer value. ;  . #include <ROOT/RPadDisplayItem.hxx>. Inheritance diagram for ROOT::Experimental::RPadBaseDisplayItem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ PadPrimitives_t. using ROOT::Experimental::RPadBaseDisplayItem::PadPrimitives_t = std::vector<std::unique_ptr<RDisplayItem> >. Definition at line 31 of file RPadDisplayItem.hxx. Constructor & Destructor Documentation. ◆ RPadBa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RPadBaseDisplayItem.html:2076,inherit,inherited,2076,doc/master/classROOT_1_1Experimental_1_1RPadBaseDisplayItem.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RPadBaseDisplayItem.html,1,['inherit'],['inherited']
Modifiability,"tPainter::ESelectionBaseTGLPlotPainter::kHighColorSelectionBase; static TGLPlotPainter::ESelectionBaseTGLPlotPainter::kTrueColorSelectionBase. private:. TGL2DArray<TGLVector3>fAverageNormals; vector<Double_t>fColorLevels; TGL2DArray<pair<TGLVector3,TGLVector3> >fFaceNormals; TGL2DArray<TGLVertex3>fMesh; Rgl::Range_tfMinMaxVal; TStringfObjectInfo; TGLLevelPalettefPalette; TGLSurfacePainter::Projection_tfProj; Bool_tfSectionPass; TGL2DArray<Double_t>fTexMap; TGLSurfacePainter::ESurfaceTypefType; Bool_tfUpdateTexMap; list<TGLSurfacePainter::Projection_t>fXOYProj; list<TGLSurfacePainter::Projection_t>fXOZProj; list<TGLSurfacePainter::Projection_t>fYOZProj; static TRandom*fgRandom; static TGLSurfacePainter::ESurfaceTypekSurf; static TGLSurfacePainter::ESurfaceTypekSurf1; static TGLSurfacePainter::ESurfaceTypekSurf2; static TGLSurfacePainter::ESurfaceTypekSurf3; static TGLSurfacePainter::ESurfaceTypekSurf4; static TGLSurfacePainter::ESurfaceTypekSurf5. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLSurfacePainter(TH1* hist, TGLPlotCamera* camera, TGLPlotCoordinates* coord); Constructor. char * GetPlotInfo(Int_t px, Int_t py); Coords for point on surface under cursor. Bool_t InitGeometry(); Set mesh, normals. void StartPan(Int_t px, Int_t py); User clicks right mouse button (in a pad). void Pan(Int_t px, Int_t py); User's moving mouse cursor, with middle mouse button pressed (for pad).; Calculate 3d shift related to 2d mouse movement. void AddOption(const TString& stringOption); Additional options for surfaces. void ProcessEvent(Int_t event, Int_t px, Int_t py); Remove all profiles/sections. void InitGL() const; Initialize some OpenGL state variables. void DeInitGL() const; Initialize some OpenGL state variables. void SetNormals(); One normal per vertex;; this normal is average of; neighbouring triangles normals. void SetSurfaceColor() const; Set color for surface. void DrawPlot() const; Draw surf/surf1/surf2/surf4. Bool_t Init",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLSurfacePainter.html:5025,Inherit,Inheritance,5025,root/html602/TGLSurfacePainter.html,https://root.cern,https://root.cern/root/html602/TGLSurfacePainter.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tPainter::fPhysicalShapeColor; Int_tTGLPlotPainter::fSelectedPart; TGLSelectionBufferTGLPlotPainter::fSelection; Int_tTGLPlotPainter::fSelectionBase; Bool_tTGLPlotPainter::fSelectionPass; Bool_tTGLPlotPainter::fUpdateSelection; TAxis*TGLPlotPainter::fXAxis; Double_tTGLPlotPainter::fXOYSectionPos; Double_tTGLPlotPainter::fXOZSectionPos; TAxis*TGLPlotPainter::fYAxis; Double_tTGLPlotPainter::fYOZSectionPos; TAxis*TGLPlotPainter::fZAxis; vector<Double_t>TGLPlotPainter::fZLevels; static TGLPlotPainter::ESelectionBaseTGLPlotPainter::kHighColorSelectionBase; static TGLPlotPainter::ESelectionBaseTGLPlotPainter::kTrueColorSelectionBase. private:. TGLPlotCoordinatesfCartesianCoord; TAxisfCartesianXAxis; TAxisfCartesianYAxis; TAxisfCartesianZAxis; Int_tfColorScheme; TGLParametricEquation*fEquation; TGL2DArray<TGLParametricPlot::Vertex_t>fMesh; Int_tfMeshSize; Bool_tfShowMesh; static TGLParametricPlot::EMeshSizekHigh; static TGLParametricPlot::EMeshSizekLow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLParametricPlot(TGLParametricEquation* equation, TGLPlotCamera* camera); Constructor. Bool_t InitGeometry(); Build mesh. The surface is 'immutable':; the only reason to rebuild it - the change in size or; if one of equations contain reference to TF2 function, whose; parameters were changed. void StartPan(Int_t px, Int_t py); User clicks right mouse button (in a pad). void Pan(Int_t px, Int_t py); User's moving mouse cursor, with middle mouse button pressed (for pad).; Calculate 3d shift related to 2d mouse movement. char * GetPlotInfo(Int_t px, Int_t py); No object info yet. void AddOption(const TString& option); No additional options for parametric surfaces. void ProcessEvent(Int_t event, Int_t px, Int_t py); Change color/mesh size or switch on/off mesh/box cut.; Left double click - remove box cut. void InitGL() const; Initialize gl state. void DeInitGL() const; Initialize gl state. void DrawPlot() const; Draw parametric surface. vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLParametricPlot.html:4714,Inherit,Inheritance,4714,root/html602/TGLParametricPlot.html,https://root.cern,https://root.cern/root/html602/TGLParametricPlot.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tPainter::fUpdateSelection; TAxis*TGLPlotPainter::fXAxis; Double_tTGLPlotPainter::fXOYSectionPos; Double_tTGLPlotPainter::fXOZSectionPos; TAxis*TGLPlotPainter::fYAxis; Double_tTGLPlotPainter::fYOZSectionPos; TAxis*TGLPlotPainter::fZAxis; vector<Double_t>TGLPlotPainter::fZLevels. private:. vector<Double_t>fLevels; pair<double,double>fMinMaxVal; TGLLevelPalettefPalette; TStringfPlotInfo; TF1*fTransferFunc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLVoxelPainter(TH1* hist, TGLPlotCamera* camera, TGLPlotCoordinates* coord); Constructor.; This plot always needs a palette. char * GetPlotInfo(Int_t px, Int_t py); Show box info (i, j, k, binContent). Bool_t InitGeometry(); Set ranges, find min and max bin content. void StartPan(Int_t px, Int_t py); User clicks right mouse button (in a pad). void Pan(Int_t px, Int_t py); User's moving mouse cursor, with middle mouse button pressed (for pad).; Calculate 3d shift related to 2d mouse movement. void AddOption(const TString& stringOption); ""z"" draw palette or not. void ProcessEvent(Int_t event, Int_t px, Int_t py); Remove sections, switch on/off box cut. void InitGL() const; Initialize some gl state variables. void DeInitGL() const; Return back some gl state variables. void DrawPlot() const; Draw ""voxels"". void DrawSectionXOZ() const; Noop. void DrawSectionYOZ() const; Noop. void DrawSectionXOY() const; Noop. void DrawPalette() const; Draw. Palette. void DrawPaletteAxis() const; Draw. Palette. Axis. void PreparePalette() const; Generate palette. void FindVoxelColor(Double_t binContent, Float_t* rgba) const; Find box color. void SetVoxelColor(const Float_t* rgba) const; Set box color. TGLVoxelPainter(const TGLVoxelPainter& ). Bool_t HasSections() const. » Last changed: Thu Nov 3 20:15:07 2011 » Last generated: 2011-11-03 20:15; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLVoxelPainter.html:4559,variab,variables,4559,root/html532/TGLVoxelPainter.html,https://root.cern,https://root.cern/root/html532/TGLVoxelPainter.html,4,['variab'],['variables']
Modifiability,"tPainter::fYAxis; Double_tTGLPlotPainter::fYOZSectionPos; TAxis*TGLPlotPainter::fZAxis; vector<Double_t>TGLPlotPainter::fZLevels; static TGLPlotPainter::ESelectionBaseTGLPlotPainter::kHighColorSelectionBase; static TGLPlotPainter::ESelectionBaseTGLPlotPainter::kTrueColorSelectionBase. private:. vector<Double_t>fLevels; Rgl::Range_tfMinMaxVal; TGLLevelPalettefPalette; TStringfPlotInfo; TF1*fTransferFunc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLVoxelPainter(TH1* hist, TGLPlotCamera* camera, TGLPlotCoordinates* coord); Constructor.; This plot always needs a palette. char * GetPlotInfo(Int_t px, Int_t py); Show box info (i, j, k, binContent). Bool_t InitGeometry(); Set ranges, find min and max bin content. void StartPan(Int_t px, Int_t py); User clicks right mouse button (in a pad). void Pan(Int_t px, Int_t py); User's moving mouse cursor, with middle mouse button pressed (for pad).; Calculate 3d shift related to 2d mouse movement. void AddOption(const TString& stringOption); ""z"" draw palette or not. void ProcessEvent(Int_t event, Int_t px, Int_t py); Remove sections, switch on/off box cut. void InitGL() const; Initialize some gl state variables. void DeInitGL() const; Return back some gl state variables. void DrawPlot() const; Draw ""voxels"". void DrawSectionXOZ() const; Noop. void DrawSectionYOZ() const; Noop. void DrawSectionXOY() const; Noop. void DrawPalette() const; Draw. Palette. void DrawPaletteAxis() const; Draw. Palette. Axis. void PreparePalette() const; Generate palette. void FindVoxelColor(Double_t binContent, Float_t* rgba) const; Find box color. void SetVoxelColor(const Float_t* rgba) const; Set box color. TGLVoxelPainter(const TGLVoxelPainter& ). Bool_t HasSections() const. » Last changed: Tue Jun 30 14:54:56 2015 » Last generated: 2015-06-30 14:54; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLVoxelPainter.html:4762,variab,variables,4762,root/html602/TGLVoxelPainter.html,https://root.cern,https://root.cern/root/html602/TGLVoxelPainter.html,4,['variab'],['variables']
Modifiability,"tParDataSet(); const RooFitResult*fitResult(Int_t sampleNum) const; const RooAbsData*genData(Int_t sampleNum) const; Bool_tgenerate(Int_t nSamples, Int_t nEvtPerSample = 0, Bool_t keepGenData = kFALSE, const char* asciiFilePat = 0); Bool_tgenerateAndFit(Int_t nSamples, Int_t nEvtPerSample = 0, Bool_t keepGenData = kFALSE, const char* asciiFilePat = 0); const RooDataSet*genParDataSet() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooMCStudy.html:4457,Inherit,InheritsFrom,4457,root/html532/RooMCStudy.html,https://root.cern,https://root.cern/root/html532/RooMCStudy.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tParDataSet(); const RooFitResult*fitResult(Int_t sampleNum) const; const RooAbsData*genData(Int_t sampleNum) const; Bool_tgenerate(Int_t nSamples, Int_t nEvtPerSample = 0, Bool_t keepGenData = kFALSE, const char* asciiFilePat = 0); Bool_tgenerateAndFit(Int_t nSamples, Int_t nEvtPerSample = 0, Bool_t keepGenData = kFALSE, const char* asciiFilePat = 0); const RooDataSet*genParDataSet() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooMCStudy.html:3817,Inherit,InheritsFrom,3817,root/html602/RooMCStudy.html,https://root.cern,https://root.cern/root/html602/RooMCStudy.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tParamConstrained(""m"",""c"",""D""); will create the parameters \( m_A,m_B,m_C \) and a formula expression \( m_D \) that evaluates to \( (1-(m_A+m_B+m_C)) \). Constrained splits can also be specified in the product of categories. In that case, the name of the remainder state follows the syntax ""{State1;State2}"", where State1 and State2 are the state names of the two spitting categories. Splitting multiple PDFs; The examples so far deal with a single prototype PDF. It is also possible to build with multiple prototype PDFs by specifying a mapping between the prototype to use and the names of states of a ""master"" splitting category. To specify these configurations, an intermediate MultiBuildConfig must be composed with all the necessary specifications. This, for example, RooSimWSTool::MultiBuildConfig mbc(""mc"");; mbc.addPdf(""I"",""G"",SplitParam(""m,s"",""c""));; mbc.addPdf(""II,III"",""F"",SplitParam(""a"",""c,d""));; RooSimWSTool::MultiBuildConfigDefinition RooSimWSTool.h:124; configures a build with two prototype PDFs \( G \) and \( F \). Prototype \( G \) is used for state ""I"" of the master split category mc and prototype \( F \) is used for states ""II"" and ""III"" of the master split category mc. Furthermore, the parameters \( m,s \) of prototype \( G \) are split in category \( c \) while the parameter \( a \) of prototype \( F \) is split in the product of the categories \( c \) and \( d \). The actual build is then performed by passing the build configuration to RooSimWSTool, e.g., wst.build(""MASTER"", mbc);; By default, a specialisation is built for each permutation of states of the splitting categories that are used. It is possible to restrict the building of specialised PDFs to a subset of states by adding a restriction on the number of states to build as follows: mbc.restrictBuild(""c"",""A,B"");; The restrictBuild method can be called multiple times, but at most once for each splitting category in use. For simple builds with a single prototype, restriction can be specified with a R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimWSTool.html:3006,config,configures,3006,doc/master/classRooSimWSTool.html,https://root.cern,https://root.cern/doc/master/classRooSimWSTool.html,1,['config'],['configures']
Modifiability,"tParameter (TCollection *c, const char *par, TString &value);  Get the value from the specified parameter from the specified collection. ;  ; static void LogViewer (const char *url=0, Int_t sessionidx=0);  Start the log viewer window usign the plugin manager. ;  ; static TProofMgr * Mgr (const char *url);  Get instance of the effective manager for 'url' Return 0 on failure. ;  ; static TProof * Open (const char *url=0, const char *conffile=0, const char *confdir=0, Int_t loglevel=0);  Start a PROOF session on a specific cluster. ;  ; static void Reset (const char *url, Bool_t hard=kFALSE);  Wrapper around TProofMgr::Reset(...). ;  ; static void ResetEnvVars ();  Clear the list of environment variables passed to proofserv on the master and slaves. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This me",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:34494,inherit,inherited,34494,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,8,['inherit'],['inherited']
Modifiability,"tParameter ; (; Int_t ; param); const. Return parameter value given by integer. ; Definition at line 2847 of file TFormula.cxx. ◆ GetParameters() [1/2]. Double_t * TFormula::GetParameters ; (; ); const. Definition at line 2873 of file TFormula.cxx. ◆ GetParameters() [2/2]. void TFormula::GetParameters ; (; Double_t * ; params); const. Definition at line 2880 of file TFormula.cxx. ◆ GetParName(). const char * TFormula::GetParName ; (; Int_t ; ipar); const. Return parameter name given by integer. ; Definition at line 2859 of file TFormula.cxx. ◆ GetParNumber(). Int_t TFormula::GetParNumber ; (; const char * ; name); const. Return parameter index given a name (return -1 for not existing parameters) non need to print an error. ; Definition at line 2821 of file TFormula.cxx. ◆ GetUniqueFuncName(). TString TFormula::GetUniqueFuncName ; (; ); const. inline . Definition at line 253 of file TFormula.h. ◆ GetVariable(). Double_t TFormula::GetVariable ; (; const char * ; name); const. Returns variable value. ; Definition at line 2686 of file TFormula.cxx. ◆ GetVarName(). TString TFormula::GetVarName ; (; Int_t ; ivar); const. Returns variable name given its position in the array. ; Definition at line 2712 of file TFormula.cxx. ◆ GetVarNumber(). Int_t TFormula::GetVarNumber ; (; const char * ; name); const. Returns variable number (positon in array) given its name. ; Definition at line 2699 of file TFormula.cxx. ◆ GradientPar() [1/2]. void TFormula::GradientPar ; (; const Double_t * ; x, . Double_t * ; result . ). Compute the gradient with respect to the parameter passing a buffer with a size at least equal to the number of parameters. ; Note that the result buffer needs to be initialized to zero before passed to this function. ; Definition at line 3249 of file TFormula.cxx. ◆ GradientPar() [2/2]. void TFormula::GradientPar ; (; const Double_t * ; x, . TFormula::CladStorage & ; result . ). Compute the gradient employing automatic differentiation. ; a CladStorageObject, i.e.; Pa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormula.html:38490,variab,variable,38490,doc/master/classTFormula.html,https://root.cern,https://root.cern/doc/master/classTFormula.html,1,['variab'],['variable']
Modifiability,"tParameter(TCollection* c, const char* par, Double_t& value); Get the value from the specified parameter from the specified collection.; Returns -1 in case of error (i.e. list is 0, parameter does not exist; or value type does not match), 0 otherwise. Int_t AssertDataSet(TDSet* dset, TList* input, TDataSetManager* mgr, TString& emsg); Make sure that dataset is in the form to be processed. This may mean; retrieving the relevant info from the dataset manager or from the; attached input list.; Returns 0 on success, -1 on error. Int_t SaveInputData(TQueryResult* qr, const char* cachedir, TString& emsg); Save input data file from 'cachedir' into the sandbox or create a the file; with input data objects. Int_t SendInputData(TQueryResult* qr, TProof* p, TString& emsg); Send the input data file to the workers. Int_t GetInputData(TList* input, const char* cachedir, TString& emsg); Get the input data from the file defined in the input list. void LogViewer(const char* url = 0, Int_t sessionidx = 0); Start the log viewer window usign the plugin manager. void SetProgressDialog(Bool_t on = kTRUE); Enable/Disable the graphic progress dialog.; By default the dialog is enabled. void ShowMissingFiles(TQueryResult* qr = 0); Show information about missing files during query described by 'qr' or the; last query if qr is null (default).; A short summary is printed in the end. TFileCollection * GetMissingFiles(TQueryResult* qr = 0); Get a TFileCollection with the files missing in the query described by 'qr'; or the last query if qr is null (default).; Return a null pointer if none were found, for whatever reason.; The caller is responsible for the returned object. TProofInterruptHandler& operator=(const TProof& ). Int_t GetPort(); { return fPort; }. TProof(const TProof& ). Int_t Broadcast(const TMessage& mess, TList* slaves). Int_t Broadcast(const TMessage &mess, ESlaves list = kActive). TList * GetListOfSlaves() const; { return fSlaves; }. TList * GetListOfInactiveSlaves() const; { return",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProof.html:87681,plugin,plugin,87681,root/html528/TProof.html,https://root.cern,https://root.cern/root/html528/TProof.html,4,['plugin'],['plugin']
Modifiability,"tParameter(TCollection* c, const char* par, Double_t& value); Get the value from the specified parameter from the specified collection.; Returns -1 in case of error (i.e. list is 0, parameter does not exist; or value type does not match), 0 otherwise. Int_t AssertDataSet(TDSet* dset, TList* input, TDataSetManager* mgr, TString& emsg); Make sure that dataset is in the form to be processed. This may mean; retrieving the relevant info from the dataset manager or from the; attached input list.; Returns 0 on success, -1 on error. Int_t SaveInputData(TQueryResult* qr, const char* cachedir, TString& emsg); Save input data file from 'cachedir' into the sandbox or create a the file; with input data objects. Int_t SendInputData(TQueryResult* qr, TProof* p, TString& emsg); Send the input data file to the workers. Int_t GetInputData(TList* input, const char* cachedir, TString& emsg); Get the input data from the file defined in the input list. void LogViewer(const char* url = 0, Int_t sessionidx = 0); Start the log viewer window usign the plugin manager. void SetProgressDialog(Bool_t on = kTRUE); Enable/Disable the graphic progress dialog.; By default the dialog is enabled. void ShowMissingFiles(TQueryResult* qr = 0); Show information about missing files during query described by 'qr' or the; last query if qr is null (default).; A short summary is printed in the end. TFileCollection * GetMissingFiles(TQueryResult* qr = 0); Get a TFileCollection with the files missing in the query described by 'qr'; or the last query if qr is null (default).; Return a null pointer if none were found, for whatever reason.; The caller is responsible for the returned object. void SetPerfTree(const char* pf = ""perftree.root"", Bool_t withWrks = kFALSE); Enable/Disable saving of the performance tree. Int_t SavePerfTree(const char* pf = 0, const char* qref = 0); Save performance information from TPerfStats to file 'pf'.; If 'ref' is defined, do it for query 'ref'.; Return 0 on sucecss, -1 in case of any ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProof.html:101500,plugin,plugin,101500,root/html534/TProof.html,https://root.cern,https://root.cern/root/html534/TProof.html,6,['plugin'],['plugin']
Modifiability,"tParameters(). void TFormula::DoSetParameters ; (; const Double_t * ; p, . Int_t ; size . ). protected . Definition at line 2949 of file TFormula.cxx. ◆ Eval(). template<typename... Args> . Double_t TFormula::Eval ; (; Args... ; args); const. Set first 1, 2, 3 or 4 variables (e.g. ; x, y, z and t) and evaluate formula. ; Definition at line 324 of file TFormula.h. ◆ EvalPar() [1/2]. Double_t TFormula::EvalPar ; (; const Double_t * ; x, . const Double_t * ; params = nullptr . ); const. Definition at line 3078 of file TFormula.cxx. ◆ EvalPar() [2/2]. template<class T > . T TFormula::EvalPar ; (; const T * ; x, . const Double_t * ; params = nullptr . ); const. inline . Definition at line 244 of file TFormula.h. ◆ ExtractFunctors(). void TFormula::ExtractFunctors ; (; TString & ; formula). protected . Extracts functors from formula, and put them in fFuncs. ; Simple grammar:; <function> := name(arg1,arg2...); <variable> := name; <parameter> := [number]; <name> := String containing lower and upper letters, numbers, underscores; <number> := Integer number Operators are omitted. . Definition at line 1832 of file TFormula.cxx. ◆ FillDefaults(). void TFormula::FillDefaults ; (; ). private . Fill structures with default variables, constants and function shortcuts. ; Definition at line 902 of file TFormula.cxx. ◆ FillParametrizedFunctions(). void TFormula::FillParametrizedFunctions ; (; std::map< std::pair< TString, Int_t >, std::pair< TString, TString > > & ; functions). private . Fill map with parametrized functions. ; Definition at line 2417 of file TFormula.cxx. ◆ FillVecFunctionsShurtCuts(). void TFormula::FillVecFunctionsShurtCuts ; (; ). private . Fill the shortcuts for vectorized functions We will replace for example sin with vecCore::Mat::Sin. ; Definition at line 970 of file TFormula.cxx. ◆ GenerateGradientPar(). bool TFormula::GenerateGradientPar ; (; ). Generate gradient computation routine with respect to the parameters. ; returns true on success.; Returnstrue if a ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormula.html:34404,variab,variable,34404,doc/master/classTFormula.html,https://root.cern,https://root.cern/doc/master/classTFormula.html,1,['variab'],['variable']
Modifiability,"tParameters(const RooArgSet* depList, Bool_t stripDisconnected = kTRUE) const; const Text_t*RooAbsArg::getStringAttribute(const Text_t* key) const; virtual const char*TNamed::GetTitle() const; Bool_tRooAbsArg::getTransientAttribute(const Text_t* name) const; virtual UInt_tTObject::GetUniqueID() const; virtual const char*getVal() const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tisFundamental() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStringVar.html:7209,Inherit,InheritsFrom,7209,root/html532/RooStringVar.html,https://root.cern,https://root.cern/root/html532/RooStringVar.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tParameters(const RooArgSet* depList, Bool_t stripDisconnected = kTRUE) const; const Text_t*RooAbsArg::getStringAttribute(const Text_t* key) const; virtual const char*TNamed::GetTitle() const; Bool_tRooAbsArg::getTransientAttribute(const Text_t* name) const; virtual UInt_tTObject::GetUniqueID() const; virtual const char*getVal() const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tisIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRoo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsString.html:7783,Inherit,InheritsFrom,7783,root/html534/RooAbsString.html,https://root.cern,https://root.cern/root/html534/RooAbsString.html,3,['Inherit'],['InheritsFrom']
Modifiability,"tParameters(const RooArgSet* depList, Bool_t stripDisconnected = kTRUE) const; const Text_t*RooAbsArg::getStringAttribute(const Text_t* key) const; virtual const char*TNamed::GetTitle() const; Bool_tRooAbsArg::getTransientAttribute(const Text_t* name) const; virtual UInt_tTObject::GetUniqueID() const; virtual const char*getVal() const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tisFundamental() const; virtual Bool_tRooAbsString::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStringVar.html:7677,Inherit,InheritsFrom,7677,root/html534/RooStringVar.html,https://root.cern,https://root.cern/root/html534/RooStringVar.html,3,['Inherit'],['InheritsFrom']
Modifiability,"tParms(); set the test params. void FillRealParmsDef(); set default real params. void FillIntParmsDef(); set default int params. Bool_t WriteAll(); write all files read by rf_go.exe. Bool_t WriteIntParms(); write int params file. Bool_t WriteRealParms(); write int params file. Bool_t WriteLx(); Save input variable mask. If the lx vector size is not the same as inputVars,; resize it and fill it with 1; NOTE: Always set all to 1; if (fRFLx.size() != m_inputVars->size()) {. Bool_t WriteProgram(); write command to rf_go.exe. Bool_t WriteRealVarImp(); write the minimum importance to be considered. Bool_t WriteRfOut(); written by rf_go.exe; write rulefit output (rfout). Bool_t WriteRfStatus(); written by rf_go.exe; write rulefit status. Bool_t WriteRuleFitMod(); written by rf_go.exe (NOTE:Format unknown!). Bool_t WriteRuleFitSum(); written by rf_go.exe (NOTE: format unknown!). Bool_t WriteTrain(); write training data, columnwise. Bool_t WriteTest(); Write test data. Bool_t WriteVarNames(); write variable names, ascii. Bool_t WriteVarImp(); written by rf_go.exe. Bool_t WriteYhat(); written by rf_go.exe. Bool_t ReadYhat(); read the score. Bool_t ReadVarImp(); read variable importance. Bool_t ReadModelSum(); read model from rulefit.sum. Int_t RunRuleFit(); execute rf_go.exe. void TrainRuleFit(). void TestRuleFit(). void VarImp(). TString GetRFName(TString name). Bool_t OpenRFile(TString name, ofstream& f). Bool_t OpenRFile(TString name, ifstream& f). Bool_t WriteInt(ofstream& f, const Int_t* v, Int_t n = 1). Bool_t WriteFloat(ofstream& f, const Float_t* v, Int_t n = 1). Int_t ReadInt(ifstream& f, Int_t* v, Int_t n = 1) const. Int_t ReadFloat(ifstream& f, Float_t* v, Int_t n = 1) const. RuleFitAPI(const TMVA::MethodRuleFit* rfbase, TMVA::RuleFit* rulefit, TMVA::EMsgType minType). const TString GetRFWorkDir() const; Get working directory. { return fRFWorkDir; }. void SetRFTrain(); set rf_go.exe running mode. { fRFProgram = kRfTrain; }. void SetRFPredict(); { fRFProgram = kRfPre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__RuleFitAPI.html:4595,variab,variable,4595,root/html528/TMVA__RuleFitAPI.html,https://root.cern,https://root.cern/root/html528/TMVA__RuleFitAPI.html,10,['variab'],['variable']
Modifiability,"tPhysical(); virtual voidTGLLogicalShape::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals(). protected:. voidTGLLogicalShape::PurgeDLRange(UInt_t base, Int_t size) const. Data Members; public:. enum TGLLogicalShape::ELODAxes { kLODAxesNone; kLODAxesX; kLODAxesY; kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. private:. Double_tfRadiusSphere radius. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLSphere(const TBuffer3DSphere& buffer); Default ctor. UInt_t DLOffset(Short_t lod) const; Return display-list offset for given LOD.; Calculation based on what is done in virtual QuantizeShapeLOD below. Short_t QuantizeShapeLOD(Short_t shapeLOD, Short_t combiLOD) const; Factor in scene/viewer LOD and quantize. void DirectDraw(TGLRnrCtx& rnrCtx) const; Debug tracing. ELODAxes SupportedLODAxes() const; { return kLODAxesAll; }. » Author: Timur Pocheptsov 03/08/2004 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-03-13 19:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLSphere.html:3597,Inherit,Inheritance,3597,root/html534/TGLSphere.html,https://root.cern,https://root.cern/root/html534/TGLSphere.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringfBaseFilePathPath to HDU's file excluding filter; TFITSHDU::Cell*fCellsTable cells (when fType == kTableHDU). Cells are ordered in the following way:; TFITSHDU::Column*fColumnsInfoInformation about columns (when fType == kTableHDU); TStringfExtensionNameExtension Name; TStringfFilePathPath to HDU's file including filter; Int_tfNColumnsNumber of columns (when fType == kTableHDU); Int_tfNRecordsNumber of records; Int_tfNRowsNumber of rows (when fType == kTableHDU); TStringTNamed::fNameobject identifier; Int_tfNumberHDU number (1=PRIMARY); TArrayD*fPixelsImage pixels (when fType == kImageHDU); TFITSHDU::HDURecord*fRecordsHDU metadata records; TArrayI*fSizesImage sizes in each dimension (when fType == kImageHDU); TStringTNamed::fTitleobject title; TFITSHDU::EHDUTypesfTypeHDU type. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void CleanFilePath(const char* filepath_with_filter, TString& dst); Clean path from possible filter and put the result in 'dst'. TFITSHDU(const char* filepath_with_filter); TFITSHDU constructor from file path with HDU selection filter.; Please refer to CFITSIO manual for more information about; HDU selection filters.; Examples:; - TFITSHDU(""/path/to/myfile.fits""): just open the PRIMARY HDU; - TFITSHDU(""/path/to/myfile.fits[1]""): open HDU #1; - TFITSHDU(""/path/to/myfile.fits[PICS]""): open HDU called 'PICS'; - TFITSHDU(""/path/to/myfile.fits[ACQ][EXPOSURE > 5]""): open the (table) HDU called 'ACQ' and; selects the rows that have column 'EXPOSURE'; greater than 5. TFITSHDU(const char* filepath, Int_t extension_number); TFITSHDU constructor from filepath and extension number. TFITSHDU(const char* filepath, const char* extension_name); TFITSHDU constructor from filepath and extension name. ~TFITSHDU(); TFITSHDU destructor. void _release_resou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFITSHDU.html:7838,Inherit,Inheritance,7838,root/html534/TFITSHDU.html,https://root.cern,https://root.cern/root/html534/TFITSHDU.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TColorGradient::ECoordinateModekObjectBoundingMode; static TObject::(anonymous)TObject::kOverwrite; static TColorGradient::ECoordinateModekPadMode; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; Int_tTColor::fNumberColor number identifier; TStringTNamed::fTitleobject title. private:. vector<Double_t>fColorPositions; vector<Double_t>fColorsRGBA values.; TColorGradient::ECoordinateModefCoordinateMode. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TColorGradient(). TColorGradient(Color_t newColor, UInt_t nPoints, const Double_t* points, const Color_t* colorIndices, TColorGradient::ECoordinateMode mode = kObjectBoundingMode); I have no way to validate parameters here, so it's up to user; to pass correct arguments. TColorGradient(Color_t newColor, UInt_t nPoints, const Double_t* points, const Double_t* colors, TColorGradient::ECoordinateMode mode = kObjectBoundingMode); I have no way to validate parameters here, so it's up to user; to pass correct arguments. void ResetColor(UInt_t nPoints, const Double_t* points, const Color_t* colorIndices). void ResetColor(UInt_t nPoints, const Double_t* points, const Double_t* colorIndices). void SetCoordinateMode(TColorGradient::ECoordinateMode mode). const Double_t * GetColorPositions() const. const Double_t * GetColors() const. void RegisterColor(Color_t colorIndex). TColorGradient(). TColorGradient(Color_t newColor, UInt_t nPoints, const Do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TColorGradient.html:10457,Inherit,Inheritance,10457,root/html602/TColorGradient.html,https://root.cern,https://root.cern/root/html602/TColorGradient.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; CatVector * addCategory (RooAbsCategory *cat);  ; RealVector * addReal (RooAbsReal *real);  ; RealFullVector * addRealFull (RooAbsReal *real);  ; void forceCacheUpdate () override;  ; bool hasAsymError (RooAbsReal *real);  ; bool hasError (RooAbsReal *real);  ; bool hasFilledCache () const override;  ; bool isFullReal (RooAbsReal *real);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; void reserve (Int_t nEvt);  ; void setAllBuffersNative ();  ; RooArgSet varsNoWeight (const RooArgSet &allVars, const char *wgtName);  Utility function for constructors Return RooArgSet that is copy of allVars minus variable matching wgtName if specified. ;  ; RooRealVar * weightVar (const RooArgSet &allVars, const char *wgtName);  Utility function for constructors Return pointer to weight variable if it is defined. ;  . Private Attributes; RooVectorDataStore * _cache = nullptr;  ! Optimization cache ;  ; RooAbsArg * _cacheOwner = nullptr;  ! Cache owner ;  ; std::vector< CatVector * > _catStoreList;  ; ULong64_t _currentWeightIndex {0};  ; const double * _extSumW2Array = nullptr;  ! External sum of weights array ;  ; const double * _extWgtArray = nullptr;  ! External weight array ;  ; const double * _extWgtErrHiArray = nullptr;  ! External weight array - high error ;  ; const double * _extWgtErrLoArray = nullptr;  ! External weight array - low error ;  ; bool _forcedUpdate = false;  ! Request for forced cache update ;  ; std::vector< RealFullVector * > _realfStoreList;  ; std::vector< RealVector ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooVectorDataStore.html:20002,variab,variable,20002,doc/master/classRooVectorDataStore.html,https://root.cern,https://root.cern/doc/master/classRooVectorDataStore.html,1,['variab'],['variable']
Modifiability,"tProcInfo(ProcInfo_t* info) const; virtual intGetServiceByName(const char* service); virtual char*GetServiceByPort(int port); virtual TInetAddressGetSockName(int sock); virtual intGetSockOpt(int sock, int kind, int* val); virtual const char*GetSoExt() const; virtual intGetSysInfo(SysInfo_t* info) const; virtual const char*TNamed::GetTitle() const; virtual Int_tGetUid(const char* user = 0); virtual UInt_tTObject::GetUniqueID() const; virtual UserGroup_t*GetUserInfo(Int_t uid); virtual UserGroup_t*GetUserInfo(const char* user = 0); virtual TList*GetVolumes(Option_t*) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual const char*HomeDirectory(const char* userName = 0); virtual const char*HostName(); virtual voidIgnoreInterrupt(Bool_t ignore = kTRUE); virtual voidIgnoreSignal(ESignals sig, Bool_t ignore = kTRUE); Bool_tInControl() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tInit(); virtual voidInnerLoop(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsAbsoluteFileName(const char* dir); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFileInIncludePath(const char* name, char** fullpath = 0); virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsPathLocal(const char* path); virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual intLink(const char* from, const char* to); virtual voidListLibraries(const char* regexp = """"); virtual voidListSymbols(const char* module, const char* re = """"); virtual intLoad(const char* module, const char* entry = """", Bool_t system = kFALSE); virtual voidTNamed::ls(Option_t* option = """") const; virtual intMakeDirectory(const char* name); voidTObject::MayNotUse(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSystem.html:7660,Inherit,InheritsFrom,7660,root/html532/TSystem.html,https://root.cern,https://root.cern/root/html532/TSystem.html,4,['Inherit'],['InheritsFrom']
Modifiability,"tProjected ; (; ). inlineoverride . Definition at line 138 of file TEveStraightLineSet.h. Member Function Documentation. ◆ Class(). static TClass * TEveStraightLineSetProjected::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TEveStraightLineSetProjected::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TEveStraightLineSetProjected::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 144 of file TEveStraightLineSet.h. ◆ DeclFileName(). static const char * TEveStraightLineSetProjected::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 144 of file TEveStraightLineSet.h. ◆ GetProjectedAsElement(). TEveElement * TEveStraightLineSetProjected::GetProjectedAsElement ; (; ). inlineoverridevirtual . Returns this projected dynamic-casted to TEveElement. ; This is needed as class TEveProjected is used as secondary inheritance. ; Reimplemented from TEveProjected.; Definition at line 142 of file TEveStraightLineSet.h. ◆ IsA(). TClass * TEveStraightLineSetProjected::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TEveStraightLineSet.; Definition at line 144 of file TEveStraightLineSet.h. ◆ operator=(). TEveStraightLineSetProjected & TEveStraightLineSetProjected::operator= ; (; const TEveStraightLineSetProjected & ; ). private . ◆ SetDepthLocal(). void TEveStraightLineSetProjected::SetDepthLocal ; (; Float_t ; d). overrideprotectedvirtual . Set depth (z-coordinate) of the projected points. ; Reimplemented from TEveProjected.; Definition at line 229 of file TEveStraightLineSet.cxx. ◆ SetProjection(). void TEveStraightLineSetProjected::SetProjection ; (; TEveProjectionManager * ; mng, . TEveProjectable * ; model . ). overridevirtual . Set projection manager and model object. ; Reimplemented from TEveProjected.; Definition",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveStraightLineSetProjected.html:47465,inherit,inheritance,47465,doc/master/classTEveStraightLineSetProjected.html,https://root.cern,https://root.cern/doc/master/classTEveStraightLineSetProjected.html,1,['inherit'],['inheritance']
Modifiability,"tProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TF1 * _func = nullptr;  ; RooListProxy _list;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTFnPdfBinding.html:67722,config,configuration,67722,doc/master/classRooTFnPdfBinding.html,https://root.cern,https://root.cern/doc/master/classRooTFnPdfBinding.html,1,['config'],['configuration']
Modifiability,"tProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooCFunction4Ref< VO, VI1, VI2, VI3, VI4 > func;  ; RooRealProxy w;  ; RooRealProxy x;  ; RooRealProxy y;  ; RooRealProxy z;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction4PdfBinding.html:68077,config,configuration,68077,doc/master/classRooCFunction4PdfBinding.html,https://root.cern,https://root.cern/doc/master/classRooCFunction4PdfBinding.html,1,['config'],['configuration']
Modifiability,"tProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; bool _cdfBoundaries = false;  Use boundary conditions for CDFs. ;  ; RooAICRegistry _codeReg;  ! Auxiliary class keeping tracking of analytical integration code ;  ; RooDataHist * _dataHist = nullptr;  Unowned pointer to underlying histogram. ;  ; RooSetProxy _depList;  List of observables mapped onto histogram observables. ;  ; RooArgSet _histObsList;  List of observables defining dimensions of histogram. ;  ; Int_t _intOrder = 0;  Interpolation order. ;  ; std::unique_ptr< RooDataHist > _ownedDataHist;  ! Owned pointer to underlying histogram ;  ; double _totVolume = 0.0;  ! Total volume of space (product of ranges of observables) ;  ; bool _unitNorm = false;  ! Assume contents is unit normalized (for use as pdf cache) ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooHistFunc.html:57293,inherit,inherited,57293,doc/master/classRooHistFunc.html,https://root.cern,https://root.cern/doc/master/classRooHistFunc.html,1,['inherit'],['inherited']
Modifiability,"tProxy in the proxy list. ;  ; void setProxyNormSet (const RooArgSet *nset);  Forward a change in the cached normalization argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; double fErrorTol;  ; bool fForceSum;  ; bool fHasIssuedConvWarning;  ; bool fHasIssuedSumWarning;  ; Int_t fMaxIters;  ; RooRealProxy k;  ; RooRealProxy lambda;  ; RooRealProxy x;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullva",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNonCentralChiSquare.html:68654,inherit,inherited,68654,doc/master/classRooNonCentralChiSquare.html,https://root.cern,https://root.cern/doc/master/classRooNonCentralChiSquare.html,1,['inherit'],['inherited']
Modifiability,"tProxyNormSet(const RooArgSet* nset); voidRooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. RooBlindTools_blindEngine; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooUnblindOffset.html:31944,Config,ConfigChange,31944,root/html534/RooUnblindOffset.html,https://root.cern,https://root.cern/root/html534/RooUnblindOffset.html,2,['Config'],['ConfigChange']
Modifiability,"tProxyNormSet(const RooArgSet* nset); voidRooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. RooBlindTools_blindEngineBlinding engine; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooUnblindPrecision.html:32083,Config,ConfigChange,32083,root/html534/RooUnblindPrecision.html,https://root.cern,https://root.cern/root/html534/RooUnblindPrecision.html,1,['Config'],['ConfigChange']
Modifiability,"tProxyNormSet(const RooArgSet* nset); voidRooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. RooListProxy_actualVarsActual parameters used by formula engine; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooFormulaVar.html:32073,Config,ConfigChange,32073,root/html534/RooFormulaVar.html,https://root.cern,https://root.cern/root/html534/RooFormulaVar.html,1,['Config'],['ConfigChange']
Modifiability,"tProxyNormSet(const RooArgSet* nset); voidRooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. RooRealProxy_asym; RooBlindTools_blindEngine; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooUnblindCPAsymVar.html:31940,Config,ConfigChange,31940,root/html534/RooUnblindCPAsymVar.html,https://root.cern,https://root.cern/root/html534/RooUnblindCPAsymVar.html,1,['Config'],['ConfigChange']
Modifiability,"tProxyNormSet(const RooArgSet* nset); voidRooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. map<Int_t,Int_t>_binMap; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteVa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ParamHistFunc.html:31875,Config,ConfigChange,31875,root/html534/ParamHistFunc.html,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html,1,['Config'],['ConfigChange']
Modifiability,"tProxyNormSet(const RooArgSet* nset); voidRooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. map<Int_t,std::pair<const RooArgSet*,const RooArgSet*> >RooAbsCachedReal::_anaIntMap! Map for analytical integration codes; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsSelfCachedReal.html:32584,Config,ConfigChange,32584,root/html534/RooAbsSelfCachedReal.html,https://root.cern,https://root.cern/root/html534/RooAbsSelfCachedReal.html,2,['Config'],['ConfigChange']
Modifiability,"tProxyNormSet(const RooArgSet* nset); voidRooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. map<Int_t,std::pair<const RooArgSet*,const RooArgSet*> >RooAbsCachedReal::_anaIntMap! Map for analytical integration codes; stringRooNumRunningInt::_binningNameName of binning to be used for cache histogram; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooNumCdf.html:32482,Config,ConfigChange,32482,root/html534/RooNumCdf.html,https://root.cern,https://root.cern/root/html534/RooNumCdf.html,1,['Config'],['ConfigChange']
Modifiability,"tProxyNormSet(const RooArgSet* nset); voidRooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. map<Int_t,std::pair<const RooArgSet*,const RooArgSet*> >RooAbsCachedReal::_anaIntMap! Map for analytical integration codes; string_binningNameName of binning to be used for cache histogram; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooNumRunningInt.html:32571,Config,ConfigChange,32571,root/html534/RooNumRunningInt.html,https://root.cern,https://root.cern/root/html534/RooNumRunningInt.html,1,['Config'],['ConfigChange']
Modifiability,"tProxyNormSet(const RooArgSet* nset); voidRooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. map<Int_t,std::pair<const RooArgSet*,const RooArgSet*> >_anaIntMap! Map for analytical integration codes; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsCachedReal.html:32453,Config,ConfigChange,32453,root/html534/RooAbsCachedReal.html,https://root.cern,https://root.cern/root/html534/RooAbsCachedReal.html,1,['Config'],['ConfigChange']
Modifiability,"tProxyNormSet(const RooArgSet* nset); voidRooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. map<std::string,std::vector<BarlowCache> >_barlowCache; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HistFactory__RooBarlowBeestonLL.html:31495,Config,ConfigChange,31495,root/html534/RooStats__HistFactory__RooBarlowBeestonLL.html,https://root.cern,https://root.cern/root/html534/RooStats__HistFactory__RooBarlowBeestonLL.html,1,['Config'],['ConfigChange']
Modifiability,"tProxyNormSet(const RooArgSet* nset); voidRooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/PiecewiseInterpolation.html:31465,Config,ConfigChange,31465,root/html534/PiecewiseInterpolation.html,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html,46,['Config'],['ConfigChange']
Modifiability,"tProxy_CheckExact for ObjectProxy's only); and it allows conversions; of void* to an ObjectProxy and vice versa. Function Members (Methods); public:. TPython(); TPython(const TPython&); virtual~TPython(); static Bool_tBind(TObject* object, const char* label); static TClass*Class(); static const TPyReturnEval(const char* expr); static Bool_tExec(const char* cmd); static voidExecScript(const char* name, int argc = 0, const char** argv = 0); virtual TClass*IsA() const; static voidLoadMacro(const char* name); static void*ObjectProxy_AsVoidPtr(PyObject* pyobject); static Bool_tObjectProxy_Check(PyObject* pyobject); static Bool_tObjectProxy_CheckExact(PyObject* pyobject); static PyObject*ObjectProxy_FromVoidPtr(void* addr, const char* classname); TPython&operator=(const TPython&); static voidPrompt(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). private:. static Bool_tInitialize(). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t Initialize(); Private initialization method: setup the python interpreter and load the; ROOT module. void LoadMacro(const char* name); Execute the give python script as if it were a macro (effectively an; execfile in __main__), and create CINT equivalents for any newly available; python classes. void ExecScript(const char* name, int argc = 0, const char** argv = 0); Execute a python stand-alone script, with argv CLI arguments. example of use:; const char* argv[] = { ""1"", ""2"", ""3"" };; TPython::ExecScript( ""test.py"", sizeof(argv)/sizeof(argv[0]), argv );. Bool_t Exec(const char* cmd); Execute a python statement (e.g. ""import ROOT""). const TPyReturn Eval(const char* expr); Evaluate a python expression (e.g. ""ROOT.TBrowser()""). Caution: do not hold on to the return value: either store it in a builtin; type (implicit casting will work), or in a pointer to a ROOT object (explicit; casting to a void* is required). Bool_t Bind(TObject* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPython.html:3085,Inherit,Inheritance,3085,root/html532/TPython.html,https://root.cern,https://root.cern/root/html532/TPython.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tProxy _olist;  ; RooListProxy _plist;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTFnBinding.html:55742,inherit,inherited,55742,doc/master/classRooTFnBinding.html,https://root.cern,https://root.cern/doc/master/classRooTFnBinding.html,1,['inherit'],['inherited']
Modifiability,"tQuota ; (; const char * ; optStr = """"). returns a map of the quotas of all groups ; Definition at line 11276 of file TProof.cxx. ◆ GetDataSets(). TMap * TProof::GetDataSets ; (; const char * ; uri = """", . const char * ; optStr = """" . ). virtual . Lists all datasets that match given uri. ; The 'optStr' can contain a comma-separated list of servers for which the information is wanted. If ':lite:' (case insensitive) is specified in 'optStr' only the global information in the TFileCollection is retrieved; useful to only get the list of available datasets. ; Reimplemented in TProofLite.; Definition at line 10809 of file TProof.cxx. ◆ GetDataSetSrvMaps(). static TList * TProof::GetDataSetSrvMaps ; (; const TString & ; srvmaps). staticprivate . ◆ GetEnabledPackages(). TList * TProof::GetEnabledPackages ; (; ); const. inlineprotected . Definition at line 735 of file TProof.h. ◆ Getenv(). TString TProof::Getenv ; (; const char * ; env, . const char * ; ord = ""0"" . ). Get value of environment variable 'env' on node 'ord'. ; Definition at line 6644 of file TProof.cxx. ◆ GetEnvVars(). const TList * TProof::GetEnvVars ; (; ). static . Get environemnt variables. ; Definition at line 11751 of file TProof.cxx. ◆ GetFeedbackList(). TList * TProof::GetFeedbackList ; (; ); const. Return feedback list. ; Definition at line 10033 of file TProof.cxx. ◆ GetFileInCmd(). Bool_t TProof::GetFileInCmd ; (; const char * ; cmd, . TString & ; fn . ). staticprotected . Static method to extract the filename (if any) form a CINT command. ; Returns kTRUE and the filename in 'fn'; returns kFALSE if not found or not appliable. ; Definition at line 6495 of file TProof.cxx. ◆ GetGroup(). const char * TProof::GetGroup ; (; ); const. inline . Definition at line 907 of file TProof.h. ◆ GetImage(). const char * TProof::GetImage ; (; ); const. inline . Definition at line 910 of file TProof.h. ◆ GetInputData(). Int_t TProof::GetInputData ; (; TList * ; input, . const char * ; cachedir, . TString & ; emsg . ). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:94391,variab,variable,94391,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['variab'],['variable']
Modifiability,"tROOT::Fit::Fitterinline; GetMinimizer() constROOT::Fit::Fitterinline; GetNCallsFromFCN()ROOT::Fit::Fitterprotected; IGradModel1DFunction typedefROOT::Fit::Fitter; IGradModelFunction typedefROOT::Fit::Fitter; IGradModelFunction_v typedefROOT::Fit::Fitter; IModel1DFunction typedefROOT::Fit::Fitter; IModelFunction typedefROOT::Fit::Fitter; IModelFunction_v typedefROOT::Fit::Fitter; IModelFunctionTempl typedefROOT::Fit::Fitter; IsBinFit() constROOT::Fit::Fitterinline; LeastSquareFit(const BinData &data, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Fitterinline; LeastSquareFit(const std::shared_ptr< BinData > &data, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Fitterinline; LikelihoodFit(const BinData &data, bool extended=true, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Fitterinline; LikelihoodFit(const std::shared_ptr< BinData > &data, bool extended=true, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Fitterinline; LikelihoodFit(const UnBinData &data, bool extended=false, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Fitterinline; LikelihoodFit(const std::shared_ptr< UnBinData > &data, bool extended=false, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Fitterinline; LikelihoodFit(const Data &data, const Function &func, bool extended)ROOT::Fit::Fitterinline; LinearFit(const BinData &data)ROOT::Fit::Fitterinline; LinearFit(const std::shared_ptr< BinData > &data)ROOT::Fit::Fitterinline; MinuitFCN_t typedefROOT::Fit::Fitter; ObjFunction() constROOT::Fit::Fitterinlineprotected; operator=(const Fitter &)=deleteROOT::Fit::Fitter; Result() constROOT::Fit::Fitterinline; SetData(const std::shared_ptr< Data > &data)ROOT::Fit::Fitterinlineprotected; SetData(const Data &data)ROOT::Fit::Fitterinlineprote",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter-members.html:4785,extend,extended,4785,doc/master/classROOT_1_1Fit_1_1Fitter-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter-members.html,1,['extend'],['extended']
Modifiability,"tRealTime() const; Int_tTProof::GetRemoteProtocol() const; TProof::ERunStatusTProof::GetRunStatus() const; Int_tTProof::GetSeqNum() const; Int_tTProof::GetSessionID() const; const char*TProof::GetSessionTag() const; virtual TFileCollection*TProof::GetStagingStatusDataSet(const char* dataset); voidTProof::GetStatistics(Bool_t verbose = kFALSE); Int_tTProof::GetStatus() const; virtual const char*TNamed::GetTitle() const; virtual TTree*TProof::GetTreeHeader(TDSet* tdset); virtual UInt_tTObject::GetUniqueID() const; const char*TProof::GetUrl(); const char*TProof::GetUser() const; const char*TProof::GetWorkDir() const; voidTProof::GoAsynchronous(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTProof::IsDataReady(Long64_t& totalbytes, Long64_t& bytesready); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTProof::IsFolder() const; Bool_tTProof::IsIdle() const; Bool_tTProof::IsLite() const; Bool_tTProof::IsMaster() const; Bool_tTObject::IsOnHeap() const; Bool_tTProof::IsParallel() const; Bool_tTProof::IsProofd() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTProof::IsTty() const; Bool_tTProof::IsValid() const; Bool_tTProof::IsWaiting() const; Bool_tTObject::IsZombie() const; virtual Int_tTProof::Load(const char* macro, Bool_t notOnClient = kFALSE, Bool_t uniqueOnly = kTRUE, TList* wrks = 0); static voidTQObject::LoadRQ_OBJECT(); voidTProof::LogMessage(const char* msg, Bool_t all)SIGNAL ; static voidTProof::LogViewer(const char* url = 0, Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofCondor.html:11184,Inherit,InheritsFrom,11184,root/html534/TProofCondor.html,https://root.cern,https://root.cern/root/html534/TProofCondor.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tRealTime() const; Int_tTProof::GetRemoteProtocol() const; TProof::ERunStatusTProof::GetRunStatus() const; Int_tTProof::GetSeqNum() const; Int_tTProof::GetSessionID() const; const char*TProof::GetSessionTag() const; virtual TFileCollection*TProof::GetStagingStatusDataSet(const char* dataset); voidTProof::GetStatistics(Bool_t verbose = kFALSE); Int_tTProof::GetStatus() const; virtual const char*TNamed::GetTitle() const; virtual TTree*TProof::GetTreeHeader(TDSet* tdset); virtual UInt_tTObject::GetUniqueID() const; const char*TProof::GetUrl(); const char*TProof::GetUser() const; const char*TProof::GetWorkDir() const; voidTProof::GoAsynchronous(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTProof::IsDataReady(Long64_t& totalbytes, Long64_t& bytesready); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTProof::IsFolder() const; Bool_tTProof::IsIdle() const; Bool_tTProof::IsLite() const; Bool_tTProof::IsMaster() const; Bool_tTObject::IsOnHeap() const; Bool_tTProof::IsParallel() const; Bool_tTProof::IsProofd() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTProof::IsTty() const; Bool_tTProof::IsValid() const; Bool_tTProof::IsWaiting() const; Bool_tTObject::IsZombie() const; virtual Int_tTProof::Load(const char* macro, Bool_t notOnClient = kFALSE, Bool_t uniqueOnly = kTRUE, TList* wrks = 0); voidTProof::LogMessage(const char* msg, Bool_t all)SIGNAL ; static voidTProof::LogViewer(const char* url = 0, Int_t sessionidx = 0); virtual voidTQObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofCondor.html:11007,Inherit,InheritsFrom,11007,root/html602/TProofCondor.html,https://root.cern,https://root.cern/root/html602/TProofCondor.html,4,['Inherit'],['InheritsFrom']
Modifiability,"tResources(); Bool_tReadConfigFile(const char* confDir, const char* fileName); static voidSetOption(TProofNodeInfo* nodeinfo, const TString& option, const TString& value). Data Members; public:. enum EInfoType { kNodeType; kOption; kHost; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Bool_tTProofResources::fValidkTRUE if resource information was processed correctly. private:. TStringfFileNameConfig file name; Bool_tfFoundMasterkTRUE if config file has master info; TProofNodeInfo*fMasterMaster node info; TList*fSubmasterListNode info list with all submasters; TList*fWorkerListNode info list with all workers. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofResourcesStatic(); This ctor is used in TProofServ::Setup() in combination with GetWorkDir(); for a quick scan of the config file to retrieve the work directory. TProofResourcesStatic(const char* confDir, const char* fileName); Using this ctor will retrieve all information in the config file; and store it in fMaster, fSubmasterList and fWorkerList,; condorworkers will be stored in the fWorkerList. ~TProofResourcesStatic(); Destructor. void InitResources(); Create master node info and submaster/worker lists,; and set default values. TProofNodeInfo * GetMaster(); Get the master node. Only return the master info if it was set; in the config file. TList * GetSubmasters(); Get the list of submaster nodes. TList * GetWorkers(void); Get the list of worker nodes. Bool_t ReadConfigFile(const char* confDir, const char* fileName); Read the PROOF config file and fill the master and worker list. void SetOption(TProofNodeInfo* nodeinfo, const TString& option, const TString& value); Static method to set the node info options. TProofNodeInfo * CreateNodeInfo(const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofResourcesStatic.html:6758,config,config,6758,root/html528/TProofResourcesStatic.html,https://root.cern,https://root.cern/root/html528/TProofResourcesStatic.html,6,['config'],['config']
Modifiability,"tResult>(fConfig );; 573 ; 574 // update obj function in case it was an external one; 575 if (fExtObjFunction) fObjFunction.reset(fExtObjFunction->Clone());; 576 fResult->fObjFunc = fObjFunction;; 577 ; 578 // re-give a minimizer instance in case it has been changed; 579 ret |= fResult->Update(fMinimizer, fConfig, ret);; 580 ; 581 // when possible get ncalls from FCN and set in fit result; 582 if (fFitType != ROOT::Math::FitMethodFunction::kUndefined ) {; 583 fResult->fNCalls = GetNCallsFromFCN();; 584 }; 585 ; 586 // set also new errors in FitConfig; 587 if (fConfig.UpdateAfterFit() && ret) DoUpdateFitConfig();; 588 ; 589 return ret;; 590}; 591 ; 592 ; 593bool Fitter::CalculateMinosErrors() {; 594 // compute the Minos errors according to configuration; 595 // set in the parameters and append value in fit result; 596 // normally Minos errors are computed just after the minimization; 597 // (in DoMinimization) aftewr minimizing if the; 598 // FitConfig::MinosErrors() flag is set; 599 ; 600 if (!fMinimizer) {; 601 MATH_ERROR_MSG(""Fitter::CalculateMinosErrors"",""Minimizer does not exist - cannot calculate Minos errors"");; 602 return false;; 603 }; 604 ; 605 if (!fResult || fResult->IsEmpty() ) {; 606 MATH_ERROR_MSG(""Fitter::CalculateMinosErrors"",""Invalid Fit Result - cannot calculate Minos errors"");; 607 return false;; 608 }; 609 ; 610 if (fFitType == ROOT::Math::FitMethodFunction::kLogLikelihood && fConfig.UseWeightCorrection() ) {; 611 MATH_ERROR_MSG(""Fitter::CalculateMinosErrors"",""Computation of MINOS errors not implemented for weighted likelihood fits"");; 612 return false;; 613 }; 614 ; 615 // update minimizer (but cannot re-create in this case). Must use an existing one; 616 if (!DoUpdateMinimizerOptions(false)) {; 617 MATH_ERROR_MSG(""Fitter::CalculateHessErrors"",""Error re-initializing the minimizer"");; 618 return false;; 619 }; 620 ; 621 // set flag to compute Minos error to false in FitConfig to avoid that; 622 // following minimizaiton calls perform unwanted Mino",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8cxx_source.html:22834,config,configuration,22834,doc/master/Fitter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Fitter_8cxx_source.html,1,['config'],['configuration']
Modifiability,"tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; RooRealProxy_ixfInt(X*F(X))dx ;; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; RooRealProxy_meanMean (if calculated for central moment); static Int_tRooPrintable::_nameLength; RooSetProxy_nsetNormalization set (optional); RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; Int_t_orderMoment order; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_t_takeRootReturn n-order root of moment; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; RooRealProxy_xObservable; RooRealProxy_xfX*F ; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooMoment.html:32840,config,configuration,32840,root/html530/RooMoment.html,https://root.cern,https://root.cern/root/html530/RooMoment.html,1,['config'],['configuration']
Modifiability,"tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,int,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction3Binding_double_double_int_int_.html:35649,config,configuration,35649,root/html534/RooCFunction3Binding_double_double_int_int_.html,https://root.cern,https://root.cern/root/html534/RooCFunction3Binding_double_double_int_int_.html,2,['config'],['configuration']
Modifiability,"tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,double,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction3Binding_double_unsigned_int_double_double_.html:37250,config,configuration,37250,root/html602/RooCFunction3Binding_double_unsigned_int_double_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction3Binding_double_unsigned_int_double_double_.html,4,['config'],['configuration']
Modifiability,"tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooRealProxy_nllInput -log(L) function; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; map<std::string,bool>_paramFixedParameter constant status at last time of use; RooAbsPdf*_pdf; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; set<std::string>_statUncertParams; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooBarlowBeestonLL(); _obs(""paramOfInterest"",""Parameters of intere",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HistFactory__RooBarlowBeestonLL.html:35455,config,configuration,35455,root/html534/RooStats__HistFactory__RooBarlowBeestonLL.html,https://root.cern,https://root.cern/root/html534/RooStats__HistFactory__RooBarlowBeestonLL.html,2,['config'],['configuration']
Modifiability,"tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooRecursiveFraction(); Default constructor. RooRecursiveFraction(const char* name, const char* title, const RooArgList& fracSet); Constructor of plain RooAddPdf fraction from list of recursive fractions. RooRecursiveFraction(const RooRecursiveFraction& other, const char* name = 0); Copy constructor. ~RooRecursiveFraction(); Destructor. Double_t evaluate() const; Calculate and return value of 1 - prod_i (1 - f_i ). TObject* clone(const char* newname) const; { return new RooRecursiveFraction(*this, newname); }. » Last changed: Thu Nov 3 20:09:10 2011 » Last generated: 2011-11-03 20:09; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooRecursiveFraction.html:33574,Inherit,Inheritance,33574,root/html532/RooRecursiveFraction.html,https://root.cern,https://root.cern/root/html532/RooRecursiveFraction.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsCategory::_treeVar! do not persist; TIterator*RooAbsCategory::_typeIter!; TObjArrayRooAbsCategory::_typesArray of allowed values; RooCatTypeRooAbsCategory::_valueCurrent value; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooBinningCategory(const char* name, const char* title, RooAbsRealLValue& inputVar, const char* binningName = 0); Constructor with input function to be mapped and name and index of default; output state of unmapped values. RooBinningCategory(const RooBinningCategory& other, const char* name = 0); Copy constructor. ~RooBinningCategory(); Destructor. void initialize(); Iterator over all bins in input variable and define corresponding state labels. RooCatType evaluate() const; Calculate and return the value of the mapping function. void printMultiline(ostream& os, Int_t content, Bool_t verbose = kFALSE, TString indent = """") const; Print info about this threshold category to the specified stream. In addition to the info; from RooAbsCategory::printStream() we add:. Standard : input category; Shape : default value; Verbose : list of thresholds. inline RooBinningCategory(); Constructors etc. { }. TObject* clone(const char* newname) const; { return new RooBinningCategory(*this, newname); }. » Last changed: Thu Sep 23 19:58:33 2010 » Last generated: 2010-09-23 19:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooBinningCategory.html:21413,variab,variable,21413,root/html528/RooBinningCategory.html,https://root.cern,https://root.cern/root/html528/RooBinningCategory.html,1,['variab'],['variable']
Modifiability,"tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FlexibleInterpVar(); Default constructor. FlexibleInterpVar(const char* name, const char* title, const RooArgList& _paramList, Double_t nominal, const RooArgList& low, const RooArgList& high). FlexibleInterpVar(const char* name, const char* title, const RooArgList& _paramList, double nominal, vector<double> low, vector<double> high). FlexibleInterpVar(const char* name, const char* title, const RooArgList& _paramList, double nominal, vector<double> low, vector<double> high, vector<int> code). FlexibleInterpVar(const char* name, const char* title); Constructor of flat polynomial function. FlexibleInterpVar(const RooStats::HistFactory::FlexibleInterpVar& , const char* ); Copy constructor. ~FlexibleInterpVar(); Destructor. void setInterpCode(RooAbsReal& param, int code). void setAllInterpCodes(int code). void setNominal(Double_t newNominal). void setLow(RooAbsReal& param, Double_t newLow). void setHigh(RooAbsReal& param, Double_t newHigh). void printAllInterpCodes(). double PolyInterpValue(int i, double x) const. Double_t evaluate() const; Calculate and return value of polynomial. void printMultiline(ost",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HistFactory__FlexibleInterpVar.html:36966,Flexible,FlexibleInterpVar,36966,root/html534/RooStats__HistFactory__FlexibleInterpVar.html,https://root.cern,https://root.cern/root/html534/RooStats__HistFactory__FlexibleInterpVar.html,1,['Flexible'],['FlexibleInterpVar']
Modifiability,"tRooAbsFunc::isValid() const; Int_tRooAbsFunc::numCall() const; virtual Double_toperator()(const Double_t* xvector) const; RooAbsFunc&RooAbsFunc::operator=(const RooAbsFunc&); virtual list<Double_t>*plotSamplingHint(RooAbsRealLValue&, Double_t, Double_t) const; voidRooAbsFunc::resetNumCall() const; virtual voidrestoreXVec() const; virtual voidsaveXVec() const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). protected:. voidloadValues(const Double_t* xvector) const. Data Members; protected:. Bool_t_clipInvalid; list<RooAbsReal*>_compList!; list<Double_t>_compSave!; UInt_tRooAbsFunc::_dimensionNumber of observables; const RooAbsReal*_func; Double_t_funcSave!; Int_tRooAbsFunc::_ncallFunction call counter; const RooArgSet*_nset; const TNamed*_rangeName!; Bool_tRooAbsFunc::_validIs binding in valid state?; RooAbsRealLValue**_vars; Double_t*_xsave; Bool_t_xvecValid. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooRealBinding(const RooAbsReal& func, const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE, const TNamed* rangeName = 0); Construct a lightweight function binding of RooAbsReal func to; variables 'vars'. Use the provided nset as normalization set to; be passed to RooAbsReal::getVal() If rangeName is not null, use; the range of with that name as range associated with the; variables of this function binding. If clipInvalid is true,; values requested to the function binding that are outside the; defined range of the variables are clipped to fit in the defined; range. RooRealBinding(const RooRealBinding& other, const RooArgSet* nset = 0); Construct a lightweight function binding of RooAbsReal func to; variables 'vars'. Use the provided nset as normalization set to; be passed to RooAbsReal::getVal() If rangeName is not null, use; the range of with that name as range associated with the; variables of this function b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooRealBinding.html:2006,Inherit,Inheritance,2006,root/html534/RooRealBinding.html,https://root.cern,https://root.cern/root/html534/RooRealBinding.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tRooAbsFunc::numCall() const; virtual Double_toperator()(const Double_t* xvector) const; RooAbsFunc&RooAbsFunc::operator=(const RooAbsFunc&); virtual list<Double_t>*RooRealBinding::plotSamplingHint(RooAbsRealLValue&, Double_t, Double_t) const; voidRooAbsFunc::resetNumCall() const; virtual voidRooRealBinding::restoreXVec() const; virtual voidRooRealBinding::saveXVec() const; virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). protected:. voidRooRealBinding::loadValues(const Double_t* xvector) const. Data Members; protected:. Roo1DTable*_catTableSupercategory table generated from _data; Bool_tRooRealBinding::_clipInvalid; const RooAbsData*_dataDataset used for projection; UInt_tRooAbsFunc::_dimensionNumber of observables; Bool_t_firstBit indicating if operator() has been called yet; const RooAbsReal*RooRealBinding::_func; Int_tRooAbsFunc::_ncallFunction call counter; const RooArgSet*_nsetNormalization set for real function; const RooArgSet*RooRealBinding::_nset; const TNamed*RooRealBinding::_rangeName!; const RooAbsReal*_realReal function to be projected; RooSuperCategory*_superCatSupercategory constructed from _data's category variables; Bool_tRooAbsFunc::_validIs binding in valid state?; RooAbsRealLValue**RooRealBinding::_vars; Double_t*RooRealBinding::_xsave; Bool_tRooRealBinding::_xvecValid. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooDataProjBinding(const RooAbsReal& real, const RooAbsData& data, const RooArgSet& vars, const RooArgSet* normSet = 0); Constructor of a data weighted average function binding with; variables 'vars' for function 'real' and dataset 'data' with; weights. ~RooDataProjBinding(); Destructor, delete owned objects. Double_t operator()(const Double_t* xvector) const; Evaluate data-projected values of the bound real function. RooDataProjBinding(const RooAbsReal& real, const RooAbsData& data, const RooArgSet& vars, cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooDataProjBinding.html:2540,variab,variables,2540,root/html526/RooDataProjBinding.html,https://root.cern,https://root.cern/root/html526/RooDataProjBinding.html,1,['variab'],['variables']
Modifiability,"tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; intRooLegendre::_l1; intRooLegendre::_l2; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; intRooLegendre::_m1; intRooLegendre::_m2; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooSpHarmonic.html:33447,config,configuration,33447,root/html528/RooSpHarmonic.html,https://root.cern,https://root.cern/root/html528/RooSpHarmonic.html,2,['config'],['configuration']
Modifiability,"tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,double,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction2Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. template <> void RooCFunction2Ref<Double_t,Double_t,Double_t> ShowMembers(TMemberInspector& insp, char* parent). » Last changed: Mon Dec 7 13:46:19 2009 » Last generated: 2009-12-07 13:46; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction2Binding_double_double_double_.html:34071,variab,variable,34071,root/html526/RooCFunction2Binding_double_double_double_.html,https://root.cern,https://root.cern/root/html526/RooCFunction2Binding_double_double_double_.html,1,['variab'],['variable']
Modifiability,"tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooBarlowBeestonLL(); _obs(""paramOfInterest"",""Parameters of interest"",this),; _par(""nuisanceParam"",""Nuisance parameters"",this,kFALSE,kFALSE),; Default constructor; Should only be used by proof.; _piter = _par.createIterator() ;; _oiter = _obs.createIterator() ;. RooBarlowBeestonLL(const char *name, const char *title, 				 RooAbsReal& nllIn /*, const RooArgSet& observables*/); _obs(""paramOfInterest"",""Parameters of interest"",this),; _par(""nuisanceParam"",""Nuisance parameters"",this,kFALSE,kFALSE),; Constructor of profile likelihood given input likelihood nll w.r.t; the given set of variables. The input log likelihood is minimized w.r.t; to all other variables of the likelihood at each evaluation and the; value of the global log likelihood minimum is always subtracted. RooBarlowBeestonLL(const RooStats::HistFactory::RooBarlowBeestonLL& other, const char* name = 0); _obs(""obs"",this,other._obs),; _par(""par"",this,other._par),; Copy constructor. ~RooBarlowBeestonLL(); Destructor. void initializeBarlowCache(). RooArgSet* getParameters(const RooArgSet* depList, Bool_t stripDisconnected = kTRUE) const. Double_t evaluate() const. Bool_t redirectServersHook(const RooAbsCollection& , Bool_t , Bool_t , Bool_t ). if (_minuit) {; delete _minuit ;; _minuit = 0 ;; }. TObject* clone(const char* newname) const; { return new RooBarlowBeestonLL(*this,newname); }. RooAbsReal& nll(); void setAlwaysStartFromMin(Bool_t flag) { _startFromMin = flag ; }; Bool_t alwaysStartFromMin() const { return _startFromMin ; }; RooMinuit* minuit() { return _minuit ; }. { return const_cast<RooAbsR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HistFactory__RooBarlowBeestonLL.html:36799,variab,variables,36799,root/html534/RooStats__HistFactory__RooBarlowBeestonLL.html,https://root.cern,https://root.cern/root/html534/RooStats__HistFactory__RooBarlowBeestonLL.html,6,['variab'],['variables']
Modifiability,"tRooAbsReal::getVal(const RooArgSet* set = 0) const; Double_tRooAbsReal::getVal(const RooArgSet& set) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; const RooAbsReal&iF(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooMoment.html:15389,Inherit,InheritsFrom,15389,root/html532/RooMoment.html,https://root.cern,https://root.cern/root/html532/RooMoment.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_t_pidPID of child process; Int_t_pipeToClient[2]Pipe to client process; Int_t_pipeToServer[2]Pipe to server process; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; RooAbsReal::ErrorLoggingMode_remoteEvalErrorLoggingState; RooArgList_saveVarsCopy of variables; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; static RooMPSentinel_sentinel; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; RooRealMPFE::State_state; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; RooListProxy_varsVariables; Bool_t_verboseClient; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; Bool_t_verboseServer; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Fun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooRealMPFE.html:34101,variab,variables,34101,root/html532/RooRealMPFE.html,https://root.cern,https://root.cern/root/html532/RooRealMPFE.html,4,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"tSafe;  flags the type of the current node ;  ; Double_t fStep;  ; Int_t fThreadId;  last safety returned from parallel world (negative if invalid) ;  ; TGeoNode * fTopNode;  current node ;  . Static Private Attributes; static Bool_t fgUsePWSafetyCaching = kFALSE;  path to current node ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoNavigator.h>. Inheritance diagram for TGeoNavigator:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoNavigator() [1/3]. TGeoNavigator::TGeoNavigator ; (; const TGeoNavigator & ; ). protecteddelete . ◆ TGeoNavigator() [2/3]. TGeoNavigator::TGeoNavigator ; (; ). global mode is caching enabled for parallel world safety calls ; Constructor. ; Definition at line 57 of file TGeoNavigator.cxx. ◆ TGeoNavigator() [3/3]. TGeoNavigator::TGeoNavigator ; (; TGeoManager * ; geom). Constructor. ; Definition at line 109 of file TGeoNavigator.cxx. ◆ ~TGeoNavigator(). TGeoNavigator::~TGeoNavigator ; (; ). override . Destructor. ; Definition at line 169 of file TGeoNavigator.cxx. Member Function Documentation. ◆ BuildCache(). void TGeoNavigator::BuildCache ; (; Bool_t ; dummy = kFALSE, . Bool_t ; nodeid = kFALSE . ). Builds the cache for physical nod",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoNavigator.html:22116,inherit,inherited,22116,doc/master/classTGeoNavigator.html,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html,1,['inherit'],['inherited']
Modifiability,"tSession(); Reset Proof session. void DeleteQuery(); Delete query from list tree and ask user if he wants do delete it also; from server. void EditQuery(); Edit currently selected query. void StartViewer(); Start TreeViewer from selected TChain. void ShowPackages(); Query the list of uploaded packages from proof and display it; into a new text window. void UpdateListOfPackages(); Update the list of packages. void ShowEnabledPackages(); Query list of enabled packages from proof and display it; into a new text window. void ShowLog(const char* queryref); Display the content of the temporary log file for queryref; into a new text window. void ShowInfo(const char* txt); Display text in status bar. void ShowStatus(); Retrieve and display Proof status. void StartupMessage(char* msg, Bool_t stat, Int_t curr, Int_t total); Handle startup message (connection progress) coming from Proof session. void MyHandleMenu(Int_t ); Handle session viewer custom popup menus. void OnCascadeMenu(); Handle feedback histograms configuration menu. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t ); Handle messages send to the TSessionViewer object. E.g. all menu entries; messages. TSessionServerFrame * GetServerFrame() const; { return fServerFrame; }. TSessionFrame * GetSessionFrame() const; { return fSessionFrame; }. TSessionQueryFrame * GetQueryFrame() const; { return fQueryFrame; }. TSessionOutputFrame * GetOutputFrame() const; { return fOutputFrame; }. TSessionInputFrame * GetInputFrame() const; { return fInputFrame; }. TSessionDescription * GetActDesc() const; { return fActDesc; }. TList * GetSessions() const; { return fSessions; }. TGListTree * GetSessionHierarchy() const; { return fSessionHierarchy; }. TGListTreeItem * GetSessionItem() const; { return fSessionItem; }. const TGPicture * GetLocalPict() const; { return fLocal; }. const TGPicture * GetProofConPict() const; { return fProofCon; }. const TGPicture * GetProofDisconPict() const; { return fProofDiscon; }. const TGPicture * G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSessionViewer.html:28012,config,configuration,28012,root/html528/TSessionViewer.html,https://root.cern,https://root.cern/root/html528/TSessionViewer.html,6,['config'],['configuration']
Modifiability,"tSet for an example. Function Members (Methods); public:. TEveSecondarySelectable(); virtual~TEveSecondarySelectable(); static TClass*Class(); Bool_tGetAlwaysSecSelect() const; virtual TClass*IsA() const; voidProcessGLSelection(TGLSelectRecord& rec); const TEveSecondarySelectable::SelectionSet_t&RefHighlightedSet() const; const TEveSecondarySelectable::SelectionSet_t&RefSelectedSet() const; voidSetAlwaysSecSelect(Bool_t f); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). protected:. voidProcessGLSelectionInternal(TGLSelectRecord& rec, TEveSecondarySelectable::SelectionSet_t& sset). private:. TEveSecondarySelectable(const TEveSecondarySelectable&); TEveSecondarySelectable&operator=(const TEveSecondarySelectable&). Data Members; protected:. Bool_tfAlwaysSecSelectAlways do secondary-selection in GL.; set<int>fHighlightedSetHighlighted indices.; set<int>fSelectedSetSelected indices. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveSecondarySelectable(); Constructor. void ProcessGLSelection(TGLSelectRecord& rec); Process secondary GL selection and populate selected set accordingly. void ProcessGLSelectionInternal(TGLSelectRecord& rec, TEveSecondarySelectable::SelectionSet_t& sset); Process secondary GL selection and populate given set accordingly. TEveSecondarySelectable(const TEveSecondarySelectable& ). TEveSecondarySelectable& operator=(const TEveSecondarySelectable& ). virtual ~TEveSecondarySelectable(); {}. Bool_t GetAlwaysSecSelect() const; { return fAlwaysSecSelect; }. void SetAlwaysSecSelect(Bool_t f); { fAlwaysSecSelect = f; }. const SelectionSet_t& RefSelectedSet() const; { return fSelectedSet; }. const SelectionSet_t& RefHighlightedSet() const; { return fHighlightedSet; }. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id: TEveSecondarySelectable.h 33124 2010-04-21 20:04:42Z matevz ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveSecondarySelectable.html:1790,Inherit,Inheritance,1790,root/html532/TEveSecondarySelectable.html,https://root.cern,https://root.cern/root/html532/TEveSecondarySelectable.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,tSize; UChar_tTEveElement::fChangeBits!; TEveElement::List_tTEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; TEveCaloData*TEveCaloViz::fDataevent data reference; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tfDrawHPlane; Int_tfDrawNumberCellPixels; Float_tTEveCaloViz::fEndCapPosBbackward end cap z coordinate in cm (should be < 0); Float_tTEveCaloViz::fEndCapPosFforward end cap z coordinate in cm; Double_tTEveCaloViz::fEtaMax; Double_tTEveCaloViz::fEtaMin; Float_tfFixedHeightValIn2DMode1% of whole height; Color_tfFontColor; Color_tfGridColor; Float_tfHPlaneVal; Bool_tfHasFixedHeightIn2DMode; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Float_tTEveCaloViz::fMaxTowerHbounding box z dimesion; Float_tTEveCaloViz::fMaxValAbs; Int_tfNZStepsZ axis label step in GeV; TStringTNamed::fNameobject identifier; Bool_tfNormalizeRebin; Int_tTEveElement::fNumChildren!; TEveRGBAPalette*TEveCaloViz::fPalettePointer to signal-color palette.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Double_tTEveCaloViz::fPhi; Double_tTEveCaloViz::fPhiOffsetphi range +/- offset; Bool_tTEveElement::fPickable; Int_tfPixelsPerBin; Color_tfPlaneColor; Char_tfPlaneTransparency; Float_tTEveCaloViz::fPlotEtplot E or Et.; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; TEveCaloLego::EProjection_efProjection; Bool_tTEveElement::fRnrChildrenRen,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveCaloLego.html:23957,variab,variable,23957,root/html602/TEveCaloLego.html,https://root.cern,https://root.cern/root/html602/TEveCaloLego.html,4,['variab'],['variable']
Modifiability,"tSize;  ; Bool_t fRadian;  ; Double_t fRwrmax;  Maximal radial value (real world) ;  ; Double_t fRwrmin;  Minimal radial value (real world) ;  ; Double_t fRwtmax;  Minimal angular value (real world) ;  ; Double_t fRwtmin;  Minimal angular value (real world) ;  ; Double_t fTickpolarSize;  Set size of Tickmarks. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . #include <TGraphPolargram.h>. Inheritance diagram for TGraphPolargram:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkLabelOrtho . Definition at line 61 of file TGraphPolargram.h. Constructor & Destructor Documentation. ◆ TGraphPolargram() [1/2]. TGraphPolargram::TGraphPolargram ; (; const char * ; name, . Double_t ; rmin, . Double_t ; rmax, . Double_t ; tmin, . Double_t ; tmax . ). TGraphPolargram Constructor. ; Definition at line 57 of file TGraphPolargram.cxx. ◆ TGraphPolargram() [2/2]. TGraphPolargram::TGraphPolargram ; (; const char * ; name = """"). Short constructor used in the case of a spider plot. ; Definition at line 74 of file TGraphPolargram.cxx. ◆ ~TGraphPolargram(). TGraphPolargram::~TGraphPolargram ; (; ). override . TGraph",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphPolargram.html:20969,inherit,inherited,20969,doc/master/classTGraphPolargram.html,https://root.cern,https://root.cern/doc/master/classTGraphPolargram.html,1,['inherit'],['inherited']
Modifiability,"tSlaves appropriately). ; This constructor simply closes any previous gProof and sets gProof to this instance. ; Definition at line 513 of file TProof.cxx. ◆ TProof() [3/3]. TProof::TProof ; (; const char * ; masterurl, . const char * ; conffile = kPROOF_ConfFile, . const char * ; confdir = kPROOF_ConfDir, . Int_t ; loglevel = 0, . const char * ; alias = 0, . TProofMgr * ; mgr = 0 . ). Create a PROOF environment. ; Starting PROOF involves either connecting to a master server, which in turn will start a set of slave servers, or directly starting as master server (if master = """"). Masterurl is of the form: [proof[s]://]host[:port]. Conffile is the name of the config file describing the remote PROOF cluster (this argument alows you to describe different cluster configurations). The default is proof.conf. Confdir is the directory where the config file and other PROOF related files are (like motd and noproof files). Loglevel is the log level (default = 1). User specified custom config files will be first looked for in $HOME/.conffile. ; Definition at line 387 of file TProof.cxx. ◆ ~TProof(). TProof::~TProof ; (; ). override . Clean up PROOF environment. ; Definition at line 652 of file TProof.cxx. Member Function Documentation. ◆ Activate(). void TProof::Activate ; (; TList * ; slaves = 0). private . Activate slave server list. ; Definition at line 2389 of file TProof.cxx. ◆ ActivateAsyncInput(). void TProof::ActivateAsyncInput ; (; ). private . Activate the a-sync input handler. ; Definition at line 4410 of file TProof.cxx. ◆ ActivateWorker(). Int_t TProof::ActivateWorker ; (; const char * ; ord, . Bool_t ; save = kTRUE . ). Make sure that the worker identified by the ordinal number 'ord' is in the active list. ; The request will be forwarded to the master in direct contact with the worker. If needed, this master will move the worker from the inactive to the active list and rebuild the list of unique workers. Use ord = ""*"" to activate all inactive workers. The string 'or",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:61239,config,config,61239,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['config'],['config']
Modifiability,"tSnifferScanRec&operator=(const TRootSnifferScanRec&); voidSetField(const char* name, const char* value, Bool_t with_quotes = kTRUE); Bool_tSetResult(void* obj, TClass* cl, TDataMember* member = 0, Int_t chlds = -1); voidSetRootClass(TClass* cl); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TRootSnifferScanRec(); TRootSnifferScanRec(const TRootSnifferScanRec&). Data Members; public:. TListfItemsNames! list of created items names, need to avoid duplication; Bool_thas_more! indicates that potentially there are more items can be found; Int_tlvl! current level of hierarchy; UInt_tmask! defines operation kind; Int_tnum_childs! number of childs; Int_tnum_fields! number of fields; TRootSnifferScanRec*parent! pointer on parent record; const char*searchpath! current path searched; TStringstarted_node! name of node stared; TRootSnifferStore*store! object to store results. Class Charts. Inheritance Chart:. TRootSnifferScanRec. Function documentation; TRootSnifferScanRec(); constructor. ~TRootSnifferScanRec(); destructor. void SetField(const char* name, const char* value, Bool_t with_quotes = kTRUE); record field for current element. void BeforeNextChild(); indicates that new child for current element will be started. void MakeItemName(const char* objname, TString& itemname); constructs item name from object name; if special symbols like '/', '#', ':', '&', '?' are used in object name; they will be replaced with '_'.; To avoid item name duplication, additional id number can be appended. void CreateNode(const char* _node_name); creates new node with specified name; if special symbols like ""[]&<>"" are used, node name; will be replaced by default name like ""extra_item_N"" and; original node name will be recorded as ""_original_name"" field; Optionally, object name can be recorded as ""_realname"" field. void CloseNode(); close started node. void SetRootClass(TClass* cl); set root class",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRootSnifferScanRec.html:1914,Inherit,Inheritance,1914,root/html602/TRootSnifferScanRec.html,https://root.cern,https://root.cern/root/html602/TRootSnifferScanRec.html,1,['Inherit'],['Inheritance']
Modifiability,"tStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fCounter;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TStreamerBasicType (const TStreamerBasicType &)=delete;  ; TStreamerBasicType & operator= (const TStreamerBasicType &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepeat = (1ULL << ( 10 )); , kRead = (1ULL << ( 11 )); , ;   kWrite = (1ULL << ( 12 )); , kDoNotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ESTLtype { ;   kSTL = ROOT::kSTLany; , kSTLstring = ROOT::kSTLstring; , kSTLvector = ROOT::kSTLvector; , kSTLlist = ROOT::kSTLlist; , ;   kSTLforwardlist = ROOT::kSTLforwardlist; , kSTLdeque = ROOT::kSTLdeque; , kSTLmap = ROOT::kSTLmap; , kSTLmultimap = ROOT::kSTLmultimap; , ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerBasicType.html:14647,inherit,inherited,14647,doc/master/classTStreamerBasicType.html,https://root.cern,https://root.cern/doc/master/classTStreamerBasicType.html,1,['inherit'],['inherited']
Modifiability,"tStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPatternCylPhi (const TGeoPatternCylPhi &pfc);  [2*fNdivisions] table of sines/cosines ;  ; TGeoPatternCylPhi & operator= (const TGeoPatternCylPhi &pfc);  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; Double_t * fSinCos = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoPatternFinder; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TGeoPatternFinder; Int_t fDivIndex;  ; Double_t fEnd;  ; std::mutex fMutex;  Size of the thread vector. ;  ; Int_t fNdivisions;  ; Double_t fStart;  ; Dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPatternCylPhi.html:12420,inherit,inherited,12420,doc/master/classTGeoPatternCylPhi.html,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html,1,['inherit'],['inherited']
Modifiability,tStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; RooTemplateProxy< RooAbsReal > _n;  Number of expected events. ;  ; RooTemplateProxy< RooAbsPdf > _pdf;  Input p.d.f. ;  ; const TNamed * _rangeName = nullptr;  Name of subset range. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooExtendPdf.html:59946,inherit,inherited,59946,doc/master/classRooExtendPdf.html,https://root.cern,https://root.cern/doc/master/classRooExtendPdf.html,1,['inherit'],['inherited']
Modifiability,"tStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetPoints (Double_t *points) const override;  Create CONE points. ;  ;  Protected Member Functions inherited from TTUBE;  TTUBE (const TTUBE &);  Table of cos(fPhi1) .... cos(fPhil+fDphi1) ;  ; virtual void MakeTableOfCoSin () const;  Make table of sine and cosine. ;  ; TTUBE & operator= (const TTUBE &);  assignment operator ;  ; void SetPoints (Double_t *points) const override;  Create TUBE points. ;  ; virtual void SetSegsAndPols (TBuffer3D &buffer) const;  Set segments and polygons. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCONE.html:16645,inherit,inherited,16645,doc/master/classTCONE.html,https://root.cern,https://root.cern/doc/master/classTCONE.html,1,['inherit'],['inherited']
Modifiability,"tStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fBranchingRatio;  ; TArrayI fDaughters;  ; Int_t fMatrixElementCode;  ; Int_t fNumber;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TDecayChannel.h>. Inheritance diagram for TDecayChannel:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDecayChannel() [1/2]. TDecayChannel::TDecayChannel ; (; ). default constructor ; Definition at line 27 of file TDecayChannel.cxx. ◆ TDecayChannel() [2/2]. TDecayChannel::TDecayChannel ; (; Int_t ; Number, . Int_t ; MatrixElementCode, . Double_t ; BranchingRatio, . Int_t ; NDaughters, . Int_t * ; DaughterPdgCode . ). constructor ; Definition at line 37 of file TDecayChannel.cxx. ◆ ~TDecayChannel(). TDecayChannel::~TDecayChannel ; (; ). override . destructor ; Definition at line 51 of file TDecayChannel.cxx. Member Function Documentation. ◆ BranchingRatio(). Double_t TDecayChannel::BranchingRatio ; (; ). inline . Definit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDecayChannel.html:10043,inherit,inherited,10043,doc/master/classTDecayChannel.html,https://root.cern,https://root.cern/doc/master/classTDecayChannel.html,2,['inherit'],['inherited']
Modifiability,"tStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRandom.h>. Inheritance diagram for TRandom:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRandom(). TRandom::TRandom ; (; UInt_t ; seed = 65539). Default constructor. For seed see SetSeed(). ; Definition at line 187 of file TRandom.cxx. ◆ ~TRandom(). TRandom::~TRandom ; (; ). override . Default destructor. ; Can reset gRandom to 0 if gRandom points to this generator. ; Definition at line 196 of file TRandom.cxx. Member Function Documentation. ◆ Binomial(). Int_t TRandom::Binomial ; (; Int_t ; ntot, . Double_t ; prob . ). virtual . Generates a random integer N according to the binomial law. ; Coded from Los Alamos report LA-5061-MS.; N is binomially distributed between 0 and ntot inclusive with mean prob*ntot and prob i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRandom.html:24254,inherit,inherited,24254,doc/master/classTRandom.html,https://root.cern,https://root.cern/doc/master/classTRandom.html,2,['inherit'],['inherited']
Modifiability,"tStat is a simple implementation of the TestStatistic interface used for simple number counting.; It should probably support simple cuts as well. Function Members (Methods); public:. virtual~NumEventsTestStat(); static TClass*Class(); virtual Double_tEvaluate(RooAbsData& data, RooArgSet&); virtual const RooArgSet*RooStats::TestStatistic::GetDetailedOutput() const; virtual const RooAbsArg*GetTestStatistic() const; virtual const TStringGetVarName() const; virtual TClass*IsA() const; RooStats::NumEventsTestStatNumEventsTestStat(); RooStats::NumEventsTestStatNumEventsTestStat(RooAbsPdf& pdf); RooStats::NumEventsTestStatNumEventsTestStat(const RooStats::NumEventsTestStat&); RooStats::NumEventsTestStat&operator=(const RooStats::NumEventsTestStat&); virtual boolRooStats::TestStatistic::PValueIsRightTail() const; virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); RooStats::TestStatisticRooStats::TestStatistic::TestStatistic(); RooStats::TestStatisticRooStats::TestStatistic::TestStatistic(const RooStats::TestStatistic&). Data Members; private:. RooAbsPdf*fPdf. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; NumEventsTestStat(); { }. NumEventsTestStat(RooAbsPdf& pdf). virtual ~NumEventsTestStat(); delete fRand;; delete fTestStatistic;. Double_t Evaluate(RooAbsData& data, RooArgSet& ); Main interface to evaluate the test statistic on a dataset. const RooAbsArg* GetTestStatistic() const; Get the TestStatistic. {return fPdf;}. const TString GetVarName() const; {return ""Number of events"";}. » Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-06-30 14:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__NumEventsTestStat.html:1530,Inherit,Inheritance,1530,root/html602/RooStats__NumEventsTestStat.html,https://root.cern,https://root.cern/root/html602/RooStats__NumEventsTestStat.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tStat is a simple implementation of the TestStatistic interface used for simple number counting.; It should probably support simple cuts as well. Function Members (Methods); public:. virtual~NumEventsTestStat(); static TClass*Class(); virtual Double_tEvaluate(RooAbsData& data, RooArgSet&); virtual const RooArgSet*RooStats::TestStatistic::GetDetailedOutput() const; virtual const RooAbsArg*GetTestStatistic() const; virtual const TStringGetVarName() const; virtual TClass*IsA() const; RooStats::NumEventsTestStatNumEventsTestStat(); RooStats::NumEventsTestStatNumEventsTestStat(RooAbsPdf& pdf); RooStats::NumEventsTestStatNumEventsTestStat(const RooStats::NumEventsTestStat&); RooStats::NumEventsTestStat&operator=(const RooStats::NumEventsTestStat&); virtual boolRooStats::TestStatistic::PValueIsRightTail() const; virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); RooStats::TestStatisticRooStats::TestStatistic::TestStatistic(); RooStats::TestStatisticRooStats::TestStatistic::TestStatistic(const RooStats::TestStatistic&). Data Members; private:. RooAbsPdf*fPdf. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; NumEventsTestStat(); { }. NumEventsTestStat(RooAbsPdf& pdf). virtual ~NumEventsTestStat(); delete fRand;; delete fTestStatistic;. Double_t Evaluate(RooAbsData& data, RooArgSet& ); Main interface to evaluate the test statistic on a dataset. const RooAbsArg* GetTestStatistic() const; Get the TestStatistic. {return fPdf;}. const TString GetVarName() const; {return ""Number of events"";}. » Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-09-08 17:42; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooStats__NumEventsTestStat.html:1530,Inherit,Inheritance,1530,root/html604/RooStats__NumEventsTestStat.html,https://root.cern,https://root.cern/root/html604/RooStats__NumEventsTestStat.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tStatMinNLLTestStat(RooAbsPdf& pdf); RooStats::MinNLLTestStatMinNLLTestStat(const RooStats::MinNLLTestStat& rhs); RooStats::MinNLLTestStat&operator=(const RooStats::MinNLLTestStat& rhs); virtual boolRooStats::TestStatistic::PValueIsRightTail() const; voidSetLOffset(Bool_t flag = kTRUE); voidSetMinimizer(const char* minimizer); voidSetOneSided(Bool_t flag = true); voidSetOneSidedDiscovery(Bool_t flag = true); voidSetPrintLevel(Int_t printlevel); voidSetReuseNLL(Bool_t flag); voidSetStrategy(Int_t strategy); voidSetTolerance(double tol); virtual voidSetVarName(const char* name); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); RooStats::TestStatisticRooStats::TestStatistic::TestStatistic(); RooStats::TestStatisticRooStats::TestStatistic::TestStatistic(const RooStats::TestStatistic&). Data Members; private:. RooStats::ProfileLikelihoodTestStat*fProflts. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MinNLLTestStat(); Proof constructor. Do not use. MinNLLTestStat(RooAbsPdf& pdf). MinNLLTestStat(const RooStats::MinNLLTestStat& rhs). MinNLLTestStat & operator=(const RooStats::MinNLLTestStat& rhs). virtual ~MinNLLTestStat(). void SetOneSided(Bool_t flag = true); {fProflts->SetOneSided(flag);}. void SetOneSidedDiscovery(Bool_t flag = true); {fProflts->SetOneSidedDiscovery(flag);}. void SetReuseNLL(Bool_t flag); { fProflts->SetReuseNLL(flag); }. void SetMinimizer(const char* minimizer); { fProflts->SetMinimizer(minimizer); }. void SetStrategy(Int_t strategy); { fProflts->SetStrategy(strategy); }. void SetTolerance(double tol); { fProflts->SetTolerance(tol); }. void SetPrintLevel(Int_t printlevel); { fProflts->SetPrintLevel(printlevel); }. void SetLOffset(Bool_t flag = kTRUE); { fProflts->SetLOffset(flag) ; }. Double_t Evaluate(RooAbsData& data, RooArgSet& paramsOfInterest); Main interface to evaluate the test statistic on a dataset. voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__MinNLLTestStat.html:1938,Inherit,Inheritance,1938,root/html602/RooStats__MinNLLTestStat.html,https://root.cern,https://root.cern/root/html602/RooStats__MinNLLTestStat.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tStatistic::PValueIsRightTail() const; RooStats::RatioOfProfiledLikelihoodsTestStatRatioOfProfiledLikelihoodsTestStat(); RooStats::RatioOfProfiledLikelihoodsTestStatRatioOfProfiledLikelihoodsTestStat(const RooStats::RatioOfProfiledLikelihoodsTestStat&); RooStats::RatioOfProfiledLikelihoodsTestStatRatioOfProfiledLikelihoodsTestStat(RooAbsPdf& nullPdf, RooAbsPdf& altPdf, const RooArgSet* altPOI = 0); static voidSetAlwaysReuseNLL(Bool_t flag); voidSetMinimizer(const char* minimizer); voidSetPrintLevel(Int_t printLevel); voidSetReuseNLL(Bool_t flag); voidSetStrategy(Int_t strategy); voidSetSubtractMLE(bool subtract); voidSetTolerance(Double_t tol); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; private:. RooArgSet*fAltPOI; RooStats::ProfileLikelihoodTestStatfAltProfile; RooStats::ProfileLikelihoodTestStatfNullProfile; Bool_tfSubtractMLE; static Bool_tfgAlwaysReuseNll. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RatioOfProfiledLikelihoodsTestStat(); Proof constructor. Don't use. RatioOfProfiledLikelihoodsTestStat(RooAbsPdf& nullPdf, RooAbsPdf& altPdf, const RooArgSet* altPOI = 0). Calculates the ratio of profiled likelihoods. 	 By default the calculation is:. 	 Lambda(mu_alt , conditional MLE for alt nuisance); 	log --------------------------------------------; 	 Lambda(mu_null , conditional MLE for null nuisance). 	where Lambda is the profile likeihood ratio, so the; 	MLE for the null and alternate are subtracted off. 	If SetSubtractMLE(false) then it calculates:. 	 L(mu_alt , conditional MLE for alt nuisance); 	log --------------------------------------------; 	 L(mu_null , conditional MLE for null nuisance). 	The values of the parameters of interest for the alternative; 	hypothesis are taken at the time of the construction.; 	If empty, it treats all free parameters as nuisance parameters. 	The value of the parameters of interest for the nul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__RatioOfProfiledLikelihoodsTestStat.html:1875,Inherit,Inheritance,1875,root/html532/RooStats__RatioOfProfiledLikelihoodsTestStat.html,https://root.cern,https://root.cern/root/html532/RooStats__RatioOfProfiledLikelihoodsTestStat.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tStereoEyeOffsetFac (Float_t f);  ; void SetStereoFrustumAsymFac (Float_t f);  ; void SetStereoZeroParallax (Float_t f);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void SwitchColorSet ();  Switch between dark and light colorsets. ;  ; virtual void UnClicked (TObject *obj, UInt_t button, UInt_t state);  Emit UnClicked signal with button id and modifier state. ;  ; virtual void UnMouseOver (TObject *obj, UInt_t state);  Emit UnMouseOver signal. ;  ; void UpdateScene (Bool_t redraw=kTRUE);  Force update of pad-scenes. ;  ; void UseDarkColorSet ();  Use the dark color-set. ;  ; void UseDefaultColorSet (Bool_t x);  Set usage of the default color set. ;  ; void UseLightColorSet ();  Use the light color-set. ;  ; Int_t ViewportDiagonal () const;  ;  Public Member Functions inherited from TVirtualViewer3D; virtual ~TVirtualViewer3D ();  ; virtual void DrawViewer ();  ; TClass * IsA () const override;  ; virtual void ObjectPaint (TObject *, Option_t *="""");  ; virtual TObject * SelectObject (Int_t, Int_t);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName ()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLEmbeddedViewer.html:12481,inherit,inherited,12481,doc/master/classTGLEmbeddedViewer.html,https://root.cern,https://root.cern/doc/master/classTGLEmbeddedViewer.html,3,['inherit'],['inherited']
Modifiability,"tStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions;  RooBinnedGenContext (const RooBinnedGenContext &other);  ; void generateEvent (RooArgSet &theEvent, Int_t remaining) override;  this method is not implemented for this context ;  ; void initGenerator (const RooArgSet &theEvent) override;  One-time initialization of generator context. ;  ;  Protected Member Functions inherited from RooAbsGenContext; virtual RooDataSet * createDataSet (const char *name, const char *title, const RooArgSet &obs);  Create an empty dataset to hold the events that will be generated. ;  ; void resampleData (double &ratio);  Rescale existing output buffer with given ratio. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; bool _expectedData;  Asimov? ;  ; std::unique_ptr< RooDataHist > _hist;  Histogram. ;  ; RooAbsPdf * _pdf;  Pointer to cloned p.d.f. ;  ; RooArgSet _pdfSet;  Set owned all nodes of internal clone of p.d.f. ;  ; std::unique_ptr< RooArgSet > _vars;  ;  Protected Attributes inherited from RooAbsGenContext; UInt_t _expectedEvents;  Number of expected events from extended p.d.f. ;  ; RooAbsPdf::ExtendMode _extendMode;  Extended mode capabilities of p.d.f. ;  ; RooDataSet * _genData = nullptr;  ! Data being generated ;  ; bool _isValid;  Is context in valid state? ;  ; Int_t _nextProtoIndex;  Next prototype event to load according to LUT. ;  ; TString _normRange;  Normalization range of pdf. ;  ; std::vector< Int_t > _protoOrder;  LUT with traversal order of prototype data. ;  ; const RooDataSet * _prototype;  Pointer to prototype dataset. ;  ; RooA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinnedGenContext.html:14367,inherit,inherited,14367,doc/master/classRooBinnedGenContext.html,https://root.cern,https://root.cern/doc/master/classRooBinnedGenContext.html,1,['inherit'],['inherited']
Modifiability,"tStreamer()Definition TClass.h:393; TClass::GetSchemaRulesconst ROOT::Detail::TSchemaRuleSet * GetSchemaRules() constReturn the set of the schema rules if any.Definition TClass.cxx:1999; TClass::GetStreamerInfosconst TObjArray * GetStreamerInfos() constDefinition TClass.h:492; TClass::IsLoadedBool_t IsLoaded() constReturn true if the shared library of this class is currently in the a process's memory.Definition TClass.cxx:5979; TClass::IsTObjectBool_t IsTObject() constReturn kTRUE is the class inherits from TObject.Definition TClass.cxx:6005; TClass::IsForeignBool_t IsForeign() constReturn kTRUE is the class is Foreign (the class does not have a Streamer method).Definition TClass.cxx:6014; TClass::GetStreamerInfoTVirtualStreamerInfo * GetStreamerInfo(Int_t version=0, Bool_t isTransient=kFALSE) constreturns a pointer to the TVirtualStreamerInfo object for version If the object does not exist,...Definition TClass.cxx:4666; TClass::InheritsFromBool_t InheritsFrom(const char *cl) const overrideReturn kTRUE if this class inherits from a class with name ""classname"".Definition TClass.cxx:4941; TClass::GetCollectionProxyTVirtualCollectionProxy * GetCollectionProxy() constReturn the proxy describing the collection (if any).Definition TClass.cxx:2964; TClass::PropertyLong_t Property() const overrideReturns the properties of the TClass as a bit field stored as a Long_t value.Definition TClass.cxx:6153; TClass::GetConversionStreamerInfoTVirtualStreamerInfo * GetConversionStreamerInfo(const char *onfile_classname, Int_t version) constReturn a Conversion StreamerInfo from the class 'classname' for version number 'version' to this clas...Definition TClass.cxx:7153; TClass::FindConversionStreamerInfoTVirtualStreamerInfo * FindConversionStreamerInfo(const char *onfile_classname, UInt_t checksum) constReturn a Conversion StreamerInfo from the class 'classname' for the layout represented by 'checksum' ...Definition TClass.cxx:7260; TClass::IsVersionedBool_t IsVersioned() constDefinitio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranchElement_8cxx_source.html:284040,inherit,inherits,284040,doc/master/TBranchElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranchElement_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"tString(Int_t npar); virtual Bool_tGetTime(Int_t npar, Int_t& hour, Int_t& min, Int_t& sec); virtual Bool_tGetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t&); virtual const char*TObject::GetTitle() const; virtual UInt_tGetUInt(Int_t npar); virtual ULong64_tGetULong64(Int_t npar); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTSQLStatement::GetVDouble(Int_t, vector<Double_t>&); virtual Bool_tTSQLStatement::GetVInt(Int_t, vector<Int_t>&); virtual Bool_tTSQLStatement::GetVLong(Int_t, vector<Long_t>&); virtual Bool_tTSQLStatement::GetVLong64(Int_t, vector<Long64_t>&); virtual Bool_tTSQLStatement::GetVUInt(Int_t, vector<UInt_t>&); virtual Bool_tTSQLStatement::GetVULong64(Int_t, vector<ULong64_t>&); Int_tTSQLStatement::GetYear(Int_t); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTSQLStatement::IsError() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsNull(Int_t npar); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNextIteration(); virtual Bool_tNextResultRow(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMySQLStatement.html:4163,Inherit,InheritsFrom,4163,root/html602/TMySQLStatement.html,https://root.cern,https://root.cern/root/html602/TMySQLStatement.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tStyle () const;  ; virtual TGToolTip * GetToolTip () const;  ; virtual void * GetUserData () const;  ; virtual Bool_t IsExclusiveToggle () const;  ; virtual void Pressed ();  ; virtual void Released ();  ; virtual void SetDown (Bool_t on=kTRUE, Bool_t emit=kFALSE);  ; virtual void SetEnabled (Bool_t e=kTRUE);  Set enabled or disabled state of button. ;  ; virtual void SetGroup (TGButtonGroup *gr);  Sets new button-group for this button. ;  ; virtual void SetOn (Bool_t on=kTRUE, Bool_t emit=kFALSE);  ; virtual void SetStyle (const char *style);  Set the button style (modern or classic). ;  ; virtual void SetStyle (UInt_t newstyle);  Set the button style (modern or classic). ;  ; virtual void SetToolTipText (const char *text, Long_t delayms=400);  Set tool tip text associated with this button. ;  ; virtual void SetUserData (void *userData);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Toggle (Bool_t emit=kFALSE);  ; virtual void Toggled (Bool_t on);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw cla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCheckButton.html:7133,inherit,inherited,7133,doc/master/classTGCheckButton.html,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html,3,['inherit'],['inherited']
Modifiability,"tStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from RooPrintable;  RooPrintable ();  ; virtual ~RooPrintable ();  ; virtual StyleOption defaultPrintStyle (Option_t *opt) const;  ; virtual void printStream (std::ostream &os, Int_t contents, StyleOption style, TString indent="""") const;  Print description of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsLValue; virtual ~RooAbsLValue ()=default;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void cleanup ();  Explicitly deletes the shared properties list on exit to avoid problems with the initialization order. ;  ; static const char * DeclFileName ();  ; static void printScientific (bool flag=false);  If true, contents of RooRealVars will be printed in scientific notation. ;  ; static void printSigDigits (Int_t ndig=5);  Set number of digits to show when printing RooRealVars. ;  ;  Static Public Member Functions inherited from RooAbsRealLValue; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TH1 * createHistogram (const char *name, RooArgList &vars, const char *tAxisLabel, const RooAbsBinning **bins);  Create a 1,2, or 3D-histogram with ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:54429,inherit,inherited,54429,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,1,['inherit'],['inherited']
Modifiability,"tStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. RooNameReg(Int_t hashSize = 31); RooNameReg(const RooNameReg& other); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum { kRenamedArg; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. RooHashTable_htableRepository of registered names; static RooNameReg*_instance; RooLinkedList_list; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNameReg(Int_t hashSize = 31); {}. ~RooNameReg(); Destructor. RooNameReg(const RooNameReg& other); Copy constructor. RooNameReg& instance(); Return reference to singleton instance. void cleanup(); Cleanup function called by atexit() handler installed by RooSentinel; to delete global objects on heap at end of program. const TNamed* constPtr(const char* stringPtr); Return a unique TNamed pointer for given C++ string. const char* constStr(const TNamed* namePtr); Return C++ string corresponding to given TNamed pointer. const TNamed* ptr(const char* stringPtr); Return a unique TNamed pointer for given C++ string. const char* str(const TNamed* ptr); Return C++ string corresponding to given TNamed pointer. const TNamed* known(const char* stringPtr); If the name is already known, return its TNamed pointer. Otherwise return 0 (don't register the name). » Last changed: Sat Jun 20 16:42:30 2015 » Last generated: 2015-06-20 16:42; This page has ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooNameReg.html:6111,Inherit,Inheritance,6111,root/html534/RooNameReg.html,https://root.cern,https://root.cern/root/html534/RooNameReg.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTRandom::WriteRandom(const char* filename). protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; UInt_tTRandom::fSeedRandom number generator seed; UInt_tfSeed1Random number generator seed 1; UInt_tfSeed2Random number generator seed 2; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TRandom2(UInt_t seed = 1); default constructor*-*-*-*-; *-* ===================. ~TRandom2(); default destructor*-*-*-*-; *-* ==================. Double_t Rndm(Int_t i = 0); TausWorth generator from L'Ecuyer, uses as seed 3x32bits integers; Use a mask of 0xffffffffUL to make in work on 64 bit machines; Periodicity of about 10**26. void RndmArray(Int_t n, Float_t* array); Return an array of n random numbers uniformly distributed in ]0,1]. void RndmArray(Int_t n, Double_t* array); Return an array of n random numbers uniformly distributed in ]0,1]. void SetSeed(UInt_t seed = 0); Set the generator seed.; If the seed given is zero, generate automatically seed values which; are different every time by using TRandom3 and TUUID; If a seed is given generate the other two needed for the generator state using; a linear congruential generator; The only condition, stated at the end of the 1999 L'Ecuyer paper is that the seeds; must be greater than ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRandom2.html:7224,Inherit,Inheritance,7224,root/html532/TRandom2.html,https://root.cern,https://root.cern/root/html532/TRandom2.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTRandom::WriteRandom(const char* filename). protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; UInt_tTRandom::fSeedRandom number generator seed; UInt_tfSeed1Random number generator seed 1; UInt_tfSeed2Random number generator seed 2; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TRandom2(UInt_t seed = 1); default constructor*-*-*-*-; *-* ===================. ~TRandom2(); default destructor*-*-*-*-; *-* ==================. Double_t Rndm(Int_t i = 0); TausWorth generator from L'Ecuyer, uses as seed 3x32bits integers; Use a mask of 0xffffffffUL to make in work on 64 bit machines; Periodicity of about 10**26; Generate number in interval (0,1) : 0 and 1 are not included in the interval. void RndmArray(Int_t n, Float_t* array); Return an array of n random numbers uniformly distributed in ]0,1]. void RndmArray(Int_t n, Double_t* array); Return an array of n random numbers uniformly distributed in ]0,1]. void SetSeed(UInt_t seed = 0); Set the generator seed.; If the seed given is zero, generate automatically seed values which; are different every time by using TRandom3 and TUUID; If a seed is given generate the other two needed for the generator state using; a linear congruential generator; The only condition, stated ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRandom2.html:7243,Inherit,Inheritance,7243,root/html534/TRandom2.html,https://root.cern,https://root.cern/root/html534/TRandom2.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTAttMarker::fMarkerStyleMarker style; Int_tTPolyMarker3D::fNNumber of allocated points; TStringTPolyMarker3D::fNameName of polymarker; Int_tTEveElement::fNumChildren!; TStringTPolyMarker3D::fOptionOptions; Bool_tTPointSet3D::fOwnIdsFlag specifying id-objects are owned by the point-set; Float_t*TPolyMarker3D::fP[3*fN] Array of X,Y,Z coordinates; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TRefTEveElement::fSourceExternal object that is represented by this element.; TEvePointSelectorConsumer::ETreeVarType_eTEvePointSelectorConsumer::fSourceCSCoordinate-System of the source tree variables; TStringfTitleTitle/tooltip of the TEvePointSet.; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEvePointSet.html:27087,variab,variables,27087,root/html602/TEvePointSet.html,https://root.cern,https://root.cern/root/html602/TEvePointSet.html,4,['variab'],['variables']
Modifiability,"tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual voidTText::GetTextAscentDescent(UInt_t& a, UInt_t& d, const char* text) const; virtual voidTText::GetTextAscentDescent(UInt_t& a, UInt_t& d, const wchar_t* text) const; virtual Color_tTAttText::GetTextColor() const; virtual voidTText::GetTextExtent(UInt_t& w, UInt_t& h, const char* text) const; virtual voidTText::GetTextExtent(UInt_t& w, UInt_t& h, const wchar_t* text) const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const void*TText::GetWcsTitle() const; Double_tTText::GetX() const; Double_tTText::GetY() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTText::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttText::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TLink.html:3916,Inherit,InheritsFrom,3916,root/html534/TLink.html,https://root.cern,https://root.cern/root/html534/TLink.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual voidTText::GetTextAscentDescent(UInt_t& a, UInt_t& d, const char* text) const; virtual voidTText::GetTextAscentDescent(UInt_t& a, UInt_t& d, const wchar_t* text) const; virtual Color_tTAttText::GetTextColor() const; virtual voidTText::GetTextExtent(UInt_t& w, UInt_t& h, const char* text) const; virtual voidTText::GetTextExtent(UInt_t& w, UInt_t& h, const wchar_t* text) const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const void*TText::GetWcsTitle() const; Double_tTText::GetX() const; Double_tTText::GetY() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTText::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttText::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TLink&operator=(const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLink.html:3844,Inherit,InheritsFrom,3844,root/html602/TLink.html,https://root.cern,https://root.cern/root/html602/TLink.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tTBufferFile::fDisplacementValue to be added to the map offsets; TStreamerInfo*TBufferFile::fInfoPointer to TStreamerInfo object writing/reading the buffer; TBufferFile::InfoList_tTBufferFile::fInfoStackStack of pointers to the TStreamerInfos; TExMap*TBufferFile::fMapMap containing object,offset pairs for reading/writing; Int_tTBufferFile::fMapCountNumber of objects or classes in map; Int_tTBufferFile::fMapSizeDefault size of map; Bool_tTBuffer::fModeRead or write mode; TObject*TBuffer::fParentPointer to parent object owning this buffer; UShort_tTBufferFile::fPidOffsetOffset to be added to the pid index in this key/buffer.; ReAllocCharFun_tTBuffer::fReAllocFunc! Realloc function to be used when extending the buffer.; Int_tTBuffer::fVersionBuffer format version; static Int_tTBufferFile::fgMapSizeDefault map size for all TBuffer objects. private:. vector<Int_t>*fColumnVec!; TString*fInsertQuery!; vector<int>::const_iteratorfIter; TSQLRow**fRowPtr!. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBufferSQL(TBuffer::EMode mode, vector<Int_t>* vc, TString* insert_query, TSQLRow** rowPtr); Constructor. TBufferSQL(TBuffer::EMode mode, Int_t bufsiz, vector<Int_t>* vc, TString* insert_query, TSQLRow** rowPtr); Constructor. TBufferSQL(TBuffer::EMode mode, Int_t bufsiz, vector<Int_t>* vc, TString* insert_query, TSQLRow** rowPtr, void* buf, Bool_t adopt = kTRUE); Constructor. TBufferSQL(); Constructor. ~TBufferSQL(); Destructo. void ReadBool(Bool_t& b); Operator>>. void ReadChar(Char_t& c); Operator>>. void ReadShort(Short_t& s); Operator>>. void ReadInt(Int_t& i); Operator>>. void ReadFloat(Float_t& f); Operator>>. void ReadLong(Long_t& l); Operator>>. void ReadDouble(Double_t& d); Operator>>. void WriteBool(Bool_t b); Operator<<. void WriteChar(Char_t c); Operator<<. void WriteShort(Short_t s); Operator<<. void WriteInt(Int_t i); Operator<<. void WriteLong(Long_t l); Operator<<. void WriteFloat(Float_t f); Operator<<. void WriteDoubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBufferSQL.html:21299,Inherit,Inheritance,21299,root/html602/TBufferSQL.html,https://root.cern,https://root.cern/root/html602/TBufferSQL.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTEveCaloViz::fValueIsColorInterpret signal value as RGBA color.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; Float_tfZAxisStep; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloLego(TEveCaloData* data = 0, const char* n = ""TEveCaloLego"", const char* t = """"); Constructor. void SetData(TEveCaloData* d). void BuildCellIdCache(); Build list of drawn cell IDs. For more information see TEveCaloLegoGL:DirectDraw(). void ComputeBBox(); Fill bounding-box information of the base-class TAttBBox (virtual method).; If member 'TEveFrameBox* fFrame' is set, frame's corners are used as bbox. TEveCaloViz& operator=(const TEveCaloLego& ). void SetProjection(TEveProjectionManager* proj, TEveProjectable* model). TEveCaloLego(const TEveCaloLego& ). virtual ~TEveCaloLego(); {}. Color_t GetFontColor() const; { return fFontColor; }. void SetFontColor(Color_t ci); { fFontColor=ci; }. Color_t GetGridColor() const; { return fGridColor; }. void SetGridColor(Color_t ci); { fGridColor=ci; }. Color_t GetPlaneColor() const; { return fPlaneColor; }. void SetPlaneColor(Color_t ci); { fPlaneColor=ci; }. Char_t GetPlaneTransparency() co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveCaloLego.html:26349,Inherit,Inheritance,26349,root/html602/TEveCaloLego.html,https://root.cern,https://root.cern/root/html602/TEveCaloLego.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; UChar_t*fTringCols[3*fNTrings]; Float_t*fTringNorms[3*fNTrings]; Int_t*fTrings[3*fNTrings]; void*TEveElement::fUserData! Externally assigned and controlled user data.; Float_t*fVerts[3*fNVerts]; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTriangleSet(Int_t nv, Int_t nt, Bool_t norms = kFALSE, Bool_t cols = kFALSE); Constructor. ~TEveTriangleSet(); Destructor. void GenerateTriangleNormals(); Generate triangle normals via cross product of triangle edges. void GenerateRandomColors(); Assign random colors to all triangles. void GenerateZNormalColors(Float_t fac = 20, Int_t min = -20, Int_t max = 20, Bool_t interp = kFALSE, Bool_t wrap = kFALSE); Generate triangle colors by the z-component of the normal.; Current palette is taken from gStyle. void ComputeBBox(); Compute bounding box.; Virtual from TAttBBox. void Paint(Option_t* option = """"); Paint this object. Only direct rendering is supported. TEveTriangleSet* ReadTrivialFile(const char* file); Read a simple ascii input file describing vertices and triangles. TEveTriangleSet(const TEveTriangleSet& ). TEveTriangleSet& operator=(const TEveTriangleSet& ). Bool_t CanEditMainTransparency() const; { return kTRUE; }. Int_t Ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveTriangleSet.html:21121,Inherit,Inheritance,21121,root/html532/TEveTriangleSet.html,https://root.cern,https://root.cern/root/html532/TEveTriangleSet.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTFile::fgCacheFileDisconnectedIndicates, we trust in the files in the cache dir without stat on the cached file; static Bool_tTFile::fgCacheFileForceIndicates, to force all READ to CACHEREAD; static Long64_tTFile::fgFileCounterCounter for all opened files; static Bool_tTFile::fgOnlyStagedBefore the file is opened, it is checked, that the file is staged, if not, the open fails; static UInt_tTFile::fgOpenTimeoutTimeout for open operations in ms - 0 corresponds to blocking i/o; static Int_tTFile::fgReadCallsNumber of bytes read from all TFile objects; static Bool_tTFile::fgReadInfoif true (default) ReadStreamerInfo is called when opening a file; static Int_tTFile::fgReadaheadSizeReadahead buffer size. private:. TStringfAuthProtoUsed to specific the auth protocol; TStringfDiskServerCASTOR remote disk server; TStringfInternalPathCASTOR internal path; Bool_tfIsCastortrue if internal path is valid; Bool_tfWrittenTotrue if data has been written to file. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TCastorFile(const char* url, Option_t* option = """", const char* ftitle = """", Int_t compress = 1, Int_t netopt = 0); Create a TCastorFile. A TCastorFile is like a normal TNetFile except; that it obtains the remote node (disk server) via the CASTOR API, once; the disk server and the local file path are determined, the file will; be accessed via the rootd daemon. File names have to be specified like:; castor:/castor/cern.ch/user/r/rdm/bla.root.; The other arguments are the same as for TNetFile and TFile. void FindServerAndPath(); Find the CASTOR disk server and internal file path. Int_t SysClose(Int_t fd); Close currently open file. Bool_t WriteBuffer(const char* buf, Int_t len); Write specified byte range to remote file via rootd daemon.; Returns kTRUE in case of error. void ConnectServer(Int_t* stat, EMessageTypes* kind, Int_t netopt, Int_t tcpwindowsize, Bool_t forceOpen, Bool_t forceRead); Connect to remote rootd server on CASTOR disk",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TCastorFile.html:24456,Inherit,Inheritance,24456,root/html532/TCastorFile.html,https://root.cern,https://root.cern/root/html532/TCastorFile.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTFitResult() const; return a new copy of the TFitResult object which needs to be deleted later by the user. bool Scan(unsigned int ipar, TGraph* gr, double xmin = 0, double xmax = 0); scan parameter ipar between value of xmin and xmax; a graph must be given which will be on return filled with the scan resul; If the graph size is zero, a default size n = 40 will be used; *. bool Contour(unsigned int ipar, unsigned int jpar, TGraph* gr, double confLevel = 0.683); create a 2D contour around the minimum for the parameter ipar and jpar; if a minimum does not exist or is invalid it will return false; on exit a TGraph is filled with the contour points; the number of contur points is determined by the size of the TGraph.; if the size is zero a default number of points = 20 is used; pass optionally the confidence level, default is 0.683; it is assumed that ErrorDef() defines the right error definition; (i.e 1 sigma error for one parameter). If not the confidence level are scaled to new level. TBackCompFitter(). void SetMethodCall(TMethodCall* m); for using interpreted function passed by the user. { fMethodCall = m; }. ROOT::Fit::FitConfig & GetFitConfig(); !!!! new method (of this interface); get reference to Fit configuration (NOTE: it will be invalid when class is deleted). { return fFitter->Config(); }. const ROOT::Fit::FitResult & GetFitResult() const; get reference to Fit Result object (NOTE: it will be invalid when class is deleted). { return fFitter->Result(); }. const ROOT::Fit::FitData & GetFitData() const; get reference to Fit Data object (NOTE: it will be invalid when class is deleted). { return *fFitData; }. » Author: L. Moneta 08/2008 » Copyright (c) 2008 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/minuit2:$Id: TBackCompFitter.h 35643 2010-09-23 12:48:32Z moneta $ » Last generated: 2010-09-23 20:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TBackCompFitter.html:19099,config,configuration,19099,root/html528/TBackCompFitter.html,https://root.cern,https://root.cern/root/html528/TBackCompFitter.html,1,['config'],['configuration']
Modifiability,"tTFitResult() const; return a new copy of the TFitResult object which needs to be deleted later by the user. bool Scan(unsigned int ipar, TGraph* gr, double xmin = 0, double xmax = 0); scan parameter ipar between value of xmin and xmax; a graph must be given which will be on return filled with the scan resul; If the graph size is zero, a default size n = 40 will be used; *. bool Contour(unsigned int ipar, unsigned int jpar, TGraph* gr, double confLevel = 0.683); create a 2D contour around the minimum for the parameter ipar and jpar; if a minimum does not exist or is invalid it will return false; on exit a TGraph is filled with the contour points; the number of contur points is determined by the size of the TGraph.; if the size is zero a default number of points = 20 is used; pass optionally the confidence level, default is 0.683; it is assumed that ErrorDef() defines the right error definition; (i.e 1 sigma error for one parameter). If not the confidence level are scaled to new level. TBackCompFitter(). void SetMethodCall(TMethodCall* m); for using interpreted function passed by the user. { fMethodCall = m; }. ROOT::Fit::FitConfig & GetFitConfig(); !!!! new method (of this interface); get reference to Fit configuration (NOTE: it will be invalid when class is deleted). { return fFitter->Config(); }. const ROOT::Fit::FitResult & GetFitResult() const; get reference to Fit Result object (NOTE: it will be invalid when class is deleted). { return fFitter->Result(); }. const ROOT::Fit::FitData & GetFitData() const; get reference to Fit Data object (NOTE: it will be invalid when class is deleted). { return *fFitData; }. » Author: L. Moneta 08/2008 » Copyright (c) 2008 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/minuit2:$Id: TBackCompFitter.h 35643 2010-09-23 12:48:32Z moneta $ » Last generated: 2011-07-04 15:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TBackCompFitter.html:19168,config,configuration,19168,root/html530/TBackCompFitter.html,https://root.cern,https://root.cern/root/html530/TBackCompFitter.html,1,['config'],['configuration']
Modifiability,"tTFitResult() const; return a new copy of the TFitResult object which needs to be deleted later by the user. bool Scan(unsigned int ipar, TGraph* gr, double xmin = 0, double xmax = 0); scan parameter ipar between value of xmin and xmax; a graph must be given which will be on return filled with the scan resul; If the graph size is zero, a default size n = 40 will be used; *. bool Contour(unsigned int ipar, unsigned int jpar, TGraph* gr, double confLevel = 0.683); create a 2D contour around the minimum for the parameter ipar and jpar; if a minimum does not exist or is invalid it will return false; on exit a TGraph is filled with the contour points; the number of contur points is determined by the size of the TGraph.; if the size is zero a default number of points = 20 is used; pass optionally the confidence level, default is 0.683; it is assumed that ErrorDef() defines the right error definition; (i.e 1 sigma error for one parameter). If not the confidence level are scaled to new level. TBackCompFitter(). void SetMethodCall(TMethodCall* m); for using interpreted function passed by the user. { fMethodCall = m; }. ROOT::Fit::FitConfig & GetFitConfig(); !!!! new method (of this interface); get reference to Fit configuration (NOTE: it will be invalid when class is deleted). { return fFitter->Config(); }. const ROOT::Fit::FitResult & GetFitResult() const; get reference to Fit Result object (NOTE: it will be invalid when class is deleted). { return fFitter->Result(); }. const ROOT::Fit::FitData & GetFitData() const; get reference to Fit Data object (NOTE: it will be invalid when class is deleted). { return *fFitData; }. » Author: L. Moneta 08/2008 » Copyright (c) 2008 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/minuit2:$Id: TBackCompFitter.h 35643 2010-09-23 12:48:32Z moneta $ » Last generated: 2011-12-02 14:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBackCompFitter.html:19168,config,configuration,19168,root/html532/TBackCompFitter.html,https://root.cern,https://root.cern/root/html532/TBackCompFitter.html,3,"['Config', 'config']","['Config', 'configuration']"
Modifiability,"tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; voidHide(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; Bool_tIsEmbedded() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGuiBldEditor.html:8859,Inherit,InheritsFrom,8859,root/html532/TGuiBldEditor.html,https://root.cern,https://root.cern/root/html532/TGuiBldEditor.html,4,['Inherit'],['InheritsFrom']
Modifiability,"tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGView::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tHandleMotion(Event_t* event); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tHandleSelectionClear(Event_t* event); virtual Bool_tHandleSelectionRequest(Event_t* event); virtual Bool_tHandleTimer(TTimer* t); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tIsMarked() const; Bool_tTObject::IsOnHeap() const; Bool_tIsReadOnly() const; virtual Bool_tIsSaved(); virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameEleme",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGTextView.html:9957,Inherit,InheritsFrom,9957,root/html532/TGTextView.html,https://root.cern,https://root.cern/root/html532/TGTextView.html,4,['Inherit'],['InheritsFrom']
Modifiability,"tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tHandleFocusChange(Event_t* event); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t* event); virtual Bool_tHandleMotion(Event_t* event); virtual Bool_tHandleSelection(Event_t* event); virtual Bool_tHandleSelectionClear(Event_t* event); virtual Bool_tHandleSelectionRequest(Event_t* event); virtual Bool_tHandleTimer(TTimer* t); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; Bool_tHasMarkedText() const; Bool_tHasOwnFont() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidHome(Bool_t mark = kFALSE); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInsert(const char*); virtual voidInsertText(const char* text, Int_t pos); virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tIsEdited() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsFrameDrawn() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGTextEntry.html:13415,Inherit,InheritsFrom,13415,root/html532/TGTextEntry.html,https://root.cern,https://root.cern/root/html532/TGTextEntry.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tHandleFocusChange(Event_t* event); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t* event); virtual Bool_tHandleMotion(Event_t* event); virtual Bool_tHandleSelection(Event_t* event); virtual Bool_tHandleSelectionClear(Event_t* event); virtual Bool_tHandleSelectionRequest(Event_t* event); virtual Bool_tHandleTimer(TTimer* t); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; Bool_tHasMarkedText() const; Bool_tHasOwnFont() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidHome(Bool_t mark = kFALSE); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInsert(const char*); virtual voidInsertText(const char* text, Int_t pos); virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tIsEdited() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsFrameDrawn() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTextEntry.html:13038,Inherit,InheritsFrom,13038,root/html602/TGTextEntry.html,https://root.cern,https://root.cern/root/html602/TGTextEntry.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Int_tTGedFrame::fPrioritylocation in GedEditor; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCalo3DEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void SetModel(TObject* obj); Set model object. void DoFrameTransparency(); Slot for frame transparency. TEveCaloVizEditor& operator=(const TEveCalo3DEditor& ). TEveCalo3DEditor(const TEveCalo3DEditor& ). virtual ~TEveCalo3DEditor(); {}. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id: TEveCaloVizEditor.h 33955 2010-06-17 11:33:13Z matevz $ » Last generated: 2011-11-03 20:11; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveCalo3DEditor.html:19766,Inherit,Inheritance,19766,root/html532/TEveCalo3DEditor.html,https://root.cern,https://root.cern/root/html532/TEveCalo3DEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Int_tTGedFrame::fPrioritylocation in GedEditor; TGLLightSetSubEditor*fSE; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLLightSetEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. ~TGLLightSetEditor(); Destructor. void SetModel(TObject* obj); SetModel ... forward to sub-editor. TGLLightSetSubEditor& operator=(const TGLLightSetEditor& ). TGLLightSetEditor(const TGLLightSetEditor& ). » Author: Matevz Tadel, Feb 2007 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-06-02 15:52; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGLLightSetEditor.html:20622,Inherit,Inheritance,20622,root/html604/TGLLightSetEditor.html,https://root.cern,https://root.cern/root/html604/TGLLightSetEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Int_tTGedFrame::fPrioritylocation in GedEditor; TGLLightSetSubEditor*fSE; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLLightSetEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. ~TGLLightSetEditor(); Destructor. void SetModel(TObject* obj); SetModel ... forward to sub-editor. TGLLightSetSubEditor& operator=(const TGLLightSetEditor& ). TGLLightSetEditor(const TGLLightSetEditor& ). » Author: Matevz Tadel, Feb 2007 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-06-30 14:53; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLLightSetEditor.html:20622,Inherit,Inheritance,20622,root/html602/TGLLightSetEditor.html,https://root.cern,https://root.cern/root/html602/TGLLightSetEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TParallelCoordEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Normal constructor. void MakeVariablesTab(); Make the ""variable"" tab. ~TParallelCoordEditor(); Destructor. void CleanUpSelections(); Clean up the selection combo box. void CleanUpVariables(); Clean up the variables combo box. void ConnectSignals2Slots(); Connect signals to slots. void DoActivateSelection(Bool_t ); Slot to activate or not a selection. void DoAddSelection(); Slot to add a selection. void DoAddVariable(); Slot to add a variable. void DoApplySelect(); Slot to apply a selection to the tree. void DoDelayDrawing(Bool_t ); Slot to delay the drawing. void DoDeleteSelection(); Slot to delete a selection. void DoDeleteVar(); Slot to delete a variable(). void DoDotsSpacing(); Slot to set the line dotspacing. void DoDotsSpacingField(); Slot to set the line dotspacing from the entry field. void DoAlphaField(); Slot to set the alpha value from the entry field. void DoAlpha(); Slot to set the alpha value. void DoEntriesToDraw(); Slot to select the entries to be drawn. void DoFirstEntry(); Slot to set the first entry. void DoGlobalLineColor(Pixel_t ); Slot to set the global line color. void DoGlobalLineWidth(Int_t ); Slot to set the global line width. void DoHideAllRanges(Bool_t ); Slot to hide all the ranges. void DoHistBinning(); Slot to set the axes histogram binning. void DoHistColorSelect(Pixel_t ); Slot to set the histograms color. void DoHistShowBoxes(Bool_t ); Slot to set histogram height. vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TParallelCoordEditor.html:23538,variab,variable,23538,root/html534/TParallelCoordEditor.html,https://root.cern,https://root.cern/root/html534/TParallelCoordEditor.html,2,['variab'],['variable']
Modifiability,"tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TParallelCoordEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Normal constructor. void MakeVariablesTab(); Make the ""variable"" tab. ~TParallelCoordEditor(); Destructor. void CleanUpSelections(); Clean up the selection combo box. void CleanUpVariables(); Clean up the variables combo box. void ConnectSignals2Slots(); Connect signals to slots. void DoActivateSelection(Bool_t ); Slot to activate or not a selection. void DoAddSelection(); Slot to add a selection. void DoAddVariable(); Slot to add a variable. void DoApplySelect(); Slot to apply a selection to the tree. void DoDelayDrawing(Bool_t ); Slot to delay the drawing. void DoDeleteSelection(); Slot to delete a selection. void DoDeleteVar(); Slot to delete a variable(). void DoDotsSpacing(); Slot to set the line dotspacing. void DoDotsSpacingField(); Slot to set the line dotspacing from the entry field. void DoEntriesToDraw(); Slot to select the entries to be drawn. void DoFirstEntry(); Slot to set the first entry. void DoGlobalLineColor(Pixel_t ); Slot to set the global line color. void DoGlobalLineWidth(Int_t ); Slot to set the global line width. void DoHideAllRanges(Bool_t ); Slot to hide all the ranges. void DoHistBinning(); Slot to set the axes histogram binning. void DoHistColorSelect(Pixel_t ); Slot to set the histograms color. void DoHistShowBoxes(Bool_t ); Slot to set histogram height. void DoHistPatternSelect(Style_t ); Slot to set the histograms fill style. void DoHistWidth(); Slot to set histogram w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TParallelCoordEditor.html:23384,variab,variable,23384,root/html530/TParallelCoordEditor.html,https://root.cern,https://root.cern/root/html530/TParallelCoordEditor.html,3,['variab'],['variable']
Modifiability,"tTGMainFrame::fWMWidthIncWM width increments; Int_tTGMainFrame::fWMXWM x position; Int_tTGMainFrame::fWMYWM y position; UInt_tTGFrame::fWidthframe width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TGLSAViewer&fViewer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLSAFrame(TGLSAViewer& viewer); Construct GUI frame, bound to passed 'viewer'. TGLSAFrame(const TGWindow* parent, TGLSAViewer& viewer); Construct GUI frame, bound to passed 'viewer'. ~TGLSAFrame(); Destroy the GUI frame. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process GUI message - defered back up to TGLSAViewer::ProcessFrameMessage(). void CloseWindow(); Close the GUI frame. TGLSAFrame(const TGLSAFrame& ); non-copyable class. » Author: Richard Maunder 10/08/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-03-13 19:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLSAFrame.html:21463,Inherit,Inheritance,21463,root/html534/TGLSAFrame.html,https://root.cern,https://root.cern/root/html534/TGLSAFrame.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTGView::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGTextView::HandleMotion(Event_t* event); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGTextView::HandleSelectionClear(Event_t* event); virtual Bool_tTGTextView::HandleSelectionRequest(Event_t* event); virtual Bool_tTGTextView::HandleTimer(TTimer* t); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); localebasic_ios<char,char_traits<char> >::imbue(const locale& __loc); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTGTextView::IsMarked() const; Bool_tTObject::IsOnHeap() const; Bool_tTGTextView::IsReadOnly() const; virtual Bool_tTGTextView::IsSaved(); virtual Bool_tTObject::IsSortable() cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGTextViewostream.html:11157,Inherit,InheritsFrom,11157,root/html604/TGTextViewostream.html,https://root.cern,https://root.cern/root/html604/TGTextViewostream.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t* event); virtual voidHandleMenu(Int_t id); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual voidHandleWindowClosed(Int_t id); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidHide(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); static TGFrame*HSplitter(); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; static TGuiBuilder*TGuiBuilder::Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTGuiBuilder::IsExecutable() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsGrabButtonDown() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSelectMode() const; virtual Bool_tTOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRootGuiBuilder.html:13064,Inherit,InheritsFrom,13064,root/html532/TRootGuiBuilder.html,https://root.cern,https://root.cern/root/html532/TRootGuiBuilder.html,4,['Inherit'],['InheritsFrom']
Modifiability,"tTGeoVolume::GetNtotal() const; Int_tTGeoVolume::GetNumber() const; Int_tGetNvolumes() const; virtual char*TGeoVolume::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Bool_tTGeoVolume::GetOptimalVoxels() const; virtual Option_t*TGeoVolume::GetOption() const; char*TGeoVolume::GetPointerName() const; TGeoShape*TGeoVolume::GetShape() const; Double_tGetStart() const; Double_tGetStep() const; virtual const char*TNamed::GetTitle() const; Char_tTGeoVolume::GetTransparency() const; virtual UInt_tTObject::GetUniqueID() const; TGeoVolume*GetVolume(Int_t id) const; TGeoVoxelFinder*TGeoVolume::GetVoxels() const; voidTGeoVolume::GrabFocus()MENU ; voidTGeoVolume::Gsord(Int_t); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static TGeoVolume*TGeoVolume::Import(const char* filename, const char* name = """", Option_t* option = """"); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTGeoVolume::InspectMaterial() constMENU ; voidTGeoVolume::InspectShape() constMENU ; voidTObject::InvertBit(UInt_t f); voidTGeoVolume::InvisibleAll(Bool_t flag = kTRUE)TOGGLE GETTER ; virtual TClass*IsA() const; Bool_tTGeoVolume::IsActive() const; Bool_tTGeoVolume::IsActiveDaughters() const; Bool_tTGeoVolume::IsAdded() const; Bool_tTGeoVolume::IsAllInvisible() const; virtual Bool_tTGeoVolume::IsAssembly() const; Bool_tTGeoVolume::IsCylVoxels() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTGeoVolume::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTGeoVolume::IsRaytracing() const; Bool_tTGeoVolume::IsReplicated() const; Bool_tTGeoVolume::IsRunTime() const; Bool_tTGeoVolume::IsSelected() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTGeoVolume::IsStyleDefault() const; Bool_tTGeoVolume::IsTopVolu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoVolumeMulti.html:13612,Inherit,InheritsFrom,13612,root/html532/TGeoVolumeMulti.html,https://root.cern,https://root.cern/root/html532/TGeoVolumeMulti.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tTGraph::GetMaxSize() const; virtual Double_tTGraph::GetMean(Int_t axis = 1) const; Double_tTGraph::GetMinimum() const; Int_tTGraph::GetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTGraph::GetPoint(Int_t i, Double_t& x, Double_t& y) const; virtual Double_tTGraph::GetRMS(Int_t axis = 1) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_t*TGraph::GetX() const; TAxis*TGraph::GetXaxis() const; Double_t*TGraph::GetY() const; TAxis*TGraph::GetYaxis() const; const char*RooPlotable::getYAxisLabel() const; Double_tRooPlotable::getYAxisMax() const; Double_tRooPlotable::getYAxisMin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGraph::InitExpo(Double_t xmin = 0, Double_t xmax = 0); virtual voidTGraph::InitGaus(Double_t xmin = 0, Double_t xmax = 0); virtual voidTGraph::InitPolynom(Double_t xmin = 0, Double_t xmax = 0); virtual Int_tTGraph::InsertPoint()MENU ; virtual voidTObject::Inspect() constMENU ; virtual Double_tTGraph::Integral(Int_t first = 0, Int_t last = -1) const; Double_tinterpolate(Double_t x, Double_t tolerance = 1e-10) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGraph::IsEditable() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tisIdentical(const RooCurve& other, Double_t tol = 1e-6) const; virtual Int_tTGraph::IsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCurve.html:7688,Inherit,InheritsFrom,7688,root/html532/RooCurve.html,https://root.cern,https://root.cern/root/html532/RooCurve.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tTGraph::GetMaxSize() const; virtual Double_tTGraph::GetMean(Int_t axis = 1) const; Double_tTGraph::GetMinimum() const; Int_tTGraph::GetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTGraph::GetPoint(Int_t i, Double_t& x, Double_t& y) const; virtual Double_tTGraph::GetRMS(Int_t axis = 1) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_t*TGraph::GetX() const; TAxis*TGraph::GetXaxis() const; Double_t*TGraph::GetY() const; TAxis*TGraph::GetYaxis() const; const char*RooPlotable::getYAxisLabel() const; Double_tRooPlotable::getYAxisMax() const; Double_tRooPlotable::getYAxisMin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGraph::InitExpo(Double_t xmin = 0, Double_t xmax = 0); virtual voidTGraph::InitGaus(Double_t xmin = 0, Double_t xmax = 0); virtual voidTGraph::InitPolynom(Double_t xmin = 0, Double_t xmax = 0); virtual Int_tTGraph::InsertPoint()MENU ; virtual voidTObject::Inspect() constMENU ; virtual Double_tTGraph::Integral(Int_t first = 0, Int_t last = -1) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGraph::IsEditable() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Int_tTGraph::IsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTGraph::LeastSquareFit(Int_t m, Double_t* a, Double_t xmin = 0, Double_t xmax = 0); virtual voidTGraph::Lea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooEllipse.html:6363,Inherit,InheritsFrom,6363,root/html532/RooEllipse.html,https://root.cern,https://root.cern/root/html532/RooEllipse.html,4,['Inherit'],['InheritsFrom']
Modifiability,"tTGraph::GetMinimum() const; Int_tTGraph::GetN() const; virtual const char*TNamed::GetName() const; Double_tgetNominalBinWidth() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTGraph::GetPoint(Int_t i, Double_t& x, Double_t& y) const; virtual Double_tTGraph::GetRMS(Int_t axis = 1) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_t*TGraph::GetX() const; TAxis*TGraph::GetXaxis() const; Double_t*TGraph::GetY() const; TAxis*TGraph::GetYaxis() const; const char*RooPlotable::getYAxisLabel() const; Double_tRooPlotable::getYAxisMax() const; Double_tRooPlotable::getYAxisMin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_thasIdenticalBinning(const RooHist& other) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGraph::InitExpo(Double_t xmin = 0, Double_t xmax = 0); virtual voidTGraph::InitGaus(Double_t xmin = 0, Double_t xmax = 0); virtual voidTGraph::InitPolynom(Double_t xmin = 0, Double_t xmax = 0); virtual Int_tTGraph::InsertPoint()MENU ; virtual voidTObject::Inspect() constMENU ; virtual Double_tTGraph::Integral(Int_t first = 0, Int_t last = -1) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGraph::IsEditable() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tisIdentical(const RooHist& other, Double_t tol = 1e-6) const; virtual Int_tTGraph::IsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTGraph::LeastSquareFit(Int_t m, Double_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooHist.html:8600,Inherit,InheritsFrom,8600,root/html532/RooHist.html,https://root.cern,https://root.cern/root/html532/RooHist.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tTMVA::MethodBase::GetMean(Int_t ivar) const; UInt_tGetMethodIndex(); const TString&TMVA::MethodBase::GetMethodName() const; TMVA::Types::EMVATMVA::MethodBase::GetMethodType() const; TStringTMVA::MethodBase::GetMethodTypeName() const; virtual vector<Float_t>TMVA::MethodBase::GetMulticlassEfficiency(vector<std::vector<Float_t> >& purity); virtual vector<Float_t>TMVA::MethodBase::GetMulticlassTrainingEfficiency(vector<std::vector<Float_t> >& purity); virtual const vector<Float_t>&TMVA::MethodBase::GetMulticlassValues(); virtual Double_tGetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); virtual const char*TMVA::MethodBase::GetName() const; UInt_tTMVA::MethodBase::GetNEvents() const; UInt_tTMVA::MethodBase::GetNTargets() const; UInt_tTMVA::MethodBase::GetNvar() const; UInt_tTMVA::MethodBase::GetNVariables() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; TMVA::IMethod*GetPreviousMethod(); virtual Double_tTMVA::MethodBase::GetProba(Double_t mvaVal, Double_t ap_sig); const TStringTMVA::MethodBase::GetProbaName() const; virtual Double_tTMVA::MethodBase::GetRarity(Double_t mvaVal, TMVA::Types::ESBType reftype = Types::kBackground) const; virtual voidTMVA::MethodBase::GetRegressionDeviation(UInt_t tgtNum, TMVA::Types::ETreeType type, Double_t& stddev, Double_t& stddev90Percent) const; virtual const vector<Float_t>&TMVA::MethodBase::GetRegressionValues(); Double_tTMVA::MethodBase::GetRMS(Int_t ivar) const; virtual Double_tTMVA::MethodBase::GetROCIntegral(TH1F* histS, TH1F* histB) const; virtual Double_tTMVA::MethodBase::GetROCIntegral(TMVA::PDF* pdfS = 0, TMVA::PDF* pdfB = 0) const; virtual Double_tTMVA::MethodBase::GetSeparation(TH1*, TH1*) const; virtual Double_tTMVA::MethodBase::GetSeparation(TMVA::PDF* pdfS = 0, TMVA::PDF* pdfB = 0) const; Double_tTMVA::MethodBase::GetSignalReferenceCut() const; Double_tTMVA::M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodCompositeBase.html:5109,Config,Configurable,5109,root/html532/TMVA__MethodCompositeBase.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodCompositeBase.html,1,['Config'],['Configurable']
Modifiability,"tTMVA::MethodBase::fBackgroundClassindex of the Background-class; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in input variable histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. TMatrixD*fInvHMatrixBinverse H-matrix (background); TMatrixD*fInvHMatrixSinverse H-matrix (signal); TVectorD*fVecMeanBvector of mean values (background); TVectorD*fVecMeanSvector of mean values (signal). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodHMatrix(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); standard constructor for the H-Matrix method. MethodHMatrix(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL); constructor from weight file. void Init( void ); default initialization called by all constructors. ~MethodHMatrix( void ); destructor. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); FDA can handle classification with 2 classes and regression with one regression-target. void DeclareOptions(); MethodHMatrix options: none (apart from those implemented in MethodBase). void ProcessOptions(); process user options. void Train( void ); computes H-matrices for signal and background samples. void ComputeCovariance(Bool_t , TMatrixD* ); compute covariance matrix. Double_t GetMvaValue(Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodHMatrix.html:17012,Inherit,Inheritance,17012,root/html532/TMVA__MethodHMatrix.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodHMatrix.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTMVA::MethodBase::fBackgroundClassindex of the Background-class; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in input variable histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. TMatrixD*fInvHMatrixBinverse H-matrix (background); TMatrixD*fInvHMatrixSinverse H-matrix (signal); TVectorD*fVecMeanBvector of mean values (background); TVectorD*fVecMeanSvector of mean values (signal). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodHMatrix(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); standard constructor for the H-Matrix method. MethodHMatrix(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = __null); constructor from weight file. void Init( void ); default initialization called by all constructors. ~MethodHMatrix( void ); destructor. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); FDA can handle classification with 2 classes and regression with one regression-target. void DeclareOptions(); MethodHMatrix options: none (apart from those implemented in MethodBase). void ProcessOptions(); process user options. void Train( void ); computes H-matrices for signal and background samples. void ComputeCovariance(Bool_t , TMatrixD* ); compute covariance matrix. Double_t GetMvaValue(Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodHMatrix.html:18260,Inherit,Inheritance,18260,root/html602/TMVA__MethodHMatrix.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodHMatrix.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voiddumpFormula(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Bool_tRooAbsPdf::evalError(); static RooAbsReal::EvalErrorIterRooAbsReal::evalErrorIter(); static RooAbsReal::ErrorLoggingModeRooAbsReal::evalErrorLoggingMode(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet* nset) const; virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet& nset) const; RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual Double_tRooAbsPdf::extendedTerm(Double_t observedEvents, const RooArgSet* nset = 0) const; virtual RooAbsPdf::ExtendModeRooAbsPdf::extendMode() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooGenericPdf.html:10922,extend,extendedTerm,10922,root/html532/RooGenericPdf.html,https://root.cern,https://root.cern/root/html532/RooGenericPdf.html,2,['extend'],['extendedTerm']
Modifiability,"tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voiddumpFormula(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Bool_tRooAbsPdf::evalError(); static RooAbsReal::EvalErrorIterRooAbsReal::evalErrorIter(); static RooAbsReal::ErrorLoggingModeRooAbsReal::evalErrorLoggingMode(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet* nset) const; virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet& nset) const; RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual Double_tRooAbsPdf::extendedTerm(UInt_t observedEvents, const RooArgSet* nset = 0) const; virtual RooAbsPdf::ExtendModeRooAbsPdf::extendMode() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooGenericPdf.html:10804,extend,extendedTerm,10804,root/html528/RooGenericPdf.html,https://root.cern,https://root.cern/root/html528/RooGenericPdf.html,2,['extend'],['extendedTerm']
Modifiability,"tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; TMVA::MinuitFitterMinuitFitter(const TMVA::MinuitFitter&); TMVA::MinuitFitterMinuitFitter(TMVA::IFitterTarget& target, const TString& name, vector<TMVA::Interval*>& ranges, const TString& theOption); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::MinuitFitter&operator=(const TMVA::MinuitFitter&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidTMVA::Configurable::PrintOptions() const; virtual voidTMVA::IFitterTarget::ProgressNotifier(TString, TString); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual Double_tRun(vector<Double_t>& pars); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::Configurable:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MinuitFitter.html:4652,Config,Configurable,4652,root/html602/TMVA__MinuitFitter.html,https://root.cern,https://root.cern/root/html602/TMVA__MinuitFitter.html,2,['Config'],['Configurable']
Modifiability,"tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Int_tTryLock(); virtual Int_tUnLock(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TMutex(const TMutex&); TMutex&operator=(const TMutex&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TMutexImp*fMutexImppointer to mutex implementation. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMutex(Bool_t recursive = kFALSE); Create a mutex lock. The actual mutex implementation will be; provided via the TThreadFactory. Int_t Lock(); Lock the mutex. Returns 0 when no error, EDEADLK when mutex was already; locked by this thread and this mutex is not reentrant. Int_t TryLock(); Try to lock mutex. Returns 0 when no error, EDEADLK when mutex was; already locked by this thread and this mutex is not reentrant. Int_t UnLock(); Unlock the mutex. Returns 0 when no error, EPERM when mutex was already; unlocked by this thread. Int_t CleanUp(); Clean up of mutex. TVirtualMutex * Factory(Bool_t recursive = kFALSE); Create mutex and return pointer to it. Calling function must care; about proper deletion. The function is intended to be used in connection; with the R__LOCKGUARD2 macro for local thread protection. Since ""new"" is; used the TStorage class has to be protected by gGlobalMutex. TMutex(const TMutex& ). TMutex& operator=(const TMu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMutex.html:5514,Inherit,Inheritance,5514,root/html532/TMutex.html,https://root.cern,https://root.cern/root/html532/TMutex.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. static voidCreateQClient(); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; static TGClient*gfQtClient. private:. TGuiFactory*fGuiProxy. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TQtRootGuiFactory(); TQtRootGuiFactory ctor.; Restore the right TVirtualX pointer. TQtRootGuiFactory(const char* name, const char* title = ""Qt-based ROOT GUI Factory""); TQtRootGuiFactory ctor.; Restore the right TVirtualX pointer. TApplicationImp * CreateApplicationImp(const char* classname, int* argc, char** argv). void CreateQClient(). TCanvasImp * CreateCanvasImp(TCanvas* c, const char* title, UInt_t width, UInt_t height); { return fGuiProxy ? fGuiProxy->CreateCanvasImp( c, title, width, height) : 0; }. TCanvasImp * CreateCanvasImp(TCanvas* c, const char* title, Int_t x, Int_t y, UInt_t width, UInt_t height); { return fGuiProxy ? fGuiProxy->CreateCanvasImp(c, title, x, y, width, height) : 0 ;}. TBrowserImp * CreateBrowserImp(TBrowser* b, const char* title, UInt_t width, UInt_t height). TBrowserImp * CreateBrowserImp(TBrowser* b, const char* title, Int_t x, Int_t y, UInt_t width, UInt_t height). TBrowserImp * CreateBrowserImp(TBrowse",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TQtRootGuiFactory.html:6948,Inherit,Inheritance,6948,root/html532/TQtRootGuiFactory.html,https://root.cern,https://root.cern/root/html532/TQtRootGuiFactory.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TDNDData&operator=(const TDNDData&); TDNDData(const TDNDData&). Data Members; public:. Atom_tfActionAction description; void*fDataActual data; Int_tfDataLengthLength of data; Atom_tfDataTypeData type description; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDNDData(const TDNDData& ). TDNDData& operator=(const TDNDData& ). TDNDData(Atom_t dt = kNone, void* d = 0, Int_t len = 0, Atom_t act = kNone); {}. ~TDNDData(); {}. » Author: Bertrand Bellenot 19/04/07 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-30 14:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDNDData.html:5800,Inherit,Inheritance,5800,root/html602/TDNDData.html,https://root.cern,https://root.cern/root/html602/TDNDData.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TDNDData&operator=(const TDNDData&); TDNDData(const TDNDData&). Data Members; public:. Atom_tfActionAction description; void*fDataActual data; Int_tfDataLengthLength of data; Atom_tfDataTypeData type description; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDNDData(const TDNDData& ). TDNDData& operator=(const TDNDData& ). TDNDData(Atom_t dt = kNone, void* d = 0, Int_t len = 0, Atom_t act = kNone); {}. ~TDNDData(); {}. » Author: Bertrand Bellenot 19/04/07 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-09-08 17:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TDNDData.html:5800,Inherit,Inheritance,5800,root/html604/TDNDData.html,https://root.cern,https://root.cern/root/html604/TDNDData.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. TGeoElementTable(const TGeoElementTable&); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TGeoElementTable&operator=(const TGeoElementTable&). Data Members; public:. enum EGeoETStatus { kETDefaultElements; kETRNElements; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. map<int,TGeoElementRN*>fElementsRN! map of RN elements with ENDF key; TObjArray*fIsotopeslist of user-defined isotopes; TObjArray*fListlist of elements; TObjArray*fListRNlist of RN elements; Int_tfNelementsnumber of elements; Int_tfNelementsRNnumber of RN elements; Int_tfNisotopesnumber of isotopes. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoElementTable(); default constructor. TGeoElementTable(Int_t nelements); constructor. TGeoElementTable(const TGeoElementTable& ); copy constructor. TGeoElementTable& operator=(const TGeoElementTable& ); assignment operator. ~TGeoElementTable(); destructor. void AddElement(const char* name, const char* title, Int_t z, Double_t a); Add an element to the table. Obsolete. void AddElement(const char* name, const char* title, Int_t z, Int_t n, Double_t a); Add an element to the table. void AddElement(TGeoElement* elem); Add a custom element to the table. void AddElementRN(TGeoElementRN* elem); Add a radionuclide to the table and map it. void AddIsotope(TGeoIsotope* isotope); Add isotope to the table. void BuildDefaultElements(); Creates the default element table. void ImportElementsRN(); Creates the list of radionuclides. Bool_t CheckTable() const; Checks status of element table. void ExportElementsRN(const char* filename = """"); Export ra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoElementTable.html:6568,Inherit,Inheritance,6568,root/html534/TGeoElementTable.html,https://root.cern,https://root.cern/root/html534/TGeoElementTable.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. TGeoElementTable(const TGeoElementTable&); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TGeoElementTable&operator=(const TGeoElementTable&). Data Members; public:. enum EGeoETStatus { kETDefaultElements; kETRNElements; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. map<int,TGeoElementRN*>fElementsRN! map of RN elements with ENDF key; TObjArray*fIsotopeslist of user-defined isotopes; TObjArray*fListlist of elements; TObjArray*fListRNlist of RN elements; Int_tfNelementsnumber of elements; Int_tfNelementsRNnumber of RN elements; Int_tfNisotopesnumber of isotopes. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoElementTable(); default constructor. TGeoElementTable(Int_t nelements); constructor. TGeoElementTable(const TGeoElementTable& ); copy constructor. TGeoElementTable& operator=(const TGeoElementTable& ); assignment operator. ~TGeoElementTable(); destructor. void AddElement(const char* name, const char* title, Int_t z, Double_t a); Add an element to the table. Obsolete. void AddElement(const char* name, const char* title, Int_t z, Int_t n, Double_t a); Add an element to the table. void AddElementRN(TGeoElementRN* elem); Add a radionuclide to the table and map it. void AddIsotope(TGeoIsotope* isotope); Add isotope to the table. void BuildDefaultElements(); Creates the default element table. void ImportElementsRN(); Creates the list of radionuclides. Bool_t CheckTable() const; Checks status of element table. void ExportElementsRN(const char* filename = """"); Export radionuclides in a file. TGeoElement * FindElement(const char* name) cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoElementTable.html:6523,Inherit,Inheritance,6523,root/html532/TGeoElementTable.html,https://root.cern,https://root.cern/root/html532/TGeoElementTable.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual Int_tWritePDGTable(const char* filename). protected:. TDatabasePDG(const TDatabasePDG& db); voidBuildPdgMap() const; virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TDatabasePDG&operator=(const TDatabasePDG& db). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TObjArray*fListOfClasseslist of classes (leptons etc.); TStringTNamed::fNameobject identifier; THashList*fParticleListlist of PDG particles; TExMap*fPdgMap!hash-map from pdg-code to particle; TStringTNamed::fTitleobject title; static TDatabasePDG*fgInstanceprotect against multiple instances. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDatabasePDG(); Create PDG database. Initialization of the DB has to be done via explicit; call to ReadDataBasePDG (also done by GetParticle methods). ~TDatabasePDG(); Cleanup the PDG database. TDatabasePDG* Instance(); static function. void BuildPdgMap() const; Build fPdgMap mapping pdg-code to particle. Initial size is set so as to be able to hold at least 600; particles: 521 in default table, ALICE adds 54 more.; To be revisited after LHC discovers SUSY. TParticlePDG* AddParticle(const char* Name, const char* Title, Double_t Mass, Bool_t Stable, Double_t DecayWidth, Double_t Charge, const char* ParticleClass, Int_t PdgCode, Int_t Anti = -1, Int_t TrackingCode = 0). Particle definition normal constructor. If the particle is set to be; stable, the decay width parameter does have no meaning and can be set to; any value. The parameters granularity, LowerCutOff and HighCutOff are; used for the construction of the mean free path look up t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDatabasePDG.html:7152,Inherit,Inheritance,7152,root/html532/TDatabasePDG.html,https://root.cern,https://root.cern/root/html532/TDatabasePDG.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); virtual voidProcess(); voidSetServer(THttpServer* serv); THttpEngine(const char* name, const char* title). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; THttpServer*fServer! object server; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THttpEngine(const char* name, const char* title); normal constructor. ~THttpEngine(); destructor. THttpEngine(const char* name, const char* title). void SetServer(THttpServer* serv). void Process(); Method regularly called in main ROOT context . {}. Bool_t Create(const char* ); Method to create all components of engine. Called once from by the server . THttpServer * GetServer() const. » Last changed: Tue Sep 8 17:45:41 2015 » Last generated: 2015-09-08 17:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/THttpEngine.html:6172,Inherit,Inheritance,6172,root/html604/THttpEngine.html,https://root.cern,https://root.cern/root/html604/THttpEngine.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTPad::fXlowNDCX bottom left corner of pad in NDC [0,1]; Float_tTAttPad::fXstatX position where to draw the statistics; Double_tTPad::fXtoAbsPixelkConversion coefficient for X World to absolute pixel; Double_tTPad::fXtoPixelxpixel = fXtoPixelk + fXtoPixel*xworld; Double_tTPad::fXtoPixelkConversion coefficient for X World to pixel; Double_tTPad::fY1Y of lower Y coordinate; Double_tTPad::fY2Y of upper Y coordinate; Float_tTAttPad::fYfileY position where to draw the file name; Double_tTPad::fYlowNDCY bottom left corner of pad in NDC [0,1]; Float_tTAttPad::fYstatY position where to draw the statistics; Double_tTPad::fYtoAbsPixelkConversion coefficient for Y World to absolute pixel; Double_tTPad::fYtoPixelypixel = fYtoPixelk + fYtoPixel*yworld; Double_tTPad::fYtoPixelkConversion coefficient for Y World to pixel; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static Int_tTPad::fgMaxPickDistanceMaximum Pick Distance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGroupButton(); GroupButton default constructor. TGroupButton(const char* groupname, const char* title, const char* method, Double_t x1, Double_t y1, Double_t x2, Double_t y2); GroupButton normal constructor. ~TGroupButton(); GroupButton default destructor. void DisplayColorTable(const char* action, Double_t x0, Double_t y0, Double_t wc, Double_t hc); Display Color Table in an attribute canvas. void ExecuteAction(); Execute action of this button. If an object has been selected before executing the APPLY button; in the control canvas, The member function and its parameters; for this object is executed via the interpreter. void ExecuteEvent(Int_t event, Int_t px, Int_t py); Execute action corresponding to one event. This member function is called when a Button object is clicked. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. TGroupButton(const TGroupButton& org). TGroup",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGroupButton.html:29977,Inherit,Inheritance,29977,root/html532/TGroupButton.html,https://root.cern,https://root.cern/root/html532/TGroupButton.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTPad::fXlowNDCX bottom left corner of pad in NDC [0,1]; Float_tTAttPad::fXstatX position where to draw the statistics; Double_tTPad::fXtoAbsPixelkConversion coefficient for X World to absolute pixel; Double_tTPad::fXtoPixelxpixel = fXtoPixelk + fXtoPixel*xworld; Double_tTPad::fXtoPixelkConversion coefficient for X World to pixel; Double_tTPad::fY1Y of lower Y coordinate; Double_tTPad::fY2Y of upper Y coordinate; Float_tTAttPad::fYfileY position where to draw the file name; Double_tTPad::fYlowNDCY bottom left corner of pad in NDC [0,1]; Float_tTAttPad::fYstatY position where to draw the statistics; Double_tTPad::fYtoAbsPixelkConversion coefficient for Y World to absolute pixel; Double_tTPad::fYtoPixelypixel = fYtoPixelk + fYtoPixel*yworld; Double_tTPad::fYtoPixelkConversion coefficient for Y World to pixel; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static Int_tTPad::fgMaxPickDistanceMaximum Pick Distance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSlider(); slider default constructor. TSlider(const char* name, const char* title, Double_t x1, Double_t y1, Double_t x2, Double_t y2, Color_t color = 16, Short_t bordersize = 2, Short_t bordermode = -1); Slider normal constructor. x1,y1,x2,y2 are in pad user coordinates. ~TSlider(); slider default destructor. void Paint(Option_t* option = """"); Paint this slider with its current attributes. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. void SetRange(Double_t xmin = 0, Double_t xmax = 1); -*-*-*-*-*-*Set Slider range in [0,1]; *-* =========================. TSlider(const TSlider& org). TSlider & operator=(const TSlider& rhs). TObject * GetObject() const; {return fObject;}. Double_t GetMinimum() const; {return fMinimum;}. Double_t GetMaximum() const; {return fMaximum;}. const char * GetMethod() const; { return fMethod.Data(); }. void SetMethod(const char* method); { f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSlider.html:30998,Inherit,Inheritance,30998,root/html532/TSlider.html,https://root.cern,https://root.cern/root/html532/TSlider.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTPolyMarker3D::GetLastPoint() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual Int_tTPolyMarker3D::GetN() const; virtual const char*TPolyMarker3D::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TPolyMarker3D::GetOption() const; Bool_tGetOwnIds() const; virtual Float_t*TPolyMarker3D::GetP() const; virtual voidTPolyMarker3D::GetPoint(Int_t n, Float_t& x, Float_t& y, Float_t& z) const; virtual voidTPolyMarker3D::GetPoint(Int_t n, Double_t& x, Double_t& y, Double_t& z) const; TObject*GetPointId(Int_t n) const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTPolyMarker3D::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tTPolyMarker3D::Merge(TCollection* list); virtual voidTAttMarker::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPointSet3D.html:3985,Inherit,InheritsFrom,3985,root/html532/TPointSet3D.html,https://root.cern,https://root.cern/root/html532/TPointSet3D.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tTPolyMarker3D::GetLastPoint() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual Int_tTPolyMarker3D::GetN() const; virtual const char*TPolyMarker3D::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TPolyMarker3D::GetOption() const; Bool_tGetOwnIds() const; virtual Float_t*TPolyMarker3D::GetP() const; virtual voidTPolyMarker3D::GetPoint(Int_t n, Float_t& x, Float_t& y, Float_t& z) const; virtual voidTPolyMarker3D::GetPoint(Int_t n, Double_t& x, Double_t& y, Double_t& z) const; TObject*GetPointId(Int_t n) const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTPolyMarker3D::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tTPolyMarker3D::Merge(TCollection* list); virtual voidTAttMarker::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPointSet3D.html:3736,Inherit,InheritsFrom,3736,root/html602/TPointSet3D.html,https://root.cern,https://root.cern/root/html602/TPointSet3D.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tTQObject::fSignalsBlocked! flag used for suppression of signals; TEveTransSubEditor*fTrans; TGNumberEntry*fTransparency; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveElementEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void SetModel(TObject* obj); Set model object. void DoRnrSelf(); Slot for RnrSelf. void DoRnrChildren(); Slot for RnrChildren. void DoRnrState(); Slot for RnrState. void DoMainColor(Pixel_t color); Slot for MainColor. void DoTransparency(); Slot for Transparency. TEveElementEditor(const TEveElementEditor& ). TEveElementEditor& operator=(const TEveElementEditor& ). virtual ~TEveElementEditor(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-06-02 15:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TEveElementEditor.html:20871,Inherit,Inheritance,20871,root/html604/TEveElementEditor.html,https://root.cern,https://root.cern/root/html604/TEveElementEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTQObject::fSignalsBlocked! flag used for suppression of signals; TEveTransSubEditor*fTrans; TGNumberEntry*fTransparency; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveElementEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void SetModel(TObject* obj); Set model object. void DoRnrSelf(); Slot for RnrSelf. void DoRnrChildren(); Slot for RnrChildren. void DoRnrState(); Slot for RnrState. void DoMainColor(Pixel_t color); Slot for MainColor. void DoTransparency(); Slot for Transparency. TEveElementEditor(const TEveElementEditor& ). TEveElementEditor& operator=(const TEveElementEditor& ). virtual ~TEveElementEditor(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-06-30 14:44; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveElementEditor.html:20871,Inherit,Inheritance,20871,root/html602/TEveElementEditor.html,https://root.cern,https://root.cern/root/html602/TEveElementEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTSelector::kContinue; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie; Int_tseed. protected:. TSelector::EAbortTSelector::fAbortAbort status; TList*TSelector::fInputList of objects available during processing; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; Long64_tTSelector::fStatusSelector status. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SlaveBegin(TTree* tree); Retrieve study pack. Bool_t Process(Long64_t entry). void SlaveTerminate(). void Init(TTree* tree); Set branch addresses and branch pointers. Bool_t Notify(). RooProofDriverSelector(TTree* = 0); { b_i = 0 ; _pkg = 0 ; fChain = 0 ; }. virtual ~RooProofDriverSelector(); { }. Int_t Version() const; { return 2; }. Int_t GetEntry(Long64_t entry, Int_t getall = 0); { return fChain ? fChain->GetTree()->GetEntry(entry, getall) : 0; }. void SetOption(const char* option); { fOption = option; }. void SetObject(TObject* obj); { fObject = obj; }. void SetInputList(TList* input); { fInput = input; }. TList * GetOutputList() const; { return fOutput; }. » Last changed: Tue Sep 8 17:42:23 2015 » Last generated: 2015-09-08 17:42; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooProofDriverSelector.html:7294,Inherit,Inheritance,7294,root/html604/RooProofDriverSelector.html,https://root.cern,https://root.cern/root/html604/RooProofDriverSelector.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTTree::fReadEntry! Number of the entry being processed; Long64_tTTree::fSavedBytesNumber of autosaved bytes; Int_tTTree::fScanFieldNumber of runs before prompting in Scan; Int_tTTree::fTimerIntervalTimer interval in milliseconds; TStringTNamed::fTitleobject title; Long64_tTTree::fTotBytesTotal number of bytes in all branches before compression; Long64_tTTree::fTotalBuffers! Total number of bytes in branch buffers; TBuffer*TTree::fTransientBuffer! Pointer to the current transient buffer.; TVirtualIndex*TTree::fTreeIndexPointer to the tree Index (if any); Int_tTTree::fUpdateUpdate frequency for EntryLoop; TList*TTree::fUserInfopointer to a list of user objects associated to this Tree; Double_tTTree::fWeightTree weight (see TTree::SetWeight); Long64_tTTree::fZipBytesTotal number of bytes in all branches after compression; static Int_tTTree::fgBranchStyleOld/New branch style; static Long64_tTTree::fgMaxTreeSizeMaximum size of a file containg a Tree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TNtuple(); Default constructor for Ntuple*-*-*-*-*-*-*-*-; *-* ==============================. TNtuple(const char* name, const char* title, const char* varlist, Int_t bufsize = 32000); Create an Ntuple*-*-; *-* ================; The parameter varlist describes the list of the ntuple variables; separated by a colon:; example: ""x:y:z:energy""; For each variable in the list a separate branch is created. NOTE:; -Use TTree to create branches with variables of different data types.; -Use TTree when the number of branches is large (> 100).; -. ~TNtuple(); Default destructor for an Ntuple*-*-*-*-*-*-; *-* ================================. TTree* CloneTree(Long64_t nentries = -1, Option_t* option = """"); Create a clone of this tree and copy nentries. By default copy all entries.; Note that only active branches are copied.; The compression level of the cloned tree is set to the destination file's; compression level. See TTree::CloneTree for more d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TNtuple.html:25390,Inherit,Inheritance,25390,root/html532/TNtuple.html,https://root.cern,https://root.cern/root/html532/TNtuple.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTTree::fReadEntry! Number of the entry being processed; Long64_tTTree::fSavedBytesNumber of autosaved bytes; Int_tTTree::fScanFieldNumber of runs before prompting in Scan; Int_tTTree::fTimerIntervalTimer interval in milliseconds; TStringTNamed::fTitleobject title; Long64_tTTree::fTotBytesTotal number of bytes in all branches before compression; Long64_tTTree::fTotalBuffers! Total number of bytes in branch buffers; TBuffer*TTree::fTransientBuffer! Pointer to the current transient buffer.; TVirtualIndex*TTree::fTreeIndexPointer to the tree Index (if any); Int_tTTree::fUpdateUpdate frequency for EntryLoop; TList*TTree::fUserInfopointer to a list of user objects associated to this Tree; Double_tTTree::fWeightTree weight (see TTree::SetWeight); Long64_tTTree::fZipBytesTotal number of bytes in all branches after compression; static Int_tTTree::fgBranchStyleOld/New branch style; static Long64_tTTree::fgMaxTreeSizeMaximum size of a file containg a Tree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TNtupleD(); Default constructor for Ntuple*-*-*-*-*-*-*-*-; *-* ==============================. TNtupleD(const char* name, const char* title, const char* varlist, Int_t bufsize = 32000); Create an Ntuple*-*-; *-* ================; The parameter varlist describes the list of the ntuple variables; separated by a colon:; example: ""x:y:z:energy""; For each variable in the list a separate branch is created. NOTE:; -Use TTree to create branches with variables of different data types.; -Use TTree when the number of branches is large (> 100).; -. ~TNtupleD(); Default destructor for an Ntuple*-*-*-*-*-*-; *-* ================================. void ResetBranchAddress(TBranch* ); Reset the branch addresses to the internal fArgs array. Use this; method when the addresses were changed via calls to SetBranchAddress(). void ResetBranchAddresses(); Reset the branch addresses to the internal fArgs array. Use this; method when the addresses were changed ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TNtupleD.html:25381,Inherit,Inheritance,25381,root/html532/TNtupleD.html,https://root.cern,https://root.cern/root/html532/TNtupleD.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetPoints (Double_t *points) const override;  Create CONS points. ;  ;  Protected Member Functions inherited from TTUBS; void MakeTableOfCoSin () const override;  Make table of sine and cosine. ;  ; void SetPoints (Double_t *points) const override;  Create TUBS points. ;  ;  Protected Member Functions inherited from TTUBE;  TTUBE (const TTUBE &);  Table of cos(fPhi1) .... cos(fPhil+fDphi1) ;  ; TTUBE & operator= (const TTUBE &);  assignment operator ;  ; virtual void SetSegsAndPols (TBuffer3D &buffer) const;  Set segments and polygons. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fRmax2;  ; Float_t fRmin2;  ;  Protected Attributes inherited from TTUBS; Float_t fPhi1;  ; Float_t fPhi2;  ;  Protected Attributes inherited from TTUBE;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCONS.html:17944,inherit,inherited,17944,doc/master/classTCONS.html,https://root.cern,https://root.cern/doc/master/classTCONS.html,1,['inherit'],['inherited']
Modifiability,"tTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetPoints (Double_t *points) const override;  Create TUBS points. ;  ;  Protected Member Functions inherited from TTUBS; void MakeTableOfCoSin () const override;  Make table of sine and cosine. ;  ; void SetPoints (Double_t *points) const override;  Create TUBS points. ;  ;  Protected Member Functions inherited from TTUBE;  TTUBE (const TTUBE &);  Table of cos(fPhi1) .... cos(fPhil+fDphi1) ;  ; TTUBE & operator= (const TTUBE &);  assignment operator ;  ; virtual void SetSegsAndPols (TBuffer3D &buffer) const;  Set segments and polygons. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fCosHigh [3];  ; Float_t fCosLow [3];  ;  Protected Attributes inherited from TTUBS; Float_t fPhi1;  ; Float_t fPhi2;  ;  Protected Attributes inherited ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCTUB.html:18142,inherit,inherited,18142,doc/master/classTCTUB.html,https://root.cern,https://root.cern/doc/master/classTCTUB.html,1,['inherit'],['inherited']
Modifiability,"tTicks). void LabelsOption(Option_t* option = ""h""); Set option(s) to draw axis with labels; option = ""a"" sort by alphabetic order; = "">"" sort by decreasing values; = ""<"" sort by increasing values; = ""h"" draw labels horizonthal; = ""v"" draw labels vertical; = ""u"" draw labels up (end of label right adjusted); = ""d"" draw labels down (start of label left adjusted). Bool_t GetRotateTitle() const; Return kTRUE if kRotateTitle bit is set, kFALSE otherwise. void ImportAttributes(const TAxis* axis); Copy axis attributes to this. void RotateTitle(Bool_t rotate = kTRUE); rotate title by 180 degrees; by default the title is drawn right adjusted.; if rotate is TRUE, the title is left adjusted at the end of the axis; and rotated by 180 degrees. void SaveAttributes(ostream& out, const char* name, const char* subname); Save axis attributes as C++ statement(s) on output stream out. void Set(Int_t nbins, Double_t xmin, Double_t xmax); Initialize axis with fix bins. void Set(Int_t nbins, const Float_t *xbins); Initialize axis with variable bins. void Set(Int_t nbins, const Double_t *xbins); Initialize axis with variable bins. void SetDefaults(); Set axis default values (from TStyle). Bool_t GetDecimals() const; Returns kTRUE if kDecimals bit is set, kFALSE otherwise.; see TAxis::SetDecimals. void SetDecimals(Bool_t dot = kTRUE); Set the Decimals flag; By default, blank characters are stripped, and then the; label is correctly aligned. The dot, if last character of the string,; is also stripped, unless this option is specified.; One can disable the option by calling axis.SetDecimals(kTRUE).; The flag (in fBits2) is passed to the drawing function TGaxis::PaintAxis. void SetBinLabel(Int_t bin, const char* label); Set label for bin. void SetLimits(Double_t xmin, Double_t xmax); Set the axis limits. Bool_t GetMoreLogLabels() const; Return kTRUE if kMoreLogLabels bit is set, kFALSE otherwise. void SetMoreLogLabels(Bool_t more = kTRUE); Set the kMoreLogLabels bit flag; When this option is sele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TAxis.html:15432,variab,variable,15432,root/html526/TAxis.html,https://root.cern,https://root.cern/root/html526/TAxis.html,1,['variab'],['variable']
Modifiability,"tTicks). void LabelsOption(Option_t* option = ""h""); Set option(s) to draw axis with labels; option = ""a"" sort by alphabetic order; = "">"" sort by decreasing values; = ""<"" sort by increasing values; = ""h"" draw labels horizonthal; = ""v"" draw labels vertical; = ""u"" draw labels up (end of label right adjusted); = ""d"" draw labels down (start of label left adjusted). Bool_t GetRotateTitle() const; Return kTRUE if kRotateTitle bit is set, kFALSE otherwise. void ImportAttributes(const TAxis* axis); Copy axis attributes to this. void RotateTitle(Bool_t rotate = kTRUE); rotate title by 180 degrees; by default the title is drawn right adjusted.; if rotate is TRUE, the title is left adjusted at the end of the axis; and rotated by 180 degrees. void SaveAttributes(ostream& out, const char* name, const char* subname); Save axis attributes as C++ statement(s) on output stream out. void Set(Int_t nbins, Double_t xmin, Double_t xmax); Initialize axis with fix bins. void Set(Int_t nbins, const Float_t* xbins); Initialize axis with variable bins. void Set(Int_t nbins, const Double_t* xbins); Initialize axis with variable bins. void SetDefaults(); Set axis default values (from TStyle). Bool_t GetDecimals() const; Returns kTRUE if kDecimals bit is set, kFALSE otherwise.; see TAxis::SetDecimals. void SetDecimals(Bool_t dot = kTRUE); Set the Decimals flag; By default, blank characters are stripped, and then the; label is correctly aligned. The dot, if last character of the string,; is also stripped, unless this option is specified.; One can disable the option by calling axis.SetDecimals(kTRUE).; The flag (in fBits2) is passed to the drawing function TGaxis::PaintAxis. void SetBinLabel(Int_t bin, const char* label); Set label for bin. void SetLimits(Double_t xmin, Double_t xmax); Set the axis limits. Bool_t GetMoreLogLabels() const; Return kTRUE if kMoreLogLabels bit is set, kFALSE otherwise. void SetMoreLogLabels(Bool_t more = kTRUE); Set the kMoreLogLabels bit flag; When this option is sele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TAxis.html:15486,variab,variable,15486,root/html528/TAxis.html,https://root.cern,https://root.cern/root/html528/TAxis.html,1,['variab'],['variable']
Modifiability,"tTicks). void LabelsOption(Option_t* option = ""h""); Set option(s) to draw axis with labels; option = ""a"" sort by alphabetic order; = "">"" sort by decreasing values; = ""<"" sort by increasing values; = ""h"" draw labels horizonthal; = ""v"" draw labels vertical; = ""u"" draw labels up (end of label right adjusted); = ""d"" draw labels down (start of label left adjusted). Bool_t GetRotateTitle() const; Return kTRUE if kRotateTitle bit is set, kFALSE otherwise. void ImportAttributes(const TAxis* axis); Copy axis attributes to this. void RotateTitle(Bool_t rotate = kTRUE); rotate title by 180 degrees; by default the title is drawn right adjusted.; if rotate is TRUE, the title is left adjusted at the end of the axis; and rotated by 180 degrees. void SaveAttributes(ostream& out, const char* name, const char* subname); Save axis attributes as C++ statement(s) on output stream out. void Set(Int_t nbins, Double_t xmin, Double_t xmax); Initialize axis with fix bins. void Set(Int_t nbins, const Float_t* xbins); Initialize axis with variable bins. void Set(Int_t nbins, const Double_t* xbins); Initialize axis with variable bins. void SetDefaults(); Set axis default values (from TStyle). Bool_t GetDecimals() const; Returns kTRUE if kDecimals bit is set, kFALSE otherwise.; see TAxis::SetDecimals. void SetDecimals(Bool_t dot = kTRUE); Set the Decimals flag; By default, blank characters are stripped, and then the; label is correctly aligned. The dot, if last character of the string,; is also stripped, unless this option is specified.; One can disable the option by calling axis.SetDecimals(kTRUE).; The flag (in fBits2) is passed to the drawing function TGaxis::PaintAxis. void SetBinLabel(Int_t bin, const char* label); Set label for bin; In this case we create a label list in the axis but we do not; set the kCanRebin bit.; New labels will not be added with the Fill method but will end-up in the; underflow bin. See documentation of TAxis::FindBin(const char*). void SetLimits(Double_t xmin, Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TAxis.html:15854,variab,variable,15854,root/html530/TAxis.html,https://root.cern,https://root.cern/root/html530/TAxis.html,5,['variab'],['variable']
Modifiability,"tTotDataSet(); Return the combination of the datasets.; If no dataset is specified a NULL pointer is returned.; The facory owns the object. RooCategory* GetTotCategory(); Return the category.; The facory owns the object. int ProcessCard(const char* filename); Process an additional configuration file. int fReadFile(const char* fileName, bool is_included = false); Parses the configuration file. The objects can be specified following; the rules of the RooFactoryWSTool, plus some more flexibility. The official format for the datacards is "".rs"". All the instructions end with a "";"" (like in C++). Carriage returns and white lines are irrelevant but adviced since they; improve readability (like in C++). The (Roo)ClassName::objname(description) can be replaced with the more; ""pythonic"" objname = (Roo)ClassName(description). The comments can be specified with a ""//"" if on a single line or with; /* */ if on multiple lines (like in C++). The ""#include path/to/file.rs"" statement triggers the inclusion of a; configuration fragment. The ""import myobject:myworkspace:myrootfile"" will add to the Workspace; the object myobject located in myworkspace recorded in myrootfile.; Alternatively, one could choose the ""import myobject:myrootfile"" in case; no Workspace is present. The ""echo"" statement prompts a message on screen. void fCreateCategory(); Builds the category necessary for the mutidimensional models. Its name; will be <HLFactory name>_category and the types are specified by the; model labels. bool fNamesListsConsistent(); Check the number of entries in each list. If not the same and the list; is not empty prompt an error. int fParseLine(TString& line); Parse a single line and puts the content in the RooWorkSpace. HLFactory(const char* name, const char* fileName = 0, bool isVerbose = false); Constructor. void DumpCfg(const char* ); Dump the Workspace content as configuration file; It needs some workspace object list or something.. { /* t.b.i. */ }. RooWorkspace* GetWs(); Get the Ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HLFactory.html:9304,config,configuration,9304,root/html602/RooStats__HLFactory.html,https://root.cern,https://root.cern/root/html602/RooStats__HLFactory.html,4,['config'],['configuration']
Modifiability,"tTotDataSet(); Return the combination of the datasets.; If no dataset is specified a NULL pointer is returned.; The facory owns the object. RooCategory* GetTotCategory(); Return the category.; The facory owns the object. int ProcessCard(const char* filename); Process an additional configuration file. int fReadFile(const char* fileName, bool is_included = false); Parses the configuration file. The objects can be specified following; the rules of the RooFactoryWSTool, plus some more flexibility. The official format for the datacards is "".rs"". All the instructions end with a "";"" (like in C++). Carriage returns and white lines are irrelevant but adviced since they; improve readability (like in C++). The (Roo)ClassName::objname(description) can be replaced with the more; ""pythonic"" objname = (Roo)ClassName(description). The comments can be specified with a ""//"" if on a single line or with; /* */ if on multiple lines (like in C++). The ""#include path/to/file.rs"" statement triggers the inclusion of a; configuration fragment. The ""import myobject:myworkspace:myrootfile"" will add to the Workspace; the object myobject located in myworkspace recorded in myrootfile.; Alternatively, one could choose the ""import myobject:myrootfile"" in case; no Workspace is present. The ""echo"" statement prompts a message on screen. void fCreateCategory(); Builds the category necessary for the mutidimensional models. Its name; will be <HLFactory name>_category and the types are specified by the; model labels. bool fNamesListsConsistent(); Check the number of entries in each list. If not the same and the list; is not empty prompt an error. int fParseLine(TString& line); Parse a single line and puts the content in the RooWorkSpace. void DumpCfg(const char* ); Dump the Workspace content as configuration file; It needs some workspace object list or something.. { /* t.b.i. */ }. RooWorkspace* GetWs(); Get the RooWorkspace containing the models and variables. {return fWs;}. » Last changed: root/roostats",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__HLFactory.html:8752,config,configuration,8752,root/html530/RooStats__HLFactory.html,https://root.cern,https://root.cern/root/html530/RooStats__HLFactory.html,5,['config'],['configuration']
Modifiability,"tTotDataSet(); Return the combination of the datasets.; If no dataset is specified a NULL pointer is returned.; The facory owns the object. RooCategory* GetTotCategory(); Return the category.; The facory owns the object. int ProcessCard(const char* filename); Process an additional configuration file. int fReadFile(const char* fileName, bool is_included = false); Parses the configuration file. The objects can be specified following; the rules of the RooFactoryWSTool, plus some more flexibility. The official format for the datacards is "".rs"". All the instructions end with a "";"" (like in C++). Carriage returns and white lines are irrelevant but adviced since they; improve readability (like in C++). The (Roo)ClassName::objname(description) can be replaced with the more; ""pythonic"" objname = (Roo)ClassName(description). The comments can be specified with a ""//"" if on a single line or with; /* */ if on multiple lines (like in C++). The ""#include path/to/file.rs"" statement triggers the inclusion of a; configuration fragment. The ""import myobject:myworkspace:myrootfile"" will add to the Workspace; the object myobject located in myworkspace recorded in myrootfile.; Alternatively, one could choose the ""import myobject:myrootfile"" in case; no Workspace is present. The ""echo"" statement prompts a message on screen. void fCreateCategory(); Builds the category necessary for the mutidimensional models. Its name; will be <HLFactory name>_category and the types are specified by the; model labels. bool fNamesListsConsistent(); Check the number of entries in each list. If not the same and the list; is not empty prompt an error. int fParseLine(TString& line); Parse a single line and puts the content in the RooWorkSpace. void DumpCfg(const char* cardname); Dump the Workspace content as configuration file; It needs some workspace object list or something.. {cardname=0;}. RooWorkspace* GetWs(); Get the RooWorkspace containing the models and variables. {return fWs;}. » Last changed: root/roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__HLFactory.html:8688,config,configuration,8688,root/html526/RooStats__HLFactory.html,https://root.cern,https://root.cern/root/html526/RooStats__HLFactory.html,2,['config'],['configuration']
Modifiability,"tTotal number of component p.d.f.s in RooSimultaneous (if any); RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; Bool_tRooAbsTestStatistic::_splitRangeSplit rangeName in RooSimultaneous index labels if true; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; Bool_tRooAbsTestStatistic::_verboseVerbose messaging if true; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; Bool_t_weightSqApply weights squared?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNLLVar(const char* name, const char* title, RooAbsPdf& pdf, RooAbsData& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none(), const RooCmdArg& arg9 = RooCmdArg::none()); Construct likelihood from given p.d.f and (binned or unbinned dataset). Extended() -- Include extended term in calculation; NumCPU() -- Activate parallel processing feature; Range() -- Fit only selected region; SumCoefRange() -- Set the range in which to interpret the coefficients of RooAddPdf components; SplitRange() -- Fit range is split by index catory of simultaneous PDF; ConditionalObservables() -- Define conditional observables; Verbose() -- Verbose output of GOF framew",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooNLLVar.html:42810,Inherit,Inheritance,42810,root/html534/RooNLLVar.html,https://root.cern,https://root.cern/root/html534/RooNLLVar.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tTotal number of component p.d.f.s in RooSimultaneous (if any); RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; Bool_tRooAbsTestStatistic::_splitRangeSplit rangeName in RooSimultaneous index labels if true; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; Bool_tRooAbsTestStatistic::_verboseVerbose messaging if true; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; Bool_t_weightSqApply weights squared?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNLLVar(const char* name, const char* title, RooAbsPdf& pdf, RooAbsData& data, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none(), const RooCmdArg& arg9 = RooCmdArg::none()); Construct likelihood from given p.d.f and (binned or unbinned dataset). Extended() -- Include extended term in calculation; NumCPU() -- Activate parallel processing feature; Range() -- Fit only selected region; SumCoefRange() -- Set the range in which to interpret the coefficients of RooAddPdf components; SplitRange() -- Fit range is split by index catory of simultaneous PDF; ConditionalObservables() -- Define conditional observables; Verbose() -- Verbose output of GOF framework classes; CloneDa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooNLLVar.html:38755,Inherit,Inheritance,38755,root/html532/RooNLLVar.html,https://root.cern,https://root.cern/root/html532/RooNLLVar.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); static TEveGeoShape*ImportShapeExtract(TEveGeoShapeExtract* gse, TEveElement* parent = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; static Bool_tTEveShape::IsBoxOrientationConsistentEv(const TEveVector* box); static Bool_tTEveShape::IsBoxOrientationConsistentFv(const Float_t** box); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; virtual TBuffer3D*MakeBuffer3D(); voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveGeoShape.html:10438,Inherit,InheritsFrom,10438,root/html532/TEveGeoShape.html,https://root.cern,https://root.cern/root/html532/TEveGeoShape.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); static TEveGeoShape*ImportShapeExtract(TEveGeoShapeExtract* gse, TEveElement* parent = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; static Bool_tTEveShape::IsBoxOrientationConsistentEv(const TEveVector[8] box); static Bool_tTEveShape::IsBoxOrientationConsistentFv(const Float_t[8][3] box); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; virtual TBuffer3D*MakeBuffer3D(); voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveGeoShape.html:10416,Inherit,InheritsFrom,10416,root/html602/TEveGeoShape.html,https://root.cern,https://root.cern/root/html602/TEveGeoShape.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tVal(cenVal-Z*errVal) ;; 2758 plotFunc(*cloneFunc);; 2759 minusVar.push_back(frame->getCurve()) ;; 2760 frame->remove(nullptr,false) ;; 2761 ; 2762 (static_cast<RooRealVar*>(paramList.at(ivar)))->setVal(cenVal) ;; 2763 }; 2764 ; 2765 TMatrixDSym C(paramList.size()) ;; 2766 std::vector<double> errVec(paramList.size()) ;; 2767 for (std::size_t i=0 ; i<paramList.size() ; i++) {; 2768 errVec[i] = sqrt(V(i,i)) ;; 2769 for (std::size_t j=i ; j<paramList.size() ; j++) {; 2770 C(i,j) = V(i,j)/sqrt(V(i,i)*V(j,j)) ;; 2771 C(j,i) = C(i,j) ;; 2772 }; 2773 }; 2774 ; 2775 band = cenCurve->makeErrorBand(plusVar,minusVar,C,Z) ;; 2776 ; 2777 ; 2778 // Cleanup; 2779 delete cloneFunc ;; 2780 for (std::vector<RooCurve*>::iterator i=plusVar.begin() ; i!=plusVar.end() ; ++i) {; 2781 delete (*i) ;; 2782 }; 2783 for (std::vector<RooCurve*>::iterator i=minusVar.begin() ; i!=minusVar.end() ; ++i) {; 2784 delete (*i) ;; 2785 }; 2786 ; 2787 }; 2788 ; 2789 delete cenCurve ;; 2790 if (!band) return frame ;; 2791 ; 2792 // Define configuration for this method; 2793 RooCmdConfig pc(""RooAbsPdf::plotOn("" + std::string(GetName()) + "")"");; 2794 pc.defineString(""drawOption"",""DrawOption"",0,""F"") ;; 2795 pc.defineString(""curveNameSuffix"",""CurveNameSuffix"",0,"""") ;; 2796 pc.defineInt(""lineColor"",""LineColor"",0,-999) ;; 2797 pc.defineInt(""lineStyle"",""LineStyle"",0,-999) ;; 2798 pc.defineInt(""lineWidth"",""LineWidth"",0,-999) ;; 2799 pc.defineInt(""markerColor"",""MarkerColor"",0,-999) ;; 2800 pc.defineInt(""markerStyle"",""MarkerStyle"",0,-999) ;; 2801 pc.defineDouble(""markerSize"",""MarkerSize"",0,-999) ;; 2802 pc.defineInt(""fillColor"",""FillColor"",0,-999) ;; 2803 pc.defineInt(""fillStyle"",""FillStyle"",0,-999) ;; 2804 pc.defineString(""curveName"",""Name"",0,"""") ;; 2805 pc.defineInt(""curveInvisible"",""Invisible"",0,0) ;; 2806 pc.defineInt(""moveToBack"",""MoveToBack"",0,0) ;; 2807 pc.allowUndefined() ;; 2808 ; 2809 // Process & check varargs; 2810 pc.process(argList) ;; 2811 if (!pc.ok(true)) {; 2812 return frame ;; 2813 }; 2814 ; 2815 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:121705,config,configuration,121705,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['config'],['configuration']
Modifiability,"tValV(const RooArgSet* nset = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); static RooFormulaVar*RooResolutionModel::identity(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidRooAbsPdf::initGenerator(Int_t code); virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; Bool_tRooResolutionModel::isBasisSupported(const char* name) const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; Bool_tRooResolutionModel::isConvolved(); virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tRooAbsPdf::isDirectGenSafe(const RooAbsArg& arg) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooGaussModel.html:20139,Inherit,InheritsFrom,20139,root/html534/RooGaussModel.html,https://root.cern,https://root.cern/root/html534/RooGaussModel.html,9,['Inherit'],['InheritsFrom']
Modifiability,"tValV(const RooArgSet* nset = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); static RooFormulaVar*RooResolutionModel::identity(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidRooAbsPdf::initGenerator(Int_t code); virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; Bool_tRooResolutionModel::isBasisSupported(const char* name) const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; Bool_tRooResolutionModel::isConvolved(); virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tisDirectGenSafe(const RooAbsArg& arg) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAddModel.html:20564,Inherit,InheritsFrom,20564,root/html534/RooAddModel.html,https://root.cern,https://root.cern/root/html534/RooAddModel.html,3,['Inherit'],['InheritsFrom']
Modifiability,"tValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyRooResolutionModel::xDependent/convolution variable. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAddModel(). RooAddModel(const char* name, const char* title, const RooArgList& pdfList, const RooArgList& coefList, Bool_t ownPdfList = kFALSE); Generic constructor from list of PDFs and list of coefficients.; Each pdf list element (i) is paired with coefficient list element (i).; The number of coefficients must be either equal to the number of PDFs,; in which case extended MLL fitting is enabled, or be one less. All PDFs must inherit from RooAbsPdf. All coefficients must inherit from RooAbsReal. RooAddModel(const RooAddModel& other, const char* name = 0); Copy constructor. ~RooAddModel(); Destructor. void fixCoefNormalization(const RooArgSet& refCoefNorm); By default the interpretation of the fraction coefficients is; performed in the contextual choice of observables. This makes the; shape of the p.d.f explicitly dependent on the choice of; observables. This method instructs RooAddPdf to freeze the; interpretation of the coefficients to be done in the given set of; observables. If frozen, fractions are automatically transformed; from the reference normalization set to the contextual normalization; set by ratios of integrals. void fixCoefRange(const char* rangeName); By default the interpretation of the fraction coefficients is; performed in the default range. This make the shape of a RooAddPdf; explicitly dependent on the ran",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAddModel.html:48592,extend,extended,48592,root/html602/RooAddModel.html,https://root.cern,https://root.cern/root/html602/RooAddModel.html,4,['extend'],['extended']
Modifiability,"tValueLocal (const TString &vs, Int_t i=-1)=0;  . Private Attributes; const TString fDescription;  ; Bool_t fIsSet;  ; const TString fName;  ; TString fNameAllLower;  . Friends; class Configurable;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMVA/Option.h>. Inheritance diagram for TMVA::OptionBase:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ OptionBase(). TMVA::OptionBase::OptionBase ; (; const TString & ; name, . const TString & ; desc . ). constructor ; Definition at line 46 of file Option.cxx. ◆ ~OptionBase(). virtual TMVA::OptionBase::~OptionBase ; (; ). inlinevirtual . Definition at line 59 of file Option.h. Member Function Documentation. ◆ Class(). static TClass * TMVA::OptionBase::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::OptionBase::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA::OptionBase::Class_Version ; (; ). inlinestaticcons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1OptionBase.html:10510,inherit,inherited,10510,doc/master/classTMVA_1_1OptionBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1OptionBase.html,2,['inherit'],['inherited']
Modifiability,"tValues = GetEvent()->GetValues();; 1722 size_t nVariables = GetEvent()->GetNVariables();; 1723 ; 1724 // for Columnlayout tensor memory layout is HWC while for rowwise is CHW; 1725 if (fXInput.GetLayout() == TMVA::Experimental::MemoryLayout::ColumnMajor) {; 1726 R__ASSERT(fXInput.GetShape().size() < 4);; 1727 size_t nc, nhw = 0;; 1728 if (fXInput.GetShape().size() == 2) {; 1729 nc = fXInput.GetShape()[0];; 1730 if (nc != 1) {; 1731 ArchitectureImpl_t::PrintTensor(fXInput);; 1732 Log() << kFATAL << ""First tensor dimension should be equal to batch size, i.e. = 1"" << Endl;; 1733 }; 1734 nhw = fXInput.GetShape()[1];; 1735 } else {; 1736 nc = fXInput.GetCSize();; 1737 nhw = fXInput.GetWSize();; 1738 }; 1739 if (nVariables != nc * nhw) {; 1740 Log() << kFATAL << ""Input Event variable dimensions are not compatible with the built network architecture""; 1741 << "" n-event variables "" << nVariables << "" expected input tensor "" << nc << "" x "" << nhw << Endl;; 1742 }; 1743 for (size_t j = 0; j < nc; j++) {; 1744 for (size_t k = 0; k < nhw; k++) {; 1745 // note that in TMVA events images are stored as C H W while in the buffer we stored as H W C; 1746 fXInputBuffer[k * nc + j] = inputValues[j * nhw + k]; // for column layout !!!; 1747 }; 1748 }; 1749 } else {; 1750 // row-wise layout; 1751 assert(fXInput.GetShape().size() >= 4);; 1752 size_t nc = fXInput.GetCSize();; 1753 size_t nh = fXInput.GetHSize();; 1754 size_t nw = fXInput.GetWSize();; 1755 size_t n = nc * nh * nw;; 1756 if (nVariables != n) {; 1757 Log() << kFATAL << ""Input Event variable dimensions are not compatible with the built network architecture""; 1758 << "" n-event variables "" << nVariables << "" expected input tensor "" << nc << "" x "" << nh << "" x "" << nw; 1759 << Endl;; 1760 }; 1761 for (size_t j = 0; j < n; j++) {; 1762 // in this case TMVA event has same order as input tensor; 1763 fXInputBuffer[j] = inputValues[j]; // for column layout !!!; 1764 }; 1765 }; 1766 // copy buffer in input; 1767 fXInput.GetDeviceBuf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDL_8cxx_source.html:69006,variab,variable,69006,doc/master/MethodDL_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDL_8cxx_source.html,2,['variab'],"['variable', 'variables']"
Modifiability,"tVariableValue(). bool ROOT::Minuit2::Minuit2Minimizer::SetVariableValue ; (; unsigned int ; ivar, . double ; val . ). overridevirtual . set variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 279 of file Minuit2Minimizer.cxx. ◆ SetVariableValues(). bool ROOT::Minuit2::Minuit2Minimizer::SetVariableValues ; (; const double * ; x). overridevirtual . set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 288 of file Minuit2Minimizer.cxx. ◆ State(). const ROOT::Minuit2::MnUserParameterState & ROOT::Minuit2::Minuit2Minimizer::State ; (; ). inline . return the minimizer state (containing values, step size , etc..) ; Definition at line 276 of file Minuit2Minimizer.h. ◆ VariableIndex(). int ROOT::Minuit2::Minuit2Minimizer::VariableIndex ; (; const std::string & ; name); const. overridevirtual . get index of variable given a variable given a name return -1 if variable is not found ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 272 of file Minuit2Minimizer.cxx. ◆ VariableName(). std::string ROOT::Minuit2::Minuit2Minimizer::VariableName ; (; unsigned int ; ivar); const. overridevirtual . get name of variables (override if minimizer support storing of variable names) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 264 of file Minuit2Minimizer.cxx. ◆ X(). const double * ROOT::Minuit2::Minuit2Minimizer::X ; (; ); const. inlineoverridevirtual . return pointer to X values at the minimum ; Implements ROOT::Math::Minimizer.; Definition at line 143 of file Minuit2Minimizer.h. Member Data Documentation. ◆ fDim. unsigned int ROOT::Minuit2::Minuit2Minimizer::fDim. private . Definition at line 302 of file Minuit2Minimizer.h. ◆ fErrors. std::vector<double> ROOT::Minuit2::Minuit2Minimizer::fErrors. mutableprivate . Definition at line 312 of file Minuit2Minimizer.h. ◆ fMinimizer. ROOT::Minuit2::ModularFunctionMinimizer* ROOT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html:29950,variab,variable,29950,doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,3,['variab'],['variable']
Modifiability,"tVariables(const VariableIterator &begin, const VariableIterator &end)add variables . Return number of variables successfully addedDefinition Minimizer.h:146; ROOT::Math::Minimizer::GlobalCCvirtual double GlobalCC(unsigned int ivar) constreturn global correlation coefficient for variable i This is a number between zero and one which give...Definition Minimizer.cxx:161; ROOT::Math::Minimizer::MinGradientvirtual const double * MinGradient() constreturn pointer to gradient values at the minimumDefinition Minimizer.h:225; ROOT::Math::Minimizer::MinimizerMinimizer(Minimizer &&)=delete; ROOT::Math::Minimizer::fStatusint fStatusstatus of minimizerDefinition Minimizer.h:371; ROOT::Math::Minimizer::SetVariableValuevirtual bool SetVariableValue(unsigned int ivar, double value)set the value of an already existing variableDefinition Minimizer.cxx:53; ROOT::Math::Minimizer::SetFunctionvirtual void SetFunction(const ROOT::Math::IMultiGenFunction &func)=0set the function to minimize; ROOT::Math::Minimizer::Scanvirtual bool Scan(unsigned int ivar, unsigned int &nstep, double *x, double *y, double xmin=0, double xmax=0)scan function minimum for variable i.Definition Minimizer.cxx:195; ROOT::Math::Minimizer::MaxIterationsunsigned int MaxIterations() constmax iterationsDefinition Minimizer.h:297; ROOT::Math::Minimizer::SetDefaultOptionsvoid SetDefaultOptions()reset the default options (defined in MinimizerOptions)Definition Minimizer.h:361; ROOT::Math::Minimizer::fValidErrorbool fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit)Definition Minimizer.h:369; ROOT::Math::Minimizer::MinosStatusvirtual int MinosStatus() conststatus code of Minos (to be re-implemented by the minimizers supporting Minos)Definition Minimizer.h:313; ROOT::Math::Minimizer::SetVariableLimitsvirtual bool SetVariableLimits(unsigned int ivar, double lower, double upper)set the limits of an already existing variableDefinition Minimizer.h:199; ROOT::Math::Minimizer::SetTole",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8h_source.html:24552,variab,variable,24552,doc/master/Minimizer_8h_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8h_source.html,1,['variab'],['variable']
Modifiability,"tVars(const RooArgSet& vars) Only retain the listed observables in the output dataset . Cut(const char* expression) Only retain event surviving the given cut expression. . Cut(const RooFormulaVar& expr) Only retain event surviving the given cut formula. . CutRange(const char* name) Only retain events inside range with given name. Multiple CutRange arguments may be given to select multiple ranges. Note that this will also consider the variables that are not selected by SelectVars(). . EventRange(int lo, int hi) Only retain events with given sequential event numbers . Name(const char* name) Give specified name to output dataset . Title(const char* name) Give specified title to output dataset . Definition at line 399 of file RooAbsData.cxx. ◆ reduce() [5/5]. RooFit::OwningPtr< RooAbsData > RooAbsData::reduce ; (; const RooFormulaVar & ; cutVar); const. Create a subset of the data set by applying the given cut on the data points. ; The 'cutVar' formula variable is used to select the subset of data points to be retained in the reduced data collection. ; Definition at line 485 of file RooAbsData.cxx. ◆ reduceEng(). virtual std::unique_ptr< RooAbsData > RooAbsData::reduceEng ; (; const RooArgSet & ; varSubset, . const RooFormulaVar * ; cutVar, . const char * ; cutRange = nullptr, . std::size_t ; nStart = 0, . std::size_t ; = std::numeric_limits< std::size_t >::max() . ); const. protectedpure virtual . Implemented in RooDataHist, and RooDataSet. ◆ reset(). void RooAbsData::reset ; (; ). virtual . Reimplemented in RooDataHist.; Definition at line 330 of file RooAbsData.cxx. ◆ resetBuffers(). void RooAbsData::resetBuffers ; (; ). Definition at line 2344 of file RooAbsData.cxx. ◆ resetCache(). void RooAbsData::resetCache ; (; ). protectedvirtual . Internal method – Remove cached function values. ; Definition at line 354 of file RooAbsData.cxx. ◆ rmsVar(). RooRealVar * RooAbsData::rmsVar ; (; const RooRealVar & ; var, . const char * ; cutSpec = nullptr, . const char * ; cutRange",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsData.html:64810,variab,variable,64810,doc/master/classRooAbsData.html,https://root.cern,https://root.cern/doc/master/classRooAbsData.html,1,['variab'],['variable']
Modifiability,"tVerbose (Bool_t v);  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t Verbose (void) const;  ;  Public Member Functions inherited from TMVA::Configurable;  Configurable (const TString &theOption="""");  constructor ;  ; virtual ~Configurable ();  default destructor ;  ; void AddOptionsXMLTo (void *parent) const;  write options to XML file ;  ; template<class T > ; void AddPreDefVal (const T &);  ; template<class T > ; void AddPreDefVal (const TString &optname, const T &);  ; void CheckForUnusedOptions () const;  checks for unused options in option string ;  ; template<class T > ; TMVA::OptionBase * DeclareOptionRef (T &ref, const TString &name, const TString &desc);  ; template<class T > ; OptionBase * DeclareOptionRef (T &ref, const TString &name, const TString &desc="""");  ; template<class T > ; TMVA::OptionBase * DeclareOptionRef (T *&ref, Int_t size, const TString &name, const TString &desc);  ; template<class T > ; OptionBase * DeclareOptionRef (T *&ref, Int_t size, const TString &name, const TString &desc="""");  ; const char * GetConfigDescription () const;  ; const char * GetConfigName () const;  ; const TString & GetOptions () const;  ; MsgLogger & Log () const;  ; virtual void ParseOptions ();  options parser ;  ; void PrintOptions () const;  prints out the options set in the options string and the defaults ;  ; void ReadOptionsFromStream (std::istream &istr);  read option back from the weight file ;  ; void ReadOptionsFromXML (void *node);  ; void SetConfigDescription (const char *d);  ; void SetConfigName (const char *n);  ; void SetMsgType (EMsgType t);  ; void SetOptions (const TString &s);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void WriteOptionsToStream (std::ostream &o, const TString &prefix) const;  write options to output stream (e.g. in writing the MVA weight files ;  ;  Public Member Functions inherited from TNamed;  TName",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Reader.html:6715,inherit,inherited,6715,doc/master/classTMVA_1_1Reader.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Reader.html,1,['inherit'],['inherited']
Modifiability,"tVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; TEveElement*MapPickedToSelected(TEveElement* el); voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveSelection.html:11775,Inherit,InheritsFrom,11775,root/html532/TEveSelection.html,https://root.cern,https://root.cern/root/html532/TEveSelection.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTAttLine::Modify(); virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; Int_tTEveElement",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveScalableStraightLineSet.html:12992,Inherit,InheritsFrom,12992,root/html532/TEveScalableStraightLineSet.html,https://root.cern,https://root.cern/root/html532/TEveScalableStraightLineSet.html,6,['Inherit'],['InheritsFrom']
Modifiability,"tVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; TEveElement*MapPickedToSelected(TEveElement* el); voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; Int_tTEveElement::NumChildren() cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveSelection.html:11708,Inherit,InheritsFrom,11708,root/html602/TEveSelection.html,https://root.cern,https://root.cern/root/html602/TEveSelection.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTAttLine::Modify(); virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; Int_tTEveElement::NumChildren() const; Int_tTEveElemen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveScalableStraightLineSet.html:12964,Inherit,InheritsFrom,12964,root/html602/TEveScalableStraightLineSet.html,https://root.cern,https://root.cern/root/html602/TEveScalableStraightLineSet.html,6,['Inherit'],['InheritsFrom']
Modifiability,"tW (Double_t w);  ; void SetX (Double_t x);  ; void SetY (Double_t y);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGLayoutHints;  TGLayoutHints (const TGLayoutHints &lh);  Constructor. ;  ;  TGLayoutHints (ULong_t hints=kLHintsNormal, Int_t padleft=0, Int_t padright=0, Int_t padtop=0, Int_t padbottom=0);  ;  ~TGLayoutHints () override;  Destructor. ;  ; ULong_t GetLayoutHints () const;  ; Int_t GetPadBottom () const;  ; Int_t GetPadLeft () const;  ; Int_t GetPadRight () const;  ; Int_t GetPadTop () const;  ; void ls (Option_t *option="""") const override;  The ls function lists the contents of a class on stdout. ;  ; void Print (Option_t *option="""") const override;  Printing. ;  ; virtual void SetLayoutHints (ULong_t lh);  ; virtual void SetPadBottom (Int_t v);  ; virtual void SetPadLeft (Int_t v);  ; virtual void SetPadRight (Int_t v);  ; virtual void SetPadTop (Int_t v);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGXYLayoutHints.html:5354,inherit,inherited,5354,doc/master/classTGXYLayoutHints.html,https://root.cern,https://root.cern/doc/master/classTGXYLayoutHints.html,1,['inherit'],['inherited']
Modifiability,"tWrapper. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TMVA; » TMVA::BDTEventWrapper. class TMVA::BDTEventWrapper. Function Members (Methods); public:. ~BDTEventWrapper(); TMVA::BDTEventWrapperBDTEventWrapper(const TMVA::Event*); TMVA::BDTEventWrapperBDTEventWrapper(const TMVA::BDTEventWrapper&); Double_tGetCumulativeWeight(Bool_t type) const; Double_tGetVal() const; const TMVA::Event*operator*() const; Bool_toperator<(const TMVA::BDTEventWrapper& other) const; voidSetCumulativeWeight(Bool_t type, Double_t weight); static voidSetVarIndex(Int_t iVar). Data Members; private:. Double_tfBkgWeightcumulative background weight for splitting; const TMVA::Event*fEventpointer to the event; Double_tfSigWeightsame for the signal weights; static Int_tfVarIndexindex of the variable to sort on. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BDTEventWrapper(const Event* e); constuctor. ~BDTEventWrapper(); destructor. void SetCumulativeWeight(Bool_t type, Double_t weight); Set the accumulated weight, for sorted signal/background events. * @param fType - true for signal, false for background; * @param weight - the total weight. Double_t GetCumulativeWeight(Bool_t type) const; Get the accumulated weight. Bool_t operator<(const TMVA::BDTEventWrapper& other) const. BDTEventWrapper( const Event* ). void SetVarIndex(Int_t iVar); Set the index of the variable to compare on. * @param iVar - index of the variable in fEvent to use. { if (iVar >= 0) fVarIndex = iVar; }. Double_t GetVal() const; Return the value of variable fVarIndex for this event. * @return value of variable fVarIndex for this event. { return fEvent->GetValue(fVarIndex); }. const Event* operator*() const; { return fEvent; }. » Last changed: Thu Nov 3 20:19:22 2011 » Last generated: 2011-11-03 20:19; This page has bee",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__BDTEventWrapper.html:990,Inherit,Inheritance,990,root/html532/TMVA__BDTEventWrapper.html,https://root.cern,https://root.cern/root/html532/TMVA__BDTEventWrapper.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tWrapper. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TMVA; » TMVA::BDTEventWrapper. class TMVA::BDTEventWrapper. Function Members (Methods); public:. ~BDTEventWrapper(); TMVA::BDTEventWrapperBDTEventWrapper(const TMVA::Event*); TMVA::BDTEventWrapperBDTEventWrapper(const TMVA::BDTEventWrapper&); Double_tGetCumulativeWeight(Bool_t type) const; Double_tGetVal() const; const TMVA::Event*operator*() const; Bool_toperator<(const TMVA::BDTEventWrapper& other) const; voidSetCumulativeWeight(Bool_t type, Double_t weight); static voidSetVarIndex(Int_t iVar). Data Members; private:. Double_tfBkgWeightcumulative background weight for splitting; const TMVA::Event*fEventpointer to the event; Double_tfSigWeightsame for the signal weights; static Int_tfVarIndexindex of the variable to sort on. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BDTEventWrapper(const Event* e); constuctor. ~BDTEventWrapper(); destructor. void SetCumulativeWeight(Bool_t type, Double_t weight); Set the accumulated weight, for sorted signal/background events. * @param fType - true for signal, false for background; * @param weight - the total weight. Double_t GetCumulativeWeight(Bool_t type) const; Get the accumulated weight. Bool_t operator<(const TMVA::BDTEventWrapper& other) const. BDTEventWrapper( const Event* ). void SetVarIndex(Int_t iVar); Set the index of the variable to compare on. * @param iVar - index of the variable in fEvent to use. { if (iVar >= 0) fVarIndex = iVar; }. Double_t GetVal() const; Return the value of variable fVarIndex for this event. * @return value of variable fVarIndex for this event. { return fEvent->GetValue(fVarIndex); }. const Event* operator*() const; { return fEvent; }. » Last changed: Tue Sep 8 17:04:38 2015 » Last generated: 2015-09-08 17:04; This page has bee",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__BDTEventWrapper.html:990,Inherit,Inheritance,990,root/html534/TMVA__BDTEventWrapper.html,https://root.cern,https://root.cern/root/html534/TMVA__BDTEventWrapper.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tWriteRuleFitMod(); Bool_tWriteRuleFitSum(); Bool_tWriteTest(); Bool_tWriteTrain(); Bool_tWriteVarImp(); Bool_tWriteVarNames(); Bool_tWriteYhat(). private:. TMVA::RuleFitAPIRuleFitAPI(). Data Members; public:. enum ERFMode { kRfRegress; kRfClass; };; enum EModel { kRfLinear; kRfRules; kRfBoth; };; enum ERFProgram { kRfTrain; kRfPredict; kRfVarimp; };. private:. TMVA::MsgLoggerfLoggermessage logger; const TMVA::MethodRuleFit*fMethodRuleFitparent method - set in constructor; TStringfModelTypemodel type string; TMVA::RuleFitAPI::IntParmsfRFIntParmsinteger parameters; vector<int>fRFLxvariable selector; TMVA::RuleFitAPI::ERFProgramfRFProgramwhat to run; TMVA::RuleFitAPI::RealParmsfRFRealParmsreal parameters; vector<Float_t>fRFVarImpvariable importances; vector<Int_t>fRFVarImpIndvariable index; TStringfRFWorkDirworking directory; vector<Float_t>fRFYhatscore results from test sample; TMVA::RuleFit*fRuleFitnon const ptr to RuleFit class in MethodRuleFit. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RuleFitAPI(const TMVA::MethodRuleFit* rfbase, TMVA::RuleFit* rulefit, TMVA::EMsgType minType); standard constructor. ~RuleFitAPI(); destructor. void WelcomeMessage(); welcome message. void HowtoSetupRF(); howto message. void InitRuleFit(); default initialisation; SetRFWorkDir(""./rulefit"");. void ImportSetup(); import setup from MethodRuleFit. void SetRFWorkDir(const char* wdir); set the directory containing rf_go.exe. void CheckRFWorkDir(); check if the rulefit work dir is properly setup.; it aborts (kFATAL) if not. Check existance of directory. void SetTrainParms(); set the training parameters. void SetTestParms(); set the test params. void FillRealParmsDef(); set default real params. void FillIntParmsDef(); set default int params. Bool_t WriteAll(); write all files read by rf_go.exe. Bool_t WriteIntParms(); write int params file. Bool_t WriteRealParms(); write int params file. Bool_t WriteLx(); Save input variable mask. If the lx vec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__RuleFitAPI.html:2899,Inherit,Inheritance,2899,root/html532/TMVA__RuleFitAPI.html,https://root.cern,https://root.cern/root/html532/TMVA__RuleFitAPI.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tWriteTextActions ();  ; TClass * IsA () const override;  ; void ls (Option_t *option="""") const override;  List the TStreamerElement list and also the precomputed tables if option contains the string ""incOrig"", also prints the original (non-optimized elements in the list of compiled elements. ;  ; Bool_t MatchLegacyCheckSum (UInt_t checksum) const;  Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ;  ; void * New (void *obj=nullptr) override;  An emulated object is created at address obj, if obj is null we allocate memory for the object. ;  ; void * NewArray (Long_t nElements, void *ary=nullptr) override;  An array of emulated objects is created at address ary, if ary is null, we allocate memory for the array. ;  ; TVirtualStreamerInfo * NewInfo (TClass *cl) override;  ; void PrintValue (const char *name, char *pointer, Int_t i, Int_t len, Int_t lenmax=1000) const;  print value of element i in object at pointer The function may be called in two ways: -method1 len < 0 i is assumed to be the TStreamerElement number i in StreamerInfo -method2 len >= 0 i is the type address of variable is directly pointer. ;  ; void PrintValueClones (const char *name, TClonesArray *clones, Int_t i, Int_t eoffset, Int_t lenmax=1000) const;  Print value of element i in a TClonesArray. ;  ; void PrintValueSTL (const char *name, TVirtualCollectionProxy *cont, Int_t i, Int_t eoffset, Int_t lenmax=1000) const;  Print value of element i in a TClonesArray. ;  ; template<class T > ; Int_t ReadBuffer (TBuffer &b, const T &arrptr, TCompInfo *const *const compinfo, Int_t first, Int_t last, Int_t narr=1, Int_t eoffset=0, Int_t mode=0);  Deserialize information from buffer b into object at pointer if (arrayMode & 1) ptr is a pointer to array of pointers to the objects otherwise it is a pointer to a pointer to a single object. ;  ; template<class T > ; Int_t ReadBufferArtificial (TBuffer &b, const T &arrptr, TStreamerElem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerInfo.html:11567,variab,variable,11567,doc/master/classTStreamerInfo.html,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html,1,['variab'],['variable']
Modifiability,"tXstat() const; virtual Double_tTPad::GetY1() const; virtual Double_tTPad::GetY2() const; Float_tTAttPad::GetYfile() const; virtual Double_tTPad::GetYlowNDC() const; Size_tTCanvas::GetYsizeReal() const; Size_tTCanvas::GetYsizeUser() const; Float_tTAttPad::GetYstat() const; static voidGoBackward(); static voidGoForward(); virtual voidTCanvas::HandleInput(EEventType button, Int_t x, Int_t y); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual Bool_tTPad::HasCrosshair() const; virtual Bool_tTPad::HasFixedAspectRatio() const; virtual ULong_tTPad::Hash() const; Bool_tTCanvas::HasMenuBar() const; virtual Bool_tTPad::HasViewer3D() const; virtual voidTPad::HighLight(Color_t col = kRed, Bool_t set = kTRUE); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTCanvas::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectObject(TObject* obj); static voidInspector(TObject* obj); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTCanvas::IsBatch() const; Bool_tTVirtualPad::IsBeingResized() const; virtual Bool_tTPad::IsEditable() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCanvas::IsFolder() const; Bool_tTCanvas::IsGrayscale(); virtual Bool_tTPad::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTCanvas::IsRetained() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; virtual Bool_tTPad::IsVertical() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTCanvas::ls(Option_t* option = """") const; static TCan",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TInspectCanvas.html:12669,Inherit,InheritsFrom,12669,root/html532/TInspectCanvas.html,https://root.cern,https://root.cern/root/html532/TInspectCanvas.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tXstat() const; virtual Double_tTPad::GetY1() const; virtual Double_tTPad::GetY2() const; Float_tTAttPad::GetYfile() const; virtual Double_tTPad::GetYlowNDC() const; Size_tTCanvas::GetYsizeReal() const; Size_tTCanvas::GetYsizeUser() const; Float_tTAttPad::GetYstat() const; static voidGoBackward(); static voidGoForward(); virtual voidTCanvas::HandleInput(EEventType button, Int_t x, Int_t y); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual Bool_tTPad::HasCrosshair() const; virtual Bool_tTPad::HasFixedAspectRatio() const; virtual ULong_tTPad::Hash() const; Bool_tTCanvas::HasMenuBar() const; virtual Bool_tTPad::HasViewer3D() const; virtual voidTPad::HighLight(Color_t col = kRed, Bool_t set = kTRUE); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTCanvas::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectObject(TObject* obj); static voidInspector(TObject* obj); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTCanvas::IsBatch() const; Bool_tTVirtualPad::IsBeingResized() const; virtual Bool_tTPad::IsEditable() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCanvas::IsFolder() const; Bool_tTCanvas::IsGrayscale(); virtual Bool_tTPad::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTCanvas::IsRetained() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; virtual Bool_tTPad::IsVertical() const; Bool_tTObject::IsZombie() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTCanvas::ls(Option_t* option = """") const; static TCanvas*TCanvas::MakeDefCanvas(); voidTObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TInspectCanvas.html:12844,Inherit,InheritsFrom,12844,root/html602/TInspectCanvas.html,https://root.cern,https://root.cern/root/html602/TInspectCanvas.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t\\} \\over \\sqrt{n - {1\\over 24}}}"");; l.DrawMathText(0.13, 0.150, ""{(\\ell+1)C_{\\ell}^{TE} \\over 2\\pi}"");; l.DrawMathText(0.27, 0.110, ""\\mathbb{N} \\subset \\mathbb{R}"");; l.DrawMathText(0.63, 0.100, ""\\hbox{RHIC スピン物理 Нью-Йорк}"");; ; c1->Print(""c1.png"");; c1->Print(""c1.ps"");; ; return c1;; }; TCanvasThe Canvas class.Definition TCanvas.h:23; TLine::Printvoid Print(Option_t *option="""") const overrideDump this line with its attributes.Definition TLine.cxx:419; TMathTextTo draw TeX Mathematical Formula.Definition TMathText.h:19; c1return c1Definition legend1.C:41; lTLine lDefinition textangle.C:4; . The list of all available symbols is given in the following example:. Limitation:; TMathText rendering is not implemented for the PDF output. PostScript output should be used instead. ; Definition at line 19 of file TMathText.h. Public Types; enum  { kTextNDC = (1ULL << ( 14 )); };  ;  Public Types inherited from TText; enum  { kTextNDC = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMathText ();  Default constructor. ;  ;  TMathText (const TMathText &text);  Copy constructor. ;  ;  TMathText (Double_t x, Double_t y, const char *text);  Normal constructor. ;  ;  ~TMathText () override;  Destructor. ;  ; void Copy (TObject &text) const override;  Copy. ;  ; TMathText * DrawMathText (Double_t x, Double_t y, const char *text);  Make a copy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMathText.html:2783,inherit,inherited,2783,doc/master/classTMathText.html,https://root.cern,https://root.cern/doc/master/classTMathText.html,2,['inherit'],['inherited']
Modifiability,"t_epsAbsAbsolute convergence tolerance; Double_t_epsRelRelative convergence tolerance; Double_t_extrapError! Error on extrapolated value; Double_t_extrapValue! Extrapolated value; Int_t_fixStepsFixed number of steps ; const RooAbsFunc*RooAbsIntegrator::_functionPointer to function binding of integrand; Double_t*_h! Integrator workspace; Int_t_maxStepsMaximum number of steps; Int_t_minStepsZeroMinimum number of steps to declare convergence to zero; Bool_tRooAbsIntegrator::_printEvalCounterIf true print number of function evaluation required for integration; Double_t_range! Size of integration range; RooIntegrator1D::SummationRule_rule; Double_t*_s! Integrator workspace; Double_t_savedResult! Integrator workspace; Bool_t_useIntegrandLimitsIf true limits of function binding are ued; Bool_tRooAbsIntegrator::_validIs integrator in valid state?; Double_t*_x! do not persist; Double_t_xmax! Upper integration bound; Double_t_xmin! Lower integration bound. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerIntegrator(RooNumIntFactory& fact); Register RooIntegrator1D, is parameters and capabilities with RooNumIntFactory. RooIntegrator1D(); coverity[UNINIT_CTOR]; Default constructor. RooIntegrator1D(const RooAbsFunc& function, RooIntegrator1D::SummationRule rule = Trapezoid, Int_t maxSteps = 0, Double_t eps = 0); Construct integrator on given function binding, using specified summation; rule, maximum number of steps and conversion tolerance. The integration; limits are taken from the function binding. RooIntegrator1D(const RooAbsFunc& function, Double_t xmin, Double_t xmax, RooIntegrator1D::SummationRule rule = Trapezoid, Int_t maxSteps = 0, Double_t eps = 0); Construct integrator on given function binding for given range,; using specified summation rule, maximum number of steps and; conversion tolerance. The integration limits are taken from the; function binding. RooIntegrator1D(const RooAbsFunc& function, const RooNumIntCon",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooIntegrator1D.html:7822,Inherit,Inheritance,7822,root/html532/RooIntegrator1D.html,https://root.cern,https://root.cern/root/html532/RooIntegrator1D.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_error;; 792 ; 793 delete [] proto;; 794 ; 795 return has_input_error;; 796}; 797 ; 798////////////////////////////////////////////////////////////////////////////////; 799/// Return false if the class does not have ClassDef even-though it should.; 800 ; 801bool CheckClassDef(const clang::RecordDecl &cl, const cling::Interpreter &interp); 802{; 803 ; 804 // Detect if the class has a ClassDef; 805 bool hasClassDef = ROOT::TMetaUtils::ClassInfo__HasMethod(&cl, ""Class_Version"", interp);; 806 ; 807 const clang::CXXRecordDecl *clxx = llvm::dyn_cast<clang::CXXRecordDecl>(&cl);; 808 if (!clxx) {; 809 return false;; 810 }; 811 bool isAbstract = clxx->isAbstract();; 812 ; 813 if (!isAbstract && InheritsFromTObject(clxx, interp) && !InheritsFromTSelector(clxx, interp) && !hasClassDef) {; 814 std::string qualName;; 815 ROOT::TMetaUtils::GetQualifiedName(qualName, cl);; 816 const char *qualName_c = qualName.c_str();; 817 ROOT::TMetaUtils::Warning(qualName_c, ""The data members of %s will not be stored, ""; 818 ""because it inherits from TObject but does not ""; 819 ""have its own ClassDef.\n"",; 820 qualName_c);; 821 }; 822 ; 823 return true;; 824}; 825 ; 826////////////////////////////////////////////////////////////////////////////////; 827/// Return the name of the data member so that it can be used; 828/// by non-const operation (so it includes a const_cast if necessary).; 829 ; 830string GetNonConstMemberName(const clang::FieldDecl &m, const string &prefix = """"); 831{; 832 if (m.getType().isConstQualified()) {; 833 string ret = ""const_cast< "";; 834 string type_name;; 835 ROOT::TMetaUtils::GetQualifiedName(type_name, m.getType(), m);; 836 if (type_name.substr(0,6)==""const "") {; 837 ret += type_name.c_str()+6;; 838 } else {; 839 ret += type_name;; 840 }; 841 ret += "" &>( "";; 842 ret += prefix;; 843 ret += m.getName().str();; 844 ret += "" )"";; 845 return ret;; 846 } else {; 847 return prefix + m.getName().str();; 848 }; 849}; 850 ; 851//////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootcling__impl_8cxx_source.html:28474,inherit,inherits,28474,doc/master/rootcling__impl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/rootcling__impl_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"t_i BeginProjecteds ();  ; virtual void ClearProjectedList ();  ; ProjList_i EndProjecteds ();  ; virtual Bool_t HasProjecteds () const;  ; virtual void PropagateMainColor (Color_t color, Color_t old_color);  Set main color of projecteds if their color is the same as old_color. ;  ; virtual void PropagateMainTransparency (Char_t t, Char_t old_t);  Set main transparency of projecteds if their transparency is the same as the old one. ;  ; virtual void PropagateRenderState (Bool_t rnr_self, Bool_t rnr_children);  Set render state of projecteds. ;  ; virtual void PropagateVizParams (TEveElement *el=nullptr);  Set visualization parameters of projecteds. ;  ; virtual void RemoveProjected (TEveProjected *p);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TEveWindowSlot * CreateDefaultWindowSlot ();  Create a default window slot. ;  ; static TEveWindowSlot * CreateWindowInTab (TGTab *tab, TEveWindow *eve_parent=nullptr);  Create a new tab in a given tab-widget and populate it with a default window-slot. ;  ; static TEveWindowSlot * CreateWindowMainFrame (TEveWindow *eve_parent=nullptr);  Create a new main-frame and populate it with a default window-slot. ;  ; static const char * DeclFileName ();  ; static Pixel_t GetCurrentBackgroundColor ();  Get background-color for marking the title-bar of current window. Static. ;  ; static UInt_t GetMainFrameDefHeight ();  Get default height for new main-frame windows. Static. ;  ; static UInt_t GetMainFrameDefWidth ();  Get default width for new main-frame windows. Static. ;  ; static Pixel_t GetMiniBarBackgroundColor ();  Get background-color for mini-",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveWindowFrame.html:29247,inherit,inherited,29247,doc/master/classTEveWindowFrame.html,https://root.cern,https://root.cern/doc/master/classTEveWindowFrame.html,4,['inherit'],['inherited']
Modifiability,"t_orderMoment order; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_t_takeRootReturn n-order root of moment; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; RooRealProxy_xObservable; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooAbsMoment(); Destructor. Int_t order() const; { return _order ; }. Bool_t central() const; { return _mean.absArg() ? kTRUE : kFALSE ; }. RooAbsReal* mean(); { return (RooAbsReal*) _mean.absArg() ; }. » Last changed: Tue Mar 10 17:14:02 2015 » Last generated: 2015-03-10 17:14; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsMoment.html:35728,Inherit,Inheritance,35728,root/html534/RooAbsMoment.html,https://root.cern,https://root.cern/root/html534/RooAbsMoment.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_reverse_iterator rend () const noexcept;  ; reverse_iterator rend () noexcept;  ; size_t size () const;  ; size_type size_in_bytes () const;  ;  Public Member Functions inherited from ROOT::Internal::VecOps::SmallVectorBase; size_t capacity () const noexcept;  ; bool empty () const;  ; void set_size (size_t N);  Set the array size to N, which the current array must have enough capacity for. ;  ; size_t size () const;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::Detail::VecOps::RVecImpl< T >;  RVecImpl (unsigned N);  ;  Protected Member Functions inherited from ROOT::Internal::VecOps::SmallVectorTemplateBase< T, bool >;  SmallVectorTemplateBase (size_t Size);  ; void grow (size_t MinSize=0);  Grow the allocated memory (without initializing new elements), doubling the size of the allocated memory. ;  ;  Protected Member Functions inherited from ROOT::Internal::VecOps::SmallVectorTemplateCommon< T >;  SmallVectorTemplateCommon (size_t Size);  ; void grow_pod (size_t MinSize, size_t TSize);  ; bool isSmall () const;  Return true if this is a smallvector which has not had dynamic memory allocated for it. ;  ; void resetToSmall ();  Put this vector in a state of being small. ;  ;  Protected Member Functions inherited from ROOT::Internal::VecOps::SmallVectorBase;  SmallVectorBase ()=delete;  ;  SmallVectorBase (void *FirstEl, size_t TotalCapacity);  ; void grow_pod (void *FirstEl, size_t MinSize, size_t TSize);  This is an implementation of the grow() method which only works on POD-like data types and is out of line to reduce code duplication. ;  ; bool Owns () const;  If false, the RVec is in ""memory adoption"" mode, i.e. it is acting as a view on a memory buffer it does not own. ;  ;  Static Protected Member Functions inherited from ROOT::Internal::VecOps::SmallVectorTemplateBase< T, bool >; static void destroy_range (T *S, T *E);  ; template<typename It1 , typename It2 > ; static void uninitialized_copy (It1 I, It1 E, It2 Dest);  Co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVecN.html:7074,inherit,inherited,7074,doc/master/classROOT_1_1VecOps_1_1RVecN.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVecN.html,1,['inherit'],['inherited']
Modifiability,"t_t * GenerateOffsetArrayBase(Int_t base, Int_t events) constIf the class supports it, generate an offset array base.Definition TLeaf.cxx:188; TLeaf::SetAddressvirtual void SetAddress(void *add=nullptr)Definition TLeaf.h:185; TLeaf::Browsevoid Browse(TBrowser *b) overrideBrowse the content of this leaf.Definition TLeaf.cxx:157; TLeaf::FillBasketvirtual void FillBasket(TBuffer &b)Pack leaf elements in Basket output buffer.Definition TLeaf.cxx:180; TLeaf::TLeafTLeaf()Definition TLeaf.cxx:55; TLeaf::GetBranchTBranch * GetBranch() constDefinition TLeaf.h:116; TLeaf::fOffsetInt_t fOffsetOffset in ClonesArray object (if one)Definition TLeaf.h:74; TLeaf::GetOffsetHeaderSizevirtual Int_t GetOffsetHeaderSize() constDefinition TLeaf.h:61; TLeaf::fBranchTBranch * fBranch! Pointer to supporting branch (we do not own the branch)Definition TLeaf.h:78; TLeaf::fIsUnsignedbool fIsUnsigned(=true if unsigned, false otherwise)Definition TLeaf.h:76; TLeaf::fLeafCountTLeaf * fLeafCountPointer to Leaf count if variable length (we do not own the counter)Definition TLeaf.h:77; TLeaf::kNewValue@ kNewValueSet if we own the value buffer and so must delete it ourselves.Definition TLeaf.h:96; TLeaf::SetLeafCountvirtual void SetLeafCount(TLeaf *leaf)Set the leaf count of this leaf.Definition TLeaf.cxx:465; TLeaf::GetFullNamevirtual TString GetFullName() constReturn the full name (including the parent's branch names) of the leaf.Definition TLeaf.cxx:224; TLeaf::fLeafCountValuesLeafCountValues * fLeafCountValues! Cache of collection/array sizesDefinition TLeaf.h:79; TLeaf::SetRangevirtual void SetRange(bool range=true)Definition TLeaf.h:165; TLeaf::Counts_tstd::vector< Int_t > Counts_tDefinition TLeaf.h:65; TLeaf::Classstatic TClass * Class(); TLeaf::IsRangevirtual bool IsRange() constDefinition TLeaf.h:149; TNamedThe TNamed class is the base class for all named ROOT classes.Definition TNamed.h:29; TNamed::GetNameconst char * GetName() const overrideReturns name of object.Definition TNamed.h:47; TN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLeaf_8cxx_source.html:21737,variab,variable,21737,doc/master/TLeaf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TLeaf_8cxx_source.html,1,['variab'],['variable']
Modifiability,"t_t *); 1515{; 1516 if (!line) return 0;; 1517 ; 1518 if (!strncmp(line, ""-?"", 2) || !strncmp(line, ""-h"", 2) ||; 1519 !strncmp(line, ""--help"", 6)) {; 1520 Info(""ProcessRemote"", ""remote session help:"");; 1521 Printf("".R [user@]host[:dir] [-l user] [-d dbg] [[<]script] | [host] -close"");; 1522 Printf(""Create a ROOT session on the specified remote host."");; 1523 Printf(""The variable \""dir\"" is the remote directory to be used as working dir."");; 1524 Printf(""The username can be specified in two ways, \""-l\"" having the priority"");; 1525 Printf(""(as in ssh). A \""dbg\"" value > 0 gives increasing verbosity."");; 1526 Printf(""The last argument \""script\"" allows to specify an alternative script to"");; 1527 Printf(""be executed remotely to startup the session, \""roots\"" being"");; 1528 Printf(""the default. If the script is preceded by a \""<\"" the script will be"");; 1529 Printf(""sourced, after which \""roots\"" is executed. The sourced script can be "");; 1530 Printf(""used to change the PATH and other variables, allowing an alternative"");; 1531 Printf(""\""roots\"" script to be found."");; 1532 Printf(""To close down a session do \"".R host -close\""."");; 1533 Printf(""To switch between sessions do \"".R host\"", to switch to the local"");; 1534 Printf(""session do \"".R\""."");; 1535 Printf(""To list all open sessions do \""gApplication->GetApplications()->Print()\""."");; 1536 return 0;; 1537 }; 1538 ; 1539 TString hostdir, user, script;; 1540 Int_t dbg = 0;; 1541 Int_t rc = ParseRemoteLine(line, hostdir, user, dbg, script);; 1542 if (hostdir.Length() <= 0) {; 1543 // Close the remote application if required; 1544 if (rc == 1) {; 1545 TApplication::Close(fAppRemote);; 1546 delete fAppRemote;; 1547 }; 1548 // Return to local run; 1549 fAppRemote = nullptr;; 1550 // Done; 1551 return 1;; 1552 } else if (rc == 1) {; 1553 // close an existing remote application; 1554 TApplication *ap = TApplication::Open(hostdir, 0, nullptr);; 1555 if (ap) {; 1556 TApplication::Close(ap);; 1557 delete ap;; 1558 }; 1559 }",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TApplication_8cxx_source.html:60856,variab,variables,60856,doc/master/TApplication_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TApplication_8cxx_source.html,1,['variab'],['variables']
Modifiability,"t_t *event) override;  Handle mouse crossing event. ;  ; Bool_t HandleKey (Event_t *event) override;  Handle key event. This function will be called when the hotkey is hit. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsDisabledAndSelected () const;  ; Bool_t IsDown () const override;  ; Bool_t IsOn () const override;  ; Bool_t IsToggleButton () const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a check button widget as a C++ statement(s) on output stream out. ;  ; virtual void SetDisabledAndSelected (Bool_t);  Set the state of a check button to disabled and either on or off. ;  ; void SetState (EButtonState state, Bool_t emit=kFALSE) override;  Set check button state. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGTextButton;  TGTextButton (const TGWindow *p, const char *s, const char *cmd, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=kRaisedFrame|kDoubleBorder);  Create a text button widget and set cmd string at same time. ;  ;  TGTextButton (const TGWindow *p, TGHotString *s, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=kRaisedFrame|kDoubleBorder);  Create a text button widget. ;  ;  TGTextButton (const TGWindow *p=nullptr, const char *s=nullptr, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=kRaisedFrame|kDoubleBorder);  Create a text button widget. ;  ;  ~TGTextButton () override;  Delete a text button widget. ;  ; void ChangeText (const char *title);  ; Int_t GetBottomMargin () const;  ; TGDimension GetDefaultSize () const override;  returns default size ;  ; FontStruct_t GetFontStruct () const;  ; Int_t GetLeftMargin () const;  ; Int_t GetRightMargin () const;  ; TString GetString () const;  ; cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCheckButton.html:2814,inherit,inherited,2814,doc/master/classTGCheckButton.html,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html,1,['inherit'],['inherited']
Modifiability,"t_t *event) override;  Handles resize events for this widget. ;  ; Bool_t HandleMotion (Event_t *event) override;  Handle mouse motion event in vertical slider. ;  ; TClass * IsA () const override;  ; virtual void PointerPositionChanged ();  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save an horizontal slider as a C++ statement(s) on output stream out. ;  ; virtual void SetConstrained (Bool_t on=kTRUE);  Set pointer position constrained in the slider range. ;  ; virtual void SetPointerPosition (Double_t pos);  Set pointer position in scaled (real) value. ;  ; virtual void SetPointerPosition (Float_t pos);  ; virtual void SetPointerPosition (Long64_t pos);  ; virtual void SetRelative (Bool_t rel=kTRUE);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGDoubleVSlider;  TGDoubleVSlider (const TGWindow *p=nullptr, UInt_t h=1, UInt_t type=1, Int_t id=-1, UInt_t options=kVerticalFrame, Pixel_t back=GetDefaultFrameBackground(), Bool_t reversed=kFALSE, Bool_t mark_ends=kFALSE);  Create a vertical slider widget. ;  ;  ~TGDoubleVSlider () override;  Delete vertical slider widget. ;  ; TGDimension GetDefaultSize () const override;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGDoubleSlider;  TGDoubleSlider (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t type=1, Int_t id=-1, UInt_t options=kChildFrame, Pixel_t back=GetDefaultFrameBackground(), Bool_t reversed=kFALSE, Bool_t mark_ends=kFALSE);  Slider constructor. ;  ;  ~TGDoubleSlider () override;  ; virtual Float_t GetMaxPosition () const;  ; virtual Double_t GetMaxPositionD () const;  ; virtual Long64_t GetMaxPositionL () const;  ; virtual Float_t GetMinPosition () const;  ; virtual Double_t GetMinPositionD () const;  ; virtual Long64_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTripleVSlider.html:3134,inherit,inherited,3134,doc/master/classTGTripleVSlider.html,https://root.cern,https://root.cern/doc/master/classTGTripleVSlider.html,1,['inherit'],['inherited']
Modifiability,"t_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStruct_t color const char Pixmap_t Pixmap_t PictureAttributes_t attr const char char ret_data h unsigned char height h Atom_t Int_t ULong_t ULong_t unsigned char prop_list Atom_t Atom_t Atom_t Time_t typeDefinition TGWin32VirtualXProxy.cxx:249; TCollection::GetCurrentCollectionstatic TCollection * GetCurrentCollection()Return the globally accessible collection.Definition TCollection.cxx:680; TIterDefinition TCollection.h:235. Definition at line 373 of file TCollection.h. Typedef Documentation. ◆ TRangeDynCast. template<typename T > . using TRangeDynCast = ROOT::Detail::TRangeCast<T, true>. TRangeDynCast is an adapter class that allows the typed iteration through a TCollection. ; The typical use is: for(auto bcl : TRangeDynCast<TBaseClass>( *cl->GetListOfBases() )) {; if (!bcl) continue;; ... use bcl as a TBaseClass*; }; for(auto bcl : TRangeDynCast<TBaseClass>( cl->GetListOfBases() )) {; if (!bcl) continue;; ... use bcl as a TBaseClass*; }; a#define a(i)Definition RSha256.hxx:99; ROOT::Detail::TRangeCastDefinition TCollection.h:311; TBaseClassEach class (see TClass) has a linked list of its base class(es).Definition TBaseClass.h:33; Template Parameters. TThe new type to convert to. . Definition at line 358 of file TCollection.h. Variable Documentation. ◆ gCollectionMutex. R__EXTERN TVirtualMutex* gCollectionMutex. Definition at line 45 of file TCollection.h. ◆ kIterBackward. const Bool_t kIterBackward = !kIterForward. Definition at line 43 of file TCollection.h. ◆ kIterForward. const Bool_t kIterForward = kTRUE. Definition at line 42 of file TCollection.h. corecontincTCollection.h. ROOT master - Reference Guide Ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCollection_8h.html:5861,adapt,adapter,5861,doc/master/TCollection_8h.html,https://root.cern,https://root.cern/doc/master/TCollection_8h.html,1,['adapt'],['adapter']
Modifiability,"t_t TMVA::PDEFoam::fLastCe. protected . Index of the last cell. ; Definition at line 95 of file PDEFoam.h. ◆ fLogger. MsgLogger* TMVA::PDEFoam::fLogger. mutableprotected . ! message logger ; Definition at line 118 of file PDEFoam.h. ◆ fMaskDiv. Int_t* TMVA::PDEFoam::fMaskDiv. protected . ! [fDim] Dynamic Mask for cell division ; Definition at line 91 of file PDEFoam.h. ◆ fMaxDepth. UInt_t TMVA::PDEFoam::fMaxDepth. protected . maximum depth of cell tree ; Definition at line 110 of file PDEFoam.h. ◆ fName. TString TMVA::PDEFoam::fName. protected . Name of a given instance of the FOAM class. ; Definition at line 83 of file PDEFoam.h. ◆ fNBin. Int_t TMVA::PDEFoam::fNBin. protected . No. of bins in the edge histogram for cell MC exploration. ; Definition at line 87 of file PDEFoam.h. ◆ fNCells. Int_t TMVA::PDEFoam::fNCells. protected . Maximum number of cells. ; Definition at line 85 of file PDEFoam.h. ◆ fNElements. UInt_t TMVA::PDEFoam::fNElements. protected . BACKWARDS COMPATIBILITY: number of variables in every cell. ; Definition at line 108 of file PDEFoam.h. ◆ fNmin. UInt_t TMVA::PDEFoam::fNmin. protected . minimal number of events in cell to split cell ; Definition at line 109 of file PDEFoam.h. ◆ fNoAct. Int_t TMVA::PDEFoam::fNoAct. protected . Number of active cells. ; Definition at line 94 of file PDEFoam.h. ◆ fNSampl. Int_t TMVA::PDEFoam::fNSampl. protected . No. of MC events, when dividing (exploring) cell. ; Definition at line 88 of file PDEFoam.h. ◆ fPeekMax. Bool_t TMVA::PDEFoam::fPeekMax. protected . BACKWARDS COMPATIBILITY: peek up cell with max. driver integral for split. ; Definition at line 114 of file PDEFoam.h. ◆ fPseRan. TRandom3* TMVA::PDEFoam::fPseRan. protected . Pointer to user-defined generator of pseudorandom numbers. ; Definition at line 101 of file PDEFoam.h. ◆ fRvec. Double_t* TMVA::PDEFoam::fRvec. protected . [fDim] random number vector from r.n. generator fDim+1 maximum elements ; Definition at line 99 of file PDEFoam.h. ◆ fTimer. Timer* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoam.html:42957,variab,variables,42957,doc/master/classTMVA_1_1PDEFoam.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoam.html,1,['variab'],['variables']
Modifiability,"t_t btype); voidValidateAddress() const; Int_tTBranch::WriteBasket(TBasket* basket, Int_t where). private:. TBranchElement(const TBranchElement&); TBranchElement&operator=(const TBranchElement&); static voidSwitchContainer(TObjArray*). Data Members; public:. enum { kBranchFolder; kDeleteObject; kCache; kOwnOnfileObj; kAddressSet; kMakeClass; kDecomposedObj; };; enum TBranch::[unnamed] { kAutoDelete; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. char*TBranch::fAddress! Address of 1st leaf (variable or object); Int_t*TBranch::fBasketBytes[fMaxBaskets] Lenght of baskets on file; Long64_t*TBranch::fBasketEntry[fMaxBaskets] Table of first entry in eack basket; Long64_t*TBranch::fBasketSeek[fMaxBaskets] Addresses of baskets on file; Int_tTBranch::fBasketSizeInitial Size of Basket Buffer; TObjArrayTBranch::fBaskets-> List of baskets of this branch; TClassReffBranchClass! Reference to class definition in fClassName; TBranchElement*fBranchCountpointer to primary branchcount branch; TBranchElement*fBranchCount2pointer to secondary branchcount branch; Int_tfBranchID! ID number assigned by a TRefTable.; Int_t*fBranchOffset! Sub-Branch offsets with respect to current transient class; TObjArrayTBranch::fBranches-> List of Branches of this branch; TList*TBranch::fBrowsables! List of TVirtualBranchBrowsables used for Browse(); UInt_tfCheckSumCheckSum of class; TStringfClassNameClass name of referenced object; Int_tfClassVersionVersion number of class; TStringfClonesNameName of class in TClonesArray (if any); TVirtualCollectionProxy*fCollProxy! collection interface (if any); Int_tTBranch::fCompress(=1 branch is compressed, 0 otherwise); TClassReffCurrentClass! Reference to current (transient) class definition; TDirectory*TBranch::fDirectory! Pointer to directory wh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TBranchElement.html:13027,variab,variable,13027,root/html528/TBranchElement.html,https://root.cern,https://root.cern/root/html528/TBranchElement.html,1,['variab'],['variable']
Modifiability,"t_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TGenerator&TGenerator::operator=(const TGenerator& tg). private:. voidAddParticlesToPdgDataBase(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; Int_tfNumberOfParticles! Number of particles; TObjArray*TGenerator::fParticles->static container of the primary particles; Float_tTGenerator::fPtCut!Pt cut. Do not show primaries below; Pythia8::Pythia*fPythia! The pythia8 instance; Bool_tTGenerator::fShowNeutrons!display neutrons if true; TStringTNamed::fTitleobject title; static TPythia8*fgInstance! singleton instance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPythia8(); Constructor. TPythia8(const char* xmlDir); Constructor with an xmlDir (eg ""../xmldoc"". ~TPythia8(); Destructor. TPythia8* Instance(); Return an instance of TPythia8. Bool_t Initialize(Int_t idAin, Int_t idBin, Double_t ecms); Initialization. Bool_t Initialize(Int_t idAin, Int_t idBin, Double_t eAin, Double_t eBin); Initialization. void GenerateEvent(); Generate the next event. Int_t ImportParticles(TClonesArray* particles, Option_t* option = """"); Import particles from Pythia stack. TObjArray* ImportParticles(Option_t* option = """"); Import particles from Pythia stack. Int_t GetN() const; Initialization. void ReadString(const char* string) const; Configuration. void ReadConfigFile(const char* string) const; Configuration. void ListAll() const; Event listing. void ListChanged() const; Event listing. void Plist(Int_t id) const; Event listing. void PlistAll() const; Event listing. void PlistChanged() const; Event listing. void P",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPythia8.html:9893,Inherit,Inheritance,9893,root/html534/TPythia8.html,https://root.cern,https://root.cern/root/html534/TPythia8.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TGenerator&TGenerator::operator=(const TGenerator& tg). private:. voidAddParticlesToPdgDataBase(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; Int_tfNumberOfParticles! Number of particles; TObjArray*TGenerator::fParticles->static container of the primary particles; Float_tTGenerator::fPtCut!Pt cut. Do not show primaries below; Pythia8::Pythia*fPythia! The pythia8 instance; Bool_tTGenerator::fShowNeutrons!display neutrons if true; TStringTNamed::fTitleobject title; static TPythia8*fgInstance! singleton instance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPythia8(); Constructor. TPythia8(const char* xmlDir); Constructor with an xmlDir (eg ""../xmldoc"". ~TPythia8(); Destructor. TPythia8* Instance(); Return an instance of TPythia8. Bool_t Initialize(Int_t idAin, Int_t idBin, Double_t ecms); Initialization. void GenerateEvent(); Generate the next event. Int_t ImportParticles(TClonesArray* particles, Option_t* option = """"); Import particles from Pythia stack. TObjArray* ImportParticles(Option_t* option = """"); Import particles from Pythia stack. Int_t GetN() const; Initialization. void ReadString(const char* string) const; Configuration. void ReadConfigFile(const char* string) const; Configuration. void PrintStatistics() const; Print end of run statistics. void EventListing() const; Event listing. void AddParticlesToPdgDataBase(); Add some pythia specific particle code to the data base. TPythia8(). » Author: Andreas Morsch 27/10/2007 » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPythia8.html:9679,Inherit,Inheritance,9679,root/html532/TPythia8.html,https://root.cern,https://root.cern/root/html532/TPythia8.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_t bufsize = 0) const; virtual voidX2P(const Double_t* x, Double_t* p). protected:. TPrincipal(const TPrincipal&); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidMakeNormalised(); voidMakeRealCode(const char* filename, const char* prefix, Option_t* option = """"); voidTObject::MakeZombie(); TPrincipal&operator=(const TPrincipal&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMatrixDfCovarianceMatrixCovariance matrix; TVectorDfEigenValuesEigenvalue vector of trans; TMatrixDfEigenVectorsEigenvector matrix of trans; TList*fHistogramsList of histograms; Bool_tfIsNormalisedNormalize matrix?; TVectorDfMeanValuesMean value over all data points; TStringTNamed::fNameobject identifier; Int_tfNumberOfDataPointsNumber of data points; Int_tfNumberOfVariablesNumber of variables; TVectorDfOffDiagonalelements of the tridiagonal; TVectorDfSigmasvector of sigmas; Bool_tfStoreDataShould we store input data?; TStringTNamed::fTitleobject title; Double_tfTraceTrace of covarience matrix; TVectorDfUserDataVector of original data points. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPrincipal(); Empty CTOR, Do not use. TPrincipal(Int_t nVariables, Option_t* opt = ""ND""); Ctor. Argument is number of variables in the sample of data; Options are:; N Normalize the covariance matrix (default); D Store input data (default). The created object is named ""principal"" by default. TPrincipal(const TPrincipal& ); copy constructor. TPrincipal& operator=(const TPrincipal& ); assignement operator. ~TPrincipal(); destructor. void AddRow(const Double_t* x). /*; >; Add a data point and update the covariance matrix. The input; array must be fNumberOfVariables long. The Cova",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPrincipal.html:11778,variab,variables,11778,root/html528/TPrincipal.html,https://root.cern,https://root.cern/root/html528/TPrincipal.html,6,['variab'],['variables']
Modifiability,"t_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TGFrameElement&operator=(const TGFrameElement&); TGFrameElement(const TGFrameElement&). Data Members; public:. TGFrame*fFrameframe used in layout; TGLayoutHints*fLayoutlayout hints used in layout; Int_tfStateEFrameState defined in TGFrame.h; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGFrameElement(TGFrame* f, TGLayoutHints* l); Constructor. ~TGFrameElement(); Destructor. Decrease ref. count of fLayout. void Print(Option_t* option = """") const; Print this frame element. TGLayoutHints& operator=(const TGFrameElement& ). void ls(Option_t* option = """") const; { Print(option); }. TGFrameElement(const TGFrameElement& ). TGFrameElement(); { }. » Author: Fons Rademakers 02/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-30 14:51; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGFrameElement.html:6714,Inherit,Inheritance,6714,root/html602/TGFrameElement.html,https://root.cern,https://root.cern/root/html602/TGFrameElement.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TGFrameElement&operator=(const TGFrameElement&); TGFrameElement(const TGFrameElement&). Data Members; public:. TGFrame*fFrameframe used in layout; TGLayoutHints*fLayoutlayout hints used in layout; Int_tfStateEFrameState defined in TGFrame.h; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGFrameElement(TGFrame* f, TGLayoutHints* l); Constructor. ~TGFrameElement(); Destructor. Decrease ref. count of fLayout. void Print(Option_t* option = """") const; Print this frame element. TGLayoutHints& operator=(const TGFrameElement& ). void ls(Option_t* option = """") const; { Print(option); }. TGFrameElement(const TGFrameElement& ). TGFrameElement(); { }. » Author: Fons Rademakers 02/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-09-08 17:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGFrameElement.html:6714,Inherit,Inheritance,6714,root/html604/TGFrameElement.html,https://root.cern,https://root.cern/root/html604/TGFrameElement.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; UShort_t fDetId;  ; Int_t fEvaLabel;  ; Int_t fLabel;  ; UShort_t fSubdetId;  ; TEveVector fV;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TEveVSDStructs.h>. Inheritance diagram for TEveHit:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveHit.html:8978,inherit,inherited,8978,doc/master/classTEveHit.html,https://root.cern,https://root.cern/doc/master/classTEveHit.html,1,['inherit'],['inherited']
Modifiability,"t_t c at position i. Check for out of bounds. ;  ; void Adopt (Int_t n, Int_t *array);  Adopt array arr into TArrayI, i.e. ;  ; Int_t At (Int_t i) const;  ; void Copy (TArrayI &array) const;  ; Int_t * GetArray ();  ; const Int_t * GetArray () const;  ; Double_t GetAt (Int_t i) const override;  ; Stat_t GetSum () const;  ; TClass * IsA () const override;  ; TArrayI & operator= (const TArrayI &rhs);  TArrayI assignment operator. ;  ; Int_t & operator[] (Int_t i);  ; Int_t operator[] (Int_t i) const;  ; void Reset ();  ; void Reset (Int_t val);  ; void Set (Int_t n) override;  Set size of this array to n ints. ;  ; void Set (Int_t n, const Int_t *array);  Set size of this array to n ints and set the contents. ;  ; void SetAt (Double_t v, Int_t i) override;  ; void Streamer (TBuffer &) override;  Stream a TArrayI object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArray;  TArray ();  ;  TArray (const TArray &a);  ;  TArray (Int_t n);  ; virtual ~TArray ();  ; Int_t GetSize () const;  ; TArray & operator= (const TArray &rhs);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TArray; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TArray * ReadArray (TBuffer &b, const TClass *clReq);  Read TArray object from buffer. ;  ; static void WriteArray (TBuffer &b, const TArray *a);  Write TArray object to buffer. ;  . Public Attributes; Int_t * fArray;  ;  Public Attributes inherited from TArray; Int_t fN;  . Additional Inherited Members;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTArrayI.html:1708,inherit,inherited,1708,doc/master/classTArrayI.html,https://root.cern,https://root.cern/doc/master/classTArrayI.html,1,['inherit'],['inherited']
Modifiability,"t_t copy_No, TGeoMatrix *matr);. The creation of overapping nodes can be done with a similar prototype:. TGeoVolume::AddNodeOverlap(same arguments);. When closing the geometry, overlapping nodes perform a check of possible; overlaps with their neighbours. These are stored and checked all the time; during navigation, therefore navigation is slower when embedding such nodes; into geometry. Node have visualization attributes as volume have. When undefined by users,; painting a node on a pad will take the corresponding volume attributes. /*. */. Function Members (Methods); public:. virtual~TGeoIterator(); static TClass*Class(); const TGeoMatrix*GetCurrentMatrix() const; Int_tGetIndex(Int_t i) const; Int_tGetLevel() const; TGeoNode*GetNode(Int_t level) const; voidGetPath(TString& path) const; TGeoVolume*GetTopVolume() const; Int_tGetType() const; TGeoIteratorPlugin*GetUserPlugin() const; virtual TClass*IsA() const; TGeoNode*Next(); TGeoNode*operator()(); TGeoIterator&operator=(const TGeoIterator& iter); voidReset(TGeoVolume* top = 0); voidSetPluginAutoexec(Bool_t mode); voidSetTopName(const char* name); voidSetType(Int_t type); voidSetUserPlugin(TGeoIteratorPlugin* plugin); virtual voidShowMembers(TMemberInspector& insp) const; voidSkip(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TGeoIterator(TGeoVolume* top); TGeoIterator(const TGeoIterator& iter). protected:. TGeoIterator(). private:. voidIncreaseArray(). Data Members; private:. Int_t*fArrayArray of node indices for the current path; Int_tfLevelCurrent level in the tree; TGeoHMatrix*fMatrixCurrent global matrix; Bool_tfMustResumePrivate flag to resume from current node.; Bool_tfMustStopPrivate flag to signal that the iterator has finished.; TGeoIteratorPlugin*fPluginUser iterator plugin; Bool_tfPluginAutoexecPlugin automatically executed during next(); TGeoVolume*fTopTop volume of the iterated branch; TStringfTopNameUser name for top; Int_tfTypeType of iteration. Class ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoIterator.html:3858,plugin,plugin,3858,root/html602/TGeoIterator.html,https://root.cern,https://root.cern/root/html602/TGeoIterator.html,4,['plugin'],['plugin']
Modifiability,"t_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGamma() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; voidGetXYZT(Double_t* carray) const; voidGetXYZT(Float_t* carray) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; Double_tM() const; Double_tM2() const; Double_tMag() const; Double_tMag2() const; voidTObject::MayNotUse(const char* method) const; Double_tMinus() const; Double_tMt() const; Double_tMt2() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::oper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLorentzVector.html:9655,Inherit,InheritsFrom,9655,root/html532/TLorentzVector.html,https://root.cern,https://root.cern/root/html532/TLorentzVector.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGamma() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; voidGetXYZT(Double_t* carray) const; voidGetXYZT(Float_t* carray) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; Double_tM() const; Double_tM2() const; Double_tMag() const; Double_tMag2() const; voidTObject::MayNotUse(const char* method) const; Double_tMinus() const; Double_tMt() const; Double_tMt2() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLorentzVector.html:9365,Inherit,InheritsFrom,9365,root/html602/TLorentzVector.html,https://root.cern,https://root.cern/root/html602/TLorentzVector.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetColLwb() const; Int_tGetColUpb() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetRowLwb() const; Int_tGetRowUpb() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Pa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMatrixTLazy_double_.html:2767,Inherit,InheritsFrom,2767,root/html532/TMatrixTLazy_double_.html,https://root.cern,https://root.cern/root/html532/TMatrixTLazy_double_.html,4,['Inherit'],['InheritsFrom']
Modifiability,"t_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetColLwb() const; Int_tGetColUpb() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetRowLwb() const; Int_tGetRowUpb() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMatrixTLazy_double_.html:2677,Inherit,InheritsFrom,2677,root/html602/TMatrixTLazy_double_.html,https://root.cern,https://root.cern/root/html602/TMatrixTLazy_double_.html,4,['Inherit'],['InheritsFrom']
Modifiability,"t_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Long64_tGetCacheSize(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Int_tGetLearnEntries(); virtual const char*TObject::GetName() const; virtual Long64_tGetNextEvent(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInvalidatePacket(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEventIter.html:2719,Inherit,InheritsFrom,2719,root/html532/TEventIter.html,https://root.cern,https://root.cern/root/html532/TEventIter.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Long64_tGetCacheSize(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Int_tGetLearnEntries(); virtual const char*TObject::GetName() const; virtual Long64_tGetNextEvent(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidTEventIter::InvalidatePacket(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEventIterObj.html:2743,Inherit,InheritsFrom,2743,root/html532/TEventIterObj.html,https://root.cern,https://root.cern/root/html532/TEventIterObj.html,3,['Inherit'],['InheritsFrom']
Modifiability,"t_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTMatrixTSymLazy<float>::GetRowLwb() const; Int_tTMatrixTSymLazy<float>::GetRowUpb() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Pa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THilbertMatrixTSym_float_.html:2871,Inherit,InheritsFrom,2871,root/html532/THilbertMatrixTSym_float_.html,https://root.cern,https://root.cern/root/html532/THilbertMatrixTSym_float_.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTMatrixTSymLazy<float>::GetRowLwb() const; Int_tTMatrixTSymLazy<float>::GetRowUpb() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); THilbertMatrixTSym<float>&operator=(const THilbertM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THilbertMatrixTSym_float_.html:2581,Inherit,InheritsFrom,2581,root/html602/THilbertMatrixTSym_float_.html,https://root.cern,https://root.cern/root/html602/THilbertMatrixTSym_float_.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetCount() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetValue() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Pain",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLDAPAttribute.html:2604,Inherit,InheritsFrom,2604,root/html532/TLDAPAttribute.html,https://root.cern,https://root.cern/root/html532/TLDAPAttribute.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetIndex() const; TList*GetListOfTopProxies(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsDuplicate(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; Bool_tIsEquivalent(const ROOT::TFriendProxyDescriptor* other); virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__TFriendProxyDescriptor.html:2693,Inherit,InheritsFrom,2693,root/html532/ROOT__TFriendProxyDescriptor.html,https://root.cern,https://root.cern/root/html532/ROOT__TFriendProxyDescriptor.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetIndex() const; TList*GetListOfTopProxies(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsDuplicate(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; Bool_tIsEquivalent(const ROOT::TFriendProxyDescriptor* other); virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TFriendProxyDescriptor.html:2700,Inherit,InheritsFrom,2700,root/html602/ROOT__TFriendProxyDescriptor.html,https://root.cern,https://root.cern/root/html602/ROOT__TFriendProxyDescriptor.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual RooStats::MCMCInterval*GetInterval() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; RooStats::IntervalCalculatorRooStats::IntervalCalculator::IntervalCalculator(); RooStats::IntervalCalculatorRooStats::IntervalCalculator::IntervalCalculator(const RooStats::IntervalCalculator&); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; RooStats::MCMCCalculatorMCMCCalculator(); RooStats::MCMCCalculatorMCMCCalculator(const RooStats::MCMCCalculator&); RooStats::MCMCCalculatorMCMCCalculator(RooAbsData& data, const RooStats::ModelConfig& model); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::oper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__MCMCCalculator.html:3033,Inherit,InheritsFrom,3033,root/html602/RooStats__MCMCCalculator.html,https://root.cern,https://root.cern/root/html602/RooStats__MCMCCalculator.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual RooStats::MCMCInterval*GetInterval() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; RooStats::MCMCCalculatorMCMCCalculator(); RooStats::MCMCCalculatorMCMCCalculator(const RooStats::MCMCCalculator&); RooStats::MCMCCalculatorMCMCCalculator(RooAbsData& data, const RooStats::ModelConfig& model); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__MCMCCalculator.html:3033,Inherit,InheritsFrom,3033,root/html532/RooStats__MCMCCalculator.html,https://root.cern,https://root.cern/root/html532/RooStats__MCMCCalculator.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t f) const; Int_tTObject::TestBits(UInt_t f) const; THtml::TFileSysDirTFileSysDir(const char* name, THtml::TFileSysDir* parent); THtml::TFileSysEntryTHtml::TFileSysEntry::TFileSysEntry(const THtml::TFileSysEntry&); THtml::TFileSysEntryTHtml::TFileSysEntry::TFileSysEntry(const char* name, THtml::TFileSysDir* parent); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TListfDirs; TListfFiles; Int_tTHtml::TFileSysEntry::fLevellevel of directory; TStringTHtml::TFileSysEntry::fNamename of the element; THtml::TFileSysDir*THtml::TFileSysEntry::fParentparent directory. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFileSysDir(const char* name, THtml::TFileSysDir* parent); { fFiles.SetOwner(); fDirs.SetOwner(); }. const TList* GetFiles() const; { return &fFiles; }. const TList* GetSubDirs() const; { return &fDirs; }. void Recurse(THtml::TFileSysDB* db, const char* path). TString fInputPath; // directories to look for classes; prepended to Decl/ ImplFileName(). » Author: Nenad Buncic 18/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/html:$Id$ » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THtml__TFileSysDir.html:5985,Inherit,Inheritance,5985,root/html534/THtml__TFileSysDir.html,https://root.cern,https://root.cern/root/html534/THtml__TFileSysDir.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. stringfFileNamePrefix; intfHighBin; intfLowBin; doublefLumiError; doublefNomLumi; TFile*fOut_f; stringstreamfResultsPrefixStr; stringfRowTitle; vector<std::string>fSystToFix; FILE*pFile. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; HistoToWorkspaceFactory(). ~HistoToWorkspaceFactory(). HistoToWorkspaceFactory(string , string , vector<std::string> , double = 200, double = 20, int = 0, int = 6, TFile* = 0). string FilePrefixStr(string ). void ProcessExpectedHisto(TH1* hist, RooWorkspace* proto, string prefix, string productPrefix, string systTerm, double low, double high, int lowBin, int highBin). void AddMultiVarGaussConstraint(RooWorkspace* proto, string prefix, int lowBin, int highBin, vector<std::string>& likelihoodTermNames); these are the nominal predictions: eg. the mean of some space of variations; later fill these in a loop over histogram bins. void LinInterpWithConstraint(RooWorkspace* proto, TH1* nominal, vector<TH1*> lowHist, vector<TH1*> highHist, vector<std::string> sourceName, string prefix, string productPrefix, string systTerm, int lowBin, int highBin, vector<std::string>& likelihoodTermNames); these are the nominal predictions: eg. the mean of som",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HistFactory__HistoToWorkspaceFactory.html:7867,Inherit,Inheritance,7867,root/html534/RooStats__HistFactory__HistoToWorkspaceFactory.html,https://root.cern,https://root.cern/root/html534/RooStats__HistFactory__HistoToWorkspaceFactory.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. TGPicturePool(const TGPicturePool&); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TGPicturePool&operator=(const TGPicturePool&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. const TGClient*fClientclient for which we keep icon pool; TStringfPathicon search path; THashTable*fPicListhash table containing the icons. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGPicturePool(const TGPicturePool& ); copy constructor. TGPicturePool& operator=(const TGPicturePool& ); assignment operator. const TGPicture * GetPicture(const char* name); Get a picture from the picture pool. Picture must be freed using; TGPicturePool::FreePicture(). If picture is not found 0 is returned. const TGPicture * GetPicture(const char* name, UInt_t new_width, UInt_t new_height); Get picture with specified size from pool (picture will be scaled if; necessary). Picture must be freed using TGPicturePool::FreePicture(). If; picture is not found 0 is returned. const TGPicture * GetPicture(const char* name, Pixmap_t pxmap, Pixmap_t mask = 0); Get picture with specified pixmap and mask from pool.; Picture must be freed using TGPicturePool::FreePicture().; If picture is not found 0 is returned. const TGPicture * GetPicture(const char* name, char** xpm); Create picture from XPM data.; Picture must be freed using TGPicturePool::FreeP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGPicturePool.html:5860,Inherit,Inheritance,5860,root/html532/TGPicturePool.html,https://root.cern,https://root.cern/root/html532/TGPicturePool.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWrite",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRandom.html:22752,inherit,inherited,22752,doc/master/classTRandom.html,https://root.cern,https://root.cern/doc/master/classTRandom.html,2,['inherit'],['inherited']
Modifiability,"t_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); TMVA::PDFPDF(const TString& name, Bool_t norm = kTRUE); TMVA::PDFPDF(const TString& name, const TString& options, const TString& suffix = """", TMVA::PDF* defaultPDF = 0, Bool_t norm = kTRUE); TMVA::PDFPDF(const TString& name, const TH1* theHist, TMVA::PDF::EInterpolateMethod method = kSpline2, Int_t minnsmooth = 0, Int_t maxnsmooth = 0, Bool_t checkHist = kFALSE, Bool_t norm = kTRUE); TMVA::PDFPDF(const TString& name, const TH1* theHist, TMVA::KDEKernel::EKernelType ktype, TMVA::KDEKernel::EKernelIter kiter, TMVA::KDEKernel::EKernelBorder kborder, Float_t FineFactor, Bool_t norm = kTRUE); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidTMVA::Configurable::PrintOptions() const; voidProcessOptions(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidReadXML(void* pdfnode); virtual voidTObject::RecursiveRemove(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__PDF.html:4335,Config,Configurable,4335,root/html532/TMVA__PDF.html,https://root.cern,https://root.cern/root/html532/TMVA__PDF.html,2,['Config'],['Configurable']
Modifiability,"t_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidTMVA::Configurable::PrintOptions() const; virtual Int_tTObject::Read(const char* name); TMVA::ReaderReader(const TString& theOption = """", Bool_t verbose = 0); TMVA::ReaderReader(vector<std::string>& varNames, const TString& theOption = """", Bool_t verbose = 0); TMVA::ReaderReader(const string& varNames, const TString& theOption, Bool_t verbose = 0); TMVA::ReaderReader(vector<TString>& varNames, const TString& theOption = """", Bool_t verbose = 0); TMVA::ReaderReader(const TString& varNames, const TString& theOption, Bool_t verbose = 0); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__Reader.html:7150,Config,Configurable,7150,root/html532/TMVA__Reader.html,https://root.cern,https://root.cern/root/html532/TMVA__Reader.html,2,['Config'],['Configurable']
Modifiability,"t_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidTMVA::Configurable::PrintOptions() const; virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); Double_tRun(); virtual Double_tRun(vector<Double_t>& pars); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__FitterBase.html:4113,Config,Configurable,4113,root/html532/TMVA__FitterBase.html,https://root.cern,https://root.cern/root/html532/TMVA__FitterBase.html,2,['Config'],['Configurable']
Modifiability,"t_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidTMVA::Configurable::PrintOptions() const; virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual Double_tRun(vector<Double_t>& pars); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__SimulatedAnnealingFitter.html:4070,Config,Configurable,4070,root/html532/TMVA__SimulatedAnnealingFitter.html,https://root.cern,https://root.cern/root/html532/TMVA__SimulatedAnnealingFitter.html,2,['Config'],['Configurable']
Modifiability,"t_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidTMVA::Configurable::PrintOptions() const; virtual voidTMVA::IFitterTarget::ProgressNotifier(TString, TString); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual Double_tRun(vector<Double_t>& pars); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::Configurable:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MinuitFitter.html:4144,Config,Configurable,4144,root/html532/TMVA__MinuitFitter.html,https://root.cern,https://root.cern/root/html532/TMVA__MinuitFitter.html,2,['Config'],['Configurable']
Modifiability,"t_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); virtual Bool_tRooAbsCachedReal::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); voidsetCdfBoundaries(Bool_t flag); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsCachedReal::setInterpolationOrder(Int_t order); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; virtual voidShowMembers(TMemberInspector& insp, char* parent); RooMoment*RooAbsReal::sigma(RooRealVar& obs); RooMoment*RooAbsReal::sigma(RooRealVar& ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCachedReal.html:22457,config,config,22457,root/html526/RooCachedReal.html,https://root.cern,https://root.cern/root/html526/RooCachedReal.html,1,['config'],['config']
Modifiability,"t_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetIterator(const TGeoIterator* iter); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TGeoIteratorPlugin&operator=(const TGeoIteratorPlugin&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. const TGeoIterator*fIteratorCaller iterator. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoNode& operator=(const TGeoIteratorPlugin& ). virtual ~TGeoIteratorPlugin(); {}. void ProcessNode(). void SetIterator(const TGeoIterator* iter); {fIterator = iter;}. » Author: Andrei Gheata 24/10/01 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/geom:$Id$ » Last generated: 2015-03-14 16:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoIteratorPlugin.html:7120,Inherit,Inheritance,7120,root/html534/TGeoIteratorPlugin.html,https://root.cern,https://root.cern/root/html534/TGeoIteratorPlugin.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_t i, Int_t j, Int_t k, Int_t &ncheck, TGeoStateInfo &td);  get the list of candidates in voxel (i,j,k) - no check ;  ; Bool_t Intersect (Int_t n1, UChar_t *array1, Int_t &nf, Int_t *result);  return the list of nodes corresponding to one array of bits ;  ; Bool_t Intersect (Int_t n1, UChar_t *array1, Int_t n2, UChar_t *array2, Int_t &nf, Int_t *result);  return the list of nodes corresponding to the intersection of two arrays of bits ;  ; Bool_t Intersect (Int_t n1, UChar_t *array1, Int_t n2, UChar_t *array2, Int_t n3, UChar_t *array3, Int_t &nf, Int_t *result);  return the list of nodes corresponding to the intersection of three arrays of bits ;  ; Bool_t IntersectAndStore (Int_t n1, UChar_t *array1, Int_t n2, UChar_t *array2, Int_t n3, UChar_t *array3, TGeoStateInfo &td);  return the list of nodes corresponding to the intersection of three arrays of bits ;  ; Bool_t IntersectAndStore (Int_t n1, UChar_t *array1, Int_t n2, UChar_t *array2, TGeoStateInfo &td);  return the list of nodes corresponding to the intersection of two arrays of bits ;  ; Bool_t IntersectAndStore (Int_t n1, UChar_t *array1, TGeoStateInfo &td);  return the list of nodes corresponding to one array of bits ;  ; void SortAll (Option_t *option="""");  order bounding boxes along x, y, z ;  ; Bool_t Union (Int_t n1, UChar_t *array1, Int_t n2, UChar_t *array2, Int_t n3, UChar_t *array3, TGeoStateInfo &td);  make union of older bits with new array printf(""Union - three slices\n""); printf(""n1=%i n2=%i n3=%i\n"", n1,n2,n3); ;  ; Bool_t Union (Int_t n1, UChar_t *array1, Int_t n2, UChar_t *array2, TGeoStateInfo &td);  make union of older bits with new array printf(""Union - two slices\n""); ;  ; Bool_t Union (Int_t n1, UChar_t *array1, TGeoStateInfo &td);  make union of older bits with new array printf(""Union - one slice\n""); ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVoxelFinder.html:14804,inherit,inherited,14804,doc/master/classTGeoVoxelFinder.html,https://root.cern,https://root.cern/doc/master/classTGeoVoxelFinder.html,1,['inherit'],['inherited']
Modifiability,"t_t icol=0; icol<nvar; icol++) logger << setw(vLengths[icol]+1) << V[icol];; 966 logger << Endl;; 967 ; 968 // the numbers; 969 for (UInt_t irow=0; irow<nvar; irow++) {; 970 logger << setw(maxL) << V[irow] << "":"";; 971 for (UInt_t icol=0; icol<nvar; icol++) {; 972 logger << setw(vLengths[icol]+1) << TString::Format( ""%+1.3f"", M(irow,icol) );; 973 }; 974 logger << Endl;; 975 }; 976 ; 977 // bar line; 978 for (UInt_t i=0; i<clen; i++) logger << ""-"";; 979 logger << Endl;; 980}; 981 ; 982////////////////////////////////////////////////////////////////////////////////; 983/// formatted output of matrix (with labels); 984 ; 985void TMVA::Tools::FormattedOutput( const TMatrixD& M,; 986 const std::vector<TString>& vert, const std::vector<TString>& horiz,; 987 MsgLogger& logger ); 988{; 989 // sanity check: matrix must be quadratic; 990 UInt_t nvvar = vert.size();; 991 UInt_t nhvar = horiz.size();; 992 ; 993 // get length of each variable, and maximum length; 994 UInt_t minL = 7;; 995 UInt_t maxL = minL;; 996 std::vector<UInt_t> vLengths;; 997 for (UInt_t ivar=0; ivar<nvvar; ivar++) {; 998 vLengths.push_back(TMath::Max( (UInt_t)vert[ivar].Length(), minL ));; 999 maxL = TMath::Max( vLengths.back(), maxL );; 1000 }; 1001 ; 1002 // count column length; 1003 UInt_t minLh = 7;; 1004 UInt_t maxLh = minLh;; 1005 std::vector<UInt_t> hLengths;; 1006 for (UInt_t ivar=0; ivar<nhvar; ivar++) {; 1007 hLengths.push_back(TMath::Max( (UInt_t)horiz[ivar].Length(), minL ));; 1008 maxLh = TMath::Max( hLengths.back(), maxLh );; 1009 }; 1010 ; 1011 UInt_t clen = maxLh+1;; 1012 for (UInt_t icol=0; icol<nhvar; icol++) clen += hLengths[icol]+1;; 1013 ; 1014 // bar line; 1015 for (UInt_t i=0; i<clen; i++) logger << ""-"";; 1016 logger << Endl;; 1017 ; 1018 // title bar; 1019 logger << setw(maxL+1) << "" "";; 1020 for (UInt_t icol=0; icol<nhvar; icol++) logger << setw(hLengths[icol]+1) << horiz[icol];; 1021 logger << Endl;; 1022 ; 1023 // the numbers; 1024 for (UInt_t irow=0; irow<nvvar; irow++) {; 1025 l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Tools_8cxx_source.html:34298,variab,variable,34298,doc/master/Tools_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Tools_8cxx_source.html,1,['variab'],['variable']
Modifiability,"t_t ipar) const; query if parameter ipar is fixed. void PrintResults(Int_t level, Double_t amin) const; print the fit result; use PrintResults function in case of Minuit for old -style printing. void ReleaseParameter(Int_t ipar); release a fit parameter. void SetFitMethod(const char* name); set fit method (i.e. chi2 or likelihood); according to the method the appropriate FCN function will be created. Int_t SetParameter(Int_t ipar, const char* parname, Double_t value, Double_t verr, Double_t vlow, Double_t vhigh); set (add) a new fit parameter passing initial value, step size (verr) and parametr limits; if vlow > vhigh the parameter is unbounded; if the stepsize (verr) == 0 the parameter is treated as fixed. void ReCreateMinimizer(); Recreate a minimizer instance using the function and data; set objective function in minimizers function to re-create FCN from stored data object and fit options. void SetFCN(void fcn); override setFCN to use the Adapter to Minuit2 FCN interface; To set the address of the minimization function*-; *-* ===============================================; *. void SetFCN(void* ); To set the address of the minimization function*-; *-* ===============================================; this function is called by CINT instead of the function above; *. void SetObjFunction(ROOT::Math::IMultiGenFunction* f); set the objective function for fitting; Needed if fitting directly using TBackCompFitter class; The class clones a copy of the function and manages it. void DoSetDimension(); Private method to set dimension in objective function. ROOT::Math::IMultiGenFunction * GetObjFunction() const; return a pointer to the objective function (FCN); If fitting directly using TBackCompFitter the pointer is managed by the class,; which has been set previously when calling SetObjFunction or SetFCN; Otherwise if the class is used in the backward compatible mode (e.g. after having fitted a TH1); the return pointer will be valid after fitting and as long a new fit will no",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBackCompFitter.html:16613,Adapt,Adapter,16613,root/html532/TBackCompFitter.html,https://root.cern,https://root.cern/root/html532/TBackCompFitter.html,2,['Adapt'],['Adapter']
Modifiability,"t_t ipoint, Double_t& re, Double_t& im, Bool_t fromInput = kFALSE) const; virtual voidGetPointComplex(const Int_t* ipoint, Double_t& re, Double_t& im, Bool_t fromInput = kFALSE) const; virtual Double_tGetPointReal(Int_t, Bool_t) const; virtual Double_tGetPointReal(const Int_t*, Bool_t) const; virtual voidGetPoints(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* re, Double_t* im, Bool_t fromInput = kFALSE) const; virtual Double_t*GetPointsReal(Bool_t) const; virtual Int_tGetSign() const; virtual Int_tGetSize() const; virtual const char*TObject::GetTitle() const; virtual Option_t*GetTransformFlag() const; virtual Option_t*GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(Option_t* flags, Int_t sign, const Int_t*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInplace() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFFTComplex.html:4579,Inherit,InheritsFrom,4579,root/html532/TFFTComplex.html,https://root.cern,https://root.cern/root/html532/TFFTComplex.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t ipoint, Double_t& re, Double_t& im, Bool_t fromInput = kFALSE) const; virtual voidGetPointComplex(const Int_t* ipoint, Double_t& re, Double_t& im, Bool_t fromInput = kFALSE) const; virtual Double_tGetPointReal(Int_t, Bool_t) const; virtual Double_tGetPointReal(const Int_t*, Bool_t) const; virtual voidGetPoints(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* re, Double_t* im, Bool_t fromInput = kFALSE) const; virtual Double_t*GetPointsReal(Bool_t) const; virtual Int_tGetSign() const; virtual Int_tGetSize() const; virtual const char*TObject::GetTitle() const; virtual Option_t*GetTransformFlag() const; virtual Option_t*GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(Option_t* flags, Int_t sign, const Int_t*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInplace() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFFTComplex.html:4433,Inherit,InheritsFrom,4433,root/html602/TFFTComplex.html,https://root.cern,https://root.cern/root/html602/TFFTComplex.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t len, Double_t start); virtual voidFileUnzipEvent(TFile* file, Long64_t pos, Double_t start, Int_t complen, Int_t objlen); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Long64_tGetBytesRead() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Long64_tGetNumEvents() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TVirtualPerfStats&opera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVirtualPerfStats.html:3070,Inherit,InheritsFrom,3070,root/html532/TVirtualPerfStats.html,https://root.cern,https://root.cern/root/html532/TVirtualPerfStats.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t_t maxSize = 10, Bool_t clearCacheOnServerRedirect = kTRUE); Constructor of object cache manager for given owner. If clearCacheOnServerRedirect is true; all cache elements will be cleared when a server redirect is intercepted by the cache manager.; This is the default strategy and should only be overridden when you really understand; what you're doing as properly implementing server redirect in cache elements can get very; complicated, especially if there are (cyclical) reference back to the owning object. RooObjCacheManager(const RooObjCacheManager& other, RooAbsArg* owner = 0); Copy constructor. ~RooObjCacheManager(); Destructor. Bool_t redirectServersHook(const RooAbsCollection& , Bool_t , Bool_t , Bool_t ); Intercept server redirect calls. If clearOnRedirect was set, sterilize; the cache (i.e. keep the structure but delete all contents). If not; forward serverRedirect to cache elements. void operModeHook(); Intercept changes to cache operation mode and forward to cache elements. void optimizeCacheMode(const RooArgSet& , RooArgSet& , RooLinkedList& ); Intercept calls to perform automatic optimization of cache mode operation.; Forward calls to existing cache elements and save configuration of; cache mode optimization so that it can be applied on new cache elements; upon insertion. void insertObjectHook(RooAbsCacheElement& ); Set owner link on all object inserted into cache.; Also if cache mode optimization was requested, apply; it now to cache element being inserted. void printCompactTreeHook(ostream& , const char* ); Add details on cache contents when printing in tree mode. void findConstantNodes(const RooArgSet& , RooArgSet& , RooLinkedList& ); If clearOnRedirect is false, forward constant term optimization calls to; cache elements. » Last changed: Thu Sep 23 20:00:26 2010 » Last generated: 2010-09-23 20:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooObjCacheManager.html:4790,config,configuration,4790,root/html528/RooObjCacheManager.html,https://root.cern,https://root.cern/root/html528/RooObjCacheManager.html,1,['config'],['configuration']
Modifiability,"t_t n) const; Bool_tGetValueIsColor() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveDigitSet.html:14336,Inherit,InheritsFrom,14336,root/html532/TEveDigitSet.html,https://root.cern,https://root.cern/root/html532/TEveDigitSet.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t n) const; Bool_tGetValueIsColor() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; Int_tTEveElement::Nu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveDigitSet.html:14337,Inherit,InheritsFrom,14337,root/html602/TEveDigitSet.html,https://root.cern,https://root.cern/root/html602/TEveDigitSet.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t nrEqual = 1;; const Int_t nrInEqual = 0;; ; // flip the sign of the objective function because we want to maximize; TVectorD c = -1.*r;; TMatrixDSym Q = riskFactor*Covar;; ; // equality equation; TMatrixD A(nrEqual,nrVar); A = 1;; TVectorD b(nrEqual); b = 1;; ; // inequality equation; //; // - although not applicable in the current situation since nrInEqual = 0, one; // has to specify not only clo and cup but also an index vector iclo and icup,; // whose values are either 0 or 1 . If iclo[j] = 1, the lower boundary condition; // is active on x[j], etc. ...; ; TMatrixD C (nrInEqual,nrVar);; TVectorD clo (nrInEqual);; TVectorD cup (nrInEqual);; TVectorD iclo(nrInEqual);; TVectorD icup(nrInEqual);; ; // simple square boundary condition : 0 <= x_i, so only xlo is relevant .; // Like for clo and cup above, we have to define an index vector ixlo and ixup .; // Since each variable has the lower boundary, we can set the whole vector; // ixlo = 1; ; TVectorD xlo (nrVar); xlo = 0;; TVectorD xup (nrVar); xup = 0;; TVectorD ixlo(nrVar); ixlo = 1;; TVectorD ixup(nrVar); ixup = 0;; ; // setup the quadratic programming problem . Since a small number of variables are; // involved and ""Q"" has everywhere entries, we chose the dense version ""TQpProbDens"" .; // In case of a sparse formulation, simply replace all ""Dens"" by ""Sparse"" below and; // use TMatrixDSparse instead of TMatrixDSym and TMatrixD; ; TQpProbDens *qp = new TQpProbDens(nrVar,nrEqual,nrInEqual);; ; // stuff all the matrices/vectors defined above in the proper places; ; TQpDataDens *prob = (TQpDataDens *)qp->MakeData(c,Q,xlo,ixlo,xup,ixup,A,b,C,clo,iclo,cup,icup);; ; // setup the nrStock variables, vars->fX will contain the final solution; ; TQpVar *vars = qp->MakeVariables(prob);; TQpResidual *resid = qp->MakeResiduals(prob);; ; // Now we have to choose the method of solving, either TGondzioSolver or TMehrotraSolver; // The Gondzio method is more sophisticated and therefore numerically more involved; // If one want th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/portfolio_8C.html:9057,variab,variable,9057,doc/master/portfolio_8C.html,https://root.cern,https://root.cern/doc/master/portfolio_8C.html,1,['variab'],['variable']
Modifiability,"t_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fDx2;  ;  Protected Attributes inherited from TBRIK; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TTRD1.h>. Inheritance diagram for TTRD1:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTRD1() [1/2]. TTRD1::TTRD1 ; (; ). TRD1 shape default constructor. ; Definition at line 37 of file TTRD1.cxx. ◆ TTRD1() [2/2]. TTRD1::TTRD1 ; (; const char * ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTRD1.html:17155,inherit,inherited,17155,doc/master/classTTRD1.html,https://root.cern,https://root.cern/doc/master/classTTRD1.html,1,['inherit'],['inherited']
Modifiability,"t_t nxgroup=2, Int_t nygroup=2, const char *newname="""") override;  Rebin this histogram grouping nxgroup/nygroup bins along the xaxis/yaxis together. ;  ; TProfile2D * RebinX (Int_t ngroup=2, const char *newname="""") override;  Rebin only the X axis. ;  ; TProfile2D * RebinY (Int_t ngroup=2, const char *newname="""") override;  Rebin only the Y axis. ;  ; void Reset (Option_t *option="""") override;  Reset contents of a Profile2D histogram. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive as a C++ statement(s) on output stream out. ;  ; void Scale (Double_t c1=1, Option_t *option="""") override;  Multiply this profile2D by a constant c1. ;  ; virtual void SetBinEntries (Int_t bin, Double_t w);  Set the number of entries in bin. ;  ; void SetBins (Int_t nbinsx, Double_t xmin, Double_t xmax, Int_t nbinsy, Double_t ymin, Double_t ymax) override;  Redefine x and y axis parameters. ;  ; void SetBins (Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins) override;  Redefine x and y axis parameters for variable bin sizes. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow. ;  ; void SetBuffer (Int_t buffersize, Option_t *option="""") override;  Set the buffer size in units of 8 bytes (double). ;  ; virtual void SetErrorOption (Option_t *option="""");  Set option to compute profile2D errors. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TProfile2D. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Sumw2 (Bool_t flag=kTRUE) override;  Create/Delete structure to store sum of squares of weights per bin. ;  ;  Public Member Functions inherited from TH2D;  TH2D ();  Constructor. ;  ;  TH2D (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins);  Constructor (see TH2::TH2 for explanation of parameters) ;  ;  TH2D (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D.html:10527,variab,variable,10527,doc/master/classTProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProfile2D.html,1,['variab'],['variable']
Modifiability,"t_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TVectorDfCloIndex; TVectorDfCupIndex; TVectorDfDdtemporary storage vectors; TVectorDfDq; TQpProbBase*fFactory; Int_tfMclo; Int_tfMcup; Int_tfMy; Int_tfMz; TVectorDfNomegaInvstores a critical diagonal matrix as a vector; Int_tfNxdimensions of the vectors in the general QP formulation; Int_tfNxlo; Int_tfNxupdimensions of the upper and lower bound vectors; TVectorDfRhsright-hand side of the system; TVectorDfXloIndex; TVectorDfXupIndexindex matrices for the upper and lower bounds on x and Cx. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Factor(TQpDataBase* prob, TQpVar* vars); Sets up the matrix for the main linear system in ""augmented system"" form. The; actual factorization is performed by a routine specific to either the sparse; or dense case. void ComputeDiagonals(TVectorD& dd, TVectorD& omega, TVectorD& t, TVectorD& lambda, TVectorD& u, TVectorD& pi, TVectorD& v, TVectorD& gamma, TVectorD& w, TVectorD& phi); Computes the diagonal matrices in the augmented system from the current set of variables. void Solve(TQpDataBase* prob, TQpVar* vars, TQpResidual* resids, TQpVar* step); Solves the system for a given set of residuals. Assembles the right-hand side appropriate; to the matrix factored in factor, solves the system using the factorization produced there,; partitions the solution vector into step components, then recovers the step components; eliminated during the block elimination that produced the augmented system form . void SolveXYZS(TVectorD& stepx, TVect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TQpLinSolverBase.html:6522,Inherit,Inheritance,6522,root/html532/TQpLinSolverBase.html,https://root.cern,https://root.cern/root/html532/TQpLinSolverBase.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TCollection*fMap. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TOutputListSelectorDataMap(TSelector* sel = 0); Create a mapper between output list items and TSelector data members. const char* GetName() const; Return static name for TOutputListSelectorDataMap objects. Bool_t Init(TSelector* sel); Initialize the data member <-> output list mapping from a selector. Bool_t SetDataMembers(TSelector* sel) const; Given an output list, set the data members of a TSelector. Bool_t Merge(TObject* obj); Merge another TOutputListSelectorDataMap object, check; consistency. TOutputListSelectorDataMap* FindInList(TCollection* coll); Find a TOutputListSelectorDataMap in a collection. TOutputListSelectorDataMap(TSelector* sel = 0). virtual ~TOutputListSelectorDataMap(); {}. TCollection* GetMap() const; { return fMap; }. » Author: Axel Naumann 2010-06-09 » Copyright (C) 1995-2010, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-02 16:25; This page has been automatic",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TOutputListSelectorDataMap.html:6039,Inherit,Inheritance,6039,root/html604/TOutputListSelectorDataMap.html,https://root.cern,https://root.cern/root/html604/TOutputListSelectorDataMap.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TCollection*fMap. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TOutputListSelectorDataMap(TSelector* sel = 0); Create a mapper between output list items and TSelector data members. const char* GetName() const; Return static name for TOutputListSelectorDataMap objects. Bool_t Init(TSelector* sel); Initialize the data member <-> output list mapping from a selector. Bool_t SetDataMembers(TSelector* sel) const; Given an output list, set the data members of a TSelector. Bool_t Merge(TObject* obj); Merge another TOutputListSelectorDataMap object, check; consistency. TOutputListSelectorDataMap* FindInList(TCollection* coll); Find a TOutputListSelectorDataMap in a collection. TOutputListSelectorDataMap(TSelector* sel = 0). virtual ~TOutputListSelectorDataMap(); {}. TCollection* GetMap() const; { return fMap; }. » Author: Axel Naumann 2010-06-09 » Copyright (C) 1995-2010, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-30 15:23; This page has been automatic",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TOutputListSelectorDataMap.html:6039,Inherit,Inheritance,6039,root/html602/TOutputListSelectorDataMap.html,https://root.cern,https://root.cern/root/html602/TOutputListSelectorDataMap.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TGFrameElementPack&operator=(const TGFrameElementPack&); TGFrameElementPack(const TGFrameElementPack&). Data Members; public:. TGFrame*TGFrameElement::fFrameframe used in layout; TGLayoutHints*TGFrameElement::fLayoutlayout hints used in layout; TGFrameElementPack*fSplitFE! cached varaible for optimisation; Int_tTGFrameElement::fStateEFrameState defined in TGFrame.h; Float_tfWeightrelative weight; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGFrameElementPack(const TGFrameElementPack& ). TGFrameElementPack& operator=(const TGFrameElementPack& ). TGFrameElementPack(TGFrame* frame, TGLayoutHints* lh = 0, Float_t weight = 1); { }. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-06-30 14:51; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGFrameElementPack.html:6319,Inherit,Inheritance,6319,root/html602/TGFrameElementPack.html,https://root.cern,https://root.cern/root/html602/TGFrameElementPack.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TGFrameElementPack&operator=(const TGFrameElementPack&); TGFrameElementPack(const TGFrameElementPack&). Data Members; public:. TGFrame*TGFrameElement::fFrameframe used in layout; TGLayoutHints*TGFrameElement::fLayoutlayout hints used in layout; TGFrameElementPack*fSplitFE! cached varaible for optimisation; Int_tTGFrameElement::fStateEFrameState defined in TGFrame.h; Float_tfWeightrelative weight; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGFrameElementPack(const TGFrameElementPack& ). TGFrameElementPack& operator=(const TGFrameElementPack& ). TGFrameElementPack(TGFrame* frame, TGLayoutHints* lh = 0, Float_t weight = 1); { }. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-09-08 17:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGFrameElementPack.html:6319,Inherit,Inheritance,6319,root/html604/TGFrameElementPack.html,https://root.cern,https://root.cern/root/html604/TGFrameElementPack.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); static Bool_tParseUrl(const char* url, TString& archive, TString& member, TString& type). private:. TArchiveFile&operator=(const TArchiveFile&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringfArchiveNameArchive file name; TArchiveMember*fCurMemberCurrent archive member; TFile*fFileFile stream used to access the archive; Int_tfMemberIndexIndex of sub-file in archive; TStringfMemberNameSub-file name; TObjArray*fMembersMembers in this archive. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TArchiveFile(); Dtor. Long64_t GetMemberFilePosition() const; Return position in archive of current member. Int_t GetNumberOfMembers() const; Returns number of members in archive. Int_t SetMember(const char* member); Explicitely make the specified member the current member.; Returns -1 in case of error, 0 otherwise. Int_t SetMember(Int_t idx); Explicitely make the member with the specified index the current member.; Returns -1 in case of error, 0 otherwise. TArchiveFile * Open(const char* url, TFile* file); Return proper archive file handler depending on passed url.; The handler is loaded via the plugin manager and is triggered by; the extension of the archive file. In case no handler is found 0; is returned. The file argument is used to access the archive.; The archive should be specified as url with the member name as the; anchor, e.g. ""root://pcsalo.cern.ch/alice/event_1.zip#tpc.root"",; where tpc.root is the file in the archive to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TArchiveFile.html:6094,Inherit,Inheritance,6094,root/html532/TArchiveFile.html,https://root.cern,https://root.cern/root/html532/TArchiveFile.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fName;  ; EHistType fType;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TProofBenchTypes.h>. Inheritance diagram for TPBHistType:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EHistType. enum TPBHistType::EHistType. EnumeratorkHistNotSpecified ; kHist1D ; kHist2D ; kHist3D ; kHistAll . Definition at line 59 of file TProofBenchTypes.h. Constructor & Destructor Documentation. ◆ TPBHistType(). TPBHistType::TPBHistType ; (; EHistType ; type = kHist1D). inline . Definition at line 70 of file TProofBenchTypes.h. ◆ ~TPBHistType(). TPBHistType::~TPBHistType ; (; ). inlineoverride . Definition at line 71 of file TProofBenchTypes.h. Member Function Documentation. ◆ Class(). static TClass * TPBHistType::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPBHistType.html:9922,inherit,inherited,9922,doc/master/classTPBHistType.html,https://root.cern,https://root.cern/doc/master/classTPBHistType.html,2,['inherit'],['inherited']
Modifiability,"t_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fName;  ; EReadType fType;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TProofBenchTypes.h>. Inheritance diagram for TPBReadType:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EReadType. enum TPBReadType::EReadType. EnumeratorkReadNotSpecified ; kReadFull ; kReadOpt ; kReadNo . Definition at line 35 of file TProofBenchTypes.h. Constructor & Destructor Documentation. ◆ TPBReadType(). TPBReadType::TPBReadType ; (; EReadType ; type = kReadOpt). inline . Definition at line 45 of file TProofBenchTypes.h. ◆ ~TPBReadType(). TPBReadType::~TPBReadType ; (; ). inlineoverride . Definition at line 46 of file TProofBenchTypes.h. Member Function Documentation. ◆ Class(). static TClass * TPBReadType::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPBR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPBReadType.html:9849,inherit,inherited,9849,doc/master/classTPBReadType.html,https://root.cern,https://root.cern/doc/master/classTPBReadType.html,2,['inherit'],['inherited']
Modifiability,"t_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; UShort_t fDetId;  ; Int_t fLabel [3];  ; UShort_t fSubdetId;  ; TEveVector fV;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TEveVSDStructs.h>. Inheritance diagram for TEveCluster:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCluster.html:8979,inherit,inherited,8979,doc/master/classTEveCluster.html,https://root.cern,https://root.cern/doc/master/classTEveCluster.html,1,['inherit'],['inherited']
Modifiability,"t_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualHistPainter; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualHistPainter * HistPainter (TH1 *obj);  Static function returning a pointer to the current histogram painter. ;  ; static void SetPainter (const char *painter);  Static function to set an alternative histogram painter. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGLHistPainter (const TGLHistPainter &);  ; void CreatePainter (const PlotOption_t &parsed, const TString &option);  Create painter. ;  ; TGLHistPainter & operator= (const TGLHistPainter &);  ; void PadToViewport (Bool_t selectionPass=kFALSE);  ; PlotOption_t ParsePaintOption (const TString &option) const;  In principle, we can have several conflicting options: ""lego surf pol sph"", surfbb: surf, fb, bb. ;  . Private Attributes; TGLPlotCamera fCamera;  ; TGLPlotCoordinates fCoord;  ; std::unique_ptr< TVirtualHistPainter > fDefaultPainter;  ; TGLParametricEquation * fEq;  ; TF3 * fF3;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLHistPainter.html:15771,inherit,inherited,15771,doc/master/classTGLHistPainter.html,https://root.cern,https://root.cern/doc/master/classTGLHistPainter.html,1,['inherit'],['inherited']
Modifiability,"t_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetDataDir() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const char*GetMsd() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetOrdinal() const; SysInfo_tGetSysInfo() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSlaveInfo&operator=(const TSlaveInfo&); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSlaveInfo.html:2807,Inherit,InheritsFrom,2807,root/html534/TSlaveInfo.html,https://root.cern,https://root.cern/root/html534/TSlaveInfo.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetDataDir() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const char*GetMsd() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetOrdinal() const; SysInfo_tGetSysInfo() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSlaveInfo&operator=(const TSlaveInfo&); TSlaveInfo&operator=(TSlaveI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSlaveInfo.html:2679,Inherit,InheritsFrom,2679,root/html602/TSlaveInfo.html,https://root.cern,https://root.cern/root/html602/TSlaveInfo.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetDataDir() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const char*GetMsd() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetOrdinal() const; SysInfo_tGetSysInfo() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSlaveInfo&operator=(const TSlav",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSlaveInfo.html:2807,Inherit,InheritsFrom,2807,root/html532/TSlaveInfo.html,https://root.cern,https://root.cern/root/html532/TSlaveInfo.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TStringGenerate(); const char*GetDescription(const char* key); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetValue(const char* key); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGridJDL.html:3436,Inherit,InheritsFrom,3436,root/html532/TGridJDL.html,https://root.cern,https://root.cern/root/html532/TGridJDL.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TStringGenerate(); const char*GetDescription(const char* key); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetValue(const char* key); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGridJDL&operator=(const TGridJDL&); virtual voidTO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGridJDL.html:3442,Inherit,InheritsFrom,3442,root/html602/TGridJDL.html,https://root.cern,https://root.cern/root/html602/TGridJDL.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fDx2;  ; Float_t fDy2;  ;  Protected Attributes inherited from TBRIK; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TTRD2.h>. Inheritance diagram for TTRD2:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTRD2() [1/2]. TTRD2::TTRD2 ; (; ). TRD2 shape default constructor. ; Definition at line 37 of file TTRD2.cxx. ◆ TTRD2() [2/2]. TTRD2::TTRD2 ; (; const char * ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTRD2.html:17302,inherit,inherited,17302,doc/master/classTTRD2.html,https://root.cern,https://root.cern/doc/master/classTTRD2.html,1,['inherit'],['inherited']
Modifiability,"t_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetSecond(Int_t); virtual const char*GetString(Int_t); virtual Bool_tGetTime(Int_t, Int_t&, Int_t&, Int_t&); TDatimeGetTimestamp(Int_t); virtual Bool_tGetTimestamp(Int_t, Int_t&, Int_t&, Int_t&, Int_t&, Int_t&, Int_t&, Int_t&); virtual const char*TObject::GetTitle() const; virtual UInt_tGetUInt(Int_t); virtual ULong64_tGetULong64(Int_t); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tGetVDouble(Int_t, vector<Double_t>&); virtual Bool_tGetVInt(Int_t, vector<Int_t>&); virtual Bool_tGetVLong(Int_t, vector<Long_t>&); virtual Bool_tGetVLong64(Int_t, vector<Long64_t>&); virtual Bool_tGetVUInt(Int_t, vector<UInt_t>&); virtual Bool_tGetVULong64(Int_t, vector<ULong64_t>&); Int_tGetYear(Int_t); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsError() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsNull(Int_t); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNextIteration(); virtual Bool_tNextResultRow(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSQLStatement.html:13837,Inherit,InheritsFrom,13837,root/html602/TSQLStatement.html,https://root.cern,https://root.cern/root/html602/TSQLStatement.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; struct HDURecord*GetRecord(const char* keyword); Int_tGetRecordNumber() const; Int_tGetTabNColumns() const; Int_tGetTabNRows() const; TVectorD*GetTabRealVectorCell(Int_t rownum, Int_t colnum); TVectorD*GetTabRealVectorCell(Int_t rownum, const char* colname); TObjArray*GetTabRealVectorCells(Int_t colnum); TObjArray*GetTabRealVectorCells(const char* colname); TVectorD*GetTabRealVectorColumn(Int_t colnum); TVectorD*GetTabRealVectorColumn(const char* colname); TObjArray*GetTabStringColumn(Int_t colnum); TObjArray*GetTabStringColumn(const char* colname); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TFITSHDU&operator=(const TFITSHDU&); virtual voidTObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFITSHDU.html:3300,Inherit,InheritsFrom,3300,root/html602/TFITSHDU.html,https://root.cern,https://root.cern/root/html602/TFITSHDU.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; UShort_t*GetArray() const; TObject*GetClient() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; UShort_tGetLevel() const; TGeoHMatrix*GetMatrix() const; virtual const char*TObject::GetName() const; TGeoNode*GetNode(UShort_t level) const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; voidGetPath(TString& path) const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitFromNavigator(TGeoNavigator* nav); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoBranchArray.html:3039,Inherit,InheritsFrom,3039,root/html532/TGeoBranchArray.html,https://root.cern,https://root.cern/root/html532/TGeoBranchArray.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; THttpServer*THttpEngine::GetServer() const; virtual const char*TNamed::GetTitle() const; const char*GetTopName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsDebugMode() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TCivetweb.html:3359,Inherit,InheritsFrom,3359,root/html534/TCivetweb.html,https://root.cern,https://root.cern/root/html534/TCivetweb.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; THttpServer*THttpEngine::GetServer() const; virtual const char*TNamed::GetTitle() const; const char*GetTopName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsDebugMode() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TCivetweb&operator=(const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TCivetweb.html:3317,Inherit,InheritsFrom,3317,root/html604/TCivetweb.html,https://root.cern,https://root.cern/root/html604/TCivetweb.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; THttpServer*THttpEngine::GetServer() const; virtual const char*TNamed::GetTitle() const; const char*GetTopName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TCivetweb&operator=(const TCivetweb&); virtual voidTO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TCivetweb.html:3317,Inherit,InheritsFrom,3317,root/html602/TCivetweb.html,https://root.cern,https://root.cern/root/html602/TCivetweb.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; voidField(const Double_t* x, Double_t* B); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TVirtualMagField*GetField() const; virtual const char*TObject::GetIconName() const; static TGeoGlobalMagField*GetInstance(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; static TGeoGlobalMagField*Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsLocked(); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; voidLock(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoGlobalMagField.html:3052,Inherit,InheritsFrom,3052,root/html534/TGeoGlobalMagField.html,https://root.cern,https://root.cern/root/html534/TGeoGlobalMagField.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; voidField(const Double_t* x, Double_t* B); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TVirtualMagField*GetField() const; virtual const char*TObject::GetIconName() const; static TGeoGlobalMagField*GetInstance(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; static TGeoGlobalMagField*Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsLocked(); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; voidLock(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoGlobalMagField.html:3030,Inherit,InheritsFrom,3030,root/html602/TGeoGlobalMagField.html,https://root.cern,https://root.cern/root/html602/TGeoGlobalMagField.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TPCON; Double_t * fCoTab;  Table of sin(fPhi1) .... sin(fPhil+fDphi1) ;  ; Float_t fDphi1;  ; Float_t * fDz;  ; Int_t fNdiv;  ; Int_t fNz;  ; Float_t fPhi1;  Table of cos(fPhi1) .... cos(fPhil+fDphi1) ;  ; Float_t * fRmax;  ; Float_t * fRmin;  ; Double_t * fSiTab;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . #include <TPGON.h>. Inheritance diagram for TPGON:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPGON() [1/2]",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPGON.html:18455,inherit,inherited,18455,doc/master/classTPGON.html,https://root.cern,https://root.cern/doc/master/classTPGON.html,2,['inherit'],['inherited']
Modifiability,"t_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; Bool_t IsAscending ();  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTListOfEnumsWithLock.html:5262,inherit,inherited,5262,doc/master/classTListOfEnumsWithLock.html,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html,2,['inherit'],['inherited']
Modifiability,"t_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; TObject * After (const TObject *obj) const override;  Returns the object after object obj. ;  ; TObject * At (Int_t idx) const override;  Returns the object at position idx. Returns 0 if idx is out of range. ;  ; TObject * Before (const TObject *obj) const override;  Returns the object before object obj. ;  ; TObject * First () const override;  Return the first object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * FirstLink () const;  ; TObject ** GetObjectRef (const TObject *obj) const override;  Return address of pointer to obj. ;  ; Bool_t IsAscending ();  ; TObject * Last () const override;  Return the last object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * LastLink () const;  ; TIterator * MakeIterator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTListOfDataMembers.html:5834,inherit,inherited,5834,doc/master/classTListOfDataMembers.html,https://root.cern,https://root.cern/doc/master/classTListOfDataMembers.html,3,['inherit'],['inherited']
Modifiability,t_t remaining); virtual voidinitGenerator(const RooArgSet& theEvent); voidTObject::MakeZombie(); voidRooAbsGenContext::resampleData(Double_t& ratio). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. TString_convVarNameName of convolution variable; RooRealVar*_cvModelConvolution variable in resModel event; RooRealVar*_cvOutConvolution variable in output event; RooRealVar*_cvPdfConvolution variable in PDFxTruth event; UInt_tRooAbsGenContext::_expectedEventsNumber of expected events from extended p.d.f; RooAbsPdf::ExtendModeRooAbsGenContext::_extendModeExtended mode capabilities of p.d.f.; RooDataSet*RooAbsGenContext::_genData! Data being generated; Bool_tRooAbsGenContext::_isValidIs context in valid state?; RooArgSet*_modelCloneSetOwner of resModel clone; RooAbsGenContext*_modelGenResolution model generator context; RooArgSet*_modelVarsHolder of resModel event; RooArgSet*_modelVarsOwnedOwning version of modelVars ;; static Int_tRooPrintable::_nameLength; Int_tRooAbsGenContext::_nextProtoIndexNext prototype event to load according to LUT; TStringRooAbsGenContext::_normRangeNormalization range of pdf; RooArgSet*_pdfCloneSetOwner of PDF clone; RooAbsGenContext*_pdfGenPhysics model generator context; RooArgSet*_pdfVarsHolder of PDF x truth event; RooArgSet*_pdfVarsOwnedOwning version of pdfVars ;; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*RooAbsGenContext::_prototypePointer to prototype dataset; RooArgSet*RooAbsGen,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooConvGenContext.html:8398,Extend,ExtendModeRooAbsGenContext,8398,root/html532/RooConvGenContext.html,https://root.cern,https://root.cern/root/html532/RooConvGenContext.html,1,['Extend'],['ExtendModeRooAbsGenContext']
Modifiability,"t_t scale); virtual voidSetShift(Double_t[3] main_shift, Double_t[3] extra_shift); virtual voidSize(Int_t width, Int_t height); TTablePadView3D(); TTablePadView3D(TVirtualPad* pad); TTablePadView3D(const TTablePadView3D&); virtual voidUpdateNodeMatrix(TNode* node, Option_t* opt = """"); virtual voidUpdatePosition(Double_t x, Double_t y, Double_t z, TRotMatrix* matrix, Option_t* opt = """"); virtual voidUpdateView(). protected:. voidInit(TVirtualPad* pad). Data Members; protected:. Double_tfAnglFactor[3]Latitude, Longitude, Psi; Double_tfAngles[3]Latitude, Longitude, Psi; Double_tfExtraAngles[3]Latitude, Longitude, Psi; Double_tfExtraTranslate[3]The vector to move object with a mouse; TVirtualPad*fParentPointer to the original TPad object; Float_tfScaleThe scale factor to control the border of the clip box; Double_tfTranslate[3]The vector to move object into the center of the scene; Double_tfViewBoxMax[3]Maximum of clip box; Double_tfViewBoxMin[3]Minimum of clip box. Class Charts. Inheritance Chart:. TTablePadView3D. Function documentation; ~TTablePadView3D(); Delete 3D viewer. void GetRange(Double_t[3] min, Double_t[3] max) const; get view range. void SetRange(Double_t[3] min, Double_t[3] max); set view range. void GetShift(Double_t[3] main_shift, Double_t[3] extra_shift) const; get shift parameters. void SetShift(Double_t[3] main_shift, Double_t[3] extra_shift); set shift parameters. void GetAngles(Double_t[3] main_angles, Double_t[3] extra_angles) const; get view angles. void SetAngles(Double_t[3] main_angles, Double_t[3] extra_angles); set view angles. void GetAnglesFactors(Double_t[3] factors) const; get view angles factors. void SetAnglesFactors(Double_t[3] factors); set view angles factors. void SetScale(Float_t scale); set view scale. void ExecuteEvent(Int_t event, Int_t px, Int_t py); { }. void Paint(Option_t* option = """"); { }. void Size(Int_t width, Int_t height); { }. void PaintBeginModel(Option_t* opt = """"); { }. void PaintEnd(Option_t* opt = """"); { }. void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTablePadView3D.html:2717,Inherit,Inheritance,2717,root/html602/TTablePadView3D.html,https://root.cern,https://root.cern/root/html602/TTablePadView3D.html,1,['Inherit'],['Inheritance']
Modifiability,"t_t sign, const Int_t *) override;  Creates the fftw-plan. ;  ; TClass * IsA () const override;  ; Bool_t IsInplace () const override;  ; void SetPoint (const Int_t *ipoint, Double_t re, Double_t im=0) override;  For multidim. transforms. Sets real and imaginary parts of point # ipoint. ;  ; void SetPoint (Int_t ipoint, Double_t re, Double_t im=0) override;  sets real and imaginary parts of point # ipoint ;  ; void SetPointComplex (Int_t ipoint, TComplex &c) override;  ; void SetPoints (const Double_t *data) override;  set all points. ;  ; void SetPointsComplex (const Double_t *re, const Double_t *im) override;  set all points. the values are copied ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Transform () override;  Computes the transform, specified in Init() function. ;  ;  Public Member Functions inherited from TVirtualFFT;  TVirtualFFT ();  ; virtual ~TVirtualFFT ();  destructor ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFFTComplex.html:4056,inherit,inherited,4056,doc/master/classTFFTComplex.html,https://root.cern,https://root.cern/doc/master/classTFFTComplex.html,1,['inherit'],['inherited']
Modifiability,"t_t size); virtual TTree*TTree::GetTree() const; virtual TVirtualIndex*TTree::GetTreeIndex() const; virtual Int_tTTree::GetTreeNumber() const; virtual Int_tGetType(); virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTTree::GetUpdate() const; virtual TList*TTree::GetUserInfo(); virtual Double_t*TTree::GetV1(); virtual Double_t*TTree::GetV2(); virtual Double_t*TTree::GetV3(); virtual Double_t*TTree::GetV4(); virtual Double_t*TTree::GetVal(Int_t i); TTreeFormula*TTree::GetVar(Int_t i); TTreeFormula*TTree::GetVar1(); TTreeFormula*TTree::GetVar2(); TTreeFormula*TTree::GetVar3(); TTreeFormula*TTree::GetVar4(); virtual Double_t*TTree::GetW(); virtual Double_tTTree::GetWeight() const; Float_t*GetX(); virtual Long64_tTTree::GetZipBytes() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTTree::IncrementTotalBuffers(Int_t nbytes); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitBranches(Long64_t entry); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTTree::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Int_tTTree::LoadBaskets(Long64_t maxmemory = 2000000000); virtual Long64_tTTree::LoadTree(Long64_t entry); virtual Long64_tTTree::LoadTreeFriend(Long64_t entry, TTree* T); virtual voidTNamed::ls(Option_t* option = """") const; virtual Int_tTTree::MakeClass(const char* classname = 0, Option_t* option = """"); virtual Int_tTTree::MakeCode(const char* filename = 0); virtual Int_tTTree::MakeProxy(const char* classname, const char* macrofilename = 0, const char* cutfilename = 0, const char* option = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THbookTree.html:10989,Inherit,InheritsFrom,10989,root/html532/THbookTree.html,https://root.cern,https://root.cern/root/html532/THbookTree.html,4,['Inherit'],['InheritsFrom']
Modifiability,"t_t start, count;; 1911 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 1912 ; 1913 std::vector<T> *const vec = (std::vector<T>*)(((char*)addr)+config->fOffset);; 1914 Int_t nvalues;; 1915 buf.ReadInt(nvalues);; 1916 vec->resize(nvalues);; 1917 ; 1918#ifdef R__VISUAL_CPLUSPLUS; 1919 if (nvalues <= 0) {; 1920 buf.CheckByteCount(start,count,config->fTypeName);; 1921 return 0;; 1922 }; 1923#endif; 1924 T *begin = &(*vec->begin());; 1925 buf.ReadFastArray(begin, nvalues);; 1926 ; 1927 buf.CheckByteCount(start,count,config->fTypeName);; 1928 return 0;; 1929 }; 1930 ; 1931 ; 1932 static INLINE_TEMPLATE_ARGS Int_t ReadCollectionFloat16(TBuffer &buf, void *addr, const TConfiguration *conf); 1933 {; 1934 // Collection of numbers. Memberwise or not, it is all the same.; 1935 ; 1936 TConfigSTL *config = (TConfigSTL*)conf;; 1937 UInt_t start, count;; 1938 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 1939 ; 1940 std::vector<float> *const vec = (std::vector<float>*)(((char*)addr)+config->fOffset);; 1941 Int_t nvalues;; 1942 buf.ReadInt(nvalues);; 1943 vec->resize(nvalues);; 1944 ; 1945#ifdef R__VISUAL_CPLUSPLUS; 1946 if (nvalues <= 0) {; 1947 buf.CheckByteCount(start,count,config->fTypeName);; 1948 return 0;; 1949 }; 1950#endif; 1951 float *begin = &(*vec->begin());; 1952 buf.ReadFastArrayFloat16(begin, nvalues);; 1953 ; 1954 buf.CheckByteCount(start,count,config->fTypeName);; 1955 return 0;; 1956 }; 1957 ; 1958 static INLINE_TEMPLATE_ARGS Int_t ReadCollectionDouble32(TBuffer &buf, void *addr, const TConfiguration *conf); 1959 {; 1960 // Collection of numbers. Memberwise or not, it is all the same.; 1961 ; 1962 TConfigSTL *config = (TConfigSTL*)conf;; 1963 UInt_t start, count;; 1964 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 1965 ; 1966 std::vector<double> *const vec = (std::vector<double>*)(((char*)addr)+config->fOffset);; 1967 Int_t nvalues;; 1968 buf.ReadInt(nvalues);; 1969 vec->resize(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:80844,config,config,80844,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,2,['config'],['config']
Modifiability,"t_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; Int_t fLockId;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLockPath.html:9097,inherit,inherited,9097,doc/master/classTProofLockPath.html,https://root.cern,https://root.cern/doc/master/classTProofLockPath.html,1,['inherit'],['inherited']
Modifiability,"t_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; TList fPackets;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPerfAnalysis_1_1TWrkInfoFile.html:9036,inherit,inherited,9036,doc/master/classTProofPerfAnalysis_1_1TWrkInfoFile.html,https://root.cern,https://root.cern/doc/master/classTProofPerfAnalysis_1_1TWrkInfoFile.html,1,['inherit'],['inherited']
Modifiability,"t_t wid, Int_t& x, Int_t& y, UInt_t& w, UInt_t& h); Returns the global cooordinate of the window ""wd"". const char * DisplayName(const char* = 0); { return ""localhost""; }. ULong_t GetPixel(Color_t cindex); Return pixel value associated to specified ROOT color number.; see: GQTGUI.cxx:QtColor() also. void GetRGB(Int_t index, Float_t& r, Float_t& g, Float_t& b); Get rgb values for color ""index"". const QTextCodec * GetTextDecoder(). Float_t GetTextMagnitude(); {return fTextMagnitude;}. void SetTextMagnitude(Float_t mgn); { fTextMagnitude = mgn;}. void GetTextExtent(UInt_t& w, UInt_t& h, char* mess); Return the size of a character string.; iw : text width; ih : text height; mess : message. Int_t GetFontAscent() const; Returns ascent of the current font (in pixels).; The ascent of a font is the distance from the baseline; to the highest position characters extend to. Int_t GetFontDescent() const; Returns the descent of the current font (in pixels.; The descent is the distance from the base line; to the lowest point characters extend to. Bool_t HasTTFonts() const; {return fUseTTF;}. void MoveWindow(Int_t wid, Int_t x, Int_t y); Move the window wd.; wd : Window identifier.; x : x new window position; y : y new window position. void PutByte(Byte_t b). void QueryPointer(Int_t& ix, Int_t& iy); Query pointer position.; ix : X coordinate of pointer; iy : Y coordinate of pointer. Pixmap_t ReadGIF(Int_t x0, Int_t y0, const char* file, Window_t id = 0); If id is NULL - loads the specified gif file at position [x0,y0] in the; current window. Otherwise creates pixmap from gif file. Int_t RequestLocator(Int_t mode, Int_t ctyp, Int_t& x, Int_t& y); deprecated. Int_t RequestString(Int_t x, Int_t y, char* text); Request string*-*-*-*-*-*-*-; *-* ==============; *-* x,y : position where text is displayed; *-* text : text displayed (input), edited text (output); -; *-* Request string:; *-* text is displayed and can be edited with Emacs-like keybinding; *-* return termination code (0 for ESC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGQt.html:33747,extend,extend,33747,root/html602/TGQt.html,https://root.cern,https://root.cern/root/html602/TGQt.html,4,['extend'],['extend']
Modifiability,"t_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TBrowserImp;  TBrowserImp (const TBrowserImp &)=delete;  ; TBrowserImp & operator= (const TBrowserImp &br)=delete;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootBrowser.html:41895,inherit,inherited,41895,doc/master/classTRootBrowser.html,https://root.cern,https://root.cern/doc/master/classTRootBrowser.html,6,['inherit'],['inherited']
Modifiability,"t_t xleft, Float_t y); virtual voidScanClasses(Int_t iclass); virtual voidShowCod(); virtual voidShowHas(); virtual voidShowMul(); virtual voidShowRef(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringfClassesList of classes to be drawn; TString**fCnames![fNclasses] class names; Int_t*fCparent!parent number of classes (temporary); TClass**fCpointer![fNclasses] pointers to the TClass objects; Int_t*fCstatus[fNclasses] classes status; TString**fCtitles![fNclasses] class titles; char**fDerived![fNclasses] table to indicate if i derives from j; Float_tfLabelDxwidth along x of TPaveLabels in per cent of pad; TList**fLinks![fNclasses] for each class, the list of referenced(ing) classes; TStringTNamed::fNameobject identifier; Int_tfNclassescurrent number of classes; Int_t*fNdata[fNclasses] Number of data members per class; TString**fOptions![fNclasses] List of options per class; Int_t*fParents[fNclasses] parent number of classes (permanent); Int_tfShowCodif 1 show classes referenced by implementation; Int_tfShowHasif 1 show ""has a"" relationship; Int_tfShowMulif 1 show multiple inheritance; Int_tfShowRefif 1 show classes relationship other than inheritance; TStringfSourceDirConcatenated source directories; TStringTNamed::fTitleobject title; Float_tfYoffsetoffset at top of picture in per cent of pad. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TClassTree(); TClassTree default constructor. TClassTree(const char* name, const char* classes = """"); TClassTree constructor. ~TClassTree(); TClassTree default destructor. void Draw(const char* classes = """"); Draw the inheritance tree and relations for the list of classes; see this class header for the syntax and examples. Int_t FindClass(const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TClassTree.html:11426,inherit,inheritance,11426,root/html526/TClassTree.html,https://root.cern,https://root.cern/root/html526/TClassTree.html,14,['inherit'],['inheritance']
Modifiability,"t_t y);  Draw text at position (x, y). ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; Int_t f3DStyle;  3D style (0 - normal, kRaisedFrame - raised, kSunkenFrame - sunken) ;  ; Bool_t fDisabled;  if kTRUE label looks disabled (shaded text) ;  ; TGFont * fFont;  font to draw label ;  ; Bool_t fHasOwnFont;  kTRUE - font defined locally, kFALSE - globally ;  ; Int_t fMBottom;  margin bottom ;  ; Int_t fMLeft;  margin left ;  ; Int_t fMRight;  margin right ;  ; Int_t fMTop;  margin top ;  ; GContext_t fNormGC;  graphics context used for drawing label ;  ; TGString * fText;  label text ;  ; Bool_t fTextChanged;  has text changed ;  ; Int_t fTFlags;  text flags (see TGFont.h ETextLayoutFlags) ;  ; UInt_t fTHeight;  text height ;  ; TGTextLayout * fTLayout;  text layout ;  ; Int_t fTMode;  text alignment ;  ; UInt_t fTWidth;  text width ;  ; Int_t fWrapLength;  wrap length ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLabel.html:24476,inherit,inherited,24476,doc/master/classTGLabel.html,https://root.cern,https://root.cern/doc/master/classTGLabel.html,1,['inherit'],['inherited']
Modifiability,"t_t y, UInt_t width, UInt_t height, Option_t *opt="""");  Constructor with browser x, y, width and height. ;  ;  TBrowserImp (TBrowser *b, const char *title, UInt_t width, UInt_t height, Option_t *opt="""");  Constructor with browser width and height. ;  ;  TBrowserImp (TBrowser *b=nullptr);  Default constructor. ;  ; virtual ~TBrowserImp ()=default;  ; virtual void AddCheckBox (TObject *, Bool_t=kFALSE);  ; TBrowser * Browser () const;  ; virtual void CheckObjectItem (TObject *, Bool_t=kFALSE);  ; virtual TBrowser * GetBrowser () const;  ; virtual void Iconify ();  ; virtual Bool_t IsWeb () const;  ; virtual void RemoveCheckBox (TObject *);  ; virtual void SetBrowser (TBrowser *b);  ; virtual void SetDrawOption (Option_t *="""");  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TBrowserImp * NewBrowser (TBrowser *b, const char *title, Int_t x, Int_t y, UInt_t width, UInt_t height, Option_t *opt="""");  static constructor returning TBrowserImp, as needed by the plugin mechanism. ;  ; static TBrowserImp * NewBrowser (TBrowser *b=nullptr, const char *title=""ROOT Browser"", UInt_t width=800, UInt_t height=500, Option_t *opt="""");  static constructor returning TBrowserImp, as needed by the plugin mechanism. ;  ;  Static Public Member Functions inherited from TGMainFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootBrowser.html:31460,plugin,plugin,31460,doc/master/classTRootBrowser.html,https://root.cern,https://root.cern/doc/master/classTRootBrowser.html,1,['plugin'],['plugin']
Modifiability,"t_t ymax, Float_t zmin, Float_t zmax); Bool_tTGLObject::SetModelCheckClass(TObject* obj, TClass* cls); voidTGLPlot3D::SetPainter(TGLPlotPainter* p). private:. TH2GL(const TH2GL&); TH2GL&operator=(const TH2GL&). Data Members; public:. enum TGLLogicalShape::ELODAxes { kLODAxesNone; kLODAxesX; kLODAxesY; kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; TGLPlotCoordinatesTGLPlot3D::fCoord; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; TH2*fMModel object dynamic-casted to TH2.; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; TGLPlotPainter*TGLPlot3D::fPlotPainter; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH2GL(); Constructor. ~TH2GL(); Destructor. Bool_t SetModel(TObject* obj, Option_t* opt = 0); Set model object. void SetBBox(); Setup bounding-box. void DirectDraw(TGLRnrCtx& rnrCtx) const; Render the object. TH2GL(const TH2GL& ). TH2GL& operator=(const TH2GL& ). » Author: Matevz Tadel, Jun 2007 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-03-14 16:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TH2GL.html:4535,Inherit,Inheritance,4535,root/html534/TH2GL.html,https://root.cern,https://root.cern/root/html534/TH2GL.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_t& ifault); Compute matrix eigen values*-; *-* ===========================; System generated locals. void mnemat(Double_t* emat, Int_t ndim); Calculates the external error matrix from the internal matrix. Note that if the matrix is declared like Double_t matrix[5][5]; in the calling program, one has to call mnemat with, eg; gMinuit->mnemat(&matrix[0][0],5);. void mnerrs(Int_t number, Double_t& eplus, Double_t& eminus, Double_t& eparab, Double_t& gcc); Utility routine to get MINOS errors*-; *-* ===================================; *-* Called by user.; *-* NUMBER is the parameter number; *-* values returned by MNERRS:; *-* EPLUS, EMINUS are MINOS errors of parameter NUMBER,; *-* EPARAB is 'parabolic' error (from error matrix).; *-* (Errors not calculated are set = 0); *-* GCC is global correlation coefficient from error matrix; *. void mneval(Double_t anext, Double_t& fnext, Int_t& ierev); Evaluates the function being analyzed by MNCROS*-; *-* ===============================================; *-* Evaluates the function being analyzed by MNCROS, which is; *-* generally the minimum of FCN with respect to all remaining; *-* variable parameters. The class data members contains the; *-* data necessary to know the values of U(KE1CR) and U(KE2CR); *-* to be used, namely U(KE1CR) = XMIDCR + ANEXT*XDIRCR; *-* and (if KE2CR .NE. 0) U(KE2CR) = YMIDCR + ANEXT*YDIRCR; *. void mnexcm(const char* comand, Double_t* plist, Int_t llist, Int_t& ierflg); Interprets a command and takes appropriate action*-*-; *-* =================================================; *-* either directly by skipping to the corresponding code in; *-* MNEXCM, or by setting up a call to a function; -; *-* recognized MINUIT commands:; *-* obsolete commands:; *-* IERFLG is now (94.5) defined the same as ICONDN in MNCOMD; *-* = 0: command executed normally; *-* 1: command is blank, ignored; *-* 2: command line unreadable, ignored; *-* 3: unknown command, ignored; *-* 4: abnormal termination (e.g., MIGRAD not conver",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMinuit.html:40774,variab,variable,40774,root/html528/TMinuit.html,https://root.cern,https://root.cern/root/html528/TMinuit.html,10,['variab'],['variable']
Modifiability,"t_t& nvert, Int_t& nsegs, Int_t& npols) const; virtual const char*TGeoShape::GetName() const; virtual Int_tGetNmeshVertices() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tTGeoBBox::GetPointsOnSegments(Int_t npoints, Double_t* array) const; TGeoScale*GetScale() const; TGeoShape*GetShape() const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(Double_t* point, Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tIsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsReflected() const; Bool_tTGeoShape::IsRunTimeShape() const; static Bool_tTGeoShape::IsSameWithinTolerance(Double_t a, Double_t b); static ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoScaledShape.html:5091,Inherit,InheritsFrom,5091,root/html532/TGeoScaledShape.html,https://root.cern,https://root.cern/root/html532/TGeoScaledShape.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t_t& nvert, Int_t& nsegs, Int_t& npols) const; virtual const char*TGeoShape::GetName() const; virtual Int_tGetNmeshVertices() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tTGeoBBox::GetPointsOnSegments(Int_t npoints, Double_t* array) const; TGeoScale*GetScale() const; TGeoShape*GetShape() const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, const Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(const Double_t* point, const Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tIsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(const Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsReflected() const; Bool_tTGeoShape::IsRunTimeShape() const; static Bool_tTGeoShape::IsSameWithinTolerance(Double_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoScaledShape.html:5698,Inherit,InheritsFrom,5698,root/html534/TGeoScaledShape.html,https://root.cern,https://root.cern/root/html534/TGeoScaledShape.html,3,['Inherit'],['InheritsFrom']
Modifiability,"t_t) override;  ; void Close (Option_t *="""") override;  ; void CreatePainting ();  ; void DrawBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2) override;  ; void DrawFrame (Double_t, Double_t, Double_t, Double_t, Int_t, Int_t, Int_t, Int_t) override;  ; void DrawPolyMarker (Int_t n, Double_t *x, Double_t *y) override;  ; void DrawPolyMarker (Int_t n, Float_t *x, Float_t *y) override;  ; void DrawPS (Int_t n, Double_t *xw, Double_t *yw) override;  ; void DrawPS (Int_t n, Float_t *xw, Float_t *yw) override;  ; TWebPainting * GetPainting ();  ; TClass * IsA () const override;  ; Bool_t IsEmptyPainting () const;  ; void NewPage () override;  ; void Open (const char *, Int_t=-111) override;  ; void SetColor (Float_t, Float_t, Float_t) override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TWebPainting * TakePainting ();  ; void Text (Double_t x, Double_t y, const char *str) override;  ; void Text (Double_t x, Double_t y, const wchar_t *str) override;  ;  Public Member Functions inherited from TVirtualPS;  TVirtualPS ();  VirtualPS default constructor. ;  ;  TVirtualPS (const char *filename, Int_t type=-111);  VirtualPS constructor. ;  ; virtual ~TVirtualPS ();  VirtualPS destructor. ;  ; virtual void * GetStream () const;  ; virtual Int_t GetType () const;  ; virtual void PrintFast (Int_t nch, const char *string="""");  Fast version of Print. ;  ; virtual void PrintRaw (Int_t len, const char *str);  Print a raw. ;  ; virtual void PrintStr (const char *string="""");  Output the string str in the output buffer. ;  ; virtual void SetStream (std::ofstream *os);  ; virtual void SetType (Int_t=-111);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void WriteInteger (Int_t i, Bool_t space=kTRUE);  Write one Integer to the file. ;  ; virtual void WriteReal (Float_t r, Bool_t space=kTRUE);  Write a Real number to the file. ;  ;  Public Member Function",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebPS.html:1700,inherit,inherited,1700,doc/master/classTWebPS.html,https://root.cern,https://root.cern/doc/master/classTWebPS.html,1,['inherit'],['inherited']
Modifiability,"t_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetEntries() const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; Bool_tMatches(Int_t idx, const Char_t* idxbuf) const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THnSparseArrayChunk.html:2865,Inherit,InheritsFrom,2865,root/html532/THnSparseArrayChunk.html,https://root.cern,https://root.cern/root/html532/THnSparseArrayChunk.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetEntries() const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; Bool_tMatches(Int_t idx, const Char_t* idxbuf) const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THnSparseArrayChunk.html:2777,Inherit,InheritsFrom,2777,root/html602/THnSparseArrayChunk.html,https://root.cern,https://root.cern/root/html602/THnSparseArrayChunk.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TMutex*GetMutex() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TCondition.html:2497,Inherit,InheritsFrom,2497,root/html532/TCondition.html,https://root.cern,https://root.cern/root/html532/TCondition.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TMutex*GetMutex() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TCondition.html:2470,Inherit,InheritsFrom,2470,root/html602/TCondition.html,https://root.cern,https://root.cern/root/html602/TCondition.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetDataDir() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const char*GetMsd() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetOrdinal() const; SysInfo_tGetSysInfo() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSlaveInfo.html:2741,Inherit,InheritsFrom,2741,root/html534/TSlaveInfo.html,https://root.cern,https://root.cern/root/html534/TSlaveInfo.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetDataDir() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const char*GetMsd() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetOrdinal() const; SysInfo_tGetSysInfo() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSlaveInfo.html:2613,Inherit,InheritsFrom,2613,root/html602/TSlaveInfo.html,https://root.cern,https://root.cern/root/html602/TSlaveInfo.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetDataDir() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const char*GetMsd() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetOrdinal() const; SysInfo_tGetSysInfo() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSlaveInfo.html:2741,Inherit,InheritsFrom,2741,root/html532/TSlaveInfo.html,https://root.cern,https://root.cern/root/html532/TSlaveInfo.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; static Memstat::TMemStatMng*GetInstance(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); Memstat::TMemStatMng&operator=(const Memstat::TMemS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/Memstat__TMemStatMng.html:2395,Inherit,InheritsFrom,2395,root/html602/Memstat__TMemStatMng.html,https://root.cern,https://root.cern/root/html602/Memstat__TMemStatMng.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; static memstat::TMemStatMng*GetInstance(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); memstat::TMemStatMng&op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/memstat__TMemStatMng.html:2395,Inherit,InheritsFrom,2395,root/html534/memstat__TMemStatMng.html,https://root.cern,https://root.cern/root/html534/memstat__TMemStatMng.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TGDimensionGetDefaultSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::oper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLayoutManager.html:3441,Inherit,InheritsFrom,3441,root/html532/TGLayoutManager.html,https://root.cern,https://root.cern/root/html532/TGLayoutManager.html,4,['Inherit'],['InheritsFrom']
Modifiability,"t_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TGDimensionGetDefaultSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLayoutManager.html:3448,Inherit,InheritsFrom,3448,root/html602/TGLayoutManager.html,https://root.cern,https://root.cern/root/html602/TGLayoutManager.html,4,['Inherit'],['InheritsFrom']
Modifiability,"t_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TGDimensionGetDefaultSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGLayoutManager::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGColumnLayout.html:3402,Inherit,InheritsFrom,3402,root/html532/TGColumnLayout.html,https://root.cern,https://root.cern/root/html532/TGColumnLayout.html,16,['Inherit'],['InheritsFrom']
Modifiability,"t_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TGDimensionGetDefaultSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGLayoutManager::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGColumnLayout.html:3317,Inherit,InheritsFrom,3317,root/html602/TGColumnLayout.html,https://root.cern,https://root.cern/root/html602/TGColumnLayout.html,16,['Inherit'],['InheritsFrom']
Modifiability,"t_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TGDimensionGetDefaultSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGLayoutManager::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; voidNewSize(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGXYLayout.html:4996,Inherit,InheritsFrom,4996,root/html532/TGXYLayout.html,https://root.cern,https://root.cern/root/html532/TGXYLayout.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TGDimensionGetDefaultSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGLayoutManager::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; voidNewSize(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGXYLayout.html:4967,Inherit,InheritsFrom,4967,root/html602/TGXYLayout.html,https://root.cern,https://root.cern/root/html602/TGXYLayout.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TGDimensionGetDefaultSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGTileLayout::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGListDetailsLayout.html:3405,Inherit,InheritsFrom,3405,root/html532/TGListDetailsLayout.html,https://root.cern,https://root.cern/root/html532/TGListDetailsLayout.html,4,['Inherit'],['InheritsFrom']
Modifiability,"t_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TGDimensionGetDefaultSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGTileLayout::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGListDetailsLayout.html:3338,Inherit,InheritsFrom,3338,root/html602/TGListDetailsLayout.html,https://root.cern,https://root.cern/root/html602/TGListDetailsLayout.html,4,['Inherit'],['InheritsFrom']
Modifiability,"t_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TStringGenerate(); const char*GetDescription(const char* key); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetValue(const char* key); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGridJDL.html:3370,Inherit,InheritsFrom,3370,root/html532/TGridJDL.html,https://root.cern,https://root.cern/root/html532/TGridJDL.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TStringGenerate(); const char*GetDescription(const char* key); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetValue(const char* key); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGridJDL.html:3376,Inherit,InheritsFrom,3376,root/html602/TGridJDL.html,https://root.cern,https://root.cern/root/html602/TGridJDL.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_t* length, Int_t nbuffs); Read scattered data chunks in one operation. param buffer: a pointer to a buffer big enough to hold all of the; requested data; param position: position[i] is the seek position of chunk i of len; length[i]; param length: length[i] is the length of the chunk at offset; position[i]; param nbuffs: number of chunks; returns: kTRUE in case of failure. Bool_t WriteBuffer(const char* buffer, Int_t length); Write a data chunk. param buffer: the data to be written; param length: the size of the buffer; returns: kTRUE in case of failure. void Flush(). void Seek(Long64_t offset, TFile::ERelativeTo position = kBeg); Set the position within the file. param offset: the new offset relative to position; param position: the relative position, either kBeg, kCur or kEnd. Int_t ParseOpenMode(Option_t* in, TString& modestr, XrdCl::OpenFlags::Flags& mode, Bool_t assumeRead); Parse a file open mode given as a string into a canonically formatted; output mode string and an integer code that the xroot client can use. param in: the file open mode as a string (in); modestr: open mode string after parsing (out); mode: correctly parsed option mode code (out); assumeRead: if the open mode is not recognised assume read (in); returns: 0 in case the mode was successfully parsed,; -1 in case of failure. Bool_t IsUseable() const; Check the file is open and isn't a zombie. Bool_t GetVectorReadLimits(); Find the server-specific readv config params. Returns kFALSE in case of; error, kTRUE otherwise. void SetEnv(); Map ROOT and xrootd environment variables. TNetXNGFile(); {}. TNetXNGFile(const char* url, Option_t* mode = """", const char* title = """", Int_t compress = 1, Int_t netopt = 0, Bool_t parallelopen = kFALSE). TString GetNewUrl(); { return fNewUrl; }. » Last changed: root/netxng:$Id$ » Last generated: 2015-06-30 15:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNetXNGFile.html:27639,config,config,27639,root/html602/TNetXNGFile.html,https://root.cern,https://root.cern/root/html602/TNetXNGFile.html,4,"['config', 'variab']","['config', 'variables']"
Modifiability,"t_t* length, Int_t nbuffs); Read scattered data chunks in one operation. param buffer: a pointer to a buffer big enough to hold all of the; requested data; param position: position[i] is the seek position of chunk i of len; length[i]; param length: length[i] is the length of the chunk at offset; position[i]; param nbuffs: number of chunks; returns: kTRUE in case of failure. Bool_t WriteBuffer(const char* buffer, Int_t length); Write a data chunk. param buffer: the data to be written; param length: the size of the buffer; returns: kTRUE in case of failure. void Flush(). void Seek(Long64_t offset, TFile::ERelativeTo position = kBeg); Set the position within the file. param offset: the new offset relative to position; param position: the relative position, either kBeg, kCur or kEnd. Int_t ParseOpenMode(Option_t* in, TString& modestr, XrdCl::OpenFlags::Flags& mode, Bool_t assumeRead); Parse a file open mode given as a string into a canonically formatted; output mode string and an integer code that the xroot client can use. param in: the file open mode as a string (in); modestr: open mode string after parsing (out); mode: correctly parsed option mode code (out); assumeRead: if the open mode is not recognised assume read (in); returns: 0 in case the mode was successfully parsed,; -1 in case of failure. Bool_t IsUseable() const; Check the file is open and isn't a zombie. Bool_t GetVectorReadLimits(); Find the server-specific readv config params. Returns kFALSE in case of; error, kTRUE otherwise. void SetEnv(); Map ROOT and xrootd environment variables. TNetXNGFile(); {}. TNetXNGFile(const char* url, Option_t* mode = """", const char* title = """", Int_t compress = 1, Int_t netopt = 0, Bool_t parallelopen = kFALSE). TString GetNewUrl(); { return fNewUrl; }. » Last changed: root/netxng:$Id$ » Last generated: 2015-07-10 18:01; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TNetXNGFile.html:27639,config,config,27639,root/html604/TNetXNGFile.html,https://root.cern,https://root.cern/root/html604/TNetXNGFile.html,4,"['config', 'variab']","['config', 'variables']"
Modifiability,"t_t* nvar2, Int_t* nlayer, Int_t* nodes, Int_t* ncycle); Double_tW_ref(const Double_t* wNN, Int_t a_1, Int_t a_2, Int_t a_3) const; Double_t&W_ref(Double_t* wNN, Int_t a_1, Int_t a_2, Int_t a_3); voidWini(); Double_tWw_ref(const Double_t* wwNN, Int_t a_1, Int_t a_2) const; Double_t&Ww_ref(Double_t* wwNN, Int_t a_1, Int_t a_2). private:. TMVA::MsgLogger&ULog(). Data Members; protected:. TMVA::MethodCFMlpANN_Utils::fCost_1; TMVA::MethodCFMlpANN_Utils::fDel_1; TMVA::MethodCFMlpANN_Utils::fNeur_1; TMVA::MethodCFMlpANN_Utils::fParam_1; TMVA::MethodCFMlpANN_Utils::VARn2fVarn2_1; TMVA::MethodCFMlpANN_Utils::VARn2fVarn3_1; TMVA::MethodCFMlpANN_Utils::fVarn_1; static Int_tfg_0constant; static Int_tfg_100constant; static Int_tfg_999constant; static const char*fg_MethodNamemethod name for print; static Int_tfg_max_nNodes_maximum number of nodes per variable; static Int_tfg_max_nVar_static maximum number of input variables. private:. TMVA::MsgLogger*fLogger. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~MethodCFMlpANN_Utils(); destructor. void Train_nn(Double_t* tin2, Double_t* tout2, Int_t* ntrain, Int_t* ntest, Int_t* nvar2, Int_t* nlayer, Int_t* nodes, Int_t* ncycle); training interface - called from MethodCFMlpANN class object. void Entree_new(Int_t* , char* , Int_t* ntrain, Int_t* ntest, Int_t* numlayer, Int_t* nodes, Int_t* numcycle, Int_t ); first initialisation of ANN. void Wini(); [smart comments to be added]. void En_avant(Int_t* ievent); [smart comments to be added]. void Leclearn(Int_t* ktest, Double_t* tout2, Double_t* tin2); [smart comments to be added]. void En_arriere(Int_t* ievent); [smart comments to be added]. void Out(Int_t* iii, Int_t* maxcycle); write weights to file. void Innit(char* det, Double_t* tout2, Double_t* tin2, Int_t ); Initialization. void TestNN(); [smart comments to be added]. void Cout(Int_t* , Double_t* xxx); [smart comments to be added]. void Inl(); [smart comments to be added]. Double_t Fdecroi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodCFMlpANN_Utils.html:3015,Inherit,Inheritance,3015,root/html532/TMVA__MethodCFMlpANN_Utils.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodCFMlpANN_Utils.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_t*fColorGreen[fNumPoints] green color at each anchor point; UShort_t*fColorRed[fNumPoints] red color at each anchor point; UInt_tfNumPointsnumber of anchor points; Double_t*fPoints[fNumPoints] value of each anchor point [0..1]; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TImagePalette(); Default constructor, sets all pointers to 0. TImagePalette(UInt_t numPoints); Constructor for a palette with numPoints anchor points.; It allocates the memory but does not set any colors. TImagePalette(const TImagePalette& palette); Copy constructor. TImagePalette(Int_t ncolors, Int_t* colors); Creates palette in the same way as TStyle::SetPalette. ~TImagePalette(); Destructor. TImagePalette & operator=(const TImagePalette& palette); Assignment operator. Int_t FindColor(UShort_t r, UShort_t g, UShort_t b); returns an index of the closest color. Int_t * GetRootColors(); Returns a list of ROOT colors. Could be used to set histogram palette.; See also http://root.cern.ch/root/htmldoc/TStyle.html#TStyle:SetPalette. » Author: Reiner Rohlfs 24/03/02 » Copyright (C) 2001-2002, Rene Brun, Fons Rademakers and Reiner Rohlfs *; » Last changed: root/graf:$Id$ » Last generated: 2015-06-02 16:13; This page has been automatically gen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TImagePalette.html:8489,Inherit,Inheritance,8489,root/html604/TImagePalette.html,https://root.cern,https://root.cern/root/html604/TImagePalette.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_t*fColorGreen[fNumPoints] green color at each anchor point; UShort_t*fColorRed[fNumPoints] red color at each anchor point; UInt_tfNumPointsnumber of anchor points; Double_t*fPoints[fNumPoints] value of each anchor point [0..1]; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TImagePalette(); Default constructor, sets all pointers to 0. TImagePalette(UInt_t numPoints); Constructor for a palette with numPoints anchor points.; It allocates the memory but does not set any colors. TImagePalette(const TImagePalette& palette); Copy constructor. TImagePalette(Int_t ncolors, Int_t* colors); Creates palette in the same way as TStyle::SetPalette. ~TImagePalette(); Destructor. TImagePalette & operator=(const TImagePalette& palette); Assignment operator. Int_t FindColor(UShort_t r, UShort_t g, UShort_t b); returns an index of the closest color. Int_t * GetRootColors(); Returns a list of ROOT colors. Could be used to set histogram palette.; See also http://root.cern.ch/root/htmldoc/TStyle.html#TStyle:SetPalette. » Author: Reiner Rohlfs 24/03/02 » Copyright (C) 2001-2002, Rene Brun, Fons Rademakers and Reiner Rohlfs *; » Last changed: root/graf:$Id$ » Last generated: 2015-06-30 15:13; This page has been automatically gen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TImagePalette.html:8489,Inherit,Inheritance,8489,root/html602/TImagePalette.html,https://root.cern,https://root.cern/root/html602/TImagePalette.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_t, Int_t, Int_t); static TVirtualPadEditor*LoadEditor(); virtual voidMarkerAttributes(Int_t, Int_t, Float_t); TVirtualPadEditor&operator=(const TVirtualPadEditor&); virtual voidSetGlobal(Bool_t); static voidSetPadEditorName(const char* name); virtual voidShow(); static voidShowEditor(); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); static voidTerminate(); virtual voidTextAttributes(Int_t, Float_t, Int_t, Int_t, Float_t); static voidUpdateFillAttributes(Int_t col, Int_t sty); static voidUpdateLineAttributes(Int_t col, Int_t sty, Int_t width); static voidUpdateMarkerAttributes(Int_t col, Int_t sty, Float_t msiz); static voidUpdateTextAttributes(Int_t align, Float_t angle, Int_t col, Int_t font, Float_t tsize). Data Members; protected:. static TStringfgEditorNamename of the default pad editor ""Ged""; static TVirtualPadEditor*fgPadEditorsingleton editor dialog. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TVirtualPadEditor(); Virtual editor dtor. TVirtualPadEditor * LoadEditor(); Static function returning a pointer to a new pad editor.; This pointer can be adopted by a TCanvas (i.e. TRootCanvas); when it embeds the editor. const char * GetEditorName(); Returns the type of the default pad editor. Static method. TVirtualPadEditor * GetPadEditor(Bool_t load = kTRUE); Returns the pad editor dialog. Static method. void SetPadEditorName(const char* name); Set type of default pad editor. Static method. void ShowEditor(); Show the global pad editor. Static method. void HideEditor(); Hide the pad editor. Static method. void Terminate(); Close the global pad editor. Static method. void UpdateFillAttributes(Int_t col, Int_t sty); Update fill attributes via the pad editor. void UpdateTextAttributes(Int_t align, Float_t angle, Int_t col, Int_t font, Float_t tsize); Update text attributes via the pad editor. void UpdateLineAttributes(Int_t col, Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TVirtualPadEditor.html:2156,Inherit,Inheritance,2156,root/html534/TVirtualPadEditor.html,https://root.cern,https://root.cern/root/html534/TVirtualPadEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Additional Inherited Members;  Public Types inherited from TFileHandler; enum  { kRead = 1; , kWrite = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTermInputHandler.html:11675,inherit,inherited,11675,doc/master/classTTermInputHandler.html,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html,2,['inherit'],['inherited']
Modifiability,"t_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TGToolTip * fTip;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtH",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTipDelayTimer.html:12304,inherit,inherited,12304,doc/master/classTTipDelayTimer.html,https://root.cern,https://root.cern/doc/master/classTTipDelayTimer.html,1,['inherit'],['inherited']
Modifiability,"t_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TList * fGarbage;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtH",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSingleShotCleaner.html:12434,inherit,inherited,12434,doc/master/classTSingleShotCleaner.html,https://root.cern,https://root.cern/doc/master/classTSingleShotCleaner.html,1,['inherit'],['inherited']
Modifiability,"t_t< F, T >;  Execute a function over the elements of an initializer_list (Map) and accumulate the results into a single value (Reduce). ;  ; template<class F , class T , class R , class Cond = validMapReturnCond<F, T>> ; auto MapReduce (F func, std::vector< T > &args, R redfunc, unsigned nChunks) -> InvokeResult_t< F, T >;  Execute a function over the elements of a vector (Map) and accumulate the results into a single value (Reduce). ;  ; template<class F , class R , class Cond = validMapReturnCond<F>> ; auto MapReduce (F func, unsigned nTimes, R redfunc, unsigned nChunks) -> InvokeResult_t< F >;  Execute a function nTimes (Map) and accumulate the results into a single value (Reduce). ;  ; TExecutor & operator= (const TExecutor &)=delete;  ; ROOT::EExecutionPolicy Policy () const;  Return the execution policy the executor is set to. ;  ;  Public Member Functions inherited from ROOT::TExecutorCRTP< TExecutor >;  TExecutorCRTP ()=default;  ;  TExecutorCRTP (const TExecutorCRTP &)=delete;  ; auto Map (F func, const std::vector< T > &args) -> std::vector< InvokeResult_t< F, T > >;  Execute a function over the elements of an immutable vector. ;  ; auto Map (F func, ROOT::TSeq< INTEGER > args) -> std::vector< InvokeResult_t< F, INTEGER > >;  Execute a function over a sequence of indexes. ;  ; auto Map (F func, std::initializer_list< T > args) -> std::vector< InvokeResult_t< F, T > >;  Execute a function over the elements of an initializer_list. ;  ; auto Map (F func, std::vector< T > &args) -> std::vector< InvokeResult_t< F, T > >;  Execute a function over the elements of a vector. ;  ; auto Map (F func, unsigned nTimes) -> std::vector< InvokeResult_t< F > >;  Execute a function without arguments several times. ;  ; T * MapReduce (F func, const std::vector< T * > &args);  Execute a function over the TObject-inheriting elements of an immutable vector (Map) and merge the objects into a single one (Reduce). ;  ; auto MapReduce (F func, const std::vector< T > &args, R redfunc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1Internal_1_1TExecutor.html:5856,inherit,inherited,5856,doc/v632/classROOT_1_1Internal_1_1TExecutor.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1Internal_1_1TExecutor.html,2,['inherit'],['inherited']
Modifiability,"t_t> TMVA::BinarySearchTree::fMin[2]. private . RMS for signal and background for each variable. ; Definition at line 162 of file BinarySearchTree.h. ◆ fNEventsW. Double_t TMVA::BinarySearchTree::fNEventsW[2]. private . Number of events per class, taking into account event weights. ; Definition at line 166 of file BinarySearchTree.h. ◆ fNormalizeTreeTable. std::vector< std::pair<Double_t,const TMVA::Event*> > TMVA::BinarySearchTree::fNormalizeTreeTable. private . Definition at line 171 of file BinarySearchTree.h. ◆ fPeriod. UInt_t TMVA::BinarySearchTree::fPeriod. private . periode (number of event variables) ; Definition at line 156 of file BinarySearchTree.h. ◆ fRMS. std::vector<Float_t> TMVA::BinarySearchTree::fRMS[2]. private . RMS for signal and background for each variable. ; Definition at line 161 of file BinarySearchTree.h. ◆ fStatisticsIsValid. Bool_t TMVA::BinarySearchTree::fStatisticsIsValid. private . flag if last stat calculation is still valid, set to false if new node is insert ; Definition at line 158 of file BinarySearchTree.h. ◆ fSum. std::vector<Double_t> TMVA::BinarySearchTree::fSum[2]. private . Sum for signal and background for each variable. ; Definition at line 164 of file BinarySearchTree.h. ◆ fSumOfWeights. Double_t TMVA::BinarySearchTree::fSumOfWeights. private . Total number of events (weighted) counted during filling should be the same as fNEventsW[0]+fNEventsW[1]. ; . used as a check ; Definition at line 167 of file BinarySearchTree.h. ◆ fSumSq. std::vector<Double_t> TMVA::BinarySearchTree::fSumSq[2]. private . Squared Sum for signal and background for each variable. ; Definition at line 165 of file BinarySearchTree.h. Libraries for TMVA::BinarySearchTree:. [legend]; The documentation for this class was generated from the following files:; tmva/tmva/inc/TMVA/BinarySearchTree.h; tmva/tmva/src/BinarySearchTree.cxx. TMVABinarySearchTree. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1BinarySearchTree.html:17984,variab,variable,17984,doc/master/classTMVA_1_1BinarySearchTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1BinarySearchTree.html,2,['variab'],['variable']
Modifiability,"t_tGetIntAttr(XMLNodePointer_t node, const char* name); virtual const char*TObject::GetName() const; XMLNodePointer_tGetNext(XMLNodePointer_t xmlnode, Bool_t realnode = kTRUE); XMLAttrPointer_tGetNextAttr(XMLAttrPointer_t xmlattr); const char*GetNodeContent(XMLNodePointer_t xmlnode); const char*GetNodeName(XMLNodePointer_t xmlnode); XMLNsPointer_tGetNS(XMLNodePointer_t xmlnode); const char*GetNSName(XMLNsPointer_t ns); const char*GetNSReference(XMLNsPointer_t ns); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; XMLNodePointer_tGetParent(XMLNodePointer_t xmlnode); Bool_tGetSkipComments() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tHasAttr(XMLNodePointer_t xmlnode, const char* name); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsCommentNode(XMLNodePointer_t xmlnode); Bool_tIsContentNode(XMLNodePointer_t xmlnode); Bool_tIsEmptyNode(XMLNodePointer_t xmlnode); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsXmlNode(XMLNodePointer_t xmlnode); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; XMLAttrPointer_tNewAttr(XMLNodePointer_t xmlnode, XMLNsPointer_t, const char* name, const char* value); XMLNodePointer_tNewChild(XMLNodePointer_t parent, XMLNsPointer_t ns, const char* name, const char* content = 0); XMLDocPointer_tNewDoc(const char* version = ""1.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TXMLEngine.html:4751,Inherit,InheritsFrom,4751,root/html534/TXMLEngine.html,https://root.cern,https://root.cern/root/html534/TXMLEngine.html,6,['Inherit'],['InheritsFrom']
Modifiability,"t_tROOT::v5::TFormula::GetNpar() const; virtual Int_tROOT::v5::TFormula::GetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; RooAbsArg*getParameter(const char* name) const; RooAbsArg*getParameter(Int_t index) const; Double_tROOT::v5::TFormula::GetParameter(Int_t ipar) const; Double_tROOT::v5::TFormula::GetParameter(const char* name) const; virtual Double_t*ROOT::v5::TFormula::GetParameters() const; virtual voidROOT::v5::TFormula::GetParameters(Double_t* params); virtual const char*ROOT::v5::TFormula::GetParName(Int_t ipar) const; virtual Int_tROOT::v5::TFormula::GetParNumber(const char* name) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tROOT::v5::TFormula::IsLinear() const; virtual Bool_tROOT::v5::TFormula::IsNormalized() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; Bool_tok(); voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooFormula.html:4707,Inherit,InheritsFrom,4707,root/html604/RooFormula.html,https://root.cern,https://root.cern/root/html604/RooFormula.html,1,['Inherit'],['InheritsFrom']
Modifiability,"t_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tTSeqCollection::GetLast() const; TList*GetListForObject(const char* name) const; TList*GetListForObject(const TObject* obj) const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**TList::GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTCollection::GetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tTSeqCollection::IndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; Bool_tTList::IsAscending(); virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tTSeqCollection::IsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*TList::Last() const; Int_tTSeqCollection::LastIndex() const; virtual TObjLink*TList::LastLink() const; virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator*TList::MakeIterator(Bool_t dir = kIterForward) const; virtual TIterator*TCollection::MakeReverseIterator() const; voidTObject::MayNotUse(const char* method) const; Long64_tTSeqCollection::Merge(TCollection* list); virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THashList.html:4530,Inherit,InheritsFrom,4530,root/html532/THashList.html,https://root.cern,https://root.cern/root/html532/THashList.html,4,['Inherit'],['InheritsFrom']
Modifiability,"t_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tTSeqCollection::GetLast() const; TList*THashList::GetListForObject(const char* name) const; TList*THashList::GetListForObject(const TObject* obj) const; virtual const char*TCollection::GetName() const; virtual TEnum*GetObject(const char*) const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**TList::GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTCollection::GetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tTSeqCollection::IndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; Bool_tTList::IsAscending(); virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tIsLoaded() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tTSeqCollection::IsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*TList::Last() const; Int_tTSeqCollection::LastIndex() const; virtual TObjLink*TList::LastLink() const; virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator*TList::MakeIterator(Bool_t dir = kIterForward) const; virtual TIterator*TCollection::MakeReverseIterator() const; voidTObject::MayNo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TListOfEnums.html:4207,Inherit,InheritsFrom,4207,root/html602/TListOfEnums.html,https://root.cern,https://root.cern/root/html602/TListOfEnums.html,2,['Inherit'],['InheritsFrom']
Modifiability,"t_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Bool_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; TRefArrayTPointSet3D::fIdsUser-provided point identifications; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TArrayI*fIntIdsOptional array of integer ideices.; Int_tfIntIdsPerPointNumber of integer indices assigned to each point.; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Int_tTPolyMarker3D::fLastPointThe index of the last filled point; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTPolyMarker3D::fNnumber of points; TStringTPolyMarker3D::fNamename of polymarker; Int_tTEveElement::fNumChildren!; TStringTPolyMarker3D::fOptionoptions; Bool_tTPointSet3D::fOwnIdsFlag specifying id-objects are owned by the point-set; Float_t*TPolyMarker3D::fP[3*fN] Array of X,Y,Z coordinates; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TRefTEveElement::fSourceExternal object that is ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEvePointSet.html:25125,variab,variable,25125,root/html528/TEvePointSet.html,https://root.cern,https://root.cern/root/html528/TEvePointSet.html,1,['variab'],['variable']
Modifiability,"t_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; TRefArrayTPointSet3D::fIdsUser-provided point identifications; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TArrayI*fIntIdsOptional array of integer ideices.; Int_tfIntIdsPerPointNumber of integer indices assigned to each point.; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Int_tTPolyMarker3D::fLastPointThe index of the last filled point; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTPolyMarker3D::fNNumber of allocated points; TStringTPolyMarker3D::fNameName of polymarker; Int_tTEveElement::fNumChildren!; TStringTPolyMarker3D::fOptionOptions; Bool_tTPointSet3D::fOwnIdsFlag specifying id-objects are owned by the point-set; Float_t*TPolyMarker3D::fP[3*fN] Array of X,Y,Z coordinates; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TRefTEveElement::fSourceExternal objec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEvePointSet.html:25640,variab,variable,25640,root/html534/TEvePointSet.html,https://root.cern,https://root.cern/root/html534/TEvePointSet.html,2,['variab'],['variable']
Modifiability,"t_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; TRefArrayTPointSet3D::fIdsUser-provided point identifications; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TArrayI*fIntIdsOptional array of integer ideices.; Int_tfIntIdsPerPointNumber of integer indices assigned to each point.; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Int_tTPolyMarker3D::fLastPointThe index of the last filled point; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTPolyMarker3D::fNnumber of points; TStringTPolyMarker3D::fNamename of polymarker; Int_tTEveElement::fNumChildren!; TStringTPolyMarker3D::fOptionoptions; Bool_tTPointSet3D::fOwnIdsFlag specifying id-objects are owned by the point-set; Float_t*TPolyMarker3D::fP[3*fN] Array of X,Y,Z coordinates; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TRefTEveElement::fSourceExternal object that is ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEvePointSet.html:25493,variab,variable,25493,root/html530/TEvePointSet.html,https://root.cern,https://root.cern/root/html530/TEvePointSet.html,3,['variab'],['variable']
Modifiability,"t_tTGCompositeFrame::fMustCleanupcleanup mode (see EFrameCleanup); TStringTGWindow::fNamename of the window used in SavePrimitive(); Bool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SavePrimitive(ostream& out, Option_t* option = """"); Save a horizontal frame widget as a C++ statement(s) on output stream out. TGHorizontalFrame(const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); { SetWindowName(); }. » Author: Fons Rademakers 03/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-04-16 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGHorizontalFrame.html:19680,Inherit,Inheritance,19680,root/html534/TGHorizontalFrame.html,https://root.cern,https://root.cern/root/html534/TGHorizontalFrame.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Int_tTGedFrame::fPrioritylocation in GedEditor; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveJetConeEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Initialize widget pointers to 0; Constructor. void SetModel(TObject* obj); Set model object. TEveJetConeEditor(const TEveJetConeEditor& ). TEveJetConeEditor& operator=(const TEveJetConeEditor& ). virtual ~TEveJetConeEditor(); {}. » Author: Matevz Tadel, Jochen Thaeder 2009 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-06-02 15:44; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TEveJetConeEditor.html:20553,Inherit,Inheritance,20553,root/html604/TEveJetConeEditor.html,https://root.cern,https://root.cern/root/html604/TEveJetConeEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Int_tTGedFrame::fPrioritylocation in GedEditor; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveJetConeEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Initialize widget pointers to 0; Constructor. void SetModel(TObject* obj); Set model object. TEveJetConeEditor(const TEveJetConeEditor& ). TEveJetConeEditor& operator=(const TEveJetConeEditor& ). virtual ~TEveJetConeEditor(); {}. » Author: Matevz Tadel, Jochen Thaeder 2009 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-06-30 14:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveJetConeEditor.html:20553,Inherit,Inheritance,20553,root/html602/TEveJetConeEditor.html,https://root.cern,https://root.cern/root/html602/TEveJetConeEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_tTGFrame::fYframe y position; Double_t*fZiInitial Z positions; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoPconEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for polycone editor. ~TGeoPconEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to a given pcon. void CreateSections(Int_t inew); Change dynamically the number of sections. Bool_t CheckSections(Bool_t change = kFALSE); Check validity of sections. void UpdateSections(); Update sections according fShape. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Perform name change. void DoApply(); Slot for applying modifications. void DoSectionChange(Int_t i); Change parameters of section isect;. void DoNz(); Change number of sections. void DoPhi(); Change phi range. void DoModified(); Slot for signaling modifications. void DoUndo(); Slot for undoing last operation. void CreateEdges(); {;}. TGeoPc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoPconEditor.html:21978,Inherit,Inheritance,21978,root/html602/TGeoPconEditor.html,https://root.cern,https://root.cern/root/html602/TGeoPconEditor.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_tTGFrame::fYframe y position; TAxis*fYaxisy-axis; TAxis*fZaxisz-axis; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static TFitEditor*fgFitDialogsingleton fit panel; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TF1* FindFunction(); This method looks among the functions stored by the fitpanel, the; one that is currently selected in the fFuncList. TFitEditor * GetInstance(TVirtualPad* pad = 0, TObject* obj = 0); Static method - opens the fit panel. TFitEditor(TVirtualPad* pad, TObject* obj); Constructor of fit editor. 'obj' is the object to be fitted and; 'pad' where it is drawn. ~TFitEditor(); Fit editor destructor. void CreateFunctionGroup(); Creates the Frame that contains oll the information about the; function. void CreateGeneralTab(); Create 'General' tab. void CreateMinimizationTab(); Create 'Minimization' tab. void ConnectSlots(); Connect GUI signals to fit panel slots. void DisconnectSlots(); Disconnect GUI signals from fit panel slots. void SetCanvas(TCanvas* c); Connect to another canvas. void Hide(); Hide the fit panel and set it to non-active state. void Show(TVirtualPad* pad, TObject* obj); Show the fit panel (possible only via co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFitEditor.html:31404,Inherit,Inheritance,31404,root/html532/TFitEditor.html,https://root.cern,https://root.cern/root/html532/TFitEditor.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_tTGMainFrame::fWMMinWidthWM min width; UInt_tTGMainFrame::fWMWidthWM width; UInt_tTGMainFrame::fWMWidthIncWM width increments; Int_tTGMainFrame::fWMXWM x position; Int_tTGMainFrame::fWMYWM y position; UInt_tTGFrame::fWidthframe width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static TObject*TGeoTreeDialog::fgSelectedObjSelected object; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoMaterialDialog(TGFrame* caller, const TGWindow* main, UInt_t w = 1, UInt_t h = 1); Ctor. void BuildListTree(); Build volume specific list tree. void DoClose(); Handle close button. void DoItemClick(TGListTreeItem* item, Int_t btn); Handle item click.; Iterate daughters. void ConnectSignalsToSlots(); Connect signals to slots. virtual ~TGeoMaterialDialog(); {;}. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-03-14 16:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoMaterialDialog.html:22911,Inherit,Inheritance,22911,root/html534/TGeoMaterialDialog.html,https://root.cern,https://root.cern/root/html534/TGeoMaterialDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_tTGMainFrame::fWMWidthWM width; UInt_tTGMainFrame::fWMWidthIncWM width increments; Int_tTGMainFrame::fWMXWM x position; Int_tTGMainFrame::fWMYWM y position; UInt_tTGFrame::fWidthframe width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static TObject*TGeoTreeDialog::fgSelectedObjSelected object; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoShapeDialog(TGFrame* caller, const TGWindow* main, UInt_t w = 1, UInt_t h = 1); Ctor. void BuildListTree(); Build shape specific list tree. void DoClose(); Handle close button. void DoItemClick(TGListTreeItem* item, Int_t btn); Handle item click.; Iterate daughters. void ConnectSignalsToSlots(); Connect signals to slots. virtual ~TGeoShapeDialog(); {;}. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id: TGeoTabManager.h 21565 2007-12-28 12:28:46Z brun $ » Last generated: 2011-11-03 20:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoShapeDialog.html:22877,Inherit,Inheritance,22877,root/html532/TGeoShapeDialog.html,https://root.cern,https://root.cern/root/html532/TGeoShapeDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_tTGX11::fTextAlignHText Alignment Horizontal; Int_tTGX11::fTextAlignVText Alignment Vertical; Float_tTAttText::fTextAngleText angle; Color_tTAttText::fTextColorText color index; Font_tTAttText::fTextFontText font number; Float_tTGX11::fTextMagnitudeText Magnitude; Float_tTAttText::fTextSizeText size; TStringTNamed::fTitleobject title; DrawableTGX11::fVisRootWinRoot window with fVisual to be used to create GC's and XImages; RVisual*TGX11::fVisualPointer to visual used by all windows; ULong_tTGX11::fWhitePixelValue of white pixel in colormap. private:. FT_VectorfAlignalignment vector; TXftFontHash*fXftFontHashhash table for Xft fonts; static TGX11TTF::EAlignkBCenter; static TGX11TTF::EAlignkBLeft; static TGX11TTF::EAlignkBRight; static TGX11TTF::EAlignkMCenter; static TGX11TTF::EAlignkMLeft; static TGX11TTF::EAlignkMRight; static TGX11TTF::EAlignkNone; static TGX11TTF::EAlignkTCenter; static TGX11TTF::EAlignkTLeft; static TGX11TTF::EAlignkTRight. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGX11TTF(const TGX11& org); Create copy of TGX11 but now use TrueType fonts. void Activate(); Static method setting TGX11TTF as the acting gVirtualX. Bool_t Init(void* display); Initialize X11 system. Returns kFALSE in case of failure. void Align(void); Compute alignment variables. The alignment is done on the horizontal string; then the rotation is applied on the alignment variables.; SetRotation and LayoutGlyphs should have been called before. void DrawImage(FT_Bitmap* source, ULong_t fore, ULong_t back, RXImage* xim, Int_t bx, Int_t by); Draw FT_Bitmap bitmap to xim image at position bx,by using specified; foreground color. void DrawText(Int_t x, Int_t y, Float_t angle, Float_t mgn, const char* text, TVirtualX::ETextMode mode); Draw text using TrueType fonts. If TrueType fonts are not available the; text is drawn with TGX11::DrawText. void DrawText(Int_t x, Int_t y, Float_t angle, Float_t mgn, const wchar_t* text, TVirtualX::ETextMo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGX11TTF.html:26886,Inherit,Inheritance,26886,root/html602/TGX11TTF.html,https://root.cern,https://root.cern/root/html602/TGX11TTF.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; const vector<double>&GetBoostWeights() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTMVA::MethodBase::GetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&TMVA::MethodBase::GetEventCollection(TMVA::Types::ETreeType type); const vector<TMVA::DecisionTree*>&GetForest() const; virtual voidGetHelpMessage() const; virtual const char*TObject::GetIconName() const; const TString&TMVA::MethodBase::GetInputLabel(Int_t i) const; const TString&TMVA::MethodBase::GetInputTitle(Int_t i) const; const TString&TMVA::MethodBase::GetInputVar(Int_t i) const; const TStri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodBDT.html:6359,Config,Configurable,6359,root/html532/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodBDT.html,4,['Config'],['Configurable']
Modifiability,"t_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. RooNameReg(); RooNameReg(const RooNameReg& other); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. RooHashTable_htableRepository of registered names; static RooNameReg*_instance; RooLinkedList_list; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooNameReg(); Destructor. RooNameReg(const RooNameReg& other); Copy constructor. RooNameReg& instance(); Return reference to singleton instance. void cleanup(); Cleanup function called by atexit() handler installed by RooSentinel; to delete global objects on heap at end of program. const TNamed* constPtr(const char* stringPtr); Return a unique TNamed pointer for given C++ string. const char* constStr(const TNamed* namePtr); Return C++ string corresponding to given TNamed pointer. const TNamed* ptr(const char* stringPtr); Return a unique TNamed pointer for given C++ string. const char* str(const TNamed* ptr); Return C++ string corresponding to given TNamed pointer. RooNameReg(); {}. » Last changed: Thu Nov 3 20:08:45 2011 » Last generated: 2011-11-03 20:08; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooNameReg.html:5999,Inherit,Inheritance,5999,root/html532/RooNameReg.html,https://root.cern,https://root.cern/root/html532/RooNameReg.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Bool_tfAutoexecautoexecute user code command; TStringfCut; TStringfCutAliascut expression and alias; Bool_tfCutEnabledtrue if current cut is active; TStringfNamename of this record; TStringfOptiongraphic option; Bool_tfScanRedirectedredirect switch; TStringfUserCodecommand executed when record is conected; TStringfX; TStringfXAliasX expression and alias; TStringfY; TStringfYAliasY expression and alias; TStringfZ; TStringfZAliasZ expression and alias. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TTVRecord(); TTVRecord default constructor. void ExecuteUserCode(); Execute user-defined code. void FormFrom(TTreeViewer* tv); Populate members from treeviewer tv. void PlugIn(TTreeViewer* tv); Change treeviewer status to this record. void SaveSource(ofstream& out); Save the TTVRecord in a C++ macro file. TTVRecord(). ~TTVRecord(); {}. const char * GetX() const; {return fX;}. const char * GetY() const; {return fY;}. const char * GetZ() const; {return fZ;}. const char * GetName() const; {return fName;}. const char * GetUserCode() const; {return fUserCode;}. Bool_t HasUserCode() const; {return fUserCode.Length() != 0 ? kTRUE : kFALSE;}. Bool_t MustExecuteCode() const; {return fAutoexec;}. void SetAutoexec(Bool_t autoexec = kTRUE); {fAutoexec=autoexec;}. void SetName(const char* name = """"); {fName = name;}. void SetX(const char* x = """", const char* xal = ""-empty-""); {fX = x; fXAlias = xal;}. void SetY(const char* y = """", const char* yal =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTVRecord.html:6292,Inherit,Inheritance,6292,root/html532/TTVRecord.html,https://root.cern,https://root.cern/root/html532/TTVRecord.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. voidChangeState(TRecorderState* newstate, Bool_t deletePreviousState = kTRUE); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TRecorder(const TRecorder&); TRecorder&operator=(const TRecorder&). Data Members; public:. enum EReplayModes { kRealtime; };; enum ERecorderState { kInactive; kRecording; kPaused; kReplaying; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringfFilenameEvents file name. private:. TRecorderState*fRecorderState! Current state of recorder. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TRecorder(); Creates initial INACTIVE state for the recorder. TRecorder(const char* filename, Option_t* option = ""READ""); Creates a recorder with filename to replay or to record,; depending on option (NEW or RECREATE will start recording,; READ will start replaying). ~TRecorder(); Destructor. void Browse(TBrowser* ); Browse the recorder from a ROOT file. This allows to replay a; session from the browser. void Start(const char* filename, Option_t* option = ""RECREATE"", Window_t* w = 0, Int_t winCount = 0); Starts recording events. void Stop(Bool_t guiCommand = kFALSE); Stopps recording events. Bool_t Replay(const char* filename, Bool_t showMouseCursor = kTRUE, TRecorder::EReplayModes mode = kRealtime); Replays events from 'filename'. void Pause(); Pauses replaying. void Resume(); Resumes replaying. void ReplayStop(); Cancells replaying. void ListCmd(const char* filename); Prints out recorded commandline events. void ListGui(const char* f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRecorder.html:8283,Inherit,Inheritance,8283,root/html534/TRecorder.html,https://root.cern,https://root.cern/root/html534/TRecorder.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_tWritePluginMacros(const char* dir, const char* plugin = 0) const; Int_tWritePluginRecords(const char* envFile, const char* plugin = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TPluginManager(const TPluginManager& pm); voidLoadHandlerMacros(const char* path); TPluginManager&operator=(const TPluginManager& pm). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. THashTable*fBasesLoaded! table of base classes already checked or loaded; TList*fHandlerslist of plugin handlers; Bool_tfReadingDirs! true if we are running LoadHandlersFromPluginDirs. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TPluginManager(); Clean up the plugin manager. void LoadHandlersFromEnv(TEnv* env); Load plugin handlers specified in config file, like:; Plugin.TFile: ^rfio: TRFIOFile RFIO ""TRFIOFile(...)""; Plugin.TSQLServer: ^mysql: TMySQLServer MySQL ""TMySQLServer(...)""; +Plugin.TSQLServer: ^pgsql: TPgSQLServer PgSQL ""TPgSQLServer(...)""; The + allows the extension of an already defined resource (see TEnv). void LoadHandlerMacros(const char* path); Load all plugin macros from the specified path/base directory. void LoadHandlersFromPluginDirs(const char* base = 0); Load plugin handlers specified via macros in a list of plugin; directories. The $ROOTSYS/etc/plugins is the default top plugin directory; specified in $ROOTSYS/etc/system.rootrc. The macros must have names; like <BaseClass>/PX0_<PluginClass>.C, e.g.:; TFile/P10_TRFIOFile.C, TSQLServer/P20_TMySQLServer.C, etc.; to allow easy sorting and grouping. If the BaseClass is in a namespace; the directory must have the name NameSpace@@BaseClass as : is a reser",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPluginManager.html:9050,plugin,plugin,9050,root/html528/TPluginManager.html,https://root.cern,https://root.cern/root/html528/TPluginManager.html,6,['plugin'],['plugin']
Modifiability,"t_t_negCountNumber of negative probablities remaining to print; RooAbsReal*_norm! Normalization integral (owned by _normMgr); RooObjCacheManager_normMgrThe cache manager; TString_normRangeNormalization range; static TString_normRangeOverride; RooArgSet*_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_t_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_t_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_t_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_t_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsPdf.html:46957,config,configuration,46957,root/html602/RooAbsPdf.html,https://root.cern,https://root.cern/root/html602/RooAbsPdf.html,8,['config'],['configuration']
Modifiability,"t_tfEventKeySym; TGLContextIdentity*fGLCtxIdentity! Current GL context identity; Int_tfGrabBufferWhich buffer to grab after render.; Bool_tfGrabImageSet to true to store the image.; UChar_t*fGrabbedImageBuffer where image was stored after rendering.; Bool_tfHasTimedOut; Bool_tfHighlightTrue when in highlight.; Bool_tfHighlightOutlineTrue when in highlight-outline.; Bool_tfIsRunning; Int_tfPickRadius; TGLRect*fPickRectangle; GLUquadric*fQuadric; Float_tfRenderScale; Double_tfRenderTimeOut; TGLClip*fSceneClip; TGLSceneInfo*fSceneInfo; Short_tfSceneLOD; Float_tfSceneOLLineW; Short_tfSceneStyle; Float_tfSceneWFLineW; Bool_tfSecSelection; TGLSelectBuffer*fSelectBuffer; Bool_tfSelection; Short_tfShapeLODLOD calculated for current shape.; Float_tfShapePixSizeOnly relevant when not using display lists.; TGLStopwatchfStopwatch; TGLViewerBase*fViewer; TGLClip*fViewerClip; Short_tfViewerLOD; Float_tfViewerOLLineW; Short_tfViewerStyle; Float_tfViewerWFLineW. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLRnrCtx(TGLViewerBase* viewer); Constructor. ~TGLRnrCtx(); Destructor. TGLSceneBase * GetScene(); Return current scene (based on scene-info data). TGLSceneBase & RefScene(); Return current scene (based on scene-info data). Bool_t IsDrawPassFilled() const; Returns true if current render-pass uses filled polygon style. Bool_t HasStopwatchTimedOut(); Check if the stopwatch went beyond the render time limit. void BeginSelection(Int_t x, Int_t y, Int_t r = 3); Setup context for running selection.; x and y are in window coordinates. void EndSelection(Int_t glResult); End selection. TGLRect * GetPickRectangle(); Return current pick rectangle. This is *zero* when; selection is not set. Int_t GetPickRadius(); Return pick radius. If selection is not active it returns 0. void PushColorSet(); Create copy of current color-set on the top of the stack. TGLColorSet& ColorSet(); Return reference to current color-set (top of hte stack). void PopColorS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLRnrCtx.html:5788,Inherit,Inheritance,5788,root/html532/TGLRnrCtx.html,https://root.cern,https://root.cern/root/html532/TGLRnrCtx.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_tfNBaskets! Number of baskets in memory; TStringTNamed::fNameobject identifier; Long64_tfNextBasketEntry! Next entry that will requires us to go to the next basket; Int_tfNleaves! Number of leaves; Int_tfOffsetOffset of this branch; TBranch*fParent! Pointer to parent branch.; Int_tfReadBasket! Current basket number when reading; Long64_tfReadEntry! Current entry number when reading; TBranch::ReadLeaves_tfReadLeaves! Pointer to the ReadLeaves implementation to use.; Bool_tfSkipZip! After being read, the buffer will not be unziped.; Int_tfSplitLevelBranch split level; TStringTNamed::fTitleobject title; Long64_tfTotBytesTotal number of bytes in all leaves before compression; TTree*fTree! Pointer to Tree header; Int_tfWriteBasketLast basket number written; Long64_tfZipBytesTotal number of bytes in all leaves after compression; static Int_tfgCount! branch counter; static TBranch::EStatusBitskAutoDelete; static TBranch::EStatusBitskDoNotUseBufferMap. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBranch(); Default constructor. Used for I/O by default. TBranch(TTree* tree, const char* name, void* address, const char* leaflist, Int_t basketsize = 32000, Int_t compress = -1); Create a Branch as a child of a Tree. * address is the address of the first item of a structure; or the address of a pointer to an object (see example in TTree.cxx).; * leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a; slash (/). The variable type must be 1 character. (Characters; after the first are legal and will be appended to the visible; name of the leaf, but have no effect.) If no type is given, the; type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is; assumed of type F by default. The list of currently supported; types is given below:; - C : a character string terminated ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBranch.html:12934,Inherit,Inheritance,12934,root/html602/TBranch.html,https://root.cern,https://root.cern/root/html602/TBranch.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t_tfNCutsnumber of grid point in variable cut scans; Int_tfNNodesBeforePruningremember this one (in case of pruning, it allows to monitor the before/after; Double_tfNodePurityLimitpurity limit to decide whether a node is signal; UInt_tfNvarsnumber of variables used to separate S and B; TMVA::DecisionTree::EPruneMethodfPruneMethodmethod used for prunig; Double_tfPruneStrengtha parameter to set the ""amount"" of pruning..needs to be adjusted; Bool_tfRandomisedTreechoose at each node splitting a random set of variables; TMVA::RegressionVariance*fRegTypethe separation crition used in Regression; TMVA::SeparationBase*fSepTypethe separation crition; UInt_tfSigClassclass which is treated as signal when building the tree; Int_tfTreeIDjust an ID number given to the tree.. makes debugging easier as tree knows who he is.; Bool_tfUseExclusiveVarsindividual variables already used in fisher criterium are not anymore analysed individually for node splitting; Bool_tfUseFisherCutsuse multivariate splits using the Fisher criterium; Int_tfUseNvarsthe number of variables used in randomised trees;; Bool_tfUsePoissonNvarsuse ""fUseNvars"" not as fixed number but as mean of a possion distr. in each split; Bool_tfUseSearchTreecut scan done with binary trees or simple event loop.; vector<Double_t>fVariableImportancethe relative importance of the different variables; static const Int_tfgDebugLeveldebug level determining some printout/control plots etc.; static const Int_tfgRandomSeedset nonzero for debugging and zero for random seeds. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; DecisionTree(); default constructor using the GiniIndex as separation criterion,; no restrictions on minium number of events in a leave note or the; separation gain in the node splitting. DecisionTree(TMVA::SeparationBase* sepType, Float_t minSize, Int_t nCuts, TMVA::DataSetInfo* = __null, UInt_t cls = 0, Bool_t randomisedTree = kFALSE, Int_t useNvars = 0, Bool_t usePoissonNva",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__DecisionTree.html:7952,variab,variables,7952,root/html602/TMVA__DecisionTree.html,https://root.cern,https://root.cern/root/html602/TMVA__DecisionTree.html,8,['variab'],['variables']
Modifiability,"t_tfNSpectatorsnumber of spectators to be transformed; UInt_tfNTargetsnumber of targets to be transformed; UInt_tfNVariablesnumber of variables to be transformed; UInt_tfNVarsnumber of variables; Bool_tfNormalisenormalise input variables; Bool_tfSortGetif true, sort the variables into the order as defined by the user at the var definition; vector<TMVA::VariableInfo>fSpectatorsevent spectators [saved to weight file --> TODO ]; vector<TMVA::VariableInfo>fTargetsevent targets [saved to weight file --> TODO ]; TStringfTransformNamename of transformation; Bool_tfUseSignalTransformtrue if transformation bases on signal data; TMVA::Types::EVariableTransformfVariableTransformDecorrelation, PCA, etc.; Bool_tfVariableTypesAreCountedtrue if variable types have been counted already; vector<TMVA::VariableInfo>fVariablesevent variables [saved to weight file]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableTransformBase(TMVA::DataSetInfo& dsi, TMVA::Types::EVariableTransform tf, const TString& trfName); standard constructor. ~VariableTransformBase(). void SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); select the variables/targets/spectators which serve as input to the transformation. Bool_t GetInput(const TMVA::Event* event, vector<Float_t>& input, vector<Char_t>& mask, Bool_t backTransform = kFALSE) const; select the values from the event. void SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; select the values from the event. void CountVariableTypes(UInt_t& nvars, UInt_t& ntgts, UInt_t& nspcts) const; count variables, targets and spectators. void CalcNorm(const vector<const TMVA::Event*>& ); TODO --> adapt to variable,target,spectator selection; method to calculate minimum, maximum, mean, and RMS for all; variables used in the MVA. std::vector<TString>* GetTransformationStrings(Int_t cls) const; TODO -",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableTransformBase.html:9613,Variab,VariableTransformBase,9613,root/html602/TMVA__VariableTransformBase.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableTransformBase.html,2,['Variab'],['VariableTransformBase']
Modifiability,"t_tfNodeMinEventsmin number of events in node; Double_tfNodePurityLimitpurity limit for sig/bkg nodes; Bool_tfPruneBeforeBoostflag to prune before boosting; TMVA::DecisionTree::EPruneMethodfPruneMethodmethod used for prunig; TStringfPruneMethodSprune method option String; Double_tfPruneStrengtha parameter to set the ""amount"" of pruning..needs to be adjusted; Bool_tfRandomisedTreeschoose a random subset of possible cut variables at each node during training; Bool_tfRenormByClassindividually re-normalize each event class to the original size after boosting; map<TMVA::Event*,std::vector<double> >fResidualsindividual event residuals for gradient boost; Double_tfSampleFractionfraction of events used for bagged grad boost; Double_tfSampleSizeFractionrelative size of bagged event sample to original sample size; TMVA::SeparationBase*fSepTypethe separation used in node splitting; TStringfSepTypeSthe separation (option string) used in node splitting; Double_tfShrinkagelearning rate for gradient boost;; vector<TMVA::Event*>fSubSamplesubsample for bagged grad boost; Double_tfSumOfWeightssum of all event weights; Double_tfTransitionPointbreak-down point for gradient regression; Bool_tfUseExclusiveVarsindividual variables already used in fisher criterium are not anymore analysed individually for node splitting; Bool_tfUseFisherCutsuse multivariate splits using the Fisher criterium; UInt_tfUseNTrainEventsnumber of randomly picked training events used in randomised (and bagged) trees; UInt_tfUseNvarsthe number of variables used in the randomised tree splitting; Bool_tfUsePoissonNvarsuse ""fUseNvars"" not as fixed number but as mean of a possion distr. in each split; Bool_tfUseWeightedTreesuse average classification from the trees, or have the individual trees trees in the forest weighted (e.g. log(boostweight) from AdaBoost; Bool_tfUseYesNoLeafuse sig or bkg classification in leave nodes or sig/bkg; vector<TMVA::Event*>fValidationSamplethe Validation events; vector<Double_t>fVariable",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodBDT.html:22019,variab,variables,22019,root/html528/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodBDT.html,3,['variab'],['variables']
Modifiability,"t_tfNstepsconvergence criteria: if no improvements > fConvCrit was achieved within the last fNsteps: cycle has ""converged""; Int_tfPopSizenumber of individuals to start with; Double_tfSC_factor... with fSC_factor; if there were less improvements: divide by that factor; if there were exactly fSC_rate improvements, dont change anything; Int_tfSC_rate... fSC_rate improvements, than multiply the sigma of the gaussion which defines how the random numbers are generated ...; Int_tfSC_stepsregulates how strong the mutations for the coordinates are: if within fSC_steps there were more than...; Int_tfSaveBestFromCyclestore the best individuals from one cycle (these are included as ""hints"" in the last cycle of GA calculation); Int_tfSaveBestFromGenerationstore the best individuals from one generation (these are included as ""hints"" in the last cycle of GA calculation); UInt_tfSeedSeed for the random generator (0 takes random seeds); Bool_tfTrimtake care, that the number of individuals is less fPopSize (trimming is done after the fitness of the individuals is assessed). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GeneticFitter(TMVA::IFitterTarget& target, const TString& name, const vector<TMVA::Interval*>& ranges, const TString& theOption); constructor. void DeclareOptions(); declare GA options. void SetParameters(Int_t cycles, Int_t nsteps, Int_t popSize, Int_t SC_steps, Int_t SC_rate, Double_t SC_factor, Double_t convCrit); set GA configuration parameters. Double_t Run(vector<Double_t>& pars); Execute fitting. virtual ~GeneticFitter(); {}. Double_t NewFitness(Double_t oldF, Double_t newF); { return oldF + newF; }. » Author: Peter Speckmayer » Copyright (c) 2005: *; » Last changed: root/tmva $Id: GeneticFitter.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2010-09-23 20:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__GeneticFitter.html:8830,config,configuration,8830,root/html528/TMVA__GeneticFitter.html,https://root.cern,https://root.cern/root/html528/TMVA__GeneticFitter.html,1,['config'],['configuration']
Modifiability,"t_t ; colnum). Get a real number-typed column from a table HDU given its column index (>=0). ; Definition at line 1329 of file TFITS.cxx. ◆ GetTabStringColumn() [1/2]. TObjArray * TFITSHDU::GetTabStringColumn ; (; const char * ; colname). Get a string-typed column from a table HDU given its name. ; Definition at line 1296 of file TFITS.cxx. ◆ GetTabStringColumn() [2/2]. TObjArray * TFITSHDU::GetTabStringColumn ; (; Int_t ; colnum). Get a string-typed column from a table HDU given its column index (>=0). ; Definition at line 1266 of file TFITS.cxx. ◆ GetTabVarLengthVectorCell() [1/2]. TArrayD * TFITSHDU::GetTabVarLengthVectorCell ; (; Int_t ; rownum, . const char * ; colname . ). Get the variable-length array contained in a cell given by (row>=0, column name) ; Definition at line 1606 of file TFITS.cxx. ◆ GetTabVarLengthVectorCell() [2/2]. TArrayD * TFITSHDU::GetTabVarLengthVectorCell ; (; Int_t ; rownum, . Int_t ; colnum . ). Get the variable-length array contained in a cell given by (row>=0, column name) ; Definition at line 1583 of file TFITS.cxx. ◆ IsA(). TClass * TFITSHDU::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 145 of file TFITS.h. ◆ LoadHDU(). Bool_t TFITSHDU::LoadHDU ; (; TString & ; filepath_filter). protected . Load HDU from fits file satisfying the specified filter. ; Returns kTRUE if success. Otherwise kFALSE. If filter == """" then the primary array is selected ; Definition at line 237 of file TFITS.cxx. ◆ Print(). void TFITSHDU::Print ; (; const Option_t * ; opt = """"); const. override . Print metadata. ; Currently supported options:. """" : print HDU record data; ""F"" : print FITS file's extension names, numbers and types; ""F+"": print FITS file's extension names and types and their record data; ""T"" : print column information when HDU is a table; ""T+"" : print full table (columns header and rows) . Definition at line 858 of file TFITS.cxx. ◆ PrintColumnInfo(). void TFI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFITSHDU.html:23428,variab,variable-length,23428,doc/master/classTFITSHDU.html,https://root.cern,https://root.cern/doc/master/classTFITSHDU.html,1,['variab'],['variable-length']
Modifiability,"t_t ; n). inline . Definition at line 200 of file TMultiDimFit.h. ◆ SetMaxTerms(). void TMultiDimFit::SetMaxTerms ; (; Int_t ; terms). inline . Definition at line 201 of file TMultiDimFit.h. ◆ SetMinAngle(). void TMultiDimFit::SetMinAngle ; (; Double_t ; ang = 1). Set the min angle (in degrees) between a new candidate function and the subspace spanned by the previously accepted functions. ; See also class description ; Definition at line 2393 of file TMultiDimFit.cxx. ◆ SetMinRelativeError(). void TMultiDimFit::SetMinRelativeError ; (; Double_t ; error). Set the acceptable relative error for when sum of square residuals is considered minimized. ; For a full account, refer to the class description ; Definition at line 2458 of file TMultiDimFit.cxx. ◆ SetPowerLimit(). void TMultiDimFit::SetPowerLimit ; (; Double_t ; limit = 1e-3). Set the user parameter for the function selection. ; The bigger the limit, the more functions are used. The meaning of this variable is defined in the class description ; Definition at line 2433 of file TMultiDimFit.cxx. ◆ SetPowers(). void TMultiDimFit::SetPowers ; (; const Int_t * ; powers, . Int_t ; terms . ). virtual . Define a user function. ; The input array must be of the form (p11, ..., p1N, ... ,pL1, ..., pLN) Where N is the dimension of the data sample, L is the number of terms (given in terms) and the first number, labels the term, the second the variable. More information is given in the class description ; Definition at line 2413 of file TMultiDimFit.cxx. ◆ Streamer(). void TMultiDimFit::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TMultiDimFit::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 207 of file TMultiDimFit.h. ◆ TestFunction(). Bool_t TMultiDimFit::TestFunction ; (; Double_t ; squareResidual, . Double_t ; dResidur . ). protectedvirtual . PRIVATE METHOD: Test whether the currently ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiDimFit.html:59575,variab,variable,59575,doc/master/classTMultiDimFit.html,https://root.cern,https://root.cern/doc/master/classTMultiDimFit.html,1,['variab'],['variable']
Modifiability,"t_t GetNNodes () const;  ; Node * GetRightDaughter (Node *n);  get right daughter node current node ""n"" ;  ; UInt_t GetTotalTreeDepth () const;  ; virtual void Print (std::ostream &os) const;  recursively print the tree ;  ; virtual void Read (std::istream &istr, UInt_t tmva_Version_Code=262657);  Read the binary tree from an input stream. ;  ; virtual void ReadXML (void *node, UInt_t tmva_Version_Code=262657);  read attributes from XML ;  ; void SetRoot (Node *r);  ; void SetTotalTreeDepth (Int_t depth);  ; void SetTotalTreeDepth (Node *n=nullptr);  descend a tree to find all its leaf nodes, fill max depth reached in the tree at the same time. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static DecisionTree * CreateFromXML (void *node, UInt_t tmva_Version_Code=262657);  re-create a new tree (decision tree or search tree) from XML ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::BinaryTree; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions; Double_t SamplePurity (EventList eventSample);  calculates the purity S/(S+B) of a given event sample ;  . Private Attributes; Types::EAnalysisType fAnalysisType;  kClassification(=0=false) or kRegression(=1=true) ;  ; DataSetInfo * fDataSetInfo;  ; UInt_t fMaxDepth;  max depth ;  ; Double_t fMinLinCorrForFisher;  the minimum linear correlation between two variables demanded for use in fisher criterium in node splitting ;  ; Double_t fMinNodeSize;  min fraction of training events in node ;  ; Double_t fMinSepGain;  min number of separation gain to perform node splitting ;  ; Double_t fMinSize;  min number of events in node ;  ; TRandom3 * fMyTrandom;  random number generator for randomi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html:9767,inherit,inherited,9767,doc/master/classTMVA_1_1DecisionTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html,1,['inherit'],['inherited']
Modifiability,"t_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TObject * fActFileNext;  ; TList * fActFiles;  ; Long64_t fEvents;  ; Int_t fExtSlaveCnt;  ; TList * fFiles;  ; TSortedList * fFilesToProcess;  ; Int_t fMySlaveCnt;  ; TString fNodeName;  ; Long64_t fProcessed;  ; Int_t fRunSlaveCnt;  ; Int_t fStrategy;  ; TObject * fUnAllocFileNext;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html:9256,inherit,inherited,9256,doc/master/classTPacketizerAdaptive_1_1TFileNode.html,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html,1,['inherit'],['inherited']
Modifiability,"t_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox;  TAttBBox ();  ; virtual ~TAttBBox ();  ; Float_t * AssertBBox ();  ; virtual void ComputeBBox ()=0;  ; Float_t * GetBBox ();  ; Bool_t GetBBoxOK () const;  ; TAttBBox & operator= (const TAttBBox &tab);  ; void ResetBBox ();  ; void SetupBBoxCube (Float_t extent, Float_t x, Float_t y, Float_t z);  Setup bounding box as cube with given extent and center position. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TEveProjectable;  TEveProjectable ();  Constructor. ;  ; virtual ~TEveProjectable ();  Destructor. ;  ; virtual void AddProjected (TEveProjected *p);  ; virtual void AddProjectedsToSet (std::set< TEveElement * > &set);  Add the projected elements to the set, dyn-casting them to TEveElement. ;  ; virtual void AnnihilateProjecteds ();  Optimized destroy of projected elements with condition there is only one parent for projected element. ;  ; ProjList_i BeginProjecteds ();  ; virtual void ClearProjectedList ();  ; ProjList_i EndProjecteds ();  ; virtual Bool_t HasProjecteds () const;  ; virtual void PropagateMainColor (Color_t color, Color_t old_color);  Set main color of projecteds if their color is the same as old_color. ;  ; virtual void PropagateMainTransparency (Char_t t, Char_t old_t);  Set main transparency of projecteds if their transparency is the same as the old one. ;  ; virtual void PropagateRenderState (Bool_t rnr_self, Bool_t rnr_children);  Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCaloViz.html:29202,inherit,inherited,29202,doc/master/classTEveCaloViz.html,https://root.cern,https://root.cern/doc/master/classTEveCaloViz.html,1,['inherit'],['inherited']
Modifiability,"t_t fKeylen;  Number of bytes for the key itself. ;  ; Int_t fLeft;  Number of bytes left in current segment. ;  ; TDirectory * fMotherDir;  !pointer to mother directory ;  ; Int_t fNbytes;  Number of bytes for the object on file. ;  ; Int_t fObjlen;  Length of uncompressed object in bytes. ;  ; UShort_t fPidOffset;  !Offset to be added to the pid index in this key/buffer. This is actually saved in the high bits of fSeekPdir ;  ; Long64_t fSeekKey;  Location of object on file. ;  ; Long64_t fSeekPdir;  Location of parent directory on file. ;  ; Int_t fVersion;  Key version identifier. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Types; enum  EStatusBits { kIsDirectoryFile = (1ULL << ( 14 )); , kReproducible = (1ULL << ( 15 )); };  . Private Member Functions;  TKey (const TKey &)=delete;  ; TKey & operator= (const TKey &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TKey.h>. Inheritance diagram for TKey:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TKey::EStatusBits. private . EnumeratorkIsDirectoryFile ; kReproducible . Definition at line 31 of file TKey.h. Constructor & Destructor Documentation.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTKey.html:16443,inherit,inherited,16443,doc/master/classTKey.html,https://root.cern,https://root.cern/doc/master/classTKey.html,1,['inherit'],['inherited']
Modifiability,"t_t fMinNodeEvents;  min number of events in node ;  ; Float_t fMinNodeSize;  min percentage of training events in node ;  ; TString fMinNodeSizeS;  string containing min percentage of training events in node ;  ; Int_t fNCuts;  grid used in cut applied in node splitting ;  ; Double_t fNodePurityLimit;  purity limit for sig/bkg nodes ;  ; Bool_t fPruneBeforeBoost;  ancient variable, only needed for ""CompatibilityOptions"" ;  ; DecisionTree::EPruneMethod fPruneMethod;  method used for pruning ;  ; TString fPruneMethodS;  prune method option String ;  ; Double_t fPruneStrength;  a parameter to set the ""amount"" of pruning..needs to be adjusted ;  ; Bool_t fRandomisedTrees;  choose a random subset of possible cut variables at each node during training ;  ; SeparationBase * fSepType;  the separation used in node splitting ;  ; TString fSepTypeS;  the separation (option string) used in node splitting ;  ; DecisionTree * fTree;  the decision tree ;  ; Int_t fUseNvars;  the number of variables used in the randomised tree splitting ;  ; Bool_t fUsePoissonNvars;  fUseNvars is used as a poisson mean, and the actual value of useNvars is at each step drawn form that distribution ;  ; Bool_t fUseYesNoLeaf;  use sig or bkg classification in leave nodes or sig/bkg ;  ; std::vector< Double_t > fVariableImportance;  the relative importance of the different variables ;  . Static Private Attributes; static const Int_t fgDebugLevel = 0;  debug level determining some printout/control plots etc. ;  . Additional Inherited Members;  Public Types inherited from TMVA::MethodBase; enum  EWeightFileType { kROOT =0; , kTEXT; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodDT.html:27767,variab,variables,27767,doc/master/classTMVA_1_1MethodDT.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodDT.html,3,['variab'],['variables']
Modifiability,"t_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Friends; class TGMdiMainFrame;  . Additional Inherited Members;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiDecorFrame.html:30366,inherit,inherited,30366,doc/master/classTGMdiDecorFrame.html,https://root.cern,https://root.cern/doc/master/classTGMdiDecorFrame.html,3,['inherit'],['inherited']
Modifiability,"t_t fNetOpt {0};  Network options. ;  ; TString fOpt;  Options. ;  . Friends; class TFile;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TFile.h>. Inheritance diagram for TFileOpenHandle:. This browser is not able to show SVG: try Firefox, Chrome, Safari, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileOpenHandle.html:10423,inherit,inherited,10423,doc/master/classTFileOpenHandle.html,https://root.cern,https://root.cern/doc/master/classTFileOpenHandle.html,2,['inherit'],['inherited']
Modifiability,"t_t fNumBins = 0;  set the number of bins to create for each axis when constructing the interval ;  ; Int_t fNumBurnInSteps = 0;  number of iterations to discard as burn-in, starting from the first ;  ; Int_t fNumIters = 0;  number of iterations to run metropolis algorithm ;  ; RooAbsPdf * fPdf;  pointer to common PDF (owned by the workspace) ;  ; RooArgSet fPOI;  parameters of interest for interval ;  ; RooAbsPdf * fPriorPdf;  pointer to prior PDF (owned by the workspace) ;  ; ProposalFunction * fPropFunc;  Proposal function for MCMC integration. ;  ; double fSize = -1;  size of the test (eg. specified rate of Type I error) ;  ; bool fUseKeys = false;  whether to use kernel estimation to determine interval ;  ; bool fUseSparseHist = false;  whether to use sparse histogram (if using hist at all) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <RooStats/MCMCCalculator.h>. Inheritance diagram for RooStats::MCMCCalculator:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ MCMCCalculator() [1/2]. MCMCCalculator::MCMCCalculator ; (; ). default constructor ; Definition at line 59 of file MCMCCalcu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1MCMCCalculator.html:17076,inherit,inherited,17076,doc/master/classRooStats_1_1MCMCCalculator.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1MCMCCalculator.html,1,['inherit'],['inherited']
Modifiability,"t_t fP2oldx [3];  ; Float_t fP2oldy [3];  ; Float_t fP3oldx [3];  ; Float_t fP3oldy [3];  ; Float_t fP4oldx [3];  ; Float_t fP4oldy [3];  ; Float_t fP5oldx [3];  ; Float_t fP5oldy [3];  ; Float_t fP6oldx [3];  ; Float_t fP6oldy [3];  ; Float_t fP7oldx [3];  ; Float_t fP7oldy [3];  ; Float_t fP8oldx [3];  ; Float_t fP8oldy [3];  ; Int_t fPx1old;  ; Int_t fPx2old;  ; Int_t fPy1old;  ; Int_t fPy2old;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileNam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2Editor.html:40975,inherit,inherited,40975,doc/master/classTH2Editor.html,https://root.cern,https://root.cern/doc/master/classTH2Editor.html,1,['inherit'],['inherited']
Modifiability,"t_t fPageFormat;  Page format (A4, Letter etc ...) ;  ; Bool_t fPageNotEmpty;  True if the current page is not empty. ;  ; Int_t fPageOrientation;  Page orientation (Portrait, Landscape) ;  ; Bool_t fRange;  True when a range has been defined. ;  ; Float_t fRed;  Per cent of red. ;  ; Int_t fStartStream;  ; Int_t fType;  Workstation type used to know if the PDF is open. ;  ; Float_t fXsize;  Page size along X. ;  ; Float_t fYsize;  Page size along Y. ;  ;  Protected Attributes inherited from TVirtualPS; char * fBuffer {nullptr};  ; const char * fImplicitCREsc {nullptr};  ; Int_t fLenBuffer {0};  ; Int_t fNByte {0};  ; Bool_t fPrinted {kFALSE};  ; Int_t fSizBuffer {0};  ; std::ofstream * fStream {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Static Protected Attributes; static Int_t fgLineCap = 0;  Appearance of line caps. ;  ; static Int_t fgLineJoin = 0;  Appearance of joining lines. ;  ; static Bool_t fgObjectIsOpen = kFALSE;  Indicates if an object is open. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPDF.html:25267,inherit,inherited,25267,doc/master/classTPDF.html,https://root.cern,https://root.cern/doc/master/classTPDF.html,1,['inherit'],['inherited']
Modifiability,"t_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Friends; class TGMdiMainFrame;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiMenuBar.html:27878,inherit,inherited,27878,doc/master/classTGMdiMenuBar.html,https://root.cern,https://root.cern/doc/master/classTGMdiMenuBar.html,1,['inherit'],['inherited']
Modifiability,"t_t fXl;  Max width of all menu entries. ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Static Protected Attributes; static const TGFont * fgDefaultFont = nullptr;  ; static const TGGC * fgDefaultGC = nullptr;  ; static const TGGC * fgDefaultSelectedBackgroundGC = nullptr;  ; static const TGGC * fgDefaultSelectedGC = nullptr;  ; static const TGFont * fgHilightFont = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGPopupMenu.html:30324,inherit,inherited,30324,doc/master/classTGPopupMenu.html,https://root.cern,https://root.cern/doc/master/classTGPopupMenu.html,1,['inherit'],['inherited']
Modifiability,"t_t fXl;  Max width of all menu entries. ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TContextMenuImp; TContextMenu * fContextMenu {nullptr};  ;  Static Protected Attributes inherited from TGPopupMenu; static const TGFont * fgDefaultFont = nullptr;  ; static const TGGC * fgDefaultGC = nullptr;  ; static const TGGC * fgDefaultSelectedBackgroundGC = nullptr;  ; static const TGGC * fgDefaultSelectedGC = nullptr;  ; static const TGFont * fgHilightFont = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootContextMenu.html:34374,inherit,inherited,34374,doc/master/classTRootContextMenu.html,https://root.cern,https://root.cern/doc/master/classTRootContextMenu.html,1,['inherit'],['inherited']
Modifiability,"t_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Friends; class TGTable;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TCla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTableCell.html:28114,inherit,inherited,28114,doc/master/classTGTableCell.html,https://root.cern,https://root.cern/doc/master/classTGTableCell.html,1,['inherit'],['inherited']
Modifiability,"t_xmaxValue of limits; Double_t_xminValue of limits. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerIntegrator(RooNumIntFactory& fact); Register RooImproperIntegrator1D, its parameters and capabilities with RooNumIntFactory. RooImproperIntegrator1D(); Default constructor. RooImproperIntegrator1D(const RooAbsFunc& function); Constructor with function binding. The integration range is taken from the; definition in the function binding. RooImproperIntegrator1D(const RooAbsFunc& function, const RooNumIntConfig& config); Constructor with function binding and configuration object. The integration range is taken; from the definition in the function binding. RooImproperIntegrator1D(const RooAbsFunc& function, Double_t xmin, Double_t xmax, const RooNumIntConfig& config); Constructor with function binding, definition of integration range and configuration object. RooAbsIntegrator* clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; Return clone of integrator with given function and configuration. Needed by RooNumIntFactory. void initialize(const RooAbsFunc* function = 0); Initialize the integrator, construct and initialize subintegrators. ~RooImproperIntegrator1D(); Destructor. Bool_t setLimits(Double_t* xmin, Double_t* xmax); Change our integration limits. Return kTRUE if the new limits are; ok, or otherwise kFALSE. Always returns kFALSE and does nothing; if this object was constructed to always use our integrand's limits. Bool_t checkLimits() const; Check if the limits are valid. For this integrator all limit configurations; are valid, but if the limits change between two calculate() calls it; may be necessary to reconfigure (e.g. if an open ended range becomes; a closed range. Double_t integral(const Double_t* yvec = 0); Calculate the integral at the given parameter values of the function binding. RooImproperIntegrator1D(). Bool_t setUseIntegrandLimits(Bool_t flag); {_useIntegrandLimits = flag ; r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooImproperIntegrator1D.html:9170,config,config,9170,root/html602/RooImproperIntegrator1D.html,https://root.cern,https://root.cern/root/html602/RooImproperIntegrator1D.html,8,['config'],"['config', 'configuration']"
Modifiability,"ta Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-06-30 14:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TClaArrayProxy_-p0TArrayType_bool_0___.html:4848,Inherit,Inheritance,4848,root/html602/ROOT__TClaArrayProxy_-p0TArrayType_bool_0___.html,https://root.cern,https://root.cern/root/html602/ROOT__TClaArrayProxy_-p0TArrayType_bool_0___.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ta Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__TClaArrayProxy_-p0TArrayType_bool_0___.html:4848,Inherit,Inheritance,4848,root/html604/ROOT__TClaArrayProxy_-p0TArrayType_bool_0___.html,https://root.cern,https://root.cern/root/html604/ROOT__TClaArrayProxy_-p0TArrayType_bool_0___.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ta Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-06-30 14:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TClaArrayProxy_-p0TArrayType_char_0___.html:4848,Inherit,Inheritance,4848,root/html602/ROOT__TClaArrayProxy_-p0TArrayType_char_0___.html,https://root.cern,https://root.cern/root/html602/ROOT__TClaArrayProxy_-p0TArrayType_char_0___.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ta Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> >& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__TClaArrayProxy_-p0TArrayType_char_0___.html:4848,Inherit,Inheritance,4848,root/html604/ROOT__TClaArrayProxy_-p0TArrayType_char_0___.html,https://root.cern,https://root.cern/root/html604/ROOT__TClaArrayProxy_-p0TArrayType_char_0___.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ta Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-06-30 14:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TClaArrayProxy_-p0TArrayType_long_0___.html:4848,Inherit,Inheritance,4848,root/html602/ROOT__TClaArrayProxy_-p0TArrayType_long_0___.html,https://root.cern,https://root.cern/root/html602/ROOT__TClaArrayProxy_-p0TArrayType_long_0___.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ta Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> >& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__TClaArrayProxy_-p0TArrayType_long_0___.html:4848,Inherit,Inheritance,4848,root/html604/ROOT__TClaArrayProxy_-p0TArrayType_long_0___.html,https://root.cern,https://root.cern/root/html604/ROOT__TClaArrayProxy_-p0TArrayType_long_0___.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ta Members; public:. enum EConfigureNotifyType { kCNMove; kCNResize; kCNMoveResize; kCNFilter; };; enum ERootAtoms { kWM_DELETE_WINDOW; kROOT_MESSAGE; };; enum TRecEvent::ERecEventType { kCmdEvent; kGuiEvent; kExtraEvent; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. UInt_tfCodeKey or button code; Int_tfCountIf non-zero, at least this many more exposes; Int_tfFormatNext fields only used by kClientMessageEvent; Handle_tfHandleGeneral resource handle (used for atoms or windows); UInt_tfHeightHeight of exposed area; Window_tfMaskedIf non-zero, event recorded in HandleMaskEvent(); Bool_tfSendEventTrue if event came from SendEvent; UInt_tfStateKey or button mask; Time_tfTimeTime event occured in ms; EGEventTypefTypeType of event (see EGEventType); Long_tfUser[5]5 longs can be used by client message events; UInt_tfWidthWidth of exposed area; Window_tfWindowWindow ID which reported event is relative to; Int_tfXPointer x coordinate in event window; Int_tfXRootx coordinate relative to root; Int_tfYPointer y coordinate in event window; Int_tfYRooty coordinate relative to root. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void ReplayEvent(Bool_t showMouseCursor = kTRUE); Replays stored GUI event. Event_t * CreateEvent(TRecGuiEvent* ge); Converts TRecGuiEvent type to Event_t type. ERecEventType GetType() const; Returns what kind of event it stores. » Author: Katerina Opocenska 11/09/2008 » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: TRecorder.h 35206 2010-09-08 14:01:27Z bellenot $ » Last generated: 2011-11-03 20:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRecGuiEvent.html:8704,Inherit,Inheritance,8704,root/html532/TRecGuiEvent.html,https://root.cern,https://root.cern/root/html532/TRecGuiEvent.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ta Members; public:. enum TGLLogicalShape::ELODAxes { kLODAxesNone; kLODAxesX; kLODAxesY; kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; Bool_tfMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!). private:. static TMapfgGLClassMap. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t ShouldDLCache(const TGLRnrCtx& rnrCtx) const; Decide if display-list should be used for this pass rendering,; as determined by rnrCtx. void UpdateBoundingBox(); Update bounding box from external source.; We call abstract SetBBox() and propagate the change to all; attached physicals. Bool_t SetModelCheckClass(TObject* obj, TClass* cls); Checks if obj is of proper class and sets the model.; Protected helper for subclasses.; Most sub-classes use exception-throwing SetModelDynCast() instead. void SetAxisAlignedBBox(Float_t xmin, Float_t xmax, Float_t ymin, Float_t ymax, Float_t zmin, Float_t zmax); Set axis-aligned bounding-box.; Protected helper for subclasses. void SetAxisAlignedBBox(const Float_t* p); Set axis-aligned bounding-box.; Protected helper for subclasses. TClass* SearchGLRenderer(TClass* cls); Recursively search cls and its base classes for a GL-renderer; class. TClass* GetGLRenderer(TClass* isa); Return direct-renderin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLObject.html:4267,Inherit,Inheritance,4267,root/html532/TGLObject.html,https://root.cern,https://root.cern/root/html532/TGLObject.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ta Members; public:. enum { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tfDimensionDimension of the current expression; TStringfInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*fManager; Int_tfMultiplicityIndicator of the variability of the size of entries; Bool_tfObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TTreeFormula*fSelectPointer to selection formula; TStringfSelection; TStatus*fStatus; Long64_tTSelector::fStatusSelector status; TTree*fTree; TTreeDrawArgsParserfTreeDrawArgsParser; TTreeFormula*fVar[4]Pointer to variable formula; Double_tfWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TProofDraw(); Destructor. void Init(TTree* ); Init the tree. Bool_t Notify(); Called when a new tree is loaded. void Begin(TTree* ); Executed by the client before processing. void SlaveBegin(TTree* ); Executed by each slave before processing. void FillWeight(); Get weight from input list, if any. Bool_t ProcessSingle(Long64_t , Int_t ); Processes a single variable from an entry. Bool_t Process(Long64_t ); Executed for each entry. void SlaveTerminate(void); Executed by each slave after the processing has finished,; before returning the results to the client. void Terminate(void); Executed by the client after getting the processing retults. void ClearFormula(); Delete internal buffers. void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofDraw.html:7412,variab,variable,7412,root/html534/TProofDraw.html,https://root.cern,https://root.cern/root/html534/TProofDraw.html,2,['variab'],['variable']
Modifiability,"ta collection. ; Definition at line 530 of file RooAbsData.cxx. ◆ reduce() [4/5]. RooFit::OwningPtr< RooAbsData > RooAbsData::reduce ; (; const RooCmdArg & ; arg1, . const RooCmdArg & ; arg2 = {}, . const RooCmdArg & ; arg3 = {}, . const RooCmdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {}, . const RooCmdArg & ; arg7 = {}, . const RooCmdArg & ; arg8 = {} . ); const. Create a reduced copy of this dataset. ; The caller takes ownership of the returned dataset; The following optional named arguments are accepted . SelectVars(const RooArgSet& vars) Only retain the listed observables in the output dataset . Cut(const char* expression) Only retain event surviving the given cut expression. . Cut(const RooFormulaVar& expr) Only retain event surviving the given cut formula. . CutRange(const char* name) Only retain events inside range with given name. Multiple CutRange arguments may be given to select multiple ranges. Note that this will also consider the variables that are not selected by SelectVars(). . EventRange(int lo, int hi) Only retain events with given sequential event numbers . Name(const char* name) Give specified name to output dataset . Title(const char* name) Give specified title to output dataset . Definition at line 399 of file RooAbsData.cxx. ◆ reduce() [5/5]. RooFit::OwningPtr< RooAbsData > RooAbsData::reduce ; (; const RooFormulaVar & ; cutVar); const. Create a subset of the data set by applying the given cut on the data points. ; The 'cutVar' formula variable is used to select the subset of data points to be retained in the reduced data collection. ; Definition at line 485 of file RooAbsData.cxx. ◆ reduceEng(). virtual std::unique_ptr< RooAbsData > RooAbsData::reduceEng ; (; const RooArgSet & ; varSubset, . const RooFormulaVar * ; cutVar, . const char * ; cutRange = nullptr, . std::size_t ; nStart = 0, . std::size_t ; = std::numeric_limits< std::size_t >::max() . ); const. protectedpure virtual . Implemented in RooDataHis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsData.html:64285,variab,variables,64285,doc/master/classRooAbsData.html,https://root.cern,https://root.cern/doc/master/classRooAbsData.html,1,['variab'],['variables']
Modifiability,"ta member is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::rep_type. Function Members (Methods); public:. ~MatRepStd<double,3,4>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; ROOT::Math::MatRepStd<double,3,4>MatRepStd<double,3,4>(); ROOT::Math::MatRepStd<double,3,4>MatRepStd<double,3,4>(const ROOT::Math::MatRepStd<double,3,4>&); const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<double,3,4>&operator=(const ROOT::Math::MatRepStd<double,3,4>&); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. doublefArray[12]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<double,3,4>& ). » Last changed: root/smatrix:$Id: MatrixRepresentationsStatic.h 34964 2010-08-24 13:58:51Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__MatRepStd_double_3_4_.html:1706,Inherit,Inheritance,1706,root/html532/ROOT__Math__MatRepStd_double_3_4_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__MatRepStd_double_3_4_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ta member is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::rep_type. Function Members (Methods); public:. ~MatRepStd<double,4,3>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; ROOT::Math::MatRepStd<double,4,3>MatRepStd<double,4,3>(); ROOT::Math::MatRepStd<double,4,3>MatRepStd<double,4,3>(const ROOT::Math::MatRepStd<double,4,3>&); const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<double,4,3>&operator=(const ROOT::Math::MatRepStd<double,4,3>&); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. doublefArray[12]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<double,4,3>& ). » Last changed: root/smatrix:$Id: MatrixRepresentationsStatic.h 34964 2010-08-24 13:58:51Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__MatRepStd_double_4_3_.html:1706,Inherit,Inheritance,1706,root/html532/ROOT__Math__MatRepStd_double_4_3_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__MatRepStd_double_4_3_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ta member is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::rep_type. Function Members (Methods); public:. ~MatRepStd<double,4,4>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; ROOT::Math::MatRepStd<double,4,4>MatRepStd<double,4,4>(); ROOT::Math::MatRepStd<double,4,4>MatRepStd<double,4,4>(const ROOT::Math::MatRepStd<double,4,4>&); const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<double,4,4>&operator=(const ROOT::Math::MatRepStd<double,4,4>&); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. doublefArray[16]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<double,4,4>& ). » Last changed: root/smatrix:$Id: MatrixRepresentationsStatic.h 34964 2010-08-24 13:58:51Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__MatRepStd_double_4_4_.html:1706,Inherit,Inheritance,1706,root/html532/ROOT__Math__MatRepStd_double_4_4_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__MatRepStd_double_4_4_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ta member is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::rep_type. Function Members (Methods); public:. ~MatRepStd<double,5,5>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; ROOT::Math::MatRepStd<double,5,5>MatRepStd<double,5,5>(); ROOT::Math::MatRepStd<double,5,5>MatRepStd<double,5,5>(const ROOT::Math::MatRepStd<double,5,5>&); const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<double,5,5>&operator=(const ROOT::Math::MatRepStd<double,5,5>&); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. doublefArray[25]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<double,5,5>& ). » Last changed: root/smatrix:$Id: MatrixRepresentationsStatic.h 34964 2010-08-24 13:58:51Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__MatRepStd_double_5_5_.html:1706,Inherit,Inheritance,1706,root/html532/ROOT__Math__MatRepStd_double_5_5_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__MatRepStd_double_5_5_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ta member is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::rep_type. Function Members (Methods); public:. ~MatRepStd<double,6,6>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; ROOT::Math::MatRepStd<double,6,6>MatRepStd<double,6,6>(); ROOT::Math::MatRepStd<double,6,6>MatRepStd<double,6,6>(const ROOT::Math::MatRepStd<double,6,6>&); const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<double,6,6>&operator=(const ROOT::Math::MatRepStd<double,6,6>&); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. doublefArray[36]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<double,6,6>& ). » Last changed: root/smatrix:$Id: MatrixRepresentationsStatic.h 34964 2010-08-24 13:58:51Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__MatRepStd_double_6_6_.html:1706,Inherit,Inheritance,1706,root/html532/ROOT__Math__MatRepStd_double_6_6_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__MatRepStd_double_6_6_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ta member is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::rep_type. Function Members (Methods); public:. ~MatRepStd<double,7,7>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; ROOT::Math::MatRepStd<double,7,7>MatRepStd<double,7,7>(); ROOT::Math::MatRepStd<double,7,7>MatRepStd<double,7,7>(const ROOT::Math::MatRepStd<double,7,7>&); const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<double,7,7>&operator=(const ROOT::Math::MatRepStd<double,7,7>&); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. doublefArray[49]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<double,7,7>& ). » Last changed: root/smatrix:$Id: MatrixRepresentationsStatic.h 34964 2010-08-24 13:58:51Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__MatRepStd_double_7_7_.html:1706,Inherit,Inheritance,1706,root/html532/ROOT__Math__MatRepStd_double_7_7_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__MatRepStd_double_7_7_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ta member is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::rep_type. Function Members (Methods); public:. ~MatRepStd<double,9,7>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; ROOT::Math::MatRepStd<double,9,7>MatRepStd<double,9,7>(); ROOT::Math::MatRepStd<double,9,7>MatRepStd<double,9,7>(const ROOT::Math::MatRepStd<double,9,7>&); const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<double,9,7>&operator=(const ROOT::Math::MatRepStd<double,9,7>&); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. doublefArray[63]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<double,9,7>& ). » Last changed: root/smatrix:$Id: MatrixRepresentationsStatic.h 34964 2010-08-24 13:58:51Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__MatRepStd_double_9_7_.html:1706,Inherit,Inheritance,1706,root/html532/ROOT__Math__MatRepStd_double_9_7_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__MatRepStd_double_9_7_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ta member kColObjectPtr - object as pointer kColTString - TString kColRawData - anything else as raw data ;  ; static const char * GetSimpleTypeName (Int_t typ);  provides name for basic types used as suffix for column name or field suffix in raw table ;  ; static Bool_t IsNumericType (Int_t typ);  defines if value is numeric and not requires quotes when writing ;  ; static TString MakeArrayIndex (TStreamerElement *elem, Int_t n);  produce string with complete index like [1][2][0] ;  ; static Bool_t UnpackTObject (TSQLFile *f, TBufferSQL2 *buf, TSQLObjectData *data, Long64_t objid, Int_t clversion);  Unpack TObject data in form, accepted by custom TObject streamer. ;  ; static Bool_t UnpackTString (TSQLFile *f, TBufferSQL2 *buf, TSQLObjectData *data, Long64_t objid, Int_t clversion);  Unpack TString data in form, accepted by custom TString streamer. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t CheckNormalClassPair (TSQLStructure *vers, TSQLStructure *info);  check if pair of two element corresponds to start of object, stored in normal form ;  ; Long64_t FindMaxObjectId ();  define maximum reference id, used for objects ;  ; void PerformConversion (TSqlRegistry *reg, TSqlRawBuffer *blobs, const char *topname, Bool_t useblob=kFALSE);  perform conversion of structure to sql statements first tries convert it to normal form if fails, produces data for raw table ;  ; Bool_t RecognizeTString (const char *&value);  prove that structure contains TString data ;  ; Bool_t St",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLStructure.html:15236,inherit,inherited,15236,doc/master/classTSQLStructure.html,https://root.cern,https://root.cern/doc/master/classTSQLStructure.html,1,['inherit'],['inherited']
Modifiability,"ta members; class charts. ROOT; » GRAF3D; » GL; » TGLViewer. class TGLViewer: public TVirtualViewer3D, public TGLViewerBase, public TQObject. Base GL viewer object - used by both standalone and embedded (in pad); GL. Contains core viewer objects :. GL scene - collection of main drawn objects - see TGLStdScene; Cameras (fXyzzCamera) - ortho and perspective cameras - see TGLCamera; Clipping (fClipXyzz) - collection of clip objects - see TGLClip; Manipulators (fXyzzManip) - collection of manipulators - see TGLManip. It maintains the current active draw styles, clipping object,; manipulator, camera etc. TGLViewer is 'GUI free' in that it does not derive from any ROOT GUI; TGFrame etc - see TGLSAViewer for this. However it contains GUI; GUI style methods HandleButton() etc to which GUI events can be; directed from standalone frame or embedding pad to perform; interaction. Also, the TGLWidget needs to be created externally. It is not owned; by the viewer. For embedded (pad) GL this viewer is created directly by plugin; manager. For standalone the derived TGLSAViewer is. Function Members (Methods); public:. TGLViewer(TVirtualPad* pad); TGLViewer(TVirtualPad* pad, Int_t x, Int_t y, Int_t width, Int_t height); virtual~TGLViewer(); voidTObject::AbstractMethod(const char* method) const; virtual voidActivated()SIGNAL ; virtual voidAddCompositeOp(UInt_t); virtual Int_tAddObject(const TBuffer3D&, Bool_t* = 0); virtual Int_tAddObject(UInt_t, const TBuffer3D&, Bool_t* = 0); virtual voidTGLViewerBase::AddOverlayElement(TGLOverlayElement* el); TGLSceneInfo*TGLViewerBase::AddScene(TGLSceneBase* scene); virtual voidTObject::AppendPad(Option_t* option = """"); voidApplySelection(); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; voidAutoFade(Float_t fade, Float_t time = 1, Int_t steps = 10); virtual voidBeginScene(); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLViewer.html:1215,plugin,plugin,1215,root/html528/TGLViewer.html,https://root.cern,https://root.cern/root/html528/TGLViewer.html,6,['plugin'],['plugin']
Modifiability,"ta members; class charts. ROOT; » GRAF3D; » GL; » TGLViewer. class TGLViewer: public TVirtualViewer3D, public TGLViewerBase, public TQObject. Base GL viewer object - used by both standalone and embedded (in pad); GL. Contains core viewer objects :. GL scene - collection of main drawn objects - see TGLStdScene; Cameras (fXyzzCamera) - ortho and perspective cameras - see TGLCamera; Clipping (fClipXyzz) - collection of clip objects - see TGLClip; Manipulators (fXyzzManip) - collection of manipulators - see TGLManip. It maintains the current active draw styles, clipping object,; manipulator, camera etc. TGLViewer is 'GUI free' in that it does not derive from any ROOT GUI; TGFrame etc - see TGLSAViewer for this. However it contains GUI; GUI style methods HandleButton() etc to which GUI events can be; directed from standalone frame or embedding pad to perform; interaction. Also, the TGLWidget needs to be created externally. It is not owned; by the viewer. For embedded (pad) GL this viewer is created directly by plugin; manager. For standalone the derived TGLSAViewer is. Function Members (Methods); public:. virtual~TGLViewer(); voidTObject::AbstractMethod(const char* method) const; virtual voidActivated()SIGNAL ; virtual voidAddCompositeOp(UInt_t); virtual Int_tAddObject(const TBuffer3D&, Bool_t* = 0); virtual Int_tAddObject(UInt_t, const TBuffer3D&, Bool_t* = 0); virtual voidTGLViewerBase::AddOverlayElement(TGLOverlayElement* el); TGLSceneInfo*TGLViewerBase::AddScene(TGLSceneBase* scene); virtual voidTObject::AppendPad(Option_t* option = """"); voidApplySelection(); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; voidAutoFade(Float_t fade, Float_t time = 1, Int_t steps = 10); virtual voidBeginScene(); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tBuildingScene() const; virtual Bool_tCanLoopOnPrimitives() const; virtual voidTGLViewerBa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLViewer.html:1215,plugin,plugin,1215,root/html602/TGLViewer.html,https://root.cern,https://root.cern/root/html602/TGLViewer.html,4,['plugin'],['plugin']
Modifiability,"ta object. ;  ;  TFileInfoMeta (const TFileInfoMeta &m);  Copy constructor. ;  ; virtual ~TFileInfoMeta ();  ; const char * GetClass () const;  ; const char * GetDirectory () const;  Get the object's directory in the ROOT file. ;  ; Long64_t GetEntries () const;  ; Long64_t GetFirst () const;  ; Long64_t GetLast () const;  ; const char * GetObject () const;  Get the object name, with path stripped off. ;  ; Long64_t GetTotBytes () const;  ; Long64_t GetZipBytes () const;  ; TClass * IsA () const override;  ; Bool_t IsTree () const;  ; void Print (Option_t *options="""") const override;  Print information about this object. ;  ; void SetEntries (Long64_t entries);  ; void SetFirst (Long64_t first);  ; void SetLast (Long64_t last);  ; void SetTotBytes (Long64_t tot);  ; void SetZipBytes (Long64_t zip);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileInfoMeta.html:2510,inherit,inherited,2510,doc/master/classTFileInfoMeta.html,https://root.cern,https://root.cern/doc/master/classTFileInfoMeta.html,1,['inherit'],['inherited']
Modifiability,"ta set in a parallel processing configuration where the analysis is distributed over several processors and you can specify which entries to send to each processor. With MakeClass the user has control over the event loop, with MakeSelectorthe tree is in control of the event loop.; 12.20 Simple Analysis Using TTree::Draw; We will use the tree in cernstaff.root that was made by the macro in $ROOTSYS/tutorials/tree/staff.C.; First, open the file and lists its contents.; root[] TFile f (""cernstaff.root""); root[] f.ls(); TFile** cernstaff.root; TFile* cernstaff.root; KEY: TTree T;1 staff data from ascii file; We can see the TTree“T” in the file. We will use it to experiment with the TTree::Draw method, so let’s create a pointer to it:; root[] TTree *MyTree = T; Cling allows us to get simply the object by using it. Here we define a pointer to a TTree object and assign it the value of “T”, the TTree in the file. Cling looks for an object named “T” in the current ROOT file and returns it (this assumes that “T” has not previously been used to declare a variable or function).; In contrast, in compiled code, you can use:; TTree *MyTree;f.GetObject(""T"",MyTree);; To show the different Draw options, we create a canvas with four sub-pads. We will use one sub-pad for each Draw command.; root[] TCanvas *myCanvas = new TCanvas(); root[] myCanvas->Divide(2,2); We activate the first pad with the TCanvas::cd statement:; root[] myCanvas->cd(1); We then draw the variable Cost:; root[] MyTree->Draw(""C; As you can see, the last call TTree::Draw has only one parameter. It is a string containing the leaf name. A histogram is automatically created as a result of a TTree::Draw. The style of the histogram is inherited from the TTree attributes and the current style (gStyle) is ignored. The TTree gets its attributes from the current TStyle at the time it was created. You can call the method TTree::UseCurrentStyle to change to the current style rather than the TTree style. (See gStyle; see also “G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:585644,variab,variable,585644,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variable']
Modifiability,"ta to/from xml.; This constructor should be used, if data from buffer supposed to be stored in file.; Mode should be either TBuffer::kRead or TBuffer::kWrite. ~TBufferXML(); destroy xml buffer. TXMLFile* XmlFile(); returns pointer to TXMLFile object; access to file is necessary to produce unique identifier for object references. TString ConvertToXML(const TObject* obj, Bool_t GenericLayout = kFALSE, Bool_t UseNamespaces = kFALSE); converts object, inherited from TObject class, to XML string; fmt contains configuration of XML layout. See TXMLSetup class for detatils. TString ConvertToXML(const void* obj, const TClass* cl, Bool_t GenericLayout = kFALSE, Bool_t UseNamespaces = kFALSE); converts any type of object to XML string; fmt contains configuration of XML layout. See TXMLSetup class for detatils. TObject* ConvertFromXML(const char* str, Bool_t GenericLayout = kFALSE, Bool_t UseNamespaces = kFALSE); Read object from XML, produced by ConvertToXML() method.; If object does not inherit from TObject class, return 0.; GenericLayout and UseNamespaces should be the same as in ConvertToXML(). void* ConvertFromXMLAny(const char* str, TClass** cl = 0, Bool_t GenericLayout = kFALSE, Bool_t UseNamespaces = kFALSE); Read object of any class from XML, produced by ConvertToXML() method.; If cl!=0, return actual class of object.; GenericLayout and UseNamespaces should be the same as in ConvertToXML(). XMLNodePointer_t XmlWriteAny(const void* obj, const TClass* cl); Convert object of any class to xml structures; Return pointer on top xml element. void* XmlReadAny(XMLNodePointer_t node, void* obj, TClass** cl); Recreate object from xml structure.; Return pointer to read object.; if (cl!=0) returns pointer to class of object. void WriteObject(const TObject* obj); Convert object into xml structures.; !!! Should be used only by TBufferXML itself.; Use ConvertToXML() methods to convert your object to xml; Redefined here to avoid gcc 3.x warning. TXMLStackObj* PushStack(XMLNodePointer_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TBufferXML.html:26804,inherit,inherit,26804,root/html534/TBufferXML.html,https://root.cern,https://root.cern/root/html534/TBufferXML.html,6,['inherit'],['inherit']
Modifiability,"ta! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Bool_tfgDebugCornerPoints; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveBoxProjected(const char* n = ""TEveBoxProjected"", const char* t = """"); Constructor. ~TEveBoxProjected(); Destructor. void ComputeBBox(); Compute bounding-box, virtual from TAttBBox. void SetDepthLocal(Float_t d); This is virtual method from base-class TEveProjected. void SetProjection(TEveProjectionManager* mng, TEveProjectable* model); This is virtual method from base-class TEveProjected. void UpdateProjection(); Re-project the box. Projects all points and finds 2D convex-hull. The only issue is with making sure that initial conditions for; hull-search are reasonable -- that is, there are no overlaps with the; first point. Bool_t GetDebugCornerPoints(); Get state of fgDebugCornerPoints static. void SetDebugCornerPoints(Bool_t d); Set state of fgDebugCornerPoints static.; When this is true, points will be drawn at the corners of; computed convex hull. TEveBox& operator=(const TEveBoxProjected& ). TEveBoxProjected(const TEveBoxProjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveBoxProjected.html:23366,Inherit,Inheritance,23366,root/html602/TEveBoxProjected.html,https://root.cern,https://root.cern/root/html602/TEveBoxProjected.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ta"",1,0) ;; 1219 pc.defineInt(""verbose"",""Verbose"",0,0) ;; 1220 pc.defineInt(""extended"",""Extended"",0,0) ;; 1221 pc.defineInt(""nEvents"",""NumEvents"",0,0) ;; 1222 pc.defineInt(""autoBinned"",""AutoBinned"",0,1) ;; 1223 pc.defineInt(""expectedData"",""ExpectedData"",0,0) ;; 1224 pc.defineDouble(""nEventsD"",""NumEventsD"",0,-1.) ;; 1225 pc.defineString(""binnedTag"",""GenBinned"",0,"""") ;; 1226 pc.defineMutex(""GenBinned"",""ProtoData"") ;; 1227 pc.defineMutex(""Extended"", ""NumEvents"");; 1228 ; 1229 // Process and check varargs; 1230 pc.process(arg1,arg2,arg3,arg4,arg5,arg6) ;; 1231 if (!pc.ok(true)) {; 1232 return nullptr;; 1233 }; 1234 ; 1235 // Decode command line arguments; 1236 RooDataSet* protoData = static_cast<RooDataSet*>(pc.getObject(""proto"",nullptr)) ;; 1237 const char* dsetName = pc.getString(""dsetName"") ;; 1238 bool verbose = pc.getInt(""verbose"") ;; 1239 bool randProto = pc.getInt(""randProto"") ;; 1240 bool resampleProto = pc.getInt(""resampleProto"") ;; 1241 bool extended = pc.getInt(""extended"") ;; 1242 bool autoBinned = pc.getInt(""autoBinned"") ;; 1243 const char* binnedTag = pc.getString(""binnedTag"") ;; 1244 Int_t nEventsI = pc.getInt(""nEvents"") ;; 1245 double nEventsD = pc.getInt(""nEventsD"") ;; 1246 //bool verbose = pc.getInt(""verbose"") ;; 1247 bool expectedData = pc.getInt(""expectedData"") ;; 1248 ; 1249 double nEvents = (nEventsD>0) ? nEventsD : double(nEventsI);; 1250 ; 1251 // Force binned mode for expected data mode; 1252 if (expectedData) {; 1253 binnedTag=""*"" ;; 1254 }; 1255 ; 1256 if (extended) {; 1257 if (nEvents == 0) nEvents = expectedEvents(&whatVars);; 1258 } else if (nEvents==0) {; 1259 cxcoutI(Generation) << ""No number of events specified , number of events generated is ""; 1260 << GetName() << ""::expectedEvents() = "" << expectedEvents(&whatVars)<< endl ;; 1261 }; 1262 ; 1263 if (extended && protoData && !randProto) {; 1264 cxcoutI(Generation) << ""WARNING Using generator option Extended() (Poisson distribution of #events) together ""; 1265 << ""with a prototype dataset",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:61642,extend,extended,61642,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['extend'],['extended']
Modifiability,"ta& data, RooCmdArg arg1, RooCmdArg arg2, RooCmdArg arg3, RooCmdArg arg4,; RooCmdArg arg5, RooCmdArg arg6, RooCmdArg arg7, RooCmdArg arg8). for documentation of options. RooFitResult* fitTo(RooAbsData& data, RooCmdArg arg1 = RooCmdArg::none(), RooCmdArg arg2 = RooCmdArg::none(), RooCmdArg arg3 = RooCmdArg::none(), RooCmdArg arg4 = RooCmdArg::none(), RooCmdArg arg5 = RooCmdArg::none(), RooCmdArg arg6 = RooCmdArg::none(), RooCmdArg arg7 = RooCmdArg::none(), RooCmdArg arg8 = RooCmdArg::none()); Fit PDF to given dataset. If dataset is unbinned, an unbinned maximum likelihood is performed. If the dataset; is binned, a binned maximum likelihood is performed. By default the fit is executed through the MINUIT; commands MIGRAD, HESSE and MINOS in succession. The following named arguments are supported. Options to control construction of -log(L). ConditionalObservables(const RooArgSet& set) -- Do not normalize PDF over listed observables; Extended(Bool_t flag) -- Add extended likelihood term, off by default; Range(const char* name) -- Fit only data inside range with given name; Range(Double_t lo, Double_t hi) -- Fit only data inside given range. A range named ""fit"" is created on the fly on all observables.; Multiple comma separated range names can be specified.; SumCoefRange(const char* name) -- Set the range in which to interpret the coefficients of RooAddPdf components; NumCPU(int num) -- Parallelize NLL calculation on num CPUs; SplitRange(Bool_t flag) -- Use separate fit ranges in a simultaneous fit. Actual range name for each; subsample is assumed to by rangeName_{indexState} where indexState; is the state of the master index category of the simultaneous fit; Constrained() -- Apply all constrained contained in the p.d.f. in the likelihood; Contrain(const RooArgSet&pars) -- Apply constraints to listed parameters in likelihood using internal constrains in p.d.f; ExternalConstraints(const RooArgSet& ) -- Include given external constraints to likelihood. Options to control flo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsPdf.html:49686,extend,extended,49686,root/html526/RooAbsPdf.html,https://root.cern,https://root.cern/root/html526/RooAbsPdf.html,1,['extend'],['extended']
Modifiability,"ta(uint id, QObjectUserData* data); boolQObject::signalsBlocked() const; intQObject::startTimer(int interval); QThread*QObject::thread() const; static QStringQObject::tr(const char* s, const char* c = 0); static QStringQObject::tr(const char* s, const char* c, int n); static QStringQObject::trUtf8(const char* s, const char* c = 0); static QStringQObject::trUtf8(const char* s, const char* c, int n); QObjectUserData*QObject::userData(uint id) const. protected:. virtual voidQObject::childEvent(QChildEvent*); virtual voidQObject::connectNotify(const char* signal); virtual voidQObject::customEvent(QEvent*); voidQObject::destroyed(QObject* = 0); virtual voidQObject::disconnectNotify(const char* signal); intQObject::receivers(const char* signal) const; QObject*QObject::sender() const; intQObject::senderSignalIndex() const; virtual voidQObject::timerEvent(QTimerEvent*). Data Members; public:. static const QMetaObjectstaticMetaObject; static const QMetaObjectQObject::staticMetaObject. protected:. QScopedPointer<QObjectData>QObject::d_ptr; TObject*fCurrObjcurrent selected object; TQRootDialog*fDialogthe TQRootDialog which is used to prompt for; TListfMethodslist of Root metheds associated with the selected object; doublefMousePosXmouse position in user coordinate; doublefMousePosYmouse position in user coordinate; QWidget*fParentparents widgets; QPopupMenu*fPopupQt popup menu; QWidget*fTabWinparents widgets; TCanvas*fcpointer to the ROOT canvas; static const QMetaObjectQObject::staticQtMetaObject. private:. static const QMetaObjectExtraDatastaticMetaObjectExtraData. Class Charts. Inheritance Chart:. QObject. ←; TQCanvasMenu. Function documentation. » Author: Denis Bertini, M. AL-Turany 01/11/2000 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/qtgsi:$Id$ » Last generated: 2015-06-02 16:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TQCanvasMenu.html:3921,Inherit,Inheritance,3921,root/html604/TQCanvasMenu.html,https://root.cern,https://root.cern/root/html604/TQCanvasMenu.html,1,['Inherit'],['Inheritance']
Modifiability,"ta(uint id, QObjectUserData* data); boolQObject::signalsBlocked() const; intQObject::startTimer(int interval); QThread*QObject::thread() const; static QStringQObject::tr(const char* s, const char* c = 0); static QStringQObject::tr(const char* s, const char* c, int n); static QStringQObject::trUtf8(const char* s, const char* c = 0); static QStringQObject::trUtf8(const char* s, const char* c, int n); QObjectUserData*QObject::userData(uint id) const. protected:. virtual voidQObject::childEvent(QChildEvent*); virtual voidQObject::connectNotify(const char* signal); virtual voidQObject::customEvent(QEvent*); voidQObject::destroyed(QObject* = 0); virtual voidQObject::disconnectNotify(const char* signal); intQObject::receivers(const char* signal) const; QObject*QObject::sender() const; intQObject::senderSignalIndex() const; virtual voidQObject::timerEvent(QTimerEvent*). Data Members; public:. static const QMetaObjectstaticMetaObject; static const QMetaObjectQObject::staticMetaObject. protected:. QScopedPointer<QObjectData>QObject::d_ptr; TObject*fCurrObjcurrent selected object; TQRootDialog*fDialogthe TQRootDialog which is used to prompt for; TListfMethodslist of Root metheds associated with the selected object; doublefMousePosXmouse position in user coordinate; doublefMousePosYmouse position in user coordinate; QWidget*fParentparents widgets; QPopupMenu*fPopupQt popup menu; QWidget*fTabWinparents widgets; TCanvas*fcpointer to the ROOT canvas; static const QMetaObjectQObject::staticQtMetaObject. private:. static const QMetaObjectExtraDatastaticMetaObjectExtraData. Class Charts. Inheritance Chart:. QObject. ←; TQCanvasMenu. Function documentation. » Author: Denis Bertini, M. AL-Turany 01/11/2000 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/qtgsi:$Id$ » Last generated: 2015-06-30 15:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQCanvasMenu.html:3921,Inherit,Inheritance,3921,root/html602/TQCanvasMenu.html,https://root.cern,https://root.cern/root/html602/TQCanvasMenu.html,1,['Inherit'],['Inheritance']
Modifiability,"ta, Bool_t extended = kFALSE, const char* rangeName = 0, const char* addCoefRangeName = 0, Int_t nCPU = 1, Bool_t interleave = kFALSE, Bool_t verbose = kTRUE, Bool_t splitRange = kFALSE, Bool_t cloneData = kTRUE); Construct likelihood from given p.d.f and (binned or unbinned dataset); For internal use. RooNLLVar(const char* name, const char* title, RooAbsPdf& pdf, RooAbsData& data, const RooArgSet& projDeps, Bool_t extended = kFALSE, const char* rangeName = 0, const char* addCoefRangeName = 0, Int_t nCPU = 1, Bool_t interleave = kFALSE, Bool_t verbose = kTRUE, Bool_t splitRange = kFALSE, Bool_t cloneData = kTRUE); Construct likelihood from given p.d.f and (binned or unbinned dataset); For internal use. RooNLLVar(const RooNLLVar& other, const char* name = 0); Copy constructor. ~RooNLLVar(); Destructor. Double_t evaluatePartition(Int_t firstEvent, Int_t lastEvent, Int_t stepSize) const; Calculate and return likelihood on subset of data from firstEvent to lastEvent; processed with a step size of 'stepSize'. If this an extended likelihood and; and the zero event is processed the extended term is added to the return; likelihood. RooNLLVar(); Constructors, assignment etc. { _first = kTRUE ; }. TObject* clone(const char* newname) const; { return new RooNLLVar(*this,newname); }. RooAbsTestStatistic* create(const char* name, const char* title, RooAbsReal& pdf, RooAbsData& adata, const RooArgSet& projDeps, const char* rangeName, const char* addCoefRangeName = 0, Int_t nCPU = 1, Bool_t interleave = kFALSE, Bool_t verbose = kTRUE, Bool_t splitRange = kFALSE). void applyWeightSquared(Bool_t flag); { _weightSq = flag ; setValueDirty() ; }. Double_t defaultErrorLevel() const; { return 0.5 ; }. Bool_t processEmptyDataSets() const; { return _extended ; }. » Last changed: Fri Dec 2 14:26:55 2011 » Last generated: 2011-12-02 14:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooNLLVar.html:40954,extend,extended,40954,root/html532/RooNLLVar.html,https://root.cern,https://root.cern/root/html532/RooNLLVar.html,4,['extend'],['extended']
Modifiability,"ta, Bool_t mod1, Bool_t mod2); Truck the camera - 'move camera parallel to film plane'.; Returns kTRUE is redraw required (camera change), kFALSE otherwise. Bool_t Rotate(Int_t xDelta, Int_t yDelta, Bool_t mod1, Bool_t mod2); Rotate the camera - 'swivel round the view volume center'.; Returns kTRUE is redraw required (camera change), kFALSE otherwise. void Apply(const TGLBoundingBox& sceneBox, const TGLRect* pickRect = 0) const; Apply the camera to the current GL context, setting the viewport, projection; and modelview matricies. After this verticies etc can be directly entered; in the world frame. This also updates the cached frustum values, enabling; all the projection, overlap tests etc defined in TGLCamera to be used. Arguments are:; 'box' - view volume box - ignored for ortho camera. Assumed to be same; as one passed to Setup().; 'pickRect' - optional picking rect. If non-null, restrict drawing to this; viewport rect. void Configure(Double_t zoom, Double_t dolly, Double_t* center, Double_t hRotate, Double_t vRotate); Configure the camera state.; zoom - set directly (default = 0.78);; dolly - additional move along the camera forward direction;; center - new camera center (can be 0 for no change);; hRotate - additional ""up/down"" rotation in radians;; vRotate - additional ""left/right"" rotation in radians. Bool_t IsOrthographic() const; { return kTRUE; }. void SetEnableRotate(Bool_t x); { fEnableRotate = x; }. Bool_t GetEnableRotate() const; { return fEnableRotate; }. Double_t GetZoomMin() const; { return fZoomMin; }. Double_t GetZoomMax() const; { return fZoomMax; }. void SetZoomMinMax(Double_t min, Double_t max); { SetZoomMin(min); SetZoomMax(max); }. void SetDollyToZoom(Bool_t x); { fDollyToZoom = x; }. Bool_t GetDollyToZoom() const; { return fDollyToZoom; }. void SetZoom(Double_t x); { fZoom = x; }. Double_t GetZoom() const; { return fZoom; }. » Author: Richard Maunder 25/05/2005 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLOrthoCamera.html:14854,Config,Configure,14854,root/html534/TGLOrthoCamera.html,https://root.cern,https://root.cern/root/html534/TGLOrthoCamera.html,2,['Config'],['Configure']
Modifiability,"ta, Bool_t mod1, Bool_t mod2); Truck the camera - 'move camera parallel to film plane'.; Returns kTRUE is redraw required (camera change), kFALSE otherwise. Bool_t Rotate(Int_t xDelta, Int_t yDelta, Bool_t mod1, Bool_t mod2); Rotate the camera - 'swivel round the view volume center'.; Returns kTRUE is redraw required (camera change), kFALSE otherwise. void Apply(const TGLBoundingBox& sceneBox, const TGLRect* pickRect = 0) const; Apply the camera to the current GL context, setting the viewport, projection; and modelview matricies. After this verticies etc can be directly entered; in the world frame. This also updates the cached frustum values, enabling; all the projection, overlap tests etc defined in TGLCamera to be used. Arguments are:; 'box' - view volume box - ignored for ortho camera. Assumed to be same; as one passed to Setup().; 'pickRect' - optional picking rect. If non-null, restrict drawing to this; viewport rect. void Configure(Double_t zoom, Double_t dolly, Double_t* center, Double_t hRotate, Double_t vRotate); Configure the camera state.; zoom - set directly (default = 0.78);; dolly - additional move along the camera forward direction;; center - new camera center (can be 0 for no change);; hRotate - additional ""up/down"" rotation in radians;; vRotate - additional ""left/right"" rotation in radians. Bool_t IsOrthographic() const; { return kTRUE; }. void SetEnableRotate(Bool_t x); { fEnableRotate = x; }. Bool_t GetEnableRotate() const; { return fEnableRotate; }. Double_t GetZoomMin() const; { return fZoomMin; }. Double_t GetZoomMax() const; { return fZoomMax; }. void SetZoomMinMax(Double_t min, Double_t max); { SetZoomMin(min); SetZoomMax(max); }. void SetDollyToZoom(Bool_t x); { fDollyToZoom = x; }. Bool_t GetDollyToZoom() const; { return fDollyToZoom; }. » Author: Richard Maunder 25/05/2005 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id: TGLOrthoCamera.h 28212 2009-04-15 11:05:29Z matevz $ » Last generated: 2011-11-0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLOrthoCamera.html:10036,Config,Configure,10036,root/html532/TGLOrthoCamera.html,https://root.cern,https://root.cern/root/html532/TGLOrthoCamera.html,2,['Config'],['Configure']
Modifiability,"ta, RooAbsPdf& pdf, const RooArgSet& paramsOfInterest); same constructor as before but not passing a prior pdf. MCMCCalculator(RooAbsData& data, const RooStats::ModelConfig& model); Constructor for automatic configuration with basic settings. Uses a; UniformProposal,10,000 iterations, 40 burn in steps, 50 bins for each; RooRealVar, determines interval by keys, and turns on sparse histogram; mode in the MCMCInterval. Finds a 95% confidence interval. MCMCCalculator(RooAbsData& data, const RooStats::ModelConfig& model, RooStats::ProposalFunction& proposalFunction, Int_t numIters, RooArgList* axes = NULL, Double_t size = 0.05); alternate constructor, specifying many arguments. void SetModel(const RooStats::ModelConfig& model); set the model. MCMCCalculator(RooAbsData& data, RooAbsPdf& pdf, const RooArgSet& paramsOfInterest, RooAbsPdf& priorPdf, RooStats::ProposalFunction& proposalFunction, Int_t numIters, RooArgList* axes = NULL, Double_t size = 0.05). void SetupBasicUsage(); Setting automatic configuration with basic settings. Uses a; UniformProposal,10,000 iterations, 40 burn in steps, 50 bins for each; RooRealVar, determines interval by keys, and turns on sparse histogram; mode in the MCMCInterval. Finds a 95% confidence interval. MCMCInterval* GetInterval() const; Main interface to get a RooStats::ConfInterval. MCMCCalculator(); default constructor. virtual ~MCMCCalculator(); {}. Double_t Size() const; Get the size of the test (eg. rate of Type I error). {return fSize;}. Double_t ConfidenceLevel() const; Get the Confidence level for the test. {return 1.-fSize;}. void SetData(RooAbsData& data); Set the DataSet if not already there. { fData = &data; }. void SetPdf(RooAbsPdf& pdf); Set the Pdf if not already there. { fPdf = &pdf; }. void SetPriorPdf(RooAbsPdf& pdf); Set the Prior Pdf if not already there. { fPriorPdf = &pdf; }. void SetParameters(const RooArgSet& set); specify the parameters of interest in the interval. { fPOI.removeAll(); fPOI.add(set); }. void SetNuis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__MCMCCalculator.html:10162,config,configuration,10162,root/html526/RooStats__MCMCCalculator.html,https://root.cern,https://root.cern/root/html526/RooStats__MCMCCalculator.html,1,['config'],['configuration']
Modifiability,"ta, const TString& theWeightFile, TDirectory* theTargetDir = __null); TMVA::MethodPDERSMethodPDERS(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption, TDirectory* theTargetDir = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::MethodPDERS&operator=(const TMVA::MethodPDERS&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromStream(TFile& istr); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodPDERS.html:11292,Config,Configurable,11292,root/html602/TMVA__MethodPDERS.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodPDERS.html,2,['Config'],['Configurable']
Modifiability,"taBase::fXloIndex; TVectorDTQpDataBase::fXupBoundBounds on variables; TVectorDTQpDataBase::fXupIndex; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TMatrixDSparsefAEquality constraints; TMatrixDSparsefCInequality constraints; TMatrixDSparsefQquadratic part of Objective function. Class Charts. Inheritance Chart:. TObject. ←; TQpDataBase. ←; TQpDataSparse. Function documentation; TQpDataSparse(Int_t nx, Int_t my, Int_t mz); Constructor. TQpDataSparse(TVectorD& c, TMatrixDSparse& Q, TVectorD& xlow, TVectorD& ixlow, TVectorD& xupp, TVectorD& ixupp, TMatrixDSparse& A, TVectorD& bA, TMatrixDSparse& C, TVectorD& clow, TVectorD& iclow, TVectorD& cupp, TVectorD& icupp); Constructor. TQpDataSparse(const TQpDataSparse& another); Copy constructor. void SetNonZeros(Int_t nnzQ, Int_t nnzA, Int_t nnzC); Allocate space for the appropriate number of non-zeros in the matrices. void Qmult(Double_t beta, TVectorD& y, Double_t alpha, const TVectorD& x); calculate y = beta*y + alpha*(fQ*x). void Amult(Double_t beta, TVectorD& y, Double_t alpha, const TVectorD& x); calculate y = beta*y + alpha*(fA*x). void Cmult(Double_t beta, TVectorD& y, Double_t alpha, const TVectorD& x); calculate y = beta*y + alpha*(fC*x). void ATransmult(Double_t beta, TVectorD& y, Double_t alpha, const TVectorD& x); calculate y = b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQpDataSparse.html:8116,Inherit,Inheritance,8116,root/html602/TQpDataSparse.html,https://root.cern,https://root.cern/root/html602/TQpDataSparse.html,2,['Inherit'],['Inheritance']
Modifiability,"taDefinition RGeomData.hxx:218; ROOT::RGeomDescription::ShapeDescr::resetvoid reset()Definition RGeomData.hxx:234; ROOT::RGeomDescription::ShapeDescr::has_rawbool has_raw() constDefinition RGeomData.hxx:224; ROOT::RGeomDescription::ShapeDescr::fShapeInfoRGeomShapeRenderInfo fShapeInfo! shape itself as infoDefinition RGeomData.hxx:220; ROOT::RGeomDescription::ShapeDescr::fShapeTGeoShape * fShape! original shapeDefinition RGeomData.hxx:217; ROOT::RGeomDescription::ShapeDescr::rndr_infoRGeomRenderInfo * rndr_info()Provide render info for visible item.Definition RGeomData.hxx:227; ROOT::RGeomDescription::ShapeDescr::fRawInfoRGeomRawRenderInfo fRawInfo! raw render infoDefinition RGeomData.hxx:219; ROOT::RGeomDescription::ShapeDescr::ShapeDescrShapeDescr(TGeoShape *s)Definition RGeomData.hxx:221; ROOT::RGeomDescription::ShapeDescr::has_shapebool has_shape() constDefinition RGeomData.hxx:223; ROOT::RGeomDescriptionDefinition RGeomData.hxx:210; ROOT::RGeomDescription::fCfgRGeomConfig fCfg! configuration parameter editable from GUIDefinition RGeomData.hxx:264; ROOT::RGeomDescription::fSignalsstd::vector< std::pair< const void *, RGeomSignalFunc_t > > fSignals! registered signalsDefinition RGeomData.hxx:268; ROOT::RGeomDescription::IsPhysNodeVisibleint IsPhysNodeVisible(const std::vector< int > &stack)Check if there special settings for specified physical node returns -1 if nothing is found.Definition RGeomData.cxx:2043; ROOT::RGeomDescription::fSelectedStackstd::vector< int > fSelectedStack! selected branch of geometry by stackDefinition RGeomData.hxx:247; ROOT::RGeomDescription::SetMaxVisNodesvoid SetMaxVisNodes(int cnt)Set maximal number of nodes which should be selected for drawing.Definition RGeomData.hxx:317; ROOT::RGeomDescription::ProcessBrowserRequeststd::string ProcessBrowserRequest(const std::string &req="""")Find description object for requested shape If not exists - will be created.Definition RGeomData.cxx:767; ROOT::RGeomDescription::fDescstd::vector< RGeomNode > f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RGeomData_8hxx_source.html:21660,config,configuration,21660,doc/master/RGeomData_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RGeomData_8hxx_source.html,2,['config'],['configuration']
Modifiability,"taFrame (std::string_view treeName, ::TDirectory *dirPtr, const ColumnNames_t &defaultColumns={});  ;  RDataFrame (std::string_view treename, const std::vector< std::string > &filenames, const ColumnNames_t &defaultColumns={});  Build the dataframe. ;  ;  RDataFrame (std::string_view treename, std::initializer_list< std::string > filenames, const ColumnNames_t &defaultColumns={});  ;  RDataFrame (std::string_view treeName, std::string_view filenameglob, const ColumnNames_t &defaultColumns={});  Build the dataframe. ;  ;  RDataFrame (std::unique_ptr< ROOT::RDF::RDataSource >, const ColumnNames_t &defaultColumns={});  Build dataframe associated to data source. ;  ;  RDataFrame (TTree &tree, const ColumnNames_t &defaultColumns={});  Build the dataframe. ;  ;  RDataFrame (ULong64_t numEntries);  Build a dataframe that generates numEntries entries. ;  ;  ~RDataFrame ();  ; RDataFrame & operator= (const RDataFrame &)=default;  ; RDataFrame & operator= (RDataFrame &&)=default;  ;  Public Member Functions inherited from ROOT::RDF::RInterface< RDFDetail::RLoopManager >;  RInterface (const RInterface &)=default;  Copy-ctor for RInterface. ;  ;  RInterface (const std::shared_ptr< RLoopManager > &proxied);  Build a RInterface from a RLoopManager. ;  ;  RInterface (RInterface &&)=default;  Move-ctor for RInterface. ;  ; RResultPtr< U > Aggregate (AccFun aggregator, MergeFun merger, std::string_view columnName, const U &aggIdentity);  Execute a user-defined accumulation operation on the processed column values in each processing slot. ;  ; RResultPtr< U > Aggregate (AccFun aggregator, MergeFun merger, std::string_view columnName="""");  Execute a user-defined accumulation operation on the processed column values in each processing slot. ;  ; RInterface< RDFDetail::RLoopManager, DS_t > Alias (std::string_view alias, std::string_view columnName);  Allow to refer to a column with a different name. ;  ; RResultPtr< typename std::decay_t< Helper >::Result_t > Book (Helper &&helper, const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html:86525,inherit,inherited,86525,doc/v632/classROOT_1_1RDataFrame.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html,2,['inherit'],['inherited']
Modifiability,"taHist.h""; #include ""RooGaussian.h""; #include ""RooFormulaVar.h""; #include ""RooGenericPdf.h""; #include ""RooPolynomial.h""; #include ""RooMinimizer.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""RooFitResult.h""; using namespace RooFit;; ; void rf403_weightedevts(); {; // C r e a t e o b s e r v a b l e a n d u n w e i g h t e d d a t a s e t; // -------------------------------------------------------------------------------; ; // Declare observable; RooRealVar x(""x"", ""x"", -10, 10);; x.setBins(40);; ; // Construction a uniform pdf; RooPolynomial p0(""px"", ""px"", x);; ; // Sample 1000 events from pdf; std::unique_ptr<RooDataSet> data{p0.generate(x, 1000)};; ; // C a l c u l a t e w e i g h t a n d m a k e d a t a s e t w e i g h t e d; // -----------------------------------------------------------------------------------; ; // Construct formula to calculate (fake) weight for events; RooFormulaVar wFunc(""w"", ""event weight"", ""(x*x+10)"", x);; ; // Add column with variable w to previously generated dataset; RooRealVar *w = (RooRealVar *)data->addColumn(wFunc);; ; // Dataset d is now a dataset with two observable (x,w) with 1000 entries; data->Print();; ; // Instruct dataset wdata in interpret w as event weight rather than as observable; RooDataSet wdata(data->GetName(), data->GetTitle(), data.get(), *data->get(), 0, w->GetName());; ; // Dataset d is now a dataset with one observable (x) with 1000 entries and a sum of weights of ~430K; wdata.Print();; ; // U n b i n n e d M L f i t t o w e i g h t e d d a t a; // ---------------------------------------------------------------; ; // Construction quadratic polynomial pdf for fitting; RooRealVar a0(""a0"", ""a0"", 1);; RooRealVar a1(""a1"", ""a1"", 0, -1, 1);; RooRealVar a2(""a2"", ""a2"", 1, 0, 10);; RooPolynomial p2(""p2"", ""p2"", x, RooArgList(a0, a1, a2), 0);; ; // Fit quadratic polynomial to weighted data; ; // NOTE: A plain Maximum likelihood fit to weighted data does in general; // NOT result in correct error ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf403__weightedevts_8C.html:1353,variab,variable,1353,doc/master/rf403__weightedevts_8C.html,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html,1,['variab'],['variable']
Modifiability,"taList, . RooArgSet & ; outputSet, . bool ; valueOnly = true . ); const. Create a list of leaf nodes in the arg tree starting with ourself as top node that match any of the names the args in the supplied argset. ; Returns true only if something went wrong. The complement of this function is getParameters(). Parameters. [in]dataListSet of leaf nodes to match. ; [out]outputSetOutput set. ; [in]valueOnlyIf this parameter is true, we only match leaves that depend on the value of any arg in dataList. . Definition at line 751 of file RooAbsArg.cxx. ◆ getObservables() [2/5]. RooFit::OwningPtr< RooArgSet > RooAbsArg::getObservables ; (; const RooAbsData & ; data); const. Return the observables of this pdf given the observables defined by data. ; Definition at line 704 of file RooAbsArg.cxx. ◆ getObservables() [3/5]. RooFit::OwningPtr< RooArgSet > RooAbsArg::getObservables ; (; const RooAbsData * ; set); const. Create a list of leaf nodes in the arg tree starting with ourself as top node that match any of the names of the variable list of the supplied data set (the dependents). ; The caller of this function is responsible for deleting the returned argset. The complement of this function is getParameters(). ; Definition at line 717 of file RooAbsArg.cxx. ◆ getObservables() [4/5]. RooFit::OwningPtr< RooArgSet > RooAbsArg::getObservables ; (; const RooArgSet & ; set, . bool ; valueOnly = true . ); const. Given a set of possible observables, return the observables that this PDF depends on. ; Definition at line 698 of file RooAbsArg.cxx. ◆ getObservables() [5/5]. RooFit::OwningPtr< RooArgSet > RooAbsArg::getObservables ; (; const RooArgSet * ; dataList, . bool ; valueOnly = true . ); const. Create a list of leaf nodes in the arg tree starting with ourself as top node that match any of the names the args in the supplied argset. ; The caller of this function is responsible for deleting the returned argset. The complement of this function is getParameters(). ; Definition at line 732",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsArg.html:62968,variab,variable,62968,doc/master/classRooAbsArg.html,https://root.cern,https://root.cern/doc/master/classRooAbsArg.html,1,['variab'],['variable']
Modifiability,"taLoader.cxx. ◆ AddTrainingEvent(). void TMVA::DataLoader::AddTrainingEvent ; (; const TString & ; className, . const std::vector< Double_t > & ; event, . Double_t ; weight . ). add signal training event ; Definition at line 260 of file DataLoader.cxx. ◆ AddTree() [1/2]. void TMVA::DataLoader::AddTree ; (; TTree * ; tree, . const TString & ; className, . Double_t ; weight, . const TCut & ; cut, . const TString & ; treeType . ). number of signal events (used to compute significance) ; Definition at line 334 of file DataLoader.cxx. ◆ AddTree() [2/2]. void TMVA::DataLoader::AddTree ; (; TTree * ; tree, . const TString & ; className, . Double_t ; weight = 1.0, . const TCut & ; cut = """", . Types::ETreeType ; tt = Types::kMaxTreeType . ). Definition at line 351 of file DataLoader.cxx. ◆ AddVariable() [1/2]. void TMVA::DataLoader::AddVariable ; (; const TString & ; expression, . char ; type = 'F', . Double_t ; min = 0, . Double_t ; max = 0 . ). user inserts discriminating variable in data set info ; Definition at line 494 of file DataLoader.cxx. ◆ AddVariable() [2/2]. void TMVA::DataLoader::AddVariable ; (; const TString & ; expression, . const TString & ; title, . const TString & ; unit, . char ; type = 'F', . Double_t ; min = 0, . Double_t ; max = 0 . ). user inserts discriminating variable in data set info ; Definition at line 485 of file DataLoader.cxx. ◆ AddVariablesArray(). void TMVA::DataLoader::AddVariablesArray ; (; const TString & ; expression, . int ; size, . char ; type = 'F', . Double_t ; min = 0, . Double_t ; max = 0 . ). user inserts discriminating array of variables in data set info in case input tree provides an array of values ; Definition at line 504 of file DataLoader.cxx. ◆ Class(). static TClass * TMVA::DataLoader::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::DataLoader::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA::DataLoader::Class_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataLoader.html:27463,variab,variable,27463,doc/master/classTMVA_1_1DataLoader.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataLoader.html,1,['variab'],['variable']
Modifiability,"taLoader.cxx:351; TMVA::DataLoader::GetDefaultDataSetInfoconst DataSetInfo & GetDefaultDataSetInfo()Definition DataLoader.h:165; TMVA::DataLoader::fOptionsTString fOptionsoption string given by construction (presently only ""V"")Definition DataLoader.h:194; TMVA::DataLoader::SetInputVariablesvoid SetInputVariables(std::vector< TString > *theVariables)deprecatedDefinition DataLoader.cxx:541; TMVA::DataLoader::fATreeTypeInt_t fATreeTypetype of event (=classIndex)Definition DataLoader.h:206; TMVA::DataLoader::fTestAssignTreestd::vector< TTree * > fTestAssignTreefor each class: tmp tree if user wants to assign the events directlyDefinition DataLoader.h:204; TMVA::DataLoader::fAnalysisTypeTypes::EAnalysisType fAnalysisTypethe training typeDefinition DataLoader.h:210; TMVA::DataLoader::SetCutvoid SetCut(const TString &cut, const TString &className="""")Definition DataLoader.cxx:575; TMVA::DataLoader::AddVariablevoid AddVariable(const TString &expression, const TString &title, const TString &unit, char type='F', Double_t min=0, Double_t max=0)user inserts discriminating variable in data set infoDefinition DataLoader.cxx:485; TMVA::DataLoader::PrepareFoldDataSetvoid PrepareFoldDataSet(CvSplit &s, UInt_t foldNumber, Types::ETreeType tt=Types::kTraining)Function for assigning the correct folds to the testing or training set.Definition DataLoader.cxx:670; TMVA::DataSetInfoClass that contains all the data information.Definition DataSetInfo.h:62; TMVA::DataSetManagerClass that contains all the data information.Definition DataSetManager.h:51; TMVA::Types::EAnalysisTypeEAnalysisTypeDefinition Types.h:126; TMVA::Types::ETreeTypeETreeTypeDefinition Types.h:142; TMVA::Types::kMaxTreeType@ kMaxTreeTypealso used as temporary storage for trees not yet assigned for testing;training...Definition Types.h:145; TMVA::Types::kTraining@ kTrainingDefinition Types.h:143; TStringBasic string class.Definition TString.h:139; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; bool; double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8h_source.html:20128,variab,variable,20128,doc/master/DataLoader_8h_source.html,https://root.cern,https://root.cern/doc/master/DataLoader_8h_source.html,1,['variab'],['variable']
Modifiability,"taOptions & Opt () const;  access to options ;  ; const DataRange & Range () const;  access to range ;  ; unsigned int Size () const;  return number of fit points ;  . Private Attributes; std::unique_ptr< ProxyListBox > fList;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::Fit::FitData; void InitCoordsVector ();  initializer routines to set the corresponding pointers right The vectors must NOT be resized after this initialization without setting the corresponding pointers in the same moment ( has to be an atomic operation in case of multithreading ). ;  ; template<class Iterator > ; void InitFromRange (Iterator dataItr);  ; void UnWrap ();  ;  Static Protected Member Functions inherited from ROOT::Fit::FitData; static constexpr unsigned VectorPadding (const unsigned);  If VecCore is not defined, there is no vectorization available and the SIMD vector size will always be one. ;  ;  Protected Attributes inherited from ROOT::Fit::FitData; unsigned int fDim;  ; unsigned int fMaxPoints;  ; unsigned int fNPoints;  ; bool fWrapped;  . #include <Fit/SparseData.h>. Inheritance diagram for ROOT::Fit::SparseData:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ SparseData() [1/3]. ROOT::Fit::SparseData::SparseData ; (; std::vector< double > & ; min, . std::vector< double > & ; max . ). Constructor with a vector. ; Definition at line 193 of file SparseData.cxx. ◆ SparseData() [2/3]. ROOT::Fit::SparseData::SparseData ; (; const unsigned int ; dim, . double ; min[], . double ; max[] . ). Constructor with a dimension and two arrays. ; Definition at line 203 of file SparseData.cxx. ◆ SparseData() [3/3]. ROOT::Fit::SparseData::SparseData ; (; const SparseData & ; rhs). Copy constructor. ; Definition at line 215 of file SparseData.cxx. ◆ ~SparseData(). ROOT::Fit::SparseData::~SparseData ; (; ). override . Destructor. ; Definition at line 227 of file SparseData.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1SparseData.html:6481,inherit,inherited,6481,doc/master/classROOT_1_1Fit_1_1SparseData.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1SparseData.html,1,['inherit'],['inherited']
Modifiability,"taSet (const char *, const char *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadDataSet (const char *, TList *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadDataSetFromFile (const char *, const char *, const char *=0, Int_t=0, TList *=0);  *** This function is deprecated and will disappear in future versions *** *** It is just a wrapper around TFile::Cp. ;  ; Int_t UploadPackage (const char *par, EUploadPackageOpt opt=kUntar, TList *workers=0);  Upload a PROOF archive (PAR file). ;  ; Bool_t UseDynamicStartup () const;  ; virtual Int_t VerifyDataSet (const char *dataset, const char *optStr="""");  Verify if all files in the specified dataset are available. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:22338,inherit,inherited,22338,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,3,['inherit'],['inherited']
Modifiability,"taSet::EDataSetPassTDataSet::kStop; static TDataSet::EDataSetPassTDataSet::kStruct; static TTable::EColumnTypeTTable::kUChar; static TTable::EColumnTypeTTable::kUInt; static TTable::EColumnTypeTTable::kULong; static TTable::EColumnTypeTTable::kUShort; static TDataSet::EDataSetPassTDataSet::kUp; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSeqCollection*TDataSet::fListList of the the the objects included into this dataset; Long_tTTable::fMaxIndexThe used capacity of this array; Int_tTTable::fNNumber of array elements; TStringTNamed::fNameobject identifier; TDataSet*TDataSet::fParentpointer to mother of the directory; const TTable*fRefTable; Long_tTTable::fSizeSize of the one element (row) of the table; Char_t*TTable::fTableArray of (fN*fSize) longs; TStringTNamed::fTitleobject title; static TTableDescriptor*fgColDescriptors; static TDataSet*TDataSet::fgMainSetpointer the main dataset;. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Dictionary(); to be documented. TIndexTable(const TTable* table); to be documented. TTableDescriptor * CreateDescriptor(); to be documented. TTableDescriptor * GetDescriptorPointer() const; return column descriptor. void SetDescriptorPointer(TTableDescriptor* list); set table descriptor. const TTable * Table() const; to be documented. int * GetTable(Int_t i = 0). { return ((int *)GetArray())+i;}. const int * GetTable(Int_t i = 0) const. { return ((int *)GetArray())+i;}. Bool_t IsValid() const. void push_back(Long_t next). { AddAt(&next); }. iterator & operator=(const TIndexTable& ); {fTable = iter.fTable; fCurrentRow = iter.fCurrentRow; return *this;}. TIndexTable(const TTable* table). TIndexTable(const TIndexTable& indx); {}. iterator begin(); { return ((const TIndexTable *)this)->begin();}. iterator begin() const; { return GetNRows() ? iterator(*Table(),*GetTable(0)):end();}. iterator end(); { return ((const TIndexTable *)this)-",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TIndexTable.html:16590,Inherit,Inheritance,16590,root/html602/TIndexTable.html,https://root.cern,https://root.cern/root/html602/TIndexTable.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"taSet::ESetBitskMark; static TDataSet::EDataSetPasskMarked; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TDataSet::EDataSetPasskPrune; static TDataSet::EDataSetPasskRefs; static TDataSet::EBitOptkReset; static TDataSet::EBitOptkSet; static TObject::(anonymous)TObject::kSingleKey; static TDataSet::EDataSetPasskStop; static TDataSet::EDataSetPasskStruct; static TDataSet::EDataSetPasskUp; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSeqCollection*fListList of the the the objects included into this dataset; TStringTNamed::fNameobject identifier; TDataSet*fParentpointer to mother of the directory; TStringTNamed::fTitleobject title; static TDataSet*fgMainSetpointer the main dataset;. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDataSet(const char* name = """", TDataSet* parent = 0, Bool_t arrayFlag = kFALSE); std::cout << ""ctor for "" << GetName() << "" - "" << GetTitle() << std::endl;. TDataSet * GetRealParent(); return real parent. TDataSet(const TDataSet& src, TDataSet::EDataSetPass iopt = kAll). Creates TDataSet (clone) with a topology similar with TDataSet *pattern. Parameters:. pattern - the pattern dataset; iopt = kStruct - clone only my structural links; kAll - clone all links; kRefs - clone only refs; kMarked - clone marked (not implemented yet) only. All new-created sets become the structural ones anyway. std::cout << ""ctor for "" << GetName() << "" - "" << GetTitle() << std::endl;. TDataSet(TNode& src); This copy ctor has been depricated (left for thwe sake of the backweard compatibility). ~TDataSet(); std::cout << ""Default destructor for "" << GetName() << "" - "" << GetTitle() << std::endl;. void MakeCollection(); Create the internal container at once if a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDataSet.html:12637,Inherit,Inheritance,12637,root/html602/TDataSet.html,https://root.cern,https://root.cern/root/html602/TDataSet.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"taSet::First() const; virtual TSeqCollection*TDataSet::GetCollection() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*TDataSet::GetList() const; virtual Int_tTDataSet::GetListSize() const; static TDataSet*TDataSet::GetMainSet(); TObject*TDataSet::GetMother() const; virtual const char*TNamed::GetName() const; TObjArray*TDataSet::GetObjArray() const; virtual TObject*TDataSet::GetObject() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TDataSet*TDataSet::GetParent() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Long_tHasData() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual TDataSet*TDataSet::Instance() const; static TDataSet*TDataSet::instance(); voidTDataSet::InvertAllMarks()MENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; virtual Bool_tTDataSet::IsMarked() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDataSet::IsThisDir(const char* dirname, int len = -1, int ignorecase = 0) const; Bool_tTObject::IsZombie() const; virtual TDataSet*TDataSet::Last() const; virtual voidTDataSet::ls(Option_t* option = """") const; virtual voidTDataSet::ls(Int_t depth) const; voidTDataSet::Mark()MENU ; voidTDataSet::Mark(UInt_t flag, TDataSet::EBitOpt reset = kSet); voidTDataSet::MarkAll()MENU ; voidTObject::MayNotUse(const char* method) const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFileSet.html:3792,Inherit,InheritsFrom,3792,root/html532/TFileSet.html,https://root.cern,https://root.cern/root/html532/TFileSet.html,4,['Inherit'],['InheritsFrom']
Modifiability,"taSet::GetParent() const; virtual TClass*TTable::GetRowClass() const; virtual TTableDescriptor*TTable::GetRowDescriptors() const; virtual Long_tTTable::GetRowSize() const; Int_tTTable::GetSize() const; int*GetTable(Int_t i = 0); const int*GetTable(Int_t i = 0) const; virtual TTableDescriptor*TTable::GetTableDescriptors() const; virtual Long_tTTable::GetTableSize() const; virtual const char*TNamed::GetTitle() const; virtual const Char_t*TTable::GetType() const; static TTable::EColumnTypeTTable::GetTypeId(const char* typeName); static const char*TTable::GetTypeName(TTable::EColumnType type); virtual UInt_tTTable::GetTypeSize(Int_t columnIndex) const; virtual Int_tTTable::GetTypeSize(const Char_t* columnName = 0) const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Long_tTTable::HasData() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Long_tTTable::InsertRows(const void* rows, Long_t indx, UInt_t nRows = 1); virtual voidTObject::Inspect() constMENU ; virtual TDataSet*TDataSet::Instance() const; static TDataSet*TDataSet::instance(); voidTDataSet::InvertAllMarks()MENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTDataSet::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTTable::IsFolder() const; virtual Bool_tTDataSet::IsMarked() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDataSet::IsThisDir(const char* dirname, int len = -1, int ignorecase = 0) const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual TDataSet*TDataSet::Last() const; virtual voidTDataSet::ls(Option_t* option = """") const; virtual voidTDataSet::ls(Int_t depth) const; virtual Char_t*TTable::MakeExpression(const Ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TIndexTable.html:7242,Inherit,InheritsFrom,7242,root/html532/TIndexTable.html,https://root.cern,https://root.cern/root/html532/TIndexTable.html,4,['Inherit'],['InheritsFrom']
Modifiability,"taSet::add ; (; const RooArgSet & ; data, . double ; wgt, . double ; wgtError . ). Add one ore more rows of data. ; Add a data point, with its coordinates specified in the 'data' argset, to the data set.; Any variables present in 'data' but not in the dataset will be silently ignored. Parameters. [in]dataData point. ; [in]wgtEvent weight. Defaults to 1. The current value of the weight variable is ignored. . NoteTo obtain weighted events, a variable must be designated WeightVar in the constructor. ; Parameters. [in]wgtErrorOptional weight error. . NoteThis requires including the weight variable in the set of StoreError variables when constructing the dataset. ; Definition at line 935 of file RooDataSet.cxx. ◆ add() [2/3]. void RooDataSet::add ; (; const RooArgSet & ; indata, . double ; inweight, . double ; weightErrorLo, . double ; weightErrorHi . ). virtual . Add a data point, with its coordinates specified in the 'data' argset, to the data set. ; Any variables present in 'data' but not in the dataset will be silently ignored. Parameters. [in]indataData point. ; [in]inweightEvent weight. The current value of the weight variable is ignored. . NoteTo obtain weighted events, a variable must be designated WeightVar in the constructor. ; Parameters. [in]weightErrorLoAsymmetric weight error. ; [in]weightErrorHiAsymmetric weight error. . NoteThis requires including the weight variable in the set of StoreAsymError variables when constructing the dataset. ; Definition at line 987 of file RooDataSet.cxx. ◆ add() [3/3]. void RooDataSet::add ; (; const RooArgSet & ; row, . double ; weight = 1.0 . ). inlineoverridevirtual . Implements RooAbsData.; Definition at line 96 of file RooDataSet.h. ◆ addColumn(). RooAbsArg * RooDataSet::addColumn ; (; RooAbsArg & ; var, . bool ; adjustRange = true . ). virtual . Add a column with the values of the given (function) argument to this dataset. ; The function value is calculated for each event using the observable values of each event in case",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataSet.html:43259,variab,variables,43259,doc/master/classRooDataSet.html,https://root.cern,https://root.cern/doc/master/classRooDataSet.html,1,['variab'],['variables']
Modifiability,"taSetFromFile(const char* , const char* , const char* = 0, Int_t = 0, TList* = 0); *** This function is deprecated and will disappear in future versions ***; *** It is just a wrapper around TFile::Cp.; *** Please use TProofMgr::UploadFiles. Upload files listed in ""file"" to PROOF cluster.; Where file = name of file containing list of files and; dataset = dataset name and opt is a combination of EUploadOpt bits.; Each file description (line) can include wildcards.; Check TFileInfo compatibility. Bool_t RegisterDataSet(const char* name, TFileCollection* dataset, const char* optStr = """"); Register the 'dataSet' on the cluster under the current; user, group and the given 'dataSetName'.; If a dataset with the same name already exists the action fails unless 'opts'; contains 'O', in which case the old dataset is overwritten, or contains 'U',; in which case 'newDataSet' is added to the existing dataset (duplications are; ignored, if any).; If 'opts' contains 'V' the dataset files are also verified (if the dataset manager; is configured to allow so). By default the dataset is not verified.; If 'opts' contains 'T' the in the dataset object (status bits, meta,...); is trusted, i.e. not reset (if the dataset manager is configured to allow so).; If 'opts' contains 'S' validation would be run serially (meaningful only if; validation is required).; Returns kTRUE on success. Int_t SetDataSetTreeName(const char* dataset, const char* treename); Set/Change the name of the default tree. The tree name may contain; subdir specification in the form ""subdir/name"".; Returns 0 on success, -1 otherwise. TMap * GetDataSets(const char* uri = """", const char* optStr = """"); Lists all datasets that match given uri.; The 'optStr' can contain a comma-separated list of servers for which the; information is wanted. If ':lite:' (case insensitive) is specified in 'optStr'; only the global information in the TFileCollection is retrieved; useful to only; get the list of available datasets. void ShowDataSets",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProof.html:91585,config,configured,91585,root/html534/TProof.html,https://root.cern,https://root.cern/root/html534/TProof.html,6,['config'],['configured']
Modifiability,"taSetManager * fDataSetManager;  . Friends; class Experimental::Classification;  ; class Factory;  ; class MethodBoost;  ; class Reader;  . Additional Inherited Members;  Public Types inherited from TMVA::MethodBase; enum  EWeightFileType { kROOT =0; , kTEXT; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TMVA::MethodBase; Bool_t fSetupCompleted;  ; TrainingHistory fTrainHistory;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMVA/MethodCategory.h>. Inheritance diagram for TMVA::MethodCategory:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ MethodCategory() [1/2]. TMVA::MethodCategory::MethodCategory ; (; const TString & ; jobName, . const TString & ; methodTitle, . DataSetInfo & ; theData, . const TString & ; theOption = """" . ). standard constructor ; Definition at line 80 of file MethodCategory.cxx. ◆ MethodCategory() [2/2]. TMVA::MethodCategory::MethodCategory ; (; DataSetInfo & ; dsi, . const TString & ; theWeightFile . ). constructor from weight file ; Definition at line 93 of file MethodCategory.cxx. ◆ ~MethodCategory(). TMVA::MethodCategory::~MethodCategory ; (; void ; ). virtual . destructor ; Definition at line 104 of file MethodCategory.cxx. Member Function Documentation. ◆ AddMethod(). TMVA::IM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCategory.html:30604,inherit,inherited,30604,doc/master/classTMVA_1_1MethodCategory.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCategory.html,2,['inherit'],['inherited']
Modifiability,"taTList * GetListOfRealData() constDefinition TClass.h:453; TClass::CanIgnoreTObjectStreamerBool_t CanIgnoreTObjectStreamer()Definition TClass.h:393; TClass::GetSchemaRulesconst ROOT::Detail::TSchemaRuleSet * GetSchemaRules() constReturn the set of the schema rules if any.Definition TClass.cxx:1999; TClass::GetListOfBasesTList * GetListOfBases()Return list containing the TBaseClass(es) of a class.Definition TClass.cxx:3703; TClass::IsLoadedBool_t IsLoaded() constReturn true if the shared library of this class is currently in the a process's memory.Definition TClass.cxx:5979; TClass::IsTObjectBool_t IsTObject() constReturn kTRUE is the class inherits from TObject.Definition TClass.cxx:6005; TClass::GetStreamerInfoTVirtualStreamerInfo * GetStreamerInfo(Int_t version=0, Bool_t isTransient=kFALSE) constreturns a pointer to the TVirtualStreamerInfo object for version If the object does not exist,...Definition TClass.cxx:4666; TClass::InheritsFromBool_t InheritsFrom(const char *cl) const overrideReturn kTRUE if this class inherits from a class with name ""classname"".Definition TClass.cxx:4941; TClass::GetCollectionProxyTVirtualCollectionProxy * GetCollectionProxy() constReturn the proxy describing the collection (if any).Definition TClass.cxx:2964; TClass::GetConversionStreamerInfoTVirtualStreamerInfo * GetConversionStreamerInfo(const char *onfile_classname, Int_t version) constReturn a Conversion StreamerInfo from the class 'classname' for version number 'version' to this clas...Definition TClass.cxx:7153; TClass::FindConversionStreamerInfoTVirtualStreamerInfo * FindConversionStreamerInfo(const char *onfile_classname, UInt_t checksum) constReturn a Conversion StreamerInfo from the class 'classname' for the layout represented by 'checksum' ...Definition TClass.cxx:7260; TClass::GetClassVersionVersion_t GetClassVersion() constDefinition TClass.h:420; TClass::GetActualClassTClass * GetActualClass(const void *object) constReturn a pointer to the real class of the object.Defini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:403044,inherit,inherits,403044,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"taWeightedAverage Optimized calculator of data weighted average of a RooAbsReal; RooDecay General decay function p.d.f ; RooDerivative Representation of derivative of any RooAbsReal; RooDirItem Base class for RooFit objects that are listed TDirectories; RooDouble Container class for Double_t; RooDstD0BG D*-D0 mass difference background PDF; RooEffGenContext Context for generating a dataset from a PDF; RooEffProd Product operator p.d.f of (PDF x efficiency) implementing optimized generator context; RooEfficiency Generic PDF defined by string expression and list of variables; RooEllipse 2-dimensional contour; RooErrorVar RooAbsRealLValue representation of an error of a RooRealVar; RooExpensiveObjectCache Singleton class that serves as session repository for expensive objects; RooExpensiveObjectCache::ExpensiveObject Cache element containing expensive object and parameter values for which object is valid; RooExponential Exponential PDF; RooExtendPdf Wrapper p.d.f adding an extended likelihood term to an existing p.d.f; RooExtendedBinding Your description goes here...; RooExtendedTerm Meta-p.d.f flat in all observables introducing only extended ML term; RooFFTConvPdf Convolution operator p.d.f based on numeric Fourier transforms; RooFIter ; RooFactoryWSTool RooFit class code and instance factory ; RooFirstMoment Representation of moment in a RooAbsReal in a given RooRealVar; RooFit ; RooFitResult Container class for fit result; RooFitShortHand ; RooFoamGenerator Context for generating a dataset from a PDF using the TFoam class; RooFormula TFormula derived class interfacing with RooAbsArg objects; RooFormulaVar Real-valued function of other RooAbsArgs calculated by a TFormula expression; RooFracRemainder Utility function calculating remainder fraction, i.e. 1-sum_i(a_i); RooFunctor Export RooAbsReal as functor; RooFunctor1DBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctor1DPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionOneDim; RooFun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassIndex.html:35611,extend,extended,35611,root/html534/ClassIndex.html,https://root.cern,https://root.cern/root/html534/ClassIndex.html,2,['extend'],['extended']
Modifiability,"taWeightedAverage Optimized calculator of data weighted average of a RooAbsReal; RooDecay General decay function p.d.f ; RooDerivative Representation of derivative of any RooAbsReal; RooDirItem Base class for RooFit objects that are listed TDirectories; RooDouble Container class for Double_t; RooDstD0BG D*-D0 mass difference background PDF; RooEffGenContext Context for generating a dataset from a PDF; RooEffProd Product operator p.d.f of (PDF x efficiency) implementing optimized generator context; RooEfficiency Generic PDF defined by string expression and list of variables; RooEllipse 2-dimensional contour; RooErrorVar RooAbsRealLValue representation of an error of a RooRealVar; RooExpensiveObjectCache Singleton class that serves as session repository for expensive objects; RooExpensiveObjectCache::ExpensiveObject Cache element containing expensive object and parameter values for which object is valid; RooExponential Exponential PDF; RooExtendPdf Wrapper p.d.f adding an extended likelihood term to an existing p.d.f; RooExtendedTerm Meta-p.d.f flat in all observables introducing only extended ML term; RooFFTConvPdf Convolution operator p.d.f based on numeric Fourier transforms; RooFIter ; RooFactoryWSTool RooFit class code and instance factory ; RooFit ; RooFitResult Container class for fit result; RooFitShortHand ; RooFoamGenerator Context for generating a dataset from a PDF using the TFoam class; RooFormula TFormula derived class interfacing with RooAbsArg objects; RooFormulaVar Real-valued function of other RooAbsArgs calculated by a TFormula expression; RooFracRemainder Utility function calculating remainder fraction, i.e. 1-sum_i(a_i); RooFunctor Export RooAbsReal as functor; RooFunctor1DBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctor1DPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctorBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionMultiDim; RooFunctorPdfBinding RooAbsPdf binding to a ROOT::Math::IB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ClassIndex.html:35193,extend,extended,35193,root/html532/ClassIndex.html,https://root.cern,https://root.cern/root/html532/ClassIndex.html,1,['extend'],['extended']
Modifiability,"taWeightedAverage Optimized calculator of data weighted average of a RooAbsReal; RooDecay General decay function p.d.f ; RooDerivative Representation of derivative of any RooAbsReal; RooDirItem Base class for RooFit objects that are listed TDirectories; RooDouble Container class for Double_t; RooDstD0BG D*-D0 mass difference background PDF; RooEffGenContext Context for generating a dataset from a PDF; RooEffProd Product operator p.d.f of (PDF x efficiency) implementing optimized generator context; RooEfficiency Generic PDF defined by string expression and list of variables; RooEllipse 2-dimensional contour; RooErrorVar RooAbsRealLValue representation of an error of a RooRealVar; RooExpensiveObjectCache Singleton class that serves as session repository for expensive objects; RooExpensiveObjectCache::ExpensiveObject Cache element containing expensive object and parameter values for which object is valid; RooExponential Exponential PDF; RooExtendPdf Wrapper p.d.f adding an extended likelihood term to an existing p.d.f; RooExtendedTerm Meta-p.d.f flat in all observables introducing only extended ML term; RooFFTConvPdf Convolution operator p.d.f based on numeric Fourier transforms; RooFactoryWSTool RooFit class code and instance factory ; RooFit ; RooFitResult Container class for fit result; RooFitShortHand ; RooFoamGenerator Context for generating a dataset from a PDF using the TFoam class; RooFormula TFormula derived class interfacing with RooAbsArg objects; RooFormulaVar Real-valued function of other RooAbsArgs calculated by a TFormula expression; RooFracRemainder Utility function calculating remainder fraction, i.e. 1-sum_i(a_i); RooFunctor Export RooAbsReal as functor; RooFunctor1DBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctor1DPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctorBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionMultiDim; RooFunctorPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunction",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html524/ClassIndex.html:33461,extend,extended,33461,root/html524/ClassIndex.html,https://root.cern,https://root.cern/root/html524/ClassIndex.html,4,['extend'],['extended']
Modifiability,"ta_col_dot< 0 >;  ; struct  meta_dot;  ; struct  meta_dot< 0 >;  ; struct  meta_mag;  ; struct  meta_mag< 0 >;  ; struct  meta_matrix_dot;  ; struct  meta_matrix_dot< 0 >;  ; struct  meta_row_dot;  ; struct  meta_row_dot< 0 >;  ; class  Minimizer;  Abstract Minimizer class, defining the interface for the various minimizer (like Minuit2, Minuit, GSL, etc..) in ROOT. More...;  ; class  MinimizerOptions;  Minimizer options. More...;  ; class  MinimizerVariableTransformation;  Base class for MinimizerVariable transformations defining the functions to deal with bounded parameters. More...;  ; class  MinimTransformFunction;  MinimTransformFunction class to perform a transformations on the variables to deal with fixed or limited variables (support both double and single bounds) The class manages the passed function pointer. More...;  ; class  MinimTransformVariable;  MinimTransformVariable class Contains meta information of the variables such as bounds, fix flags and deals with transformation of the variable The class does not contain the values and the step size (error) of the variable This is an internal class used by the MinimTransformFunction class. More...;  ; class  MinOp;  Subtraction Operation Class. More...;  ; class  Minus;  Unary Minus Operation Class. More...;  ; struct  MinusEquals;  Evaluate the expression performing a -= operation Need to check whether creating a temporary object with the expression result (like in op: A -= A * B ) More...;  ; struct  MinusEquals< T, D1, D2, A, MatRepSym< T, D1 >, MatRepStd< T, D1, D2 > >;  Specialization for symmetrix -= general : NOT Allowed operation. More...;  ; struct  MinusEquals< T, D1, D2, A, MatRepSym< T, D1 >, MatRepSym< T, D1 > >;  Specialization for symmetric matrices. More...;  ; struct  MiserParameters;  Structure collecting parameters for MISER multidimensional integration. More...;  ; class  MixMaxEngine;  MixMaxEngine is a wrapper class for the MIXMAX Random number generator. More...;  ; class  MixMaxEngineI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math.html:21339,variab,variables,21339,doc/master/namespaceROOT_1_1Math.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math.html,6,['variab'],"['variable', 'variables']"
Modifiability,"table*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TRefTEveElement::fSourceExternal object that is represented by this element.; TEvePointSelectorConsumer::ETreeVarType_eTEvePointSelectorConsumer::fSourceCSCoordinate-System of the source tree variables; TStringTEvePointSet::fTitleTitle/tooltip of the TEvePointSet.; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEvePointSetProjected(); Default contructor. void SetProjection(TEveProjectionManager* proj, TEveProjectable* model); Set projection manager and projection model.; Virtual from TEveProjected. void SetDepthLocal(Float_t d); Set depth (z-coordinate) of the projected points. void UpdateProjection(); Re-apply the projection.; Virtual from TEveProjected. void PointSelected(Int_t id); Virtual method of base class TPointSet3D.; Forward to projectable. TEvePointSet& operator=(const TEvePointSetProjected& ). TEvePointSetProjected(const TEvePointSetProjected& ). virtual ~TEvePointSetProjected(); {}. TEveElement* GetProjectedAsElement(); { return this; }. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEvePointSetProjected.html:27689,Inherit,Inheritance,27689,root/html534/TEvePointSetProjected.html,https://root.cern,https://root.cern/root/html534/TEvePointSetProjected.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"table::StyleOptionRooPrintable::kSingleLine; static RooPrintable::StyleOptionRooPrintable::kStandard; static RooPrintable::ContentsOptionRooPrintable::kTitle; static RooPrintable::StyleOptionRooPrintable::kTreeStructure; static RooPrintable::ContentsOptionRooPrintable::kValue; static RooPrintable::StyleOptionRooPrintable::kVerbose; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Double_t*_array! do not persist; Double_t_binw; RooListProxy*_lp; static Int_tRooPrintable::_nameLength; Int_t_nbins; RooAbsArg*_owner; RooAbsReal*_xhi!; RooAbsReal*_xlo!; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooParamBinning(const char* name = 0); Default constructor; cout << ""RooParamBinning("" << this << "") default ctor"" << endl ;. RooParamBinning(RooAbsReal& xlo, RooAbsReal& xhi, Int_t nBins, const char* name = 0); Construct binning with 'nBins' bins and with a range; parameterized by external RooAbsReals xloIn and xhiIn. ~RooParamBinning(); Destructor. RooParamBinning(const RooParamBinning& other, const char* name = 0); Copy constructor; cout << ""RooParamBinning::cctor("" << this << "") orig = "" << &other << endl ;. void insertHook(RooAbsRealLValue& ) const; Hook function called by RooAbsRealLValue when this binning; is inserted as binning for into given owner. Create; list proxy registered with owner that will track and implement; server directs to external RooAbsReals of this binning. void removeHook(RooAbsRealLValue& ) const; Hook function called by RooAbsRealLValue when this binning; is removed as binning for into given owner. Delete list; proxy that was inserted in owner. void setRange(Double_t xlo, Double_t xhi); Adjust range by adjusting values of external RooAbsReal values; Only functional when external representations are lvalues. Int_t binNumber(Double_t x) const; Return the fit bin index for the c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooParamBinning.html:9884,parameteriz,parameterized,9884,root/html602/RooParamBinning.html,https://root.cern,https://root.cern/root/html602/RooParamBinning.html,4,['parameteriz'],['parameterized']
Modifiability,"table::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooRealProxy_origModelOriginal resolution model; RooRealProxy_origPdfOriginal input PDF; RooRealProxy_origVarOriginal convolution variable; RooArgSet_ownedClonedModelSetOwning set of cloned model components; RooArgSet_ownedClonedPdfSetOwning set of cloned PDF components; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Bool_t_useWindowSwitch to activate window convolution; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; Int_t_verboseThreshCall count threshold for verbose printing; RooListProxy_windowParamHolder for optional convolution integration window scaling parameter; Double_t_windowScaleScale factor for window parameter; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooNumConvolution.html:35843,config,configuration,35843,root/html530/RooNumConvolution.html,https://root.cern,https://root.cern/root/html530/RooNumConvolution.html,1,['config'],['configuration']
Modifiability,"table::kTitle; static RooPrintable::StyleOptionRooPrintable::kTreeStructure; static RooPrintable::ContentsOptionRooPrintable::kValue; static RooPrintable::StyleOptionRooPrintable::kVerbose; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. static Int_tRooPrintable::_nameLength. private:. Int_t_len; char*_nameList[_len]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void strdup(Int_t& dstlen, char*& dstbuf, const char* str); copy src to dst, keep dstlen up to date, make sure zero length strings; do not take memory. RooNameSet(); Default constructor. RooNameSet(const RooArgSet& argSet); Construct from RooArgSet. RooNameSet(const RooNameSet& other); Copy constructor. ~RooNameSet(); Destructor. RooNameSet& operator=(const RooNameSet& ); Assignment operator. Bool_t operator==(const RooNameSet& other) const; Comparison operator. Bool_t operator<(const RooNameSet& other) const. void extendBuffer(Int_t inc). void setNameList(const char* givenList). void refill(const RooArgSet& argSet); Refill internal contents from names in given argSet. RooArgSet* select(const RooArgSet& list) const; Construct a RooArgSet of objects in input 'list'; whose names match to those in the internal name; list of RooNameSet. void printName(ostream& os) const; Print name of nameset. void printTitle(ostream& os) const; Print title of nameset. void printClassName(ostream& os) const; Print class name of nameset. void printValue(ostream& os) const; Print value of nameset, i.e the list of names. TObject* Clone(const char* ) const; { return new RooNameSet(*this) ; }. void Print(Option_t* options = 0) const. const char* content() const; { return _nameList ? _nameList : """"; }. » Last changed: Tue Jun 30 14:34:23 2015 » Last generated: 2015-06-30 14:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooNameSet.html:8655,extend,extendBuffer,8655,root/html602/RooNameSet.html,https://root.cern,https://root.cern/root/html602/RooNameSet.html,2,['extend'],['extendBuffer']
Modifiability,"tails and wide for regions with low event density to promote smoothness. The details of the general algorithm are described in the following paper:; Cranmer KS, Kernel Estimation in High-Energy Physics. Computer Physics Communications 136:198-207,2001 - e-Print Archive: hep ex/0011057 ; Definition at line 24 of file RooKeysPdf.h. Public Types; enum  Mirror { ;   NoMirror; , MirrorLeft; , MirrorRight; , MirrorBoth; , ;   MirrorAsymLeft; , MirrorAsymLeftRight; , MirrorAsymRight; , MirrorLeftAsymRight; , ;   MirrorAsymBoth. };  ;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooKeysPdf.html:1398,inherit,inherited,1398,doc/master/classRooKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRooKeysPdf.html,4,['inherit'],['inherited']
Modifiability,"tain a list of RECORDS. A record can be produced in the following way: dragging leaves/expression on X/Y/Z; changing drawing options; clicking the RED button on the bottom when happy with the histogram; NOTE that just double clicking a leaf will not produce a record: the histogram must be produced when clicking the DRAW button on the bottom-left. The records will appear on the list of records in the bottom right of the tree viewer. Selecting a record will draw the corresponding histogram. Records can be played using the arrow buttons near to the record button. When saving the session, the list of records is being saved as well.; Records have a default name corresponding to the Z: Y: X selection, but this can be changed using SetRecordName() method from the right panel context menu. You can create a new expression by right clicking on any of theE() boxes. The expression can be dragged and dropped into any of the boxes (X, Y, Z, Cut, or Scan). To scan one or more variables, drop them into the Scan box, then double click on the box. You can also redirect the result of the scan to a file by checking the Scan box on top. When the “Rec” box is checked, the Draw and Scan commands are recorded in the history file and echoed on the command line. The “Histogram” text box contains the name of the resulting histogram. By default it is htemp. You can type any name, if the histogram does not exist it will create one. The Option text box contains the list of Draw options. See “Draw Options”. You can select the options with the Options menu. The Command box lets you enter any command that you could also enter on the command line. The vertical slider on the far left side can be used to select the minimum and maximum of an event range. The actual start and end index are shown in on the bottom in the status window.; There is an extensive help utility accessible with the Help menu. The IList and OList are to specify an input list of entry indices and a name for the output list respecti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:528981,variab,variables,528981,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variables']
Modifiability,"tainer &outputContainer) constDefinition NeuralNet.icc:1291; TMVA::DNN::Net::inputSizesize_t inputSize() constinput size of the DNNDefinition NeuralNet.h:1098; TMVA::DNN::Net::clearvoid clear()Definition NeuralNet.h:1251; TMVA::DNN::Net::begin_end_typestd::pair< iterator_type, iterator_type > begin_end_typeDefinition NeuralNet.h:1067; TMVA::DNN::Net::m_eErrorFunctionModeErrorFunction m_eErrorFunctiondenotes the error functionDefinition NeuralNet.h:1269; TMVA::DNN::Net::dEvoid dE(); TMVA::DNN::Net::addLayervoid addLayer(Layer &&layer)Definition NeuralNet.h:1095; TMVA::DNN::Net::numNodessize_t numNodes(size_t trainingStartLayer=0) constreturns the number of nodes in this netDefinition NeuralNet.cxx:556; TMVA::DNN::Net::traindouble train(std::vector< double > &weights, std::vector< Pattern > &trainPattern, const std::vector< Pattern > &testPattern, Minimizer &minimizer, Settings &settings)start the trainingDefinition NeuralNet.icc:712; TMVA::DNN::Net::layersconst std::vector< Layer > & layers() constreturns the layers (structure)Definition NeuralNet.h:1245; TMVA::DNN::Net::prepareLayerDatastd::vector< std::vector< LayerData > > prepareLayerData(LayerContainer &layers, Batch &batch, const DropContainer &dropContainer, ItWeight itWeightBegin, ItWeight itWeightEnd, ItGradient itGradientBegin, ItGradient itGradientEnd, size_t &totalNumWeights) constDefinition NeuralNet.icc:1111; TMVA::DNN::Net::setErrorFunctionvoid setErrorFunction(ModeErrorFunction eErrorFunction)which error function is to be usedDefinition NeuralNet.h:1096; TMVA::DNN::Net::initializeWeightsvoid initializeWeights(WeightInitializationStrategy eInitStrategy, OutIterator itWeight)initialize the weights with the given strategyDefinition NeuralNet.icc:1470; TMVA::DNN::Net::outputSizesize_t outputSize() constoutput size of the DNNDefinition NeuralNet.h:1099; TMVA::DNN::Net::errorFunctiondouble errorFunction(LayerData &layerData, Container truth, ItWeight itWeight, ItWeight itWeightEnd, double patternWeight, doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8h_source.html:67197,layers,layersconst,67197,doc/master/NeuralNet_8h_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8h_source.html,3,['layers'],"['layers', 'layersconst']"
Modifiability,"tal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH1D(); Constructor. TH1D(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup). Create a 1-Dim histogram with fix bins of type double. (see TH1::TH1 for explanation of parameters). TH1D(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins). Create a 1-Dim histogram with variable bins of type double. (see TH1::TH1 for explanation of parameters). TH1D(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins). Create a 1-Dim histogram with variable bins of type double. (see TH1::TH1 for explanation of parameters). TH1D(const TVectorD& v); Create a histogram from a TVectorD; by default the histogram name is ""TVectorD"" and title = """". ~TH1D(); Destructor. TH1D(const TH1D& h1d); Constructor. void Copy(TObject& hnew) const; Copy this to newth1. TH1 * DrawCopy(Option_t* option = """") const; Draw copy. Double_t GetBinContent(Int_t bin) const; see convention for numbering bins in TH1::GetBin. void Reset(Option_t* option = """"); Reset. void SetBinContent(Int_t bin, Double_t content); Set bin content; see convention for numbering bins in TH1::GetBin; In case the bin number is greater than the number of bins and; the timedisplay option is set or the kCanRebin bit is set,; the number of bins is automatically doubled to accommodate the new bin. void S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH1D.html:22872,variab,variable,22872,root/html532/TH1D.html,https://root.cern,https://root.cern/root/html532/TH1D.html,4,['variab'],['variable']
Modifiability,"tal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH1D(); Constructor. TH1D(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup). Create a 1-Dim histogram with fix bins of type double. (see TH1::TH1 for explanation of parameters). TH1D(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins). Create a 1-Dim histogram with variable bins of type double. (see TH1::TH1 for explanation of parameters). TH1D(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins). Create a 1-Dim histogram with variable bins of type double. (see TH1::TH1 for explanation of parameters). TH1D(const TVectorD& v); Create a histogram from a TVectorD; by default the histogram name is ""TVectorD"" and title = """". ~TH1D(); Destructor. TH1D(const TH1D& h1d); Constructor. void Copy(TObject& hnew) const; Copy this to newth1. TH1 * DrawCopy(Option_t* option = """") const; Draw copy. Double_t GetBinContent(Int_t bin) const; see convention for numbering bins in TH1::GetBin. void Reset(Option_t* option = """"); Reset. void SetBinContent(Int_t bin, Double_t content); Set bin content; see convention for numbering bins in TH1::GetBin; In case the bin number is greater than the number of bins and; the timedisplay option is set or the kCanRebin bit is set,; the number of bins is automatically doubled to accomodate the new bin. void Se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH1D.html:22356,variab,variable,22356,root/html528/TH1D.html,https://root.cern,https://root.cern/root/html528/TH1D.html,2,['variab'],['variable']
Modifiability,"tal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual RooDataSet*generate(Double_t nEvents = 0, Bool_t skipInit = kFALSE, Bool_t extendedMode = kFALSE); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tRooAbsGenContext::isValid() const; Bool_tRooAbsGenContext::isVerbose() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooBinnedGenContext.html:3039,Inherit,InheritsFrom,3039,root/html534/RooBinnedGenContext.html,https://root.cern,https://root.cern/root/html534/RooBinnedGenContext.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual RooDataSet*generate(Double_t nEvents = 0, Bool_t skipInit = kFALSE, Bool_t extendedMode = kFALSE); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tRooAbsGenContext::isValid() const; Bool_tRooAbsGenContext::isVerbose() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooBinnedGenContext.html:2881,Inherit,InheritsFrom,2881,root/html602/RooBinnedGenContext.html,https://root.cern,https://root.cern/root/html602/RooBinnedGenContext.html,4,['Inherit'],['InheritsFrom']
Modifiability,"tal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual RooDataSet*generate(Double_t nEvents = 0, Bool_t skipInit = kFALSE, Bool_t extendedMode = kFALSE); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tisValid() const; Bool_tisVerbose() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsGenContext.html:3250,Inherit,InheritsFrom,3250,root/html602/RooAbsGenContext.html,https://root.cern,https://root.cern/root/html602/RooAbsGenContext.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tance diagram for ROOT::Math::DistSampler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ DistSampler(). ROOT::Math::DistSampler::DistSampler ; (; ). inline . default constructor ; Definition at line 62 of file DistSampler.h. ◆ ~DistSampler(). ROOT::Math::DistSampler::~DistSampler ; (; ). virtual . virtual destructor ; Definition at line 29 of file DistSampler.cxx. Member Function Documentation. ◆ DoSetDimension(). void ROOT::Math::DistSampler::DoSetDimension ; (; unsigned int ; ndim). protectedvirtual . Definition at line 78 of file DistSampler.cxx. ◆ DoSetFunction(). void ROOT::Math::DistSampler::DoSetFunction ; (; const ROOT::Math::IMultiGenFunction & ; func, . bool ; copy . ). protectedvirtual . Definition at line 63 of file DistSampler.cxx. ◆ Generate() [1/4]. bool ROOT::Math::DistSampler::Generate ; (; unsigned int ; nevt, . const int * ; nbins, . ROOT::Fit::BinData & ; data, . bool ; extend = true, . bool ; expErr = true . ). virtual . Generate a binned data set. ; A range must have been set before (otherwise inf is returned) and the bins are equidistant in the previously defined range bin center values must be present in given data set If the sampler is implemented by a random one, the entries will be binned according to the Poisson distribution It is assumed the distribution is normalized, otherwise the nevt must be scaled accordingly. The expected value/bin nexp = f(x_i) * binArea/ nevt Extend control if use a fixed (i.e. multinomial statistics) or floating total number of events ; Definition at line 135 of file DistSampler.cxx. ◆ Generate() [2/4]. bool ROOT::Math::DistSampler::Generate ; (; unsigned int ; nevt, . double * ; data, . bool ; eventRow = false . ). virtual . Generate a vector of events by filling the passed data vector. ; The flag eventRow indicates how the events are arranged in the multi-dim case. The can be arranged in rows or in columns. With eventR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1DistSampler.html:6011,extend,extend,6011,doc/master/classROOT_1_1Math_1_1DistSampler.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1DistSampler.html,1,['extend'],['extend']
Modifiability,"tance diagram for ROOT::Math::RMinimizer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RMinimizer(). ROOT::Math::RMinimizer::RMinimizer ; (; Option_t * ; method). Default constructor. ; Default constructor with option for the method of minimization, can be any of the following: ""Nelder-Mead"", ""BFGS"", ""CG"", ""L-BFGS-B"", ""SANN"", ""Brent"" (Brent only for 1D minimization); See R optim or optimx descriptions for more details and options. ; Definition at line 38 of file RMinimizer.cxx. ◆ ~RMinimizer(). ROOT::Math::RMinimizer::~RMinimizer ; (; ). inlineoverride . Destructor. ; Definition at line 53 of file RMinimizer.h. Member Function Documentation. ◆ CovMatrix(). double ROOT::Math::RMinimizer::CovMatrix ; (; unsigned int ; ivar, . unsigned int ; jvar . ); const. inlineoverridevirtual . return covariance matrices element for variables ivar,jvar if the variable is fixed the return value is zero The ordering of the variables is the same as in the parameter and errors vectors ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 68 of file RMinimizer.h. ◆ Errors(). const double * ROOT::Math::RMinimizer::Errors ; (; ); const. inlineoverridevirtual . return errors at the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 63 of file RMinimizer.h. ◆ GetCovMatrix(). bool ROOT::Math::RMinimizer::GetCovMatrix ; (; double * ; covMat); const. inlineoverridevirtual . Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ; The array will be filled as cov[i *ndim + j] The ordering of the variables is the same as in errors and parameter value. This is different from the direct interface of Minuit2 or TMinuit where the values were obtained only to variable parameters ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 79 of file RMinimizer.h. ◆ HessMatrix(). double ROOT::Math::RMinimizer::HessMatrix ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RMinimizer.html:12688,variab,variables,12688,doc/master/classROOT_1_1Math_1_1RMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RMinimizer.html,3,['variab'],"['variable', 'variables']"
Modifiability,"tance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » NET; » NET; » TSQLColumnInfo. class TSQLColumnInfo: public TNamed. TSQLColumnInfo. Contains information about single column from SQL table; Has following methods:; GetTypeName() - field type name in string form as it is reported by correspondent; database method. Some databases providing full type name like ""numeric(20)"",; other showing only ""NUMERIC"". As a result, one cannot use this string directly; to create new field of similar types in other table; IsNullable() - says if field value can be NULL or not; GetSQLType() - returns kind of sql type. Possible values:; TSQLServer::kSQL_NONE data type unknown; TSQLServer::kSQL_CHAR CHAR(n) - string with fixed length n; TSQLServer::kSQL_VARCHAR VARCHAR(n) - string with variable length upto n; TSQLServer::kSQL_INTEGER INTEGER, INT, TINYINT - any integer types; TSQLServer::kSQL_FLOAT FLOAT - float value; TSQLServer::kSQL_DOUBLE DOUBLE - double precision value; TSQLServer::kSQL_NUMERIC NUMERIC(n,s), NUMBER(n,s) - numeric values with length and precion; TSQLServer::kSQL_BINARY BLOB, VARBINARY - binary data (vriable or fixed size); TSQLServer::kSQL_TIMESTAMP TIMESTAMP - time and date stamp; GetSize() - size of field in database. -1 if not known.; GetLength() - length argument in type declaration like CHAR(len) or NUMERIC(len), -1 if not defined; GetScale() - second argument in declarations like NUMERIC(len, s), -1 if not defined; GetSigned() - is type signed(==1) or unsigned(==0), -1 if not defined. Function Members (Methods); public:. virtual~TSQLColumnInfo(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSQLColumnInfo.html:980,variab,variable,980,root/html602/TSQLColumnInfo.html,https://root.cern,https://root.cern/root/html602/TSQLColumnInfo.html,4,['variab'],['variable']
Modifiability,"tance. ;  ;  RooBinWidthFunction (const char *name, const char *title, const RooHistFunc &histFunc, bool divideByBinWidth);  Create an instance. ;  ;  RooBinWidthFunction (const RooBinWidthFunction &other, const char *newname=nullptr);  Copy an existing object. ;  ; std::list< double > * binBoundaries (RooAbsRealLValue &obs, double xlo, double xhi) const override;  Return bin boundaries of internal RooHistFunc. ;  ; TObject * clone (const char *newname=nullptr) const override;  Copy the object and return as TObject*. ;  ; std::unique_ptr< RooAbsArg > compileForNormSet (RooArgSet const &normSet, RooFit::Detail::CompileContext &ctx) const override;  ; bool divideByBinWidth () const;  ; void doEval (RooFit::EvalContext &) const override;  Compute bin index for all values of the observable(s) in evalData, and return their volumes or inverse volumes, depending on the configuration chosen in the constructor. ;  ; double evaluate () const override;  Compute current bin of observable, and return its volume or inverse volume, depending on configuration chosen in the constructor. ;  ; const RooHistFunc & histFunc () const;  ; TClass * IsA () const override;  ; bool isBinnedDistribution (const RooArgSet &obs) const override;  Test if internal RooHistFunc is binned. ;  ; std::list< double > * plotSamplingHint (RooAbsRealLValue &obs, double xlo, double xhi) const override;  Return plotSamplingHint of internal RooHistFunc. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinWidthFunction.html:1748,config,configuration,1748,doc/master/classRooBinWidthFunction.html,https://root.cern,https://root.cern/doc/master/classRooBinWidthFunction.html,1,['config'],['configuration']
Modifiability,"tancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; Int_tGetBoostNum(); TMVA::Types::EBoostStageGetBoostStage(); const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; TMVA::IMethod*TMVA::MethodCompositeBase::GetCurrentMethod(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTMVA::MethodBase::GetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&TMVA::MethodBase::GetEventCollection(TMVA::Types::ETreeType type); virtual const char*TObject::GetIconName() const; const TString&TMVA::MethodBase::GetInputLabel(Int_t i) const; const TString&TMVA::MethodBase::GetInputTitle(Int_t i) const; const TString&TMVA::MethodBase::GetInputVar(Int_t i) const; const TString&TMVA::MethodBase::GetJobN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodBoost.html:2945,Config,Configurable,2945,root/html532/TMVA__MethodBoost.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodBoost.html,1,['Config'],['Configurable']
Modifiability,"tancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; TMVA::IMethod*GetCurrentMethod(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTMVA::MethodBase::GetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&TMVA::MethodBase::GetEventCollection(TMVA::Types::ETreeType type); virtual const char*TObject::GetIconName() const; const TString&TMVA::MethodBase::GetInputLabel(Int_t i) const; const TString&TMVA::MethodBase::GetInputTitle(Int_t i) const; const TString&TMVA::MethodBase::GetInputVar(Int_t i) const; const TString&TMVA::MethodBase::GetJobName() const; TMVA::IMethod*GetLastMethod(); virtual Double_tTMVA::MethodBase::GetMaximum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodCompositeBase.html:2993,Config,Configurable,2993,root/html532/TMVA__MethodCompositeBase.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodCompositeBase.html,1,['Config'],['Configurable']
Modifiability,"tancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; TMVA::IMethod*TMVA::MethodCompositeBase::GetCurrentMethod(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTMVA::MethodBase::GetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&TMVA::MethodBase::GetEventCollection(TMVA::Types::ETreeType type); virtual const char*TObject::GetIconName() const; const TString&TMVA::MethodBase::GetInputLabel(Int_t i) const; const TString&TMVA::MethodBase::GetInputTitle(Int_t i) const; const TString&TMVA::MethodBase::GetInputVar(Int_t i) const; const TString&TMVA::MethodBase::GetJobName() const; TMVA::IMethod*TMVA::MethodCompositeBase::GetLast",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodCategory.html:3006,Config,Configurable,3006,root/html532/TMVA__MethodCategory.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodCategory.html,1,['Config'],['Configurable']
Modifiability,"tancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTMVA::MethodBase::GetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&TMVA::MethodBase::GetEventCollection(TMVA::Types::ETreeType type); TMVA::MethodFisher::EFisherMethodGetFisherMethod(); virtual const char*TObject::GetIconName() const; const TString&TMVA::MethodBase::GetInputLabel(Int_t i) const; const TString&TMVA::MethodBase::GetInputTitle(Int_t i) const; const TString&TMVA::MethodBase::GetInputVar(Int_t i) const; const TString&TMVA::MethodBase::GetJobName() const; virtual Double_tTMVA::MethodBase::GetKSTrainingVsTest(Cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodFisher.html:4900,Config,Configurable,4900,root/html534/TMVA__MethodFisher.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodFisher.html,3,['Config'],['Configurable']
Modifiability,"tancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTMVA::MethodBase::GetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&TMVA::MethodBase::GetEventCollection(TMVA::Types::ETreeType type); TMVA::MethodFisher::EFisherMethodGetFisherMethod(); virtual const char*TObject::GetIconName() const; const TString&TMVA::MethodBase::GetInputLabel(Int_t i) const; const TString&TMVA::MethodBase::GetInputTitle(Int_t i) const; const TString&TMVA::MethodBase::GetInputVar(Int_t i) const; const TString&TMVA::MethodBase::GetJobName() const; virtual Double_tTMVA::MethodBase::GetMaximumSignificance(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodFisher.html:4900,Config,Configurable,4900,root/html532/TMVA__MethodFisher.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodFisher.html,1,['Config'],['Configurable']
Modifiability,"tancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTMVA::MethodBase::GetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&TMVA::MethodBase::GetEventCollection(TMVA::Types::ETreeType type); const vector<TMVA::DecisionTree*>&GetForest() const; Double_tGetGDErrScale() const; Int_tGetGDNPathSteps() const; Double_tGetGDPathEveFrac() const; Double_tGetGDPathStep() const; Double_tGetGDValidEveFrac() const; virtual const char*TObject::GetIconName() const; const TString&TMVA::MethodBase::GetInputLabel(Int_t i) const; const TString&TMVA::MethodBase::GetInputTitle(Int_t i) const; const T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodRuleFit.html:2623,Config,Configurable,2623,root/html532/TMVA__MethodRuleFit.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodRuleFit.html,4,['Config'],['Configurable']
Modifiability,"tancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTMVA::MethodBase::GetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&TMVA::MethodBase::GetEventCollection(TMVA::Types::ETreeType type); virtual const char*TObject::GetIconName() const; const TString&TMVA::MethodBase::GetInputLabel(Int_t i) const; const TString&TMVA::MethodBase::GetInputTitle(Int_t i) const; const TString&TMVA::MethodBase::GetInputVar(Int_t i) const; const TString&TMVA::MethodBase::GetJobName() const; TMVA::MethodPDEFoam::EKernelGetKernel(); virtual Double_tTMVA::MethodBase::GetKSTrainingVsTest(Char_t SorB, T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodPDEFoam.html:3351,Config,Configurable,3351,root/html534/TMVA__MethodPDEFoam.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodPDEFoam.html,3,['Config'],['Configurable']
Modifiability,"tancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTMVA::MethodBase::GetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&TMVA::MethodBase::GetEventCollection(TMVA::Types::ETreeType type); virtual const char*TObject::GetIconName() const; const TString&TMVA::MethodBase::GetInputLabel(Int_t i) const; const TString&TMVA::MethodBase::GetInputTitle(Int_t i) const; const TString&TMVA::MethodBase::GetInputVar(Int_t i) const; const TString&TMVA::MethodBase::GetJobName() const; TMVA::MethodPDEFoam::EKernelGetKernel(); virtual Double_tTMVA::MethodBase::GetMaximumSignificance(Double_t Si",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodPDEFoam.html:3351,Config,Configurable,3351,root/html532/TMVA__MethodPDEFoam.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodPDEFoam.html,1,['Config'],['Configurable']
Modifiability,"tancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTMVA::MethodBase::GetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&TMVA::MethodBase::GetEventCollection(TMVA::Types::ETreeType type); virtual const char*TObject::GetIconName() const; const TString&TMVA::MethodBase::GetInputLabel(Int_t i) const; const TString&TMVA::MethodBase::GetInputTitle(Int_t i) const; const TString&TMVA::MethodBase::GetInputVar(Int_t i) const; const TString&TMVA::MethodBase::GetJobName() const; virtual Double_tTMVA::MethodBase::GetKSTrainingVsTest(Char_t SorB, TString opt = ""X""); virtual Double_tTMVA::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodANNBase.html:2842,Config,Configurable,2842,root/html534/TMVA__MethodANNBase.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodANNBase.html,33,['Config'],['Configurable']
Modifiability,"tancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTMVA::MethodBase::GetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&TMVA::MethodBase::GetEventCollection(TMVA::Types::ETreeType type); virtual const char*TObject::GetIconName() const; const TString&TMVA::MethodBase::GetInputLabel(Int_t i) const; const TString&TMVA::MethodBase::GetInputTitle(Int_t i) const; const TString&TMVA::MethodBase::GetInputVar(Int_t i) const; const TString&TMVA::MethodBase::GetJobName() const; virtual Double_tTMVA::MethodBase::GetMaximumSignificance(Double_t SignalEvents, Double_t BackgroundEvents, Do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodANNBase.html:2842,Config,Configurable,2842,root/html532/TMVA__MethodANNBase.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodANNBase.html,9,['Config'],['Configurable']
Modifiability,"tancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTMVA::MethodBase::GetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&TMVA::MethodBase::GetEventCollection(TMVA::Types::ETreeType type); virtual voidGetHelpMessage() const; virtual const char*TObject::GetIconName() const; const TString&TMVA::MethodBase::GetInputLabel(Int_t i) const; const TString&TMVA::MethodBase::GetInputTitle(Int_t i) const; const TString&TMVA::MethodBase::GetInputVar(Int_t i) const; const TString&TMVA::MethodBase::GetJobName() const; virtual Double_tTMVA::MethodBase::GetKSTrainingVsTest(Char_t SorB, TStrin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodDT.html:5634,Config,Configurable,5634,root/html534/TMVA__MethodDT.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodDT.html,3,['Config'],['Configurable']
Modifiability,"tancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTMVA::MethodBase::GetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&TMVA::MethodBase::GetEventCollection(TMVA::Types::ETreeType type); virtual voidGetHelpMessage() const; virtual const char*TObject::GetIconName() const; const TString&TMVA::MethodBase::GetInputLabel(Int_t i) const; const TString&TMVA::MethodBase::GetInputTitle(Int_t i) const; const TString&TMVA::MethodBase::GetInputVar(Int_t i) const; const TString&TMVA::MethodBase::GetJobName() const; virtual Double_tTMVA::MethodBase::GetMaximumSignificance(Double_t SignalE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodDT.html:5652,Config,Configurable,5652,root/html532/TMVA__MethodDT.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodDT.html,1,['Config'],['Configurable']
Modifiability,"tandard constructor for the H-Matrix method. MethodHMatrix(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL); constructor from weight file. void Init( void ); default initialization called by all constructors. ~MethodHMatrix( void ); destructor. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); FDA can handle classification with 2 classes and regression with one regression-target. void DeclareOptions(); MethodHMatrix options: none (apart from those implemented in MethodBase). void ProcessOptions(); process user options. void Train( void ); computes H-matrices for signal and background samples. void ComputeCovariance(Bool_t , TMatrixD* ); compute covariance matrix. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); returns the H-matrix signal estimator. Double_t GetChi2(TMVA::Types::ESBType ); compute chi2-estimator for event according to type (signal/background). void AddWeightsXMLTo(void* parent) const; create XML description for HMatrix classification. void ReadWeightsFromXML(void* wghtnode); read weights from XML file. void ReadWeightsFromStream(istream& istr); read variable names and min/max; NOTE: the latter values are mandatory for the normalisation; in the reader application !!!. void MakeClassSpecific(ostream& , const TString& ) const; write Fisher-specific classifier response. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". const Ranking* CreateRanking(); ranking of input variables. { return 0; }. » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id: MethodHMatrix.h 39395 2011-05-26 10:05:54Z moneta $ » Last generated: 2011-07-04 15:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodHMatrix.html:18438,variab,variable,18438,root/html530/TMVA__MethodHMatrix.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodHMatrix.html,2,['variab'],"['variable', 'variables']"
Modifiability,"tandard; kVerbose; kTreeStructure; };. protected:. TIterator*RooAbsDataStore::_cacheIter! Iterator over cached variables; RooArgSetRooAbsDataStore::_cachedVars; Bool_tRooAbsDataStore::_doDirtyPropSwitch do (de)activate dirty state propagation when loading a data point; TIterator*RooAbsDataStore::_iterator! Iterator over dimension variables; static Int_tRooPrintable::_nameLength; RooArgSetRooAbsDataStore::_vars; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooVectorDataStore*_cache! Optimization cache; RooAbsArg*_cacheOwner! Cache owner; vector<CatVector*>_catStoreList; Double_t_curWgtWeight of current event; Double_t_curWgtErrWeight of current event; Double_t_curWgtErrHiWeight of current event; Double_t_curWgtErrLoWeight of current event; Double_t*_extSumW2Array! External sum of weights array; Double_t*_extWgtArray! External weight array; Double_t*_extWgtErrHiArray! External weight array - high error; Double_t*_extWgtErrLoArray! External weight array - low error; RooVectorDataStore::CatVector**_firstCat! do not persist; RooVectorDataStore::RealVector**_firstReal! do not persist; RooVectorDataStore::RealFullVector**_firstRealF! do not persist; Bool_t_forcedUpdate! Request for forced cache update ; Int_t_nCat; Int_t_nEntries; Int_t_nReal; Int_t_nRealF; vector<RealVector*>_realStoreList; vector<RealFullVector*>_realfStoreList; Double_t_sumWeight; Double_t_sumWeightCarry; RooArgSet_varsww; RooRealVar*_wgtVarPointer to weight variable (if set). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooVectorDataStore(). RooVectorDataStore(const char* name, const char* title, const RooArgSet& vars, const char* wgtVarName = 0). void setAllBuffersNative(). RooArgSet varsNoWeight(const RooArgSet& allVars, const char* wgtName); Utility function for constructors; Return RooArgSet that is copy of allVars minus variable matching wgtName if specified. RooRealVar* weightVar(const RooArgSet& allVars, const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooVectorDataStore.html:11636,variab,variable,11636,root/html534/RooVectorDataStore.html,https://root.cern,https://root.cern/root/html534/RooVectorDataStore.html,2,['variab'],['variable']
Modifiability,"tandard; static RooPrintable::ContentsOptionRooPrintable::kTitle; static RooPrintable::StyleOptionRooPrintable::kTreeStructure; static RooPrintable::ContentsOptionRooPrintable::kValue; static RooPrintable::StyleOptionRooPrintable::kVerbose; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. static Int_tRooPrintable::_nameLength; Bool_tfApplyStyle; Style_tfFillStyle; TH1F*fHist; RooListfItemsholds TH1Fs only; TIterator*fIteratorTODO remove class variable and instantiate locally as necessary; TLegend*fLegend; Bool_tfLogXaxis; Bool_tfLogYaxis; TStringTNamed::fNameobject identifier; RooListfOtherItemsother objects to be drawn like TLine etc.; RooPlot*fRooPlot; TStringTNamed::fTitleobject title; doublefXMax; doublefXMin; doublefYMax; doublefYMin. private:. Int_tfBins; Int_tfColor; Bool_tfIsWeighted; Int_tfMarkerType; vector<Double_t>fSampleWeights; vector<Double_t>fSamplingDistr; TStringfVarName. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SamplingDistPlot(Int_t nbins = 100); SamplingDistPlot default constructor with bin size. SamplingDistPlot(Int_t nbins, Double_t min, Double_t max); SamplingDistPlot constructor with bin size, min and max. Double_t AddSamplingDistribution(const RooStats::SamplingDistribution* samplingDist, Option_t* drawOptions = ""NORMALIZE HIST""); adds sampling distribution (and normalizes if ""NORMALIZE"" is given as an option). Double_t AddSamplingDistributionShaded(const RooStats::SamplingDistribution* samplingDist, Double_t minShaded, Double_t maxShaded, Option_t* drawOptions = ""NORMALIZE HIST""). void AddLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2, const char* title = __null). void AddTH1(TH1* h, Option_t* drawOptions = """"). void AddTF1(TF1* f, const char* title = __null, Option_t* drawOptions = ""SAME""). void SetSampleWeights(const RooStats::SamplingDistribution* samplingDist); Determine if the sampling distribution has weights and store ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__SamplingDistPlot.html:10446,Inherit,Inheritance,10446,root/html602/RooStats__SamplingDistPlot.html,https://root.cern,https://root.cern/root/html602/RooStats__SamplingDistPlot.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tandard; static RooPrintable::ContentsOptionRooPrintable::kTitle; static RooPrintable::StyleOptionRooPrintable::kTreeStructure; static RooPrintable::ContentsOptionRooPrintable::kValue; static RooPrintable::StyleOptionRooPrintable::kVerbose; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. static Int_tRooPrintable::_nameLength; Bool_tfApplyStyle; Style_tfFillStyle; TH1F*fHist; RooListfItemsholds TH1Fs only; TIterator*fIteratorTODO remove class variable and instantiate locally as necessary; TLegend*fLegend; Bool_tfLogXaxis; Bool_tfLogYaxis; TStringTNamed::fNameobject identifier; RooListfOtherItemsother objects to be drawn like TLine etc.; RooPlot*fRooPlot; TStringTNamed::fTitleobject title; doublefXMax; doublefXMin; doublefYMax; doublefYMin. private:. Int_tfBins; Int_tfColor; Bool_tfIsWeighted; Int_tfMarkerType; vector<Double_t>fSampleWeights; vector<Double_t>fSamplingDistr; TStringfVarName. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SamplingDistPlot(Int_t nbins = 100); SamplingDistPlot default constructor with bin size. SamplingDistPlot(Int_t nbins, Double_t min, Double_t max); SamplingDistPlot constructor with bin size, min and max. ~SamplingDistPlot(); destructors - delete objects contained in the list. Double_t AddSamplingDistribution(const RooStats::SamplingDistribution* samplingDist, Option_t* drawOptions = ""NORMALIZE HIST""); adds sampling distribution (and normalizes if ""NORMALIZE"" is given as an option). Double_t AddSamplingDistributionShaded(const RooStats::SamplingDistribution* samplingDist, Double_t minShaded, Double_t maxShaded, Option_t* drawOptions = ""NORMALIZE HIST""). void AddLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2, const char* title = __null). void AddTH1(TH1* h, Option_t* drawOptions = """"); add an histogram (it will be cloned);. void AddTF1(TF1* f, const char* title = __null, Option_t* drawOptions = ""SAME""). void SetSampleWeights(co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooStats__SamplingDistPlot.html:10541,Inherit,Inheritance,10541,root/html604/RooStats__SamplingDistPlot.html,https://root.cern,https://root.cern/root/html604/RooStats__SamplingDistPlot.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"taneousHistFactorySimultaneous(const RooSimultaneous& other, const char* name = 0); RooStats::HistFactory::HistFactorySimultaneousHistFactorySimultaneous(const char* name, const char* title, RooAbsCategoryLValue& indexCat); RooStats::HistFactory::HistFactorySimultaneousHistFactorySimultaneous(const char* name, const char* title, map<std::string,RooAbsPdf*> pdfMap, RooAbsCategoryLValue& inIndexCat); RooStats::HistFactory::HistFactorySimultaneousHistFactorySimultaneous(const char* name, const char* title, const RooArgList& pdfList, RooAbsCategoryLValue& indexCat); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); const RooAbsCategoryLValue&RooSimultaneous::indexCat() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidRooAbsPdf::initGenerator(Int_t code); virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tRooAbsPdf::isDirectGenSafe(const RooAbsArg& arg) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HistFactory__HistFactorySimultaneous.html:20876,Inherit,InheritsFrom,20876,root/html534/RooStats__HistFactory__HistFactorySimultaneous.html,https://root.cern,https://root.cern/root/html534/RooStats__HistFactory__HistFactorySimultaneous.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  ;  Static Protected Member Functions inherited from TGTextEntry; static const TGGC & GetDefaultSelectedBackgroundGC ();  Return graphics context for highlighted frame background. ;  ; static const TGGC & GetDefaultSelectedGC ();  Return selection graphics context. ;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TCla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGNumberEntryField.html:39465,inherit,inherited,39465,doc/master/classTGNumberEntryField.html,https://root.cern,https://root.cern/doc/master/classTGNumberEntryField.html,3,['inherit'],['inherited']
Modifiability,"tant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . Private Member Functions; double _DEBUG_getVal (const RooArgSet *normalisationSet) const;  Debug version of getVal(), which is slow and does error checking. ;  . Friends; class AddCacheElem;  ; class BatchInterfaceAccessor;  ; class RooAddHelpers;  ; class RooAddModel;  ; class RooAddPdf;  ; class RooFit::EvalContext;  ; class RooRealBinding;  ; class RooRealSumFunc;  ; class RooRealSumPdf;  ; class RooVectorDataStore;  . Additional Inherited Members;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsReal.html:59436,inherit,inherited,59436,doc/master/classRooAbsReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsReal.html,1,['inherit'],['inherited']
Modifiability,"tart numbering parameters at 0; gausn(0) is a substitute for [0]*exp(-0.5*((x-[1])/[2])**2)/(sqrt(2*pi)*[2])) and (0) means start numbering parameters at 0; expo(3) is a substitute for exp([3]+[4]*x); pol3(5) is a substitute for par[5]+par[6]*x+par[7]*x**2+par[8]*x**3 (PolN stands for Polynomial of degree N); gaus(x, [0..2]) is a more explicit way of writing gaus(0); expo(y, [3..4]) is a substitute for exp([3]+[4]*y). See below the full list of predefined functions which can be used as shortcuts in TFormula.; TMath functions can be part of the expression, eg:. TMath::Landau(x)*sin(x); TMath::Erf(x). Formula may contain constants, eg:. sqrt2; e; pi; ln10; infinity. and more.; Formulas may also contain other user-defined ROOT functions defined with a TFormula, eg, where f1 is defined on one x-dimension and 2 parameters:. f1(x, [omega], [phi]); f1([0..1]); f1([1], [0]); f1(y). To replace only parameter names, the dimension variable can be dropped. Alternatively, to change only the dimension variable, the parameters can be dropped. Note that if a parameter is dropped or keeps its old name, its old value will be copied to the new function. The syntax used in the examples above also applies to the predefined parametrized functions like gaus and expo.; Comparisons operators are also supported (&amp;&amp;, ||, ==, &lt;=, &gt;=, !); Examples:; sin(x*(x&lt;0.5 || x&gt;1)); If the result of a comparison is TRUE, the result is 1, otherwise 0.; Already predefined names can be given. For example, if the formula; TFormula old(""old"",sin(x*(x&lt;0.5 || x&gt;1))); one can assign a name to the formula. By default the name of the object = title = formula itself.; TFormula new(""new"",""x*old""); is equivalent to:; TFormula new(""new"",""x*sin(x*(x&lt;0.5 || x&gt;1))""); The class supports unlimited number of variables and parameters. By default the names which can be used for the variables are x,y,z,t or x[0],x[1],x[2],x[3],....x[N] for N-dimensional formulas.; This class is not anymore the bas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormula.html:2368,variab,variable,2368,doc/master/classTFormula.html,https://root.cern,https://root.cern/doc/master/classTFormula.html,1,['variab'],['variable']
Modifiability,"tartTimetime offset; Bool_tTVirtualPacketizer::fStopTermination of Process() requested?; Float_tTVirtualPacketizer::fTimeUpdttime between updates; Long64_tTVirtualPacketizer::fTotalEntriestotal number of entries to be distributed;; TVirtualPacketizer::EUseEstOptTVirtualPacketizer::fUseEstOptControl usage of estimated values for the progress info; Bool_tTVirtualPacketizer::fValidConstructed properly?. private:. TList*fActivenodes with unfinished files; Bool_tfDefMaxWrkNodeWhether the default is used for the max workers per node; TList*fFileNodesnodes with files; Bool_tfHeuristicPSizWhether the packet size is calculated heuristically; Int_tfMaxPerfIdxmaximum of our slaves' performance index; Long_tfMaxSlaveCntmaximum number of workers per filenode (Long_t to avoid; Int_tfPacketAsAFractionused to calculate the packet size; Long64_tfPacketSizeglobal base packet size; TList*fPacketsall processed packets; TList*fUnAllocatednodes with unallocated files. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPacketizer(TDSet* dset, TList* slaves, Long64_t first, Long64_t num, TList* input, TProofProgressStatus* st); Constructor. ~TPacketizer(); Destructor. Int_t AddWorkers(TList* workers); Adds new workers. Returns the number of workers added, or -1 on failure. void RemoveUnAllocNode(TPacketizer::TFileNode* ); Remove unallocated node. void RemoveActive(TPacketizer::TFileStat* file); Remove file from the list of actives. void RemoveActiveNode(TPacketizer::TFileNode* ); Remove node from the list of actives. void Reset(); Reset the internal datastructure for packet distribution. void ValidateFiles(TDSet* dset, TList* slaves, Long64_t maxent = -1, Bool_t byfile = kFALSE); Check existence of file/dir/tree an get number of entries.; Assumes the files have been setup. Long64_t GetEntriesProcessed(TSlave* sl) const; Get entries processed by the specified slave. Float_t GetCurrentRate(Bool_t& all); Get Estimation of the current rate; just summing ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPacketizer.html:10484,Inherit,Inheritance,10484,root/html534/TPacketizer.html,https://root.cern,https://root.cern/root/html534/TPacketizer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tarting with "".R"" (already stripped-off); 1503/// The format is; 1504/// ~~~ {.cpp}; 1505/// [user@]host[:dir] [-l user] [-d dbg] [script] | [host] -close; 1506/// ~~~; 1507/// The variable 'dir' is the remote directory to be used as working dir.; 1508/// The username can be specified in two ways, ""-l"" having the priority; 1509/// (as in ssh).; 1510/// A 'dbg' value > 0 gives increasing verbosity.; 1511/// The last argument 'script' allows to specify an alternative script to; 1512/// be executed remotely to startup the session.; 1513 ; 1514Longptr_t TApplication::ProcessRemote(const char *line, Int_t *); 1515{; 1516 if (!line) return 0;; 1517 ; 1518 if (!strncmp(line, ""-?"", 2) || !strncmp(line, ""-h"", 2) ||; 1519 !strncmp(line, ""--help"", 6)) {; 1520 Info(""ProcessRemote"", ""remote session help:"");; 1521 Printf("".R [user@]host[:dir] [-l user] [-d dbg] [[<]script] | [host] -close"");; 1522 Printf(""Create a ROOT session on the specified remote host."");; 1523 Printf(""The variable \""dir\"" is the remote directory to be used as working dir."");; 1524 Printf(""The username can be specified in two ways, \""-l\"" having the priority"");; 1525 Printf(""(as in ssh). A \""dbg\"" value > 0 gives increasing verbosity."");; 1526 Printf(""The last argument \""script\"" allows to specify an alternative script to"");; 1527 Printf(""be executed remotely to startup the session, \""roots\"" being"");; 1528 Printf(""the default. If the script is preceded by a \""<\"" the script will be"");; 1529 Printf(""sourced, after which \""roots\"" is executed. The sourced script can be "");; 1530 Printf(""used to change the PATH and other variables, allowing an alternative"");; 1531 Printf(""\""roots\"" script to be found."");; 1532 Printf(""To close down a session do \"".R host -close\""."");; 1533 Printf(""To switch between sessions do \"".R host\"", to switch to the local"");; 1534 Printf(""session do \"".R\""."");; 1535 Printf(""To list all open sessions do \""gApplication->GetApplications()->Print()\""."");; 1536 return 0;; 1537 }; 1538 ; 1539 T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TApplication_8cxx_source.html:60231,variab,variable,60231,doc/master/TApplication_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TApplication_8cxx_source.html,1,['variab'],['variable']
Modifiability,"taset with only variables in whatVars randomized. Variables in whatVars that; are not in the prototype will be added as new columns to the generated dataset. RooDataSet * generate(RooAbsPdf::GenSpec& ) const; Generate data according to a pre-configured specification created by; RooAbsPdf::prepareMultiGen(). If many identical generation requests; are needed, e.g. in toy MC studies, it is more efficient to use the prepareMultiGen()/generate(); combination than calling the standard generate() multiple times as; initialization overhead is only incurred once. RooDataSet * generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t autoBinned = kTRUE, const char* binnedTag = """", Bool_t expectedData = kFALSE) const; Generate a new dataset containing the specified variables with; events sampled from our distribution. Generate the specified; number of events or else try to use expectedEvents() if nEvents <= 0.; Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. RooDataSet * generate(RooAbsGenContext& context, const RooArgSet& whatVars, const RooDataSet* prototype, Int_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto, Bool_t skipInit = kFALSE, Bool_t extended = kFALSE) const; Internal method. RooDataSet * generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; Generate a new dataset with values of the whatVars variables; sampled from our distribution. Use the specified existing dataset; as a prototype: the new dataset will contain the same number of; events as the prototype (by default), and any prototype variables not in; whatVars will be copied into the new dataset for each generated; event and also used to set our PDF parameters. The user can specify a;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsPdf.html:64515,variab,variables,64515,root/html532/RooAbsPdf.html,https://root.cern,https://root.cern/root/html532/RooAbsPdf.html,1,['variab'],['variables']
Modifiability,"taset, . TString ; fin, . Int_t ; Nevt = -1, . Bool_t ; useTMVAStyle = kTRUE . ). ◆ rulevis(). void TMVA::rulevis ; (; TString ; fin = ""TMVA.root"", . TMVAGlob::TypeOfPlot ; type = TMVAGlob::kNorm, . bool ; useTMVAStyle = kTRUE . ). ◆ rulevisCorr() [1/2]. void TMVA::rulevisCorr ; (; TDirectory * ; rfdir, . TDirectory * ; vardir, . TDirectory * ; corrdir, . TMVAGlob::TypeOfPlot ; type . ). ◆ rulevisCorr() [2/2]. void TMVA::rulevisCorr ; (; TString ; fin = ""TMVA.root"", . TMVAGlob::TypeOfPlot ; type = TMVAGlob::kNorm, . bool ; useTMVAStyle = kTRUE . ). ◆ rulevisHists() [1/2]. void TMVA::rulevisHists ; (; TDirectory * ; rfdir, . TDirectory * ; vardir, . TDirectory * ; corrdir, . TMVAGlob::TypeOfPlot ; type . ). ◆ rulevisHists() [2/2]. void TMVA::rulevisHists ; (; TString ; fin = ""TMVA.root"", . TMVAGlob::TypeOfPlot ; type = TMVAGlob::kNorm, . bool ; useTMVAStyle = kTRUE . ). ◆ TMVAGui(). void TMVA::TMVAGui ; (; const char * ; fName = ""TMVA.root"", . TString ; dataset = """" . ). ◆ TMVAMultiClassGui(). void TMVA::TMVAMultiClassGui ; (; const char * ; fName = ""TMVAMulticlass.root"", . TString ; dataset = """" . ). ◆ TMVARegGui(). void TMVA::TMVARegGui ; (; const char * ; fName = ""TMVAReg.root"", . TString ; dataset = """" . ). ◆ training_history(). void TMVA::training_history ; (; TString ; dataset, . TString ; fin = ""TMVA.root"", . Bool_t ; useTMVAStyle = kTRUE . ). ◆ variables(). void TMVA::variables ; (; TString ; dataset, . TString ; fin = ""TMVA.root"", . TString ; dirName = ""InputVariables_Id"", . TString ; title = ""TMVA Input Variables"", . Bool_t ; isRegression = kFALSE, . Bool_t ; useTMVAStyle = kTRUE . ). ◆ variablesMultiClass(). void TMVA::variablesMultiClass ; (; TString ; dataset, . TString ; fin = ""TMVA.root"", . TString ; dirName = ""InputVariables_Id"", . TString ; title = ""TMVA Input Variables"", . Bool_t ; isRegression = kFALSE, . Bool_t ; useTMVAStyle = kTRUE . ). TMVA. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTMVA.html:43173,variab,variables,43173,doc/master/namespaceTMVA.html,https://root.cern,https://root.cern/doc/master/namespaceTMVA.html,4,['variab'],"['variables', 'variablesMultiClass']"
Modifiability,"taset. The following named arguments are supported. Name(const char* name) -- Name of the output dataset; Verbose(Bool_t flag) -- Print informational messages during event generation; Extended() -- The actual number of events generated will be sampled from a Poisson distribution; with mu=nevt. For use with extended maximum likelihood fits; ExpectedData() -- Return a binned dataset _without_ statistical fluctuations (also aliased as Asimov()). RooDataHist * generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); Generate a new dataset containing the specified variables with events sampled from our distribution.; Generate the specified number of events or expectedEvents() if not specified. Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. The following named arguments are supported. Name(const char* name) -- Name of the output dataset; Verbose(Bool_t flag) -- Print informational messages during event generation; NumEvent(int nevt) -- Generate specified number of events; Extended() -- The actual number of events generated will be sampled from a Poisson distribution; with mu=nevt. For use with extended maximum likelihood fits; ExpectedData() -- Return a binned dataset _without_ statistical fluctuations (also aliased as Asimov()). RooDataHist * generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; Generate a new dataset containing the specified variables with; events sampled from our distribution. Generate the specified; number of events or else try to use expectedEvents() if nEvents <= 0. If expectedData is k",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsPdf.html:65615,variab,variables,65615,root/html528/RooAbsPdf.html,https://root.cern,https://root.cern/root/html528/RooAbsPdf.html,9,['variab'],['variables']
Modifiability,taset[datasetreg] : Elapsed time for evaluation of 9000 events: 0.00483 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; Factory : Test method: DNN_CPU for Regression performance; : ; : Dataset[datasetreg] : Create results for testing; : Dataset[datasetreg] : Evaluation of DNN_CPU on testing sample; : Dataset[datasetreg] : Elapsed time for evaluation of 9000 events: 0.231 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; Factory : Test method: BDTG for Regression performance; : ; : Dataset[datasetreg] : Create results for testing; : Dataset[datasetreg] : Evaluation of BDTG on testing sample; : Dataset[datasetreg] : Elapsed time for evaluation of 9000 events: 2.1 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; Factory : ␛[1mEvaluate all methods␛[0m; : Evaluate regression method: PDEFoam; : TestRegression (testing); : Calculate regression for all events; : Elapsed time for evaluation of 9000 events: 0.0447 sec ; : TestRegression (training); : Calculate regression for all events; : Elapsed time for evaluation of 1000 events: 0.00684 sec ; TFHandler_PDEFoam : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: 3.3352 1.1893 [ 0.00020069 5.0000 ]; : var2: 2.4860 1.4342 [ 0.00071490 5.0000 ]; : fvalue: 163.91 83.651 [ 1.6186 394.84 ]; : -----------------------------------------------------------; : Evaluate regression method: KNN; : TestRegression (testing); : Calculate regression for all events; : Elapsed time for evaluation of 9000 events: 0.0954 sec ; : TestRegression (training); : Calculate regression for all events; : Elapsed time for evaluation of 1000 events: 0.0134 sec ; TFHandler_KNN : Variable Mean RMS [ Min Max ]; : --------------------------------------------------,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:128921,variab,variable,128921,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['variab'],['variable']
Modifiability,"taset] : Create Transformation ""I"" with events from all classes.; : ; : Transformation, Variable selection : ; : Input : variable 'm_jj' <---> Output : variable 'm_jj'; : Input : variable 'm_jjj' <---> Output : variable 'm_jjj'; : Input : variable 'm_lv' <---> Output : variable 'm_lv'; : Input : variable 'm_jlv' <---> Output : variable 'm_jlv'; : Input : variable 'm_bb' <---> Output : variable 'm_bb'; : Input : variable 'm_wbb' <---> Output : variable 'm_wbb'; : Input : variable 'm_wwbb' <---> Output : variable 'm_wwbb'; TFHandler_Factory : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : m_jj: 1.0318 0.65629 [ 0.15106 16.132 ]; : m_jjj: 1.0217 0.37420 [ 0.34247 8.9401 ]; : m_lv: 1.0507 0.16678 [ 0.26679 3.6823 ]; : m_jlv: 1.0161 0.40288 [ 0.38441 6.5831 ]; : m_bb: 0.97707 0.53961 [ 0.080986 8.2551 ]; : m_wbb: 1.0358 0.36856 [ 0.38503 6.4013 ]; : m_wwbb: 0.96265 0.31608 [ 0.43228 4.5350 ]; : -----------------------------------------------------------; : Ranking input variables (method unspecific)...; IdTransformation : Ranking result (top variable is best ranked); : -------------------------------; : Rank : Variable : Separation; : -------------------------------; : 1 : m_bb : 9.511e-02; : 2 : m_wbb : 4.268e-02; : 3 : m_wwbb : 4.178e-02; : 4 : m_jjj : 2.825e-02; : 5 : m_jlv : 1.999e-02; : 6 : m_jj : 3.834e-03; : 7 : m_lv : 3.699e-03; : -------------------------------; Factory : Train method: Likelihood for Classification; : ; : ; : ␛[1m================================================================␛[0m; : ␛[1mH e l p f o r M V A m e t h o d [ Likelihood ] :␛[0m; : ; : ␛[1m--- Short description:␛[0m; : ; : The maximum-likelihood classifier models the data with probability ; : density functions (PDF) reproducing the signal and background; : distributions of the input variables. Correlations among the ; : variables are ignored.; : ; : ␛[1m--- Performance optimisation:␛[0m; : ; : Required for good performance are decorrelat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html:15789,variab,variables,15789,doc/master/TMVA__Higgs__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html,2,['variab'],['variables']
Modifiability,"tasetcvreg] : Create Transformation ""I"" with events from all classes.; : ; <HEADER> : Transformation, Variable selection : ; : Input : variable 'var1' <---> Output : variable 'var1'; : Input : variable 'var2' <---> Output : variable 'var2'; <HEADER> TFHandler_Factory : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: 2.4948 1.4515 [ 0.00020069 5.0000 ]; : var2: 2.4837 1.4409 [ 0.00071490 5.0000 ]; : fvalue: 134.53 84.778 [ 1.6186 394.84 ]; : -----------------------------------------------------------; : Ranking input variables (method unspecific)...; <HEADER> IdTransformation : Ranking result (top variable is best ranked); : --------------------------------------------; : Rank : Variable : |Correlation with target|; : --------------------------------------------; : 1 : var2 : 7.607e-01; : 2 : var1 : 5.995e-01; : --------------------------------------------; <HEADER> IdTransformation : Ranking result (top variable is best ranked); : -------------------------------------; : Rank : Variable : Mutual information; : -------------------------------------; : 1 : var1 : 2.253e+00; : 2 : var2 : 2.100e+00; : -------------------------------------; <HEADER> IdTransformation : Ranking result (top variable is best ranked); : ------------------------------------; : Rank : Variable : Correlation Ratio; : ------------------------------------; : 1 : var2 : 2.458e+00; : 2 : var1 : 2.336e+00; : ------------------------------------; <HEADER> IdTransformation : Ranking result (top variable is best ranked); : ----------------------------------------; : Rank : Variable : Correlation Ratio (T); : ----------------------------------------; : 1 : var1 : 5.362e-01; : 2 : var2 : 5.109e-01; : ----------------------------------------; : Elapsed time for training with 9999 events: 5.01e-06 sec ; : Dataset[datasetcvreg] : Create results for training; : Dataset[datasetcvreg] : Evaluation of BDTG on training sample; : Dataset[datasetcvreg] : Elapsed",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVACrossValidationRegression_8C.html:10871,variab,variable,10871,doc/master/TMVACrossValidationRegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVACrossValidationRegression_8C.html,1,['variab'],['variable']
Modifiability,"tasets, hence; 648 // it is not again checked in each of these subsequent calls..; 649 ; 650 const Event* ev = kl->GetEvent();; 651 for (UInt_t i=0; i<ev->GetNVariables(); i++){; 652 if (TMath::IsNaN(ev->GetValue(i))) {; 653 Log() << kERROR << i << ""-th variable of the event is NaN, \n regression values might evaluate to .. what do I know. \n sorry this warning is all I can do, please fix or remove this event."" << Endl;; 654 }; 655 }; 656 ; 657 return this->EvaluateMulticlass( kl, aux );; 658}; 659 ; 660////////////////////////////////////////////////////////////////////////////////; 661/// evaluates the multiclass MVA; 662/// check for NaN in event data: (note: in the factory, this check was done already at the creation of the datasets, hence; 663/// it is not again checked in each of these subsequent calls.; 664 ; 665const std::vector< Float_t >& TMVA::Reader::EvaluateMulticlass( MethodBase* method, Double_t /*aux*/ ); 666{; 667 const Event* ev = method->GetEvent();; 668 for (UInt_t i=0; i<ev->GetNVariables(); i++){; 669 if (TMath::IsNaN(ev->GetValue(i))) {; 670 Log() << kERROR << i << ""-th variable of the event is NaN, \n regression values might evaluate to .. what do I know. \n sorry this warning is all I can do, please fix or remove this event."" << Endl;; 671 }; 672 }; 673 return method->GetMulticlassValues();; 674}; 675 ; 676 ; 677////////////////////////////////////////////////////////////////////////////////; 678/// evaluates the multiclass MVA; 679 ; 680Float_t TMVA::Reader::EvaluateMulticlass( UInt_t clsNumber, const TString& methodTag, Double_t aux ); 681{; 682 try {; 683 return EvaluateMulticlass(methodTag, aux).at(clsNumber);; 684 }; 685 catch (std::out_of_range &) {; 686 Log() << kWARNING << ""Multiclass could not be evaluated for class-number "" << clsNumber << Endl;; 687 return 0;; 688 }; 689}; 690 ; 691 ; 692////////////////////////////////////////////////////////////////////////////////; 693/// return pointer to method with tag ""methodTag""; 694 ; 695",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Reader_8cxx_source.html:26202,variab,variable,26202,doc/master/Reader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Reader_8cxx_source.html,1,['variab'],['variable']
Modifiability,"tat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TProtoClass (const TProtoClass &)=delete;  ; const char * GetClassName (Int_t index) const;  ; TProtoClass & operator= (const TProtoClass &)=delete;  . Static Private Member Functions; static Int_t DataMemberIndex (TClass *cl, const char *name);  ; static TDataMember * FindDataMember (TClass *cl, Int_t index);  . Private Attributes; TList * fBase;  ; Int_t fCanSplit;  ; UInt_t fCheckSum;  ; Long_t fClassProperty;  ; std::vector< TDataMember * > fData;  ; std::vector< TString > fDepClasses;  ; TList * fEnums;  ; Long_t fOffsetStreamer;  ; std::vector< TProtoRealData > fPRealData;  ; Long_t fProperty;  ; Int_t fSizeof;  ; Int_t fStreamerType;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TProtoClass.h>. Inheritance diagram for TProtoCl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProtoClass.html:11244,inherit,inherited,11244,doc/master/classTProtoClass.html,https://root.cern,https://root.cern/doc/master/classTProtoClass.html,1,['inherit'],['inherited']
Modifiability,"tat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Public Types inherited from TBox; enum  { kCannotMove = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TWbox; Short_t fBorderMode {0};  Bordermode (-1=down, 0 = no b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFrame.html:16997,inherit,inherited,16997,doc/master/classTFrame.html,https://root.cern,https://root.cern/doc/master/classTFrame.html,2,['inherit'],['inherited']
Modifiability,"tat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Public Types inherited from TEllipse; enum  { kNoEdges = (1ULL << ( 9 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TEllipse; Double_t fPhimax;  Maximum angle (degrees) ;  ; Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTArc.html:16181,inherit,inherited,16181,doc/master/classTArc.html,https://root.cern,https://root.cern/doc/master/classTArc.html,4,['inherit'],['inherited']
Modifiability,"tat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void Copy (TObject &hnew) const override;  Copy axis3d. ;  ; void InitSet ();  Initialization. ;  ; Bool_t SwitchZoom ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TAxis fAxis [3];  ; TString fOption;  ; TAxis * fSelected;  ; Bool_t fStickyZoom;  ; Bool_t fZoomMode;  The selected axis to play with. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static const char * fgRulerName = ""axis3druler"";  . Private Member Functions; Int_t AxisChoice (Option_t *axis) const;  Return the axis index by its name. ;  ; void Build ();  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TAxis3D.h>. Inheritance diagram for TAxis3D:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TAxis3D() [1/3]. TAxis3D::TAxis3D ; (; ). Normal constructor. ; Definition at line 109 of file TAxis3D.cxx. ◆ TAxis3D() [2/3]. TAxis3D::TAxis3D ; (; Option_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAxis3D.html:16733,inherit,inherited,16733,doc/master/classTAxis3D.html,https://root.cern,https://root.cern/doc/master/classTAxis3D.html,1,['inherit'],['inherited']
Modifiability,"tat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; virtual void MakeTableOfCoSin () const;  Make table of sine and cosine. ;  ; void SetPoints (Double_t *points) const override;  Create SPHE points. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t faX;  ; Float_t faY;  ; Float_t faZ;  ; Float_t fPhimax;  ; Float_t fPhimin;  ; Float_t fRmax;  ; Float_t fRmin;  ; Float_t fThemax;  ; Float_t fThemin;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSPHE.html:15941,inherit,inherited,15941,doc/master/classTSPHE.html,https://root.cern,https://root.cern/doc/master/classTSPHE.html,1,['inherit'],['inherited']
Modifiability,"tat ; RooStats::MetropolisHastings Markov Chain Monte Carlo calculator for Bayesian credible intervals; RooStats::MinNLLTestStat implements the minimum NLL as a test statistic to be used with several tools; RooStats::ModelConfig A class that holds configuration information for a model using a workspace as a store; RooStats::NeymanConstruction Interface for tools setting limits (producing confidence intervals); RooStats::NumEventsTestStat ; RooStats::NumberCountingPdfFactory A factory specific to common number counting problems.; RooStats::NumberCountingUtils ; RooStats::PdfProposal ; RooStats::PointSetInterval Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]; RooStats::ProfileInspector Class containing the results of the IntervalCalculator; RooStats::ProfileLikelihoodCalculator A concrete implementation of CombinedCalculator that uses the ProfileLikelihood ratio.; RooStats::ProfileLikelihoodTestStat implements the profile likelihood ratio as a test statistic to be used with several tools; RooStats::ProofConfig Configuration options for proof.; RooStats::ProposalFunction Interface for the proposal function used with Markov Chain Monte Carlo; RooStats::ProposalHelper ; RooStats::RatioOfProfiledLikelihoodsTestStat implements the ratio of profiled likelihood as test statistic; RooStats::SPlot Class used for making sPlots; RooStats::SamplingDistPlot Class containing the results of the HybridCalculator; RooStats::SamplingDistribution Class containing the results of the HybridCalculator; RooStats::SamplingSummary A summary of acceptance regions for confidence belt; RooStats::SamplingSummaryLookup A simple class used by ConfidenceBelt; RooStats::SequentialProposal A concrete implementation of ProposalFunction, that uniformly samples the parameter space.; RooStats::SimpleInterval Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]; RooStats::SimpleLikelihoodRatioTestStat ; RooStats::TestStatSampler Interface for",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassIndex.html:49477,Config,Configuration,49477,root/html534/ClassIndex.html,https://root.cern,https://root.cern/root/html534/ClassIndex.html,3,['Config'],['Configuration']
Modifiability,"tat on the cached file; static Bool_tTFile::fgCacheFileForceIndicates, to force all READ to CACHEREAD; static atomic<Long64_t>TFile::fgFileCounterCounter for all opened files; static Bool_tTFile::fgOnlyStagedBefore the file is opened, it is checked, that the file is staged, if not, the open fails; static UInt_tTFile::fgOpenTimeoutTimeout for open operations in ms - 0 corresponds to blocking i/o; static atomic<Int_t>TFile::fgReadCallsNumber of bytes read from all TFile objects; static Bool_tTFile::fgReadInfoif true (default) ReadStreamerInfo is called when opening a file; static Int_tTFile::fgReadaheadSizeReadahead buffer size. private:. XrdClient*fClientHandle to the client object; void*fInitMtxProtects fInitDone, serializes the; Bool_tfIsRootdNature of remote file server; static TFileStager*fgFileStagerStager for IsStaged checks; static Bool_tfgInitDoneAvoid initializing more than once; static Bool_tfgRootdBCControl rootd backward compatibility. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TXNetFile(const char* url, Option_t* option = """", const char* fTitle = """", Int_t compress = 1, Int_t netopt = 0, Bool_t parallelopen = kFALSE, const char* logicalurl = 0); Create a TXNetFile object. A TXNetFile object is the same as a TNetFile; (from which the former derives) except that the protocol is extended to; support dealing with new xrootd data server or xrootd load balancer; server. The ""url"" argument must be of the form. root://server1:port1[,server2:port2,...,serverN:portN]/pathfile,. Note that this means that multiple servers (>= 1) can be specified in; the url. The connection will try to connect to the first server:port; and if that does not succeed, it will try the second one, and so on; until it finds a server that will respond. See the TNetFile documentation for the description of the other arguments. The creation consists of internal variable settings (most important is; the client's domain), creation of a TXUrl array ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TXNetFile.html:25706,Inherit,Inheritance,25706,root/html604/TXNetFile.html,https://root.cern,https://root.cern/root/html604/TXNetFile.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum EGridJobStatus { kUNKNOWN; kWAITING; kRUNNING; kABORTED; kFAIL; kDONE; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~TGridJobStatus(); { }. EGridJobStatus GetStatus() const; These functions reduces the possible job states to the subset given above; in EGridJobStatus, for detailed status information query the specific; implementation. » Author: Jan Fiete Grosse-Oetringhaus 06/10/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id: TGridJobStatus.h 23091 2008-04-09 15:04:27Z rdm $ » Last generated: 2011-11-03 20:18; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGridJobStatus.html:5732,Inherit,Inheritance,5732,root/html532/TGridJobStatus.html,https://root.cern,https://root.cern/root/html532/TGridJobStatus.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. char*fData[fNumData] data; Int_tTNDArray::fNdimPlusOneNumber of dimensions plus one; intfNumDatanumber of bins, product of fSizes; Long64_t*TNDArray::fSizes[fNdimPlusOne] bin count. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Init(Int_t ndim, const Int_t* nbins, bool addOverflow = false). void Reset(Option_t* = """"). Double_t AtAsDouble(ULong64_t linidx) const. void SetAsDouble(ULong64_t linidx, Double_t value). void AddAt(ULong64_t linidx, Double_t value). T At(const Int_t* idx) const. return At(GetBin(idx)). T& At(const Int_t* idx). return At(ULong64_t linidx). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-09-08 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNDArrayT_char_.html:6496,Inherit,Inheritance,6496,root/html534/TNDArrayT_char_.html,https://root.cern,https://root.cern/root/html534/TNDArrayT_char_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. long*fData[fNumData] data; Int_tTNDArray::fNdimPlusOneNumber of dimensions plus one; intfNumDatanumber of bins, product of fSizes; Long64_t*TNDArray::fSizes[fNdimPlusOne] bin count. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Init(Int_t ndim, const Int_t* nbins, bool addOverflow = false). void Reset(Option_t* = """"). Double_t AtAsDouble(ULong64_t linidx) const. void SetAsDouble(ULong64_t linidx, Double_t value). void AddAt(ULong64_t linidx, Double_t value). T At(const Int_t* idx) const. return At(GetBin(idx)). T& At(const Int_t* idx). return At(ULong64_t linidx). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-09-08 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNDArrayT_long_.html:6496,Inherit,Inheritance,6496,root/html534/TNDArrayT_long_.html,https://root.cern,https://root.cern/root/html534/TNDArrayT_long_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; typedef TDictionary::DeclId_t DeclId_t;  . Private Member Functions;  TListOfFunctionTemplates (const TListOfFunctionTemplates &)=delete;  ; TList * GetListForObjectNonConst (const char *name);  Return the set of overloads for this name, collecting all available ones. ;  ; void MapObject (TObject *obj);  Add pair<id, object> to the map of functions and their ids. ;  ; TListOfFunctionTemplates & operator= (const TListOfFunctionTemplates &)=delete;  ; void UnmapObject (TObject *obj);  Remove a pair<id, object> from the map of functions and their ids. ;  . Private Attributes; TClass * fClass;  ; TExMap * fIds;  ; ULong64_t fLastLoadMarker;  ; THashTable fOverloads;  ; THashList * fUnloaded;  . Friends; class TClass;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1UL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTListOfFunctionTemplates.html:19010,inherit,inherited,19010,doc/master/classTListOfFunctionTemplates.html,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html,3,['inherit'],['inherited']
Modifiability,"tat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t DrawStep (Int_t nstep) const;  Draw single step. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fAnimateCnt = -1;  ! counter used in Animate() method ;  ; TTimer * fAnimateTimer = nullptr;  ! timer to implement animation ;  ; TH1 * fFrame = nullptr;  TH1 object used for the pad range. ;  ; Int_t fNsteps = 0;  Number of time steps. ;  ; Int_t fSleepTime = 0;  Time (msec) to wait between time steps. ;  ; TObjArray * fSteps = nullptr;  Array of TLists for each time step. ;  ; Double_t fXmax = 0.;  Maximum for X axis. ;  ; Double_t fXmin = 0.;  Minimum for X axis. ;  ; Double_t fYmax = 0.;  Maximum for Y axis. ;  ; Double_t fYmin = 0.;  Minimum for Y axis. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGraphTime.h>. Inheritance diagram for TGraphTime:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphTime.html:12025,inherit,inherited,12025,doc/master/classTGraphTime.html,https://root.cern,https://root.cern/doc/master/classTGraphTime.html,1,['inherit'],['inherited']
Modifiability,"tate permutations of a list of categories; RooMultiCategory Product operator for categories; RooMultiGenFunction Export RooAbsReal as functor; RooMultiVarGaussian Multivariate Gaussian PDF with correlations; RooMultiVarGaussian::AnaIntData ; RooMultiVarGaussian::GenData ; RooNDKeysPdf General N-dimensional non-parametric kernel estimation p.d.f; RooNLLVar Function representing (extended) -log(L) of p.d.f and dataset; RooNameReg String name registry; RooNameSet A sterile version of RooArgSet, containing only the names of the contained RooAbsArgs; RooNonCPEigenDecay PDF to model CP-violating decays to final states which are not CP eigenstates; RooNonCentralChiSquare non-central chisquare pdf; RooNormSetCache Management tool for tracking sets of similar integration/normalization sets; RooNovosibirsk Novosibirsk PDF; RooNumCdf Numeric calculator for CDF for a given PDF; RooNumConvPdf Operator PDF implementing numeric convolution of 2 input PDFs; RooNumConvolution Operator PDF implementing numeric convolution of 2 input functions; RooNumGenConfig Numeric (MC) Event generator configuration ; RooNumGenFactory Numeric Generator factory; RooNumIntConfig Numeric Integrator configuration ; RooNumIntFactory Numeric Integrator factory; RooNumRunningInt Numeric calculator for running integral of a given function; RooNumber wrapper class for portable numerics; RooObjCacheManager Cache manager for generic caches that contain RooAbsArg objects; RooParamBinning Binning specification with ranges parameterized by external RooAbsReal functions; RooParamHistFunc Your description goes here...; RooParametricStepFunction Parametric Step Function Pdf; RooPlot Plot frame and container for graphics objects; RooPlotable Abstract interface for plotable objects in a RooPlot; RooPoisson A Poisson PDF; RooPolyVar Polynomial function; RooPolynomial Polynomial PDF; RooPrintable Interface for printable objects; RooProdGenContext Context for efficient generation of a a dataset from a RooProdPdf; RooPro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassIndex.html:40888,config,configuration,40888,root/html534/ClassIndex.html,https://root.cern,https://root.cern/root/html534/ClassIndex.html,8,"['config', 'parameteriz', 'portab']","['configuration', 'parameterized', 'portable']"
Modifiability,"tate;; 521 };; 522 ; 523 ; 524private:; 525 ; 526 /// Debug version of getVal(), which is slow and does error checking.; 527 double _DEBUG_getVal(const RooArgSet* normalisationSet) const;; 528 ; 529 //--------------------------------------------------------------------; 530 ; 531 protected:; 532 ; 533 double _plotMin = 0.0; ///< Minimum of plot range; 534 double _plotMax = 0.0; ///< Maximum of plot range; 535 Int_t _plotBins = 100; ///< Number of plot bins; 536 mutable double _value = 0.0; ///< Cache for current value of object; 537 TString _unit; ///< Unit for objects value; 538 TString _label; ///< Plot label for objects value; 539 bool _forceNumInt = false; ///< Force numerical integration if flag set; 540 std::unique_ptr<RooNumIntConfig> _specIntegratorConfig; // Numeric integrator configuration specific for this object; 541 TreeReadBuffer *_treeReadBuffer = nullptr; //! A buffer for reading values from trees; 542 bool _selectComp = true; //! Component selection flag for RooAbsPdf::plotCompOn; 543 mutable RooFit::UniqueId<RooArgSet>::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval; ///<!; 544 ; 545 static bool _globalSelectComp; // Global activation switch for component selection; 546 static bool _hideOffset; ///< Offset hiding flag; 547 ; 548 ClassDefOverride(RooAbsReal,3); // Abstract real-valued variable; 549};; 550 ; 551 ; 552////////////////////////////////////////////////////////////////////////////////; 553/// Overwrite the value stored in this object's cache.; 554/// This can be used to fake a computation that resulted in `value`.; 555/// \param[in] value Value to write.; 556/// \param[in] notifyClients If true, notify users of this object that its value changed.; 557/// This is the default.; 558void RooAbsReal::setCachedValue(double value, bool notifyClients) {; 559 _value = value;; 560 ; 561 if (notifyClients) {; 562 setValueDirty();; 563 _valueDirty = false;; 564 }; 565}; 566 ; 567 ; 568#endif; CodeSquashContext.h; EvalContext.h; d#define",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8h_source.html:26291,config,configuration,26291,doc/master/RooAbsReal_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8h_source.html,2,"['config', 'variab']","['configuration', 'variable']"
Modifiability,"tateFromXMLString(const char *xmlstr)for reading from memoryDefinition MethodBase.cxx:1469; TMVA::MethodBase::fSetupCompletedBool_t fSetupCompletedDefinition MethodBase.h:711; TMVA::MethodBase::CreateMVAPdfsvoid CreateMVAPdfs()Create PDFs of the MVA output variables.Definition MethodBase.cxx:2185; TMVA::MethodBase::GetTrainingROOTVersionStringTString GetTrainingROOTVersionString() constcalculates the ROOT version string from the training version code on the flyDefinition MethodBase.cxx:3381; TMVA::MethodBase::GetValueForRootvirtual Double_t GetValueForRoot(Double_t)returns efficiency as function of cutDefinition MethodBase.cxx:3320; TMVA::MethodBase::GetTrainingROOTVersionCodeUInt_t GetTrainingROOTVersionCode() constDefinition MethodBase.h:390; TMVA::MethodBase::ReadStateFromFilevoid ReadStateFromFile()Function to write options and weights to file.Definition MethodBase.cxx:1426; TMVA::MethodBase::WriteVarsToStreamvoid WriteVarsToStream(std::ostream &tf, const TString &prefix="""") constwrite the list of variables (name, min, max) for a given data transformation method to the streamDefinition MethodBase.cxx:1710; TMVA::MethodBase::ReadVarsFromStreamvoid ReadVarsFromStream(std::istream &istr)Read the variables (name, min, max) for a given data transformation method from the stream.Definition MethodBase.cxx:1725; TMVA::MethodBase::AddWeightsXMLTovirtual void AddWeightsXMLTo(void *parent) const =0; TMVA::MethodBase::Initvirtual void Init()=0; TMVA::MethodBase::ReadSpectatorsFromXMLvoid ReadSpectatorsFromXML(void *specnode)read spectator info from XMLDefinition MethodBase.cxx:1877; TMVA::MethodBase::GetTrainingHistoryvirtual const std::vector< Float_t > & GetTrainingHistory(const char *)Definition MethodBase.h:233; TMVA::MethodBase::fTmpEventconst Event * fTmpEventDefinition MethodBase.h:445; TMVA::MethodBase::fExitFromTrainingbool fExitFromTrainingDefinition MethodBase.h:449; TMVA::MethodBase::SetNormalisedvoid SetNormalised(Bool_t norm)Definition MethodBase.h:497; TMVA::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodBase_8h_source.html:56792,variab,variables,56792,doc/master/MethodBase_8h_source.html,https://root.cern,https://root.cern/doc/master/MethodBase_8h_source.html,1,['variab'],['variables']
Modifiability,"tateToFile() const. protected:. voidCalcXminXmax(); TMVA::PDEFoamKernelBase*CreatePDEFoamKernel(); voidDeleteFoams(); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); voidFillVariableNamesToFoam() const; virtual voidGetHelpMessage() const; const TString&TMVA::MethodBase::GetInternalVarName(Int_t ivar) const; const TString&TMVA::MethodBase::GetOriginalVarName(Int_t ivar) const; const TString&TMVA::Configurable::GetReferenceFile() const; static TMVA::MethodBase*TMVA::MethodBase::GetThisBase(); Float_tTMVA::MethodBase::GetTWeight(const TMVA::Event* ev) const; const TString&TMVA::MethodBase::GetWeightFileDir() const; Bool_tTMVA::MethodBase::HasTrainingTree() const; Bool_tTMVA::MethodBase::Help() const; Bool_tTMVA::MethodBase::IgnoreEventsWithNegWeightsInTraining() const; TMVA::PDEFoam*InitFoam(TString, TMVA::EFoamType, UInt_t cls = 0); Bool_tTMVA::MethodBase::IsConstructedFromWeightFile() const; Bool_tTMVA::MethodBase::IsNormalised() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; virtual voidMakeClassSpecific(ostream&, const TString&) const; virtual voidTMVA::MethodBase::MakeClassSpecificHeader(ostream&, const TString& = """") const; voidTObject::MakeZombie(); voidTMVA::MethodBase::NoErrorCalc(Double_t *const err, Double_t *const errUpper); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::MethodBase::SetNormalised(Bool_t norm); voidTMVA::MethodBase::SetWeightFileDir(TString fileDir); voidTMVA::MethodBase::SetWeightFileName(TString); voidSetXminXmax(TMVA::PDEFoam*); voidTMVA::MethodBase::Statistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); Bool_tTMVA::MethodBase::TxtWeightsOnly() const; Bool_tTMVA::MethodBase::Verbose() const; voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. virtual voidDeclareC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodPDEFoam.html:14236,Config,Configurable,14236,root/html532/TMVA__MethodPDEFoam.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodPDEFoam.html,6,['Config'],['Configurable']
Modifiability,"tatic Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAbsData*_dataPointer to original input dataset; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; Bool_t_doOffsetApply interval value offset to control numeric precision?; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Double_t_evalCarry! carry of Kahan sum in evaluatePartition; Int_t_extSet! Number of designated set to calculated extended term; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; RooAbsReal*_funcPointer to original input function; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; RooAbsTestStatistic**_gofArray! Array of sub-contexts representing part of the combined test statistic; RooAbsTestStatistic::GOFOpMode_gofOpModeOperation mode of test statistic instance ; vector<RooFit::MPSplit>_gofSplitMode! GOF MP Split mode specified by component (when Auto is active); static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Bool_t_init! Is object initialized ; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsTestStatistic.html:35235,extend,extended,35235,root/html534/RooAbsTestStatistic.html,https://root.cern,https://root.cern/root/html534/RooAbsTestStatistic.html,2,['extend'],['extended']
Modifiability,"tatic Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TGTextButton*fBtnAdd""Add"" button; TGTextButton*fBtnConnect""Connect"" button; TGCompositeFrame*fFrmNewServermain group frame; TGNumberEntry*fLogLevellog (debug) level selector; TGNumberEntry*fNumPortport number selector; TGCheckButton*fSyncsync / async flag selector; TGTextEntry*fTxtAddressserver address text entry; TGTextEntry*fTxtConfigconfiguration file text entry; TGTextEntry*fTxtNameconnection name text entry; TGTextEntry*fTxtUsrNameuser name text entry; TSessionViewer*fViewerpointer on the main viewer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSessionServerFrame(TGWindow* parent, Int_t w, Int_t h); Constructor. ~TSessionServerFrame(); Destructor. void Build(TSessionViewer* gui); Build server configuration frame. void SettingsChanged(); Settings have changed, update GUI accordingly. Bool_t HandleExpose(Event_t* event); Handle expose event in server frame. void OnConfigFileClicked(); Browse configuration files. void OnBtnDeleteClicked(); Delete selected session configuration (remove it from the list). void OnBtnConnectClicked(); Connect to selected server. void OnBtnNewServerClicked(); Reset server configuration fields. void OnBtnAddClicked(); Add newly created session configuration in the list of sessions. void Update(TSessionDescription* desc); Update fields with values from session description desc. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process messages for session server frame.; Used to navigate between text entry fields. const char * GetName() const; { return fQueryName; }. const char * GetAddress() const; { return fTxtAddress->GetText(); }. Int_t GetPortNumber() const; { return fNumPort->GetIntNumber(); }. Int_t GetLogLevel() const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSessionServerFrame.html:19917,config,configuration,19917,root/html528/TSessionServerFrame.html,https://root.cern,https://root.cern/root/html528/TSessionServerFrame.html,6,['config'],['configuration']
Modifiability,"tatic Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TStringTMVA::VariableTransformBase::GetShortName() const; virtual const char*TObject::GetTitle() const; virtual vector<TString>*TMVA::VariableTransformBase::GetTransformationStrings(Int_t cls) const; virtual UInt_tTObject::GetUniqueID() const; TMVA::Types::EVariableTransformTMVA::VariableTransformBase::GetVariableTransform() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitialize(); virtual voidTObject::Inspect() constMENU ; virtual const TMVA::Event*InverseTransform(const TMVA::Event*const, Int_t cls) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTMVA::VariableTransformBase::IsCreated() const; Bool_tTMVA::VariableTransformBase::IsEnabled() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTMVA::VariableTransformBase::IsNormalised() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TMVA::MsgLogger&TMVA::VariableTransformBase::Log() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableGaussTransform.html:3313,Variab,VariableTransformBase,3313,root/html602/TMVA__VariableGaussTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableGaussTransform.html,4,['Variab'],['VariableTransformBase']
Modifiability,"tatic Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; Double_tGetPhi() const; static voidTGeoArb8::GetPlaneNormal(Double_t* p1, Double_t* p2, Double_t* p3, Double_t* norm); const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoArb8::GetPointsOnFacet(Int_t, Int_t, Double_t*) const; virtual Bool_tTGeoBBox::GetPointsOnSegments(Int_t npoints, Double_t* array) const; Double_tGetTheta() const; virtual const char*TNamed::GetTitle() const; Double_tGetTl1() const; Double_tGetTl2() const; static TGeoMatrix*TGeoShape::GetTransform(); Double_tTGeoArb8::GetTwist(Int_t iseg) const; virtual UInt_tTObject::GetUniqueID() const; Double_t*TGeoArb8::GetVertices(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; static Bool_tTGeoArb8::InsidePolygon(Double_t x, Double_t y, Double_t* pts); virtual voidTObject::Inspect() constMENU ; virtual voidTGeoArb8::InspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(Double_t* point, Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tTGeoArb8::IsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGeoShape::IsReflected() const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoTrap.html:6836,Inherit,InheritsFrom,6836,root/html532/TGeoTrap.html,https://root.cern,https://root.cern/root/html532/TGeoTrap.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tatic Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; Double_tGetPhi() const; static voidTGeoArb8::GetPlaneNormal(Double_t* p1, Double_t* p2, Double_t* p3, Double_t* norm); const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoArb8::GetPointsOnFacet(Int_t, Int_t, Double_t*) const; virtual Bool_tTGeoBBox::GetPointsOnSegments(Int_t npoints, Double_t* array) const; Double_tGetTheta() const; virtual const char*TNamed::GetTitle() const; Double_tGetTl1() const; Double_tGetTl2() const; static TGeoMatrix*TGeoShape::GetTransform(); Double_tTGeoArb8::GetTwist(Int_t iseg) const; virtual UInt_tTObject::GetUniqueID() const; Double_t*TGeoArb8::GetVertices(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; static Bool_tTGeoArb8::InsidePolygon(Double_t x, Double_t y, Double_t* pts); virtual voidTObject::Inspect() constMENU ; virtual voidTGeoArb8::InspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, const Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(const Double_t* point, const Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tTGeoArb8::IsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(const Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGeoShap",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoTrap.html:7481,Inherit,InheritsFrom,7481,root/html534/TGeoTrap.html,https://root.cern,https://root.cern/root/html534/TGeoTrap.html,3,['Inherit'],['InheritsFrom']
Modifiability,"tatic Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static const TGFont*fgDefaultFont; static Pixel_tTGFrame::fgDefaultFrameBackground; static const TGGC*fgDefaultGC; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGGroupFrame(const TGWindow* p, TGString* title, UInt_t options = kVerticalFrame, GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), Pixel_t back = GetDefaultFrameBackground()); Create a group frame. The title will be adopted and deleted by the; group frame. TGGroupFrame(const TGWindow* p = 0, const char* title = 0, UInt_t options = kVerticalFrame, GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), Pixel_t back = GetDefaultFrameBackground()); Create a group frame. ~TGGroupFrame(); Delete a group frame. TGDimension GetDefaultSize() const; Returns default size. void DoRedraw(); Redraw the group frame. Need special DoRedraw() since we need to; redraw with fBorderWidth=0. void SetTextColor(Pixel_t color, Bool_t local = kTRUE); Changes text color.; If local is true color is changed locally, otherwise - globally. void SetTextFont(FontStruct_t font, Bool_t local = kTRUE); Changes text ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGGroupFrame.html:21807,Inherit,Inheritance,21807,root/html602/TGGroupFrame.html,https://root.cern,https://root.cern/root/html602/TGGroupFrame.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tatic Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static const TGFont*fgDefaultFont; static Pixel_tTGFrame::fgDefaultFrameBackground; static const TGGC*fgDefaultGC; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTab(const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Create tab widget. ~TGTab(); Delete tab widget. This deletes the tab windows and the containers.; The tab string is deleted by the TGTabElement dtor. TGCompositeFrame * AddTab(TGString* text); Add a tab to the tab widget. Returns the new container, which; is owned by the tab widget. The text is adopted by the tab widget. TGCompositeFrame * AddTab(const char* text); Add a tab to the tab widget. Returns the new container. The container; is owned by the tab widget. void AddTab(const char* text, TGCompositeFrame* cf); Add a tab to the tab widget and fill it with given TGCompositeFrame. void AddTab(TGString* text, TGCompositeFrame* cf); Add a tab to the tab widget and fill it with given TGCompositeFrame. void RemoveTab(Int_t tabInde",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTab.html:21944,Inherit,Inheritance,21944,root/html602/TGTab.html,https://root.cern,https://root.cern/root/html602/TGTab.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tatic Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void ConfigureGedFrames (Bool_t objChaged);  Call SetModel in class editors. ;  ; virtual TGedFrame * CreateNameFrame (const TGWindow *parent, const char *tab_name);  Virtual function for creation of top name-frame in each tab. ;  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () const;  used in SaveSource() ;  ; TString GetMWMvalueString () const;  used in SaveSource() ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedEditor.html:32213,inherit,inherited,32213,doc/master/classTGedEditor.html,https://root.cern,https://root.cern/doc/master/classTGedEditor.html,2,['inherit'],['inherited']
Modifiability,"tatic Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sende",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProcessEventTimer.html:15815,inherit,inherited,15815,doc/master/classTProcessEventTimer.html,https://root.cern,https://root.cern/doc/master/classTProcessEventTimer.html,2,['inherit'],['inherited']
Modifiability,"tatic Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; TGHScrollBar * fHScrollbar;  horizontal scrollbar ;  ; Int_t fScrolling;  flag which scrolling modes are allowed ;  ; TGViewPort * fVport;  viewport through which we look at contents ;  ; TGVScrollBar * fVScrollbar;  vertical scrollbar ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGCanvas (const TGCanvas &)=delete;  ; TGCanvas & operator= (const TGCanvas &)=delete;  . Additional Inherited Members;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCanvas.html:25026,inherit,inherited,25026,doc/master/classTGCanvas.html,https://root.cern,https://root.cern/doc/master/classTGCanvas.html,1,['inherit'],['inherited']
Modifiability,"tatic Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; TObject * GetFromTable (Int_t idx) const;  the reference may be in the TRefTable ;  ; Bool_t GetObjectUID (Int_t &uid, TObject *obj, const char *methodname);  Private/static function, check for validity of pid. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TRefArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fLast;  ; Int_t fLowerBound;  ; TProcessID * fPID;  ; UInt_t * fUIDs;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Friends; class TRefArrayIter;  . Additional Inherited Members;  Protected Types inherited from TCollection;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRefArray.html:21924,inherit,inherited,21924,doc/master/classTRefArray.html,https://root.cern,https://root.cern/doc/master/classTRefArray.html,2,['inherit'],['inherited']
Modifiability,"tatic Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void PreProcessEvent (Long64_t) override;  To be executed before by TProofPlayer calling TSelector::Process. ;  ;  Protected Member Functions inherited from TEventIter; Int_t LoadDir ();  Load directory. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; TString fClassName;  ; TList * fKeys;  ; TIter * fNextKey;  ; TObject * fObj;  . Additional Inherited Members;  Public Types inherited from TEventIter; enum  EIterType { kData = 15; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TEventIter; Long64_t fCur;  ; TDirectory * fDir;  ; TDSet * fDSet;  ; TDSetElement * fElem;  ; Long64_t fElemCur;  ; Long64_t fElemFirst;  ; Long64_t fElemNum;  ; TEntryList * fEntryList;  current position in the eventList ;  ; Long64_t fEntryListPos;  entry list for process",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEventIterObj.html:10735,inherit,inherited,10735,doc/master/classTEventIterObj.html,https://root.cern,https://root.cern/doc/master/classTEventIterObj.html,2,['inherit'],['inherited']
Modifiability,"tatic Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TGTextButton (const TGTextButton &)=delete;  ; TGTextButton & operator= (const TGTextButton &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TCla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextButton.html:32748,inherit,inherited,32748,doc/master/classTGTextButton.html,https://root.cern,https://root.cern/doc/master/classTGTextButton.html,1,['inherit'],['inherited']
Modifiability,"tatic Protected Member Functions inherited from TGraph; static void SwapValues (Double_t *arr, Int_t pos1, Int_t pos2);  Swap values. ;  ;  Protected Attributes inherited from TGraph; TList * fFunctions;  Pointer to list of functions (fits and user) ;  ; TH1F * fHistogram;  Pointer to histogram used for drawing axis. ;  ; Double_t fMaximum;  Maximum value for plotting along y. ;  ; Int_t fMaxSize;  !Current dimension of arrays fX and fY ;  ; Double_t fMinimum;  Minimum value for plotting along y. ;  ; Int_t fNpoints;  Number of points <= fMaxSize. ;  ; TString fOption;  Options used for drawing the graph. ;  ; Double_t * fX;  [fNpoints] array of X points ;  ; Double_t * fY;  [fNpoints] array of Y points ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from RooPlotable; double _normValue = 0.0;  ; TString _yAxisLabel;  ; double _ymax = 0.0;  ; double _ymin = 0.0;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooEllipse.h>. Inheritance diagram for RooEllipse:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooEllipse() [1/2]. RooEllipse::RooEllipse ; (; ). default . ◆ RooEllipse() [2/2]. RooEllipse::RooEllipse ; (; const char * ; name, . double ; x1, . double ; x2, . double ; s1, . double ; s2, . double ; rho = 0, . Int_t ; points = 100 . ). Create a 2-dimensional ellipse centered at (x1,x2) that rep",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooEllipse.html:33947,inherit,inherited,33947,doc/master/classRooEllipse.html,https://root.cern,https://root.cern/doc/master/classRooEllipse.html,1,['inherit'],['inherited']
Modifiability,"tatic Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TApplication; TApplication * fAppRemote;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . #include <TProofServ.h>. Inheritance diagram for TProofServ:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EQueryAction. enum TProofServ::EQueryAction. EnumeratorkQueryOK ; kQueryModify ; kQueryStop ; kQueryEnqueued . Definition at line 73 of file TProofServ.h. ◆ EStatusBits. enum TProofServ::EStatusBits. EnumeratorkHighMemory . Definition at line 72 of file TProofServ.h. Constructor & Destructor Documentation. ◆ TProofServ(). TProofServ::TProofServ ; (; Int_t * ; argc, . char ** ; argv, . FILE * ; flog = 0 . ). Main constructor. ; Create an application environment. The TProofServ environment provides an eventloop via inheritance of TApplication. Actual server creation work is done in CreateServer() to allow overloading. ; Definition at line 560 of file TP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServ.html:31742,inherit,inherited,31742,doc/master/classTProofServ.html,https://root.cern,https://root.cern/doc/master/classTProofServ.html,2,['inherit'],['inherited']
Modifiability,"tatic Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TArrayL64; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TArray; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TArray * ReadArray (TBuffer &b, const TClass *clReq);  Read TArray object from buffer. ;  ; static void WriteArray (TBuffer &b, const TArray *a);  Write TArray object to buffer. ;  . Protected Member Functions; Double_t RetrieveBinContent (Int_t bin) const override;  Raw retrieval of bin content on internal data structure see convention for numbering bins in TH1::GetBin. ;  ; void UpdateBinContent (Int_t bin, Double_t content) override;  Raw update of bin content on internal data structure see convention for numbering bins in TH1::GetBin. ;  ;  Protected Member Functions inherited from TH1;  TH1 ();  Histogram default constructor. ;  ;  TH1 (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins);  Constructor for variable bin size histograms using an input array of type double. ;  ;  TH1 (const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1L.html:41735,inherit,inherited,41735,doc/master/classTH1L.html,https://root.cern,https://root.cern/doc/master/classTH1L.html,2,['inherit'],['inherited']
Modifiability,"tatic Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TArrayL64; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TArray; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TArray * ReadArray (TBuffer &b, const TClass *clReq);  Read TArray object from buffer. ;  ; static void WriteArray (TBuffer &b, const TArray *a);  Write TArray object to buffer. ;  . Protected Member Functions; Double_t RetrieveBinContent (Int_t bin) const override;  Raw retrieval of bin content on internal data structure see convention for numbering bins in TH1::GetBin. ;  ; void UpdateBinContent (Int_t bin, Double_t content) override;  Raw update of bin content on internal data structure see convention for numbering bins in TH1::GetBin. ;  ;  Protected Member Functions inherited from TH2;  TH2 ();  2-D histogram default constructor. ;  ;  TH2 (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins);  Constructor for Double_t variable bin size 2-D histograms.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2L.html:47791,inherit,inherited,47791,doc/master/classTH2L.html,https://root.cern,https://root.cern/doc/master/classTH2L.html,2,['inherit'],['inherited']
Modifiability,tatic Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TClassTree * fClassTree;  Pointer to the TClassTree referencing this object. ;  ;  Protected Attributes inherited from TPaveLabel; TString fLabel;  Label written at the center of Pave. ;  ;  Protected Attributes inherited from TPave; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attributes inherited from TBox; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWid,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPaveClass.html:21678,inherit,inherited,21678,doc/master/classTPaveClass.html,https://root.cern,https://root.cern/doc/master/classTPaveClass.html,1,['inherit'],['inherited']
Modifiability,"tatic Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Static Public Attributes; static constexpr auto kBigNumber = TTree::kMaxEntries;  ;  Static Public Attributes inherited from TTree; static constexpr Long64_t kMaxEntries = TVirtualTreePlayer::kMaxEntries;  . Protected Member Functions; void InvalidateCurrentTree ();  Set the TTree to be reloaded as soon as possible. ;  ; void ReleaseChainProof ();  ;  Protected Member Functions inherited from TTree; virtual TBranch * BranchImp (const char *branchname, const char *classname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch() with added check that addobj matches className. ;  ; virtual TBranch * BranchImp (const char *branchname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BranchImpArr (const char *branchname, EDataType datatype, std::size_t N, void *addobj, Int_t bufsize, Int_t splitlevel);  ; virtual TBranch * BranchImpRef (const char *branchname, const char *classname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BranchImpRef (const char *branchname, TClass *ptrClass, EDataType datatype, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BronchExec (const char *name, const char *classname, void *addobj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTChain.html:42911,inherit,inherited,42911,doc/v632/classTChain.html,https://root.cern,https://root.cern/doc/v632/classTChain.html,2,['inherit'],['inherited']
Modifiability,"tatic Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TGeoRotation * fRotation;  ; Double_t fTranslation [3];  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoMatrix; enum  EGeoTransfTypes { ;   kGeoIdentity = 0; , kGeoShared = (1ULL << ( 14 )); , kGeoTranslation = (1ULL << ( 17 )); , kGeoRotation = (1ULL << ( 18 )); , ;   kGeoScale = (1ULL << ( 19 )); , kGeoReflection = (1ULL << ( 20 )); , kGeoRegistered = (1ULL << ( 21 )); , kGeoSavePrimitive = (1ULL << ( 22 )); , ;   kGeoMatrixOwned = (1ULL << ( 23 )); , kGeoCombiTrans = kGeoTranslation | kGeoRotation; , kGeoGenTrans = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoCombiTrans.html:15834,inherit,inherited,15834,doc/master/classTGeoCombiTrans.html,https://root.cern,https://root.cern/doc/master/classTGeoCombiTrans.html,1,['inherit'],['inherited']
Modifiability,"tatic Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Float_t GetAverageNeighborsValue (PDEFoam *, std::vector< Float_t > &, ECellValue);  This function returns the average value 'cv' of only nearest neighbor cells. ;  ; template<typename T > ; T Sqr (T x) const;  ; Float_t WeightGaus (PDEFoam *, PDEFoamCell *, std::vector< Float_t > &);  Returns the gauss weight between the 'cell' and a given coordinate 'txvec'. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fSigma;  width of gauss curve ;  ;  Protected Attributes inherited from TMVA::PDEFoamKernelBase; MsgLogger * fLogger;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrep",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamKernelGauss.html:10233,inherit,inherited,10233,doc/master/classTMVA_1_1PDEFoamKernelGauss.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamKernelGauss.html,1,['inherit'],['inherited']
Modifiability,"tatic Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Int_t Handle (const char *dset, TObject *type);  Physically remove the dataset 'dset', i.e. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TProof * fProof;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TProofBenchDataSet.h>. Inheritance diagram for TProofBenchDataSet:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofBenchDataSet(). TProofBenchDataSet::TProofBenchDataSet ; (; TProof * ; proof = 0). Constructor. ; Definition at line 36 of file T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofBenchDataSet.html:9824,inherit,inherited,9824,doc/master/classTProofBenchDataSet.html,https://root.cern,https://root.cern/doc/master/classTProofBenchDataSet.html,1,['inherit'],['inherited']
Modifiability,"tatic Public Member Functions inherited from TVirtualFFT; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualFFT * FFT (Int_t ndim, Int_t *n, Option_t *option);  Returns a pointer to the FFT of requested size and type. ;  ; static TVirtualFFT * GetCurrentTransform ();  static: return current fgFFT ;  ; static const char * GetDefaultFFT ();  static: return the name of the default fft ;  ; static void SetDefaultFFT (const char *name="""");  static: set name of default fft ;  ; static void SetTransform (TVirtualFFT *fft);  static: set the current transfrom to parameter ;  ; static TVirtualFFT * SineCosine (Int_t ndim, Int_t *n, Int_t *r2rkind, Option_t *option);  Returns a pointer to a sine or cosine transform of requested size and kind. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; UInt_t MapFlag (Option_t *flag);  allowed options: ""ES"" ""M"" ""P"" ""EX"" ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString fFlags;  ; void * fIn;  ; Int_t * fN;  ; Int_t fNdim;  ; void * fOut;  ; void * fPlan;  ; Int_t fTotalSize;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFFTRealComplex.html:13522,inherit,inherited,13522,doc/master/classTFFTRealComplex.html,https://root.cern,https://root.cern/doc/master/classTFFTRealComplex.html,1,['inherit'],['inherited']
Modifiability,"tatic Public Member Functions inherited from TVirtualFFT; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualFFT * FFT (Int_t ndim, Int_t *n, Option_t *option);  Returns a pointer to the FFT of requested size and type. ;  ; static TVirtualFFT * GetCurrentTransform ();  static: return current fgFFT ;  ; static const char * GetDefaultFFT ();  static: return the name of the default fft ;  ; static void SetDefaultFFT (const char *name="""");  static: set name of default fft ;  ; static void SetTransform (TVirtualFFT *fft);  static: set the current transfrom to parameter ;  ; static TVirtualFFT * SineCosine (Int_t ndim, Int_t *n, Int_t *r2rkind, Option_t *option);  Returns a pointer to a sine or cosine transform of requested size and kind. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; UInt_t MapFlag (Option_t *flag);  allowed options: ""ES"" - FFTW_ESTIMATE ""M"" - FFTW_MEASURE ""P"" - FFTW_PATIENT ""EX"" - FFTW_EXHAUSTIVE ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString fFlags;  ; void * fIn;  ; Int_t * fN;  ; Int_t fNdim;  ; void * fOut;  ; void * fPlan;  ; Int_t fTotalSize;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x0100",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFFTComplexReal.html:13688,inherit,inherited,13688,doc/master/classTFFTComplexReal.html,https://root.cern,https://root.cern/doc/master/classTFFTComplexReal.html,1,['inherit'],['inherited']
Modifiability,"tatic Public Member Functions inherited from TVirtualFFT; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualFFT * FFT (Int_t ndim, Int_t *n, Option_t *option);  Returns a pointer to the FFT of requested size and type. ;  ; static TVirtualFFT * GetCurrentTransform ();  static: return current fgFFT ;  ; static const char * GetDefaultFFT ();  static: return the name of the default fft ;  ; static void SetDefaultFFT (const char *name="""");  static: set name of default fft ;  ; static void SetTransform (TVirtualFFT *fft);  static: set the current transfrom to parameter ;  ; static TVirtualFFT * SineCosine (Int_t ndim, Int_t *n, Int_t *r2rkind, Option_t *option);  Returns a pointer to a sine or cosine transform of requested size and kind. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; UInt_t MapFlag (Option_t *flag);  allowed options: ;  ; Int_t MapOptions (const Int_t *kind);  transfers the r2r_kind parameters to fftw type ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString fFlags;  ; void * fIn;  ; void * fKind;  ; Int_t * fN;  ; Int_t fNdim;  ; void * fOut;  ; void * fPlan;  ; Int_t fTotalSize;  . Additional Inherited Members;  Public Types inherited from TObject; enum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFFTReal.html:13558,inherit,inherited,13558,doc/master/classTFFTReal.html,https://root.cern,https://root.cern/doc/master/classTFFTReal.html,1,['inherit'],['inherited']
Modifiability,"tatic Public Member Functions inherited from TVirtualFFT; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualFFT * FFT (Int_t ndim, Int_t *n, Option_t *option);  Returns a pointer to the FFT of requested size and type. ;  ; static TVirtualFFT * GetCurrentTransform ();  static: return current fgFFT ;  ; static const char * GetDefaultFFT ();  static: return the name of the default fft ;  ; static void SetDefaultFFT (const char *name="""");  static: set name of default fft ;  ; static void SetTransform (TVirtualFFT *fft);  static: set the current transfrom to parameter ;  ; static TVirtualFFT * SineCosine (Int_t ndim, Int_t *n, Int_t *r2rkind, Option_t *option);  Returns a pointer to a sine or cosine transform of requested size and kind. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; UInt_t MapFlag (Option_t *flag);  allowed options: ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString fFlags;  ; void * fIn;  ; Int_t * fN;  ; Int_t fNdim;  ; void * fOut;  ; void * fPlan;  ; Int_t fSign;  ; Int_t fTotalSize;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kIncon",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFFTComplex.html:12963,inherit,inherited,12963,doc/master/classTFFTComplex.html,https://root.cern,https://root.cern/doc/master/classTFFTComplex.html,1,['inherit'],['inherited']
Modifiability,"tatic Public Member Functions |; Protected Member Functions |; List of all members ; TMVA::PDEFoamEvent Class ReferenceTMVA. ; This PDEFoam variant stores in every cell the sum of event weights and the sum of the squared event weights. ; It therefore acts as event density estimator. It should be booked together with the PDEFoamEventDensity density estimator, which returns the event weight density at a given phase space point during the foam build-up. ; Definition at line 38 of file PDEFoamEvent.h. Public Member Functions;  PDEFoamEvent ();  Default constructor for streamer, user should not use it. ;  ;  PDEFoamEvent (const TString &);  ; virtual ~PDEFoamEvent ();  ; virtual void FillFoamCells (const Event *ev, Float_t wt);  This function fills an event weight 'wt' into the PDEFoam. ;  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::PDEFoam;  PDEFoam ();  Default constructor for streamer, user should not use it. ;  ;  PDEFoam (const TString &);  User constructor, to be employed by the user. ;  ; virtual ~PDEFoam ();  Default destructor. ;  ; void AddVariableName (const char *s);  ; void AddVariableName (TObjString *s);  ; void CheckAll (Int_t);  User utility, miscellaneous and debug. ;  ; void Create ();  Basic initialization of FOAM invoked by the user. ;  ; void DeleteBinarySearchTree ();  Delete the foam's density estimator, which contains the binary search tree. ;  ; TH1D * Draw1Dim (ECellValue cell_value, Int_t nbin, PDEFoamKernelBase *kernel=nullptr);  Draws 1-dimensional foam (= histogram) ;  ; void FillBinarySearchTree (const Event *ev);  Insert event to internal foam's density estimator PDEFoamDensityBase. ;  ; virtual void Finalize ();  ; virtual Float_t GetCellValue (const PDEFoamCell *cell, ECellValue cv);  Returns the cell value of 'cell' corresponding to the given option 'cv'. ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamEvent.html:1174,inherit,inherited,1174,doc/master/classTMVA_1_1PDEFoamEvent.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamEvent.html,1,['inherit'],['inherited']
Modifiability,"tatic Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TH1 * createHistogram (const char *name, RooArgList &vars, const char *tAxisLabel, const RooAbsBinning **bins);  Create a 1,2, or 3D-histogram with appropriate scale and labels. ;  ; static TH1 * createHistogram (const char *name, RooArgList &vars, const char *tAxisLabel, double *xlo, double *xhi, Int_t *nBins);  Create 1-, 2- or 3-d ROOT histogram with labels taken from the variables in 'vars' and the with range and binning specified in xlo,xhi and nBins. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (std::ostream &os=std::cout, Int_t maxPerNode=10000000);  Print all outstanding logged evaluation error on the given ostream. ;  ; static void setEvalErrorLoggingMode (ErrorLoggingMode m);  Set evaluation error logging ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsRealLValue.html:53151,config,configuration,53151,doc/master/classRooAbsRealLValue.html,https://root.cern,https://root.cern/doc/master/classRooAbsRealLValue.html,1,['config'],['configuration']
Modifiability,"tatic Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; THbookFile * fDirectory;  ; Int_t fID;  pointer to the Hbook file ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHbookKey.html:10114,inherit,inherited,10114,doc/master/classTHbookKey.html,https://root.cern,https://root.cern/doc/master/classTHbookKey.html,1,['inherit'],['inherited']
Modifiability,"tatic PyObject * fEval = NULL;  ; static PyObject * fModuleBuiltin = NULL;  ; static PyObject * fOpen = NULL;  . Friends; class Factory;  . Additional Inherited Members;  Public Types inherited from TMVA::MethodBase; enum  EWeightFileType { kROOT =0; , kTEXT; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TMVA::MethodBase; Bool_t fSetupCompleted;  ; TrainingHistory fTrainHistory;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMVA/PyMethodBase.h>. Inheritance diagram for TMVA::PyMethodBase:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ PyMethodBase() [1/2]. PyMethodBase::PyMethodBase ; (; const TString & ; jobName, . Types::EMVA ; methodType, . const TString & ; methodTitle, . DataSetInfo & ; dsi, . const TString & ; theOption = """" . ). Definition at line 84 of file PyMethodBase.cxx. ◆ PyMethodBase() [2/2]. PyMethodBase::PyMethodBase ; (; Types::EMVA ; methodType, . DataSetInfo & ; dsi, . const TString & ; weightFile . ). Definition at line 102 of file PyMethodBase.cxx. ◆ ~PyMethodBase(). PyMethodBase::~PyMethodBase ; (; ). virtual . Definition at line 120 of file PyMethodBase.cxx. Member Function Documentation. ◆ AddWeightsXMLTo(). virtual void TMVA::PyMethodBase::AddWeightsXMLTo ; (; void * ; parent); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PyMethodBase.html:29017,inherit,inherited,29017,doc/master/classTMVA_1_1PyMethodBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PyMethodBase.html,2,['inherit'],['inherited']
Modifiability,"tatic ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kNotGlobal; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TObjArrayfAliases! List of TTreeFormula for each alias used.; vector<string>fAliasesUsed! List of aliases used during the parsing of the expression.; TBitsROOT::v5::TFormula::fAlreadyFound! cache for information; TAxis*fAxis! pointer to histogram axis if this is a string; TObjArrayfBranches! List of branches to read. Similar to fLeaces but duplicates are zeroed out.; Int_tfCodes[500]List of leaf numbers referenced in formula; Double_t*ROOT::v5::TFormula::fConst[fNconst] Array of fNconst formula constants; LongDouble_t*fConstLDlocal version of fConsts able to store bigger numbers; Int_tfCumulSizes[500][5]Accumulated sizes of lower dimensions for each leaf after variable dimensions has been calculated; TObjArrayfDataMembers! List of leaf data members; Bool_tfDidBooleanOptimization! True if we executed one boolean optimization since the last time instance number 0 was evaluated; TList*fDimensionSetup! list of dimension setups, for delayed creation of the dimension information.; TString*ROOT::v5::TFormula::fExpr[fNoper] List of expressions; TString*ROOT::v5::TFormula::fExprOptimized![fNOperOptimized] List of expressions; TObjArrayfExternalCuts! List of TCutG and TEntryList used in the formula; Int_tfFixedSizes[500][5]Physical sizes of lower dimensions for each leaf; TObjArrayROOT::v5::TFormula::fFunctionsArray of function calls to make; Bool_tfHasCastRecord whether the formula contain a cast operation or not; UChar_tfHasMultipleVarDim[500]True if the corresponding variable is an array with more than one variable dimension.; Int_tfIndexes[500][5]Index of array selected by user for each leaf; TObjArrayfLeafNamesList of TNamed describing leaves; TObjArrayfL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TTreeFormula.html:15740,variab,variable,15740,root/html604/TTreeFormula.html,https://root.cern,https://root.cern/root/html604/TTreeFormula.html,2,['variab'],['variable']
Modifiability,"tatic RooPrintable::ContentsOptionRooPrintable::kValue; static RooPrintable::StyleOptionRooPrintable::kVerbose; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. RooDataSet*_cacheDataset holding generared values of observables; RooArgSet_catVarsSets of discrete and real valued observabeles; RooArgSet*_cloneSetSet owning clone of input function; RooAbsReal*_funcClonePointer to top level node of cloned function; const RooAbsReal*_funcMaxValContainer for maximum function value; RooRealVar*_funcValPtrRRVs storing function value in context and in output dataset; RooRealVar*_funcValStoreRRVs storing function value in context and in output dataset; Bool_t_isValidVerbose and valid flag; static Int_tRooPrintable::_nameLength; RooArgSet_realVarsSets of discrete and real valued observabeles; Bool_t_verboseVerbose and valid flag; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAbsNumGenerator(const RooAbsReal& func, const RooArgSet& genVars, Bool_t verbose = kFALSE, const RooAbsReal* maxFuncVal = 0); Initialize an accept-reject generator for the specified distribution function,; which must be non-negative but does not need to be normalized over the; variables to be generated, genVars. The function and its dependents are; cloned and so will not be disturbed during the generation process. ~RooAbsNumGenerator(); Destructor. void attachParameters(const RooArgSet& vars); Reattach original parameters to function clone. void printName(ostream& os) const; Print name of the generator. void printTitle(ostream& os) const; Print the title of the generator. void printClassName(ostream& os) const; Print the class name of the generator. void printArgs(ostream& os) const; Print the arguments of the generator. RooAbsNumGenerator(); {}. RooAbsNumGenerator(const RooAbsReal& func, const RooArgSet& genVars, Bool_t verbose = k",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsNumGenerator.html:9293,Inherit,Inheritance,9293,root/html602/RooAbsNumGenerator.html,https://root.cern,https://root.cern/root/html602/RooAbsNumGenerator.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tatic RooPrintable::StyleOptionRooPrintable::kTreeStructure; static RooPrintable::ContentsOptionRooPrintable::kValue; static RooPrintable::StyleOptionRooPrintable::kVerbose; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TIterator*_cacheIter! Iterator over cached variables; RooArgSet_cachedVars! External variables cached with this data set; RooAbsDataStore*_dstoreData storage implementation; TIterator*_iterator! Iterator over dimension variables; static Int_tRooPrintable::_nameLength; map<string,RooAbsData*>_ownedComponentsOwned external components; RooArgSet_varsDimensions of this data set; static RooAbsData::StorageTypedefaultStorageType; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void setDefaultStorageType(RooAbsData::StorageType s). void claimVars(RooAbsData* ). Bool_t releaseVars(RooAbsData* ); If return value is true variables can be deleted. RooAbsData(); Default constructor. RooAbsData(const char* name, const char* title, const RooArgSet& vars, RooAbsDataStore* store = 0); Constructor from a set of variables. Only fundamental elements of vars; (RooRealVar,RooCategory etc) are stored as part of the dataset. RooAbsData(const RooAbsData& other, const char* newname = 0); Copy constructor. ~RooAbsData(); Destructor. void convertToVectorStore(); Convert tree-based storage to vector-based storage. Bool_t changeObservableName(const char* from, const char* to). void fill(). Int_t numEntries() const. void reset(). const RooArgSet* get(Int_t index) const. void cacheArgs(const RooAbsArg* owner, RooArgSet& varSet, const RooArgSet* nset = 0, Bool_t skipZeroWeights = kFALSE); Internal method -- Cache given set of functions with data. void resetCache(); Internal method -- Remove cached function values. void attachCache(const RooAbsArg* newOwner, const RooArgSet& cachedVars); Internal method -- A",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsData.html:16294,variab,variables,16294,root/html602/RooAbsData.html,https://root.cern,https://root.cern/root/html602/RooAbsData.html,4,['variab'],['variables']
Modifiability,"tatic TClass * Class(); TBranch::fFillLeavesFillLeaves_t fFillLeaves! Pointer to the FillLeaves implementation to use.Definition TBranch.h:163; TBranch::GetFullNamevirtual TString GetFullName() constReturn the 'full' name of the branch.Definition TBranch.cxx:2031; TBranch::kAutoDelete@ kAutoDeleteDefinition TBranch.h:110; TBranch::kDoNotUseBufferMap@ kDoNotUseBufferMapIf set, at least one of the entry in the branch will use the buffer's map of classname and objects.Definition TBranch.h:112; TBranch::kIsClone@ kIsCloneTo indicate a TBranchClones.Definition TBranch.h:106; TBranch::kDoNotProcess@ kDoNotProcessActive bit for branches.Definition TBranch.h:105; TBranch::fLeavesTObjArray fLeaves-> List of leaves of this branchDefinition TBranch.h:139; TBranch::GetBasketAndFirstInt_t GetBasketAndFirst(TBasket *&basket, Long64_t &first, TBuffer *user_buffer)A helper function to locate the correct basket - and its first entry.Definition TBranch.cxx:1353; TBranch::fAddresschar * fAddress! Address of 1st leaf (variable or object)Definition TBranch.h:147; TBranch::DropBasketsvirtual void DropBaskets(Option_t *option="""")Loop on all branch baskets.Definition TBranch.cxx:757; TBranch::GetListOfBranchesTObjArray * GetListOfBranches()Definition TBranch.h:246; TBranch::GetBrowsablesvirtual TList * GetBrowsables()Returns (and, if 0, creates) browsable objects for this branch See TVirtualBranchBrowsable::FillListO...Definition TBranch.cxx:1312; TBranch::fBrowsablesTList * fBrowsables! List of TVirtualBranchBrowsables used for Browse()Definition TBranch.h:152; TBranch::ReadLeavesImplvoid ReadLeavesImpl(TBuffer &b)Loop on all leaves of this branch to read Basket buffer.Definition TBranch.cxx:2461; TBranch::fOffsetInt_t fOffsetOffset of this branch.Definition TBranch.h:124; TBranch::fBasketEntryLong64_t * fBasketEntry[fMaxBaskets] Table of first entry in each basketDefinition TBranch.h:142; TBranch::GetEntriesSerializedInt_t GetEntriesSerialized(Long64_t N, TBuffer &user_buf)Definition TBra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranch_8cxx_source.html:129812,variab,variable,129812,doc/master/TBranch_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranch_8cxx_source.html,1,['variab'],['variable']
Modifiability,"tatic TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DrawOutlineCube (TList *outline, Double_t *rmin, Double_t *rmax);  Draw cube outline with 3d polylines. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Int_t fLastPoint {-1};  The index of the last filled point. ;  ; Int_t fN {0};  Number of points. ;  ; TString fOption;  options ;  ; Float_t * fP {nullptr};  [3*fN] Array of 3-D coordinates (x,y,z) ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPolyLine3D.html:15242,inherit,inherited,15242,doc/master/classTPolyLine3D.html,https://root.cern,https://root.cern/doc/master/classTPolyLine3D.html,2,['inherit'],['inherited']
Modifiability,"tatic TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DrawOutlineCube (TList *outline, Double_t *rmin, Double_t *rmax);  Draw cube outline with 3d polylines. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; Double_t FindClosestPhase (Double_t phi0, Double_t cosine);  Finds the closest phase to phi0 that gives cos(phase) = cosine. ;  ; THelix & operator= (const THelix &);  assignment operator ;  ; void SetRotMatrix ();  Set the rotational matrix according to the helix axis. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fAxis [3];  ; Double_t fPhi0;  ; Double_t fRange [2];  ; TRotMatrix * fRotMat;  ; Double_t fVt;  ; Double_t fVz;  ; Double_t fW;  ; Double_t fX0;  ; Double_t fY0;  ; Double_t fZ0;  ;  Protected Attributes inherited from TPolyLine3D; Int_t f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHelix.html:16833,inherit,inherited,16833,doc/master/classTHelix.html,https://root.cern,https://root.cern/doc/master/classTHelix.html,2,['inherit'],['inherited']
Modifiability,"tatic TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SetAverageWindow (Int_t w=3);  Static function: Set average window of searched peaks (see TSpectrum::SearchHighRes). ;  ; static void SetDeconIterations (Int_t n=3);  Static function: Set max number of decon iterations in deconvolution operation (see TSpectrum::SearchHighRes). ;  ; static TH1 * StaticBackground (const TH1 *hist, Int_t niter=20, Option_t *option="""");  Static function, interface to TSpectrum::Background. ;  ; static Int_t StaticSearch (const TH1 *hist, Double_t sigma=2, Option_t *option=""goff"", Double_t threshold=0.05);  Static function, interface to TSpectrum::Search. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TH1 * fHistogram;  resulting histogram ;  ; Int_t fMaxPeaks;  Maximum number of peaks to be found. ;  ; Int_t fNPeaks;  number of peaks found ;  ; Double_t * fPosition;  [fNPeaks] array of current peak positions ;  ; Double_t * fPositionX;  [fNPeaks] X position of peaks ;  ; Double_t * fPositionY;  [fNPeaks] Y position of peaks ;  ; Double_t fResolution;  NOT USED resolution of the neighboring peaks ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum.html:14322,inherit,inherited,14322,doc/master/classTSpectrum.html,https://root.cern,https://root.cern/doc/master/classTSpectrum.html,2,['inherit'],['inherited']
Modifiability,"tatic TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Private Attributes inherited from TMVA::MethodCFMlpANN_Utils; static const Int_t fg_max_nNodes_ = max_nNodes_;  ; static const Int_t fg_max_nVar_ = max_nVar_;  ; static const char *const fg_MethodName = ""--- CFMlpANN "";  . #include <TMVA/MethodCFMlpANN.h>. Inheritance diagram for TMVA::MethodCFMlpANN:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ MethodCFMlpANN() [1/2]. TMVA::MethodCFMlpANN::MethodCFMlpANN ; (; const TString & ; jobName, . const TString & ; methodTitle, . DataSetInfo & ; theData, . const TString & ; theOption = ""3000:N-1:N-2"" . ). standard constructor ; option string: ""n_training_cycles:n_hidden_layers""; default is: n_training_cycles = 5000, n_layers = 4. note that the number of hidden layers in the NN is: n_hidden_layers = n_layers - 2; since there is one input and one output layer. The number of nodes (neurons) is predefined to be:; n_nodes[i] = nvars + 1 - i (where i=1..n_layers); with nvars being the number of variables used in the NN. Hence, the default case is: n_neurons(layer 1 (input)) : nvars; n_neurons(layer 2 (hidden)): nvars-1; n_neurons(layer 3 (hidden)): nvars-1; n_neurons(layer 4 (out)) : 2; This artificial neural network usually needs a relatively large number of cycles to converge (8000 and more). Overtraining can be efficiently tested by comparing the signal and background output of the NN for the events that were used for training and an independent data sample (with equal properties). If the separation performance is significantly better for the training sample, the NN interprets statistical effects, and is hence overtrained. In this case, the number of cycles should be reduced, or the size of the training sample increased. ; Definition at line 130 of file MethodCFMlpANN.cxx. ◆ Me",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCFMlpANN.html:34827,layers,layers,34827,doc/master/classTMVA_1_1MethodCFMlpANN.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCFMlpANN.html,1,['layers'],['layers']
Modifiability,"tatic TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetPoints (Double_t *points) const override;  Create CONE points. ;  ;  Protected Member Functions inherited from TTUBE;  TTUBE (const TTUBE &);  Table of cos(fPhi1) .... cos(fPhil+fDphi1) ;  ; virtual void MakeTableOfCoSin () const;  Make table of sine and cosine. ;  ; TTUBE & operator= (const TTUBE &);  assignment operator ;  ; void SetPoints (Double_t *points) const override;  Create TUBE points. ;  ; virtual void SetSegsAndPols (TBuffer3D &buffer) const;  Set segments and polygons. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fRmax2;  ; Float_t fRmin2;  ;  Protected Attributes inherited from TTUBE; Float_t fAspectRatio;  ; Double_t * fCoTab;  Table of sin(fPhi1) .... sin(fPhil+fDphi1) ;  ; Float_t fDz;  ; Int_t fNdiv;  ; Float_t fRmax;  ; Float_t fRmin;  ; Double_t * fSiTab;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCONE.html:17070,inherit,inherited,17070,doc/master/classTCONE.html,https://root.cern,https://root.cern/doc/master/classTCONE.html,1,['inherit'],['inherited']
Modifiability,"tatic TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THtml::THelperBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <THtml.h>. Inheritance diagram for THtml::TModuleDefinition:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHtml_1_1TModuleDefinition.html:9667,inherit,inherited,9667,doc/master/classTHtml_1_1TModuleDefinition.html,https://root.cern,https://root.cern/doc/master/classTHtml_1_1TModuleDefinition.html,1,['inherit'],['inherited']
Modifiability,"tatic TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THtml::THelperBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <THtml.h>. Inheritance diagram for THtml::TPathDefinition:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHtml_1_1TPathDefinition.html:10160,inherit,inherited,10160,doc/master/classTHtml_1_1TPathDefinition.html,https://root.cern,https://root.cern/doc/master/classTHtml_1_1TPathDefinition.html,1,['inherit'],['inherited']
Modifiability,"tatic TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t InitGraphics ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TContextMenu * fContextMenu {nullptr};  Browser's timer. ;  ; TBrowserImp * fImp {nullptr};  ; Bool_t fNeedRefresh {kFALSE};  Context menu pointer. ;  ; TBrowserTimer * fTimer {nullptr};  Window system specific browser implementation. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TBrowser (const TBrowser &)=delete;  The last TObject selected by user. ;  ; TBrowser & operator= (const TBrowser &)=delete;  . Private Attributes; TObject * fLastSelectedObject {nullptr};  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TBrowser.h>. Inheritance diagram for TBrowser:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeratio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBrowser.html:15096,inherit,inherited,15096,doc/master/classTBrowser.html,https://root.cern,https://root.cern/doc/master/classTBrowser.html,1,['inherit'],['inherited']
Modifiability,"tatic TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EConfigBits { kSendSummary = (1ULL << ( 15 )); , kSendDataSetInfo = (1ULL << ( 16 )); , kSendFileInfo = (1ULL << ( 17 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Attributes; Int_t fDataSetInfoVrs;  ; Int_t fFileInfoVrs;  ; Int_t fSummaryVrs;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Member Functions inherited",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofMonSender.html:10690,inherit,inherited,10690,doc/master/classTProofMonSender.html,https://root.cern,https://root.cern/doc/master/classTProofMonSender.html,1,['inherit'],['inherited']
Modifiability,"tatic TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fAlpha1;  ; Double_t fAlpha2;  ; Double_t fBl1;  ; Double_t fBl2;  ; Double_t fH1;  ; Double_t fH2;  ; Double_t fPhi;  ; Double_t fTheta;  ; Double_t fTl1;  ; Double_t fTl2;  ;  Protected Attributes inherited from TGeoArb8; Double_t fDz {0};  ; Double_t * fTwist {nullptr};  ; Double_t fXY [8][2];  [4] tangents of twist angles ;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoCo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTrap.html:21317,inherit,inherited,21317,doc/master/classTGeoTrap.html,https://root.cern,https://root.cern/doc/master/classTGeoTrap.html,4,['inherit'],['inherited']
Modifiability,"tatic TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; UInt_t fClass;  ;  Protected Attributes inherited from TMVA::PDEFoamDensityBase; BinarySearchTree * fBst;  Binary tree to find events within a volume. ;  ; MsgLogger * fLogger;  ! message logger ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TMVA::PDEFoamDensityBase; Double_t GetBoxVolume ();  Returns the volume of range searching box fBox. ;  ; MsgLogger & Log () const;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (pr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamDecisionTreeDensity.html:10784,inherit,inherited,10784,doc/master/classTMVA_1_1PDEFoamDecisionTreeDensity.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamDecisionTreeDensity.html,2,['inherit'],['inherited']
Modifiability,"tatic TClass*Class(); virtual const TCollection*GetCollection() const; virtual Option_t*TIterator::GetOption() const; virtual TClass*IsA() const; virtual TObject*Next(); virtual Bool_toperator!=(const TIterator& aIter) const; Bool_toperator!=(const TBtreeIter& aIter) const; TObject*TIterator::operator()(); virtual TObject*operator*() const; virtual TIterator&operator=(const TIterator& rhs); TBtreeIter&operator=(const TBtreeIter& rhs); Bool_tTIterator::operator==(const TIterator& other) const; virtual voidReset(); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TBtreeIter(const TBtreeIter& iter); TBtreeIter(const TBtree* t, Bool_t dir = kIterForward). private:. TBtreeIter(). Data Members; private:. Int_tfCurCursorcurrent position in btree; Int_tfCursornext position in btree; Bool_tfDirectioniteration direction; const TBtree*fTreebtree being iterated. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBtreeIter(const TBtree* t, Bool_t dir = kIterForward); Create a B-tree iterator. TBtreeIter(const TBtreeIter& iter); Copy ctor. TIterator & operator=(const TIterator& rhs); Overridden assignment operator. TBtreeIter & operator=(const TBtreeIter& rhs); Overloaded assignment operator. void Reset(); Reset the B-tree iterator. TObject * Next(); Get next object from B-tree. Returns 0 when no more objects in tree. Bool_t operator!=(const TIterator& aIter) const; This operator compares two TIterator objects. Bool_t operator!=(const TBtreeIter& aIter) const; This operator compares two TBtreeIter objects. TObject* operator*() const; Return current object or nullptr. TBtreeIter(); { }. ~TBtreeIter(); { }. const TCollection * GetCollection() const; { return fTree; }. » Author: Fons Rademakers 10/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/cont:$Id$ » Last generated: 2015-06-02 15:38; This page has been",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TBtreeIter.html:1450,Inherit,Inheritance,1450,root/html604/TBtreeIter.html,https://root.cern,https://root.cern/root/html604/TBtreeIter.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tatic TClass*Class(); virtual const TCollection*GetCollection() const; virtual Option_t*TIterator::GetOption() const; virtual TClass*IsA() const; virtual TObject*Next(); virtual Bool_toperator!=(const TIterator& aIter) const; Bool_toperator!=(const TBtreeIter& aIter) const; TObject*TIterator::operator()(); virtual TObject*operator*() const; virtual TIterator&operator=(const TIterator& rhs); TBtreeIter&operator=(const TBtreeIter& rhs); Bool_tTIterator::operator==(const TIterator& other) const; virtual voidReset(); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TBtreeIter(const TBtreeIter& iter); TBtreeIter(const TBtree* t, Bool_t dir = kIterForward). private:. TBtreeIter(). Data Members; private:. Int_tfCurCursorcurrent position in btree; Int_tfCursornext position in btree; Bool_tfDirectioniteration direction; const TBtree*fTreebtree being iterated. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBtreeIter(const TBtree* t, Bool_t dir = kIterForward); Create a B-tree iterator. TBtreeIter(const TBtreeIter& iter); Copy ctor. TIterator & operator=(const TIterator& rhs); Overridden assignment operator. TBtreeIter & operator=(const TBtreeIter& rhs); Overloaded assignment operator. void Reset(); Reset the B-tree iterator. TObject * Next(); Get next object from B-tree. Returns 0 when no more objects in tree. Bool_t operator!=(const TIterator& aIter) const; This operator compares two TIterator objects. Bool_t operator!=(const TBtreeIter& aIter) const; This operator compares two TBtreeIter objects. TObject* operator*() const; Return current object or nullptr. TBtreeIter(); { }. ~TBtreeIter(); { }. const TCollection * GetCollection() const; { return fTree; }. » Author: Fons Rademakers 10/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/cont:$Id$ » Last generated: 2015-06-30 14:40; This page has been",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBtreeIter.html:1450,Inherit,Inheritance,1450,root/html602/TBtreeIter.html,https://root.cern,https://root.cern/root/html602/TBtreeIter.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tatic TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetFullTypeName() const; virtual const char*TObject::GetIconName() const; virtual Int_tTGlobal::GetMaxIndex(Int_t dim) const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; const TEnum*GetType() const; virtual const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; Long64_tGetValue() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTGlobal::IsValid(); Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TEnumConstant&opera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEnumConstant.html:2975,Inherit,InheritsFrom,2975,root/html602/TEnumConstant.html,https://root.cern,https://root.cern/root/html602/TEnumConstant.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tatic TFITSHDU::EColumnTypeskString; static TFITSHDU::EHDUTypeskTableHDU; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringfBaseFilePathPath to HDU's file excluding filter; union Cell*fCellsTable cells (when fType == kTableHDU). Cells are ordered in the following way:; struct Column*fColumnsInfoInformation about columns (when fType == kTableHDU); TStringfExtensionNameExtension Name; TStringfFilePathPath to HDU's file including filter; Int_tfNColumnsNumber of columns (when fType == kTableHDU); Int_tfNRecordsNumber of records; Int_tfNRowsNumber of rows (when fType == kTableHDU); TStringTNamed::fNameobject identifier; Int_tfNumberHDU number (1=PRIMARY); TArrayD*fPixelsImage pixels (when fType == kImageHDU); struct HDURecord*fRecordsHDU metadata records; TArrayI*fSizesImage sizes in each dimension (when fType == kImageHDU); TStringTNamed::fTitleobject title; enum EHDUTypesfTypeHDU type. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void CleanFilePath(const char* filepath_with_filter, TString& dst); Clean path from possible filter and put the result in 'dst'. TFITSHDU(const char* filepath_with_filter); TFITSHDU constructor from file path with HDU selection filter.; Please refer to CFITSIO manual for more information about; HDU selection filters.; Examples:; - TFITSHDU(""/path/to/myfile.fits""): just open the PRIMARY HDU; - TFITSHDU(""/path/to/myfile.fits[1]""): open HDU #1; - TFITSHDU(""/path/to/myfile.fits[PICS]""): open HDU called 'PICS'; - TFITSHDU(""/path/to/myfile.fits[ACQ][EXPOSURE > 5]""): open the (table) HDU called 'ACQ' and; selects the rows that have column 'EXPOSURE'; greater than 5. TFITSHDU(const char* filepath, Int_t extension_number); TFITSHDU constructor from filepath and extension number. TFITSHDU(const char* filepath, const char* extension_name); TFITSHDU constructor from filepath and extension name. ~TFITSHDU(); TFITSHDU destructor. void _release_resou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFITSHDU.html:8405,Inherit,Inheritance,8405,root/html602/TFITSHDU.html,https://root.cern,https://root.cern/root/html602/TFITSHDU.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tatic TLeaf::(anonymous)TLeaf::kIndirectAddress; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TLeaf::(anonymous)TLeaf::kNewValue; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. char*fAbsAddress! Absolute leaf Address; TBranch*TLeaf::fBranch! Pointer to supporting branch (we do not own the branch); Int_tfIDelement serial number in fInfo; Bool_tTLeaf::fIsRange(=kTRUE if leaf has a range, kFALSE otherwise); Bool_tTLeaf::fIsUnsigned(=kTRUE if unsigned, kFALSE otherwise); TLeaf*TLeaf::fLeafCountPointer to Leaf count if variable length (we do not own the counter); Int_tTLeaf::fLenNumber of fixed length elements; Int_tTLeaf::fLenTypeNumber of bytes for this data type; TStringTNamed::fNameobject identifier; Int_tTLeaf::fNdata! Number of elements in fAddress data buffer; Int_tTLeaf::fOffsetOffset in ClonesArray object (if one); TStringTNamed::fTitleobject title; Int_tfTypeleaf type. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLeafElement(); Default constructor for LeafObject. TLeafElement(TBranch* parent, const char* name, Int_t id, Int_t type); Create a LeafObject. ~TLeafElement(); Default destructor for a LeafObject. TMethodCall * GetMethodCall(const char* name); Returns pointer to method corresponding to name name is a string; with the general form ""method(list of params)"" If list of params is; omitted, () is assumed;. Bool_t IsOnTerminalBranch() const; Return true if this leaf is does not have any sub-branch/leaf. TLeafElement(). Int_t GetLen() const; {return ((TB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLeafElement.html:7949,variab,variable,7949,root/html602/TLeafElement.html,https://root.cern,https://root.cern/root/html602/TLeafElement.html,4,['variab'],['variable']
Modifiability,tatic TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TSelector::EAbortTSelector::kContinue; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TGraph*fGraph; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions; static TProofDraw::(anonymous)TProofDraw::kWarn. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Init(TTree* tree); See TProofDraw::Init(). void SlaveBegin(TTree* ); ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofDrawGraph.html:7656,variab,variability,7656,root/html602/TProofDrawGraph.html,https://root.cern,https://root.cern/root/html602/TProofDrawGraph.html,4,['variab'],['variability']
Modifiability,"tatic TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Double_tfC1!cos(phi1); Double_tfC2!cos(phi2); Double_tfCdfi!cos(0.5*(phi1-phi2)); Double_tfCm!cos(0.5*(phi1+phi2)); Double_tTGeoBBox::fDXX half-length; Double_tTGeoBBox::fDYY half-length; Double_tTGeoBBox::fDZZ half-length; Double_tTGeoTube::fDzhalf length; TStringTNamed::fNameobject identifier; Double_tTGeoBBox::fOrigin[3]box origin; Double_tfPhi1first phi limit; Double_tfPhi2second phi limit; Double_tTGeoTube::fRmaxouter radius; Double_tTGeoTube::fRmininner radius; Double_tfS1!sin(phi1); Double_tfS2!sin(phi2); UInt_tTGeoShape::fShapeBitsshape bits; Int_tTGeoShape::fShapeIdshape id; Double_tfSm!sin(0.5*(phi1+phi2)); TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoTubeSeg(); Default constructor. TGeoTubeSeg(Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2); Default constructor specifying minimum and maximum radius.; The segment will be from phiStart to phiEnd expressed in degree. TGeoTubeSeg(const char* name, Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2); Default constructor specifying minimum and maximum radius; The segment will be from phiStart to phiEnd expressed in degree. TGeoTubeSeg(Double_t* params); Default constructor specifying minimum and maximum radius; param[0] = Rmin; param[1] = Rmax; param[2] = dz; param[3] = phi1; param[4] = phi2. ~TGeoTubeSeg(); destructor. void AfterStreamer(); Function called after streaming an object of this class. void InitTrigonometry(); Init frequently used trigonometric values. Double_t Capacity() const; Computes capacity of the shape in [length^3]. Double_t Capacity(Double_t rmin, Double_t rmax, Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoTubeSeg.html:16181,Inherit,Inheritance,16181,root/html602/TGeoTubeSeg.html,https://root.cern,https://root.cern/root/html602/TGeoTubeSeg.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tatic TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TProfile2D*fProfile; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions; static TProofDraw::(anonymous)TProofDraw::kWarn. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Init(TTree* ); See TProofDraw::Init(). void DefVar(); Define relevant variables. void Begin(TTree* t); See TProofDraw::Begin(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the histogram with the given values. void Terminate(void); See TProofDraw::Terminate(). TProofDrawProfile2D(); { }. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-03 17:48; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TProofDrawProfile2D.html:8597,variab,variables,8597,root/html604/TProofDrawProfile2D.html,https://root.cern,https://root.cern/root/html604/TProofDrawProfile2D.html,4,"['Inherit', 'variab']","['Inheritance', 'Inherited', 'variables']"
Modifiability,"tatic TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TProfile2D*fProfile; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions; static TProofDraw::(anonymous)TProofDraw::kWarn. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Init(TTree* ); See TProofDraw::Init(). void DefVar(); Define relevant variables. void Begin(TTree* t); See TProofDraw::Begin(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the histogram with the given values. void Terminate(void); See TProofDraw::Terminate(). TProofDrawProfile2D(); { }. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-30 15:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofDrawProfile2D.html:8597,variab,variables,8597,root/html602/TProofDrawProfile2D.html,https://root.cern,https://root.cern/root/html602/TProofDrawProfile2D.html,4,"['Inherit', 'variab']","['Inheritance', 'Inherited', 'variables']"
Modifiability,"tatic TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. const RooArgList*fAllTestStatisticsDatafor the case of multiple test statistics, holds all the results; RooDataSet*fAltDetailedOutput; RooStats::SamplingDistribution*fAltDistr; Double_tfAlternatePValuep-value for the alternate hypothesis (small number means disfavored); Double_tfAlternatePValueErrorerror of p-value for the alternate hypothesis (small number means disfavored); Bool_tfBackgroundIsAlt; RooDataSet*fFitInfo; TStringTNamed::fNameobject identifier; RooDataSet*fNullDetailedOutput; RooStats::SamplingDistribution*fNullDistr; Double_tfNullPValuep-value for the null hypothesis (small number means disfavored); Double_tfNullPValueErrorerror of p-value for the null hypothesis (small number means disfavored); Bool_tfPValueIsRightTail; Double_tfTestStatisticDataresult of the test statistic evaluated on data; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; HypoTestResult(const char* name = 0); Default constructor. HypoTestResult(const char* name, Double_t nullp, Double_t altp); Alternate constructor. HypoTestResult(const RooStats::HypoTestResult& other); copy constructor. ~HypoTestResult(); Destructor. HypoTestResult & operator=(const RooStats::HypoTestResult& other); assignment operator. void Append(const RooStats::HypoTestResult* other); Add additional toy-MC experiments to the current results.; Use the data test statistics of the added object if it is not already; set (otherwise, ignore the new one). void SetAltDistribution(RooStats::SamplingDistribution* alt). void SetNullDistribution(RooStats::SamplingDistribution* null). void SetTestStatisticData(const Double_t tsd). void SetAllTestStatisticsData(const RooArgList* tsd). void SetPValueIsRightTail(Bool_t pr). Bool_t HasTestStatisticData(void). Double_t NullPValueError() const; compute error on Null pvalue. Double_t CLbError() const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HypoTestResult.html:8939,Inherit,Inheritance,8939,root/html602/RooStats__HypoTestResult.html,https://root.cern,https://root.cern/root/html602/RooStats__HypoTestResult.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tatic TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TMVA::BinarySearchTree*fBstBinary tree to find events within a volume; TMVA::MsgLogger*fLogger! message logger. private:. vector<Double_t>fBoxrange-searching box; Bool_tfBoxHasChangedrange searching box has changed; Double_tfBoxVolumevolume of range searching box. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PDEFoamDensityBase(); {}. PDEFoamDensityBase(vector<Double_t> box); User constructor. - box - range-searching box, where box.size() == dimension of; the PDEFoam == periode of the binary search tree. ~PDEFoamDensityBase(); destructor. PDEFoamDensityBase(const TMVA::PDEFoamDensityBase& ); Copy constructor. Creates a deep copy, using the copy constructor of; TMVA::BinarySearchTree. void FillBinarySearchTree(const TMVA::Event* ev); This method inserts the given event 'ev' it into the binary; search tree. Double_t GetBoxVolume(); Returns the volume of range searching box fBox. If the range searching box 'fBox' has changed (fBoxHasChanged is; kTRUE), recalculate the box volume and set fBoxHasChanged to; kFALSE. void SetBox(vector<Double_t> box); set the range-searching box. { fBox = box; fBoxHasChanged = kTRUE; }. const std::vector<Double_t>& GetBox() const; get the range-searching box. { return fBox; }. Double_t Density(vector<Double_t>& Xa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__PDEFoamDensityBase.html:7211,Inherit,Inheritance,7211,root/html602/TMVA__PDEFoamDensityBase.html,https://root.cern,https://root.cern/root/html602/TMVA__PDEFoamDensityBase.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tatic TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TString*buf! output buffer; Bool_tcompact! produce compact xml code; TClass*TRootSnifferStore::fResClass! class of found item; TDataMember*TRootSnifferStore::fResMember! datamember pointer of found item; Int_tTRootSnifferStore::fResNumChilds! count of found childs, -1 by default; void*TRootSnifferStore::fResPtr! pointer on found item. Class Charts. Inheritance Chart:. TObject. ←; TRootSnifferStore. ←; TRootSnifferStoreXml. Function documentation; void CreateNode(Int_t lvl, const char* nodename); starts new xml node, will be closed by CloseNode. void SetField(Int_t lvl, const char* field, const char* value, Bool_t ); set field (xml attribute) in current node. void BeforeNextChild(Int_t lvl, Int_t nchld, Int_t ); called before next child node created. void CloseNode(Int_t lvl, const char* nodename, Int_t numchilds); called when node should be closed; depending from number of childs different xml format is applied. Bool_t IsXml() const; { return kFALSE; }. TRootSnifferStoreXml(TString& _buf, Bool_t _compact = kFALSE); {}. virtual ~TRootSnifferStoreXml(); {}. » Last changed: Tue Jun 30 15:29:44 2015 » Last generated: 2015-06-30 15:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRootSnifferStoreXml.html:6738,Inherit,Inheritance,6738,root/html602/TRootSnifferStoreXml.html,https://root.cern,https://root.cern/root/html602/TRootSnifferStoreXml.html,1,['Inherit'],['Inheritance']
Modifiability,"tatic TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TGTableLayout::TableData_t*fColinfo about each column; Bool_tfHomogeneousall cols/rows same size; TList*fListlist of frames to arrange; TGCompositeFrame*fMaincontainer frame; Bool_tTGLayoutManager::fModifiedkTRUE if positions of subframes changed after layout; TGTableLayout::TableData_t*fRowinfo about each row. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTableLayout(TGCompositeFrame* main, UInt_t nrows, UInt_t ncols, Bool_t homogeneous = kFALSE, Int_t sep = 0, Int_t hints = 0); TGTableLayout constructor.; Note:; - Number of rows first, number of Columns second; - homogeneous == true means all table cells are the same size,; set by the widest and the highest child frame.; - s gives the amount of separation in pixels between cells; - h are the hints, see TGTableLayoutHints. ~TGTableLayout(); TGTableLayout constructor. void FindRowColSizes(); Find the sizes of rows and columns needed to statisfy; children's layout policies. void FindRowColSizesInit(); Initialize values needed to determine the size of rows and columns. void FindRowColSizesSinglyAttached(); Determine the size of rows/cols needed for singly attached children. void FindRowColSizesHomogeneous(); If the table is homogeneous make sure all col/rows are same; size as biggest col/row. void FindRowColSizesMultiplyAttached(); Check",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTableLayout.html:8476,Inherit,Inheritance,8476,root/html602/TGTableLayout.html,https://root.cern,https://root.cern/root/html602/TGTableLayout.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tatic TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TMaterial*fMaterialPointer to material; TStringTNamed::fNameobject identifier; Int_tfNumberShape number; TStringTNamed::fTitleobject title; Int_tfVisibilityVisibility flag. Class Charts. Inheritance Chart:. TObject. ←; TNamed. TAttLine. TAttFill. TAtt3D. ←; TShape. ←. TBRIK; ←. TGTRA. TPARA. TTRAP. TTRD1. TTRD2. TPCON; ←. TPGON. TPolyLineShape. TSPHE.  [more...]. Function documentation; TShape(); Shape default constructor. TShape(const char* name, const char* title, const char* material); Shape normal constructor. TShape(const TShape& ); copy constructor. TShape& operator=(const TShape& ); assignement operator. ~TShape(); Shape default destructor. Int_t ShapeDistancetoPrimitive(Int_t numPoints, Int_t px, Int_t py); Distance to primitive. void Paint(Option_t* option = """"); This method is used only when a shape is painted outside a TNode. void SetPoints(Double_t* points) const; Set points. void Streamer(TBuffer& ); Stream an object of class TShape. void TransformPoints(Double_t* points, UInt_t NbPnts) const; Tranform points (LocalToMaster). void FillBuffer3D(TBuffer3D& buffer, Int_t reqSections) const; We have to set kRawSize (unless already done) to allocate buffer space; before",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TShape.html:8411,Inherit,Inheritance,8411,root/html602/TShape.html,https://root.cern,https://root.cern/root/html602/TShape.html,2,['Inherit'],['Inheritance']
Modifiability,"tatic TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TApplication::EStatusBitsTApplication::kProcessRemotely; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyROOTApplication(const char* acn, Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); Create a TApplication derived for use with interactive ROOT from python. A; set of standard, often used libs is loaded if bLoadLibs is true (default). Bool_t CreatePyROOTApplication(Bool_t bLoadLibs = kTRUE); Create a TPyROOTApplication. Returns false if gApplication is not null. Bool_t InitROOTGlobals(); Setup the basic ROOT globals gBenchmark, gStyle, gProgname, if not already; set. Always returns true. Bool_t InitROOTMessageCallback(); Install ROOT message handler which will turn ROOT error message into; python exceptions. Always returns true. void dummy(); {}. TPyROOTApplication(const char* acn, Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); { }. » Last changed: Tue Jun 2 15:18:22 2015 » Last generated: 2015-06-02 15:18; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/PyROOT__TPyROOTApplication.html:13874,Inherit,Inheritance,13874,root/html604/PyROOT__TPyROOTApplication.html,https://root.cern,https://root.cern/root/html604/PyROOT__TPyROOTApplication.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tatic TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TApplication::EStatusBitsTApplication::kProcessRemotely; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyROOTApplication(const char* acn, Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); Create a TApplication derived for use with interactive ROOT from python. A; set of standard, often used libs is loaded if bLoadLibs is true (default). Bool_t CreatePyROOTApplication(Bool_t bLoadLibs = kTRUE); Create a TPyROOTApplication. Returns false if gApplication is not null. Bool_t InitROOTGlobals(); Setup the basic ROOT globals gBenchmark, gStyle, gProgname, if not already; set. Always returns true. Bool_t InitROOTMessageCallback(); Install ROOT message handler which will turn ROOT error message into; python exceptions. Always returns true. void dummy(); {}. TPyROOTApplication(const char* acn, Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); { }. » Last changed: Tue Jun 30 14:21:27 2015 » Last generated: 2015-06-30 14:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/PyROOT__TPyROOTApplication.html:13874,Inherit,Inheritance,13874,root/html602/PyROOT__TPyROOTApplication.html,https://root.cern,https://root.cern/root/html602/PyROOT__TPyROOTApplication.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tatic TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TStringTNamed::fNameobject identifier; TPie*fPieThe TPie object that contain this slice; Double_tfRadiusOffsetroffset offset from the center of the pie; TStringTNamed::fTitleobject title; Double_tfValuevalue value of this slice. private:. Bool_tfIsActive! True if is the slice under the mouse pointer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPieSlice(); This is the default constructor, used to create the standard. TPieSlice(const char* , const char* , TPie* , Double_t val = 0); This constructor create a slice with a particular value. Int_t DistancetoPrimitive(Int_t , Int_t ); Eval if the mouse is over the area associated with this slice. Double_t GetRadiusOffset(); return the value of the offset in radial direction for this slice. Double_t GetValue(); Return the value of this slice. void SavePrimitive(ostream& out, Option_t* opts = """"); Do nothing. void SetRadiusOffset(Double_t ); Set the radial offset of this slice. void SetValue(Double_t ); Set the value for this slice.; Negative values are changed with its absolute value. TPieSlice(). virtual ~TPieSlice(); {;}. void SetIsActive(Bool_t is); { fIsActive = is; }. » Last changed: Tue Jun 2 16:27:29 2015 » Last generated: 2015-06-02 16:27; This page has been automatically generated. For comments or suggestions regarding the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TPieSlice.html:7899,Inherit,Inheritance,7899,root/html604/TPieSlice.html,https://root.cern,https://root.cern/root/html604/TPieSlice.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tatic TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TStringTNamed::fNameobject identifier; TPie*fPieThe TPie object that contain this slice; Double_tfRadiusOffsetroffset offset from the center of the pie; TStringTNamed::fTitleobject title; Double_tfValuevalue value of this slice. private:. Bool_tfIsActive! True if is the slice under the mouse pointer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPieSlice(); This is the default constructor, used to create the standard. TPieSlice(const char* , const char* , TPie* , Double_t val = 0); This constructor create a slice with a particular value. Int_t DistancetoPrimitive(Int_t , Int_t ); Eval if the mouse is over the area associated with this slice. Double_t GetRadiusOffset(); return the value of the offset in radial direction for this slice. Double_t GetValue(); Return the value of this slice. void SavePrimitive(ostream& out, Option_t* opts = """"); Do nothing. void SetRadiusOffset(Double_t ); Set the radial offset of this slice. void SetValue(Double_t ); Set the value for this slice.; Negative values are changed with its absolute value. TPieSlice(). virtual ~TPieSlice(); {;}. void SetIsActive(Bool_t is); { fIsActive = is; }. » Last changed: Tue Jun 30 15:25:12 2015 » Last generated: 2015-06-30 15:25; This page has been automatically generated. For comments or suggestions regarding th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPieSlice.html:7899,Inherit,Inheritance,7899,root/html602/TPieSlice.html,https://root.cern,https://root.cern/root/html602/TPieSlice.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tatic TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Bool_tTList::fAscending! sorting order (when calling Sort() or for TSortedList); TObjLink*TList::fCache! cache to speedup sequential calling of Before() and After() functions; TObjLink*TList::fFirst! pointer to first entry in linked list; TObjLink*TList::fLast! pointer to last entry in linked list; TStringTCollection::fNamename of the collection; Int_tTCollection::fSizenumber of elements in collection; Bool_tTSeqCollection::fSortedtrue if collection has been sorted; static TCollection::(anonymous)TCollection::kIsOwner. private:. TList*fDontShowlist of reg expression defining what should not be shown. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofOutputList(const char* dontshow = ""PROOF_*""); Constructor. ~TProofOutputList(); Destructor. void AttachList(TList* alist); Attach to list 'alist'. void ls(Option_t* option = """") const; List the content of the list. void Print(Option_t* option = """") const; Print the content of the list. TProofOutputList(const char* dontshow = ""PROOF_*""). TProofOutputList(TObject* o); { }. void Print(Option_t* option = """") const. void Print(Option_t* option, Int_t recurse) const; { TCollection::Print(option, recurse); }. void Print(Option_t* option, const char* wildcard, Int_t recurse = 1) const; { TCollection::Print(option, wildcard, recurse); }. TList * GetDontShowList(); { return fDontShow; }. » Author: G. Ganis 04/08/2010 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-02 16:29; This page has been automatically generated. For comments or suggestions regarding the docum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TProofOutputList.html:10808,Inherit,Inheritance,10808,root/html604/TProofOutputList.html,https://root.cern,https://root.cern/root/html604/TProofOutputList.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tatic TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Bool_tTList::fAscending! sorting order (when calling Sort() or for TSortedList); TObjLink*TList::fCache! cache to speedup sequential calling of Before() and After() functions; TObjLink*TList::fFirst! pointer to first entry in linked list; TObjLink*TList::fLast! pointer to last entry in linked list; TStringTCollection::fNamename of the collection; Int_tTCollection::fSizenumber of elements in collection; Bool_tTSeqCollection::fSortedtrue if collection has been sorted; static TCollection::(anonymous)TCollection::kIsOwner. private:. TList*fDontShowlist of reg expression defining what should not be shown. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofOutputList(const char* dontshow = ""PROOF_*""); Constructor. ~TProofOutputList(); Destructor. void AttachList(TList* alist); Attach to list 'alist'. void ls(Option_t* option = """") const; List the content of the list. void Print(Option_t* option = """") const; Print the content of the list. TProofOutputList(const char* dontshow = ""PROOF_*""). TProofOutputList(TObject* o); { }. void Print(Option_t* option = """") const. void Print(Option_t* option, Int_t recurse) const; { TCollection::Print(option, recurse); }. void Print(Option_t* option, const char* wildcard, Int_t recurse = 1) const; { TCollection::Print(option, wildcard, recurse); }. TList * GetDontShowList(); { return fDontShow; }. » Author: G. Ganis 04/08/2010 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-30 15:27; This page has been automatically generated. For comments or suggestions regarding the docum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofOutputList.html:10808,Inherit,Inheritance,10808,root/html602/TProofOutputList.html,https://root.cern,https://root.cern/root/html602/TProofOutputList.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tatic TProcessID * GetProcessID (UShort_t pid);  static function returning a pointer to TProcessID number pid in fgPIDs ;  ; static TProcessID * GetProcessWithUID (const TObject *obj);  static function returning a pointer to TProcessID with its pid encoded in the highest byte of obj->GetUniqueID() ;  ; static TProcessID * GetProcessWithUID (UInt_t uid, const void *obj);  static function returning a pointer to TProcessID with its pid encoded in the highest byte of uid ;  ; static TProcessID * GetSessionProcessID ();  static function returning the pointer to the session TProcessID ;  ; static Bool_t IsValid (TProcessID *pid);  static function. return kTRUE if pid is a valid TProcessID ;  ; static void SetObjectCount (UInt_t number);  static function to set the current referenced object count fgNumber is incremented every time a new object is referenced ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TBits * fActive;  ; TList * fUUIDs;  ;  Protected Attributes inherited from TProcessID; std::atomic_int fCount;  ; std::atomic_flag fLock;  Array pointing to the referenced objects. ;  ; ROOT::Internal::TAtomicPointer< TObjArray * > fObjects;  Reference count to this object (from TFile) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProcessUUID.html:13816,inherit,inherited,13816,doc/master/classTProcessUUID.html,https://root.cern,https://root.cern/doc/master/classTProcessUUID.html,2,['inherit'],['inherited']
Modifiability,"tatic TProcessID * GetProcessID (UShort_t pid);  static function returning a pointer to TProcessID number pid in fgPIDs ;  ; static TProcessID * GetProcessWithUID (const TObject *obj);  static function returning a pointer to TProcessID with its pid encoded in the highest byte of obj->GetUniqueID() ;  ; static TProcessID * GetProcessWithUID (UInt_t uid, const void *obj);  static function returning a pointer to TProcessID with its pid encoded in the highest byte of uid ;  ; static TProcessID * GetSessionProcessID ();  static function returning the pointer to the session TProcessID ;  ; static Bool_t IsValid (TProcessID *pid);  static function. return kTRUE if pid is a valid TProcessID ;  ; static void SetObjectCount (UInt_t number);  static function to set the current referenced object count fgNumber is incremented every time a new object is referenced ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; std::atomic_int fCount;  ; std::atomic_flag fLock;  Array pointing to the referenced objects. ;  ; ROOT::Internal::TAtomicPointer< TObjArray * > fObjects;  Reference count to this object (from TFile) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static std::atomic_uint fgNumber;  ; static TExMap * fgObjPIDs = n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProcessID.html:13240,inherit,inherited,13240,doc/master/classTProcessID.html,https://root.cern,https://root.cern/doc/master/classTProcessID.html,2,['inherit'],['inherited']
Modifiability,"tatic TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; const ROOT::Math::IBaseFunctionMultiDim*funcFunctor; RooListProxyvarsArgument reference; Double_t*xArgument value array.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooFunctorPdfBinding.html:42667,config,configuration,42667,root/html534/RooFunctorPdfBinding.html,https://root.cern,https://root.cern/root/html534/RooFunctorPdfBinding.html,4,['config'],['configuration']
Modifiability,"tatic TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,double,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction2PdfBinding_double_double_int_.html:44564,config,configuration,44564,root/html602/RooCFunction2PdfBinding_double_double_int_.html,https://root.cern,https://root.cern/root/html602/RooCFunction2PdfBinding_double_double_int_.html,8,['config'],['configuration']
Modifiability,"tatic TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction2PdfBinding_double_int_double_.html:44564,config,configuration,44564,root/html602/RooCFunction2PdfBinding_double_int_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction2PdfBinding_double_int_double_.html,8,['config'],['configuration']
Modifiability,"tatic TTree::ELockStatusBitsTTree::kGetLeaf; static TTree::ELockStatusBitsTTree::kLoadTree; static TTree::ELockStatusBitsTTree::kPrint; static TTree::ELockStatusBitsTTree::kRemoveFriend; static TTree::ELockStatusBitsTTree::kSetBranchStatus. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TChain(); -- Default constructor. TChain(const char* name, const char* title = """"); -- Create a chain. A TChain is a collection of TFile objects.; the first parameter ""name"" is the name of the TTree object; in the files added with Add.; Use TChain::Add to add a new element to this chain. In case the Tree is in a subdirectory, do, eg:; TChain ch(""subdir/treename"");. Example:; Suppose we have 3 files f1.root, f2.root and f3.root. Each file; contains a TTree object named ""T"".; TChain ch(""T""); creates a chain to process a Tree called ""T""; ch.Add(""f1.root"");; ch.Add(""f2.root"");; ch.Add(""f3.root"");; ch.Draw(""x"");; The Draw function above will process the variable ""x"" in Tree ""T""; reading sequentially the 3 files in the chain ch. The TChain data structure; Each TChainElement has a name equal to the tree name of this TChain; and a title equal to the file name. So, to loop over the; TFiles that have been added to this chain:. TObjArray *fileElements=chain->GetListOfFiles();; TIter next(fileElements);; TChainElement *chEl=0;; while (( chEl=(TChainElement*)next() )) {; TFile f(chEl->GetTitle());; ... do something with f ...; }. ~TChain(); -- Destructor. Int_t Add(TChain* chain); -- Add all files referenced by the passed chain to this chain.; The function returns the total number of files connected. Int_t Add(const char* name, Long64_t nentries = kBigNumber); -- Add a new file to this chain. Argument name may have either of two formats. The first:; [//machine]/path/file_name.root[/tree_name]. If tree_name is missing the chain name will be assumed.; Wildcard treatment is triggered by the any of the special characters []*?; which may be used in the file ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TChain.html:30025,variab,variable,30025,root/html602/TChain.html,https://root.cern,https://root.cern/root/html602/TChain.html,4,['variab'],['variable']
Modifiability,"tatic bool IsStandardDraw (const char *selec);  Find out if this is a standard selection used for Draw actions (either TSelectorDraw, TProofDraw or deriving from them). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EStatusBits { kWarn = (1ULL << ( 12 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual bool CompileVariables (const char *varexp="""", const char *selection="""");  Compile input variables and selection expression. ;  ; virtual void InitArrays (Int_t newsize);  Initialization of the primitive type arrays if the new size is bigger than the available space. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fAction;  ! Action type ;  ; bool fCleanElist;  True if original Tree elist must be saved. ;  ; Long64_t fCurrentSubEntry;  Current subentry when fSelectMultiple is true. Used to fill TEntryListArray. ;  ; Int_t fDimension;  Dimension of the current expression. ;  ; Long64_t fDraw;  ! Last entry loop number when object was drawn ;  ; Int_t fForceRead;  Force Read flag. ;  ; TTreeFormulaManager * fManager;  Pointer to the formula manager. ;  ; Int_t fMultiplicity;  Indicator of the variability of the size of entries. ;  ; Int_t * fNbins;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelectorDraw.html:13375,variab,variables,13375,doc/master/classTSelectorDraw.html,https://root.cern,https://root.cern/doc/master/classTSelectorDraw.html,1,['variab'],['variables']
Modifiability,"tatic const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; const TGMdiMainFrame * fMain;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiContainer.html:21233,inherit,inherited,21233,doc/master/classTGMdiContainer.html,https://root.cern,https://root.cern/doc/master/classTGMdiContainer.html,1,['inherit'],['inherited']
Modifiability,"tatic const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TString fCountClass;  ; TStreamerBasicType * fCounter;  ; TString fCountName;  ; Int_t fCountVersion;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TStreamerBasicPointer (const TStreamerBasicPointer &)=delete;  ; TStreamerBasicPointer & operator= (const TStreamerBasicPointer &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepeat = (1ULL << ( 10 )); , kRead = (1ULL << ( 11 )); , ;   kWrite = (1ULL << ( 12 )); , kDoNotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerBasicPointer.html:14602,inherit,inherits,14602,doc/master/classTStreamerBasicPointer.html,https://root.cern,https://root.cern/doc/master/classTStreamerBasicPointer.html,1,['inherit'],['inherits']
Modifiability,"tatic const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TString fCountClass;  ; TStreamerBasicType * fCounter;  ; TString fCountName;  ; Int_t fCountVersion;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TStreamerLoop (const TStreamerLoop &)=delete;  ; TStreamerLoop & operator= (const TStreamerLoop &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepeat = (1ULL << ( 10 )); , kRead = (1ULL << ( 11 )); , ;   kWrite = (1ULL << ( 12 )); , kDoNotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; en",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerLoop.html:14461,inherit,inherits,14461,doc/master/classTStreamerLoop.html,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html,1,['inherit'],['inherits']
Modifiability,"tatic const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TGWin32ProxyBase; static void GlobalLock ();  lock any proxy (client thread) ;  ; static void GlobalUnlock ();  unlock any proxy (client thread) ;  ; static Bool_t IsGloballyLocked ();  Check the status of the lock. ;  ; static void Lock ();  enter critical section ;  ; static Bool_t Ping ();  send ping messsage to server thread ;  ; static void Unlock ();  leave critical section ;  . Static Protected Attributes; static TVirtualX * fgRealObject = 0;  ;  Static Protected Attributes inherited from TGWin32ProxyBase; static Long_t fgLock = 0;  fgLock=1 - all client threads locked ;  ; static UInt_t fMaxResponseTime = 0;  max period for waiting response from server thread ;  . Friends; class TGWin32;  . Additional Inherited Members;  Public Types inherited from TVirtualX; enum  EBoxMode { kHollow; , kFilled; };  ; enum  EDrawMode { kCopy = 1; , kXor; , kInvert; };  ; enum  ETextMode { kClear; , kOpaque; };  ; enum  ETextSetMode { kCheck; , kLoad; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x040",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32VirtualXProxy.html:47979,inherit,inherited,47979,doc/master/classTGWin32VirtualXProxy.html,https://root.cern,https://root.cern/doc/master/classTGWin32VirtualXProxy.html,1,['inherit'],['inherited']
Modifiability,"tatic const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TCondition (const TCondition &)=delete;  ; TCondition & operator= (const TCondition &)=delete;  . Private Attributes; TConditionImp * fConditionImp;  ; TMutex * fMutex;  ; Bool_t fPrivateMutex;  . Friends; class TThread;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TCondition.h>. Inheritance diagram for TCondition:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCondition.html:9586,inherit,inherited,9586,doc/master/classTCondition.html,https://root.cern,https://root.cern/doc/master/classTCondition.html,1,['inherit'],['inherited']
Modifiability,"tatic const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void DoRedraw () override;  Draw dock hide button. ;  ;  Protected Member Functions inherited from TGDockButton; void DrawBorder () override;  Draw borders of dock button. ;  ;  Protected Member Functions inherited from TGButton; virtual void EmitSignals (Bool_t wasUp);  Emit button signals. ;  ; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDockHideButton.html:25099,inherit,inherited,25099,doc/master/classTGDockHideButton.html,https://root.cern,https://root.cern/doc/master/classTGDockHideButton.html,1,['inherit'],['inherited']
Modifiability,"tatic const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Bool_t QRH (TMatrixD &q, TVectorD &diagR, TVectorD &up, TVectorD &w, Double_t tol);  Decomposition function . ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; TMatrixD fQ;  ; TMatrixD fR;  ; TVectorD fUp;  ; TVectorD fW;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TDecompQRH.h>. Inheritance diagram for TDecompQRH:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeratio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDecompQRH.html:14673,inherit,inherited,14673,doc/master/classTDecompQRH.html,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html,1,['inherit'],['inherited']
Modifiability,"tatic const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/roofit/roofitcore/src/RooFormula.h>. Inheritance diagram for RooFormula:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooFormula() [1/2]. RooFormula::RooFormula ; (; const char * ; name, . const char * ; formula, . const RooArgList & ; varList, . bool ; checkVariables = true . ). Construct a new formula. ; Parameters. [in]nameName of the formula. ; [in]formulaFormula to be evaluated. Parameters/observables are identified by name or ordinal position in varList. ; [in]varListList of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFormula.html:16721,inherit,inherited,16721,doc/master/classRooFormula.html,https://root.cern,https://root.cern/doc/master/classRooFormula.html,2,['inherit'],['inherited']
Modifiability,"tatic const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void FindMomentumLimits (TEveElement *el, Bool_t recurse=kTRUE);  Loop over track elements of argument el and find highest pT and p. ;  ; Double_t RoundMomentumLimit (Double_t x);  Round the momentum limit up to a nice value. ;  ; void SanitizeMinMaxCuts ();  Set Min/Max cuts so that they are within detected limits. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fLimP;  ; Double_t fLimPt;  ; Double_t fMaxP;  ; Double_t fMaxPt;  ; Double_t fMinP;  ; Double_t fMinPt;  ; TEveTrackPropagator * fPropagator;  ; Bool_t fRecurse;  ; Bool_t fRnrLine;  ; Bool_t fRnrPoints;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrackList.html:35291,inherit,inherited,35291,doc/master/classTEveTrackList.html,https://root.cern,https://root.cern/doc/master/classTEveTrackList.html,1,['inherit'],['inherited']
Modifiability,"tatic const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Private Attributes; TObject * fTip {nullptr};  ! tool tip associated with box ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TBox.h>. Inheritance diagram for TBox:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkCannotMove . Definition at line 36 of file TBox.h. Constructor & Destructor Documentation. ◆ TBox() [1/3]. TBox::TBox ; (; ). Box default constructor. ; Definition at line 42 of file TBox.cxx. ◆ TBox() [2/3]. TBox::TBox ; (; Double_t ; x1, . Double_t ; y1, . Double_t ; x2, . Double_t ; y2 . ). Box standard constructor. ; Definition at line 55 of file TBox.cxx. ◆ TBox() [3/3]. TBox::TBox ; (; const TBox & ; box). Box copy constructor. ; Definition at line 80 of file TBox.cxx. ◆ ~TBox(). TBox::~TBox ; (; ). override . Box destructor. ; Definition at line 69 of file TBox.cxx. Member Function ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBox.html:15915,inherit,inherited,15915,doc/master/classTBox.html,https://root.cern,https://root.cern/doc/master/classTBox.html,2,['inherit'],['inherited']
Modifiability,tatic const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualPaveStats; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TString fFitFormat;  Printing format for fit parameters. ;  ; Int_t fOptFit;  option Fit ;  ; Int_t fOptStat;  option Stat ;  ; TObject * fParent {nullptr};  owner of this TPaveStats ;  ; TString fStatFormat;  Printing format for stats. ;  ;  Protected Attributes inherited from TPaveText; TString fLabel;  Label written at the top of the pavetext. ;  ; TList * fLines {nullptr};  List of labels. ;  ; Int_t fLongest;  Length of the longest line. ;  ; Float_t fMargin;  Text margin. ;  ;  Protected Attributes inherited from TPave; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attributes inherited from TBox; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd point. ;  ;  Pr,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPaveStats.html:32571,inherit,inherited,32571,doc/master/classTPaveStats.html,https://root.cern,https://root.cern/doc/master/classTPaveStats.html,1,['inherit'],['inherited']
Modifiability,"tatic const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TVirtualGeoTrack; Int_t fId {-1};  ; TVirtualGeoTrack * fParent {nullptr};  ; TObject * fParticle {nullptr};  ; Int_t fPDG {0};  ; TObjArray * fTracks {nullptr};  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . #include <TGeoTrack.h>. Inheritance diagram for TGeoTrack:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EGeoParticleActions. enum TGeoTrack::EGeoParticleActions. EnumeratorkGeoPDefault ; kGeoPOnelevel ; kGeoPAllDaughters ; kGeoPType ; kGeoPDrawn . Definition at line 28 of file TGeoTrack.h. Constructor & Destructor Documentation. ◆ TGeoTrack() [1/3]. TGeoTrack::TGeoTrack ; (; const TGeoTrack & ; ). protecteddelete . ◆ TGeoTrack() [2/3]",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTrack.html:20643,inherit,inherited,20643,doc/master/classTGeoTrack.html,https://root.cern,https://root.cern/doc/master/classTGeoTrack.html,4,['inherit'],['inherited']
Modifiability,"tatic const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fCut {0.};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoRegion.h>. Inheritance diagram for TGeoRegionCut:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoRegionCut.html:10289,inherit,inherited,10289,doc/master/classTGeoRegionCut.html,https://root.cern,https://root.cern/doc/master/classTGeoRegionCut.html,1,['inherit'],['inherited']
Modifiability,"tatic const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Bool_t fActive;  ; Int_t fBreakin;  ; Int_t fBreakout;  ; Bool_t fHasExecuted;  ; TString fOption;  ; TList * fTasks;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static TTask * fgBeginTask = nullptr;  ; static TTask * fgBreakPoint = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TTask.h>. Inheritance diagram for TTask:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTask.html:14826,inherit,inherited,14826,doc/master/classTTask.html,https://root.cern,https://root.cern/doc/master/classTTask.html,1,['inherit'],['inherited']
Modifiability,"tatic const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Int_t FindLimitsFromTable (Double_t mu);  calculate the probability table for a given mu for n = 0, NMAX and return 1 if the number of observed events is consistent with the CL bad ;  ; Double_t Prob (Int_t N, Double_t mu, Double_t B);  Calculate the poissonian probability for a mean of mu+B events with a variance of N. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fCL;  ; Double_t fLowerLimit;  ; Double_t fMuMax;  ; Double_t fMuMin;  ; Double_t fMuStep;  ; Double_t fNbackground;  ; Int_t fNMax;  ; Int_t fNMuStep;  ; Double_t fNobserved;  ; Int_t fQUICK;  ; Double_t fUpperLimit;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFeldmanCousins.html:12052,inherit,inherited,12052,doc/master/classTFeldmanCousins.html,https://root.cern,https://root.cern/doc/master/classTFeldmanCousins.html,1,['inherit'],['inherited']
Modifiability,"tatic constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStdExceptionHandler.html:13788,inherit,inherited,13788,doc/master/classTStdExceptionHandler.html,https://root.cern,https://root.cern/doc/master/classTStdExceptionHandler.html,2,['inherit'],['inherited']
Modifiability,"tatic constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualProofPlayer.html:16783,inherit,inherited,16783,doc/master/classTVirtualProofPlayer.html,https://root.cern,https://root.cern/doc/master/classTVirtualProofPlayer.html,2,['inherit'],['inherited']
Modifiability,"tatic constexpr Version_t Class_Version ();  ; static RooArgList createParamSet (const std::string &, Int_t, double, double);  Create the list of RooRealVar parameters which represent the height of the histogram bins. ;  ; static RooArgList createParamSet (RooWorkspace &w, const std::string &, const RooArgList &Vars);  Create the list of RooRealVar parameters which represent the height of the histogram bins. ;  ; static RooArgList createParamSet (RooWorkspace &w, const std::string &, const RooArgList &Vars, double, double);  Create the list of RooRealVar parameters which scale the height of histogram bins. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (std::ostream &os=std::cout, Int_t maxPerNode=10000000);  Print all outstanding logged evaluation error on the given ostream. ;  ; static void setEvalErrorLoggingMode (ErrorLoggingMode m);  Set evaluation error logging ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classParamHistFunc.html:47125,config,configuration,47125,doc/master/classParamHistFunc.html,https://root.cern,https://root.cern/doc/master/classParamHistFunc.html,1,['config'],['configuration']
Modifiability,"tatic constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoOpticalSurface (const TGeoOpticalSurface &)=delete;  ; TGeoOpticalSurface & operator= (const TGeoOpticalSurface &)=delete;  . Private Attributes; TList fConstProperties;  ; ESurfaceFinish fFinish = kFpolished;  ; ESurfaceModel fModel = kMglisur;  ; std::string fName = """";  ; Double_t fPolish = 0.0;  ; TList fProperties;  ; Double_t fSigmaAlpha = 0.0;  ; ESurfaceType fType = kTdielectric_metal;  ; Double_t fValue = 0.0;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoOpticalSurface.h>. Inheritance diagram for TGeoOpticalSurface:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ESurfaceFinish. enum TGeoOpticalSurface::ESurfaceFinish. EnumeratorkFpolished ; kFpolishedfrontpainted ; kFpolishedbackpainted ; kFground ; kFgroundfrontpainted ; kFgroundbackpainted ; kFpolishedlumirrorair ; kFpolishedlumirrorglue ; kFpolishedair ; kFpolishedteflonair ; kFpolishedtioair ; kFpolishedtyvekair ; kFpolishedvm2000air ; kFpolishedvm2000glue ; kFetchedlumirrorair ; kFetchedlumirrorglue ; kFetchedair ; kFetchedteflonair ; kFetchedtioair ; kFetchedtyvekair ; kFetchedvm2000air ; kFetchedvm2000glue ; kFgroundlumirror",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoOpticalSurface.html:14325,inherit,inherited,14325,doc/master/classTGeoOpticalSurface.html,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html,2,['inherit'],['inherited']
Modifiability,"tatic constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TNonSplitBrowsable (const TStreamerElement *element, const TBranch *branch, const TVirtualBranchBrowsable *parent=nullptr);  Constructor. ;  ;  Protected Member Functions inherited from TVirtualBranchBrowsable;  TVirtualBranchBrowsable (const TBranch *b, TClass *type, bool typeIsPointer, const TVirtualBranchBrowsable *parent=nullptr);  Constructor setting all members according to parameters. ;  ; void SetType (TClass *type);  sets the type of this browsable object ;  ; void SetTypeIsPointer (bool set=true);  sets whether the type of this browsable object is a pointer ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Additional Inherited Members;  Public Types inherited from TVirtualBranchBrowsable; typedef Int_t(* MethodCreateListOfBrowsables_t) (TList &, const TBranch *branch, const TVirtualBranchBrowsable *parent);  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNonSplitBrowsable.html:13010,inherit,inherited,13010,doc/master/classTNonSplitBrowsable.html,https://root.cern,https://root.cern/doc/master/classTNonSplitBrowsable.html,1,['inherit'],['inherited']
Modifiability,"tatic constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Types; using LegacyIterator_t = TIteratorToSTLInterface< Storage_t >;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; virtual bool canBeAdded (const RooAbsArg &arg, bool silent) const =0;  Determine whether it's possible to add a given RooAbsArg to the collection or not. ;  ; void clearStructureTags ();  ; void deleteList ();  Delete contents of the list. ;  ; void makeStructureTag ();  ; void makeTypedStructureTag ();  ; TNamed * structureTag ();  ; TNamed * typedStructureTag ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; template<class T > ; static void assert_is_no_temporary (T &&);  . Protected Attributes; bool _allRRV = true;  All contents are RRV. ;  ; Storage_t _list;  Actual object storage. ;  ; TString _name;  Our name. ;  ; bool _ownCont = false;  Flag to identify a list that o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsCollection.html:24191,inherit,inherited,24191,doc/v632/classRooAbsCollection.html,https://root.cern,https://root.cern/doc/v632/classRooAbsCollection.html,2,['inherit'],['inherited']
Modifiability,"tatic constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; RooFit::OwningPtr< RooArgSet > actualObservables (const RooArgSet &nset) const override;  If this pdf is operated with a fixed set of observables, return the subset of the fixed observables that are actual dependents of the external input p.d.f. ;  ; RooFit::OwningPtr< RooArgSet > actualParameters (const RooArgSet &nset) const override;  If this p.d.f is operated with a fixed set of observables, return all variables of the external input p.d.f that are not one of the cache observables. ;  ; FuncCacheElem * createCache (const RooArgSet *nset) const override;  Interface function to create an internal cache object that represent each cached function configuration. ;  ; double evaluate () const override;  Dummy evaluate, it is never called. ;  ; void fillCacheObject (FuncCacheElem &cacheFunc) const override;  Update contents of cache histogram by resampling the input function. ;  ; const char * inputBaseName () const override;  Return base name for caches, i.e. the name of the cached function. ;  ; void operModeHook () override;  ; const char * payloadUniqueSuffix () const override;  ;  Protected Member Functions inherited from RooAbsCachedReal; virtual const char * binningName () const;  ; TString cacheNameSuffix (const RooArgSet &nset) const;  Construct unique suffix name for cache p.d.f object. ;  ; FuncCacheElem * getCache (const RooArgSet *nset) const;  Retrieve cache corresponding to observables in nset. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCachedReal.html:49740,config,configuration,49740,doc/master/classRooCachedReal.html,https://root.cern,https://root.cern/doc/master/classRooCachedReal.html,1,['config'],['configuration']
Modifiability,"tatic constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void Normalize (Double_t *vect);  Normalize a vector. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fScale [3];  ;  Protected Attributes inherited from TGeoCombiTrans; TGeoRotation * fRotation;  ; Double_t fTranslation [3];  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoMatrix; enum  EGeoTransfTypes { ;   kGeoIdentity = 0; , kGeoShared = (1ULL << ( 14 )); , kGeoTranslation = (1ULL << ( 17 )); , kGeoRotation = (1ULL << ( 18 )); , ;   kGeoScale = (1ULL << ( 19 )); , kGeoReflection = (1ULL << ( 20 )); , kGeoRegistered = (1ULL << ( 21 )); , kGeoSavePrimitive = (1ULL << ( 22 )); , ;   kGeoMatrixOwned = (1ULL << ( 23 )); , kGeoCombiTrans = kGeoTranslation | kGeoRotation; , kGeoGenTrans = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 ));",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoGenTrans.html:16622,inherit,inherited,16622,doc/master/classTGeoGenTrans.html,https://root.cern,https://root.cern/doc/master/classTGeoGenTrans.html,2,['inherit'],['inherited']
Modifiability,"tatic constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SetPortParam (Int_t lower=-1, Int_t upper=-1, Int_t attempts=-1);  Set port parameters for tunnelling. A value of -1 means unchanged. ;  ;  Static Public Member Functions inherited from TApplication; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void CreateApplication ();  Static function used to create a default application environment. ;  ; static const char * DeclFileName ();  ; static Longptr_t ExecuteFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Execute a file containing a C++ macro (static method). ;  ; static TList * GetApplications ();  Static method returning the list of available applications. ;  ; static void NeedGraphicsLibs ();  Static method. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplicationRemote.html:16650,inherit,inherited,16650,doc/master/classTApplicationRemote.html,https://root.cern,https://root.cern/doc/master/classTApplicationRemote.html,1,['inherit'],['inherited']
Modifiability,"tatic constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Protected Member Functions;  TVirtualGeoTrack (const TVirtualGeoTrack &)=delete;  ; TVirtualGeoTrack & operator= (const TVirtualGeoTrack &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fId {-1};  ; TVirtualGeoTrack * fParent {nullptr};  ; TObject * fParticle {nullptr};  ; Int_t fPDG {0};  ; TObjArray * fTracks {nullptr};  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleK",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualGeoTrack.html:16858,inherit,inherited,16858,doc/master/classTVirtualGeoTrack.html,https://root.cern,https://root.cern/doc/master/classTVirtualGeoTrack.html,1,['inherit'],['inherited']
Modifiability,"tatic constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TString fLabel;  Label written at the center of Pave. ;  ;  Protected Attributes inherited from TPave; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attributes inherited from TBox; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Public Types inherited from TPave; enum  { kNameIsAction = (1ULL << ( 11 )); };  ;  Public Types inherited from TBox; enum  { kCannotMove = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPaveLabel.html:20434,inherit,inherited,20434,doc/master/classTPaveLabel.html,https://root.cern,https://root.cern/doc/master/classTPaveLabel.html,1,['inherit'],['inherited']
Modifiability,"tatic constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; TH1D * fWtHst1;  Histogram of the weight wt. ;  ; TH1D * fWtHst2;  Histogram of wt filled with wt. ;  . Private Attributes; Int_t fnBin;  No. of bins on the weight distribution. ;  ; Double_t fNent;  No. of MC events. ;  ; Double_t fwmax;  Maximum analyzed weight. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TFoamMaxwt.h>. Inheritance diagram for TFoamMaxwt:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFoamMaxwt.html:10184,inherit,inherited,10184,doc/master/classTFoamMaxwt.html,https://root.cern,https://root.cern/doc/master/classTFoamMaxwt.html,1,['inherit'],['inherited']
Modifiability,"tatic function used to create a default application environment. ;  ; static const char * DeclFileName ();  ; static Longptr_t ExecuteFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Execute a file containing a C++ macro (static method). ;  ; static TList * GetApplications ();  Static method returning the list of available applications. ;  ; static void NeedGraphicsLibs ();  Static method. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplication.html:16421,inherit,inherited,16421,doc/master/classTApplication.html,https://root.cern,https://root.cern/doc/master/classTApplication.html,7,['inherit'],['inherited']
Modifiability,"tatic intoff(int i); static intoff0(int i); static intoff1(int i); static intoff2(int i, int j); static unsigned intoffset(unsigned int i, unsigned int j); double&operator()(unsigned int i, unsigned int j); const double&operator()(unsigned int i, unsigned int j) const; ROOT::Math::MatRepSym<double,2U>&operator+=(const ROOT::Math::MatRepSym<double,2>& rhs); ROOT::Math::MatRepSym<double,2U>&operator-=(const ROOT::Math::MatRepSym<double,2>& rhs); ROOT::Math::MatRepSym<double,2U>&operator=(const ROOT::Math::MatRepSym<double,2>& rhs); ROOT::Math::MatRepSym<double,2U>&operator=<ROOT::Math::MatRepSym<double, 2> >(const ROOT::Math::MatRepSym<double,2>&); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. static ROOT::Math::MatRepSym<double,2>::(anonymous)kCols; static ROOT::Math::MatRepSym<double,2>::(anonymous)kRows; static ROOT::Math::MatRepSym<double,2>::(anonymous)kSize. private:. doublefArray[3]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator+=(const ROOT::Math::MatRepSym<double,2>& rhs). MatRepStd<T, D1, D2>& operator-=(const ROOT::Math::MatRepSym<double,2>& rhs). MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepSym<double,2>& rhs). return fArray[ off(int i). constexpr int off0(int i); { return i==0 ? 0 : off0(i-1)+i;}. constexpr int off2(int i, int j); { return j<i ? off0(i)+j : off0(j)+i; }. constexpr int off1(int i); { return off2(i/D, i%D);}. offset(unsigned int i, unsigned int j); if (j > i) std::swap(i, j);. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:23; Thi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__MatRepSym_double_2_.html:2154,Inherit,Inheritance,2154,root/html602/ROOT__Math__MatRepSym_double_2_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__MatRepSym_double_2_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tatic intoff(int i); static intoff0(int i); static intoff1(int i); static intoff2(int i, int j); static unsigned intoffset(unsigned int i, unsigned int j); double&operator()(unsigned int i, unsigned int j); const double&operator()(unsigned int i, unsigned int j) const; ROOT::Math::MatRepSym<double,2U>&operator+=(const ROOT::Math::MatRepSym<double,2>& rhs); ROOT::Math::MatRepSym<double,2U>&operator-=(const ROOT::Math::MatRepSym<double,2>& rhs); ROOT::Math::MatRepSym<double,2U>&operator=(const ROOT::Math::MatRepSym<double,2>& rhs); ROOT::Math::MatRepSym<double,2U>&operator=<ROOT::Math::MatRepSym<double, 2> >(const ROOT::Math::MatRepSym<double,2>&); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. static ROOT::Math::MatRepSym<double,2>::(anonymous)kCols; static ROOT::Math::MatRepSym<double,2>::(anonymous)kRows; static ROOT::Math::MatRepSym<double,2>::(anonymous)kSize. private:. doublefArray[3]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator+=(const ROOT::Math::MatRepSym<double,2>& rhs). MatRepStd<T, D1, D2>& operator-=(const ROOT::Math::MatRepSym<double,2>& rhs). MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepSym<double,2>& rhs). return fArray[ off(int i). constexpr int off0(int i); { return i==0 ? 0 : off0(i-1)+i;}. constexpr int off2(int i, int j); { return j<i ? off0(i)+j : off0(j)+i; }. constexpr int off1(int i); { return off2(i/D, i%D);}. offset(unsigned int i, unsigned int j); if (j > i) std::swap(i, j);. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:35; Thi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__MatRepSym_double_2_.html:2154,Inherit,Inheritance,2154,root/html604/ROOT__Math__MatRepSym_double_2_.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__MatRepSym_double_2_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tatic intoff(int i); static intoff0(int i); static intoff1(int i); static intoff2(int i, int j); static unsigned intoffset(unsigned int i, unsigned int j); double&operator()(unsigned int i, unsigned int j); const double&operator()(unsigned int i, unsigned int j) const; ROOT::Math::MatRepSym<double,3U>&operator+=(const ROOT::Math::MatRepSym<double,3>& rhs); ROOT::Math::MatRepSym<double,3U>&operator-=(const ROOT::Math::MatRepSym<double,3>& rhs); ROOT::Math::MatRepSym<double,3U>&operator=(const ROOT::Math::MatRepSym<double,3>& rhs); ROOT::Math::MatRepSym<double,3U>&operator=<ROOT::Math::MatRepSym<double, 3> >(const ROOT::Math::MatRepSym<double,3>&); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. static ROOT::Math::MatRepSym<double,3>::(anonymous)kCols; static ROOT::Math::MatRepSym<double,3>::(anonymous)kRows; static ROOT::Math::MatRepSym<double,3>::(anonymous)kSize. private:. doublefArray[6]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator+=(const ROOT::Math::MatRepSym<double,3>& rhs). MatRepStd<T, D1, D2>& operator-=(const ROOT::Math::MatRepSym<double,3>& rhs). MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepSym<double,3>& rhs). return fArray[ off(int i). constexpr int off0(int i); { return i==0 ? 0 : off0(i-1)+i;}. constexpr int off2(int i, int j); { return j<i ? off0(i)+j : off0(j)+i; }. constexpr int off1(int i); { return off2(i/D, i%D);}. offset(unsigned int i, unsigned int j); if (j > i) std::swap(i, j);. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:23; Thi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__MatRepSym_double_3_.html:2154,Inherit,Inheritance,2154,root/html602/ROOT__Math__MatRepSym_double_3_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__MatRepSym_double_3_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tatic intoff(int i); static intoff0(int i); static intoff1(int i); static intoff2(int i, int j); static unsigned intoffset(unsigned int i, unsigned int j); double&operator()(unsigned int i, unsigned int j); const double&operator()(unsigned int i, unsigned int j) const; ROOT::Math::MatRepSym<double,3U>&operator+=(const ROOT::Math::MatRepSym<double,3>& rhs); ROOT::Math::MatRepSym<double,3U>&operator-=(const ROOT::Math::MatRepSym<double,3>& rhs); ROOT::Math::MatRepSym<double,3U>&operator=(const ROOT::Math::MatRepSym<double,3>& rhs); ROOT::Math::MatRepSym<double,3U>&operator=<ROOT::Math::MatRepSym<double, 3> >(const ROOT::Math::MatRepSym<double,3>&); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. static ROOT::Math::MatRepSym<double,3>::(anonymous)kCols; static ROOT::Math::MatRepSym<double,3>::(anonymous)kRows; static ROOT::Math::MatRepSym<double,3>::(anonymous)kSize. private:. doublefArray[6]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator+=(const ROOT::Math::MatRepSym<double,3>& rhs). MatRepStd<T, D1, D2>& operator-=(const ROOT::Math::MatRepSym<double,3>& rhs). MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepSym<double,3>& rhs). return fArray[ off(int i). constexpr int off0(int i); { return i==0 ? 0 : off0(i-1)+i;}. constexpr int off2(int i, int j); { return j<i ? off0(i)+j : off0(j)+i; }. constexpr int off1(int i); { return off2(i/D, i%D);}. offset(unsigned int i, unsigned int j); if (j > i) std::swap(i, j);. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:35; Thi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__MatRepSym_double_3_.html:2154,Inherit,Inheritance,2154,root/html604/ROOT__Math__MatRepSym_double_3_.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__MatRepSym_double_3_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tatic void IndentLevel()Functions used by ls() to indent an object hierarchy.Definition TROOT.cxx:2895; TROOT::DecreaseDirLevelstatic Int_t DecreaseDirLevel()Decrease the indentation level for ls().Definition TROOT.cxx:2746; TRegexpRegular expression class.Definition TRegexp.h:31; TStringBasic string class.Definition TString.h:139; TString::LengthSsiz_t Length() constDefinition TString.h:417; TString::CompareToint CompareTo(const char *cs, ECaseCompare cmp=kExact) constCompare a string to char *cs2.Definition TString.cxx:457; TString::Dataconst char * Data() constDefinition TString.h:376; TString::Streamervirtual void Streamer(TBuffer &)Stream a string object.Definition TString.cxx:1412; TString::IndexSsiz_t Index(const char *pat, Ssiz_t i=0, ECaseCompare cmp=kExact) constDefinition TString.h:651; TSystem::StackTracevirtual void StackTrace()Print a stack trace.Definition TSystem.cxx:734; TVirtualMutexThis class implements a mutex interface.Definition TVirtualMutex.h:32; bool; int; object; unsigned int; ROOT::Detail::HasBeenDeletedR__ALWAYS_INLINE bool HasBeenDeleted(const TObject *obj)Check if the TObject's memory has been deleted.Definition TObject.h:402; ROOT::Internal::ContaineeInheritsFrombool ContaineeInheritsFrom(TClass *cl, TClass *base)Return true if 'cl' inherits from 'base'.Definition TCollection.cxx:831; ROOT::Internal::EmptyCollectionconst TCollection & EmptyCollection()Return an empty collection for use with nullptr TRangeCast.Definition TCollection.cxx:822; ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; TMath::RangeShort_t Range(Short_t lb, Short_t ub, Short_t x)Returns x if lb < x < up, lb if x < lb and ub if x > ub.Definition TMathBase.h:302; v@ vDefinition rootcling_impl.cxx:3699. corecontsrcTCollection.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:09 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCollection_8cxx_source.html:40744,inherit,inherits,40744,doc/master/TCollection_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCollection_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"tatic void*MakeClassThreaded(void* info); voidTObject::MakeZombie(); voidSetLocalFiles() const. Data Members; public:. enum EConvertOutput { kNoOutput; kInterpretedOutput; kCompiledOutput; kForceOutput; kSeparateProcessOutput; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Bool_tfBatchWhether to enable GUI output; TStringfCountercounter string; TStringfCounterFormatcounter printf-like format; THtml::DocEntityInfo_tfDocEntityInfodata for documented entities; THtml::DocSyntax_tfDocSyntaxdoc syntax configuration; THtml::TFileDefinition*fFileDefobject translating classes to file names; TGClient*fGClientgClient, cached and queried through CINT; THtml::LinkInfo_tfLinkInfolink (URL) configuration; THtml::TFileSysDB*fLocalFilesfiles found locally for a given source path; TVirtualMutex*fMakeClassMutexMutex for MakeClassThreaded; THtml::TModuleDefinition*fModuleDefobject translating classes to module names; THtml::OutputStyle_tfOutputStyleoutput style configuration; THtml::TPathDefinition*fPathDefobject translating classes to module names; THtml::PathInfo_tfPathInfopath configuration; TStringfProductNamename of the product to document; Int_tfThreadedClassCountcounter of processed classes for MakeClassThreaded; TIter*fThreadedClassIterfClasses iterator for MakeClassThreaded. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THtml(); Create a THtml object.; In case output directory does not exist an error; will be printed and gHtml stays 0 also zombie bit will be set. ~THtml(); Default destructor. void AddMacroPath(const char* path); Add path to the directories to be searched for macro files; that are to be executed via the TDocMacroDirective; (""Begin_Macro""/""End_Macro""); relative to the source file; that the directive i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THtml.html:26694,config,configuration,26694,root/html528/THtml.html,https://root.cern,https://root.cern/root/html528/THtml.html,24,['config'],['configuration']
Modifiability,"tatic voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event*const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableDecorrTransformVariableDecorrTransform(TMVA::DataSetInfo& dsi); TMVA::VariableDecorrTransformVariableDecorrTransform(const TMVA::VariableDecorrTransform&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; TMVA::VariableTransformBaseTMVA::VariableTransformBase::VariableTransformBase(const TMVA::VariableTransformBase&); TMVA::VariableTransformBaseTMVA::VariableTransformBase::VariableTransformBase(TMVA::DataSetInfo& dsi, TMVA::Types::EVariableTransform tf, const TString& trfName); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableDecorrTransform.html:6300,Variab,VariableInfo,6300,root/html602/TMVA__VariableDecorrTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableDecorrTransform.html,2,['Variab'],['VariableInfo']
Modifiability,"tatic voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event*const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableGaussTransformVariableGaussTransform(const TMVA::VariableGaussTransform&); TMVA::VariableGaussTransformVariableGaussTransform(TMVA::DataSetInfo& dsi, TString strcor = """"); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; TMVA::VariableTransformBaseTMVA::VariableTransformBase::VariableTransformBase(const TMVA::VariableTransformBase&); TMVA::VariableTransformBaseTMVA::VariableTransformBase::VariableTransformBase(TMVA::DataSetInfo& dsi, TMVA::Types::EVariableTransform tf, const TString& trfName); virtual voidTObject::Warning(const char* method, const char* msgfmt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableGaussTransform.html:6367,Variab,VariableInfo,6367,root/html602/TMVA__VariableGaussTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableGaussTransform.html,2,['Variab'],['VariableInfo']
Modifiability,"tatic voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event*const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableIdentityTransformVariableIdentityTransform(TMVA::DataSetInfo& dsi); TMVA::VariableIdentityTransformVariableIdentityTransform(const TMVA::VariableIdentityTransform&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; TMVA::VariableTransformBaseTMVA::VariableTransformBase::VariableTransformBase(const TMVA::VariableTransformBase&); TMVA::VariableTransformBaseTMVA::VariableTransformBase::VariableTransformBase(TMVA::DataSetInfo& dsi, TMVA::Types::EVariableTransform tf, const TString& trfName); virtual voidTObject::Warning(const char* method, const char* msgfmt) cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableIdentityTransform.html:6371,Variab,VariableInfo,6371,root/html602/TMVA__VariableIdentityTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableIdentityTransform.html,2,['Variab'],['VariableInfo']
Modifiability,"tatic voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event*const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableNormalizeTransformVariableNormalizeTransform(TMVA::DataSetInfo& dsi); TMVA::VariableNormalizeTransformVariableNormalizeTransform(const TMVA::VariableNormalizeTransform&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; TMVA::VariableTransformBaseTMVA::VariableTransformBase::VariableTransformBase(const TMVA::VariableTransformBase&); TMVA::VariableTransformBaseTMVA::VariableTransformBase::VariableTransformBase(TMVA::DataSetInfo& dsi, TMVA::Types::EVariableTransform tf, const TString& trfName); virtual voidTObject::Warning(const char* method, const char* msgfmt)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableNormalizeTransform.html:6393,Variab,VariableInfo,6393,root/html602/TMVA__VariableNormalizeTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableNormalizeTransform.html,2,['Variab'],['VariableInfo']
Modifiability,"tatic voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event*const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariablePCATransformVariablePCATransform(TMVA::DataSetInfo& dsi); TMVA::VariablePCATransformVariablePCATransform(const TMVA::VariablePCATransform&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; TMVA::VariableTransformBaseTMVA::VariableTransformBase::VariableTransformBase(const TMVA::VariableTransformBase&); TMVA::VariableTransformBaseTMVA::VariableTransformBase::VariableTransformBase(TMVA::DataSetInfo& dsi, TMVA::Types::EVariableTransform tf, const TString& trfName); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariablePCATransform.html:6338,Variab,VariableInfo,6338,root/html602/TMVA__VariablePCATransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariablePCATransform.html,2,['Variab'],['VariableInfo']
Modifiability,"tatic voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event*const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableRearrangeTransformVariableRearrangeTransform(TMVA::DataSetInfo& dsi); TMVA::VariableRearrangeTransformVariableRearrangeTransform(const TMVA::VariableRearrangeTransform&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; TMVA::VariableTransformBaseTMVA::VariableTransformBase::VariableTransformBase(const TMVA::VariableTransformBase&); TMVA::VariableTransformBaseTMVA::VariableTransformBase::VariableTransformBase(TMVA::DataSetInfo& dsi, TMVA::Types::EVariableTransform tf, const TString& trfName); virtual voidTObject::Warning(const char* method, const char* msgfmt)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableRearrangeTransform.html:6318,Variab,VariableInfo,6318,root/html602/TMVA__VariableRearrangeTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableRearrangeTransform.html,2,['Variab'],['VariableInfo']
Modifiability,"tatic void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void InitTrigonometry ();  ;  Protected Member Functions inherited from TGeoCone;  TGeoCone (const TGeoCone &)=delete;  ; TGeoCone & operator= (const TGeoCone &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fC1;  ; Double_t fC2;  ; Double_t fCdfi;  ; Double_t fCm;  ; Double_t fPhi1;  ; Double_t fPhi2;  ; Double_t fS1;  ; Double_t fS2;  ; Double_t fSm;  ;  Protected Attributes inherited from TGeoCone; Double_t fDz;  ; Double_t fRmax1;  ; Double_t fRmax2;  ; Double_t fRmin1;  ; Double_t fRmin2;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL <<",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoConeSeg.html:22601,inherit,inherited,22601,doc/master/classTGeoConeSeg.html,https://root.cern,https://root.cern/doc/master/classTGeoConeSeg.html,1,['inherit'],['inherited']
Modifiability,"tatic void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void InitTrigonometry ();  ;  Protected Member Functions inherited from TGeoTube;  TGeoTube (const TGeoTube &)=delete;  ; TGeoTube & operator= (const TGeoTube &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fC1;  ; Double_t fC2;  ; Double_t fCdfi;  ; Double_t fCm;  ; Double_t fPhi1;  ; Double_t fPhi2;  ; Double_t fS1;  ; Double_t fS2;  ; Double_t fSm;  ;  Protected Attributes inherited from TGeoTube; Double_t fDz;  ; Double_t fRmax;  ; Double_t fRmin;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTubeSeg.html:21711,inherit,inherited,21711,doc/master/classTGeoTubeSeg.html,https://root.cern,https://root.cern/doc/master/classTGeoTubeSeg.html,1,['inherit'],['inherited']
Modifiability,"tatic void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; DataMemberInfo_t * fInfo;  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZom",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGlobal.html:13050,inherit,inherited,13050,doc/master/classTGlobal.html,https://root.cern,https://root.cern/doc/master/classTGlobal.html,1,['inherit'],['inherited']
Modifiability,"tatic_file_request(conn, path, &file, NULL, NULL);; 14568 ; 14569#endif /* !defined(NO_FILES) */; 14570}; 14571 ; 14572 ; 14573#if !defined(NO_FILESYSTEMS); 14574static void; 14575handle_file_based_request(struct mg_connection *conn,; 14576 const char *path,; 14577 struct mg_file *file); 14578{; 14579#if !defined(NO_CGI); 14580 unsigned char cgi_config_idx, inc, max;; 14581#endif; 14582 ; 14583 if (!conn || !conn->dom_ctx) {; 14584 return;; 14585 }; 14586 ; 14587#if defined(USE_LUA); 14588 if (match_prefix_strlen(conn->dom_ctx->config[LUA_SERVER_PAGE_EXTENSIONS],; 14589 path); 14590 > 0) {; 14591 if (is_in_script_path(conn, path)) {; 14592 /* Lua server page: an SSI like page containing mostly plain; 14593 * html code plus some tags with server generated contents. */; 14594 handle_lsp_request(conn, path, file, NULL);; 14595 } else {; 14596 /* Script was in an illegal path */; 14597 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14598 }; 14599 return;; 14600 }; 14601 ; 14602 if (match_prefix_strlen(conn->dom_ctx->config[LUA_SCRIPT_EXTENSIONS], path); 14603 > 0) {; 14604 if (is_in_script_path(conn, path)) {; 14605 /* Lua in-server module script: a CGI like script used to; 14606 * generate the entire reply. */; 14607 mg_exec_lua_script(conn, path, NULL);; 14608 } else {; 14609 /* Script was in an illegal path */; 14610 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14611 }; 14612 return;; 14613 }; 14614#endif; 14615 ; 14616#if defined(USE_DUKTAPE); 14617 if (match_prefix_strlen(conn->dom_ctx->config[DUKTAPE_SCRIPT_EXTENSIONS],; 14618 path); 14619 > 0) {; 14620 if (is_in_script_path(conn, path)) {; 14621 /* Call duktape to generate the page */; 14622 mg_exec_duktape_script(conn, path);; 14623 } else {; 14624 /* Script was in an illegal path */; 14625 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14626 }; 14627 return;; 14628 }; 14629#endif; 14630 ; 14631#if !defined(NO_CGI); 14632 inc = CGI2_EXTENSIONS - CGI_EXTENSIONS;; 14633 max = PUT_DELETE_PASSWORDS_FILE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:430291,config,config,430291,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"tatic_file_request(conn, path, &file, NULL, NULL);; 14569 ; 14570#endif /* !defined(NO_FILES) */; 14571}; 14572 ; 14573 ; 14574#if !defined(NO_FILESYSTEMS); 14575static void; 14576handle_file_based_request(struct mg_connection *conn,; 14577 const char *path,; 14578 struct mg_file *file); 14579{; 14580#if !defined(NO_CGI); 14581 unsigned char cgi_config_idx, inc, max;; 14582#endif; 14583 ; 14584 if (!conn || !conn->dom_ctx) {; 14585 return;; 14586 }; 14587 ; 14588#if defined(USE_LUA); 14589 if (match_prefix_strlen(conn->dom_ctx->config[LUA_SERVER_PAGE_EXTENSIONS],; 14590 path); 14591 > 0) {; 14592 if (is_in_script_path(conn, path)) {; 14593 /* Lua server page: an SSI like page containing mostly plain; 14594 * html code plus some tags with server generated contents. */; 14595 handle_lsp_request(conn, path, file, NULL);; 14596 } else {; 14597 /* Script was in an illegal path */; 14598 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14599 }; 14600 return;; 14601 }; 14602 ; 14603 if (match_prefix_strlen(conn->dom_ctx->config[LUA_SCRIPT_EXTENSIONS], path); 14604 > 0) {; 14605 if (is_in_script_path(conn, path)) {; 14606 /* Lua in-server module script: a CGI like script used to; 14607 * generate the entire reply. */; 14608 mg_exec_lua_script(conn, path, NULL);; 14609 } else {; 14610 /* Script was in an illegal path */; 14611 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14612 }; 14613 return;; 14614 }; 14615#endif; 14616 ; 14617#if defined(USE_DUKTAPE); 14618 if (match_prefix_strlen(conn->dom_ctx->config[DUKTAPE_SCRIPT_EXTENSIONS],; 14619 path); 14620 > 0) {; 14621 if (is_in_script_path(conn, path)) {; 14622 /* Call duktape to generate the page */; 14623 mg_exec_duktape_script(conn, path);; 14624 } else {; 14625 /* Script was in an illegal path */; 14626 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14627 }; 14628 return;; 14629 }; 14630#endif; 14631 ; 14632#if !defined(NO_CGI); 14633 inc = CGI2_EXTENSIONS - CGI_EXTENSIONS;; 14634 max = PUT_DELETE_PASSWORDS_FILE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:430324,config,config,430324,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"tation every instrumented class in file gets its unique namespace, which is equal to name of class and refer to root documentation page. ;  ; void SetXmlLayout (EXMLLayout layout) final;  Change layout of objects in xml file Can be changed only for newly created file. ;  ; Int_t Sizeof () const final;  Return the size in bytes of the file header. ;  ; void Streamer (TBuffer &) override;  Stream a TFile object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Write (const char *=nullptr, Int_t=0, Int_t=0) const final;  One can not save a const TDirectory object. ;  ; Int_t Write (const char *=nullptr, Int_t=0, Int_t=0) final;  Write memory objects to this file. ;  ; Bool_t WriteBuffer (const char *, Int_t) final;  Write a buffer to the file. ;  ; void WriteFree () final;  Write FREE linked list on the file. ;  ; void WriteHeader () final;  Write File Header. ;  ; void WriteStreamerInfo () final;  convert all TStreamerInfo, used in file, to xml format ;  ; TXMLEngine * XML ();  ;  Public Member Functions inherited from TFile;  TFile ();  File default Constructor. ;  ;  TFile (const char *fname, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Opens or creates a local ROOT file. ;  ;  ~TFile () override;  File destructor. ;  ; void Copy (TObject &) const override;  Copy this to obj. ;  ; virtual Bool_t Cp (const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy this file to the dst URL. ;  ; void Delete (const char *namecycle="""") override;  Delete object namecycle. ;  ; void Draw (Option_t *option="""") override;  Fill Graphics Structure and Paint. ;  ; TArchiveFile * GetArchive () const;  ; Long64_t GetArchiveOffset () const;  ; Int_t GetBestBuffer () const;  Return the best buffer size of objects on this file. ;  ; virtual Long64_t GetBytesRead () const;  ; virtual Long64_t GetBytesReadExtra () const;  ; virtual Int_t GetBytesToPrefetch () co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLFile.html:5888,inherit,inherited,5888,doc/master/classTXMLFile.html,https://root.cern,https://root.cern/doc/master/classTXMLFile.html,1,['inherit'],['inherited']
Modifiability,"tation names and the TGeoRotation for it. ;  ; SolMap fsolmap;  Map containing mixture names and the TGeoMixture for it. ;  ; VolMap fvolmap;  Map containing solid names and the TGeoShape for it. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGDMLParse.h>. Inheritance diagram for TGDMLParse:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ ConstMap. typedef std::map<std::string, double> TGDMLParse::ConstMap. private . Definition at line 206 of file TGDMLParse.h. ◆ EleMap. typedef TGDMMapHelper<TGeoElement> TGDMLParse::EleMap. private . Definition at line 191 of file TGDMLParse.h. ◆ FileMap. typedef TGDMMapHelper<const char> TGDMLParse::FileMap. private . Definition at line 202 of file TGDMLParse.h. ◆ FracMap. typedef std::map<std::string, double> TGDMLParse::FracMap. private . Definition at line 205 of file TGDMLParse.h. ◆ IsoMap. typedef TGDMMapHelper<TGeoIsotope> TGDMLParse::IsoMap. private . Definition at line 192 of file TGDMLParse.h. ◆ MatMap. typedef TGDMMapHelper<",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDMLParse.html:22439,inherit,inherited,22439,doc/master/classTGDMLParse.html,https://root.cern,https://root.cern/doc/master/classTGDMLParse.html,2,['inherit'],['inherited']
Modifiability,"tation shows aggregation not inheritance. TMethodCall (method call environment); TMethodCallMethod or function calling interface.Definition TMethodCall.h:37; . Definition at line 168 of file TDictionary.h. Public Types; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TClass * IsA () const override;  ; TDictionary & operator= (const TDictionary &other);  ; virtual Long_t Property () const =0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void Streame",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDictionary.html:2469,inherit,inherited,2469,doc/master/classTDictionary.html,https://root.cern,https://root.cern/doc/master/classTDictionary.html,1,['inherit'],['inherited']
Modifiability,"tation, with automatically generated LaTeX-like graphics. Inheritance tree, showing what the current class derives from, and which classes inherit from it. HTML version of the source file linking all types and most functions. 2 Getting Started; We begin by showing you how to use ROOT interactively. There are two examples to click through and learn how to use the GUI. We continue by using the command line, and explaining the coding conventions, global variables and the environment setup. If you have not installed ROOT, you can do so by following the instructions in the appendix, or on the ROOT web site: http://root.cern.ch/root/Availability.html; 2.1 Setting the Environment Variables; Before you can run ROOT you need to set the environment variable ROOTSYS and change your path to include root/bin and library path variables to include root/lib. Please note: the syntax is for bash, if you are running tcsh you will have to use setenv instead of export. Define the variable $ROOTSYS to the directory where you unpacked the ROOT:. $ export ROOTSYS=$HOME/root. Add ROOTSYS/bin to your PATH:. $ export PATH=$PATH:$ROOTSYS/bin. Setting the Library Path. On HP-UX, before executing the interactive module, you must set the library path:; $ export SHLIB_PATH=$SHLIB_PATH:$ROOTSYS/lib; On AIX, before executing the interactive module, you must set the library path:; $ [ -z ""$LIBPATH"" ] && export LIBPATH=/lib:/usr/lib; $ export LIBPATH=$LIBPATH:$ROOTSYS/lib; On Linux, Solaris, Alpha OSF and SGI, before executing the interactive module, you must set the library path:; $ export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ROOTSYS/lib; On Solaris, in case your LD_LIBRARY_PATH is empty, you should set it:; $ export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ROOTSYS/lib:/usr/dt/lib; If you use the afs version you should set (vers = version number, arch = architecture):; $ export ROOTSYS=/afs/cern.ch/sw/lcg/external/root/vers/arch/root; If ROOT was installed in $HOME/myroot directory on a local machine, one can ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:30826,variab,variable,30826,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variable']
Modifiability,"tation; VariableNormalizeTransform( DataSetInfo& dsi ); constructor. ~VariableNormalizeTransform(). void Initialize(); initialization of the normalization transformation. Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); prepare transformation. const TMVA::Event* Transform(const TMVA::Event *const , Int_t cls) const. const TMVA::Event* InverseTransform(const TMVA::Event *const , Int_t cls) const; apply the inverse transformation. void CalcNormalizationParams(const vector<TMVA::Event*,allocator<TMVA::Event*> >& events); compute offset and scale from min and max. std::vector<TString>* GetTransformationStrings(Int_t cls) const; creates string with variable transformations applied. void WriteTransformationToStream(ostream& ) const; write the decorrelation matrix to the stream. void AttachXMLTo(void* parent); create XML description of Normalize transformation. void ReadFromXML(void* trfnode); Read the transformation matrices from the xml node. void BuildTransformationFromVarInfo(const vector<TMVA::VariableInfo>& var); this method is only used when building a normalization transformation; from old text files; in this case regression didn't exist and there were no targets. void ReadTransformationFromStream(istream& , const TString& ); Read the variable ranges from an input stream. void PrintTransformation(ostream& o); prints the transformation ranges. void MakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); creates a normalizing function; TODO include target-transformation into makefunction. VariableNormalizeTransform( DataSetInfo& dsi ). » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id: VariableNormalizeTransform.h 39395 2011-05-26 10:05:54Z moneta $ » Last generated: 2011-07-04 15:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__VariableNormalizeTransform.html:10812,variab,variable,10812,root/html530/TMVA__VariableNormalizeTransform.html,https://root.cern,https://root.cern/root/html530/TMVA__VariableNormalizeTransform.html,1,['variab'],['variable']
Modifiability,"tationViolation, kSigIllegalInstruction and kSigFloatingException) trapped in TSystem. ;  ; Bool_t HandleTermInput () override;  Handle input coming from terminal. ;  ; void Interrupt ();  ; TClass * IsA () const override;  ; virtual void PrintLogo (Bool_t lite=kFALSE);  Print the ROOT logo on standard output. ;  ; void Run (Bool_t retrn=kFALSE) override;  Main application eventloop. ;  ; void SetEchoMode (Bool_t mode) override;  Set console mode: ;  ; virtual const char * SetPrompt (const char *newPrompt);  Set a new default prompt. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t TabCompletionHook (char *buf, int *pLoc, std::ostream &out) override;  Forward tab completion request to our TTabCom::Hook(). ;  ; virtual void Terminate (int status) override;  Terminate the application. ;  ;  Public Member Functions inherited from TApplication;  TApplication (const char *appClassName, Int_t *argc, char **argv, void *options=nullptr, Int_t numOptions=0);  Create an application environment. ;  ; virtual ~TApplication ();  TApplication dtor. ;  ; virtual const char * ApplicationName () const;  ; Int_t Argc () const;  ; char ** Argv () const;  ; char * Argv (Int_t index) const;  Return specified argument. ;  ; void ClearInputFiles ();  Clear list containing macro files passed as program arguments. ;  ; EExitOnException ExitOnException (EExitOnException opt=kExit);  Set the exit on exception option. ;  ; virtual TApplicationImp * GetApplicationImp ();  ; TApplication * GetAppRemote () const;  ; const char * GetIdleCommand () const;  ; virtual void GetOptions (Int_t *argc, char **argv);  Get and handle command line options. ;  ; TString GetSetup ();  It gets the ROOT installation setup as TString. ;  ; TSignalHandler * GetSignalHandler () const;  ; virtual void HandleIdleTimer ();  Handle idle timeout. ;  ; virtual void Hide ();  ; virtual void Iconify ();  ; virtual void I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRint.html:1740,inherit,inherited,1740,doc/master/classTRint.html,https://root.cern,https://root.cern/doc/master/classTRint.html,1,['inherit'],['inherited']
Modifiability,"tations. ;  ; virtual void setVal (double value)=0;  Set the current value of the object. Needs to be overridden by implementations. ;  ; virtual void setVal (double value, const char *);  Set the current value of the object. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void writeToStream (std::ostream &os, bool compact) const override;  Write value to stream. ;  ;  Public Member Functions inherited from RooAbsRealLValue;  RooAbsRealLValue ();  ;  RooAbsRealLValue (const char *name, const char *title, const char *unit="""");  Constructor. ;  ;  RooAbsRealLValue (const RooAbsRealLValue &other, const char *name=nullptr);  Copy constructor. ;  ; TH1F * createHistogram (const char *name, const char *yAxisLabel) const;  Create an empty 1D-histogram with appropriate scale and labels for this variable. ;  ; TH1F * createHistogram (const char *name, const char *yAxisLabel, const RooAbsBinning &bins) const;  Create an empty 1D-histogram with appropriate scale and labels for this variable. ;  ; TH1F * createHistogram (const char *name, const char *yAxisLabel, double xlo, double xhi, Int_t nBins) const;  Create an empty 1D-histogram with appropriate scale and labels for this variable. ;  ; TH2F * createHistogram (const char *name, const RooAbsRealLValue &yvar, const char *zAxisLabel, const RooAbsBinning **bins) const;  Create an empty 2D-histogram with appropriate scale and labels for this variable (x) and the specified y variable. ;  ; TH2F * createHistogram (const char *name, const RooAbsRealLValue &yvar, const char *zAxisLabel=nullptr, double *xlo=nullptr, double *xhi=nullptr, Int_t *nBins=nullptr) const;  Create an empty 2D-histogram with appropriate scale and labels for this variable (x) and the specified y variable. ;  ; TH3F * createHistogram (const char *name, const RooAbsRealLValue &yvar, const RooAbsRealLValue &zvar, const char *tAxisLabel, const RooAbsBinning **bins) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooErrorVar.html:4863,variab,variable,4863,doc/master/classRooErrorVar.html,https://root.cern,https://root.cern/doc/master/classRooErrorVar.html,1,['variab'],['variable']
Modifiability,"tatistic. TestStatistic is an interface class to provide a facility for construction test statistics; distributions to the NeymanConstruction class. All the actual samplers inherit from this class. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TestStatistic(); static TClass*Class(); virtual Double_tEvaluate(RooAbsData& data, RooArgSet& nullPOI); virtual const RooArgSet*GetDetailedOutput() const; virtual const TStringGetVarName() const; virtual TClass*IsA() const; RooStats::TestStatistic&operator=(const RooStats::TestStatistic&); virtual boolPValueIsRightTail() const; virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); RooStats::TestStatisticTestStatistic(); RooStats::TestStatisticTestStatistic(const RooStats::TestStatistic&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~TestStatistic(); TestStatistic();. Double_t Evaluate(RooAbsData& data, RooArgSet& nullPOI); Main interface to evaluate the test statistic on a dataset given the; values for the Null Parameters Of Interest. const TString GetVarName() const. bool PValueIsRightTail(void); Defines the sign convention of the test statistic. Overwrite function if necessary. { return true; }. const RooArgSet* GetDetailedOutput() const; return detailed output: for fits this can be pulls, processing time, ... The returned pointer will not loose validity until another call to Evaluate. { return NULL; }. » Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-06-30 14:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT suppor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__TestStatistic.html:1261,Inherit,Inheritance,1261,root/html602/RooStats__TestStatistic.html,https://root.cern,https://root.cern/root/html602/RooStats__TestStatistic.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tatistic. TestStatistic is an interface class to provide a facility for construction test statistics; distributions to the NeymanConstruction class. All the actual samplers inherit from this class. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TestStatistic(); static TClass*Class(); virtual Double_tEvaluate(RooAbsData& data, RooArgSet& nullPOI); virtual const RooArgSet*GetDetailedOutput() const; virtual const TStringGetVarName() const; virtual TClass*IsA() const; RooStats::TestStatistic&operator=(const RooStats::TestStatistic&); virtual boolPValueIsRightTail() const; virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); RooStats::TestStatisticTestStatistic(); RooStats::TestStatisticTestStatistic(const RooStats::TestStatistic&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~TestStatistic(); TestStatistic();. Double_t Evaluate(RooAbsData& data, RooArgSet& nullPOI); Main interface to evaluate the test statistic on a dataset given the; values for the Null Parameters Of Interest. const TString GetVarName() const. bool PValueIsRightTail(void); Defines the sign convention of the test statistic. Overwrite function if necessary. { return true; }. const RooArgSet* GetDetailedOutput() const; return detailed output: for fits this can be pulls, processing time, ... The returned pointer will not loose validity until another call to Evaluate. { return NULL; }. » Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-09-08 17:42; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT suppor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooStats__TestStatistic.html:1261,Inherit,Inheritance,1261,root/html604/RooStats__TestStatistic.html,https://root.cern,https://root.cern/root/html604/RooStats__TestStatistic.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tatistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH1(); Histogram default constructor. ~TH1(); Histogram default destructor. TH1(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup); Normal constructor for fix bin size histograms. Creates the main histogram structure:; name : name of histogram (avoid blanks); title : histogram title; if title is of the form ""stringt;stringx;stringy;stringz""; the histogram title is set to stringt,; the x axis title to stringy, the y axis title to stringy, etc.; nbins : number of bins; xlow : low edge of first bin; xup : upper edge of last bin (not included in last bin). When an histogram is created, it is automatically added to the list; of special objects in the current directory.; To find the pointer to this histogram in the current directory; by its name, do:; TH1F *h1 = (TH1F*)gDirectory->FindObject(name);. TH1(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins); Normal constructor for variable bin size histograms. Creates the main histogram structure:; name : name of histogram (avoid blanks); title : histogram title; if title is of the form ""stringt;stringx;stringy;stringz""; the histogram title is set to stringt,; the x axis title to stringx, the y axis title to stringy, etc.; nbins : number of bins; xbins : array of low-edges for each bin; This is an array of size nbins+1. TH1(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins); Normal constructor for variable bin size histograms. Creates the main histogram structure:; name : name of histogram (avoid blanks); title : histogram title; if title is of the form ""stringt;stringx;stringy;stringz""; the histogram title is set to stringt,; the x axis title to stringx, the y axis title to stringy, etc.; nbins : number of bins; xbins : array of low-edges for each bin; This is an array of size nbins+1. TH1(const TH1& ); Copy constructor.; The list of functions is not co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1.html:40852,variab,variable,40852,root/html602/TH1.html,https://root.cern,https://root.cern/root/html602/TH1.html,4,['variab'],['variable']
Modifiability,"tats. ; Class implementing a proposal function that samples the parameter space by moving only in one coordinate (chosen randomly) at each step. ; Definition at line 20 of file SequentialProposal.h. Public Member Functions;  SequentialProposal ();  ;  SequentialProposal (double divisor);  ; double GetProposalDensity (RooArgSet &x1, RooArgSet &x2) override;  Return the probability of proposing the point x1 given the starting point x2. ;  ; TClass * IsA () const override;  ; bool IsSymmetric (RooArgSet &x1, RooArgSet &x2) override;  Determine whether or not the proposal density is symmetric for points x1 and x2 - that is, whether the probability of reaching x2 from x1 is equal to the probability of reaching x1 from x2. ;  ; void Propose (RooArgSet &xPrime, RooArgSet &x) override;  Populate xPrime with a new proposed point. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooStats::ProposalFunction;  ProposalFunction ();  Default constructor. ;  ; virtual bool CheckParameters (RooArgSet &params);  Check the parameters for which the ProposalFunction will propose values to make sure they are all RooRealVars Return true if all objects are RooRealVars, false otherwise. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1SequentialProposal.html:1325,inherit,inherited,1325,doc/master/classRooStats_1_1SequentialProposal.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1SequentialProposal.html,1,['inherit'],['inherited']
Modifiability,"tats::HypoTestInverter::ECalculatorType type = kFrequentist, double size = 0.050000000000000003); RooStats::IntervalCalculatorRooStats::IntervalCalculator::IntervalCalculator(); RooStats::IntervalCalculatorRooStats::IntervalCalculator::IntervalCalculator(const RooStats::IntervalCalculator&); virtual TClass*IsA() const; RooStats::SamplingDistribution*RebuildDistributions(bool isUpper = true, int nToys = 100, TList* clsDist = 0, TList* clsbDist = 0, TList* clbDist = 0, const char* outputfile = ""HypoTestInverterRebuiltDist.root""); boolRunFixedScan(int nBins, double xMin, double xMax, bool scanLog = false) const; boolRunLimit(double& limit, double& limitErr, double absTol = 0, double relTol = 0, const double* hint = 0) const; boolRunOnePoint(double thisX, bool adaptive = false, double clTarget = -1) const; voidSetAutoScan(); static voidSetCloseProof(Bool_t flag); virtual voidSetConfidenceLevel(Double_t cl); virtual voidSetData(RooAbsData&); voidSetFixedScan(int nBins, double xMin = 1, double xMax = -1, bool scanLog = false); voidSetMaximumToys(int ntoys); virtual voidSetModel(const RooStats::ModelConfig&); voidSetNumErr(double err); virtual voidSetTestSize(Double_t size); boolSetTestStatistic(RooStats::TestStatistic& stat); voidSetVerbose(int level = 1); virtual voidShowMembers(TMemberInspector& insp) const; virtual Double_tSize() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidUseCLs(bool on = true). protected:. static voidCheckInputModels(const RooStats::HypoTestCalculatorGeneric& hc, const RooRealVar& scanVar); voidCreateResults() const; RooStats::HypoTestResult*Eval(RooStats::HypoTestCalculatorGeneric& hc, bool adaptive, double clsTarget) const; static RooRealVar*GetVariableToScan(const RooStats::HypoTestCalculatorGeneric& hc); RooStats::HypoTestInverterHypoTestInverter(const RooStats::HypoTestInverter& rhs); RooStats::HypoTestInverter&operator=(const RooStats::HypoTestInverter& rhs). Data Members; public:. stati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HypoTestInverter.html:3588,adapt,adaptive,3588,root/html602/RooStats__HypoTestInverter.html,https://root.cern,https://root.cern/root/html602/RooStats__HypoTestInverter.html,4,['adapt'],['adaptive']
Modifiability,"tats::HypoTestInverter::ECalculatorTypefCalcType; RooStats::HypoTestCalculatorGeneric*fCalculator0pointer to the calculator passed in the constructor; unique_ptr<RooStats::HypoTestCalculatorGeneric>fHC! pointer to the generic hypotest calculator used; unique_ptr<TGraphErrors>fLimitPlot! plot of limits; intfMaxToysmaximum number of toys to run; intfNBins; doublefNumErr; RooStats::HypoTestInverterResult*fResultspointer to the result; boolfScanLog; RooRealVar*fScannedVariablepointer to the constrained variable; doublefSize; intfTotalToysRun; boolfUseCLs; intfVerbose; doublefXmax; doublefXmin; static doublefgAbsAccuracy; static stringfgAlgo; static doublefgCLAccuracy; static boolfgCloseProof; static unsigned intfgNToys; static doublefgRelAccuracy. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetCloseProof(Bool_t flag); set flag to close proof for every new run. RooRealVar * GetVariableToScan(const RooStats::HypoTestCalculatorGeneric& hc); get the variable to scan; try first with null model if not go to alternate model. void CheckInputModels(const RooStats::HypoTestCalculatorGeneric& hc, const RooRealVar& scanVar); check the model given the given hypotestcalculator. HypoTestInverter(); default constructor (doesn't do anything). HypoTestInverter( HypoTestCalculatorGeneric& hc, RooRealVar* scannedVariable, double size ); Constructor from a HypoTestCalculatorGeneric; The HypoTest calculator must be a FrequentistCalculator or HybridCalculator type; Other type of calculators are not supported.; The calculator must be created before by using the S+B model for the null and; the B model for the alt; If no variable to scan are given they are assumed to be the first variable; from the parameter of interests of the null model. HypoTestInverter( HybridCalculator& hc, RooRealVar* scannedVariable, double size ); Constructor from a reference to a HybridCalculator; The calculator must be created before by using the S+B model for the null",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HypoTestInverter.html:6087,variab,variable,6087,root/html602/RooStats__HypoTestInverter.html,https://root.cern,https://root.cern/root/html602/RooStats__HypoTestInverter.html,4,['variab'],['variable']
Modifiability,"tats::IntervalCalculator; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void SetBins (const RooAbsCollection &coll, Int_t numBins) const;  ; void SetupBasicUsage ();  Constructor for automatic configuration with basic settings. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooArgList * fAxes;  which variables to put on each axis ;  ; RooArgSet fChainParams;  parameters to store in the chain (if not specified they are all of them ) ;  ; RooArgSet fConditionalObs;  conditional observables ;  ; RooAbsData * fData;  pointer to the data (owned by the workspace) ;  ; double fDelta = -1;  acceptable error for Keys cutoffs being equal topCutoff (a) considered == bottomCutoff (b) iff (std::abs(a - b) < std::abs(fDelta * (a + b)/2)); Theoretically, the Abs is not needed here, but floating-point arithmetic does not always work perfectly, and the Abs doesn't hurt ;  ; double fEpsilon = -1;  acceptable error for Keys interval determination ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1MCMCCalculator.html:14920,config,configuration,14920,doc/master/classRooStats_1_1MCMCCalculator.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1MCMCCalculator.html,1,['config'],['configuration']
Modifiability,tats::ProposalHelper::fOwnsPdf = false. protected . whether we created (and own) the main pdf ; Definition at line 116 of file ProposalHelper.h. ◆ fOwnsPdfProp. bool RooStats::ProposalHelper::fOwnsPdfProp = true. protected . whether we own the PdfProposal; equivalent to: !(whether we have returned it in GetProposalFunction) ; Definition at line 114 of file ProposalHelper.h. ◆ fOwnsVars. bool RooStats::ProposalHelper::fOwnsVars = false. protected . whether we own fVars ; Definition at line 118 of file ProposalHelper.h. ◆ fPdf. RooAbsPdf* RooStats::ProposalHelper::fPdf = nullptr. protected . the main proposal density function ; Definition at line 103 of file ProposalHelper.h. ◆ fPdfProp. PdfProposal* RooStats::ProposalHelper::fPdfProp = nullptr. protected . the PdfProposal we are (probably) going to return ; Definition at line 108 of file ProposalHelper.h. ◆ fSigmaRangeDivisor. double RooStats::ProposalHelper::fSigmaRangeDivisor. protected . range divisor to get sigma for each variable ; Definition at line 111 of file ProposalHelper.h. ◆ fUniformPdf. RooAbsPdf* RooStats::ProposalHelper::fUniformPdf = nullptr. protected . uniform proposal dens. func. ; Definition at line 105 of file ProposalHelper.h. ◆ fUniFrac. double RooStats::ProposalHelper::fUniFrac = -1. protected . what fraction of the PDF integral is uniform ; Definition at line 112 of file ProposalHelper.h. ◆ fUseUpdates. bool RooStats::ProposalHelper::fUseUpdates = false. protected . whether to set updates for proposal params in PdfProposal ; Definition at line 119 of file ProposalHelper.h. ◆ fVars. RooArgList* RooStats::ProposalHelper::fVars = nullptr. protected . the RooRealVars to generate proposals for ; Definition at line 109 of file ProposalHelper.h. Libraries for RooStats::ProposalHelper:. [legend]; The documentation for this class was generated from the following files:; roofit/roostats/inc/RooStats/ProposalHelper.h; roofit/roostats/src/ProposalHelper.cxx. RooStatsProposalHelper. ROOT master - Referenc,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1ProposalHelper.html:20188,variab,variable,20188,doc/master/classRooStats_1_1ProposalHelper.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1ProposalHelper.html,1,['variab'],['variable']
Modifiability,"tatus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <RooStats/ProposalFunction.h>. Inheritance diagram for RooStats::ProposalFunction:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ProposalFunction(). RooStats::ProposalFunction::ProposalFunction ; (; ). inline . Default constructor. ; Definition at line 45 of file ProposalFunction.h. Member Function Documentation. ◆ CheckParameters(). virtual bool RooStats::ProposalFunction::CheckParameters ; (; RooArgSet & ; params). inlinevirtual . Check the parameters for which the ProposalFunction will propose values to make sure they are all RooRealVars Return true if all objects are RooRealVars, false otherwise. ; Definition at line 63 of file ProposalFunction.h. ◆ Class(). static TClass * RooStats::ProposalFunction::Class ; (; ). st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1ProposalFunction.html:10894,inherit,inherited,10894,doc/master/classRooStats_1_1ProposalFunction.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1ProposalFunction.html,2,['inherit'],['inherited']
Modifiability,"tatus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <RooStats/UniformProposal.h>. Inheritance diagram for RooStats::UniformProposal:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ UniformProposal(). RooStats::UniformProposal::UniformProposal ; (; ). default . Member Function Documentation. ◆ Class(). static TClass * RooStats::UniformProposal::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooStats::UniformProposal::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooStats::UniformProposal::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 42 of file UniformProposal.h. ◆ DeclFileName(). static const char * RooStats::UniformPropo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1UniformProposal.html:11099,inherit,inherited,11099,doc/master/classRooStats_1_1UniformProposal.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1UniformProposal.html,2,['inherit'],['inherited']
Modifiability,"tatus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TConditionImp.h>. Inheritance diagram for TConditionImp:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TConditionImp(). TConditionImp::TConditionImp ; (; ). inline . Definition at line 29 of file TConditionImp.h. ◆ ~TConditionImp(). virtual TConditionImp::~TConditionImp ; (; ). inlinevirtual . Definition at line 30 of file TConditionImp.h. Member Function Documentation. ◆ Broadcast(). virtual Int_t TConditionImp::Broadcast ; (; ). pure virtual . Implemented in TPosixCondition, and TWin32Condition. ◆ Class(). static TClass * TConditionImp::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TConditionImp::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTConditionImp.html:9666,inherit,inherited,9666,doc/master/classTConditionImp.html,https://root.cern,https://root.cern/doc/master/classTConditionImp.html,2,['inherit'],['inherited']
Modifiability,"tatus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TF1AbsComposition.h>. Inheritance diagram for TF1AbsComposition:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~TF1AbsComposition(). TF1AbsComposition::~TF1AbsComposition ; (; ). inlineoverride . Definition at line 19 of file TF1AbsComposition.h. Member Function Documentation. ◆ Class(). static TClass * TF1AbsComposition::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TF1AbsComposition::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TF1AbsComposition::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 28 of file TF1AbsComposition.h. ◆ Copy(). void TF1AbsComposition::Copy ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF1AbsComposition.html:9717,inherit,inherited,9717,doc/master/classTF1AbsComposition.html,https://root.cern,https://root.cern/doc/master/classTF1AbsComposition.html,2,['inherit'],['inherited']
Modifiability,"tatus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TFoamIntegrand.h>. Inheritance diagram for TFoamIntegrand:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFoamIntegrand(). TFoamIntegrand::TFoamIntegrand ; (; ). inline . Definition at line 11 of file TFoamIntegrand.h. ◆ ~TFoamIntegrand(). TFoamIntegrand::~TFoamIntegrand ; (; ). inlineoverride . Definition at line 12 of file TFoamIntegrand.h. Member Function Documentation. ◆ Class(). static TClass * TFoamIntegrand::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFoamIntegrand::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TFoamIntegrand::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFoamIntegrand.html:9650,inherit,inherited,9650,doc/master/classTFoamIntegrand.html,https://root.cern,https://root.cern/doc/master/classTFoamIntegrand.html,2,['inherit'],['inherited']
Modifiability,"tatus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGWindow.h>. Inheritance diagram for TGUnknownWindowHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGUnknownWindowHandler(). TGUnknownWindowHandler::TGUnknownWindowHandler ; (; ). inline . Definition at line 144 of file TGWindow.h. ◆ ~TGUnknownWindowHandler(). TGUnknownWindowHandler::~TGUnknownWindowHandler ; (; ). inlineoverride . Definition at line 145 of file TGWindow.h. Member Function Documentation. ◆ Class(). static TClass * TGUnknownWindowHandler::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGUnknownWindowHandler::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGUnknownWindowHandler::Class_Version ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGUnknownWindowHandler.html:9730,inherit,inherited,9730,doc/master/classTGUnknownWindowHandler.html,https://root.cern,https://root.cern/doc/master/classTGUnknownWindowHandler.html,2,['inherit'],['inherited']
Modifiability,"tatus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGridCollection.h>. Inheritance diagram for TGridCollection:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGridCollection(). TGridCollection::TGridCollection ; (; ). inline . Definition at line 36 of file TGridCollection.h. ◆ ~TGridCollection(). virtual TGridCollection::~TGridCollection ; (; ). inlinevirtual . Definition at line 37 of file TGridCollection.h. Member Function Documentation. ◆ Add(). virtual void TGridCollection::Add ; (; TGridCollection * ; ). inlinevirtual . Definition at line 90 of file TGridCollection.h. ◆ CheckIfOnline(). virtual Bool_t TGridCollection::CheckIfOnline ; (; Bool_t ; = kFALSE). inlinevirtual . Definition at line 96 of file TGridCollection.h. ◆ Class(). static TClass * TGridCollection::Cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGridCollection.html:11387,inherit,inherited,11387,doc/master/classTGridCollection.html,https://root.cern,https://root.cern/doc/master/classTGridCollection.html,2,['inherit'],['inherited']
Modifiability,"tatus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <THtml.h>. Inheritance diagram for THtml::TModuleDefinition:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Function Documentation. ◆ Class(). static TClass * THtml::TModuleDefinition::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * THtml::TModuleDefinition::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t THtml::TModuleDefinition::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 64 of file THtml.h. ◆ DeclFileName(). static const char * THtml::TModuleDefinition::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 64 of file THtml.h. ◆ GetModule(). bo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHtml_1_1TModuleDefinition.html:10308,inherit,inherited,10308,doc/master/classTHtml_1_1TModuleDefinition.html,https://root.cern,https://root.cern/doc/master/classTHtml_1_1TModuleDefinition.html,2,['inherit'],['inherited']
Modifiability,"tatus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <THtml.h>. Inheritance diagram for THtml::TPathDefinition:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Function Documentation. ◆ Class(). static TClass * THtml::TPathDefinition::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * THtml::TPathDefinition::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t THtml::TPathDefinition::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 99 of file THtml.h. ◆ DeclFileName(). static const char * THtml::TPathDefinition::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 99 of file THtml.h. ◆ GetDocDir(). bool THtml::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHtml_1_1TPathDefinition.html:10801,inherit,inherited,10801,doc/master/classTHtml_1_1TPathDefinition.html,https://root.cern,https://root.cern/doc/master/classTHtml_1_1TPathDefinition.html,2,['inherit'],['inherited']
Modifiability,"tatus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMutexImp.h>. Inheritance diagram for TMutexImp:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMutexImp(). TMutexImp::TMutexImp ; (; ). inline . Definition at line 30 of file TMutexImp.h. ◆ ~TMutexImp(). virtual TMutexImp::~TMutexImp ; (; ). inlinevirtual . Definition at line 31 of file TMutexImp.h. Member Function Documentation. ◆ Class(). static TClass * TMutexImp::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMutexImp::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMutexImp::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 37 of file TMutexImp.h. ◆ DeclFileName(). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMutexImp.html:9579,inherit,inherited,9579,doc/master/classTMutexImp.html,https://root.cern,https://root.cern/doc/master/classTMutexImp.html,2,['inherit'],['inherited']
Modifiability,"tatus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TPoints3DABC.h>. Inheritance diagram for TPoints3DABC:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPoints3DABC(). TPoints3DABC::TPoints3DABC ; (; ). inline . Definition at line 28 of file TPoints3DABC.h. ◆ ~TPoints3DABC(). TPoints3DABC::~TPoints3DABC ; (; ). inlineoverride . Definition at line 29 of file TPoints3DABC.h. Member Function Documentation. ◆ Add(). Int_t TPoints3DABC::Add ; (; Float_t ; x, . Float_t ; y, . Float_t ; z . ). virtual . Add one 3D point defined by x,y,z to the array of the points as its last element. ; Definition at line 26 of file TPoints3DABC.cxx. ◆ AddLast(). Int_t TPoints3DABC::AddLast ; (; Float_t ; x, . Float_t ; y, . Float_t ; z . ). virtual . Add one 3D point defined by x,y,z to the arr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPoints3DABC.html:11289,inherit,inherited,11289,doc/master/classTPoints3DABC.html,https://root.cern,https://root.cern/doc/master/classTPoints3DABC.html,2,['inherit'],['inherited']
Modifiability,"tatus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TPosixThread.h>. Inheritance diagram for TPosixThread:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPosixThread(). TPosixThread::TPosixThread ; (; ). inline . Definition at line 36 of file TPosixThread.h. ◆ ~TPosixThread(). TPosixThread::~TPosixThread ; (; ). inline . Definition at line 37 of file TPosixThread.h. Member Function Documentation. ◆ CancelPoint(). Int_t TPosixThread::CancelPoint ; (; ). overridevirtual . Introduce an explicit cancellation point. Returns 0. ; Implements TThreadImp.; Definition at line 143 of file TPosixThread.cxx. ◆ Class(). static TClass * TPosixThread::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPosixThread::Class_Name ; (; ). static .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPosixThread.html:11374,inherit,inherited,11374,doc/master/classTPosixThread.html,https://root.cern,https://root.cern/doc/master/classTPosixThread.html,2,['inherit'],['inherited']
Modifiability,"tatus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TThreadImp.h>. Inheritance diagram for TThreadImp:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TThreadImp(). TThreadImp::TThreadImp ; (; ). inline . Definition at line 33 of file TThreadImp.h. ◆ ~TThreadImp(). virtual TThreadImp::~TThreadImp ; (; ). inlinevirtual . Definition at line 34 of file TThreadImp.h. Member Function Documentation. ◆ CancelPoint(). virtual Int_t TThreadImp::CancelPoint ; (; ). pure virtual . Implemented in TPosixThread, and TWin32Thread. ◆ Class(). static TClass * TThreadImp::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TThreadImp::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TThreadImp::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTThreadImp.html:10073,inherit,inherited,10073,doc/master/classTThreadImp.html,https://root.cern,https://root.cern/doc/master/classTThreadImp.html,2,['inherit'],['inherited']
Modifiability,"tatus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TVirtualMCDecayer.h>. Inheritance diagram for TVirtualMCDecayer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TVirtualMCDecayer(). TVirtualMCDecayer::TVirtualMCDecayer ; (; ). inline . Definition at line 26 of file TVirtualMCDecayer.h. ◆ ~TVirtualMCDecayer(). TVirtualMCDecayer::~TVirtualMCDecayer ; (; ). inlineoverride . Definition at line 27 of file TVirtualMCDecayer.h. Member Function Documentation. ◆ Class(). static TClass * TVirtualMCDecayer::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TVirtualMCDecayer::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TVirtualMCDecayer::Class_Version ; (; ). inlinestaticconstex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualMCDecayer.html:10504,inherit,inherited,10504,doc/master/classTVirtualMCDecayer.html,https://root.cern,https://root.cern/doc/master/classTVirtualMCDecayer.html,2,['inherit'],['inherited']
Modifiability,"tatus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TVirtualMapFile.h>. Inheritance diagram for TVirtualMapFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Function Documentation. ◆ Class(). static TClass * TVirtualMapFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TVirtualMapFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TVirtualMapFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 31 of file TVirtualMapFile.h. ◆ Close(). virtual void TVirtualMapFile::Close ; (; Option_t * ; option = """"). pure virtual . Implemented in TMapFile. ◆ DeclFileName(). static const char * TVirtualMapFile::DeclFileName ; (; ). inlinestatic . ReturnsName of the fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualMapFile.html:9648,inherit,inherited,9648,doc/master/classTVirtualMapFile.html,https://root.cern,https://root.cern/doc/master/classTVirtualMapFile.html,2,['inherit'],['inherited']
Modifiability,"tatus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TVirtualViewer3D.h>. Inheritance diagram for TVirtualViewer3D:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~TVirtualViewer3D(). TVirtualViewer3D::~TVirtualViewer3D ; (; ). virtual . Definition at line 276 of file TVirtualViewer3D.cxx. Member Function Documentation. ◆ AddCompositeOp(). virtual void TVirtualViewer3D::AddCompositeOp ; (; UInt_t ; operation). pure virtual . Implemented in TViewer3DPad, TGLScenePad, and TGLViewer. ◆ AddObject() [1/2]. virtual Int_t TVirtualViewer3D::AddObject ; (; const TBuffer3D & ; buffer, . Bool_t * ; addChildren = nullptr . ). pure virtual . Implemented in TGLViewer, TViewer3DPad, and TGLScenePad. ◆ AddObject() [2/2]. virtual Int_t TVirtualViewer3D::AddObject ; (; UInt_t ; physicalID, .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualViewer3D.html:21871,inherit,inherited,21871,doc/master/classTVirtualViewer3D.html,https://root.cern,https://root.cern/doc/master/classTVirtualViewer3D.html,2,['inherit'],['inherited']
Modifiability,"tatus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TWin32Thread.h>. Inheritance diagram for TWin32Thread:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TWin32Thread(). TWin32Thread::TWin32Thread ; (; ). inline . Definition at line 33 of file TWin32Thread.h. ◆ ~TWin32Thread(). TWin32Thread::~TWin32Thread ; (; ). inline . Definition at line 34 of file TWin32Thread.h. Member Function Documentation. ◆ CancelPoint(). Int_t TWin32Thread::CancelPoint ; (; ). overridevirtual . Implements TThreadImp.; Definition at line 167 of file TWin32Thread.cxx. ◆ Class(). static TClass * TWin32Thread::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TWin32Thread::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWin32Thread.html:10713,inherit,inherited,10713,doc/master/classTWin32Thread.html,https://root.cern,https://root.cern/doc/master/classTWin32Thread.html,2,['inherit'],['inherited']
Modifiability,"tatus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGTileLayout; TList * fList;  list of frames to arrange ;  ; TGCompositeFrame * fMain;  container frame ;  ; Bool_t fModified;  layout changed ;  ; Int_t fSep;  separation between tiles ;  ;  Protected Attributes inherited from TGLayoutManager; Bool_t fModified;  . #include <TGLayout.h>. Inheritance diagram for TGListLayout:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGListLayout(). TGListLayout::TGListLayout ; (; TGCompositeFrame * ; main, . Int_t ; sep = 0 . ). inline . Definition at line 337 of file TGLayout.h. Member Function Documentation. ◆ Class(). static TClass * TGListLayout::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGListLayou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGListLayout.html:11136,inherit,inherited,11136,doc/master/classTGListLayout.html,https://root.cern,https://root.cern/doc/master/classTGListLayout.html,2,['inherit'],['inherited']
Modifiability,"tatus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THtml::TFileSysDir; TList fDirs;  ; TList fFiles;  ;  Protected Attributes inherited from THtml::TFileSysEntry; Int_t fLevel;  ; TString fName;  ; TFileSysDir * fParent;  . #include <THtml.h>. Inheritance diagram for THtml::TFileSysRoot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFileSysRoot(). THtml::TFileSysRoot::TFileSysRoot ; (; const char * ; name, . TFileSysDB * ; parent . ). inline . Definition at line 159 of file THtml.h. Member Function Documentation. ◆ Class(). static TClass * THtml::TFileSysRoot::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * THtml::TFileSysRoot::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Vers",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHtml_1_1TFileSysRoot.html:10687,inherit,inherited,10687,doc/master/classTHtml_1_1TFileSysRoot.html,https://root.cern,https://root.cern/doc/master/classTHtml_1_1TFileSysRoot.html,2,['inherit'],['inherited']
Modifiability,"tatus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TImagePlugin; TString fExtension;  file extension ;  . #include <TASImagePlugin.h>. Inheritance diagram for TASImagePlugin:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TASImagePlugin(). TASImagePlugin::TASImagePlugin ; (; const char * ; ext). inline . Definition at line 29 of file TASImagePlugin.h. ◆ ~TASImagePlugin(). TASImagePlugin::~TASImagePlugin ; (; ). inlineoverride . Definition at line 30 of file TASImagePlugin.h. Member Function Documentation. ◆ ASImage2File(). virtual Bool_t TASImagePlugin::ASImage2File ; (; ASImage * ; ). inlinevirtual . Definition at line 37 of file TASImagePlugin.h. ◆ Class(). static TClass * TASImagePlugin::Class ; (; ). static . ReturnsTClass describing this cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASImagePlugin.html:10357,inherit,inherited,10357,doc/master/classTASImagePlugin.html,https://root.cern,https://root.cern/doc/master/classTASImagePlugin.html,2,['inherit'],['inherited']
Modifiability,"tatus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TMVA::PDEFoamKernelBase; MsgLogger * fLogger;  . #include <TMVA/PDEFoamKernelTrivial.h>. Inheritance diagram for TMVA::PDEFoamKernelTrivial:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ PDEFoamKernelTrivial() [1/2]. TMVA::PDEFoamKernelTrivial::PDEFoamKernelTrivial ; (; ). Default constructor for streamer. ; Definition at line 50 of file PDEFoamKernelTrivial.cxx. ◆ PDEFoamKernelTrivial() [2/2]. TMVA::PDEFoamKernelTrivial::PDEFoamKernelTrivial ; (; const PDEFoamKernelTrivial & ; other). Copy constructor. ; Definition at line 58 of file PDEFoamKernelTrivial.cxx. ◆ ~PDEFoamKernelTrivial(). virtual TMVA::PDEFoamKernelTrivial::~PDEFoamKernelTrivial ; (; ). inlinevirtual . Definition at line 45 of fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamKernelTrivial.html:10450,inherit,inherited,10450,doc/master/classTMVA_1_1PDEFoamKernelTrivial.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamKernelTrivial.html,2,['inherit'],['inherited']
Modifiability,"tatus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <RooStats/ConfInterval.h>. Inheritance diagram for RooStats::ConfInterval:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ConfInterval(). RooStats::ConfInterval::ConfInterval ; (; const char * ; name = nullptr). inlineexplicit . constructor given name and title ; Definition at line 40 of file ConfInterval.h. Member Function Documentation. ◆ CheckParameters(). virtual bool RooStats::ConfInterval::CheckParameters ; (; const RooArgSet & ; ); const. pure virtual . check if parameters are correct (i.e. they are the POI of this interval) ; Implemented in RooStats::LikelihoodInterval, RooStats::PointSetInterval, RooStats::SimpleInterval, and RooStat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1ConfInterval.html:11953,inherit,inherited,11953,doc/master/classRooStats_1_1ConfInterval.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1ConfInterval.html,2,['inherit'],['inherited']
Modifiability,"tatus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TExec.h>. Inheritance diagram for TExec:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TExec() [1/3]. TExec::TExec ; (; ). Exec default constructor. ; Definition at line 105 of file TExec.cxx. ◆ TExec() [2/3]. TExec::TExec ; (; const char * ; name, . const char * ; command . ). Exec normal constructor. ; Definition at line 113 of file TExec.cxx. ◆ TExec() [3/3]. TExec::TExec ; (; const TExec & ; text). Copy constructor. ; Definition at line 127 of file TExec.cxx. ◆ ~TExec(). TExec::~TExec ; (; ). virtual . Exec default destructor. ; Definition at line 120 of file TExec.cxx. Member Function Documentation. ◆ Class(). static TClass * TExec::Cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTExec.html:14752,inherit,inherited,14752,doc/master/classTExec.html,https://root.cern,https://root.cern/doc/master/classTExec.html,2,['inherit'],['inherited']
