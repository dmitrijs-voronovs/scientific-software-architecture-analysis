quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Availability, 	at qupath.lib.images.servers.bioformats.BioFormatsImageServer.<init>(BioFormatsImageServer.java:216) ; 	at qupath.lib.images.servers.bioformats.BioFormatsImageServer.<init>(BioFormatsImageServer.java:179) ; 	at qupath.lib.images.servers.bioformats.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:53) ; 	at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:166) ; 	at qupath.QuPath.main(QuPath.java:150) ; 23:18:19.945 [main] [WARN ] loci.formats.Memoizer - file deletion failed D:\QMDownload\5\Leica_scn\.Leica-Fluorescence-1.scn.bfmemo ; 23:18:20.901 [main] [INFO ] loci.formats.ImageReader - LeicaSCNReader initializing D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1.scn ; 23:18:20.904 [main] [INFO ] loci.formats.in.MinimalTiffReader - Reading IFDs ; 23:18:20.917 [main] [INFO ] loci.formats.in.MinimalTiffReader - Populating metadata ; 23:18:20.957 [main] [INFO ] loci.formats.in.BaseTiffReader - Populating OME metadata ; 23:18:21.207 [main] [ERROR] loci.formats.Memoizer - temp file rename returned false: D:\QMDownload\5\Leica_scn\.Leica-Fluorescence-1.scn.bfmemo520701858290608434 ; 23:18:21.318 [main] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: Bio-Formats for D:\\QMDownload\\5\\Leica_scn\\Leica-Fluorescence-1.scn ; Height:6338Width:4737ZSlices:1nChannels:3nTimepoints:1TimeUnit:SECONDSMagnification:20HasPixelSizeMicrons:truePixelHeightMicrons:0.5PixelWidthMicrons:0.5PixelZSpacingMicrons:NaNfile:/D:/QMDownload/5/Leica_scn/Leica-Fluorescence-1.scn#2dirOutput=file:/D:/QMDownload/5/Leica_scn/Leica-Fluorescence-1_tifa Top break at idx from:[0+=1]a Top break at idx from:[0+=1]a Top break at idx from:[0+=1]a Top break at idx from:[0+=1]............bTop is:0a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]............bBottom is:6337a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]a Left b,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:5771,ERROR,ERROR,5771,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['ERROR'],['ERROR']
Availability," **Describe the bug**; Today, I tried opening one of our multichannel, multi-scene (TMA) Zeiss *.czi files on an installation of QuPath Version 0.2.0-m2 on a recently installed Windows 10 system. To my surprise, this failed. I tried other files of the same type and got the same result. I could not open any of the multi-scene *.czi files I have tried. Of note, I have been working with version 0.2.0-m2 for a while now and it worked very well with ""normal"" *.czi files, which are also multi-channel, but do not contain multiple scenes. It must have been by sheer coincidence that, so far, I just had not tried any multi-scene files. We have another PC with a QuPath installation in our lab, which runs 0.2.0-m1. It shows the same behaviour: no problem opening ""normal"" multichannel (4-plex) *.czi files, not able to open multi-scene files. . **To Reproduce**; Steps to reproduce the behavior:; 1. Go to File; 2. Click on open; 3. Choose a *.czi file which you know is multi-scene ; 4. See error ""Sorry, can't open ... path to file"". **Expected behavior**; These files used to open in version 0.1.3. The scenes were read as individual images. In the Zeiss ""ZEN blue"" software, there is an option to show all the scenes at once. This had not been possible in QuPath in the past. I was hoping that with the new version of Bioformats it might now be possible, but it seems we have moved a step backwards. **Screenshots**; Not applicable. **Desktop (please complete the following information):**; - OS: Windows 10; - QuPath Version [e.g. 0.2.0-m2]. **Additional context**; Multi-scene *.czi files have been giving trouble in the past, e.g. with memory use. However, apart from the inability to ""stitch"" the scenes and show them all at once, the prior versions of QuPath could open them. Some googleing led me to checking as to whether the Microsoft Visual C++ Runtime Redistributables are installed on my system. The answer is yes. Thank you in advance,. Arnulf; University Medical Center Mainz, Germany; ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/337:1047,error,error,1047,https://qupath.github.io,https://github.com/qupath/qupath/issues/337,1,['error'],['error']
Availability, /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f7000-7f79438fa000 r-xp 00000000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f79438fa000-7f7943af9000 ---p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943af9000-7f7943afa000 r--p 00002000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afa000-7f7943afb000 rw-p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afb000-7f7943aff000 ---p 00000000 00:00 0 ; 7f7943aff000-7f7943bfc000 rw-p 00000000 00:00 0 ; 7f7943bfc000-7f7943c00000 ---p 00000000 00:00 0 ; 7f7943c00000-7f7943cfd000 rw-p 00000000 00:00 0 ; 7f7943cfd000-7f7943d01000 ---p 00000000 00:00 0 ; 7f7943d01000-7f7943dfe000 rw-p 00000000 00:00 0 ; 7f7943dfe000-7f7943dff000 r-xp 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943dff000-7f7943ffe000 ---p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943ffe000-7f7943fff000 r--p 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943fff000-7f7944000000 rw-p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7944000000-7f7944021000 rw-p 00000000 00:00 0 ; 7f7944021000-7f7948000000 ---p 00000000 00:00 0 ; 7f7948000000-7f7948021000 rw-p 00000000 00:00 0 ; 7f7948021000-7f794c000000 ---p 00000000 00:00 0 ; 7f794c000000-7f794d3e7000 rw-p 00000000 00:00 0 ; 7f794d3e7000-7f7950000000 ---p 00000000 00:00 0 ; 7f7950000000-7f7950022000 rw-p 00000000 00:00 0 ; 7f7950022000-7f7954000000 ---p 00000000 00:00 0 ; 7f7954000000-7f7954021000 rw-p 00000000 00:00 0 ; 7f7954021000-7f7958000000 ---p 00000000 00:00 0 ; 7f7958023000-7f7958024000 ---p 00000000 00:00 0 ; 7f7958024000-7f7958125000 rw-p 00000000 00:00 0 ; 7f7958125000-7f7958126000 ---p 00000000 00:00 0 ; 7f7958126000-7f7958227000 rw-p 00000000 00:00 0 ; 7f795822700,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:19855,down,downloads,19855,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability," 1.0.0, current version 1.5.5); 	/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0); ```; and notably `/usr/local/opt/gettext/lib/libintl.8.dylib` stops him from using it on an x86-64 machine, though this doesn't seem to be a problem on CI machines. ## Linux. The below is out dated; when dynamically linking `glib`, our binaries are fine. > While it's easy enough to get a SO of openslide with minimal dependencies (`libpcre2-8` stubbornly remains dynamically > linked), issues arise when trying to load this alongside JavaFX. Specifically, we get a glib warning followed by an error:; > ```; > (java:71634): GLib-GObject-WARNING **: 14:32:40.458: cannot register existing type 'gchar'; > **; > GLib-GObject:ERROR:../../../meson/subprojects/glib-2.72.0/gobject/gvaluetypes.c:454:_g_value_types_init: assertion failed: (type == G_TYPE_CHAR); > ```; > This is less urgent, as we can just distribute QuPath as `deb`/`rpm` packages, and specify `openslide-tools` as a dependency, as we will no longer depend on `openslide-java`. ## Plan for 0.5.0 release. - Windows will use a JAR of the OpenSlide builds, which we can extract to temp files and then load.; - Linux releases will depend on `openslide-tools`; if this is installed, then `libopenslide.so` should be on the search path.; - Mac builds will require homebrew (or similar) installs of `openslide`. However, if we could resolve the issues with the mac and Linux binaries, then it'd be great to use the same (or at least similar) processes on all platforms. Would appreciate any feedback/advice from @bgilbert and @jcupitt on the be",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:5768,error,error,5768,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495,1,['error'],['error']
Availability, 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f79438fa000-7f7943af9000 ---p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943af9000-7f7943afa000 r--p 00002000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afa000-7f7943afb000 rw-p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afb000-7f7943aff000 ---p 00000000 00:00 0 ; 7f7943aff000-7f7943bfc000 rw-p 00000000 00:00 0 ; 7f7943bfc000-7f7943c00000 ---p 00000000 00:00 0 ; 7f7943c00000-7f7943cfd000 rw-p 00000000 00:00 0 ; 7f7943cfd000-7f7943d01000 ---p 00000000 00:00 0 ; 7f7943d01000-7f7943dfe000 rw-p 00000000 00:00 0 ; 7f7943dfe000-7f7943dff000 r-xp 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943dff000-7f7943ffe000 ---p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943ffe000-7f7943fff000 r--p 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943fff000-7f7944000000 rw-p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7944000000-7f7944021000 rw-p 00000000 00:00 0 ; 7f7944021000-7f7948000000 ---p 00000000 00:00 0 ; 7f7948000000-7f7948021000 rw-p 00000000 00:00 0 ; 7f7948021000-7f794c000000 ---p 00000000 00:00 0 ; 7f794c000000-7f794d3e7000 rw-p 00000000 00:00 0 ; 7f794d3e7000-7f7950000000 ---p 00000000 00:00 0 ; 7f7950000000-7f7950022000 rw-p 00000000 00:00 0 ; 7f7950022000-7f7954000000 ---p 00000000 00:00 0 ; 7f7954000000-7f7954021000 rw-p 00000000 00:00 0 ; 7f7954021000-7f7958000000 ---p 00000000 00:00 0 ; 7f7958023000-7f7958024000 ---p 00000000 00:00 0 ; 7f7958024000-7f7958125000 rw-p 00000000 00:00 0 ; 7f7958125000-7f7958126000 ---p 00000000 00:00 0 ; 7f7958126000-7f7958227000 rw-p 00000000 00:00 0 ; 7f7958227000-7f7958228000 ---p 00000000 00:00 0 ; 7f7958228000-7f7958a28000 rw-p 00000000 00:00 0 ; 7f7958a28000-7f7958a34000,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:19969,down,downloads,19969,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability, 2; 20:39:43.272 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.274 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.275 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; ...; 20:39:43.604 [main] [ERROR] q.l.i.writers.ome.ConvertCommand - Unable to open file:broken_image.tif; java.io.IOException: Unable to open file:broken_image.tif; at qupath.lib.images.servers.ImageServers.buildServer(ImageServers.java:306); at qupath.lib.images.writers.ome.ConvertCommand.run(ConvertCommand.java:147); at picocli.CommandLine.executeUserObject(CommandLine.java:2026); at picocli.CommandLine.access$1500(CommandLine.java:148); at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2461); at picocli.CommandLine$RunLast.handle(CommandLine.java:2453); at picocli.CommandLine$RunLast.handle(CommandLine.java:2415); at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2273); at picocli.CommandLine$RunLast.execute(CommandLine.java:2417); at picocli.CommandLine.execute(CommandLine.java:2170); at qupath.QuPath.main(QuPath.java:202); Suppressed: java.io.IOException: Unable to build ImageServer for file:/scratch/a56/jr9959/tmp/xenium-images/unassigned/230629_Xenium_ID4369_Primary_3962_LA-Spots/230629_Xenium_ID4369_Primary_3962_LA-Spot000001.tif with requested provider qupath.imagej.images.servers.ImageJServerBuilder; at qupath.lib.images.servers.ImageServerBuilder$DefaultImageServerBuilder.buildOriginal(ImageServerBuilder.java:369); at qupath.lib.images.servers.ImageServerBuilder$AbstractServerBuilder.build(ImageServerBuilder.java:174); at qupath.lib.images.servers.ImageServers.buildServer(ImageServers.java:299); ... 10 common frames omitted; ```; Checkout exit code:; ```; echo $?; 0; ```. **Expected behavior**; Expected a non-zero return code. **Desktop (HPC):**; - OS: Rocky Linux release 8.8 (Green Obsidian); - QuPath Version: 0.5.0,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1451:3165,echo,echo,3165,https://qupath.github.io,https://github.com/qupath/qupath/issues/1451,1,['echo'],['echo']
Availability," > Hi David,; > Since this is through GitHub, I don't have any your contact address to ; > get in touch privately, and any email replies to this thread are shown ; > here <https://github.com/qupath/qupath/issues/45> (can also ; > edit/delete through that link). However, if you'd like to follow up on ; > this maybe you could send me a private message on ResearchGate?; > Thanks,; > Pete; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub ; > <https://github.com/qupath/qupath/issues/45#issuecomment-275047111>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/APmGEfakb3PrwmDrXw9e2ycOiIbRa12rks5rVwcggaJpZM4Lrcx8>.; >. -- ; Mit freundlichen Grüßen; Kind regards. Dipl. Biologe; David Haumann; CEO. Tel: +49 (0)7247 9342998-0; Mobil: +49 (0)171 9903171; E-Mail: david.haumann@hs-analysis.com; Webseite: www.hs-analysis.com. HS-Analysis GmbH; Steinbuch Centre for Computing (SCC), Geb. 441; Hermann-von-Helmholtz-Platz 1; 76344 Eggenstein-Leopoldshafen. Handelsregister: Amtsgericht Mannheim HRB 723920; UStIdNr: DE304551126; Geschäftsführer:; - David Haumann, Thomas Schenker, Sergey Biniaminov. _________________________________; Diese E-Mail und jeder übermittelte Anhang enthält gesetzlich geschützte; und vertrauliche Informationen. Wenn diese E-Mail nicht für Sie bestimmt ist,; bitten wir Sie, sie an uns zurückzusenden und anschließend von Ihrem Computersystem; zu löschen. Nicht für Sie bestimmte E-Mails und Anhänge dürfen Sie weder nutzen; noch verarbeiten oder Dritten zugänglich machen, gleich in welcher Form. This email including any attachments contains privileged and confidential; information. If you are not an intended recipient, please return the email; to us and then delete it from your computer system. You may neither use nor; edit any such emails including attachments received due to an error in; transmission, nor make them accessible to third parties in any manner whatsoever.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/45#issuecomment-275055657:2039,error,error,2039,https://qupath.github.io,https://github.com/qupath/qupath/issues/45#issuecomment-275055657,1,['error'],['error']
Availability," I open it, I cannot see the fluorescence image, but could only see a zoom-out whole slide with label in white light, and the server is Bioformats.; Then I try to open it in version 0.2.0. Under this version, I can see the fluorescence image now (alaso Bioformats). Then I run a script to split the image and export as tiles. ; When using QuPath 0.1.2: ; (1)if I run the script from menu, it works without problem.; (2) If I run feed in the script to QuPath via command line, the Bioformat extension cannot be loaded. When using QuPath 0.2.0:; (1) if I run the script from menu, error appeared:. ERROR: Error: startup failed:; Script1.groovy: 17: unable to resolve class qupath.imagej.images.servers.ImagePlusServer; @ line 17, column 1.; import qupath.imagej.images.servers.ImagePlusServer; ^. Script1.groovy: 18: unable to resolve class qupath.imagej.images.servers.ImagePlusServerBuilder; @ line 18, column 1.; import qupath.imagej.images.servers.ImagePlusServerBuilder; ^. 2 errors. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:596); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr22",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280:1088,ERROR,ERROR,1088,https://qupath.github.io,https://github.com/qupath/qupath/issues/280,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability," In versions after 0.2.0-m10, including the 0.2.0 release, I am trying to use the command ""QuPath-0.2.0 -i=myimage script myscript.groovy"", but this fails with NullPointerException related to a null returned by ""getCurrentImageData()"". The exact same script works just fine using the script editor in all versions. . I am possibly using the new command line interface incorrectly. . **To Reproduce**; Steps to reproduce the behavior:; 1. Create any script that needs to reference the current image, without using a project. The following script ""myscript.groovy"" demonstrates the issue:; ```; import static qupath.lib.gui.scripting.QPEx.*. def imageData = getCurrentImageData(). if(imageData == null) {; println ""imageData == Null""; } else {; println ""imageData != Null""; }. def server = imageData.getServer(); ```; 2. Run the script referencing an image on the command line: ; ```; ./QuPath-0.2.0 -i=myimage.svs script myscript.groovy; ```; 3. See error:; imageData == Null; NullPointerException at line 11: Cannot invoke method getServer() on null object. **Expected behavior**; I would expect that if the command line arguments were changed to the new format the script processing would work the same as 0.2.0-m9 and earlier. The script editor seems to work just fine. Example working output from 0.2.0-m9 is shown below: . 10:23:10.593 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, myimage.svs, -script, myscript.groovy; 10:23:11.387 [main] [WARN ] q.l.i.s.b.BioFormatsImageServer - Temp memoization directory created at /var/folders/9_/b0xrdp2d1bsbzlmwp3xff2g00000gn/T/qupath-memo-8955966830564346412; 10:23:11.388 [main] [WARN ] q.l.i.s.b.BioFormatsImageServer - If you want to avoid this warning, either disable Bio-Formats memoization in the preferences or specify a directory to use; 10:23:11.563 [main] [WARN ] q.l.i.s.ImageServerMetadata$ImageResolutionLevel - Calculated downsample values differ for x & y for level 4: x=70.0 and y=70.10548523206751 - will use value 7",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/511:1481,error,error,1481,https://qupath.github.io,https://github.com/qupath/qupath/issues/511,1,['error'],['error']
Availability," It looks like you have tried to import a class 'qupath.imagej.images.servers.ImagePlusServerBuilder' that doesn't exist!; > You should probably remove the broken import statement in your script (around line 17).; > Then you may want to check 'Run -> Include default imports' is selected, or alternatively add ; > import qupath.imagej.tools.IJTools; > at the start of the script. Full error message below.; > ; > ERROR: MultipleCompilationErrorsException at line 16: startup failed:; > Script1.groovy: 17: unable to resolve class qupath.imagej.images.servers.ImagePlusServerBuilder; > @ line 17, column 1.; > import qupath.imagej.images.servers.ImagePlusServerBuilder; > ^; > ; > Script1.groovy: 16: unable to resolve class qupath.imagej.images.servers.ImagePlusServer; > @ line 16, column 1.; > import qupath.imagej.images.servers.ImagePlusServer; > ^; > ; > 2 errors; > ; > ; > ERROR: Script error (MultipleCompilationErrorsException); > at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); > at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:975); > at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:637); > at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:586); > at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:401); > at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); > at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:341); > at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:338); > at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); > at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:336); > at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:320); > at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:262); > at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(Gro",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/404:1532,Error,ErrorCollector,1532,https://qupath.github.io,https://github.com/qupath/qupath/issues/404,1,['Error'],['ErrorCollector']
Availability," QuPath 0.1.2, when I open it, I cannot see the fluorescence image, but could only see a zoom-out whole slide with label in white light, and the server is Bioformats.; Then I try to open it in version 0.2.0. Under this version, I can see the fluorescence image now (alaso Bioformats). Then I run a script to split the image and export as tiles. ; When using QuPath 0.1.2: ; (1)if I run the script from menu, it works without problem.; (2) If I run feed in the script to QuPath via command line, the Bioformat extension cannot be loaded. When using QuPath 0.2.0:; (1) if I run the script from menu, error appeared:. ERROR: Error: startup failed:; Script1.groovy: 17: unable to resolve class qupath.imagej.images.servers.ImagePlusServer; @ line 17, column 1.; import qupath.imagej.images.servers.ImagePlusServer; ^. Script1.groovy: 18: unable to resolve class qupath.imagej.images.servers.ImagePlusServerBuilder; @ line 18, column 1.; import qupath.imagej.images.servers.ImagePlusServerBuilder; ^. 2 errors. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:596); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.c",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280:1080,error,errors,1080,https://qupath.github.io,https://github.com/qupath/qupath/issues/280,1,['error'],['errors']
Availability," Steps to reproduce the behavior:; 1. Create a project with ~143 IMC images; 2. Annotate structures within ~38 images with 5 different classifications of annotations; 3. Open a non-annotated image; 4. Attempt to train a pixel classifier using all channels, scales, and features, loading training from other annotated images in the project.; 5. Click ""Live Preview"", note the error at the end of the post. **Expected behavior**; A pixel classifier should be trained, and a preview should be applied to the currently loaded image. **Desktop (please complete the following information):**; - OS: Windows 10, 32-thread processor, 127/128 Gb RAM allocated for QuPath, ~500 Gb SSD storage for tile cache; - QuPath Version 0.3.2. **Additional context**; Error log:; ```; 12:10:44.040 [JavaFX Application Thread] [INFO ] q.p.g.c.ml.PixelClassifierPane - Creating training data from 38 images; 12:10:44.953 [JavaFX Application Thread] [ERROR] q.p.g.c.ml.PixelClassifierTraining - Error requesting features for ImageOp server: ImageData: Other, xxxx___ROI8_ROI_008.ome.tiff - ROI8_ROI_008.ome {""colorTransforms"":[{""channelName"":""Pr(141)_141-SMA""},{""channelName"":""Nd(142)_142Nd-CD19""},{""channelName"":""Nd(143)_143Nd-Vimentin""},{""channelName"":""Nd(144)_144Nd-cd14""},{""channelName"":""Nd(146)_146NdCD16""},{""channelName"":""Nd(148)_148-Pan-Ker""},{""channelName"":""Sm(149)_149Sm-CD11b""},{""channelName"":""Sm(152)_152Sm-CD45""},{""channelName"":""Sm(154)_154Sm-CD11c""},{""channelName"":""Gd(155)_155Gd-FoxP3""},{""channelName"":""Gd(156)_156Gd-CD4""},{""channelName"":""Gd(158)_158Gd-E_Cadherin""},{""channelName"":""Tb(159)_159Tb-CD68""},{""channelName"":""Gd(160)_160Gd-Vista""},{""channelName"":""Dy(161)_161Dy-CD20""},{""channelName"":""Dy(162)_162Dy-CD8a""},{""channelName"":""Er(166)_166Er-CD45RA""},{""channelName"":""Er(167)_167Er-GranzymeB""},{""channelName"":""Er(168)_168Er-Ki67""},{""channelName"":""Tm(169)_169Tmp-CollagenI""},{""channelName"":""Er(170)_170Er-CD3""},{""channelName"":""Yb(171)_171Yb-HistoneH3""},{""channelName"":""Yb(173)_173Yb-CD45RO""},{""channelName"":""Y",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947:2218,Error,Error,2218,https://qupath.github.io,https://github.com/qupath/qupath/issues/947,1,['Error'],['Error']
Availability," String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); File file = new File(dirOutput, name); ImageWriterTools.writeImageRegionWithOverlay(imageData, overlayOptions, request, file.getAbsolutePath()). // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; catch (Exception e) {; // Check if we have had a sufficient number of errors to just gi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-486778605:2773,down,downsample,2773,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605,1,['down'],['downsample']
Availability," [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; I encountered some reproducible crashes on macOS (Macbook Air, M1) when running the below script for ~100 images within a project. The script will run fine at first. After ~100 images, an exception will be thrown. And after a few more executions, the app will crash. > ERROR: unable to create native thread: possibly out of memory or process/resource limits reached"". . **To Reproduce**. ```groovy; import qupath.lib.gui.viewer.overlays.HierarchyOverlay; import qupath.lib.gui.images.servers.RenderedImageServer. def viewer = getCurrentViewer(); def imageData = getCurrentImageData(). def name = GeneralTools.getNameWithoutExtension(imageData.getServer().getMetadata().getName()); def pathOutput = <output_path>. double requestedPixelSize = 15; double downsample = requestedPixelSize / imageData.getServer().getPixelCalibration().getAveragedPixelSize(). def display = qupath.lib.display.ImageDisplay.create(imageData); def server = new RenderedImageServer.Builder(imageData); .display(display); .downsamples(downsample); .layers(new HierarchyOverlay(viewer.getImageRegionStore(), viewer.getOverlayOptions(), imageData)); .build(). ```. **Expected behavior**; The above script can run for the whole project without crashing. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: macOS (MacBook Air, M1); - QuPath Version: 0.5.1-arm64. **Additional context**. Stack trace; ```; ERROR: unable to create native thread: possibly out of memory or process/resource limits reached in thread_leak_repro.groovy at line number 25; java.base/java.lang.Thread.start0(Native Method); java.base/java.lang.Thread.start(Unknown Source); java.base/java.lang.System$2.start(Unknown Sou",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1561:1246,down,downsample,1246,https://qupath.github.io,https://github.com/qupath/qupath/issues/1561,1,['down'],['downsample']
Availability," [INFO ] qupath.QuPath - Launching QuPath with args: -image, D:\\QMDownload\\6\\[failed_handOK]Leica_scn\\Leica-Fluorescence-1.scn, -script, D:\\QMDownload\\6\\Tiling_a_whole_slide_image.groovy ; 20:56:55.829 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!! ; Unsupported format or not found ; 20:56:55.876 [main] [WARN ] q.i.i.servers.ImageJServerBuilder - Error opening D:\\QMDownload\\6\\[failed_handOK]Leica_scn\\Leica-Fluorescence-1.scn with ImageJ: Could not open D:\\QMDownload\\6\\[failed_handOK]Leica_scn\\Leica-Fluorescence-1.scn with ImageJ ; 20:56:55.907 [main] [WARN ] q.l.i.servers.OpenslideServerBuilder - Unable to open D:\\QMDownload\\6\\[failed_handOK]Leica_scn\\Leica-Fluorescence-1.scn with OpenSlide: Can't find main image ; 20:56:55.907 [main] [ERROR] q.l.i.servers.ImageServerProvider - Unable to build whole slide server - check your classpath for a suitable library (e.g. OpenSlide, BioFormats); 	 ; 20:56:55.907 [main] [ERROR] q.l.i.servers.ImageServerProvider - C:\Program Files\QuPath\app\QuPathApp.jar;qupath/qupath-core-0.1.2.jar;qupath/qupath-core-awt-0.1.2.jar;qupath/qupath-core-processing-0.1.2.jar;qupath/qupath-core-processing-awt-0.1.2.jar;qupath/qupath-extension-ij-0.1.2.jar;qupath/qupath-extension-input-0.1.2.jar;qupath/qupath-extension-opencv-0.1.2.jar;qupath/qupath-extension-openslide-0.1.2.jar;qupath/qupath-extension-pen-0.1.2.jar;qupath/qupath-extension-script-editor-0.1.2.jar;qupath/qupath-gui-fx-0.1.2.jar;qupath/qupath-processing-ij-0.1.2.jar;qupath/qupath-processing-opencv-0.1.2.jar;jars/commons-math3-3.6.1.jar;jars/controlsfx-8.40.12.jar;jars/flowless-0.4.5.jar;jars/groovy-2.4.7.jar;jars/groovy-jsr223-2.4.7.jar;jars/gson-2.8.0.jar;jars/ij-1.51g.jar;jars/jfxtras-common-8.0-r5.jar;jars/jfxtras-menu-8.0-r5.jar;jars/jinput-2.0.6.jar;jars/jpen-2-150301.jar;jars/jutils-1.0.0.jar;jars/logback-classic-1.1.7.jar;jars/logback-core-1.1.7.jar;jars/opencv-3.1.0.jar;jars/openslide-3.4.1_2.jar;jars",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/260:2035,ERROR,ERROR,2035,https://qupath.github.io,https://github.com/qupath/qupath/issues/260,1,['ERROR'],['ERROR']
Availability," ```; ./QuPath-0.2.0 -i=myimage.svs script myscript.groovy; ```; 3. See error:; imageData == Null; NullPointerException at line 11: Cannot invoke method getServer() on null object. **Expected behavior**; I would expect that if the command line arguments were changed to the new format the script processing would work the same as 0.2.0-m9 and earlier. The script editor seems to work just fine. Example working output from 0.2.0-m9 is shown below: . 10:23:10.593 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, myimage.svs, -script, myscript.groovy; 10:23:11.387 [main] [WARN ] q.l.i.s.b.BioFormatsImageServer - Temp memoization directory created at /var/folders/9_/b0xrdp2d1bsbzlmwp3xff2g00000gn/T/qupath-memo-8955966830564346412; 10:23:11.388 [main] [WARN ] q.l.i.s.b.BioFormatsImageServer - If you want to avoid this warning, either disable Bio-Formats memoization in the preferences or specify a directory to use; 10:23:11.563 [main] [WARN ] q.l.i.s.ImageServerMetadata$ImageResolutionLevel - Calculated downsample values differ for x & y for level 4: x=70.0 and y=70.10548523206751 - will use value 70.05274261603375; 10:23:11.573 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1; WARNING: An illegal reflective access operation has occurred; WARNING: Illegal reflective access by org.codehaus.groovy.vmplugin.v7.Java7$1 (file:/Applications/QuPath-0.2.0-m9.app/Contents/app/groovy-2.5.9.jar) to constructor java.lang.invoke.MethodHandles$Lookup(java.lang.Class,int); WARNING: Please consider reporting this to the maintainers of org.codehaus.groovy.vmplugin.v7.Java7$1; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations; WARNING: All illegal access operations will be denied in a future release; imageData != Null. **Desktop (please complete the following information):**; - OS: [macOS]; - QuPath Version [0.2.0-m10 and greater]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/511:2436,down,downsample,2436,https://qupath.github.io,https://github.com/qupath/qupath/issues/511,1,['down'],['downsample']
Availability," access operations; WARNING: All illegal access operations will be denied in a future release; 12:07:43.276 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1; 12:07:43.360 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: null; 12:07:43.360 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:07:43.365 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:08:18.669 [JavaFX Application Thread] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; 12:08:18.670 [JavaFX Application Thread] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; 12:08:18.670 [JavaFX Application Thread] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.objective-power' not available, will return default value NaN; 12:08:18.677 [JavaFX Application Thread] [WARN ] q.l.i.s.o.OpenslideServerBuilder - Unable to open file:/media/joelrv/SDB/Dropbox/PhD/ST_Thyroid/r_plotting/input_data/new_sample/ndpi_and_tifs/st1_d1_HE_final.tif with OpenSlide: Pixel width must be a finite number > 0, not NaN; 12:08:19.076 [JavaFX Application Thread] [INFO ] loci.formats.ImageReader - TiffDelegateReader initializing /media/joelrv/SDB/Dropbox/PhD/ST_Thyroid/r_plotting/input_data/new_sample/ndpi_and_tifs/st1_d1_HE_final.tif; 12:08:19.078 [JavaFX Application Thread] [INFO ] loci.formats.in.MinimalTiffReader - Reading IFDs; 12:08:19.172 [JavaFX Application Thread] [INFO ] loci.formats.in.MinimalTiffReader - Populating metadata; 12:08:19.182 [JavaFX Application Thread] [INFO ] loci.formats.in.TiffReader - Checking comment style; 12:08:19.182 [JavaFX Application Thread] [INFO ] loci.formats.in.BaseTiffReader - Populating OME metadata; 12:08:19.194 [JavaFX Application Thread] [INFO ] q.l.i.s.b.BioFo",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279:2837,avail,available,2837,https://qupath.github.io,https://github.com/qupath/qupath/issues/279,1,['avail'],['available']
Availability," agree this interface may not be the best one as it could easily just be a checkbox option in the ScriptEditor. For now, though, i think it is enough to enjoy the benefits that this PR brings. > > This last change alone allowed, on my projects, to improve the time when creating an object classifier from ~10/15minutes to ~5seconds. > Can you explain why it takes so long? Huge numbers of images? Slow file format, or is it where the images are stored?. Basically All you the above. It accesses ~50 `.czi` images, weighting ~10GiB each. Leaving the the big size aside, it's also known that BioFormats themselves (required by `.czi`) are slow to work with.; Adding up to this scenario, images are often stored on a remote server (be it OMERO or just a sftp/samba server). This is due to the fact that it is hard for every member of a laboratory to have them stored on their own computer, as they all need to collaborate and, even if they wanted, they would soon fill up their local storage. in this scenario, the fact that QuPath offer an highly-scriptable interface is many laboratories' luck. It means that a pipeline of scripts can be applied one after the other, resulting in a full analysis of the whole project. Sometimes, you may even want to tweak some parameters, and for this you have to re-run the whole pipeline in batch again. In the end, I really get you are wary of quickly merging this. I'm sure reducing code is a top priority in order to offer the best bug-free experience to QuPath's wide user-base. A base experience that can be extended by plug-ins and scripts _outside_ of QuPath's code/responsibility. However, I feel like the ability to run scripts in QuPath is at the **core** of its streghts. It allows to offer an extensible basis on which downstream developers can then build upon.; For this reason I ask you to please also consider future scenarios that this small PR opens up in batch script execution, and not only its implications with the object classifier. Thank you!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1488#issuecomment-2022463076:3602,down,downstream,3602,https://qupath.github.io,https://github.com/qupath/qupath/pull/1488#issuecomment-2022463076,1,['down'],['downstream']
Availability," an image named `OS-2.ndpi`; 2. Duplicate the project entry (via right click > Duplicate Image(s). No error will occur, duplicate image will be named `OS-2.ndpi (1)`; 3. Rename this duplicated image by removing the last parenthesis, to `OS-2.ndpi (1`; 4. Attempt to duplicate this image. Note the following error:; ![image](https://user-images.githubusercontent.com/52012166/161337956-5eabd4e7-0b3e-4a29-8b1b-914e3484cda7.png); See full log at the end. **Expected behavior**; Regex patterns should not be evaluated for when duplicating image names. I'd imagine there are a lot of other character combinations that can trigger regex-related errors during duplication, or perhaps other operations too. I wonder if there's any cool things that can be done with this, such as programmatically creating image names during image duplication... **Desktop (please complete the following information):**; - OS: Windows 10; - QuPath Version: 0.4.0-SNAPSHOT. **Additional context**; Full error log:; ```; ERROR: QuPath exception: Unclosed group near index 24; OS-2.ndpi (1 \(([\d]+)\); java.util.regex.PatternSyntaxException: Unclosed group near index 24; OS-2.ndpi (1 \(([\d]+)\); at java.base/java.util.regex.Pattern.error(Unknown Source); at java.base/java.util.regex.Pattern.accept(Unknown Source); at java.base/java.util.regex.Pattern.group0(Unknown Source); at java.base/java.util.regex.Pattern.sequence(Unknown Source); at java.base/java.util.regex.Pattern.expr(Unknown Source); at java.base/java.util.regex.Pattern.compile(Unknown Source); at java.base/java.util.regex.Pattern.<init>(Unknown Source); at java.base/java.util.regex.Pattern.compile(Unknown Source); at qupath.lib.common.GeneralTools.generateDistinctName(GeneralTools.java:774); at qupath.lib.gui.panes.ProjectBrowser.lambda$getPopup$14(ProjectBrowser.java:456); at org.controlsfx.control.action.Action.handle(Action.java:423); at org.controlsfx.control.action.Action.handle(Action.java:64); at com.sun.javafx.event.CompositeEventHandler.dis",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/942:1400,error,error,1400,https://qupath.github.io,https://github.com/qupath/qupath/issues/942,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability," and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.Event",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/512#issuecomment-640534382:1213,ERROR,ERROR,1213,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382,1,['ERROR'],['ERROR']
Availability," annotations restored. I've continued closing and reopening the project, and a different number of images have annotations each time. I have tried downloading the newest version of QuPath, after which there were 5 images with annotations and detections restored and one with only annotations restored. Since updating, the same data is the same every time I reopen it. I have also tried updating and restarting my computer. I have no idea how or why this happened or how to get my data back. This is many hours of work, and I'm scared to start my new project, if this is a possible outcome.;  ; **To Reproduce**; I'm sorry, but I have no idea.;  ; **Expected behavior**; Normally, when I go from one image to another, I save one and then the next one opens the old annotations and detections.;  ; **Screenshots**; <img width=""1264"" alt=""Screenshot 2023-09-04 at 6 43 43 PM"" src=""https://github.com/qupath/qupath/assets/79068467/16ab2d72-a5ad-4910-b1eb-c1fc0a9c8842"">; This is a list of images, you can see that it shows five on this view as opened and the rest as new. ;  ; **Desktop (please complete the following information):**;  - OS:  macOS Ventura Version 13.5.1 (22G90);  - QuPath Version: currently Version: 0.4.4, unfortunately, I didn't check the old version before updating;  ; **Additional context**; The only thing I think *could* be a contributing factor is that the image files are large, and my Mac automatically offloads them to the cloud if I haven't opened them for a few days. When I want to work on the project, I redownload the images from the cloud, and have never had an issue viewing my old annotations on those images before. All of the images are currently downloaded, and there is no consistency between the ones that got offloaded to the cloud and the ones that lost annotations. There are six that were never offloaded to the cloud, and three of them lost annotations/detections. There are also three that were offloaded to the cloud that retained annotations/detections.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1313:2548,down,downloaded,2548,https://qupath.github.io,https://github.com/qupath/qupath/issues/1313,1,['down'],['downloaded']
Availability," at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$MouseHandler.process(Scene.java:3862); at javafx.scene.Scene.processMouseEvent(Scene.java:1849); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2590); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source). **Expected behavior**; In the past, I had no issues. I was able to use scripts and they were running succesfully. **Desktop (please complete the following information):**; - OS: [e.g. Windows 10]; - QuPath Version [e.g. 0.2.0(m4 or m5)]. **Additional context**; I closed and re-started QuPath. The error remains. I went from m4 to m5, still the same. ; Sometimes the error appears even when dragging the mouse cursor on ""Automate"" without clicking on it.; I cannot understand the error. Any help would be appreciated. Kind Regards,; Georgia",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/373:5002,error,error,5002,https://qupath.github.io,https://github.com/qupath/qupath/issues/373,3,['error'],['error']
Availability," at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); WARN: Error opening /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with ImageJ: Could not open /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with ImageJ; WARN: Unable to open /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with OpenSlide: /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif: Not a file that OpenSlide can recognize; ERROR: Unable to build whole slide server - check your classpath for a suitable library (e.g. OpenSlide, BioFormats); 	; ERROR: /Applications/QuPath.app/Contents/Java/QuPathApp.jar:qupath/qupath-core-0.1.2.jar:qupath/qupath-core-awt-0.1.2.jar:qupath/qupath-core-processing-0.1.2.jar:qupath/qupath-core-processing-awt-0.1.2.jar:qupath/qupath-extension-ij-0.1.2.jar:qupath/qupath-extension-input-0.1.2.jar:qupath/qupath-extension-opencv-0.1.2.jar:qupath/qupath-extension-openslide-0.1.2.jar:qupath/qupath-extension-pen-0.1.2.jar:qupath/qupath-extension-script-editor-0.1.2.jar:",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371771791:9240,Error,Error,9240,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371771791,1,['Error'],['Error']
Availability," at the start; I think centred vertical alignment for the version and buttons would look bette; - [x] The description text would ideally be lighter in color (e.g. using opacity); - [x] The purpose of the 'remove' and 'update' buttons is unclear - especially for built-in extension that can't be changed. ; - [x] Does update 'Check for updates' or actually update?; - [x] I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. > I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start;. I'd be more inclined to even do ""version: 0.1.0"" rather than having column headers that would be largely redundant. > Does update 'Check for updates' or actually update?. It checks for updates; if one is available, it asks if you'd like to download it. If not, it pops up a notification saying it's up-to-date. > I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. Yes, similarly it asks if you want to download before going ahead. ![Screenshot from 2023-10-02 22-37-08](https://github.com/qupath/qupath/assets/10779688/b0404e3f-320d-4fbf-b990-3cad161dee24). Note that here the top list is focusable, the bottom isn't. The titles are obviously WIP (see below). Same with the extensions dir button not being full-width (although I don't truly love that personally, it's up to you). > Finally, I think splitting the lists at the top into different sections would make sense, if they have different purposes. Rather than 'servers' and 'extensions', they could be split between 'Built-in extensions' and 'Optional extensions'. That might help explain the differences in behavior. I don't think ""Server"" vs ""extension"" is useful yeah, it seems a bit technical for what this GUI component is. I'd have done core vs non-core, but is there a way of distinguishing between core and non-core extensions? The only d",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490:1740,Down,Download,1740,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490,1,['Down'],['Download']
Availability," at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); File file = new File(dirOutput, name); ImageWriterTools.writeImageRegionWithOverlay(imageData, overlayOptions, request, file.getAbsolutePath()). // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; catch (Exception e) {; // Check if we have had a sufficient number of errors to just give up; nErrors++;; if (nErrors > maxErrors) {; println(""Maximum number of errors exceeded - aborting...""); return; }; e.printStackTrace(); }; }; }; }. ```. The error is on line 91 when I try to access the ImagePlusServer server, which obviously doesn't exist anymore. . ```; ERROR: Error at line 7: No such property: server for class: Script48. ERROR: Script error; at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.unwrap(ScriptBytecodeAdapter.java:65); at org.codehaus.groovy.runtime.callsite.PogoGetPropertySite.getProperty(PogoGetPropertySite.java:51); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callGroovyObjectGetProperty(AbstractCallSite.java:309); at Script48.run(Script48.groovy:8); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1034); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/ja",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309:4498,ERROR,ERROR,4498,https://qupath.github.io,https://github.com/qupath/qupath/issues/309,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability," com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); WARN: Error opening /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with ImageJ: Could not open /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with ImageJ; WARN: Unable to open /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with OpenSlide: /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif: Not a file that OpenSlide can recognize; ERROR: Unable to build whole slide server - check your classpath for a suitable library (e.g. OpenSlide, BioFormats); 	; ERROR: /Applications/QuPath.app/Contents/Java/QuPathApp.jar:qupath/qupath-core-0.1.2.jar:qupath/qupath-core-awt-0.1.2.jar:qupath/qupath-core-processing-0.1.2.jar:qupath/qupath-core-processing-awt-0.1.2.jar:qupath/qupath-extension-ij-0.1.2.jar:qupath/qupath-extension-input-0.1.2.jar:qupath/qupath-extension-opencv-0.1.2.jar:qupath/qupath-extension-openslide-0.1.2.jar:qupath/qupath-extension-pen-0.1.2.jar:qupath/qupath-extension-script-editor-0.1.2.jar:qupath/qupath-gui-fx-0.1.2.jar:qupath/qupath-processing-ij-0.1.2.jar:qupath/qupath-processing-opencv-0.1.2.jar:jars/commons-math3-3.6.1.jar:jars/controlsfx-8.40.12.jar:jars/flowless-0.4.5.jar:jars/groovy-2.4.7.jar:jars/groovy-jsr223-2.4.7.jar:jars/gson-2.8.0.jar:jars/ij-1.51g.jar:jars/jfxtras-common-8.0-r5.jar:jars/jfxtras-menu-8.0-r5.jar:jars/jinput-2.0.6.jar:jars/jpen-2-150301.jar:jars/jutils-1.0.0.jar:jars/logback-classic-1.1.7.jar:jars/logback-core-1.1.7.jar:jars/opencv-3.1.0.jar:jars/openslide-3.4.1_2.jar:jars/packager.jar:jars/reactfx",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371771791:9823,ERROR,ERROR,9823,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371771791,1,['ERROR'],['ERROR']
Availability," consider reporting this to the maintainers of org.codehaus.groovy.vmplugin.v7.Java7$1; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations; WARNING: All illegal access operations will be denied in a future release; 12:07:43.276 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1; 12:07:43.360 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: null; 12:07:43.360 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:07:43.365 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:08:18.669 [JavaFX Application Thread] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; 12:08:18.670 [JavaFX Application Thread] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; 12:08:18.670 [JavaFX Application Thread] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.objective-power' not available, will return default value NaN; 12:08:18.677 [JavaFX Application Thread] [WARN ] q.l.i.s.o.OpenslideServerBuilder - Unable to open file:/media/joelrv/SDB/Dropbox/PhD/ST_Thyroid/r_plotting/input_data/new_sample/ndpi_and_tifs/st1_d1_HE_final.tif with OpenSlide: Pixel width must be a finite number > 0, not NaN; 12:08:19.076 [JavaFX Application Thread] [INFO ] loci.formats.ImageReader - TiffDelegateReader initializing /media/joelrv/SDB/Dropbox/PhD/ST_Thyroid/r_plotting/input_data/new_sample/ndpi_and_tifs/st1_d1_HE_final.tif; 12:08:19.078 [JavaFX Application Thread] [INFO ] loci.formats.in.MinimalTiffReader - Reading IFDs; 12:08:19.172 [JavaFX Application Thread] [INFO ] loci.formats.in.MinimalTiffReader - Populating metadata; 12:08:19.182 [JavaFX Application Thread] [INFO ] loci.formats.in.TiffReader - Checking comment style; ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279:2661,avail,available,2661,https://qupath.github.io,https://github.com/qupath/qupath/issues/279,1,['avail'],['available']
Availability," contents may differ from the script if there are unsaved changes); String filePath = getProperty(ScriptAttributes.FILE_PATH); ```. The inspiration is from https://github.com/qupath/qupath/issues/1029. These changes make useful things possible, e.g.; * take action to notify the user at the end of long-running batch processing; * access other scripts or files relative to the script file itself. ## New `Timeit` class. The new `Timeit` class simplifies reporting the length of time it takes scripts (or parts of scripts) to run. Simple use involves starting a `Timeit` early, calling `start()`, and printing it whenever you want:; ```groovy; def timeit = new Timeit().start(); Thread.sleep(100); println timeit; Thread.sleep(200); println timeit; ```; Output:; ```; Time since start	106 ms; Time since start	314 ms; ```. It's also possible to have a bit more control, setting named checkpoints along the way:. ```groovy; var timeit = new Timeit(); .microseconds(); .start(""First checkpoint""); ; println 'Doing something now'; Thread.sleep(100). timeit.checkpoint(""Second checkpoint""). println 'Waiting for a bit'; Thread.sleep(200); ; timeit.stop(). println ""Doing something that isn't timed""; Thread.sleep(200). println timeit; ```. Output:; ```; Doing something now; Waiting for a bit; Doing something that isn't timed; First checkpoint	106323 µs; Second checkpoint	208185 µs; Total duration	314508 µs; ```. It can also be used to run the same code multiple times, reporting the individual and average times:. ```groovy; var timeit = new Timeit(); .summarizeCheckpoints(); .checkpointAndRun(""My calculation"", () -> mySlowCalculation(), 10); ; println timeit.stop() // Important to stop to get time for last checkpoint. void mySlowCalculation() {; def x = 2 + 2; Thread.sleep(50); }; ```. Output:; ```; My calculation (1)	56 ms; My calculation (2)	55 ms; My calculation (3)	54 ms; My calculation (4)	55 ms; My calculation (5)	61 ms; My calculation (6)	52 ms; My calculation (7)	55 ms; My calculation",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1078:2626,checkpoint,checkpoint,2626,https://qupath.github.io,https://github.com/qupath/qupath/pull/1078,1,['checkpoint'],['checkpoint']
Availability," cores to be displayed too, then some modification would be required... although then *File &rarr; Export TMA data* is usually a better choice in most cases. Note, here I set the output format to JPEG to get smaller file sizes. The original script wrote ImageJ TIFF images, which used lossless compression and had more image properties set (e.g. pixel sizes in microns) - at the cost of writing much larger files. If you want similar ImageJ TIFFs, but with the overlay drawn on top, then the changes are a bit more awkward and require going more into the details or how images are handled by Java and QuPath. The following should work (at least for RGB images):. ```groovy; ...; try {; // Read the image region; ImagePlus imp = server.readImagePlusRegion(request).getImage(false). // Get the hierarchy overlay (could put at top of the file); def hierarchyOverlay = getCurrentViewer().getOverlayLayer(qupath.lib.gui.viewer.overlays.HierarchyOverlay.class). // Paint the overlay (except TMA grid); def img = imp.getProcessor().getBufferedImage(); def g2d = img.createGraphics(); g2d.scale(1.0/downsample, 1.0/downsample); g2d.translate(-request.getX(), -request.getY()); g2d.setClip((int)request.getX(), (int)request.getY(), (int)request.getWidth()+2, (int)request.getHeight()+4); hierarchyOverlay.paintOverlay(g2d, request, downsample, null, true); g2d.dispose(); imp.setProcessor(new ij.process.ColorProcessor(img)). // Get a suitable file name; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); // Create an output file; File file = new File(dirOutput, name); // Save the image; IJ.save(imp, file.getAbsolutePath()); // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; ...; ```. Because the display settings are obtained from the current viewer, then settings applied there should be maintained (including the use of measurement maps to visualize cell features in context).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/44#issuecomment-273680833:2474,down,downsample,2474,https://qupath.github.io,https://github.com/qupath/qupath/issues/44#issuecomment-273680833,4,['down'],['downsample']
Availability," downsample levels, images can display a 1 pixel-width black column on the right edge. *To Reproduce*; 1. Open the [GTEX-12584-1526 image](https://brd.nci.nih.gov/brd/imagedownload/GTEX-12584-1526; ). This image has levels with downsamples 1, 4, and 16.; 2. Check the right edge of the image. No black column, everything is normal.; 3. Click on File, Export images..., Original pixels, JPEG (or PNG) and downsample of 32.; 4. Check the right edge of the produced image. There is a black column of width 1. *Expected behavior*; No black column on any downsample. *Desktop:*; - OS: macOS and Linux, so probably not OS dependant.; - QuPath Version: 0.6.0-SNAPSHOT. *Additional context*; The problem occurs in the [AbstractTileableImageServer.readRegion()](https://github.com/qupath/qupath/blob/76415104d0653c674716d69a1ecb51e59dae0e83/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L266) function. When requesting an image with downsample 32:; * A black image of width 1432 (=`round(imageWidth/32)`) is created ([here](https://github.com/qupath/qupath/blob/76415104d0653c674716d69a1ecb51e59dae0e83/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L302C4-L302C17)).; * All tiles with downsample 16 (because it's the lowest resolution) are retrieved ([here](https://github.com/qupath/qupath/blob/76415104d0653c674716d69a1ecb51e59dae0e83/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L275C3-L275C13)).; * Images corresponding to the above tiles are drawn to the above black image ([here](https://github.com/qupath/qupath/blob/76415104d0653c674716d69a1ecb51e59dae0e83/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L328)). The problem is that the resulting image of downsample 32 is of width 1432, which corresponds to pixels 0 to **45824** (=`1432*32`) of the full resolution image on the x-axis, while the width of the image of downsample 16 is 2863, whic",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1527:1005,down,downsample,1005,https://qupath.github.io,https://github.com/qupath/qupath/issues/1527,1,['down'],['downsample']
Availability," each tile as a separate image.; *; * Two things are notable about this script:; * - The location from which each tile was obtained (in terms of pixel values in the full-resolution image); * is encoded in the filename; * - ImageJ is used to write the output images; *; * The significance of using ImageJ to write TIFF images (rather than, say, ImageIO to write PNGs or JPEGs); * is that this enables the storage of additional metadata, i.e. pixel sizes and coordinates.; */. import ij.IJ; import ij.ImagePlus; import qupath.imagej.images.servers.ImagePlusServer; import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.lib.images.servers.ImageServer; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QP. import java.awt.image.BufferedImage. /*; * Adjustable parameters; */; int tileWidthPixels = 5000 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 10 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput = ""G:\\Image Dump"" // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!. int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 1000 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeS",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/85#issuecomment-315148862:1037,down,downsample,1037,https://qupath.github.io,https://github.com/qupath/qupath/issues/85#issuecomment-315148862,2,"['Down', 'down']","['Downsampling', 'downsample']"
Availability," following code to adapt to v2. The function is to export .tif files of various sizes into the project folder. . The code is here: ; ```groovy; //Exporting Image as .tif files; import ij.IJ; import ij.ImagePlus; import qupath.lib.gui.ImageWriterTools; import qupath.imagej.helpers.IJTools. def imp = IJTools.convertToImagePlus(server, request).getImage(). import qupath.lib.images.servers.ImageServer; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QP. import java.awt.image.BufferedImage. /*; * Adjustable parameters; */; int tileWidthPixels =1500 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 70 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput =('D:/QUPATH 2 - AT8/Exported Images' ) // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!. int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getP",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309:1155,error,errors,1155,https://qupath.github.io,https://github.com/qupath/qupath/issues/309,1,['error'],['errors']
Availability," happy to contribute it if so). ## Windows. The self-contained builds provided by OpenSlide work well here, as do binaries from my forked repo, with the proviso that we need to load them from a path rather than a JAR, as the JNA library loading code will not find `winpthreads` or `ssp` if we try to load from a jar on the classpath. ## Mac. x86 and M1 builds using the same meson wrap system as Windows seem to work fairly well at first glance (see [x86](https://github.com/alanocallaghan/openslide-jna/actions/runs/6175143420/job/16761349958) and [m1](https://app.circleci.com/pipelines/github/alanocallaghan/openslide-jna/26/workflows/aafe7473-6e23-4897-91bd-b66d8456e2ce/jobs/26) build test runs). However, as Pete has pointed out, they have a number of weird dependencies, some of which are homebrew directories:. ```; otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.0.0); 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1953.255.0); 	/opt/homebrew/opt/xz/lib/liblzma.5.dylib (compatibility version 10.0.0, current version 10.4.0); 	/usr/lib/libiconv.2.dylib (compatibility version 7.0.0, current version 7.0.0); 	/opt/homebrew/opt/pcre2/lib/libpcre2-8.0.dylib (compatibility version 12.0.0, current version 12.2.0); 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1953.255.0); 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.30.112); 	/usr/lib/libresolv.9.dylib (compatibility version 1.0.0, current version 1.0.0); 	/Syste",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:1746,Down,Downloads,1746,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495,1,['Down'],['Downloads']
Availability," match the declared main qupath.QuPath. > :jfxNative=-> 98% EXECUTING [18s]a main class groovy.ui.GroovyMain that does not match the declared main qupath.QuPath. The jar jars\openslide-3.4.1_2.jar has a main class org.openslide.gui.Demo that does not match the declared main qupath. BUILD SUCCESSFUL in 27sCUTING [18s]. 41 actionable tasks: 3 executed, 38 up-to-date181\jre\bin\java, -version]. C:\Users\marsh\Documents\GitHub\qupath>. . > :jfxNative=-> 98% EXECUTING [18s]al\Temp\iconswap1913588824785848432.exe, C:\Users\marsh\AppData\Local\Temp\fxbundler5. 936450042917729024\windows\QuPath.ico, C:\Users\marsh\Documents\GitHub\qupath\build\jfx\native\QuPath\QuPath.exe]. > :jfxNative=-> 98% EXECUTING [18s]ata\Local\Temp\fxbundler5936450042917729024\windows\QuPath.ico. Executable File Name: C:\Users\marsh\Documents\GitHub\qupath\build\jfx\native\QuPath\QuPath.exe. > :jfxNative=-> 98% EXECUTING [18s]. > :jfxNative. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Donnerstag, 9. August 2018 00:57; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . Strange... it suggests the cause is the one that I expected (not being able to load native libraries), but I'm not sure why it's happening here. You should be able to just delete the directory containing everything downloaded from GitHub; if you want to check where it is, inside GitHub Desktop you can choose Repository → Show in Explorer. Then you can start again with https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#building-qupath. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-411636630> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t735brx4t4Ayw9u_bSbXvNoYf3AKks5uO8EcgaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t1sYPUju1CKEzlZQaC88wVg1AcDuks5uO8EcgaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-414648451:3392,down,down,3392,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414648451,2,['down'],"['down', 'downloaded']"
Availability," o, n) -> {; 					if (n.doubleValue() == columnImage.getPrefWidth()); 						return;; 					if (hasOverlay); 						columnOverlay.setPrefWidth(n.doubleValue());; 					table.refresh();; 				});; 				columns.add(columnImage);; 			}. 			if (hasOverlay) {; 				columnOverlay.setCellValueFactory(new Callback<CellDataFeatures<TMAEntry, TMAEntry>, ObservableValue<TMAEntry>>() {; 					@Override; 					public ObservableValue<TMAEntry> call(CellDataFeatures<TMAEntry, TMAEntry> p) {; 						return p.getValue().valueProperty();; 					}; 				});; 				columnOverlay.setCellFactory(c -> new ImageTableCell(imageCache, true));; 				columnOverlay.maxWidthProperty().bind(maxSmallWidth);; 				columnOverlay.widthProperty().addListener((v, o, n) -> {; 					if (n.doubleValue() == columnOverlay.getPrefWidth()); 						return;; 					if (hasImages); 						columnImage.setPrefWidth(n.doubleValue());; 					table.refresh();; 				});; 				columns.add(columnOverlay);; 			}; 		}; ```. This might be better for now! Since it works in both cases:; 1. If both ```columnImage``` and ```columnOverlay``` are available.; 2. When one of the ```columnImage``` or ```columnOverlay``` is not available. I discovered this because when TMA Data is exported for the multichannel image (non-RGB) it is exported as TIF. The TMA viewer only seems to load the image if it is saved as .jpg for the ```columnImage``` column. For the overlay it load either .jpg or .png. Here is TMA Data exporter code that exports the images:; https://github.com/petebankhead/qupath/blob/fca7fa5fd9efd815f4c317705fbe2a0f9c39270f/qupath-gui-fx/src/main/java/qupath/lib/gui/tma/TMADataIO.java#L107; ```java; 	String coreExt = imageData.getServer().isRGB() ? "".jpg"" : "".tif"";; ```. and Here is TMA Data Viewer code that loads the images:; https://github.com/petebankhead/qupath/blob/fca7fa5fd9efd815f4c317705fbe2a0f9c39270f/qupath-gui-fx/src/main/java/qupath/lib/gui/tma/TMASummaryViewer.java#L1714; ```java; 	File fileImage = new File(dirData, name + "".jpg"");; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1096#issuecomment-1292310472:2369,avail,available,2369,https://qupath.github.io,https://github.com/qupath/qupath/pull/1096#issuecomment-1292310472,2,['avail'],['available']
Availability," on the cells in the second area, and then restore the cells that were removed. ```; //Load the LuCa object data before running!; resolveHierarchy() //let's make sure all of the cells are child objects of their annotations!; tumorAnnos = getAnnotationObjects().findAll{it.getPathClass() == getPathClass(""Tumor"")}; tumorCells = getCellObjects().findAll{it.getParent().getPathClass() == getPathClass(""Tumor"")}. //Remove the tumor annotations and their cells; removeObjects(tumorAnnos,false); removeObjects(tumorCells,false); //Analyze->Spatial analysis->Detect centroid distances 2D. detectionCentroidDistances(true); //Add everything back, and make sure the hierarchy is resolved!; addObjects(tumorAnnos); addObjects(tumorCells); resolveHierarchy(); ```. The code works most of the time. Probably 70%? I lack my usual variety of computers to test out whether it is based on my computer - but I do have a project file hosted online I can make available to run the test. Errors include: Null pointer exception popup in the lower right,. INFO: Starting script at Sat Jun 05 20:54:28 CDT 2021; WARN: Resolving hierarchy that contains 3 annotations and 1236 detections - this may be slow!; ERROR: QuPath exception; WARN: Resolving hierarchy that contains 3 annotations and 1236 detections - this may be slow!; INFO: Script run time: 0.25 seconds; The log file is not hugely informative on that one. Alternatively, I sometimes see a TMA core error. ```; ERROR: QuPath exception: Cannot invoke ""qupath.lib.objects.PathObject.isTMACore()"" because ""child"" is null; at qupath.lib.gui.panes.PathObjectHierarchyView$PathObjectTreeItem.getChildren(PathObjectHierarchyView.java:516); at qupath.lib.gui.panes.PathObjectHierarchyView$PathObjectTreeItem.isLeaf(PathObjectHierarchyView.java:544); at javafx.controls/javafx.scene.control.skin.TreeCellSkin.updateDisclosureNode(Unknown Source); at javafx.controls/javafx.scene.control.skin.TreeCellSkin.updateChildren(Unknown Source); at javafx.controls/javafx.scene.cont",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/744:1438,Error,Errors,1438,https://qupath.github.io,https://github.com/qupath/qupath/issues/744,1,['Error'],['Errors']
Availability, r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec000 r--p 00000000 fd:03 721040943 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans.ttf; 7f79434ec000-7f79434f0000 r-xp 00000000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79434f0000-7f79436ef000 ---p 00004000 00:2f 230,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:17133,down,downloads,17133,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability," replicate this error by typing the following into script editor at the beginning of a script with more than 100 lines of code:. String test = "". Using Windows 10 and QuPath version 0.2.0-m2. The error window pops up with ""Java.lang.StackOverflowError"" and the log that appears when the editor crashes is: ; INFO: Bio-Formats version 6.0.1; INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: QuPath exception; at java.base/java.util.regex.Pattern$GroupTail.match(Pattern.java:4850); at java.base/java.util.regex.Pattern$BranchConn.match(Pattern.java:4700); at java.base/java.util.regex.Pattern$CharProperty.match(Pattern.java:3927); at java.base/java.util.regex.Pattern$Branch.match(Pattern.java:4736); at java.base/java.util.regex.Pattern$GroupHead.match(Pattern.java:4791); at java.base/java.util.regex.Pattern$Loop.match(Pattern.java:4928). Those 5 lines are then repeated about 100 times. ERROR: QuPath exception; at org.fxmisc.richtext.ParagraphText.checkWithinParagraph(ParagraphText.java:259); at org.fxmisc.richtext.ParagraphText.getCaretBounds(ParagraphText.java:198); at org.fxmisc.richtext.ParagraphBox.getCaretBounds(ParagraphBox.java:193); at org.fxmisc.richtext.GenericStyledArea.showCaretAtTop(GenericStyledArea.java:1289); at org.fxmisc.richtext.GenericStyledArea.nextPage(GenericStyledArea.java:1119); at org.fxmisc.richtext.GenericStyledAreaBehavior.lambda$static$10(GenericStyledAreaBehavior.java:86); at org.fxmisc.wellbehaved.event.template.InputMapTemplate.lambda$consume$0(InputMapTemplate.java:221); at org.fxmisc.wellbehaved.event.template.PatternActionTemplate.lambda$null$1(InputMapTemplate.java:425); at java.base/java.util.Optional.map(Optional.java:265); at org.fxmisc.wellbehaved.event.template.PatternActionTemplate.lambda$getInputHandlerTemplateMap$2(InputMapTemplate.java:425); at org.fxmisc.wellbehaved.event.template.InputHandlerTemplateMap.lambda$sequence$0(InputHandlerTe",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/314:1145,ERROR,ERROR,1145,https://qupath.github.io,https://github.com/qupath/qupath/issues/314,1,['ERROR'],['ERROR']
Availability," running cell detection using script editor, errors are generated for the final tiles **IF** the entire shape is not a perfect rectangle. If using stardist script for cell detection, errors are generated before any detections. **Can avoid both by manual annotation** with a polygon tool to follow image boundaries -> so not sure if a crucial bug. Carried over from last release to v5. **To Reproduce**; Steps to reproduce the behavior:; 1. Ctl+Shift+A; 2. Run cell detection as a script:; ```; setImageType('FLUORESCENCE');; selectAnnotations();; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', '{""detectionImage"":""DAPI"",""requestedPixelSizeMicrons"":0.1,""backgroundRadiusMicrons"":4.0,""backgroundByReconstruction"":true,""medianRadiusMicrons"":1.0,""sigmaMicrons"":2.5,""minAreaMicrons"":11.0,""maxAreaMicrons"":400.0,""threshold"":1000.0,""watershedPostProcess"":true,""cellExpansionMicrons"":5.0,""includeNuclei"":true,""smoothBoundaries"":true,""makeMeasurements"":true}'); ```; 4. Error:; ```; ERROR: Error running plugin: java.lang.NullPointerException: Cannot invoke ""java.awt.image.BufferedImage.getSampleModel()"" because ""img"" is null; java.util.concurrent.ExecutionException: java.lang.NullPointerException: Cannot invoke ""java.awt.image.BufferedImage.getSampleModel()"" because ""img"" is null; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractTaskRunner.awaitCompletion(AbstractTaskRunner.java:147); at qupath.lib.plugins.AbstractTaskRunner.runTasks(AbstractTaskRunner.java:117); at qupath.lib.gui.TaskRunnerFX.runTasks(TaskRunnerFX.java:106); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:147); at qupath.lib.gui.QuPathGUI.runPlugin(QuPathGUI.java:2245); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:248); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:270); at org.codehaus.groovy.vmplugin.v8.IndyInterface.fromCache(IndyInterface.java:321); at Qu",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1443:1126,Error,Error,1126,https://qupath.github.io,https://github.com/qupath/qupath/issues/1443,3,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability," solution, it is worth considering inelegant ones. I can think of a few possibilities, although how feasible they are would depend upon how many cores you need to analyze, what outputs you require, and just how different the cores are. ---. Here are some ideas (not necessarily all good ones):. 1. You could annotate regions of interest and detect cells only inside your annotations - no need for a classifier at all. This would mean you need to draw an awful lot of annotations (one or more for every core), but at least you are in full control of what is annotated. 2. You could train up a classifier for all the ‘similar-enough-looking’ cores on one slide, and save that classifier. For all the cores that aren’t handled well enough, you could go through and set them as ‘Missing’. When you export your results, you need to be careful to ignore all the ‘Missing’ cores.; Then, you can duplicate your project, and delete all your annotations. You can go through and set all the ‘Missing’ cores to be available, and all the available cores to be ‘Missing’. Then train up a new classifier, and export the results again.; This way you can use multiple classifiers. It’s not very elegant at all, and I’m not sure that I would recommend it… but it is an option.; > If you try this, you could toggle the ‘Missing’ status in a script or manually. If you do it manually, I’d suggest opening the ‘Hierarchy’ tab on the left of the screen, and selecting the first core. Make sure you have clicked somewhere inside the main viewer to activate it, then use the arrow keys to move around the TMA grid, and press ‘backspace’ to toggle the ‘Missing’ status. Because the default settings mean that selected cores are shown as yellow, rather than dark/light blue, having the ‘Hierarchy’ tab open is useful to show you whether the selected core is missing or not. 3. You could do something similar to the above, but set the ‘missing’ status before cell detection… so you end up without any cells in the cores that sho",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/57#issuecomment-288818401:1468,avail,available,1468,https://qupath.github.io,https://github.com/qupath/qupath/issues/57#issuecomment-288818401,2,['avail'],['available']
Availability," text on it.; - [x] It's confusing that there's a list, but nothing can be selected. If I click on the list, the top item can take the focus, but nothing else.; - [x] I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start; I think centred vertical alignment for the version and buttons would look bette; - [x] The description text would ideally be lighter in color (e.g. using opacity); - [x] The purpose of the 'remove' and 'update' buttons is unclear - especially for built-in extension that can't be changed. ; - [x] Does update 'Check for updates' or actually update?; - [x] I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. > I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start;. I'd be more inclined to even do ""version: 0.1.0"" rather than having column headers that would be largely redundant. > Does update 'Check for updates' or actually update?. It checks for updates; if one is available, it asks if you'd like to download it. If not, it pops up a notification saying it's up-to-date. > I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. Yes, similarly it asks if you want to download before going ahead. ![Screenshot from 2023-10-02 22-37-08](https://github.com/qupath/qupath/assets/10779688/b0404e3f-320d-4fbf-b990-3cad161dee24). Note that here the top list is focusable, the bottom isn't. The titles are obviously WIP (see below). Same with the extensions dir button not being full-width (although I don't truly love that personally, it's up to you). > Finally, I think splitting the lists at the top into different sections would make sense, if they have different purposes. Rather than 'servers' and 'extensions', they could be split between 'Built-in extensions' and 'Optional exten",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490:1436,redundant,redundant,1436,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490,1,['redundant'],['redundant']
Availability," that 'Repository' could have; - [x] There should be some separation between the owner text field and repository label; - [x] After clicking 'Add extension' once, the other options appear - but then clicking it again has no effect. So it's not clear what exactly is the purpose of the button, or if it has the right text on it.; - [x] It's confusing that there's a list, but nothing can be selected. If I click on the list, the top item can take the focus, but nothing else.; - [x] I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start; I think centred vertical alignment for the version and buttons would look bette; - [x] The description text would ideally be lighter in color (e.g. using opacity); - [x] The purpose of the 'remove' and 'update' buttons is unclear - especially for built-in extension that can't be changed. ; - [x] Does update 'Check for updates' or actually update?; - [x] I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. > I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start;. I'd be more inclined to even do ""version: 0.1.0"" rather than having column headers that would be largely redundant. > Does update 'Check for updates' or actually update?. It checks for updates; if one is available, it asks if you'd like to download it. If not, it pops up a notification saying it's up-to-date. > I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. Yes, similarly it asks if you want to download before going ahead. ![Screenshot from 2023-10-02 22-37-08](https://github.com/qupath/qupath/assets/10779688/b0404e3f-320d-4fbf-b990-3cad161dee24). Note that here the top list is focusable, the bottom isn't. The titles are obviously WIP (see below). Same with the extensions dir button not",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490:1168,Down,Download,1168,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490,1,['Down'],['Download']
Availability," that I can round or floor when scaling up, and then round or floor when scaling down, but I wasn't completely sure which I should be doing so I created a quick Python simulation to test what happens: https://gist.github.com/petebankhead/2d4a21cb69f3b68c8f8fa14475723647. Based on this, it seems I need to round in both directions... which was maybe a predictable conclusion for the more mathematically confident, but I wasn't sure of it's what QuPath does internally* and we can't count on users necessarily knowing that. (*However*, note that if the downsample is < 1 then all the methods fail...). I think it would be nice to resolve the ambiguity somehow, although adding an extra method; ```java; public T readLevel(int level, int x, int y, int width, int height, int z, int t);; ```; looks like a horrible explosion of ints. A possibly-simpler alternative might be to support something like this:; ```java; public T readScaledRegion(double downsample, int outputX, int outputY, int outputWidth, int outputHeight, int z, int t);; ```; where the coordinates are defined according to the output image, but the downsample isn't fixed to *have* to be a pyramidal level. Thinking about it, that could potentially be implemented more simply with another default method added to the interface that ultimately just called `readRegion`. The main trouble is that I don't know what to call the method. I'll keep thinking and try to add something to this PR.... *- I think that QuPath is doing the right thing in most places (based on [this](https://github.com/qupath/qupath/blob/053efeff6d941e7a73beab5445cf0d6238ed97b7/qupath-core/src/main/java/qupath/lib/images/servers/TileRequest.java#L142) and [this](https://github.com/qupath/qupath/blob/053efeff6d941e7a73beab5445cf0d6238ed97b7/qupath-core/src/main/java/qupath/lib/images/servers/TileRequest.java#L142)). But I strongly suspect the [`TileExporter`](https://github.com/qupath/qupath/blob/9eaf034e2cd0325d38967bde5ac43900ddc15e3f/qupath-core/src/main/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072#issuecomment-1278540089:2024,down,downsample,2024,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072#issuecomment-1278540089,2,['down'],['downsample']
Availability," this may not be the issue. I am going to paste the (very long) error message. I can trim this down and get rid of the OpenCV and OpenSlide parts if it's too long. . ```; [bl@QuPath]$ ./QuPath&; [1] 27357; [bl@QuPath]$ 02:39:33.387 [main] [INFO ] qupath.QuPath - Launching QuPath with args: ; 02:39:34.264 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Tile cache size: 624.00 MB; 02:39:37.713 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/bl/ip/QuPath/extensions; 02:39:37.715 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/bl/ip/QuPath/extensions/jep.jar; OpenJDK 64-Bit Server VM warning: You have loaded library /home/bl/ip/QuPath/app/libopencv_java310.so which might have disabled stack guard. The VM will try to fix the stack guard now.; It's highly recommended that you fix the library with 'execstack -c <libfile>', or link it with '-z noexecstack'.; 02:39:37.931 [JavaFX Application Thread] [ERROR] qupath.opencv.OpenCVExtension - Unable to load OpenCV libraries!; java.lang.UnsatisfiedLinkError: /home/bl/ip/QuPath/app/libopencv_java310.so: libavcodec-ffmpeg.so.56: cannot open shared object file: No such file or directory; 	at java.lang.ClassLoader$NativeLibrary.load(Native Method); 	at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941); 	at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857); 	at java.lang.Runtime.loadLibrary0(Runtime.java:870); 	at java.lang.System.loadLibrary(System.java:1122); 	at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:60); 	at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:73); 	at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:120); 	at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1092); 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:633); 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:418); 	at qupath.lib.gui.QuPathApp.start(QuPathApp.jav",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262870405:1292,ERROR,ERROR,1292,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262870405,1,['ERROR'],['ERROR']
Availability," tricky bit is not breaking everything else... like parts of paquo or warpy, and all existing scripts that need pixels. The approach I've taken here is to mark `readBufferedImage` as deprecated (and planned for removal), while also providing a default implementation that calls `readRegion`. These means that new classes won't need to implement the deprecated method. Then - and here it gets awkward - I've tried to allow older `ImageServer` implementations to still work by *also* providing a default implementation of `readRegion`. It will throw an `UnsupportedOperationException` *unless* it is called from a subclass that overrides the `readBufferedImage` method... in which case it will fall back to using that. The first time that happens, a warning will be logged. You can see the code at https://github.com/petebankhead/qupath/blob/server/qupath-core/src/main/java/qupath/lib/images/servers/ImageServer.java#L213. The outcome is that, with the current PR, *all* of these should work in a Groovy script:; ```groovy; def server = getCurrentServer(); double downsample = 100.0; def request = RegionRequest.createInstance(server, downsample); println server.readBufferedImage(request); println server.readRegion(request); println server.readRegion(downsample, 0, 0, server.getWidth(), server.getHeight()); println server.readRegion(downsample, 0, 0, server.getWidth(), server.getHeight(), 0, 0); ```; where the `readBufferedImage` call logs a warning *once* (for each `ImageServer` class) and the rest don't. My tentative plan would be to; * include this in QuPath v0.4.0 (hopefully later this month); * remove the default implementation of `readRegion` in v0.5.0, forcing any subclass of `ImageServer` to be updated to work... but still allowing scripts to use `readBufferedImage`, with the deprecation message logged; * remove `readBufferedImage` later, e.g. in v0.6.0. As far as I can tell, everything still works in QuPath itself - but I don't know how your projects might be affected. What do",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072:2947,down,downsample,2947,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072,1,['down'],['downsample']
Availability," when the scripting is complete, inviting the user to reload the data to see any changes:. <img width=""375"" alt=""Prompt to reload"" src=""https://user-images.githubusercontent.com/4690904/196366065-23f2a1f7-0146-41a9-a8ba-367d11605d12.png"">. ## New `ScriptAttributes` to access file and batch info. Several [attributes](https://github.com/qupath/qupath/commit/a1d40fb6647454a4500cb305d19e2f8698caa2fa) are now set when scripts are run, which can be queried in Groovy via `getProperty(attribute)`. Examples:. ```groovy; // The number of images being processed in batch (e.g. with 'Run for project'); int batchSize = getProperty(ScriptAttributes.BATCH_SIZE). // The 0-based index for the current image being processed; int batchIndex = getProperty(ScriptAttributes.BATCH_INDEX). // Query if this is the last image being processed in a batch; boolean batchLast = getProperty(ScriptAttributes.BATCH_LAST). // The file path for the script file (or null if not available); // (Note that the file contents may differ from the script if there are unsaved changes); String filePath = getProperty(ScriptAttributes.FILE_PATH); ```. The inspiration is from https://github.com/qupath/qupath/issues/1029. These changes make useful things possible, e.g.; * take action to notify the user at the end of long-running batch processing; * access other scripts or files relative to the script file itself. ## New `Timeit` class. The new `Timeit` class simplifies reporting the length of time it takes scripts (or parts of scripts) to run. Simple use involves starting a `Timeit` early, calling `start()`, and printing it whenever you want:; ```groovy; def timeit = new Timeit().start(); Thread.sleep(100); println timeit; Thread.sleep(200); println timeit; ```; Output:; ```; Time since start	106 ms; Time since start	314 ms; ```. It's also possible to have a bit more control, setting named checkpoints along the way:. ```groovy; var timeit = new Timeit(); .microseconds(); .start(""First checkpoint""); ; println 'Doing som",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1078:1612,avail,available,1612,https://qupath.github.io,https://github.com/qupath/qupath/pull/1078,1,['avail'],['available']
Availability," will cause data to be lost, but I do have the strong feeling it should not brake the file ;) I hope you can agree on that. . I tried your approach and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(Composi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/512#issuecomment-640534382:1041,ERROR,ERROR,1041,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382,1,['ERROR'],['ERROR']
Availability," your files. Without actual specifics (e.g. an example file), I don't see why you should assume the 'bug' is in QuPath and not elsewhere. OpenSlide only sets the bounds for a subset of file formats, so most shouldn't be affected anyway. I've only seen it for scn and mrxs, which are the two formats mentioned in the commit that makes the bounds available: https://github.com/openslide/openslide/commit/421cb647acdc8fe35e33c2683949f5098925c8ac. Note my comment above about 'cropping' being arguably the same as 'not padding'... one could argue that QuPath simply removes the padding that OpenSlide has added, because [the bounds define where there is pixel data](https://github.com/openslide/openslide/issues/424#issuecomment-1382416341). QuPath aims to read the pixels from an image consistently, regardless of whether OpenSlide is used or not. As a specific example from my side, see the image `Leica-1.scn` from the OpenSlide freely-distributable data:; https://openslide.cs.cmu.edu/download/openslide-testdata/Leica/. Screenshots below show the image with a full image annotation within QuPath. ## Bio-Formats; <img width=""939"" alt=""SCN-Bio-Formats"" src=""https://github.com/qupath/qupath/assets/4690904/039b2449-5c20-4b93-a4af-d65928324a50"">. ## OpenSlide (default, cropped to bounds); <img width=""941"" alt=""SCN-OpenSlide"" src=""https://github.com/qupath/qupath/assets/4690904/771af2d0-2dcb-44ee-95e6-31ff62f0f7e2"">. ## OpenSlide (with `--no-crop` arg); <img width=""941"" alt=""SCN-OpenSlide-no-crop"" src=""https://github.com/qupath/qupath/assets/4690904/3cf52a48-ca91-4dff-8eb4-7e299d851b3e"">. The size is identical when read using QuPath v0.4.3 when using either OpenSlide or Bio-Formats by default (no extra arguments passed to either). Explicitly passing the `--no-crop` arg causes QuPath to ignore what OpenSlide considers to be bounds, and generate a much larger image with extreme padding that causes both much higher memory use and can thwart processing tasks like thresholding or pixel classif",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1278#issuecomment-1631106660:1205,down,download,1205,https://qupath.github.io,https://github.com/qupath/qupath/issues/1278#issuecomment-1631106660,1,['down'],['download']
Availability,"![image](https://user-images.githubusercontent.com/52460788/71204451-24f4ee80-226e-11ea-85e3-745eb9e8fe69.png). When I try to open projects that I have already successfully worked on using the 0.2.0-m2 milestone, the project itself will open but I cannot open any of the images from the project. I figured maybe the milestone version was outdated and so I tried downloading milestone 8 but now my project will not open at all and I get the message shown above. What can I do to access my old projects?",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/388:362,down,downloading,362,https://qupath.github.io,https://github.com/qupath/qupath/issues/388,1,['down'],['downloading']
Availability,"![image](https://user-images.githubusercontent.com/60140243/72807082-40815980-3c5f-11ea-8429-ef7339054b88.png). I have similar error, the drop option doesn't work and when I just try to open image this is message I get. In previous version when bioformats weren't loaded in QuPath I could open vsi files",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/387#issuecomment-576671751:127,error,error,127,https://qupath.github.io,https://github.com/qupath/qupath/issues/387#issuecomment-576671751,1,['error'],['error']
Availability,"![qpath error](https://user-images.githubusercontent.com/93468785/139575561-68c59679-13b1-47bb-ac60-265c55da2c7a.jpg). Good morning,. Qpath won't open some of my JPEG files. When I try to do so, an out of memory error pops up. I have tried to decrease the number of parallel threads as suggested, but the issue persists. The involved files are larger than 100 MB, have been compressed and sent to me via TransferNow. Thank you for your attention.; Gianluca",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/834:8,error,error,8,https://qupath.github.io,https://github.com/qupath/qupath/issues/834,2,['error'],['error']
Availability,"""C:\Program Files\QuPath\app\QuPathApp.jar"" -image ""D:\\QMDownload\\6\\[failed_handOK]Leica_scn\\Leica-Fluorescence-1.scn"" -script ""D:\\QMDownload\\6\\Tiling_a_whole_slide_image.groovy"" -classpath ""C:\\Users\\rmd\\QuPath\\extensions"". The error is still the same",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/260#issuecomment-457918978:239,error,error,239,https://qupath.github.io,https://github.com/qupath/qupath/issues/260#issuecomment-457918978,1,['error'],['error']
Availability,"## Bug report - 'Add intensity features' not working. I am trying to calculate the intensity feature for my image. I selected a ROI and divided it into tiles, trimming the tiles to ROI. then I select the detections (tiles) and I try to run Analyze->Calculate features->Add intensity features. I select the channel of interest and all the features (Mean, Std dev, min max and median), then I run the analysis for the selected objects (tiles). Now, quite often, it is not possible to get the measurement for all my tiles, but only for few initial tiles and then the calculation stops (which I can assess in the 'show detection measurements' table. . I am running QuPath on a macOS. . Do you know what I can do to fix this error? . ![Screenshot 2023-08-15 at 09 44 06](https://github.com/qupath/qupath/assets/142295421/d334a749-9599-4d52-bc49-6728835240a6)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1290:720,error,error,720,https://qupath.github.io,https://github.com/qupath/qupath/issues/1290,1,['error'],['error']
Availability,"## Bug report. ### Describe the bug; Parsing timepoint metadata from images can be tricky, but currently QuPath seems worse than it needs to be. Values provided by ImageJ or Bio-Formats servers seem wrong, or can even through exceptions. ### To Reproduce; Steps to reproduce the behavior:; 1. Download the [`mitosis.tif` sample image from ImageJ](https://imagej.net/ij/images/); 2. Create a project; 3. Import the image, using either ImageJ or Bio-Formats as the provider; 4. Run the following script. ```groovy; def server = getCurrentServer(). for (int t = 0; t < server.nTimepoints(); t++) {; println server.getMetadata().getTimepoint(2) ; }; ```. With Bio-Formats, I get that the timepoints are all `0`.; With ImageJ, I get that they are `NaN`. However if I open the image in Fiji I can confirm that both ImageJ and Bio-Formats *can* read the time information, so the bug is definitely on QuPath's side. ### Expected behavior; Timepoint information is available (and meaningful) wherever possible. ### Desktop (please complete the following information):; - OS: All; - QuPath Version: v0.5.1 (and earlier). ### Additional context; A warning is logged that Bio-Formats' timepoint parsing isn't reliable... because I didn't understand how it worked when writing that code originally. It probably hasn't matter because QuPath isn't used with time series data very much.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1628:293,Down,Download,293,https://qupath.github.io,https://github.com/qupath/qupath/issues/1628,3,"['Down', 'avail', 'reliab']","['Download', 'available', 'reliable']"
Availability,"## Bug report. ### Describe the bug; Reported with videos at https://forum.image.sc/t/an-issue-with-the-polygon-annotation-tool/100797. ### To Reproduce. #### The easy way; Run this script and then try interacting with a viewer; ```groovy; getCurrentViewer().setSpaceDown(false); ```. #### The more realistic way; 1. Create a viewer grid containing at least two viewers with open images; 2. Click within one viewer, and hold down spacebar; 3. Click within another viewer, and only *then* release the spacebar; 4. Return to the first viewer, and try using drawing tools (e.g. polygon, rectangle). ### Expected behavior; Using the spacebar to temporarily activate the `Move` tool works across multiple viewers.; The spacebar status properly supports. ### Screenshots; See the linked forum post. ### Desktop (please complete the following information):; - OS: All; - QuPath Version: v0.5.1 (and earlier)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1610:425,down,down,425,https://qupath.github.io,https://github.com/qupath/qupath/issues/1610,1,['down'],['down']
Availability,"## Bug report. ### Describe the bug; The script editor in v0.6.0-rc3 has lost a nice feature of automatically indenting within code blocks and adding closing parentheses. ### Expected behavior; See https://forum.image.sc/t/feedback-on-qupath-v0-6-0-rc2/103187/30 for details. ### Desktop (please complete the following information):; - OS: All; - QuPath Version: v0.6.0-rc3. ### Additional context; I'm pretty sure I introduced this when refactoring to make a 'mini' script editor available to the ImageJ script runner, shortly before I2K.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1692:481,avail,available,481,https://qupath.github.io,https://github.com/qupath/qupath/issues/1692,1,['avail'],['available']
Availability,"## Bug report. ### Describe the bug; When using complicated 'polygon' ROIs, a binary mask in QuPath can differ _a lot_ from a binary mask generated in ImageJ. This means that code or scripts using ImageJ for processing could potentially give unexpected results, if a mask is generated on the ImageJ side. Some observations:; * The QuPath mask *is* consistent with what is shown in QuPath's viewer, and the ImageJ mask *is* consistent with ImageJ's behavior - so neither needs to be 'wrong'.; * A potential explanation is the winding rule: ImageJ uses [`WIND_EVEN_ODD`](https://github.com/imagej/ImageJ/blob/7d8d18b0dd78582cbc7ebf3cde745d5a8ac32007/ij/gui/ShapeRoi.java#L355), while QuPath doesn't appear to specify a rule - and Java's default is [`WIND_NON_ZERO`](https://docs.oracle.com/en/java/javase/21/docs/api/java.desktop/java/awt/geom/Path2D.Double.html#%3Cinit%3E()).; * The problem affects `PolygonROIs` with self-intersections, which would be invalid in the JTS sense.; * The issue goes away if the `PolygonROI` is converted to a `GeometryROI` (which usually happens from any automatically-generated ROIs, just not for ones created interactively with the polygon tool in the viewer). ### To Reproduce; You can import the following GeoJSON:. ```groovy; {; ""type"": ""Feature"",; ""id"": ""528308d5-bb0a-46c9-9906-3812f9edfd58"",; ""geometry"": {; ""type"": ""MultiPolygon"",; ""coordinates"": [; [; [; [30276.88, 45038.84],; [30376.29, 45337.05],; [31072.12, 45784.38],; [32314.67, 46231.69],; [33756.03, 46579.61],; [35147.68, 46828.12],; [36738.15, 47076.63],; [38328.62, 47374.84],; [39521.46, 47722.75],; [40465.8, 48020.96],; [41310.74, 48368.88],; [42056.27, 48766.5],; [42752.1, 49114.41],; [43597.04, 49512.03],; [44541.37, 49859.94],; [45485.71, 50058.75],; [45827.24, 50105.32],; [45535.41, 49313.22],; [45535.41, 48418.58],; [46082.14, 47523.95],; [47274.98, 46679.01],; [48815.75, 45883.78],; [50207.41, 45287.35],; [51052.34, 44790.33],; [51400.26, 44392.71],; [51449.96, 44144.21],; [51052.34,",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1674:85,mask,mask,85,https://qupath.github.io,https://github.com/qupath/qupath/issues/1674,5,['mask'],['mask']
Availability,"## Bug report. **Describe the bug**. The following code in `FileResourceManager` leaves an open connection to the directory:; ```java; return Files.list(path); 	.filter(p -> Files.isRegularFile(p) && p.toString().endsWith(ext)); 	.collect(Collectors.toMap(p -> nameWithoutExtension(p, ext), p -> p));; ```. It was expected that the `collect` terminal operation would close the connection... it it [seems it does not](https://stackoverflow.com/questions/27381329/do-terminal-operations-on-streams-close-the-source). This causes real-world problems when running scripts for many images, e.g. see https://forum.image.sc/t/error-too-many-open-files/41628. **To Reproduce**; Steps to reproduce the behavior:; 1. Create a pixel or object classifier; 2. Run a script using `loadPixelClassifier('Anything')`; 3. Check for open files... on macOS this can be through `Activity monitor` or `lsof`. Each time the script is called, the directory containing the pixel classifiers is left open. **Expected behavior**; Directories aren't left open unnecessarily. **Desktop (please complete the following information):**; - QuPath v0.2 -- most problematic on Linux, where the number of open files is limited. **Additional context**; The error can be easily fixed by using the following code instead:; ```java; try (var stream = Files.list(path)) {; 	return stream.filter(p -> Files.isRegularFile(p) && p.toString().endsWith(ext)); 		.collect(Collectors.toMap(p -> nameWithoutExtension(p, ext), p -> p));; }; ```; However, the code should be checked for other instances of this pattern. Also, `DefaultProject` should perhaps cache resource managers rather than creating them anew on each request.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/594:619,error,error-too-many-open-files,619,https://qupath.github.io,https://github.com/qupath/qupath/issues/594,2,['error'],"['error', 'error-too-many-open-files']"
Availability,"## Bug report. **Describe the bug**. When running cell detection on a brightfield image and specifying that hematoxylin should be used for detection, the first deconvolved channel is *always* used - regardless of whether it is actually the one corresponding to hematoxylin or not. This is hard-coded at https://github.com/qupath/qupath/blob/88c7cc45648c1d5b09a840bd1e497ea9a46453aa/qupath-core-processing/src/main/java/qupath/imagej/detect/cells/WatershedCellDetection.java#L231. **To Reproduce**; Steps to reproduce the behavior:; 1. Open a brightfield image e.g. *CMU-1-Small-Region.svs*; 2. Set type to *Brightfield (Other)*; 3. Set 2 or 3 stains, ensuring Hematoxylin is *not* the first; 4. Run *Cell detection* using hematoxylin image; 5. Inspect image to check which channel was really used for detection. **Expected behavior**; The minimal required changes are:; * Use the stain name to identify the hematoxylin image, don't just assume it's the first; * Log a clear warning or throw an exception if anything else is done / there is no hematoxylin available. Ideally, options to detect using any/all stains should be provided to the user. **Screenshots**; Using the following stains; ```groovy; setColorDeconvolutionStains('{""Name"" : ""Some other stains"", ""Stain 1"" : ""Something"", ""Values 1"" : ""0.11793 0.84247 0.52567"", ""Stain 2"" : ""Another"", ""Values 2"" : ""0.32293 0.56288 0.76084"", ""Stain 3"" : ""Hematoxylin "", ""Values 3"" : ""0.61203 0.70103 0.36602"", ""Background"" : "" 255 255 255""}');; ```; the detection looks as below; ![Screenshot 2021-12-26 at 07 51 32](https://user-images.githubusercontent.com/4690904/147402284-3dd60b6b-e301-4efc-850d-fb35f56ced0d.jpg); ![Screenshot 2021-12-26 at 07 51 39](https://user-images.githubusercontent.com/4690904/147402286-d946f166-c927-4d24-9b56-3fec4a54a192.jpg); ![Screenshot 2021-12-26 at 07 51 43](https://user-images.githubusercontent.com/4690904/147402287-b250b3f1-9891-45d7-a1bd-2aea942a185a.jpg); ![Screenshot 2021-12-26 at 07 51 55](https://user-ima",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/878:1055,avail,available,1055,https://qupath.github.io,https://github.com/qupath/qupath/issues/878,1,['avail'],['available']
Availability,"## Bug report. **Describe the bug**; .qpdata files corresponding to OMERO images cannot be opened directly, but rather *only* via a project. **To Reproduce**; Steps to reproduce the behavior:; 1. Open an image hosted via OMERO (e.g. through IDR) *without* using a QuPath project; 2. Draw an annotation and save a .qpdata file; 3. Restart QuPath (or open another image) and then try opening the .qpdata file... this gives a NPE. **Expected behavior**; Images can be reloaded from .qpdata files, without necessarily occurring inside projects. **Desktop (please complete the following information):**; - QuPath v0.2.2 and earlier. **Additional context**; This happens because; 1. .qpdata files store only the basic file path / URI (since that's what they did in v0.1.2), and *not* the full information needed to build the server; 2. the path alone isn't parsed [here](https://github.com/qupath/qupath/blob/master/qupath-extension-omero/src/main/java/qupath/lib/images/servers/omero/OmeroWebImageServerBuilder.java#L264). I think the 'best' solution is to store the JSON representation of the `ServerBuilder` inside the `.qpdata` file. Although this is redundant when inside a project, it is needed elsewhere. However, backwards compatibility should be maintained so that older .qpdata files can be read. For the same reasons, other more complex servers cannot be reconstructed from `.qpdata` files alone, e.g. rotated servers. This makes it *essential* to use a project in many cases. An alternative (short-term) approach *to resolve the OMERO problem only* would be to update the `getURIs(URI, String...)` method to parse the path. That would work around issues in v0.2 for OMERO, but doesn't resolve the bigger problem.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/598:1149,redundant,redundant,1149,https://qupath.github.io,https://github.com/qupath/qupath/issues/598,1,['redundant'],['redundant']
Availability,## Bug report. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps to reproduce the behavior:; 1. Download release 0.2.3 on Ubuntu 20.04; 2. Extract archive; 3. Run qupath from bin directory; 4. Open project and import mirax slide. **Expected behavior**; Slide without weird artifacts. **Screenshots**; ![Screenshot from 2020-10-25 15-29-30](https://user-images.githubusercontent.com/6561496/97109997-e96d5100-16d6-11eb-9c68-d20863276593.png). **Desktop (please complete the following information):**; - OS: Ubuntu 20.04; - QuPath Version 0.2.3 (also doesn't work on 0.2.1),MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/628:144,Down,Download,144,https://qupath.github.io,https://github.com/qupath/qupath/issues/628,1,['Down'],['Download']
Availability,"## Bug report. **Describe the bug**; A problem with some SVS files in QuPath v0.3.1 with Bio-Formats 6.8.0 is described at https://forum.image.sc/t/problem-about-opening-some-svs-slides-in-qupath-v0-3-1-bio-formats-6-8-0/61404/15. **To Reproduce**; Try opening the image posted in the above discussion (if available) and checking the pyramid levels under the 'Image' tab. The values are clearly wrong, and not strictly ascending:. <img width=""323"" alt=""Image tab info"" src=""https://user-images.githubusercontent.com/4690904/147402833-46ab5c69-b0c1-45f4-ae2c-c82e680b2e7c.png"">. **Expected behavior**; QuPath should check downsample values for image servers to ensure that they are strictly ascending. If they are not, QuPath should either not open the image or it should trim at the last (seemingly) valid resolution level, under the assumption that later levels really belong to other images. **Desktop (please complete the following information):**; - OS: All; - QuPath v0.3.1 (and before)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/879:306,avail,available,306,https://qupath.github.io,https://github.com/qupath/qupath/issues/879,2,"['avail', 'down']","['available', 'downsample']"
Availability,"## Bug report. **Describe the bug**; Add intensity measurements fails with error below when run on a JPG image (set to image type fluorescence). It seems likely that this is due to the normalized OD colors channel showing up second in the list, which inserts it into the channel list prior to the Red Green and Blue channels.; ![image](https://user-images.githubusercontent.com/23145209/65450506-1b382800-ddf2-11e9-82ba-681885b1897b.png); ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'colorOD'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:355); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); **To Reproduce**; Steps to reproduce the behavior:; Load a 3 color fluorescent image that has been converted into a JPG (Wince. Yes.) Generate cells, try to run Add Intensity Features. Adding fails with a message that is only reported in the log. In multichannel images there is no Normalized OD colors channel that expects or generates OD measurements. In previous versions 1.2/1.3 this also did not occur. I haven't exhaustively checked which M# versions are affected. **Desktop (please complete the following information):**; - OS: Win10; - QuPath Version 0.2.0m4. **Additional context**; Referencing: https://forum.image.sc/t/saving-cell-detection-locations-and-loading-them-in-another-image/29746/12",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/365:75,error,error,75,https://qupath.github.io,https://github.com/qupath/qupath/issues/365,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"## Bug report. **Describe the bug**; After importing an image with a Rotate 180 in the import dialog, the image is not shown as rotated. However, using the Magic wand, (which is how we found the bug) the outline is drawn from the rotated version of the image, which does not overlap with the pixels we are seeing.; This seems to be linked to the ImageJ Server type, as forcing Bioformats as the server gives the expected behaviour. **To Reproduce**; Steps to reproduce the behavior:; 1. Make a new project; 2. Drag and drop a fluorescent image that will be opened with the ImageJ server type; 3. Select Rotate 180 before importing; 4. Try to draw a visible shape using the magic wand. . **Expected behavior**; The image pixels should be displayed with the requested rotation when importing as an ImageJ server type. **Screenshots**; ![image](https://user-images.githubusercontent.com/319932/202206940-3e62bc6c-d2d0-4629-b74e-629a656f8fc6.png). **Desktop (please complete the following information):**; - OS: Windows; - QuPath Version: 0.3.2. **Additional context**; [Example QuPath Project with the error](https://github.com/qupath/qupath/files/10022626/QuPath.Flip.Error.zip)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1138:1099,error,error,1099,https://qupath.github.io,https://github.com/qupath/qupath/issues/1138,2,"['Error', 'error']","['Error', 'error']"
Availability,"## Bug report. **Describe the bug**; After installing QuPath x64 on an M1 mac, everything works as intended. It is in the Applications folder and can be found using `CMD+Space`; However, it does not show up on the Launchpad. We tried ; https://www.quora.com/Why-are-the-apps-I-download-on-my-Mac-not-showing-up-on-launchpad-They-re-accessible-via-finder-only-in-the-applications-folder; but the command line that was suggested did not change the behaviour. **To Reproduce**; Steps to reproduce the behavior:; 1. Have QuPath 0.4.3 installed; 2. Notice how it can be found in the Launchpad; 3. Download and install QuPath 0.5.0-x64 for MacOS; 4. Notice QuPath 0.5.0-x64 in the Applications folder; 5. Try to find QuPath 0.5.0 in the Launchpa. **Expected behavior**; With previous versions of QuPath, it would automatically show up on the Launchpad. **Desktop**; - OS: MacOS Sonoma 14.2.1; - QuPath Version: 0.5.0. While definitely not a dealbreaker, it was an interesting behaviour to notice. It might be linked to there being two QuPath versions existing, however the user said that this had not been an issue in the past.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1448:277,down,download-on-my-Mac-not-showing-up-on-launchpad-They-re-accessible-via-finder-only-in-the-applications-folder,277,https://qupath.github.io,https://github.com/qupath/qupath/issues/1448,2,"['Down', 'down']","['Download', 'download-on-my-Mac-not-showing-up-on-launchpad-They-re-accessible-via-finder-only-in-the-applications-folder']"
Availability,"## Bug report. **Describe the bug**; An attempt to train a pixel classifier using 27 channels X 12 features X 2 scales, with annotations spanning over 38 images did not succeed, and threw the following error (see end of post). Reducing either the number of channels, features, or scales would allow the pixel classifier to be trained. Images were non-pyramided, ~1000x1000 pixel, 32 bit floating point IMC data with a total of 37 channels (27 of which to be used in the pixel classifier). Unfortunately, I can't share the exact images that caused this error to occur. My guess is that this is actually an issue with OpenCV , given the exception `OpenCV(4.5.3) D:\a\javacpp-presets\javacpp-presets\opencv\cppbuild\windows-x86_64\opencv-4.5.3\modules\core\src\channels.cpp:141: error: (-215:Assertion failed) i1 >= 0 && j < ndsts && dst[j].depth() == depth in function 'cv::mixChannels'`. OpenCV's mixChannels: https://docs.opencv.org/3.4/d2/de8/group__core__array.html#ga51d768c270a1cdd3497255017c4504be. For now, I've been reducing the number of channels passed, which gives me a training accuracy of ~88%. But it would be great to train on all available data, and see what the variable importance is of each feature and channel. **To Reproduce**; Steps to reproduce the behavior:; 1. Create a project with ~143 IMC images; 2. Annotate structures within ~38 images with 5 different classifications of annotations; 3. Open a non-annotated image; 4. Attempt to train a pixel classifier using all channels, scales, and features, loading training from other annotated images in the project.; 5. Click ""Live Preview"", note the error at the end of the post. **Expected behavior**; A pixel classifier should be trained, and a preview should be applied to the currently loaded image. **Desktop (please complete the following information):**; - OS: Windows 10, 32-thread processor, 127/128 Gb RAM allocated for QuPath, ~500 Gb SSD storage for tile cache; - QuPath Version 0.3.2. **Additional context**; Error l",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947:202,error,error,202,https://qupath.github.io,https://github.com/qupath/qupath/issues/947,3,['error'],['error']
Availability,"## Bug report. **Describe the bug**; An example Script does not work in QuPath version 0.2.0-m9 (but in 0.1.2).; The script can be found here: https://github.com/qupath/qupath/wiki/Scripting-examples --> _Tiling a whole slide image_. **To Reproduce**; Use this script in v.0.1.2 and v.0.2.0-m9. **Expected behavior**; works in v.0.1.2 but not in v.0.2.0-m9. **Desktop (please complete the following information):**; - Ubuntu 18.04 LTS; - QuPath Version v.0.1.2 and v.0.2.0-m9. **Additional context**; Error massage is:. ```; > ERROR: It looks like you have tried to import a class 'qupath.imagej.images.servers.ImagePlusServerBuilder' that doesn't exist!; > You should probably remove the broken import statement in your script (around line 17).; > Then you may want to check 'Run -> Include default imports' is selected, or alternatively add ; > import qupath.imagej.tools.IJTools; > at the start of the script. Full error message below.; > ; > ERROR: MultipleCompilationErrorsException at line 16: startup failed:; > Script1.groovy: 17: unable to resolve class qupath.imagej.images.servers.ImagePlusServerBuilder; > @ line 17, column 1.; > import qupath.imagej.images.servers.ImagePlusServerBuilder; > ^; > ; > Script1.groovy: 16: unable to resolve class qupath.imagej.images.servers.ImagePlusServer; > @ line 16, column 1.; > import qupath.imagej.images.servers.ImagePlusServer; > ^; > ; > 2 errors; > ; > ; > ERROR: Script error (MultipleCompilationErrorsException); > at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); > at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:975); > at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:637); > at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:586); > at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:401); > at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); > at groovy.lang.Gro",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/404:501,Error,Error,501,https://qupath.github.io,https://github.com/qupath/qupath/issues/404,4,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"## Bug report. **Describe the bug**; At the hackathon (I think) it came up that the channel viewer is much too busy for RGB images... making it less useful that it might otherwise be. The problem is that it shows *all* available channel transforms, rather than just the ones that are likely to be relevant or interesting. > Sidenote: in generating the screenshot here, it looks like the viewer panes aren't all the same size... as they ought to be. **To Reproduce**; Steps to reproduce the behavior:; 1. Open an RGB image; 2. Choose *View &rarr; Mini viewers... &rarr; Show channel viewer*. **Expected behavior**; Show fewer channels by default. If stains are available, this could be the color deconvolve channels; otherwise, it could be the split RGB information. Furthermore, we should either:; * Make it possible to show all channels using a preference; * Make it possible to turn individual channels on or off. Realistically, the first option is likely to be more achievable before the next release. **Screenshots**. ![channel viewer rgb](https://user-images.githubusercontent.com/4690904/171357206-38bfa499-012a-46c4-adb1-e566d31004e5.jpg). **Desktop (please complete the following information):**; - OS: All; - QuPath Version: All up to v0.3.2",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/980:219,avail,available,219,https://qupath.github.io,https://github.com/qupath/qupath/issues/980,2,['avail'],['available']
Availability,"## Bug report. **Describe the bug**; Attempting to add images via a past list fails sometimes when it should not... specifically, when it can't construct a URI. This might be because of a space or other unescaped character. See https://forum.image.sc/t/qupath-update-urls-issue/38613/6. Second issue: if no valid path is provided, an error dialog is shown but without a proper parent window set - which causes some extra confusion. **Expected behavior**; * Absolute file paths can be used for import (with or without spaces); * Error dialogs don't cause trouble. **Additional context**; This may also be relevant: https://forum.image.sc/t/qupath-update-urls-issue/38613",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/521:334,error,error,334,https://qupath.github.io,https://github.com/qupath/qupath/issues/521,2,"['Error', 'error']","['Error', 'error']"
Availability,"## Bug report. **Describe the bug**; Attempting to interact with an image in ""this state"" causes a popup with the title error followed by a string of numbers, and also shows up in the log. Occasionally it can be circumvented by selecting an annotation of some object, but it inevitably recurs. ; [LINE log.txt](https://github.com/qupath/qupath/files/4211355/LINE.log.txt). **To Reproduce**; I am not certain how to reproduce the error, but it seemed to start when I had generated a very large number of cells, and then created additional annotations within the parent annotation. I have not had it happen during standard use. **Expected behavior**; No matter what terrible things I do, QuPath should stand tall and defiant. **Screenshots**; If applicable, add screenshots to help explain your problem.; ![image](https://user-images.githubusercontent.com/23145209/74616657-0b411d80-50de-11ea-98a2-a268f3196b58.png). **Desktop (please complete the following information):**; - OS: Win10; - QuPath Version 0.2.0m9. **Additional context**; Clicking out of the program seemed to help, but nothing was consistent about bringing back the ability to pan around by clicking and dragging. On the other hand, zooming out, moving the cursor, and then zooming back in worked fine. . _**Deleting the additional small annotations within the larger annotation resolved the issue completely.**_",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/401:120,error,error,120,https://qupath.github.io,https://github.com/qupath/qupath/issues/401,2,['error'],['error']
Availability,"## Bug report. **Describe the bug**; Cell expansion (including nucleus size constraint) can fail due to a TopologyException. See:; * https://forum.image.sc/t/stardist-in-qupath-error-message/41242; * https://forum.image.sc/t/topologyexception-found-non-noded-intersection-between-linestring/38549. **To Reproduce**; Hard to reproduce... but depends upon running StarDist cell detection in QuPath v0.2.2 with cell expansion set. Fails intermittently. **Expected behavior**; A single cell failure doesn't cause everything to break down. **Additional context**; Adding in validity checks along the way risks having a substantial performance impact in the majority of cases that *do* work fine, so a more graceful recovery from errors may be sufficient.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/587:177,error,error-message,177,https://qupath.github.io,https://github.com/qupath/qupath/issues/587,5,"['down', 'error', 'failure', 'recover']","['down', 'error-message', 'errors', 'failure', 'recovery']"
Availability,## Bug report. **Describe the bug**; Concurrent modification exception has been spotted with the stack trace:. ```; ERROR: QuPath exception; java.util.ConcurrentModificationException: null; at java.base/java.util.LinkedHashMap$LinkedHashIterator.nextNode(Unknown Source); at java.base/java.util.LinkedHashMap$LinkedKeyIterator.next(Unknown Source); at qupath.lib.objects.PathObject.nDescendants(PathObject.java:528); at qupath.lib.objects.PathObjectTools.countDescendants(PathObjectTools.java:204); at qupath.lib.objects.PathObject.objectCountPostfix(PathObject.java:238); at qupath.lib.objects.PathObject.toString(PathObject.java:276); at qupath.lib.gui.tools.PathObjectLabels$PathObjectMiniPane.setPathObject(PathObjectLabels.java:247); at qupath.lib.gui.tools.PathObjectLabels$PathObjectListCell.updateItem(PathObjectLabels.java:151); at qupath.lib.gui.tools.PathObjectLabels$PathObjectListCell.updateItem(PathObjectLabels.java:138); at javafx.scene.control.ListCell.updateItem(ListCell.java:485); at javafx.scene.control.ListCell.lambda$new$2(ListCell.java:168); at javafx.collections.WeakListChangeListener.onChanged(WeakListChangeListener.java:88); at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329); at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239); at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211); at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:98); at qupath.lib.gui.panes.AnnotationPane.hierarchyChanged(AnnotationPane.java:436); at qupath.lib.gui.panes.AnnotationPane.lambda$hierarchyChanged$9(AnnotationPane.java:404); at com.sun.javafx.application.PlatformImpl.lambda,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1182:116,ERROR,ERROR,116,https://qupath.github.io,https://github.com/qupath/qupath/issues/1182,1,['ERROR'],['ERROR']
Availability,"## Bug report. **Describe the bug**; Error message with 'Locked status cannot be set!' when trying to add pixel classifier measurements to a full image (rather than annotations or detections). **To Reproduce**; Steps to reproduce the behavior:; 1. Create and save pixel classifier or thresholder; 2. Request adding measurements everywhere. **Expected behavior**; No attempt is made to lock the 'Image' (root) object, and no error is shown. **Desktop (please complete the following information):**; - QuPath v.0.2",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/595:37,Error,Error,37,https://qupath.github.io,https://github.com/qupath/qupath/issues/595,2,"['Error', 'error']","['Error', 'error']"
Availability,"## Bug report. **Describe the bug**; Error produced when groovy script is converted to JSON. **To Reproduce**; Steps to reproduce the behavior:; 1. Open specific groovy script in qupath; 2. Change the script to JSON via Language dropdown; 3. Will produce an error. . **Expected behavior**; No error, script changes to JSON . **Screenshots**. **Desktop (please complete the following information):**; Confirmed on Windows and Mac, both v0.4.3 QuPath . **Additional context**; See txt for error output. Original groovy script being kept private. ; [groovy to json script error.txt](https://github.com/qupath/qupath/files/11381297/groovy.to.json.script.error.txt)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1264:37,Error,Error,37,https://qupath.github.io,https://github.com/qupath/qupath/issues/1264,6,"['Error', 'error']","['Error', 'error']"
Availability,"## Bug report. **Describe the bug**; Exporting annotations across multiple z-slices can fail, in that annotations are drawn on more slices than they should. **To Reproduce**; Steps to reproduce the behavior:; 1. Create a QuPath project containing the ImageJ sample image 'Confocal Series' (accessed via *File &rarr; Open Samples*; 2. Import the attached .geojson file (rename .txt to .geojson) - can import via drag & drop; * [confocal-series-small.txt](https://github.com/qupath/qupath/files/11531594/confocal-series-small.txt) ; 4. Attempt export using the script below:. ```groovy; double downsample = 1.0. def imageData = getCurrentImageData(). def labelServer = new LabeledImageServer.Builder(imageData); .downsample(downsample) // Choose server resolution; this should match the resolution at which tiles are exported; .useInstanceLabels(); .useAnnotations(); .multichannelOutput(false) // If true, each label refers to the channel of a multichannel binary image (required for multiclass probability); .build(). def path = buildFilePath(PROJECT_BASE_DIR, ""labels.tif""); writeImage(labelServer, path); ```. **Expected behavior**; A TIFF stack is written that contains 3 annotations on different z-slices. **Screenshots**; All 3 annotations are included on slices where only one should appear. <img width=""410"" alt=""Screenshot 2023-05-22 at 14 39 46"" src=""https://github.com/qupath/qupath/assets/4690904/e5a8bd59-e49f-4af2-9202-3bf704df6e1a"">. **Desktop (please complete the following information):**; - OS: macOS (probably all); - QuPath Version: 0.4.3. **Additional context**; Problem first noticed when replying to https://forum.image.sc/t/exporting-annotations-for-all-z-stack/81393/3",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1267:592,down,downsample,592,https://qupath.github.io,https://github.com/qupath/qupath/issues/1267,3,['down'],['downsample']
Availability,"## Bug report. **Describe the bug**; Extensions are loaded after reading image data in the CLI. ; E.g. if reading the image depends on an extension, QuPath will throw an Exception. **To Reproduce**; Steps to reproduce the behavior:; 1. Run a `script` command through the CLI on an image that depends on an extension (e.g. OMERO).; 2. See error happening before the script is even running. **Expected behavior**; Extensions are loaded prior running the script. **Desktop:**; - OS: All; - QuPath Version: v0.3.0",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/852:338,error,error,338,https://qupath.github.io,https://github.com/qupath/qupath/issues/852,1,['error'],['error']
Availability,"## Bug report. **Describe the bug**; I am not sure if it's a bug or an intended behaviour, but I have a recurrent ""problem"" with the max display setting of fluorescent channels when viewing them and trying to find the best viewing settings. ; I have 16 bit images (.vsi) scanned on an olympus VS120. When opening them in QuPath, the first thing I usually do is to run a script to set the min and max display:; ```; // Get access to the display info for each channel; def viewer = getCurrentViewer(); def channels = viewer.getImageDisplay().availableChannels(). // Set the range for the 4 channels; channels[0].setMinDisplay(500); channels[0].setMaxDisplay(30000); channels[1].setMinDisplay(500); channels[1].setMaxDisplay(30000); channels[2].setMinDisplay(500); channels[2].setMaxDisplay(30000); channels[3].setMinDisplay(500); channels[3].setMaxDisplay(20000); ```. In theory it should be possible to use a maximum value of 65,536 if I am not mistaken, for 16 bit images. However, if I want to fine tune this setting and open the ""Brightness & Contrast"" tool, I am not able to go to the maximum theoritical value. ; If I start playing with the ""Max display"" side of the bar, it automatically ""clips"" the range to a certain value usually relatively low, making the signal way too strong in most cases (not sure how that value is calculated?), and there is no going back using this ""Brightness & Contrast"" tool. ; The only way of adjusting this value is to re-use the script. It is fine and can be done, but I was wondering if it would be possible to modify QuPath to prevent the software from this behaviour? I don't remember having such problem when using 8-bit Versa images, but I think I had the same issue using 32-bit vectra images. **Desktop (please complete the following information):**; - OS: Windows, macOS; - QuPath Version 0.2.0m3 (and before too)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/352:540,avail,availableChannels,540,https://qupath.github.io,https://github.com/qupath/qupath/issues/352,1,['avail'],['availableChannels']
Availability,"## Bug report. **Describe the bug**; I have saved training points in a QuPath object and when I try to load them into a new classifier at first it shows that the points have been loaded but then when I press the ""build and apply"" button the number of training object becomes 0. **To Reproduce**; Steps to reproduce the behavior:; 1. Go to create new classifier; 2. Click on load training objects; 3. Click build and apply; 4. See error. **Expected behavior**; Have the number of training objects not become 0 and have loaded points become part of new classifier. . **Screenshots**. ![pic1](https://user-images.githubusercontent.com/10617598/64722894-599e2080-d49d-11e9-93d6-cc034db12dfc.png). ![pic2](https://user-images.githubusercontent.com/10617598/64722898-5c991100-d49d-11e9-84a1-61ba0156e232.png). **Desktop (please complete the following information):**; - OS: [Ubuntu 16.04]; - QuPath Version [0.1.2]",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/360:430,error,error,430,https://qupath.github.io,https://github.com/qupath/qupath/issues/360,1,['error'],['error']
Availability,"## Bug report. **Describe the bug**; I tried to run EP.Zindy's script for importing NDPA annotations for Hamamatsu's NDPI image files; (https://forum.image.sc/t/importing-ndpa-annotation-files-into-qupath-code-attached/33721); and the interpreter cannot find the XmlSlurper Groovy class.; `ERROR: It looks like you have tried to import a class 'XmlSlurper' that doesn't exist!`. However, modifying the build.gradle file to include groovy-all, like this:; `	groovy ""org.codehaus.groovy:groovy-all:${groovyVersion}""`; fixed this, at least for the -M10-SNAPSHOT code from last friday. :-). **To Reproduce**; Steps to reproduce the behavior:; 1. Install -M10; 2. open NDPI file; 3. try running something like this:; `def list = new XmlSlurper().parseText(text)`. **Expected behavior**; Script running smoothly. **Desktop (please complete the following information):**; - OS: Windows 10, OpenJDK 14.0.1; - QuPath Version 0.2.0-m10. Thank you!",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/455:290,ERROR,ERROR,290,https://qupath.github.io,https://github.com/qupath/qupath/issues/455,1,['ERROR'],['ERROR']
Availability,"## Bug report. **Describe the bug**; If a block comment contains more than a certain number of characters, QuPath throws an error (see below) when I open that script (no other scripts were open before). It is then not possible to run the script because all `Run` buttons are disabled. If I try to change the language to `None` and then to `Groovy`, it throws again the same error and the `Run` buttons are still disabled. If I open another script, then it enables the Run buttons for both scripts (but the issue is still there if we open again the first script). **Temporary Fix**; One fix is to reduce the number of characters in the block comment and then, no more error is thrown. For example, splitting a large block comment to smaller ones. **To Reproduce**; Steps to reproduce the behavior:; 1. Open a script; 2. Add the following block comment ; ```; /**; * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, ; * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. ; * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, ; * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; ; * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ; * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ; * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; */; ```; 3. Save the script.; 5. Close the script (Ctrl+w); 6. Open the same script ==> no error; 7. Add the following block comment. ```; /**; * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, ; * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1176:124,error,error,124,https://qupath.github.io,https://github.com/qupath/qupath/issues/1176,3,['error'],['error']
Availability,"## Bug report. **Describe the bug**; If attempting to remove over 255 measurements at once through the measurement manager, the corresponding workflow entry for that action will throw an error. This is due to the maximum number of supported arguments for a groovy function being 255. **To Reproduce**; Steps to reproduce the behavior:; 1. Create >255 different measurements for a project entry containing detection objects.; 2. Remove >255 measurements through the measurement manager GUI in one action.; 3. Create a script from the workflow tab consisting of all of the above actions. Note the error message:; `ERROR: MultipleCompilationErrorsException: startup failed:; General error during instruction selection: The max number of supported arguments is 255, but found 1191`. **Expected behavior**; The script generated from the workflow tab should be able to reproduce most of the plugin-based actions, including the act of removing measurements. A quick fix is to modify the generated script and distribute the list of measurements to remove over multiple `removeMeasurement()` operations. **Screenshots**; ![image](https://user-images.githubusercontent.com/52012166/154319405-e0b09a53-0f29-4feb-a77f-43640053b828.png). **Desktop (please complete the following information):**; - OS: Windows 10; - QuPath Version 0.4.0-SNAPSHOT. **Additional context**; Minor issue, easy enough to manually distribute the list of measurements to remove over multiple `removeMeasurement()` statements",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/915:187,error,error,187,https://qupath.github.io,https://github.com/qupath/qupath/issues/915,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"## Bug report. **Describe the bug**; If the stable release folder *QuPath-0.2.3/* is placed behind a *bin* folder, QuPath will not run. **To Reproduce**; Steps to reproduce the behavior:; 1. `wget https://github.com/qupath/qupath/releases/download/v0.2.3/QuPath-0.2.3-Linux.tar.xz`; 2. `tar -xvf QuPath-0.2.3-Linux.tar.xz`; 3. `cd QuPath-0.2.3/bin/`; 4. `./QuPath-0.2.3`. **Behavior**. If QuPath runs, is dependent under which path it is installed. + `/home/elmar/QuPath-0.2.3/bin` this works; + `/home/elmar/abc/QuPath-0.2.3/bin` this works; + `/home/elmar/bin/QuPath-0.2.3/bin` this will **not** work!. This is the error I receive: ; ```; elmar@computer ~/bin/QuPath-0.2.3/bin $ ./QuPath-0.2.3; Error: could not find libjava.so; Error: Could not find Java SE Runtime Environment.; ``` . **Desktop (please complete the following information):**; - OS: Ubuntu; - QuPath Version 0.2.3 stable release",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/614:239,down,download,239,https://qupath.github.io,https://github.com/qupath/qupath/issues/614,4,"['Error', 'down', 'error']","['Error', 'download', 'error']"
Availability,"## Bug report. **Describe the bug**; If uncaught exceptions occur repeatedly in quick succession, the screen can fill with error notifications. Even if the error isn't *that* important, the software becomes unusable. **To Reproduce**; This can be seen in v0.3.2 with the bug reported at https://github.com/qupath/qupath/issues/988. Steps to reproduce the behavior:; 1. Open an image; 2. Choose *Classify &rarr; Pixel classification &rarr; Create thresholder*; 3. Delete the text in the threshold spinner; 4. Press an increment/decrement arrow in the threshold spinner. Each time a button is pressed, one or more error notifications should appear. There are other cases where the notifications are more frequent, but I can't recall any right now. They are particularly bad if linked to a mouse event, like a misbehaving mouse move listener. **Expected behavior**; When many repeated errors occur, only the first notification should be shown - and further information provided in the log. **Desktop (please complete the following information):**; - OS: All; - QuPath v0.3.2 and before",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/990:123,error,error,123,https://qupath.github.io,https://github.com/qupath/qupath/issues/990,4,['error'],"['error', 'errors']"
Availability,"## Bug report. **Describe the bug**; In QuPath <= 0.2, it's possible to have selected objects but for `getSelectedObject()` to still return null. This is kind of a bug, while kind of not. It happens because QuPath distinguishes between the 'primary' selected object, and the set of all selected objects. However, it often *feels* buggy and understandably causes confusion at times, e.g. https://forum.image.sc/t/error-when-exporting-region-of-the-image-in-script/50269/3. **To Reproduce**; Run the following script in v0.2.3 on an image that contains annotations:; ```groovy; resetSelection(); selectAnnotations(); println getSelectedObject(); println getSelectedObjects(); ```; You should find that it prints `null` for `getSelectedObject()` selected object, *even though clearly annotations are selected*. This is most confusing whenever there is only one annotation on the image, and there would be no ambiguity as to which one is the primary. **Expected behavior**; I don't know... but my feeling is that, if there are multiple selected objects, QuPath should always enforce that one is the primary. That means a [`PathObjectSelectionModel`](https://github.com/qupath/qupath/blob/88c7cc45648c1d5b09a840bd1e497ea9a46453aa/qupath-core/src/main/java/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.java#L62) change for whenever a set is selected but the primary is `null`. I propose:; * If a primary selected object is specified, use that. Otherwise; * If the current primary selected object remains selected (i.e. it's still in the collection passed to the method), just keep it selected. Otherwise; * Select the first object in the collection passed to the select method to use as the primary. Another idea was to keep the object with the largest ROI, or at the lowest hierarchy level... but those all sounded more involved. **Desktop (please complete the following information):**; - QuPath v0.2.3 and earlier. **Additional context**; I've changed the code already and was planning to",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/758:412,error,error-when-exporting-region-of-the-image-in-script,412,https://qupath.github.io,https://github.com/qupath/qupath/issues/758,1,['error'],['error-when-exporting-region-of-the-image-in-script']
Availability,"## Bug report. **Describe the bug**; In a project I'm currently working on, QuPath seems to be distorting images so that I am unable to reliably do a cell detection, analyze and even view the images. When I open the images in other image processing programs like gimp the images do not appear distorted. It looks like the distortion that is taking place is that part of the image is being copied and translated into a different part of the image. . **To Reproduce**; Steps to reproduce the behavior:; 1. Go to QuPath 0.1.2; 2. Click on File -> Open Image; 3. Select specific image; 4. See error. **Expected behavior**; The image should not be cut into pieces and distorted. . **Screenshots**; Here is what the image should look like:( Here I opened the .tif image in gimp). ![image](https://user-images.githubusercontent.com/10617598/70916106-1f3aa700-1fe9-11ea-91d2-72f5340bdcb4.png). Here is what the image looks like in QuPath:( note I have drawn an annotation in the image here- the red rectangle which can be ignored). ![image](https://user-images.githubusercontent.com/10617598/70915929-c79c3b80-1fe8-11ea-87b3-7c16e5dc3fef.png). Here is what the image looks like in QuPath when I do a cell segmentation on the image. ![image](https://user-images.githubusercontent.com/10617598/70916181-3da0a280-1fe9-11ea-9d5d-fff3625a9fe5.png). You can see here that there are areas of the screen which have no cells but are being marked as having cells due to this distortion. . **Desktop (please complete the following information):**; - OS: Ubuntu 16.04; - QuPath Version 0.1.2. **Additional context**; The images being analyzed were originally .ndpi files which were converted to .tif files. When I open them in other image processing programs like gimp the images are not distorted. Also, the thumbnails which are displayed in the image list of the left of the QuPath window do not appear distorted like in the gimp images. . ![image](https://user-images.githubusercontent.com/10617598/70916404-a1c36680-1",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/386:136,reliab,reliably,136,https://qupath.github.io,https://github.com/qupath/qupath/issues/386,2,"['error', 'reliab']","['error', 'reliably']"
Availability,"## Bug report. **Describe the bug**; In v0.2 and v0.3, [`BufferedImageTools.resize()`](https://github.com/qupath/qupath/blob/71884c60c1988d753e60a487ebb711c98ad6ad6c/qupath-core/src/main/java/qupath/lib/awt/common/BufferedImageTools.java#L416) internally uses OpenCV with a 32-bit float image, then copies the pixels back using `WritableRaster.setSamples(0, 0, width, height, band, floatArray);`. It turns out that setting the samples for an integer image implicitly casts/floors the pixel values. Furthermore, OpenCV's resizing can exhibit small precision errors *even for entirely constant images* when using area averaging. Consequently, when resizing an integer image, pixels with an output slightly below the 'correct' value can sometimes become rounded down to the value below. This is unlikely to make any obvious difference in most cases, but it can be a significant problem when exporting a labeled image. Specifically, @SalmaDammak spotted that this impacts the `TileExporter` when using labeled images with resizing, causing some pixels to have the wrong labels in some cases (see https://github.com/qupath/qupath/pull/964). This effect shouldn't be seen when using nearest neighbor interpolation with OpenCV, as controlled by the boolean parameter to the `BufferedImageTools.resize` method. However, the `TileExporter` requests smooth interpolation - even though it shouldn't for labeled images (see [here](https://github.com/qupath/qupath/blob/v0.3.2/qupath-core/src/main/java/qupath/lib/images/writers/TileExporter.java#L870)). Therefore, there are two related issues:; * the behavior of `resize` needs to be improved to avoid the flooring error; * the `TileExporter` should switch to nearest neighbor resizing for labeled images. **To Reproduce**; The resizing issue can be reproduced without relying on the `TileExporter` class by running the following script:. ```groovy; import java.awt.image.BufferedImage; import java.awt.Color. // Create an image with a constant value; def img = ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/974:557,error,errors,557,https://qupath.github.io,https://github.com/qupath/qupath/issues/974,2,"['down', 'error']","['down', 'errors']"
Availability,"## Bug report. **Describe the bug**; In v0.5.0 rc2, when multiple viewers are open and zooming in occurs (not on the image currently selected with the red outline) an error is produced in the log but functions as expected. **To Reproduce**; 1. Open multiple viewers (eg 2x2) and fill each with images.; 2. With one image selected, scroll to zoom in on ANOTHER image. ; 3. Each scroll wheel turn will create an error in the logs as seen attached. . **Expected behavior**; No bugs :). **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: Windows; - QuPath Version: v0.5.0 rc2. **Additional context**; [multiviewer scroll bug.txt](https://github.com/qupath/qupath/files/13221309/multiviewer.scroll.bug.txt)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1408:167,error,error,167,https://qupath.github.io,https://github.com/qupath/qupath/issues/1408,2,['error'],['error']
Availability,"## Bug report. **Describe the bug**; Incorrect name and tooltip is displayed for setting the maximum memory. **To Reproduce**; Download and build the most recent code from the GitHub repository, open the preference pane. Under ""General"" you will find incorrect name for setting the maximum memory for Java.; ![Capture-1](https://github.com/qupath/qupath/assets/10900214/bf3f4742-1a9b-4c6b-ac89-d90da3eaf088). **Expected behavior**; The correct name should be ""Set max memory""; ![Capture-2](https://github.com/qupath/qupath/assets/10900214/55b3cbc9-9ccc-4a7a-b40f-7a297fa29e09). **Desktop (please complete the following information):**; - OS: Windows 10; - QuPath Version: 0.5.0-SNAPSHOT",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1283:127,Down,Download,127,https://qupath.github.io,https://github.com/qupath/qupath/issues/1283,1,['Down'],['Download']
Availability,"## Bug report. **Describe the bug**; Initial bug report and steps to reproduce at https://forum.image.sc/t/qupath-script-cannot-access-java-library-and-project-data-simultanely/63388. The problem is that a class cannot be loaded from an extension far for multiple images in a project. When I tried, the first image 'worked' but all subsequent images failed with the error; ```; It looks like you have tried to import a class ‘qupath.ext.biop.cellpose.CellposeSetup’ that doesn’t exist!; MultipleCompilationErrorsException at line 7: startup failed:; Script2.groovy: 8: unable to resolve class qupath.ext.biop.cellpose.CellposeSetup; ```. **Expected behavior**; Extension jars are available for all images in the project when running from the command line, similar to how they are available when running through the GUI. **Desktop (please complete the following information):**; - OS: All; - QuPath v0.3.2 (earlier versions had other extension classpath problems). **Additional context**; The problem originates at https://github.com/qupath/qupath/blob/main/qupath-app/src/main/java/qupath/QuPath.java#L299 when a new `ExtensionClassLoader` instance is created. We need to instead use `QuPathGUI.getExtensionClassLoader()` consistently, since this is also requested within `DefaultScriptEditor`, e.g. [here](https://github.com/qupath/qupath/blob/7090e8137825f8f7dbc623c20bc62030c5c7db65/qupath-gui-fx/src/main/java/qupath/lib/gui/scripting/DefaultScriptEditor.java#L479). But if doing that, it may make more sense to add an `ExtensionClassLoader.getInstance()` method to avoid relying on `QuPathGUI.class` altogether.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/914:366,error,error,366,https://qupath.github.io,https://github.com/qupath/qupath/issues/914,3,"['avail', 'error']","['available', 'error']"
Availability,"## Bug report. **Describe the bug**; It isn't possible to run cell detection on channels with `""` in the name. This has come up twice on the forum so far:; * https://forum.image.sc/t/error-when-trying-to-run-cell-detection-plugin/62739; * https://forum.image.sc/t/error-in-loading-ome-tiff-images-in-qupath/29758/16. **To Reproduce**; Steps to reproduce the behavior:; 1. Open a fluorescence (non-RGB) image; 2. Change a channel name to `""DAPI""` or similar; 3. Try to run cell detection; 4. Observe an error - something pretty & informative like5. ; ```; Plugin error: com.google.gson.stream.MalformedJsonException: Unterminated object at line 1 column 23 path $.; ```. **Expected behavior**; A `""` in a channel name isn't a good idea, but it shouldn't be a deal breaker. **Desktop (please complete the following information):**; - OS: All; - QuPath v0.3.2 and earlier. **Additional context**; The root cause is my dodgy JSON-converting code at https://github.com/qupath/qupath/blob/main/qupath-core/src/main/java/qupath/lib/plugins/parameters/ParameterList.java#L585. Switching to use `GsonTools` should resolve it, but this will need a bit of care to ensure nothing breaks along the way.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1022:183,error,error-when-trying-to-run-cell-detection-plugin,183,https://qupath.github.io,https://github.com/qupath/qupath/issues/1022,4,['error'],"['error', 'error-in-loading-ome-tiff-images-in-qupath', 'error-when-trying-to-run-cell-detection-plugin']"
Availability,"## Bug report. **Describe the bug**; Many `ImageServer` implementations are derived from `AbstractTileableImageServer`, which breaks requests into fixed tiles and fulfils them using a cache where possible. Duplicate tile requests occur e.g. when writing an OME-TIFF using multithreading or running a pixel classifier and with a tile size larger than the tile size of the reader. It can result in the same image tiles being read multiple times, potentially adding considerable unnecessary overhead (since tile decompression can be a bottleneck). Reducing or eliminating this can potentially improve performance substantially, particularly for cases where tile reading is slow. **To Reproduce**; The bug can easily be reproduced when writing a pyramidal OME-TIFF or training a pixel classifier - although unfortunately it isn't easy to *tell* that it has been reproduced, since the duplicate requests aren't reported. The problem was identified through VisualVM profiling and running in debug mode, checking for repeated tile requests while trying to improve image write performance. **Expected behavior**; If a thread wants to obtain a tile that is currently being read by another thread, the first thread should wait until the tile is returned - it should *not* submit a new read request. **Desktop (please complete the following information):**; - OS: All; - QuPath Version 0.3.0 (and earlier). **Additional context**; This isn't really an issue when only viewing images, since requests are made that perfectly match tiles available through the `ImageServer` and pending requests are checked. However it can be an issue when regions are requested in any other way. Any solution should avoid generating more threads within an `ImageServer`.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/861:1524,avail,available,1524,https://qupath.github.io,https://github.com/qupath/qupath/issues/861,1,['avail'],['available']
Availability,"## Bug report. **Describe the bug**; Memoization in Bio-Formats previously resulted in warnings, but these have become errors in Java 17. See https://github.com/ome/bioformats/issues/3659 for details. Because memoization can be used each time a reader is created, and the error is swallowed up before being propagated to QuPath, this can result in many long stack traces being printed in the log - with no straightforward way to control this on the QuPath side. **To Reproduce**; Try to open any whole slide image using Bio-Formats with memoization enabled.; Browse the image (to ensure multiple readers are requested) and check the log for errors as described in the linked issue. **Expected behavior**; Memoization works. Or, if it doesn't work, it at least fails more quietly. **Desktop (please complete the following information):**; - OS: All (presumably); - QuPath Version v0.4.0-SNAPSHOT (really depending upon whether Java 17+ is used). **Additional context**; This is a significant problem that needs fixed before QuPath v0.4.0.; The easiest approach would be to turn off memoization altogether, but sometimes it is really beneficial.; So we need a way to turn it off only when really necessary.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/957:119,error,errors,119,https://qupath.github.io,https://github.com/qupath/qupath/issues/957,3,['error'],"['error', 'errors']"
Availability,"## Bug report. **Describe the bug**; Point annotation export format. **To Reproduce**; Steps to reproduce the behavior:; 1. Go to 'Tools'; 2. Click on 'Points tool'; 3. Annotate serveral points, and click on ""Save points""; 4. Open the txt file in the .zip, See error. **Expected behavior**; There should be some space missing between words/numbers. **Screenshots**; ![2019-08-02_090429](https://user-images.githubusercontent.com/23193202/62375756-983ad580-b504-11e9-944b-266c55197f11.png). **Desktop (please complete the following information):**; - OS: [e.g. Windows]; - QuPath Version [0.2.0-m2 and 0.2.0-m3]",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/347:261,error,error,261,https://qupath.github.io,https://github.com/qupath/qupath/issues/347,1,['error'],['error']
Availability,"## Bug report. **Describe the bug**; Pressing the up or down arrow keys can be used to navigate between slices of a z-stack within the QuPath viewer.; However, pressing once too often can result in moving one slice beyond the limit of the z-stack. **To Reproduce**; Steps to reproduce the behavior:; 1. Open a z-stack in QuPath; 2. Navigate slices using up/down arrows; 3. Check z-position with a script, e.g. `getCurrentViewer().getZPosition()`. Another way to visualise this is to use a pixel classifier; the 'non-existent' z-slice won't display any classified overlay. **Expected behavior**; Viewer cannot move beyond the available z-slices. **Additional context**; Dragging the slider does not have this affect, which is caused by wrongly clipping valid z-positions to `server.nZSlices()` rather than `server.nZSlices() - 1`.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/821:56,down,down,56,https://qupath.github.io,https://github.com/qupath/qupath/issues/821,3,"['avail', 'down']","['available', 'down']"
Availability,"## Bug report. **Describe the bug**; QuPath can (attempt to) export GeoJSON containing NaNs, but can't then read the GeoJSON it has written itself. See https://forum.image.sc/t/qupath-object-import-via-geojson-file-error/85384 for the initial bug report. **To Reproduce**; Run the following script:. ```groovy; def json = """"""; {; ""type"": ""Feature"",; ""id"": ""d0852662-6941-4506-bc90-cbda1c2fa7b0"",; ""geometry"": {; ""type"": ""Polygon"",; ""coordinates"": [; [; [44196, 21480],; [44420, 21480],; [44420, 21687],; [44196, 21687],; [44196, 21480]; ]; ]; },; ""properties"": {; ""objectType"": ""annotation"",; ""measurements"": {; ""Anything"": NaN,; ""Anything else"": 2.0; }; }; }; """""". def po = GsonTools.getInstance().fromJson(json, PathObject); ```. The result is an exception; ```; class java.lang.String cannot be cast to class java.lang.Number (java.lang.String and java.lang.Number are in module java.base of loader 'bootstrap') in QuPathScript at line number 27. ERROR: qupath.lib.measurements.MeasurementList.putAll(MeasurementList.java:234); qupath.lib.io.QuPathTypeAdapters$MeasurementListTypeAdapter.read(QuPathTypeAdapters.java:679); qupath.lib.io.QuPathTypeAdapters$MeasurementListTypeAdapter.read(QuPathTypeAdapters.java:634); com.google.gson.TypeAdapter.fromJsonTree(TypeAdapter.java:296); qupath.lib.io.QuPathTypeAdapters$PathObjectTypeAdapter.parseObject(QuPathTypeAdapters.java:535); qupath.lib.io.QuPathTypeAdapters$PathObjectTypeAdapter.read(QuPathTypeAdapters.java:464); qupath.lib.io.QuPathTypeAdapters$PathObjectTypeAdapter.read(QuPathTypeAdapters.java:280); com.google.gson.Gson.fromJson(Gson.java:1214); ```. **Expected behavior**; NaNs import properly... and export is also handled properly (whatever way that is). **Desktop (please complete the following information):**; - OS: All; - QuPath Version: 0.4.3 (but likely before)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1293:215,error,error,215,https://qupath.github.io,https://github.com/qupath/qupath/issues/1293,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"## Bug report. **Describe the bug**; QuPath crashes very frequently when I try to use the pixel classifier tool. The program just closes without any further warning or error message. Sometimes an error report is generated an saved. . **To Reproduce**. Steps to reproduce the behavior:; 1. Go to 'Classify'; 2. Click on 'Train pixel classifier (experimental)'; 3. Settings: . - Classifier: Random trees, Parameters: Maximum tree depth: 20, Minimum sample count: 10, ; - Resolution: Full (0.3 µm/px), ; - Features: Scales: 0.5, 1.0, 2.0, 4.0, 8.0, Features: Gaussian, Gradient magnitude, ; - Advanced options: Feature normalization: Mean & variance, Boundary strategy: Classify as Stroma, Boundary thickness: 2 pixels. The crash happens when I try to change the settings above, while 'Live prediction' runs. 4. See error; ```; # A fatal error has been detected by the Java Runtime Environment:; #; # EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x0000000000cb5b26, pid=9416, tid=7376; #; # JRE version: OpenJDK Runtime Environment (13.0.1+9) (build 13.0.1+9); # Java VM: OpenJDK 64-Bit Server VM (13.0.1+9, mixed mode, tiered, compressed oops, g1 gc, windows-amd64); # Problematic frame:; # C 0x0000000000cb5b26; #; # No core dump will be written. Minidumps are not enabled by default on client versions of Windows; #; # If you would like to submit a bug report, please visit:; # https://github.com/AdoptOpenJDK/openjdk-build/issues; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #. --------------- S U M M A R Y ------------. Command Line: -Djava.library.path=C:\Users\ag5-35\Downloads\QuPath-0.2.0-m8-Windows\QuPath-0.2.0-m8\app;C:\Users\ag5-35\Downloads\QuPath-0.2.0-m8-Windows\QuPath-0.2.0-m8 -Djava.launcher.path=C:\Users\ag5-35\Downloads\QuPath-0.2.0-m8-Windows\QuPath-0.2.0-m8 -Xmx8192M -XX:MaxRAMPercentage=50 qupath.QuPath. Host: Intel(R) Core(TM) i5-9400 CPU @ 2.90GHz, 6 cores, 15G, Windows 10 , 64 bit Build 183",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/394:168,error,error,168,https://qupath.github.io,https://github.com/qupath/qupath/issues/394,4,['error'],['error']
Availability,"## Bug report. **Describe the bug**; QuPath has major problems if the list of available classifications is too long. See https://forum.image.sc/t/extremely-long-class-list-prevents-exiting-qupath/44381 for details. **Expected behavior**; QuPath closes elegantly, and retrieves the class list when restarted. **Additional context**; Presumably we hit the [8192 character limit of what can be stored in preferences](https://docs.oracle.com/javase/8/docs/api/java/util/prefs/Preferences.html#MAX_VALUE_LENGTH). Note that this also impacts byte arrays (since they use Base64 encoding). Options include:; * Use the user directory instead (but this might not be set); * Encode the preferences in a different way, e.g. across multiple entries if needed",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/626:78,avail,available,78,https://qupath.github.io,https://github.com/qupath/qupath/issues/626,1,['avail'],['available']
Availability,"## Bug report. **Describe the bug**; QuPath sometimes reports OutOfMemoryErrors when training or running a pixel classifier in situations where the memory use is not actually too high. This has been particularly evident on an M1 MacBook Pro, and seems related to https://github.com/bytedeco/javacpp/issues/468 and https://github.com/bytedeco/javacpp/issues/516. The errors look like this:. ```; ERROR: Error requesting tile classification: ; java.io.IOException: java.lang.OutOfMemoryError: Physical memory usage is too high: physicalBytes (16451M) > maxPhysicalBytes (16384M); at qupath.lib.classifiers.pixel.PixelClassificationImageServer.readTile(PixelClassificationImageServer.java:314); at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:184); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:238); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:56); at qupath.lib.gui.viewer.overlays.PixelClassificationOverlay.lambda$requestTile$5(PixelClassificationOverlay.java:547); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); Caused by Physical memory usage is too high: physicalBytes (16451M) > maxPhysicalBytes (16384M) at org.bytedeco.javacpp.Pointer.deallocator(Pointer.java:712); at org.bytedeco.javacpp.Pointer.init(Pointer.java:126); at org.bytedeco.opencv.opencv_core.Mat.allocate(Native Method); at org.bytedeco.opencv.opencv_core.Mat.<init>(Mat.java:241); at qupath.opencv.ml.OpenCVClassifiers$AbstractOpenCVClassifierML.predictWithLock(OpenCVClassifiers.java:468); at qupath.opencv.ml.OpenCVClassifiers$ANNClassif",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856:366,error,errors,366,https://qupath.github.io,https://github.com/qupath/qupath/issues/856,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'errors']"
Availability,"## Bug report. **Describe the bug**; QuPath throws an exception when attempting to show the extensions in the UI when the manifest is `null`. **To Reproduce**; See https://forum.image.sc/t/qupath-script-debugging-in-eclipse/47699/4?u=petebankhead; Issue is reproducible with the provided jar (even though it *does* contain a manifest...). **Expected behavior**; QuPath recovers from the `null` and continues with its best-guess at a version. **Additional context**; Problem method is at https://github.com/qupath/qupath/blob/43aad4ecda893a7eb03c30774e64da5b9547bc86/qupath-gui-fx/src/main/java/qupath/lib/gui/commands/ShowInstalledExtensionsCommand.java#L228-L240. This works around the issue:; ```java; if (stream != null) {; Manifest manifest = stream.getManifest();; if (manifest != null) {; Attributes mainAttributes = manifest.getMainAttributes();; return mainAttributes.getValue(""Implementation-Version"");						; }; }; ```",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/664:369,recover,recovers,369,https://qupath.github.io,https://github.com/qupath/qupath/issues/664,1,['recover'],['recovers']
Availability,"## Bug report. **Describe the bug**; QuPath v0.3.2 hangs when attempting to open certain images with Bio-Formats, outside of a project. The problem occurs when:; * Bio-Formats is the reader; * There are multiple series (non-thumbnail) in the file; * A project is *not* used to open the image. See https://forum.image.sc/t/problem-about-opening-ndpis-files-in-qupath-v0-3-1/62184/4. > **Update: Sometimes QuPath doesn't hang, but the image only opens at a low resolution**; > * #1023. **To Reproduce**; Steps to reproduce the behavior:; 1. Launch QuPath but do *not* open a project; 2. Try to open an image containing multiple (non-thumbnail) series using Bio-Formats; * e.g. see https://downloads.openmicroscopy.org/images/Hamamatsu-NDPI/manuel/; 3. Select any series from the *Open image* dialog; 4. Wait... and wait.... and wait... then force quit. **Expected behavior**; Image opens properly, both inside and outside a project. **Desktop (please complete the following information):**; - OS: All; - QuPath v0.3.1 and v0.3.2. **Additional context**; Problem was introduced in https://github.com/qupath/qupath/pull/867 so should not affect any older versions. **Solution / Workaround**; [Create a a project](https://qupath.readthedocs.io/en/0.3/docs/tutorials/projects.html) first, then open the image. This avoids showing the 'Open image' dialog, and so should work.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/894:687,down,downloads,687,https://qupath.github.io,https://github.com/qupath/qupath/issues/894,1,['down'],['downloads']
Availability,"## Bug report. **Describe the bug**; See https://forum.image.sc/t/distances-between-objects-and-annotations/77933. **To Reproduce**; Steps to reproduce the behavior:; 1. Open an image; 2. Detect and classify cells (e.g. with *Positive cell detection*); 3. Run *Analyse &rarr; Spatial analysis &rarr; Detect centroid distances 2D*; 4. Check the distance for several objects between themselves and objects with the same class. This is *usually* 0, but can be greater than 0. **Expected behavior**; The distance between an object and itself should always be 0. The underlying issue seems to be a rounding error due to the way the calculation is performed:; https://github.com/qupath/qupath/blob/1368912885c1a191beaea32c28d85a3707f657f8/qupath-core/src/main/java/qupath/lib/analysis/DistanceTools.java#L358. This involved converting objects to points, and the geometries will likely have precision models applied. **Desktop (please complete the following information):**; - OS: Likely all; - QuPath Version: 0.4.3 (but no known relevant changes made recently, so probably earlier versions too). **Additional context**; When fixing this, it may also be possible to make the calculation more efficient by checking for object matches in the source and target list.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1249:602,error,error,602,https://qupath.github.io,https://github.com/qupath/qupath/issues/1249,1,['error'],['error']
Availability,"## Bug report. **Describe the bug**; See https://forum.image.sc/t/qupath-script-editor-error-when-trying-to-open-saved-script/89826/1. **To Reproduce**; Steps to reproduce the behavior:; 1. Open a script in the script editor, with *File &rarr; Open*; 2. Delete or rename the folder containing the script; 3. Try to open a script in the script editor, with *File &rarr; Open*; 4. See the exception. ```; 18:07:12.434	[JavaFX Application Thread]	ERROR	qupath.lib.gui.QuPathUncaughtExceptionHandler	Folder parameter must be a valid folder	java.lang.IllegalArgumentException: Folder parameter must be a valid folder; 	at com.sun.glass.ui.CommonDialogs.convertFolder(CommonDialogs.java:239); 	at com.sun.glass.ui.CommonDialogs.showFileChooser(CommonDialogs.java:191); 	at com.sun.javafx.tk.quantum.QuantumToolkit.showFileChooser(QuantumToolkit.java:1719); 	at javafx.stage.FileChooser.showDialog(FileChooser.java:419); 	at javafx.stage.FileChooser.showOpenDialog(FileChooser.java:354); ```. **Expected behavior**; The open dialog opens properly. **Desktop (please complete the following information):**; - OS: All (presumably, definitely macOS); - QuPath Version: 0.5.0. **Additional context**; This happens when the previous directory used in the dialog doesn't exist. Other commands may be affected as well.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1441:87,error,error-when-trying-to-open-saved-script,87,https://qupath.github.io,https://github.com/qupath/qupath/issues/1441,2,"['ERROR', 'error']","['ERROR', 'error-when-trying-to-open-saved-script']"
Availability,"## Bug report. **Describe the bug**; See https://forum.image.sc/t/stardist-error-message-topologyexception/67708/15. I haven't yet replicated it, but it's important to check it out before the next release. **Desktop (please complete the following information):**; - OS: All (presumably); - QuPath Version: Possibly none yet... but if `org.locationtech.jts.geom.GeometryOverlay.isOverlayNG = true` is added by default then it may appear. **Additional context**; This is the first report I've seen of new problems being introduced after adding `isOverlayNG=true` - so definitely needs investigated before making the change.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/996:75,error,error-message-topologyexception,75,https://qupath.github.io,https://github.com/qupath/qupath/issues/996,1,['error'],['error-message-topologyexception']
Availability,"## Bug report. **Describe the bug**; Several of QuPath's preferences relate to directories, which can be empty by default. If these have been set once, it isn't possible to reset them back to being empty. **To Reproduce**; Steps to reproduce the behavior:; 1. Go to *Edit &rarr; Preferences...*; 2. Change the *Script directory* preference to a directory containing scripts (e.g. by typing a path, or double-clicking); 3. Check the *Automate* menu to confirm the *Shared scripts* are available; 4. Try to remove the *Script directory* preference by deleting the preference string; 5. Check the *Automate* menu - deleting the string results in the root directory being used. **Expected behavior**; Deleting a directory preference string should set the directory to null, not the root. **Desktop (please complete the following information):**; - OS: Mac (but probably all); - QuPath Version: v0.4.2 (but probably most/all previous)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1240:484,avail,available,484,https://qupath.github.io,https://github.com/qupath/qupath/issues/1240,1,['avail'],['available']
Availability,"## Bug report. **Describe the bug**; Sometimes a full image annotation can be shifted outside the image bounds, so that its origin is at `(-1,-1)`. **To Reproduce**; Steps to reproduce the behavior:; 1. Open an image; 2. *Objects → Annotations... → Create full image annotation*; 3. Run the script `println getSelectedROI()` to confirm the bounds; 4. Try to drag the annotation *down to the right*; 5. Run the script `println getSelectedROI()` to see it has mysteriously shifted a pixel in the opposite direction . **Expected behavior**; The annotation doesn't move. **Desktop (please complete the following information):**; - OS: All; - QuPath Version: v0.5.1 (and earlier). **Additional context**; Hoping this is an easy fix as the stay-within-bounds logic is just 'over-correcting'.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1533:379,down,down,379,https://qupath.github.io,https://github.com/qupath/qupath/issues/1533,1,['down'],['down']
Availability,"## Bug report. **Describe the bug**; Sometimes processing using a Bio-Formats image fails with; ```java; Reader is null - was the image already closed?; ```; Alas, the image is not closed - or at least shouldn't be. **To Reproduce**; So far I can't... but see https://forum.image.sc/t/qupath-stardist-extension-error-with-large-images/80221. **Expected behavior**; Not this. But depends upon the underlying problem - which might still be a corrupt file. **Desktop (please complete the following information):**; - OS: Windows (probably all); - QuPath Version: v0.4.3; ; **Additional context**; This line is probably at least partially responsible:. https://github.com/qupath/qupath/blob/v0.4.3/qupath-extension-bioformats/src/main/java/qupath/lib/images/servers/bioformats/BioFormatsImageServer.java#L1280. I suspect when I wrote it I believe an `InterruptedException` would be thrown after 60 seconds, but really it just returns null. So we should resort to the logic from the `catch` in that case. Nevertheless, 60 seconds without any reader becoming available is still an unexpectedly long time - which suggests perhaps something somewhere has got stuck.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1265:311,error,error-with-large-images,311,https://qupath.github.io,https://github.com/qupath/qupath/issues/1265,2,"['avail', 'error']","['available', 'error-with-large-images']"
Availability,"## Bug report. **Describe the bug**; Subcellular detections don't work with z-stacks on anything other than the default slice. See https://forum.image.sc/t/problem-detecting-subcellular-object-from-nd2-files/51111. **To Reproduce**; Steps to reproduce the behavior:; 1. Open a z-stack; 2. Detect cells on multiple slices; 3. Run the subcellular detection command. If no pixel sizes are available in µm, nothing will be detected. Otherwise, all detections will be shown on the first slice. **Expected behavior**; Subcellular detections are shown in the correct cells; a meaningful warning is displayed if pixel sizes are unavailable. **Desktop (please complete the following information):**; - OS: All; - QuPath Version v.2",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/701:386,avail,available,386,https://qupath.github.io,https://github.com/qupath/qupath/issues/701,1,['avail'],['available']
Availability,"## Bug report. **Describe the bug**; The Intel build of v0.5.0-rc2 fails on many (or all?) Apple Silicon Macs when using OpenCV's DNN, e.g. via the StarDist extension. This *may* be related to an OpenCV bug, since fixed: https://github.com/opencv/opencv/issues/23183; There's no final JavaCPP release containing the fix though. **To Reproduce**; Steps to reproduce the behavior:; 1. Download the intel (x64) build of v0.5.0-rc2 (or likely v0.5.0-rc1); 2. Run [the StarDist extension](https://github.com/qupath/qupath-extension-stardist), e.g. using CMU-1.svs and the H&E model. This is likely to either throw an exception, or shut down QuPath immediately. This problem does not occur when using the arm64 build. **Expected behavior**; The x64 build should work through Rosetta2 (just a bit slower). **Desktop (please complete the following information):**; - OS: macOS 14; - QuPath Version: v0.5.0-rc2 (and also rc1). **Additional context**; This matters to some users because Bio-Formats doesn't support Apple Silicon:; * https://github.com/ome/bioformats/issues/3756; * https://github.com/glencoesoftware/jxrlib/issues/30. Consequently, some users (particularly those with Axioscan .czi images) are forced to run the x64 builds of QuPath. This can *probably* be addressed by reverting to OpenCV 4.6.0, but that would be unfortunate since OpenCV's DNN's performance should be much improved - at least for Apple Silicon - in v4.7.0 (although that may be the source of the problem...). Timings (in minutes) for one largish region of CMU-2.svs on Apple Silicon are given below:. * v0.5.0-rc2 arm64 - 1:38; * v0.4.4 arm64 - 2:47; * v0.4.4 intel64 - 3:54. So it's a shame to penalize more users by sticking with an older OpenCV because of this bug, which should only affect a *relatively* small number of people for whom the following is true:; * Using Apple Silicon; * Using .czi files; * Using the StarDist extension. Before deciding, one thing to check is whether or not TensorFlow can work via Rosetta",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1406:383,Down,Download,383,https://qupath.github.io,https://github.com/qupath/qupath/issues/1406,2,"['Down', 'down']","['Download', 'down']"
Availability,"## Bug report. **Describe the bug**; The ScriptEditor throws an `IndexOutOfBoundsException` when deleting text that was just inserted, having `CTRL` down (and probably `CMD` too?). **To Reproduce**; Steps to reproduce the behavior:; 1. Go to the script editor; 2. Get the first auto-completed word by hitting `CTRL` + `SPACE` (i.e. `BRIGHTFIELD_H_DAB` at the time of writing); 3. Delete the word, by hitting the `CTRL` + `BACKSPACE` keys; 4. Re-hit `CTRL` + `SPACE` to trigger the auto-complete again.; 5. See Exception thrown. **Expected behavior**; The word should be auto-completed again (i.e. `BRIGHTFIELD_H_DAB` should be written). **Desktop (please complete the following information):**; - OS: All; - QuPath Version: v0.3.2. **Additional context**; I believe the problem originates [here](https://github.com/qupath/qupath/blob/10b44a58b8c08ca925aa44bc08eaf1fa3eb70584/qupath-extension-script-editor/src/main/java/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.java#L357), where reinitialising the `AutoCompletor` object is skipped and it shouldn't. However, the reason for this `if` block is to avoid the `AutoCompletor` object to be reinitialised when the user is iterating through all the possible completion suggestions (e.g. most users will naturally hit the `CTRL`/`CMD` key before the `SPACE` key, creating a `KeyEvent` in the middle that needs to be filtered out).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/916:149,down,down,149,https://qupath.github.io,https://github.com/qupath/qupath/issues/916,1,['down'],['down']
Availability,"## Bug report. **Describe the bug**; The behavior of *Analyze → Spatial analysis → Delaunay cluster features 2D* is not well-defined when applying the command to annotations that are nested (in the hierarchy) or overlapping. For 'flat' annotation arrangements the behavior is *mostly ok*, except that it does rely on *hierarchy relationships* rather than *spatial relationships*.; Which is to say, it hasn't really changed since v0.1.2. **To Reproduce**; Create an arrangement of objects similar to that shown below:. ![0-orig](https://github.com/user-attachments/assets/cf1a87fc-c73a-4ac6-be24-d830f0014604). 1. If I run *Delaunay cluster features 2D* with **_all_ annotations selected**, I see triangulation lines which *do not cross the boundary between the annotations containing cells*. ![1-all selected](https://github.com/user-attachments/assets/3309e1e3-76ca-4ec7-bf5c-e0c76b8f2d96). But I **also** get a `ConcurrentModificationException`:; ```; 15:47:01.829	[Plugin thread]	ERROR	qupath.lib.plugins.AbstractTaskRunner	Error running plugin: java.util.ConcurrentModificationException	java.util.concurrent.ExecutionException: java.util.ConcurrentModificationException; 	at java.base/java.util.concurrent.FutureTask.report(Unknown Source); 	at java.base/java.util.concurrent.FutureTask.get(Unknown Source); 	at qupath.lib.plugins.AbstractTaskRunner.awaitCompletion(AbstractTaskRunner.java:147); 	at qupath.lib.plugins.AbstractTaskRunner.runTasks(AbstractTaskRunner.java:117); 	at qupath.lib.gui.TaskRunnerFX.runTasks(TaskRunnerFX.java:106); 	at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:147); 	at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:177); 	at java.base/java.lang.Thread.run(Unknown Source); Caused by: java.util.ConcurrentModificationException; 	at java.base/java.util.ArrayList$Itr.checkForComodification(Unknown Source); 	at java.base/java.util.ArrayList$Itr.next(Unknown Source); 	at java.base/java.util.Collections$UnmodifiableCollect",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1590:983,ERROR,ERROR,983,https://qupath.github.io,https://github.com/qupath/qupath/issues/1590,1,['ERROR'],['ERROR']
Availability,"## Bug report. **Describe the bug**; The performance of `MeasurementExporter` is unacceptably slow when large numbers of objects and measurements. (Although, as we shall see, it's not entirely its fault...). **To Reproduce**; Steps to reproduce the behavior:; 1. Run cell detection on a large regions (generating >100k cells); 2. Run an export script that *should* be limited to export just one measurement per cell, e.g. following https://forum.image.sc/t/qupath-extremely-slow-exporting-detection-measurements/71154/6; 3. Predict how long it should take (a second or two?); 4. Be disappointed and confused (possibly). **Expected behavior**; Exporting hundreds of thousands of measurements takes a matter of seconds. **Desktop (please complete the following information):**; - OS: All; - QuPath Version: 0.3.2 (and earlier). **Additional context**; The discussion behind this is at https://forum.image.sc/t/qupath-extremely-slow-exporting-detection-measurements/71154. Investigating revealed a few issues:; * `MeasurementExporter` might not be using a buffered output stream (although how much this matters if unclear); * When using 'includeColumns', it's converting *all* numeric measurements to strings... even if they aren't needed; * Lots of measurements can cause horrible performance even when they aren't being written to the file; * The frequent calls to `GeneralTools.formatNumber` show up on VisualVM as a bottleneck. The first is easy to address, although may not help much. The second can also be addressed by excluding columns earlier. The third may be tricker, but is needed to help in cases where a full table should be export.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1045:197,fault,fault,197,https://qupath.github.io,https://github.com/qupath/qupath/issues/1045,1,['fault'],['fault']
Availability,"## Bug report. **Describe the bug**; The right arrow can be used to advance one frame of a time series, but the left arrow just jumps to the end. **To Reproduce**; Steps to reproduce the behavior:; 1. Read the ImageJ sample image 'Mitosis.tif'; 2. Press the right arrow to advance; 3. Press the left arrow to... unexpectedly jump to the end. **Expected behavior**; Left arrow goes back one timepoint. **Desktop (please complete the following information):**; - OS: all (almost certainly), Mac (definitely); - QuPath Version v0.2. **Additional context**; See https://forum.image.sc/t/image-mask-annotation-from-time-lapse-of-images-using-qupath/54090",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/748:589,mask,mask-annotation-from-time-lapse-of-images-using-qupath,589,https://qupath.github.io,https://github.com/qupath/qupath/issues/748,1,['mask'],['mask-annotation-from-time-lapse-of-images-using-qupath']
Availability,"## Bug report. **Describe the bug**; There have been numerous complaints about the performance of pixel classification using batch processing, e.g. * https://forum.image.sc/t/qupath-batch-script-slowing-down-after-first-image/85810; * https://forum.image.sc/t/batch-processing-unusually-slow/49633; * https://forum.image.sc/t/qupath-pixel-classification-script-not-using-availible-resoruces-and-crashing-during-batch-processing/84593. Basically, it can be slow and then also crash at times. **To Reproduce**; I'm basing this report upon forum posts. I don't yet have clear steps to reproduce, but I assume that creating a high-resolution pixel classifier and then applying it across an image via a script would likely do it. **Expected behavior**; Pixel classification is faster, and generally doesn't crash. **Desktop (please complete the following information):**; - OS: Unspecified; - QuPath Version: v0.4.4 (and earlier). **Additional context**; The slowness is likely to be related to the calculations being single-threaded, even when they might be parallelized when run interactively through a viewer. The crashing may be related to the use of OpenCV via JavaCPP - specifically we don't have as much control over memory use as when using Java alone.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1322:203,down,down-after-first-image,203,https://qupath.github.io,https://github.com/qupath/qupath/issues/1322,2,"['avail', 'down']","['availible-resoruces-and-crashing-during-batch-processing', 'down-after-first-image']"
Availability,"## Bug report. **Describe the bug**; There's no way accelerator for *Selection mode*... which isn't itself a bug, until you look at the code and see that there *should* be, it is just the same was the one used to synchronize viewers. See https://forum.image.sc/t/feature-request-keyboard-shortcut-for-selection-mode/45154/3. **Expected behavior**; Accelerator for *Selection mode* works as intended. **Desktop (please complete the following information):**; - QuPath v0.2. **Additional context**. A few things should probably be done:; * Set *Shift + S* as an accelerator (need to check this isn't used elsewhere...); * Make *Selection mode* available in a menu (so its accelerator is displayed); * Log a warning if an accelerator is defined multiple times (within `QuPathGUI.registerAccelerator`); * Optional: Make it easier to define custom accelerators for actions through `QuPathGUI` (see workaround script posted on the forum)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/638:642,avail,available,642,https://qupath.github.io,https://github.com/qupath/qupath/issues/638,1,['avail'],['available']
Availability,"## Bug report. **Describe the bug**; Trying to reload a saved KNN object or pixel classifier fails with the exception; ```; java.lang.RuntimeException: OpenCV(4.5.1) /Users/runner/work/javacpp-presets/javacpp-presets/opencv/cppbuild/macosx-x86_64/opencv-4.5.1/modules/core/src/persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'getName'; ```. **To Reproduce**; Steps to reproduce the behavior:; 1. Create and annotate some cells to train an object classifier within a project; 2. Select 'K nearest neighbor' as the classifier type; 3. Save the classifier in the project; 4. Try to reload and apply the classifier with *Load object classifier*. The problem exists also for pixel classifiers. **Expected behavior**; KNN classifier should reload. If it cannot be reloaded, the option to create (and save) a KNN classifier shouldn't be provided. **Desktop (please complete the following information):**; - OS: macOS (possibly others?); - QuPath Version v0.2.3. **Additional context**; See https://forum.image.sc/t/knn-error-opencv-4-3-0-c-projects-javacpp/54234; It isn't clear if this can be resolved within QuPath, or the problem is too deep in OpenCV.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/752:299,error,error,299,https://qupath.github.io,https://github.com/qupath/qupath/issues/752,2,['error'],"['error', 'error-opencv-']"
Availability,"## Bug report. **Describe the bug**; When I open one of my scripts located in the script directory (directly from the menu) I get the following error messages:. ```; INFO: Loading script file C:\***script.groovy; ERROR: QuPath exception; at javafx.scene.control.skin.MenuButtonSkinBase.lambda$new$7(MenuButtonSkinBase.java:188); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source); ```; I can still use the script editor, just need to close the warning.; I've tried changing directory or resaving the scripts but it didn't change anything... **Desktop (please complete the following information):**; - OS: Windows; - QuPath Version 0.2.0-m3",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/349:144,error,error,144,https://qupath.github.io,https://github.com/qupath/qupath/issues/349,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"## Bug report. **Describe the bug**; When QuPath is first launched, a few key options are presented to the user - which are currently the memory settings, locale and whether to check for updates. Except that these are no longer really key. The memory setting was important in early releases, when memory was specified in absolute terms (e.g. 4GB). Most users would want to increase it depending upon what is available. However, now memory defaults to 50% of the available system memory, which means it's less likely to require adjustment. What's more, the memory can't even be adjusted on macOS anyway due to permissions limitations. Changing the locale is also strongly discouraged, since it can cause confusion - especially when inputting numbers (using a comma or decimal separator). Therefore space is give to a dialog that is no longer fully functional on all platforms, and isn't really needed. **To Reproduce**; Check the current display via *Help &rarr; Show setup options*. **Expected behavior**; Three main things:; * Show a more informative and useful startup dialog, e.g. to introduce the user interface, forum or documentation.; * Relegate non-essential options to the preferences.; * Retain a checkbox to specify whether to check for updates or not. **Screenshots**. Current dialog, as it appears on a Mac.; ![Screenshot 2022-06-02 at 09 37 51](https://user-images.githubusercontent.com/4690904/171590676-2b69b837-681f-4838-9d9e-1fcf6ed5ab5d.png). **Desktop (please complete the following information):**; - OS: All; - QuPath v0.3.2. **Additional context**; The locale settings have already been moved to the preferences in https://github.com/qupath/qupath/pull/971; This issue really exists to track the progress of the other required changes for v0.4.0.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/986:408,avail,available,408,https://qupath.github.io,https://github.com/qupath/qupath/issues/986,2,['avail'],['available']
Availability,"## Bug report. **Describe the bug**; When comparing intensity features computed with square and circular masks using *Show measurement map*, I noticed that there seemed to be a slight shift. Digging into code, the relevant bit is [starts here](https://github.com/qupath/qupath/blob/bb3cdab740836e5f39b6d306ee2ccd5b2740a52d/qupath-core-processing/src/main/java/qupath/lib/algorithms/IntensityFeaturesPlugin.java#L612). Adding a line; ```java; new ImagePlus(""Something"", new FloatProcessor(w, h, pixelImage.getArray(false))).show();; ```; makes it possible to visualize the image in ImageJ. The screenshot suggests there could be an issue of shifting, at least if the width and height of the region is an even number. <img width=""610"" alt=""Screenshot 2023-02-22 at 17 25 32"" src=""https://user-images.githubusercontent.com/4690904/220707461-a26ec296-fc85-48fe-b5a3-caf3c62472ab.png"">. If there is an odd number of pixels, the result looks ok:. <img width=""666"" alt=""Screenshot 2023-02-22 at 17 27 29"" src=""https://user-images.githubusercontent.com/4690904/220707864-6c3a5ffc-7d65-44be-ac48-e74d0c9491c2.png"">. (The contrast was changed differently in each case, to highlight the excluded pixels with NaN values). **Expected behavior**; No apparent shift, regardless of whether there is an even or odd number of pixels in the image. **Desktop (please complete the following information):**; - OS: All; - QuPath Version: Probably all up to v0.4.x. **Additional context**; This shouldn't be addressed in an 0.0.x release, since it would change results. But the circular tiles calculation should be revisited for a major release, since 1 pixel could be a substantial shift if the region is small (e.g. a low-resolution tile).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1239:105,mask,masks,105,https://qupath.github.io,https://github.com/qupath/qupath/issues/1239,1,['mask'],['masks']
Availability,"## Bug report. **Describe the bug**; When converting an image from the command line, progress may be logged - but no message is given when the conversion is complete. This is often ok when running from a terminal, but is awkward if running in eclipse - where it is less clear that the process is complete. **To Reproduce**; Run a command such as; ```; QuPath convert-ome /path/to/CMU-1-Small-Region.svs /path/to/CMU-1-Small-Region2.ome.tif ; ```. Based only on what is printed, it looks like conversion hangs at 97% - when in fact it did terminate properly.; ```; 07:48:16.170 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Writing resolution 1 of 1 (downsample=1.0, 30 tiles); 07:48:16.173 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Writing plane 1/1; 07:48:16.394 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Written 10% tiles; 07:48:16.492 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Written 20% tiles; 07:48:16.597 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Written 30% tiles; 07:48:16.660 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Written 40% tiles; 07:48:16.744 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Written 50% tiles; 07:48:16.800 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Written 60% tiles; 07:48:16.864 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Written 70% tiles; 07:48:16.935 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Written 80% tiles; 07:48:17.036 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Written 90% tiles; 07:48:17.091 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Written 97% tiles; ```; **Expected behavior**; A clear message printed when conversion is successful, ideally also with timing information. **Desktop (please complete the following information):**; - OS: All; - QuPath Version 0.3.0",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/859:656,down,downsample,656,https://qupath.github.io,https://github.com/qupath/qupath/issues/859,1,['down'],['downsample']
Availability,"## Bug report. **Describe the bug**; When creating a measurement table and entering text in the 'column filter' textfield, an exception can appear. ```; ERROR: QuPath exception: TableColumn.visible : A bound value cannot be set.; java.lang.RuntimeException: TableColumn.visible : A bound value cannot be set.; at javafx.beans.property.BooleanPropertyBase.set(BooleanPropertyBase.java:141); at javafx.scene.control.TableColumnBase.setVisible(TableColumnBase.java:230); at qupath.lib.gui.commands.SummaryMeasurementTableCommand.lambda$18(SummaryMeasurementTableCommand.java:379); at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:360); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); ```. **To Reproduce**; Steps to reproduce the behavior:; 1. Open an image; 2. Detect some cells; 3. Run *Measure &rarr; Show detection measurements*; 4. Type something in the 'Column filter' field; 5. See the exception pop up (although the filter is applied). **Expected behavior**; No exceptions. **Desktop (please complete the following information):**; - OS: All (presumably); - QuPath Version: v0.4.1",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1209:153,ERROR,ERROR,153,https://qupath.github.io,https://github.com/qupath/qupath/issues/1209,1,['ERROR'],['ERROR']
Availability,"## Bug report. **Describe the bug**; When optimising perameters for a project by creating a sparse composite image from different image entries. When running cell detection using script editor, errors are generated for the final tiles **IF** the entire shape is not a perfect rectangle. If using stardist script for cell detection, errors are generated before any detections. **Can avoid both by manual annotation** with a polygon tool to follow image boundaries -> so not sure if a crucial bug. Carried over from last release to v5. **To Reproduce**; Steps to reproduce the behavior:; 1. Ctl+Shift+A; 2. Run cell detection as a script:; ```; setImageType('FLUORESCENCE');; selectAnnotations();; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', '{""detectionImage"":""DAPI"",""requestedPixelSizeMicrons"":0.1,""backgroundRadiusMicrons"":4.0,""backgroundByReconstruction"":true,""medianRadiusMicrons"":1.0,""sigmaMicrons"":2.5,""minAreaMicrons"":11.0,""maxAreaMicrons"":400.0,""threshold"":1000.0,""watershedPostProcess"":true,""cellExpansionMicrons"":5.0,""includeNuclei"":true,""smoothBoundaries"":true,""makeMeasurements"":true}'); ```; 4. Error:; ```; ERROR: Error running plugin: java.lang.NullPointerException: Cannot invoke ""java.awt.image.BufferedImage.getSampleModel()"" because ""img"" is null; java.util.concurrent.ExecutionException: java.lang.NullPointerException: Cannot invoke ""java.awt.image.BufferedImage.getSampleModel()"" because ""img"" is null; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractTaskRunner.awaitCompletion(AbstractTaskRunner.java:147); at qupath.lib.plugins.AbstractTaskRunner.runTasks(AbstractTaskRunner.java:117); at qupath.lib.gui.TaskRunnerFX.runTasks(TaskRunnerFX.java:106); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:147); at qupath.lib.gui.QuPathGUI.runPlugin(QuPathGUI.java:2245); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:248); ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1443:194,error,errors,194,https://qupath.github.io,https://github.com/qupath/qupath/issues/1443,2,['error'],['errors']
Availability,"## Bug report. **Describe the bug**; When right clicking the drop down box to toggle channel selection for pixel classifier (see below), the channel options and the intended options show at the same time causing overlap. Note: using a macbook and a trackpad. . **To Reproduce**; Steps to reproduce the behavior:; 1. Go to ""train pixel classifier""; 2. Click on ""edit"" next to ""features""; 3. Right click on channels ; 4. Both the channels and the Select all/none options appear; <img width=""820"" alt=""image"" src=""https://github.com/qupath/qupath/assets/42358257/dd15195c-ebfb-4118-948a-202b7c2ff5b2"">. **Expected behavior**; <img width=""824"" alt=""image"" src=""https://github.com/qupath/qupath/assets/42358257/3d10e366-524c-42cb-a438-8741abeb7434"">. **Screenshots**. **Desktop (please complete the following information):**; - OS: macOS; - QuPath Version: 0.5.1. **Additional context** ; Unsure if it's specific to mac and/or the trackpad",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1498:66,down,down,66,https://qupath.github.io,https://github.com/qupath/qupath/issues/1498,1,['down'],['down']
Availability,"## Bug report. **Describe the bug**; When training a pixel classifier, the input resolution must be specified.; This is *usually* in µm per pixel. However, for an uncalibrated image it will be a downsample value. This is (as far as I know) internally consistent: if you apply only to calibrated or uncalibrated images, everything should work. However, if you train a pixel classifier on an uncalibrated image and then apply it to calibrated image then the downsample value may be different from what is expected - because the resolution is based upon the known pixel size, irrespective of the units. For example, suppose I train a classifier on an uncalibrated image with downsample = 2.; * If I apply it to an uncalibrated image (where the pixel size is 1 pixel), the downsample will be calculated as 2 / 1 = 2.; If I apply it to a calibrated image where the pixel size is 0.5 µm, the downsample will be calculated as 2 / 0.5 = 4. **Expected behavior**; The downsample factor should be 2 in both the above cases. **Additional context**; QuPath really only supports uncalibrated images, and pixel sizes in µm.; No effort is made currently to handle pixel sizes in other units.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/531:195,down,downsample,195,https://qupath.github.io,https://github.com/qupath/qupath/issues/531,6,['down'],['downsample']
Availability,"## Bug report. **Describe the bug**; When trying to open a brightfield image with extremely faint staining/no tissue at all, attempts to auto-estimate the stain vectors fail with an extremely uninformative message:. <img width=""419"" alt=""/ by zero error"" src=""https://user-images.githubusercontent.com/4690904/147403042-90adf701-d11d-4581-b8e7-fb830b3a57b0.png"">. The stack trace contains something like; ```; ERROR: Load ImageData; java.lang.ArithmeticException: / by zero; at qupath.lib.gui.tools.GuiTools.estimateImageType(GuiTools.java:353); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2843); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:187); ```. **To Reproduce**; Steps to reproduce the behavior:; 1. Create an entirely white RGB image; 2. Try to open the image in QuPath, with auto-estimate stain vectors selected; 3. See the error. **Expected behavior**; A more informative error should be displayed or logged. I first noticed the problem at https://forum.image.sc/t/problem-about-opening-some-svs-slides-in-qupath-v0-3-1-bio-formats-6-8-0/61404/15 - and the confusing error message masked the underlying file format issue. **Desktop (please complete the following information):**; - OS: All; - QuPath v0.3.1 (and before)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/880:248,error,error,248,https://qupath.github.io,https://github.com/qupath/qupath/issues/880,6,"['ERROR', 'error', 'mask']","['ERROR', 'error', 'masked']"
Availability,"## Bug report. **Describe the bug**; When using *Add intensity features*, the parameters are determined by the *first* image that is opened.; They are not reset when later opening other images. **To Reproduce**; Steps to reproduce the behavior:; 1. Create a project with two different types of image (or fluorescence images with different channel names); 2. Open one image, then choose *Add intensity features*, check the channel options, and close the dialog again; 3. Open another image, then check options under *Add intensity features*; 4. See that the channel names are unchanged. **Expected behavior**; Channels (and any other relevant parameters) are updated for the current image. **Desktop (please complete the following information):**; - OS: All; - QuPath Version v0.3.0 (and probably earlier). **Additional context**; See https://forum.image.sc/t/add-intensity-feature-error/59602. Simply removing `parametersInitialized` [here](https://github.com/qupath/qupath/blob/88c7cc45648c1d5b09a840bd1e497ea9a46453aa/qupath-core-processing/src/main/java/qupath/lib/algorithms/IntensityFeaturesPlugin.java#L655) might be sufficient, but this needs a bit more exploration.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/836:881,error,error,881,https://qupath.github.io,https://github.com/qupath/qupath/issues/836,1,['error'],['error']
Availability,"## Bug report. **Describe the bug**; When using Ctrl+Shift to avoid overlapping annotations, QuPath is taking annotations on other z-slices into account. **To Reproduce**; - Have a multi-z image open in QuPath; - Draw an annotation; - Move up to a different z-slice; - Hold down Ctrl and Shift and try and draw an annotation that would overlap with your first one if they were on the same slice. **Expected behavior**; I expected this to work on a per-slice method and that Ctrl + Shift would only take into account the annotations on the current slice. **Screenshots**; ![QuPath_Bug](https://user-images.githubusercontent.com/36237950/151961462-76c5c84f-6174-4692-8fa8-e566f5f021c2.png). **Desktop:**; - OS: Windows 10; - QuPath Version: 0.3.2, 0.3.0 and 0.2.3",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/905:274,down,down,274,https://qupath.github.io,https://github.com/qupath/qupath/issues/905,1,['down'],['down']
Availability,"## Bug report. **Describe the bug**; When using the File > Project > Import Images from QuPath 0.1.2, projects containing multi-series files are not imported correctly. . This is the case when the user imports a VSI file into QuPath (Which can contain several series) but deletes one or several series from the project. . **To Reproduce** ; See provided zip containing:; [ Download Zip File (239MB) ](https://drive.switch.ch/index.php/s/fCOEPp2DIQD8qv1); QuPath 0.1.2 Original Project; QuPath 0.2.0 Imported Project; QuPath 0.2.0 Created from scratch, with images deleted to match QuPath 0.1.2 Original Project; (Notice differences in 'data' folder of both QuPath 0.2.0 projects). **Steps to reproduce the behavior:**; 1. Create a QuPath 0.1.2 Project with a VSI file that has multiple series; 2. After importing delete one image (not the last image or you will not see the effect); 3. Save the project; 4. Create a new Project in QuPath 0.2.0; 5. Use File > Project > Import Images from QuPath 0.1.2; 6. After import, notice how QuPath 0.2.0 loads the wrong images. **Expected behavior**; QuPath Projects that are re-imported from multi-series file should be consistent even if the user did not keep all files in the project. **Screenshots**; ![Side-by-side](https://user-images.githubusercontent.com/319932/84012181-75285000-a977-11ea-84b2-b10688ecdbcb.jpg); Left: QuPath 0.1.2; Right: QuPath 0.2.0; The thumbnail for both images is the same and it opens the same image twice. **Desktop (please complete the following information):**; - OS: Windows 10 x64; - QuPath Version 0.2.0. **Additional context**; When replicating what the user did from scratch in QuPath 0.2.0, we end up with the following the structure in 'data' is not the same as from the Import Images from QuPath 0.1.2 command.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/515:373,Down,Download,373,https://qupath.github.io,https://github.com/qupath/qupath/issues/515,1,['Down'],['Download']
Availability,"## Bug report. **Describe the bug**; When using the TMA grid viewer, adjusting the size of the window to smaller than the largest tile results in a break. **To Reproduce**; Steps to reproduce the behaviour:; 1. Create a TMA grid (either using dearrayer or specify TMA grid) ; 2. Open up the grid view via _Measure -> show views-> show TMA grid view_; 3. Set the tile size to large; 4. Narrow the window below the tile width; 5. An error may appear. **Expected behavior**; No error. **Screenshots**. **Desktop (please complete the following information):**; Windows v0.5.0. **Additional context**. ```; 14:54:59.317	[JavaFX Application Thread]	ERROR	qupath.lib.gui.QuPathUncaughtExceptionHandler	/ by zero	java.lang.ArithmeticException: / by zero; 	at qupath.lib.gui.commands.PathObjectGridView$QuPathGridView.layoutChildren(PathObjectGridView.java:588); 	at javafx.scene.Parent.layout(Parent.java:1208); 	at javafx.scene.Parent.layout(Parent.java:1215); 	at javafx.scene.Parent.layout(Parent.java:1215); 	at javafx.scene.Parent.layout(Parent.java:1215); 	at javafx.scene.Parent.layout(Parent.java:1215); 	at javafx.scene.Scene.doLayoutPass(Scene.java:594); 	at javafx.scene.Scene$ScenePulseListener.pulse(Scene.java:2596); 	at com.sun.javafx.tk.Toolkit.lambda$runPulse$2(Toolkit.java:398); 	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399); 	at com.sun.javafx.tk.Toolkit.runPulse(Toolkit.java:397); 	at com.sun.javafx.tk.Toolkit.firePulse(Toolkit.java:427); 	at com.sun.javafx.tk.quantum.QuantumToolkit.pulse(QuantumToolkit.java:592); 	at com.sun.javafx.tk.quantum.PaintCollector.liveRepaintRenderJob(PaintCollector.java:327); 	at com.sun.javafx.tk.quantum.GlassViewEventHandler$ViewEventNotification.run(GlassViewEventHandler.java:889); 	at com.sun.javafx.tk.quantum.GlassViewEventHandler$ViewEventNotification.run(GlassViewEventHandler.java:849); 	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399); 	at com.sun.javafx.tk.quantum.G",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1473:431,error,error,431,https://qupath.github.io,https://github.com/qupath/qupath/issues/1473,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"## Bug report. **Describe the bug**; When using the `TileExporter`, pixel size and channel color information can be lost. **To Reproduce**; Use the `TileExporter` class to export fixed-size tiles as ImageJ TIFF, e.g. with this script applied to the LuCa sample image:. ```groovy; def path = buildPathInProject(""tiles""); mkdirs(path); def imageData = getCurrentImageData(); new TileExporter(imageData); .writeTiles(path); ```. Open the resulting TIFFs in ImageJ and see that no calibration is set. **Expected behavior**; Channel colors are preserved, and the image properties are set (pixel size and origin). **Desktop (please complete the following information):**; - OS: All; - QuPath Version: v0.5.1 (and earlier). **Additional context**; Relates to https://github.com/qupath/qupath/issues/1503 but is not identical. The relevant code is at; https://github.com/qupath/qupath/blob/0ab5d054a2aac2e21d1bcc234306e164e44965bb/qupath-core/src/main/java/qupath/lib/images/writers/TileExporter.java#L786. The difficulty is guaranteeing that tiles have a fixed size, rather than risking an off-by-one error, when we can only define the region with an `ImageServer` and `RegionRequest` that can have an arbitrary downsample.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1516:1094,error,error,1094,https://qupath.github.io,https://github.com/qupath/qupath/issues/1516,2,"['down', 'error']","['downsample', 'error']"
Availability,"## Bug report. **Describe the bug**; When using the brush tool, I can not add an area to or remove from existing annotations that were created using the „simple tissue detection“ command. This was possible with the same files yesterday when using the m9 version. Creating entirely new annotations with the brush tool does work, as well as using the brush tool to add to/remove from these new annotations. The existing annotations are of course all „unlocked“ and everything is as it was set to in m9. **To Reproduce**; 1. open a project that has an an image with existing annotations that were created using the „simple tissue detection“ command.; 2. select one of the existing annotations (if not done already, right click the annotation and set it to „unlocked“ or do so for all annotations by using the annotations tab); 3. click on the brush tool or press „B“; 4. try to edit the exisitng annotation while holding down Shift or CMD. **Expected behavior**; The annotations should be editable like this. **Desktop:**; - OS: macOS 10.14.6 on MacBook Air 2014, 1.4 GHz i5, 4GB RAM, Intel HD Graphics 5000; - QuPath Version: 0.2.0-m10",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/456:918,down,down,918,https://qupath.github.io,https://github.com/qupath/qupath/issues/456,1,['down'],['down']
Availability,"## Bug report. **Describe the bug**; When we search for a script in a folder via 'Automation -> Shared Scripts' , the list of scripts corresponds exactly to those inside the folder. But if we move the mouse on another folder, and then go back on the first folder, the list of scripts has now doubled in size, with duplicates of scripts. Doing like this many times, it adds duplicates of scripts at each iteration. The list can be re-initialized when you exit from 'Automation -> Shared Scripts'. **To Reproduce**; Steps to reproduce the behavior:; 1. Go to 'Automation -> Shared Scripts' ; 2. Select on folder but do NOT OPEN any script; 3. Move your mouse to another folder; 4. Move your mouse back to the first folder; 5. See that the list of available scripts is now doubled with duplicates of scripts. **Expected behavior**; Should only display the list of available scripts, without any duplicates, even if we select this folder more than once. **Screenshots**; ![QuPath040_bug_script](https://user-images.githubusercontent.com/64911638/205653051-987a1ec2-42ee-4729-ad02-13077204879f.gif). **Desktop**; - OS: Windows 11; - QuPath Version: 0.4.0",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1175:745,avail,available,745,https://qupath.github.io,https://github.com/qupath/qupath/issues/1175,2,['avail'],['available']
Availability,"## Bug report. **Describe the bug**; When working in a project and the computer or software crashes, you can later not access the file anymore that you were working on in the project. Meaning you loose all annotations and such. . **To Reproduce**; Steps to reproduce the behavior:; 1. Use your project with multiple files; 2. turn off your pc without saving or something error related; 3. Open the project again; 4. Try to open the image you were working in; 5. See error. ![image](https://user-images.githubusercontent.com/66477655/83880620-b46c5c00-a73f-11ea-9f5e-5c9c0ce802d0.png). **Expected behavior**; That the image is still accesible from an old version of the project. **Screenshots**. ![image](https://user-images.githubusercontent.com/66477655/83880655-c0f0b480-a73f-11ea-94ce-c4b19533e37d.png). **Desktop (please complete the following information):**; - OS: Windows; - QuPath Version 0.2.0",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/512:371,error,error,371,https://qupath.github.io,https://github.com/qupath/qupath/issues/512,2,['error'],['error']
Availability,"## Bug report. **Describe the bug**; [`OMEPyramidSeries`](https://github.com/qupath/qupath/blob/v0.2.3/qupath-extension-bioformats/src/main/java/qupath/lib/images/writers/ome/OMEPyramidWriter.java#L303) is not public. This is problematic, because it is returned by the associated builder and required in input arguments. This can cause unexpected failures. **To Reproduce**; Compare the following two Groovy scripts:. ```groovy; import qupath.lib.images.writers.ome.OMEPyramidWriter; var server = getCurrentServer(); var builder = new OMEPyramidWriter.Builder(server); OMEPyramidWriter.OMEPyramidSeries series = builder.build(); println series; ```. ```groovy; import qupath.lib.images.writers.ome.OMEPyramidWriter; var server = getCurrentServer(); var builder = new OMEPyramidWriter.Builder(server); var series = builder.build(); println series; ```. The first fails - with no error logged. The second should succeed. **Expected behavior**; Both should succeed. **Desktop (please complete the following information):**; - QuPath v0.2.x. **Additional context**; See https://forum.image.sc/t/create-more-than-series-using-qupath/52849",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/726:347,failure,failures,347,https://qupath.github.io,https://github.com/qupath/qupath/issues/726,2,"['error', 'failure']","['error', 'failures']"
Availability,"## Bug report. **Describe the bug**; _Load Classifier_ attempts, or scripts which attempt to run pixel classifiers automatically, fail without error for the _Create simple thresholder_ (experimental) function.; ![image](https://user-images.githubusercontent.com/23145209/74885105-a11cb880-5329-11ea-8165-f6e20af6cc91.png). **To Reproduce**; Steps to reproduce the behavior:; Create a Create simple thresholder.; Save it.; ![image](https://user-images.githubusercontent.com/23145209/74885541-acbcaf00-532a-11ea-8554-2a6bf622b709.png). (Optional) Create annotation or detection objects (Success!); Close the pixel classifier; Load Pixel Classifier; Select your pixel classifier and see that the overlay looks correct for the previously created thresholder.; **Attempt to _Create objects_ creates no objects.**. **Expected behavior**; After loading the classifier successfully, objects are create-able. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; Windows7,10. QuPath 0.2.0m8,m9. Side note: _Classify Detections_, when working off of a loaded classifier, seems to try to do something, then fails with a whole lot of:; `WARN: Classification Unclassified is invalid! Will be set to null instead`",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/403:143,error,error,143,https://qupath.github.io,https://github.com/qupath/qupath/issues/403,1,['error'],['error']
Availability,"## Bug report. **Describe the bug**; fail to build qupath with openjdk on ArchLinux. **To Reproduce**; Steps to reproduce the behavior:; ```bash; cd qupath-0.4.3; gradle clean jpackage -Porg.gradle.java.home=/usr/lib/jvm/default; ```. **Expected behavior**; success to build qupath 0.4.3. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: ArchLinux; - QuPath Version: 0.4.3; - java: jdk-openjdk 20.0.1.u9-3; - gradle: 8.1.1. **Additional context**; logs:; ```text; > Configure project :qupath-app; Unable to determine Java version from toolchain: No matching toolchains found for requested specification: {languageVersion=17, vendor=any, implementation=vendor-specific}.; Unable to determine Java version from toolchain: No matching toolchains found for requested specification: {languageVersion=17, vendor=any, implementation=vendor-specific}. FAILURE: Build failed with an exception. * Where:; Build file '/build/qupath/src/qupath-0.4.3/qupath-app/build.gradle' line: 540. * What went wrong:; A problem occurred configuring project ':qupath-app'.; > Failed to calculate the value of task ':qupath-app:compileJava' property 'javaCompiler'.; > No matching toolchains found for requested specification: {languageVersion=17, vendor=any, implementation=vendor-specific}.; > No locally installed toolchains match (see https://docs.gradle.org/8.1.1/userguide/toolchains.html#sec:auto_detection) and toolchain download repositories have not been configured (see https://docs.gradle.org/8.1.1/userguide/toolchains.html#sub:download_repositories).; ```; It seems related to how we specify the toolchain, https://github.com/qupath/qupath/blob/1368912885c1a191beaea32c28d85a3707f657f8/qupath-app/build.gradle#L535-L548; Maybe, we could follow this: https://github.com/Project-MONAI/MONAILabel/blob/0332f42643015046055a3410b770d1e8a0e1bd57/plugins/qupath/build.gradle#L39-L51; Just add a project property `toolchain` wit",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1262:937,FAILURE,FAILURE,937,https://qupath.github.io,https://github.com/qupath/qupath/issues/1262,1,['FAILURE'],['FAILURE']
Availability,"## Bug report. *Describe the bug*; At some downsample levels, images can display a 1 pixel-width black column on the right edge. *To Reproduce*; 1. Open the [GTEX-12584-1526 image](https://brd.nci.nih.gov/brd/imagedownload/GTEX-12584-1526; ). This image has levels with downsamples 1, 4, and 16.; 2. Check the right edge of the image. No black column, everything is normal.; 3. Click on File, Export images..., Original pixels, JPEG (or PNG) and downsample of 32.; 4. Check the right edge of the produced image. There is a black column of width 1. *Expected behavior*; No black column on any downsample. *Desktop:*; - OS: macOS and Linux, so probably not OS dependant.; - QuPath Version: 0.6.0-SNAPSHOT. *Additional context*; The problem occurs in the [AbstractTileableImageServer.readRegion()](https://github.com/qupath/qupath/blob/76415104d0653c674716d69a1ecb51e59dae0e83/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L266) function. When requesting an image with downsample 32:; * A black image of width 1432 (=`round(imageWidth/32)`) is created ([here](https://github.com/qupath/qupath/blob/76415104d0653c674716d69a1ecb51e59dae0e83/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L302C4-L302C17)).; * All tiles with downsample 16 (because it's the lowest resolution) are retrieved ([here](https://github.com/qupath/qupath/blob/76415104d0653c674716d69a1ecb51e59dae0e83/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L275C3-L275C13)).; * Images corresponding to the above tiles are drawn to the above black image ([here](https://github.com/qupath/qupath/blob/76415104d0653c674716d69a1ecb51e59dae0e83/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L328)). The problem is that the resulting image of downsample 32 is of width 1432, which corresponds to pixels 0 to **45824** (=`1432*32`) of the full resolution image on the x-axis, while the width o",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1527:43,down,downsample,43,https://qupath.github.io,https://github.com/qupath/qupath/issues/1527,4,['down'],"['downsample', 'downsamples']"
Availability,"## Bug report. Sometimes when running cell detection (`qupath.imagej.detect.cells.WatershedCellDetection`) in the parallel tiled mode it will fail saying `ERROR: Exception during post-processing`. It appears the final QuPath method call before calling into a library is `qupath.lib.plugins.ParallelTileObject.resolveOverlaps`, and the error is from [line 280](https://github.com/qupath/qupath/blob/cf618cb91a7e43716c3a4bc7b431de6a88ee98be/qupath-core/src/main/java/qupath/lib/plugins/ParallelTileObject.java#L280), the offending call being `firstGeometry.intersection(secondGeometry)`. The error message from this is `Caused by found non-noded intersection between LINESTRING ( 6336.81 3918.04, 6335.4 3918.39 ) and LINESTRING ( 6335.39013671875 3918.389892578125, 6335.41 3918.39 ) [ (6335.400213222254, 3918.38994707249, NaN) ] at org.locationtech.jts.noding.FastNodingValidator.checkValid(FastNodingValidator.java:140)`. **To Reproduce**; [This script](https://gist.github.com/reynoldscem/4d5f5bf0428057769da6bfd54037e02e) should reproduce the issue. One such image for which this happens is `breast_2/scale-20pc/HE.jpg` from the [ANHIR](https://anhir.grand-challenge.org/Data/) dataset. To reproduce manually we can:. Load an image, and make a rectangular selection around it all. Go to Analyze, Cell Detection, choose the appropriate settings and run. **Expected behavior**; I expect the cell detection to work. As it is, the cells are only detected for some subset of the tiles. **Screenshots**; As we can see only some of the tiles here finish. ![image](https://user-images.githubusercontent.com/5931862/80495409-c9471a00-895f-11ea-942d-cd3b98446c0d.png). **Desktop (please complete the following information):**; - OS: Ubuntu 19.10; - QuPath Version 0.2.0-m10, but I have seen the same issue in m9. Please let me know anything I can try to work around this, or any info on potentially fixing this problem.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/459:155,ERROR,ERROR,155,https://qupath.github.io,https://github.com/qupath/qupath/issues/459,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"## Bug report; I have a script which extracts tiles from specific regions in WSIs. In a python object, I call a subprocess which runs this script on WSIs. I'm using a mixture of tif files (from ventana), svs (from aperio) and ndpi (from hamamatsu). When I run the tile extraction over my ~1000 scans, things work fine for the most part, but occasionally I get a core dump error from java. If I run the code on the *same* image it just broke on again, it works fine. There is seemingly no regularity to which images it fails on, other than they seem to be "".tif"" files. I have never had this bug appear on previous versions of QuPath. I attach the log I get when Java core dumps, and I also attach the tile extraction script I am using (converted to txt as it won't let me upload a groovy script). Somewhat out of my depth when it comes to understanding this, but it seems pretty clear it's a bug. [wsi_patch_extractor.txt](https://github.com/qupath/qupath/files/8168829/wsi_patch_extractor.txt). [hs_err_pid314639.log](https://github.com/qupath/qupath/files/8168813/hs_err_pid314639.log). **To Reproduce**; I run the groovy script with ""qupath script my_script --args [...]"", and have a symbolic link to the qupath binary in ""/home/user/bin/qupath"". I'm not sure sending test images will help, as it sometimes runs on 100s before breaking. **Expected behavior**; In the vast majority of cases, the tile extractor script works exactly as I'd expect, and creates a directory filled with tiles. **Desktop (please complete the following information):**; - OS: Ubuntu 20.04.4 LTS; - QuPath Version 0.3.2",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/932:372,error,error,372,https://qupath.github.io,https://github.com/qupath/qupath/issues/932,1,['error'],['error']
Availability,"## Bug report; I've created an object classifier and I am unable to load it on other images in the project. I am also unable to reload the classifier on the image it was originally classified from. I'm working in version (0.2.0-m8), with H&E Brightfield. On a windows PC. **To Reproduce**; Steps to reproduce the behavior:; 1. Go to 'Automate'; 2. Click on 'script editor'; 3. Run script runClassifier(with its location\\classifiername.qpclassifier); 4. See error. INFO: Training size: org.bytedeco.opencv.opencv_core.Size[address=0x21bc548ef30,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x21bc548ef30,deallocatorAddress=0x7fffcf445770]]; INFO: Responses size: org.bytedeco.opencv.opencv_core.Size[address=0x21bc548eee0,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x21bc548eee0,deallocatorAddress=0x7fffcf445770]]; INFO: RTrees classifier termination criteria: org.bytedeco.opencv.opencv_core.TermCriteria[address=0x21bd927fa80,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x21bd927fa80,deallocatorAddress=0x7fffcf445930]]; INFO: Classifier trained with 31 samples; INFO: Reading classifier qupath.opencv.classify.RTreesClassifier@66e8a849 complete!; INFO: Classification time: 0.00 seconds; WARN: No objects classified!. I'm expecting the cells to be differentiated into immune cells and non-immune cells",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/406:458,error,error,458,https://qupath.github.io,https://github.com/qupath/qupath/issues/406,1,['error'],['error']
Availability,"## Bug report; Pressing and holding the mouse button while moving the mouse throws an exception when using the wand or brush tool. A shape is added at the point where the cursor was when the mouse was pressed, but no subsequent drawing is conducted. If you select any of these tools and use them by pressing and releasing the mouse without moving the cursor a shape will be added without throwing an exception. **To Reproduce**; Steps to reproduce the behavior:; 1. Go to the main window; 2. Click on brushtool; 3. Draw somethin; 4. See error. **Expected behavior**; Should work as in previous versions. **Desktop (please complete the following information):**; - Ubuntu 19.10; - QuPath Version 0.2.0m3-7. **Additional context**; Works fine in 0.2.0m2; ```; ERROR: QuPath exception: OpenCV(4.1.2) /home/travis/build/javacpp-presets/opencv/cppbuild/linux-x86_64/opencv-4.1.2/modules/imgproc/src/drawing.cpp:1895: error: (-215:Assertion failed) radius >= 0 && thickness <= MAX_THICKNESS && 0 <= shift && shift <= XY_SHIFT in function 'circle'. at org.bytedeco.opencv.global.opencv_imgproc.circle(Native Method); at qupath.opencv.tools.WandToolCV.createShape(WandToolCV.java:424); at qupath.lib.gui.viewer.tools.BrushTool.getUpdatedObject(BrushTool.java:326); at qupath.lib.gui.viewer.tools.BrushTool.mouseDragged(BrushTool.java:302); at qupath.lib.gui.viewer.tools.AbstractPathTool.lambda$registerTool$0(AbstractPathTool.java:333); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainIm",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/380:537,error,error,537,https://qupath.github.io,https://github.com/qupath/qupath/issues/380,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"## Bug report; QuPath 0.3 will not open on a CentOS 7 machine. Qupath 0.2.3 works fine in the same machine. I attach the full log. Steps to reproduce the behavior:; Execute the .sh file from the terminal. **Expected behavior**; To open the graphical interface. **Log**; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Sep 22, 2021 2:59:18 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @37052337'; *** Error in `/home/xxx/QuPath-0.3/bin/QuPath': free(): invalid pointer: 0x00007f726889bbc0 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81679)[0x7fa4aa191679]; /usr/lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f7268605ed2]; /usr/lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7268606323]; /usr/lib64/libstdc++.so.6(+0x71295)[0x7f7268607295]; /lib64/libpthread.so.0(+0x61cb)[0x7fa4a9ad31cb]; /usr/lib64/libstdc++.so.6(+0x712e1)[0x7f72686072e1]; /usr/lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7268607323]; /usr/lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f726860417c]; /usr/lib64/dri/swrast_dri.so(+0x85930)[0x7f726bbe8930]; /lib64/ld-linux-x86-64.so.2(+0xf973)[0x7fa4aa9f3973]; /lib64/ld-linux-x86-64.so.2(+0x1454e)[0x7fa4aa9f854e]; /lib64/ld-linux-x86-64.so.2(+0xf784)[0x7fa4aa9f3784]; /lib64/ld-linux-x86-64.so.2(+0x13b3b)[0x7fa4aa9f7b3b]; /lib64/libdl.so.2(+0xeeb)[0x7fa4aa7e0eeb]; /lib64/ld-linux-x86-64.so.2(+0xf784)[0x7fa4aa9f3784]; /lib64/libdl.so.2(+0x14ed)[0x7fa4aa7e14ed]; /lib64/libdl.so.2(dlopen+0x31)[0x7fa4aa7e0f81]; /lib64/libGLX_system.so.0(+0x4444c)[0x7f726ecdd44c]; /lib64/libGLX_system.so.0(+0x4374a)[0x7f726ecdc74a]; /lib64/libGLX_system.so.0(+0x1f138)[0x7f726ecb8138]; /lib64/libGLX_system.so.0(+0x1a9d2)[0x7f726ecb39d2]; /lib64/libGLX_system.so.0(+0x1b7c6)[0x7f726ecb47c6]; /lib64/libGLX.so.0(glXChooseFBConfig+0x31)[0x7f726f5df6b1]; /home/xxx/.op",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/825:557,Error,Error,557,https://qupath.github.io,https://github.com/qupath/qupath/issues/825,1,['Error'],['Error']
Availability,"## Enhancement request. The Java Topology Suite option `isOverlayNG` is reported to help overcome some exceptions when manipulating complex geometries. I had intended to turn it on by default in v0.4.0, but it seems not to have happened. The workarounds described here are still required:; https://forum.image.sc/t/stardist-error-message-topologyexception/67708/6. The next QuPath release should ensure that it's really turned on. See https://forum.image.sc/t/error-when-merging-annotations/76738/6",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1244:324,error,error-message-topologyexception,324,https://qupath.github.io,https://github.com/qupath/qupath/issues/1244,2,['error'],"['error-message-topologyexception', 'error-when-merging-annotations']"
Availability,"## Feature request. **Describe the bug**; Some dialogs use a combination of an text entry box and up/down arrows for entering numerical values - the Simple thresholder would be an example. It would be great, if these UI elements would react to mouse wheel events for increments/decrements. On another note there are a few places where numerical UI entry elements are inconsistent now: The Simple thresholder is using the entry-field-with-up-down-arrows-variant whereas e.g. the positive cell detection does not. I guess it would make sense to use the same type in all these places. ;-). **Desktop (please complete the following information):**; - OS: Windows 10 64bit; - QuPath Version 0.2.0-m12",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/495:101,down,down,101,https://qupath.github.io,https://github.com/qupath/qupath/issues/495,2,['down'],"['down', 'down-arrows-variant']"
Availability,"## Feature request. **Is your feature request related to a problem? Please describe.**; At the moment, SVG exports [1] behave differently from their bitmap counterparts [2], in the sense that the bitmap exports include whichever overlays are currently displayed, but the SVG exports only include the original image. [1] File -> Export images -> Rendered SVG and File -> Export snapshot -> Current viewer content (SVG); [2] File -> Export images -> Rendered RGB (with overlays), File -> Export snapshot -> Main window content and File -> Export snapshot -> Current viewer content. **Describe the solution you'd like**; I would *both* types of exports to include overlays if the user so wishes. See the discussion on https://forum.image.sc/t/export-snapshot-current-view-content-svg-does-not-include-the-density-map/82740. **Describe alternatives you've considered**; I have a two-step workaround in the meantime:; 1. Export images -> Rendered SVG (Linked raster); 2. Hide the annotations and detections, then Export images -> Rendered RGB to overwrite the linked raster image, using PNG and the same downsample as used in step 1. **Additional context**; SVG is a great format. The files can be edited in [Inkscape](https://inkscape.org/) and also be used as-is in (recent versions of) Microsoft Office Word and Powerpoint. And they look great when printed, which is why I think it's important for QuPath to have the best possible SVG export functions.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1272:1099,down,downsample,1099,https://qupath.github.io,https://github.com/qupath/qupath/issues/1272,1,['down'],['downsample']
Availability,"## Feature request. **Is your feature request related to a problem? Please describe.**; Currently, the only way to know when Run for project completes is by actively watching the progress bar. For analyses that take many hours to complete, this is not feasible as most users would be working on something else, leaving QuPath in the background. Knowing when the analysis is complete will be helpful to be time-efficient with work. **Describe the solution you'd like**; A ""Notify when complete"" checkbox that when checked, will result in an audible notification and maybe cause QuPath to flash in the taskbar after ""Run for project"" is complete.; ![image](https://user-images.githubusercontent.com/57093006/181712393-8dfdd384-43a7-4645-b4ee-e7732005ec18.png). **Describe alternatives you've considered**; Currently, adding the following lines to the end of the script will result in a double ping, which is decently audible at least on Windows. One issue with this is that the last image needs to be explicitly specified, which may vary as the user works on the project.; ```; def name = GeneralTools.getNameWithoutExtension(getCurrentImageData().getServer().getMetadata().getName()); if(name.contains(""last_imageName"")){; java.awt.Toolkit.defaultToolkit.beep(); Thread.sleep(1000); java.awt.Toolkit.defaultToolkit.beep(); }; ```. **Additional context**; @petebankhead has mentioned that the sound is underwhelming on Mac OS, but I think that `beep()` uses the default notification sound from the OS. If necessary, QuPath could potentially come with a small custom sound file for notifications to be consistent across different OS.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1029:891,ping,ping,891,https://qupath.github.io,https://github.com/qupath/qupath/issues/1029,1,['ping'],['ping']
Availability,"## Feature request. **Is your feature request related to a problem? Please describe.**; OpenSlide supports `bounds` which are [used to crop the image](https://forum.image.sc/t/roi-annotation-to-openslide-coordinates/44475/3). Annotation exports (and possibly other exports) then have basically invalid coordinates to the image data, unless one's using OpenSlide's bounds. . **Describe the solution you'd like**; Exports should be wrt. the original image dimensions, so that other SW can work with the data without OpenSlide dependency.; Export should by default use absolute coordinates, and offer relative ones only as an option. Or, the offset information should be exported along with annotations. **Describe alternatives you've considered**; Manual management of metadata for each slide. Clumsy, chaotic and inflexible. **Additional context**; IMHO this is more a bug report than a feature request. We are dependent on some software (or worse, its version) to be able to work with the data. Any change to the OpenSlide, the library, failure to derive these coordinates etc. breaks everything.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1278:1037,failure,failure,1037,https://qupath.github.io,https://github.com/qupath/qupath/issues/1278,1,['failure'],['failure']
Availability,"## Feature request. **Is your feature request related to a problem? Please describe.**; When training a pixel classifier, various settings can be customized (including features). These automatically return to their defaults when the dialog is closed. See original discussion at https://forum.image.sc/t/change-default-settings-on-pixel-classifier/70371. **Describe the solution you'd like**; A more efficient way to set these values than through clicking in the UI. **Additional context**; This could be through a saved parameter file, or recovering the settings from an existing saved classifier (reloading a saved classifier is also a frequent request). Neither is entirely straightforward, given that the available settings change based upon image properties and not all settings are currently serialised in the JSON for a classifier. Potentially, this request could be relevant for object classifiers and density maps.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1055:539,recover,recovering,539,https://qupath.github.io,https://github.com/qupath/qupath/issues/1055,2,"['avail', 'recover']","['available', 'recovering']"
Availability,"## Feature request. Previous QuPath releases could use Bio-Formats' memoization to help with creating new file readers, at least when the initialization time was slow: https://bio-formats.readthedocs.io/en/latest/developers/matlab-dev.html#improving-reading-performance. This wasn't available in QuPath v0.4.0-v0.4.2 because we switched to Java 17, and [memoization was broken there](https://github.com/ome/bioformats/issues/3659#issuecomment-805134072). This is fixed in Bio-Formats 6.12.0, so we can reinstate it again. ### Effects of memoization. When opening an image with Bio-Formats, QuPath uses multiple Bio-Formats readers to access pixels in parallel. Each reader needs to be initialized. Generally this is fast, but sometimes (e.g. with certain files or file types) it is slow. In one particularly bad case (a very large .czi file) I've seen it take minutes. Memoization makes it possible to create `.bfmemo` files the first time a reader is created, so that subsequent readers can use these for faster initialization. ### Turning on memoization. Because memoization involves writing files to disk, users might not always want it. QuPath provides two preferences to control this:. * **Bio-Formats memoization time (ms)** If less than 0, don't use memoization. If >= 0, create a memoization file only if initialization of a reader takes longer than the specified milliseconds. If initialization is fast anyway, memoization is pretty pointless.; * **Bio-Formats memoization directory** If specified, store memoization files in here. Then they are persistent, and available when QuPath is reopened. *Otherwise*, store any memoization files in a temporary directory and delete the directory when QuPath is shut down. ### Default behavior. The default behavior (at least in v0.3.0 - v0.4.2) was to specify a memoization time of 500 ms, and not to specify a directory (i.e. only use temporary files). Upon inspection, it seems that this still creates temporary directories even if no `.bfmemo` fil",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1236:283,avail,available,283,https://qupath.github.io,https://github.com/qupath/qupath/issues/1236,1,['avail'],['available']
Availability,"## IMPORTANT!. ## Before we begin... Before submitting your bug report, please check the following:. * [ ] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [ ] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [ ] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [ ] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**. When exporting the following image ( https://matthews.sites.wfu.edu/misc/graphics/formats/uncompr.tif) using the OME Tiff option the resulting file has the wrong color format causing it to be unreadable by other applications and viewers. . I'm not sure if it is all images but it happened with every one I tried. **To Reproduce**; Steps to reproduce the behavior:; 1. Open an image (eg https://matthews.sites.wfu.edu/misc/graphics/formats/uncompr.tif); 2. Go to File Export -> OME Tiff and use default options (JPEG (lossy) downsample, 4.0, 256) ; 3. Attempt to open exported file in another image viewer (eg Kirta); 4. See error. **Expected behavior**. The image should be readable by other viewers that support tifs. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu; - QuPath Version: 0.4.3. **Additional context**. As discussed here https://github.com/libvips/libvips/issues/3397 changing the PhotometricInterpretation to YCrCb causes images to be displayed properly.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1254:1119,down,downsample,1119,https://qupath.github.io,https://github.com/qupath/qupath/issues/1254,2,"['down', 'error']","['downsample', 'error']"
Availability,"## IMPORTANT!. * [X] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [X] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [X] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [X] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; Object connections cause moderate viewer lag when downsample factor is less than 1, evident when panning. Very minor and niche issue, but I figured I'd open a ticket anyways. **To Reproduce**; Steps to reproduce the behavior:; 1. Run cell detection across a whole-slide annotation; 2. Generate object connections via ""Delaunay cluster features 2D""; 3. Set viewer downsample factor to 0.99 or less; 4. Observe lag when panning. Unchecking ""show object connections"" or setting a downsample factor greater than or equal to 1 will resolve this issue. **Expected behavior**; Visualizing objects overlaid onto images shouldn't result in substantial lag. **Screenshots**; Video recording: https://www.youtube.com/watch?v=qOBp2X6HVUc. **Desktop (please complete the following information):**; - OS: Windows 10; - QuPath Version: Version: 0.4.0-SNAPSHOT; Build time: 2022-01-24, 13:48. **Additional context**; A 24-class composite classifier, annotation-generating pixel classifier, and several other spatial analyses were also performed.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1069:559,down,downsample,559,https://qupath.github.io,https://github.com/qupath/qupath/issues/1069,3,['down'],['downsample']
Availability,"## IMPORTANT!. **This is only for bug reports - for questions or discussions, please use the forum at [image.sc](https://forum.image.sc/tags/qupath) instead**. ## Before we begin... **You've checked https://qupath.github.io for a new release that might already have fixed the issue, right?**. **And you've searched for related issues here to see if the issues has already been reported?**. If not, please do these things first. Otherwise, please fill in the template below with as much information as possible to help us reproduce the bug & fix it. ## Bug report. **Describe the bug**; A clear and concise description of what the bug is:; TMA tif files of magnification 0.25, 0.625, 1.25, 2.5, and 5x all load with a bright pink background. I don't know how to remove the pink color and the TMA dearrayer doesn't work properly. TMA tiff files larger than 5x will not load at all. 10, 20, and 40x fail to be added to the project. Error message, ""Failed to load one image."" is shown when trying to add one file at a time. **To Reproduce**; Steps to reproduce the behavior:; 1. Click on 'Create project' (make a new folder and name it); 2. Click on 'Add images'; 3. Click on 'choose files'; 4. Navigate to file and select it. ; 5. Click on 'Open'; 6. Click on 'Import'; 7. The result is either a pink thumbnail and pink image or an error message and no image added. **Expected behavior**; A clear and concise description of what you expected to happen:; All tif files should be added to the project and names and thumbnails should be visible on the left hand side of QuPath. Slide backgrounds should be white and not pink. (I know the background isn't actually pink because the files open correctly in ImageScope.). **Screenshots**; Pink background for TMA tiff files; ![2019-11-07_1304](https://user-images.githubusercontent.com/6699385/68389277-db8b8c80-0162-11ea-9a67-38f297589135.png). Failure to upload error message with the attempted upload file highlighted in the Windows window; ![2019-11-07_133",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/374:929,Error,Error,929,https://qupath.github.io,https://github.com/qupath/qupath/issues/374,1,['Error'],['Error']
Availability,"## IMPORTANT!. This section is **only** for bug reports, which **must** follow the template below. Please post any other questions to the official QuPath forum at https://forum.image.sc/tags/qupath. If in doubt, use [image.sc](https://forum.image.sc/tags/qupath). This helps us keep things organized. ## Before we begin... Before submitting your bug report, please check the following:. * [ ] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [ ] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [ ] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [ ] I've checked for existing GitHub issues describing the same problem. ## Bug report. ### Describe the bug; A clear and concise description of what the bug is. ### To Reproduce; Steps to reproduce the behavior:; 1. Go to '...'; 2. Click on '....'; 3. Scroll down to '....'; 4. See error. ### Expected behavior; A clear and concise description of what you expected to happen. ### Screenshots; If applicable, add screenshots to help explain your problem. ### Desktop (please complete the following information):; - OS: [e.g. Windows, macOS, Ubuntu...]; - QuPath Version: [e.g. 0.2.2]. ### Additional context; Add any other context about the problem here.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1691:1031,down,down,1031,https://qupath.github.io,https://github.com/qupath/qupath/issues/1691,2,"['down', 'error']","['down', 'error']"
Availability,"## IMPORTANT!. This section is **only** for bug reports, which **must** follow the template below. Please post any other questions to the official QuPath forum at https://forum.image.sc/tags/qupath. If in doubt, use [image.sc](https://forum.image.sc/tags/qupath). This helps us keep things organized. ## Before we begin... Before submitting your bug report, please check the following:. * [ ] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [ ] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [ ] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [ ] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps to reproduce the behavior:; 1. Go to '...'; 2. Click on '....'; 3. Scroll down to '....'; 4. See error. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Windows, macOS, Ubuntu...]; - QuPath Version: [e.g. 0.2.2]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1148:1031,down,down,1031,https://qupath.github.io,https://github.com/qupath/qupath/issues/1148,4,"['down', 'error']","['down', 'error']"
Availability,"## IMPORTANT!. This section is **only** for bug reports, which **must** follow the template below. Please post any other questions to the official QuPath forum at https://forum.image.sc/tags/qupath. If in doubt, use [image.sc](https://forum.image.sc/tags/qupath). This helps us keep things organized. ## Before we begin... Before submitting your bug report, please check the following:. * [ x] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [ x] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [x ] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [ x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; The slide label does not show when selecting View > Slide Label: the image is empty. **To Reproduce**; Steps to reproduce the behavior:; 1. Go to 'View'; 2. Click on 'Show Slide Label'; 3. See error. **Expected behavior**; A window opens displaying the slide label. It worked find in 0.1.2 using the same SVS file, but for some reason no longer shows the slide label image in 0.2.3. . **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: MacOS 10.15.7; - QuPath Version 0.2.3. **Additional context**; images as in SVS format and I know the slide labelled was scanned as it is visible in version 0.1.2",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/643:1078,error,error,1078,https://qupath.github.io,https://github.com/qupath/qupath/issues/643,1,['error'],['error']
Availability,"## IMPORTANT!. This section is **only** for bug reports, which **must** follow the template below. Please post any other questions to the official QuPath forum at https://forum.image.sc/tags/qupath. If in doubt, use [image.sc](https://forum.image.sc/tags/qupath). This helps us keep things organized. ## Before we begin... Before submitting your bug report, please check the following:. * [x] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [x] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [x] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; ""Custom color"" window closes when trying use a custom color either by typing in a box, clicking on a slider, or clicking on the color picker. . **To Reproduce**; Steps to reproduce the behavior:; 1. Go to ""Brightness and Contrast""; 2. Click on the color next to a channel and click ""Custom color...""; 3. Try to adjust a slider, use color picker, or type in one of the text boxes; 4. See error (window immediately closes). **Expected behavior**; It is expected that the window remain open while dragging a slider, moving the color picker, or typing in one of the boxes such that a color can actually be customized and adjusted. . **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: Windows 10 Pro; - QuPath Version: 0.5.1. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1539:1268,error,error,1268,https://qupath.github.io,https://github.com/qupath/qupath/issues/1539,1,['error'],['error']
Availability,"## IMPORTANT!. This section is **only** for bug reports, which **must** follow the template below. Please post any other questions to the official QuPath forum at https://forum.image.sc/tags/qupath. If in doubt, use [image.sc](https://forum.image.sc/tags/qupath). This helps us keep things organized. ## Before we begin... Before submitting your bug report, please check the following:. * [x] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [x] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [x] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; Trying to get tile objects using `getTileObjects()` will result in an error:; ```; ERROR: MissingMethodException at line 19: No signature of method: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getTileObjects() is applicable for argument types: () values: []. ERROR: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.callGlobal(GroovyScriptEngineImpl.java:404); org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.access$100(GroovyScriptEngineImpl.java:90); org.codehaus.groovy.jsr223.GroovyScriptEngineImpl$3.invokeMethod(GroovyScriptEngineImpl.java:303); org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:73); org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51); org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171); org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:176); Script8.run(Script8.groovy:20); org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyS",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1065:951,error,error,951,https://qupath.github.io,https://github.com/qupath/qupath/issues/1065,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"## IMPORTANT!. This section is **only** for bug reports, which **must** follow the template below. Please post any other questions to the official QuPath forum at https://forum.image.sc/tags/qupath. If in doubt, use [image.sc](https://forum.image.sc/tags/qupath). This helps us keep things organized. ## Before we begin... Before submitting your bug report, please check the following:. * [x] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [x] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [x] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; `QuPath convert-ome` returns exit code 0 despite failure. **To Reproduce**; Steps to reproduce the behavior:; ```; scale=2; tile=1024; comp=ZLIB; input=broken_image.tif; output=broke_omage.ome.tif; QuPath convert-ome $input $output \; --pyramid-scale=$scale \; --tile-size=$tile \; --compression=$comp \; --parallelize; ```; Output (truncated); ```; 20:39:42.582 [main] [INFO ] q.l.i.s.b.BioFormatsServerOptions - Setting max Bio-Formats readers to 2; 20:39:43.272 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.274 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.275 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; ...; 20:39:43.604 [main] [ERROR] q.l.i.writers.ome.ConvertCommand - Unable to open file:broken_image.tif; java.io.IOException: Unable to open file:broken_image.tif; at qupath.lib.images.servers.ImageServers.buildServer(ImageServers.java:306); at qupath.lib.images.writers.ome.ConvertCommand.run(ConvertCommand.java:147); at picocli.CommandLine.executeUserObject(CommandLine.java:2026); at picocli.C",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1451:930,failure,failure,930,https://qupath.github.io,https://github.com/qupath/qupath/issues/1451,1,['failure'],['failure']
Availability,"## QuPath v0.3.2 does not open vsi files; **Describe a bug**; While opening a vsi slide the application crashes. **To Reproduce**; 1. Go to 'File'; 2. Click 'Open'; 3. Choose a file in vsi format; 4. Double click on an image or click 'Open'. **Expected behavior**; Image should be downloaded and opened for viewing. . **Screenshots**; Find attached. The screenshot presents a moment when the application stops working. <img width=""1160"" alt=""Fig1"" src=""https://user-images.githubusercontent.com/109394240/179327300-fa8522c2-021d-44a1-a061-4114b74b63cd.png"">. **Desktop:**; - OS: macOS 11.5.2 (however, my colleagues using Windows reported the same problem); - QuPath v0.3.2. **Additional context**; Version v0.3.0 does not have such a problem. The problem does not exist if you create a project first and add images.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1020:281,down,downloaded,281,https://qupath.github.io,https://github.com/qupath/qupath/issues/1020,1,['down'],['downloaded']
Availability,"## Version 0.2.0-m10. This is a *milestone* (i.e. still in development) version made available to try out new features early. * Updated to use Java 14; * Easier to build from source; * Code *extensively* revised and cleaned up; * Commands are activated/deactivated according to status (e.g. if an image or project is opened); * Help text available for most commands via the 'Command list'; * Lots more javadocs and a (somewhat) more logical arrangement; * All-new command line interface; * Customize QuPath's launch, call scripts; * Convert images to OME-TIFF; * Scripting improvements; * Updated to Groovy 3 - scripts now support more recent Java syntax (e.g. lambdas, try-with-resources); * Pasting files results in them being converted to absolute paths; * New 'Paste & escape' command to automatically escape characters for Java Strings; * Set logging level with LogManager class; * New 'Measure -> Export measurements' command to export measurements for multiple images within a project; * Scriptable 'Select objects by classification' command; * Optionally show/hide annotation names in the viewer (shortcut key 'N'); * Updated methods to save/load points within the counting tool; * Use TSV files to improve portability; * Support including classifications and other annotation properties; * Optionally sort project entries by URI (e.g. to group images read from the same file); * Improved support for profiling with VisualVM; * Improved support for large, non-pyramidal images; * 'Simplify shape' command can now be applied to all selected annotations; * Bug fixes, including:; * Gap between tiles when calculating superpixels for large regions (https://github.com/qupath/qupath/issues/345); * Cannot create objects when loading simple thresholding classifier (https://github.com/qupath/qupath/issues/403); * Consistency in Measurement Map display (https://github.com/qupath/qupath/issues/295); * Poor performance when working with many annotations (regression in m9); * Freeze when launching ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/449:85,avail,available,85,https://qupath.github.io,https://github.com/qupath/qupath/pull/449,2,['avail'],['available']
Availability,"## Version 0.2.0-m5; This is a *milestone* (i.e. still in development) version made available to try out new features early.; Changes include:; * Many improvements to the pixel classifier; * New 'structure tensor' features; * Currently-training classifier can still operate when images are changed; * Added live feature overlays to view classifier features in context; * Added 'Advanced' features, including optional PCA and selecting a 'Boundary' classification; * Ability to save & reload classifiers (format may change!); * New 'Create threshold classifier' command (replaces old simple threshold command); * Improved 'Dark' theme (available in the preferences); * Scripting Improvements; * Changed syntax highlighting - for better behavior with the 'Dark' theme; * Core classes can now be auto-imported (use Ctrl-Shift to cycle through code-completions); * More helpful error messages for common errors; * New setPixelSizeMicrons(double, double) scripting method; * New replaceClassification(String, String) scripting method; * Warning when applying 'Run for project' to an image currently open; * Major ROI revisions; * Area ROIs 'snap' to pixel coordinates by default (can be changed in the preferences); * New GeometryROI replaces AWTAreaROI; * 'Distance to annotations 2D' now supports line and point ROIs; * Increased use of Java Topology Suite for Geometry calculations; * Removed older interfaces (PathShape, PathPoints, PathArea, PathLine and TranslatableROI), moved more methods into ROI directly; * Zoom in further for more accurate pixel-wise annotations; * Revised cell detection & other detection commands that use tiling; * Bigger tile overlap & improved contour smoothing in cell detection (note: this will impact results!); * Wand tool improvements; * Change wand color modes in Edit -> Preferences; * Press Ctrl (Cmd) while using Wand to select identical pixel values (useful with classification overlays); * Renamed & improved 'Create simple thresholder', support image smoothing",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/370:84,avail,available,84,https://qupath.github.io,https://github.com/qupath/qupath/pull/370,1,['avail'],['available']
Availability,"## Version 0.2.0-m6; This is a *milestone* (i.e. still in development) version made available to try out new features early.; ### Important bug fix!; * Positive per mm^2 measurement fixed; this could be wrong in v0.2.0-m5 (other versions not affected); ### Important behavior change!; * Parent-child relationships are no longer automatically calculated between objects!; For an explanation of the reasons behind this change & what it means, see the blog.; ### Other changes:; * Pixel classifier shows live area measurements with 'Classification' output (in m5 this worked only with 'Probability' output); * New 'Detection centroid distances 2D' command (e.g. to find distances to cells with different classifications); * Smoother drawing, faster viewer repainting; * Point annotation improvements; * Faster repainting; * Converting detections to points now uses nucleus ROIs when applied to cells, no longer requires deleting the detections; * More shortcuts, e.g. Ctrl+Alt+A to select annotations, Ctrl+Alt+D to select detections; * GeometryROI now replaces AreaROI and AWTAreaROI for improved performance and consistency; * Fixed bug when converting ROIs with nested holes to JTS Geometries; * Undo/Redo and tile cache size information added to Memory Monitor; * Added support for ImageWriters to write to output streams; * Updated build script to Gradle 6.0; * Use bioformats_package.jar rather than separate dependences (easier to upgrade/downgrade if needed)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/375:84,avail,available,84,https://qupath.github.io,https://github.com/qupath/qupath/pull/375,2,"['avail', 'down']","['available', 'downgrade']"
Availability,"## Version 0.2.0-m7; This is a *milestone* (i.e. still in development) version made available to try out new features early.; * Fixed bug that could cause QuPath to freeze when selecting objects with a mini-viewer active, see https://github.com/qupath/qupath/issues/377; * Improved performance converting shapes to geometries, see https://github.com/qupath/qupath/issues/378; * Improved robustness when drawing complex shapes, see https://github.com/qupath/qupath/issues/376; * Improved stability when script directories cannot be found, see https://github.com/qupath/qupath/issues/373; * Prompt to save each image when closing a project with multiple viewers active; * Updated 'Rotate annotation' command to use JTS",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/379:84,avail,available,84,https://qupath.github.io,https://github.com/qupath/qupath/pull/379,2,"['avail', 'robust']","['available', 'robustness']"
Availability,"## WHAT; This PR improves performance when running a script that does not need to access the image files on multiple images.; Additionally, allowed to modify `ObjectClassifierCommand` too so that it can read all detections' measurements in the training set without uselessly reading the image files.; This last change alone allowed, on my projects, to improve the time when creating an object classifier from ~10/15minutes to ~5seconds.; I feel like this change is useful when a laboratory works with large projects with image locations being on a remote server. This is also possible thanks to QuPath's amazing design choice to never directly modify images.; If the scripts being run wants to access the images' pixels, it gracefully halts the execution of the all the following project entries too. _example_:; ```groovy; import qupath.imagej.tools.IJTools; import qupath.lib.images.PathImage; import ij.ImagePlus. var server = getCurrentServer(); var downsample = server.getDownsampleForResolution(Math.min(server.nResolutions()-1, 4)); PathImage<ImagePlus> pathImage = IJTools.convertToImagePlus(server, RegionRequest.createInstance(server, downsample)); ```; ""_Run for project (without saving and opening)_"":; ```; INFO: Starting script at Tue Mar 26 15:20:37 CET 2024; ERROR: The script tried to read pixels off an image while also requiring to run the script without accessing the image files.; WARN: Script cancelled with 53 image(s) remaining; INFO: Processed 54 images; INFO: Total processing time: 280 milliseconds; ```. ## HOW; Essentially this works by creating a `ImageServerStub` that extends `AbstractImageServer`. It retrieves metadata from the ProjectImageEntry itself (which in turn, i think, it gets them from the `.qpproj` file) and fails when `readRegion()` is being called. Additionally, it does not provide a server builder. This way, if the resulting image data are to be saved, the original ImageServer won't be overwritten/lost.; You can now pass a `openImage` boolean to `P",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1488:954,down,downsample,954,https://qupath.github.io,https://github.com/qupath/qupath/pull/1488,1,['down'],['downsample']
Availability,"### issue; I cannot do cell detection when I use ; `ImageServerProvider.buildServer(imagePath, BufferedImage.class);`; ### detail：; 05:43:43.770 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!!; celery_qupath_1 | 05:43:43.787 [main] [ERROR] q.l.i.s.o.OpenslideServerBuilder - Could not load OpenSlide native libraries; celery_qupath_1 | java.lang.UnsatisfiedLinkError: no openslide-jni in java.library.path: [/usr/local/lib, /usr/java/packages/lib, /usr/lib64, /lib64, /lib, /usr/lib]; celery_qupath_1 | 	at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2660); celery_qupath_1 | 	at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:827); celery_qupath_1 | 	at java.base/java.lang.System.loadLibrary(System.java:1902); celery_qupath_1 | 	at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); celery_qupath_1 | 	at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); celery_qupath_1 | 	at qupath.lib.images.servers.openslide.OpenslideServerBuilder.<clinit>(OpenslideServerBuilder.java:87); celery_qupath_1 | 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); celery_qupath_1 | 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62); celery_qupath_1 | 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45); celery_qupath_1 | 	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500); celery_qupath_1 | 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481); celery_qupath_1 | 	at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:781); celery_qupath_1 | 	at java.base/java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:723); celery_qupath_1 | 	at java.base/java.util.ServiceLoader$3.next(ServiceLoader.java:1395); celery_qupath_1 | 	at qupath.lib.images.s",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/389:153,ERROR,ERROR,153,https://qupath.github.io,https://github.com/qupath/qupath/issues/389,2,['ERROR'],['ERROR']
Availability,"#1465 should fix the first issue. About:. > Quick addition. Defining an area using a polygon no longer works for the in-built detection, just when running a stardist script:. I wasn't able to reproduce the error. Does it happens on every run? Is it possible to share the project throwing the error?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1443#issuecomment-1938648182:206,error,error,206,https://qupath.github.io,https://github.com/qupath/qupath/issues/1443#issuecomment-1938648182,2,['error'],['error']
Availability,"$MouseEventNotification.run(GlassViewEventHandler.java:294); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$354(GlassViewEventHandler.java:416); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:415); at com.sun.glass.ui.View.handleMouseEvent(View.java:555); at com.sun.glass.ui.View.notifyMouse(View.java:937); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191); at java.lang.Thread.run(Thread.java:745); INFO: TiffDelegateReader initializing C:\Users\617\Desktop\1800164.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for C:\Users\617\Desktop\1800164.tif; ERROR: Error opening image 0 for region java.awt.Rectangle[x=0,y=0,width=23422,height=30978]; at loci.formats.FormatReader.openBytes(FormatReader.java:880); at loci.formats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.gui.BufferedImageReader.openImage(BufferedImageReader.java:86); at qupath.lib.images.servers.BioFormatsImageServer.readBufferedImage(BioFormatsImageServer.java:683); at qupath.lib.images.servers.BioFormatsImageServer.readBufferedImage(BioFormatsImageServer.java:95); at qupath.lib.images.stores.AbstractImageRegionStore$DefaultTileWorker$1.call(AbstractImageRegionStore.java:656); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caus",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/221:19524,ERROR,ERROR,19524,https://qupath.github.io,https://github.com/qupath/qupath/issues/221,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,'Interface can't be instantiated!' errors when running from the command line,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/514:35,error,errors,35,https://qupath.github.io,https://github.com/qupath/qupath/issues/514,1,['error'],['errors']
Availability,'Normalized OD colors' should not be available for RGB fluorescence images,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1006:37,avail,available,37,https://qupath.github.io,https://github.com/qupath/qupath/issues/1006,1,['avail'],['available']
Availability,"'Old' detection classifiers can be trained using multiple images. 'New' object and pixel classifiers currently only support training using multiple images if these are concatenated into a single image using *Create combined training image*. They should also support being built using training samples from multiple images, to facilitate refining classifiers later if more training becomes available.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/462:389,avail,available,389,https://qupath.github.io,https://github.com/qupath/qupath/issues/462,1,['avail'],['available']
Availability,'Sum' measurement only available for Nucleus in Cell detection,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1454:23,avail,available,23,https://qupath.github.io,https://github.com/qupath/qupath/issues/1454,1,['avail'],['available']
Availability,"(Yes, did search for this bug before entering this issue.). ## Bug report. **Describe the bug**; When pasting in or typing in class names that include a colon in the text, QuPath adds a spce after the colon and this is also the resulting label in the class json file. ; ; **To Reproduce**; Steps to reproduce the behavior:; 1. Add a new class and a name that includes a colon without a trailing space. For example `myID:1234` . 2. After adding the class, simply look at the resulting class name. In my insance there is now a space between the `myID:` and the `1234` to get `myID: 1234`. **Expected behavior**; I expect the pasted or typed text to be exactly the same in the resulting class label. The goal for us is to use these tags for parsing links down the road. In our case we are entering anatomy IDs from ontologies. **Screenshots**; ![Screenshot 2020-05-29 19 57 29](https://user-images.githubusercontent.com/8427219/83314085-c3ef2080-a1e6-11ea-90be-811622ed6c86.png). **Desktop (please complete the following information):**; - OS: macOS Catalina 10.15.5 (19F96); - QuPath Version : QuPath-0.2.0-m12.app. **Additional context**; Eventually we would want to get the classes assigned to various annotations exported so it is important to get the IDs correctly formatted if possible.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/507:752,down,down,752,https://qupath.github.io,https://github.com/qupath/qupath/issues/507,1,['down'],['down']
Availability,); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.s,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409021767:7598,ERROR,ERROR,7598,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767,4,['ERROR'],['ERROR']
Availability,"* Add fill/unfill annotations toolbar button; * Reduce update check fail to a warning (rather than an error); * Show a more informative message is (probably) unable to connect to the internet; * Add 'Training data' title to object/pixel classifier training pie charts; * Remove confusion about whether the pie charts refer to the training or predictions; * Support log histograms with 'single measurement classifier' and 'set cell intensity classification' commands; * Fix the extensions directory path (use 'extensions' subdirectory, not the user path)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1391:102,error,error,102,https://qupath.github.io,https://github.com/qupath/qupath/pull/1391,1,['error'],['error']
Availability,"* Enable new `DnnModel` implementations to be added via extensions (using a `ServiceLoader`); * Make all DeepJavaLibrary engines available when building via gradle properties; * Handle single-channel probability predictions as if they are multichannel when creating objects; * Without this, the 'softmax' assumption would mean that everything was treated as 'detected' since there was no higher channel available; * Store all actions added with `installActions`, so they can be found again via `QuPathGUI.lookupActionByText(String)`; * Add title to startup message (because otherwise drop shadow missing on Windows)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1160:129,avail,available,129,https://qupath.github.io,https://github.com/qupath/qupath/pull/1160,2,['avail'],['available']
Availability,"* Fix https://github.com/qupath/qupath/issues/1674; * Make the preferences persistent when sending a region to ImageJ]; * Add ""Non-rectangles only"" as an option when sending ROIs to ImageJ, since rectangles tend to correspond to the entire image region... and do more harm than good.; * Use Roi group names for classifications, where available; * Rename setting the plugins directory to 'Set local ImageJ directory' - because it's needed also for LUTs as well. > Note that setting the Roi group logs an error if the ImageJ directory isn't set, because it makes a request for the Glasbey LUT that can't be fulfilled.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1676:334,avail,available,334,https://qupath.github.io,https://github.com/qupath/qupath/pull/1676,2,"['avail', 'error']","['available', 'error']"
Availability,"* Make extensions available to classloader when running command line scripts; * Support update checking for GitHub-hosted extensions; * Adjust wording of memory/thread-related settings and preferences; * Move 'Show installed extensions' to 'Extensions' menu ; * Add 'Open extensions directory' button, when available",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/791:18,avail,available,18,https://qupath.github.io,https://github.com/qupath/qupath/pull/791,2,['avail'],['available']
Availability,"* Many pixel classifier improvements; * Training annotations are used from all compatible images that are currently open; * New 'Load training' button to support training using annotations from multiple images; * New 'Measure' button to store measurements after the classifier is closed; * More control over the regions where the classifier is applied in 'live' preview mode; * Default classifier is now ANN (often better & much faster than Random Trees); * Measurement lists are reset if an object's ROI is changed; * This guards against inadvertently producing invalid measurements by modifying an annotate after measuring; * Viewer no longer centered on selected object when the selection changes or when typing 'Enter'; * Fixes some annoyances, especially when annotating across multiple viewers; * Center viewer by double-clicking objects in the 'Annotations' or 'Hierarchy' tab, or in a measurement table; * Improved spatial measurements; * Optionally split multi-part classifications (e.g. ""Class 1: Class 2"") for distance calculations (https://github.com/qupath/qupath/issues/405); * 'Classify -> Object classification -> Set cell intensity classification' now works for all detections, if no cells are present; * LabeledImageServer improvements; * Supports more than 255 distinct labels; * New useUniqueLabels() option to support labelling by object, not only classification; * Fixed bug/ambiguity in 'Fill holes' & 'Remove fragments and holes'; * Handle nested polygons/holes more reliably; * Changed behavior! Area thresholds now refer to total polygon/hole area ignoring any nested polygons or holes; * Other bug fixes, including:; * Local normalization now applied before calculating other features (was applied after in m11); * Fixed bug in 'Simplify shape' to handle polygons and rectangles properly; * Projects are automatically saved after changing the image name (https://github.com/qupath/qupath/issues/465)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/475:1491,reliab,reliably,1491,https://qupath.github.io,https://github.com/qupath/qupath/pull/475,1,['reliab'],['reliably']
Availability,* Support `.qpdata` files in the project import dialog; * This simplifies bringing over data from an existing project if the project file itself is missing or corrupt (assuming the images are available); * Fix bug in the update URIs command that affected the file dialog when setting a single URI; * Show a context warning if no channels are visible,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1403:192,avail,available,192,https://qupath.github.io,https://github.com/qupath/qupath/pull/1403,1,['avail'],['available']
Availability,"* Support exporting snapshot as PNG, JPEG and TIFF (not just PNG); * Improve wording for language preference; * Make it possible to use `mavenLocal()` via a gradle property (handle e.g. if a maven repo is down)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1312:205,down,down,205,https://qupath.github.io,https://github.com/qupath/qupath/pull/1312,1,['down'],['down']
Availability,* Support hiding project thumbnails; * Supporting hiding / resizing thumbnails from a context menu (not just the preferences); * Hiding thumbnails may improve performance for large projects if thumbnails haven't been generated yet; * It also addresses a request for hide thumbnails when masking image names; * Improve code by separating out some methods; * Fix a bug that meant metadata couldn't be edited when using `gradlew run`; * Retain sorting after adding metadata (stolen from @alanocallaghan's code at #1538); * Move styles to `main.css` (rather than calling `setStyle(String)`),MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1556:287,mask,masking,287,https://qupath.github.io,https://github.com/qupath/qupath/pull/1556,1,['mask'],['masking']
Availability,* Support specifying threads for parallel writing; * Reverse tiles when writing each plane of a multi-channel output. The second of these makes it possible to reuse cached tiles much more effectively. In one test example using LuCa-7color_Scan1.qptiff it decreased export time from 270s to 188s (although differences may vary considerably depending upon available memory and how expensive tile reading is). Inspiration from this discussion: https://forum.image.sc/t/saving-to-ome-tiff-slow-warpy-and-qupath/69153/50,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1008:354,avail,available,354,https://qupath.github.io,https://github.com/qupath/qupath/pull/1008,1,['avail'],['available']
Availability,"* TMA cores can now have classifications assigned to them; * Default color for TMA cores is lighter (to make it easier to see on both bright and dark backgrounds); * TMA core 'missing' status is now shown using opacity, not a different color, to preserve any classification color; * Viewer location string shows TMA core classifications, where available",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1572:344,avail,available,344,https://qupath.github.io,https://github.com/qupath/qupath/pull/1572,1,['avail'],['available']
Availability,"* Update to Bio-Formats 6.9.1; * Fix https://github.com/qupath/qupath/issues/956; * Work around https://github.com/qupath/qupath/issues/957. Memoization will need to be revisited in the future. Here, it is disabled when using using Java 17+ because it doesn't work and logs many errors (somehow related to JEP 403). This behavior can be overridden by adding; ```; java-options=-Dqupath.bioformats.allow.memoization=true; ```; to the QuPath.cfg file (i.e. set the system property), but it likely won't help until there is a new Bio-Formats release. Relatedly, the qupath-app build.gradle now only adds `--illegal-access=permit` for Java 16, since it's the only version where it makes a difference. The easiest way to get QuPath with memoization is therefore to use; ```; gradlew jpackage -Ptoolchain=16; ```",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/958:279,error,errors,279,https://qupath.github.io,https://github.com/qupath/qupath/pull/958,1,['error'],['errors']
Availability,"* [x] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [x] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [x] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**. On macOS 10.15.4, QuPath 0.2.3, compressed, tiled tiff images do not load correctly: only the top-left corner tile appears, the rest of the image is black. macOS Preview shows the same incorrect behaviour. Perhaps QuPath on macOS is using the platform libtiff rather than bundling its own?. **To Reproduce**. Download this image: . http://www.rollthepotato.net/~john/tiled-jpeg-tiff-pyramid.tif. Start QuPath 0.2.3 on macOS Catalina. Select File / Open .... Select the image and press OK. Only a small white tile in the top-left appears. I tried a few more things:. - If you use homebrew's tiffcp to transform the image to uncompressed tiled, it works (`tiffcp -c none x.tif y.tif`, then open `y.tif` in QuPath); - macOS Preview shows the same behaviour (just displays one tile); - the same image loads fine into `eog` on Ubuntu 20.04, image preview on win10, gimp on ubuntu. **Desktop (please complete the following information):**; - macOS 10.15.7; - QuPath 0.2.3. **Additional context**. Some more notes in this issue:. https://github.com/libvips/libvips/issues/1862",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/627:803,Down,Download,803,https://qupath.github.io,https://github.com/qupath/qupath/issues/627,1,['Down'],['Download']
Availability,"* [x] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [x] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [x] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; I encountered some reproducible crashes on macOS (Macbook Air, M1) when running the below script for ~100 images within a project. The script will run fine at first. After ~100 images, an exception will be thrown. And after a few more executions, the app will crash. > ERROR: unable to create native thread: possibly out of memory or process/resource limits reached"". . **To Reproduce**. ```groovy; import qupath.lib.gui.viewer.overlays.HierarchyOverlay; import qupath.lib.gui.images.servers.RenderedImageServer. def viewer = getCurrentViewer(); def imageData = getCurrentImageData(). def name = GeneralTools.getNameWithoutExtension(imageData.getServer().getMetadata().getName()); def pathOutput = <output_path>. double requestedPixelSize = 15; double downsample = requestedPixelSize / imageData.getServer().getPixelCalibration().getAveragedPixelSize(). def display = qupath.lib.display.ImageDisplay.create(imageData); def server = new RenderedImageServer.Builder(imageData); .display(display); .downsamples(downsample); .layers(new HierarchyOverlay(viewer.getImageRegionStore(), viewer.getOverlayOptions(), imageData)); .build(). ```. **Expected behavior**; The above script can run for the whole project without crashing. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: macOS (MacBook Air, M1); - QuPath Version: 0.5.1-arm64. **Additional context**. Stack trace; ```; ERROR: unable to create native thread: poss",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1561:763,ERROR,ERROR,763,https://qupath.github.io,https://github.com/qupath/qupath/issues/1561,1,['ERROR'],['ERROR']
Availability,"* downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Read the image region; ImagePlus imp = server.readImagePlusRegion(request).getImage(false); // Get a suitable file name; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); // Create an output file; File file = new File(dirOutput, name); // Save the image; IJ.save(imp, file.getAbsolutePath()); // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); } catch (Exception e) {; // Check if we have had a sufficient number of errors to just give up; nErrors++;; if (nErrors > maxErrors) {; println(""Maximum number of errors exceeded - aborting...""); return; }; e.printStackTrace(); }; }; }; }; println(""Done"");; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/85#issuecomment-315148862:3421,down,downsample,3421,https://qupath.github.io,https://github.com/qupath/qupath/issues/85#issuecomment-315148862,4,"['down', 'error']","['downsample', 'errors']"
Availability,* showConfirmDialog method never uses its title parameter https://github.com/qupath/qupath/issues/662; * Error in Measurement with StarDist script with RGB fluorescence images https://github.com/qupath/qupath/issues/686; * Detect centroid distances 2D doesn't work on different planes of a z-stack https://github.com/qupath/qupath/issues/696,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/697:105,Error,Error,105,https://qupath.github.io,https://github.com/qupath/qupath/pull/697,1,['Error'],['Error']
Availability,"**Describe the bug**. The use of Java's [`Locale`](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Locale.html) class has [caused some trouble in QuPath from the beginning](https://github.com/qupath/qupath/search?q=locale&type=issues). This is somewhat mitigated by explicitly allowing the user to specify the `Locale` and then requesting the appropriate one for format or display (the two available categories). However, depending upon how the `Locale` is requested it can return different results. For me, the following Groovy script; ```groovy; import java.util.*; println Locale.getDefault(); println Locale.getDefault(Locale.Category.FORMAT); println Locale.getDefault(Locale.Category.DISPLAY); ```; prints; ```; INFO: en_GB; INFO: en_US; INFO: en_US; ```; It is curious that `Locale.getDefault()` returns something different from the others... and different from what QuPath allows to be specified. @iwbh15 noticed this caused a problem with the [QuPath Align extension](https://github.com/qupath/qupath-extension-align) and traced it back to `Locale` in [`GeometryTools`](https://github.com/qupath/qupath/blob/75ec9cebe5e3bc5843fc60b07b455ce1215e1fb9/qupath-core/src/main/java/qupath/lib/roi/GeometryTools.java#L139), used in conjunction with a `NumberFormat`. **To Reproduce**; The script above hints there is a problem. To see it in practice requires using QuPath on a computer that uses a different `Locale` and calling a method that relies upon `Locale.getDefault()` *and* uses decimals.... and being surprised. Basically, it's not *that* easy to reproduce in practice.; But at the risk of messing up QuPath's preferences. ```groovy; import java.util.*; import java.text.*. Locale.setDefault(Locale.GERMANY); Locale.setDefault(Locale.Category.FORMAT, Locale.US); println NumberFormat.getInstance(Locale.getDefault()).parse(""0,1234.56""); println NumberFormat.getInstance(Locale.getDefault(Locale.Category.FORMAT)).parse(""0,1234.56""); ```; prints the following; ```; IN",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/886:413,avail,available,413,https://qupath.github.io,https://github.com/qupath/qupath/issues/886,1,['avail'],['available']
Availability,"**Describe the bug**; Attempting to duplicate a project entry containing an unclosed parenthesis (e.g. a left parenthesis `(` with no right parenthesis to follow) will throw an error, preventing the entry from being duplicated without renaming. Relatively minor issue, as a fix would be to simply rename the original entry before duplication. **To Reproduce**; Steps to reproduce the behavior:; 1. Create a project, loading an image named `OS-2.ndpi`; 2. Duplicate the project entry (via right click > Duplicate Image(s). No error will occur, duplicate image will be named `OS-2.ndpi (1)`; 3. Rename this duplicated image by removing the last parenthesis, to `OS-2.ndpi (1`; 4. Attempt to duplicate this image. Note the following error:; ![image](https://user-images.githubusercontent.com/52012166/161337956-5eabd4e7-0b3e-4a29-8b1b-914e3484cda7.png); See full log at the end. **Expected behavior**; Regex patterns should not be evaluated for when duplicating image names. I'd imagine there are a lot of other character combinations that can trigger regex-related errors during duplication, or perhaps other operations too. I wonder if there's any cool things that can be done with this, such as programmatically creating image names during image duplication... **Desktop (please complete the following information):**; - OS: Windows 10; - QuPath Version: 0.4.0-SNAPSHOT. **Additional context**; Full error log:; ```; ERROR: QuPath exception: Unclosed group near index 24; OS-2.ndpi (1 \(([\d]+)\); java.util.regex.PatternSyntaxException: Unclosed group near index 24; OS-2.ndpi (1 \(([\d]+)\); at java.base/java.util.regex.Pattern.error(Unknown Source); at java.base/java.util.regex.Pattern.accept(Unknown Source); at java.base/java.util.regex.Pattern.group0(Unknown Source); at java.base/java.util.regex.Pattern.sequence(Unknown Source); at java.base/java.util.regex.Pattern.expr(Unknown Source); at java.base/java.util.regex.Pattern.compile(Unknown Source); at java.base/java.util.regex.Pattern.<ini",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/942:177,error,error,177,https://qupath.github.io,https://github.com/qupath/qupath/issues/942,3,['error'],['error']
Availability,"**Describe the bug**; Building the newly released QuPath failed for me, I think because I had previously built an unreleased version of QuPath. ```; $ ./gradlew createPackage -Ppackager=/path/to/jpackage. FAILURE: Build failed with an exception. * What went wrong:; Could not open settings remapped class cache for excpwkpjzwio43djg1qkbjnq0 (~/.gradle/caches/5.0/scripts-remapped/settings_e1p4q7yyg2efzivqbknt4uiri/excpwkpjzwio43djg1qkbjnq0/settingsa9190c3ddc71e1450eb3f3e7bc6a334f).; > Could not open settings generic class cache for settings file '~/.../qupath/settings.gradle' (~/.gradle/caches/5.0/scripts/excpwkpjzwio43djg1qkbjnq0/settings/settingsa9190c3ddc71e1450eb3f3e7bc6a334f).; > BUG! exception in phase 'semantic analysis' in source unit '_BuildScript_' Unsupported class file major version 57. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. BUILD FAILED in 0s; ```. **To Reproduce**; Not sure. . **Expected behavior**; Build to succeed. **Desktop (please complete the following information):**; - OS: macOS; - QuPath Version v0.2.0-m1",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/281:205,FAILURE,FAILURE,205,https://qupath.github.io,https://github.com/qupath/qupath/issues/281,1,['FAILURE'],['FAILURE']
Availability,"**Describe the bug**; Create a box annotation of the entire slide and run positive cell detection. Some slides work fine, others seem to just stop with no error. . **To Reproduce**; Steps to reproduce the behavior:; 1. Go to 'Analyze' -> Cell Detection ->Positive Cell Detection; 2. Accept defaults.; 3. Runs with no errors. . **Expected behavior**; A full slide with every cell detected and classified. . **Screenshots**; ![image](https://user-images.githubusercontent.com/14006401/135633690-717d4fc9-6010-4de6-b235-54bd3dc98ea6.png). **Desktop (please complete the following information):**; - OS: Windows, 64GB RAM, 32 core processor, Nvidia GTX1060 with CUDA 11.1 installed.; - QuPath Version 3.0. **Additional context**; RAM usage at around 60%, ; No plugins loaded after initial install.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/828:155,error,error,155,https://qupath.github.io,https://github.com/qupath/qupath/issues/828,2,['error'],"['error', 'errors']"
Availability,"**Describe the bug**; Error opening image (NDPI File, uncompressed size 23.6GB), with superpixels added to it. This problem occurred with 2 from the 48 images in the project. . **To Reproduce**; Steps to reproduce the behavior:; 1. Open QuPath Project; 2. Open Image; 3. Error: . java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:769); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:723); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2652); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Bas",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/607:22,Error,Error,22,https://qupath.github.io,https://github.com/qupath/qupath/issues/607,3,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"**Describe the bug**; I erroneously set requestedPixelSize = 0 instead of downsample = 0 in my exporting script that I adapted from [the docs](https://qupath.readthedocs.io/en/0.2/docs/advanced/exporting_annotations.html), the script didn't error but instead, after about a day running and my RAM filling up to about 20GB I realized my mistake. I suspect requestedPixelSize = 0 causes an infinite loop somewhere or the divide by zero on lines 378 and 379 of TileExporter are handled strangely. **To Reproduce**; In the script from [the docs](https://qupath.readthedocs.io/en/0.2/docs/advanced/exporting_annotations.html) set equestedPixelSize = 0 . **Expected behavior**; It would be nice to have some input validation or a way to raise an exception for this use case. . **Desktop (please complete the following information):**; OS: Windows 7; QuPath Version 0.2.3",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/777:74,down,downsample,74,https://qupath.github.io,https://github.com/qupath/qupath/issues/777,2,"['down', 'error']","['downsample', 'error']"
Availability,"**Describe the bug**; LabeledImageServers do not pyramidalize by default and so throw an error when a user tries to export a whole slide image as a label. This can be circumvented by pyramidalizing the labelServer, but the user would not necessarily know this from the error message.; See https://forum.image.sc/t/exporting-full-labelled-images-of-arbitrary-large-wsis/66708/11. **To Reproduce**; Create a tissue annotation of a very large whole slide image. Export as a downsample 1 labeled image.; Error: `IllegalArgumentException at line X: Dimensions (width=W height=H) are too large.`; **Expected behavior**; Possibly provide a warning that the labeledImageServer needs to be pyramidalized - alternatively default to using a pyramidalized image server if the image is ""too large"". The image output type would probably need to be overwritten to ome.tif if it was not already that, with yet another warning message.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/984:89,error,error,89,https://qupath.github.io,https://github.com/qupath/qupath/issues/984,4,"['Error', 'down', 'error']","['Error', 'downsample', 'error']"
Availability,"**Describe the bug**; Pressing the space bar with multiple viewers open triggers an error message and the log window opening. Other than that, nothing bad seems to happen.; From v 0.1.3; ""ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.setSpaceDown(QuPathViewer.java:772)"". **To Reproduce**; Steps to reproduce the behavior:; Open two viewers (there do not have to be images open in both), select second window press space bar. The primary window does not seem to have the same effect if there is only one image open (primary viewer has image, secondary viewer has none). If you open an image in both viewers, both viewers trigger the space bar error. Simply creating two viewers that are empty does not trigger an error when pressing space bar. **Expected behavior**; No errors ever. At all. **Desktop (please complete the following information):**; Win10, 64 and Win7 64; Affects versions 0.2.0m1, m2 and 0.1.3. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/288:84,error,error,84,https://qupath.github.io,https://github.com/qupath/qupath/issues/288,5,"['ERROR', 'error']","['ERROR', 'error', 'errors']"
Availability,"**Describe the bug**; The automated update check happens in a background thread, but then tries to update the UI. This can cause an exception when there's something to update. **To Reproduce**; See https://forum.image.sc/t/error-on-launching-qupath-v0-4-0/75116. Depends upon an update to something being available - manually checking for updates probably won't show this problem. > Edit: Manually checking *does* have the same problem... **Expected behavior**; Update check succeeds, or fails quietly. Because it acts on the right thread. **Desktop (please complete the following information):**; - OS: All; - QuPath Version: 0.4.0. **Additional context**; This is potentially horrible, since when QuPath is updated everyone who has it installed will see the exception... so better to fix it before we have even more downloads :(",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1191:223,error,error-on-launching-qupath-,223,https://qupath.github.io,https://github.com/qupath/qupath/issues/1191,3,"['avail', 'down', 'error']","['available', 'downloads', 'error-on-launching-qupath-']"
Availability,"**Describe the bug**; Unfortunately I am not able to share a lot of details (screenshots/reports) as it happenned a few days ago... but after all I thought it would be a good idea to share it here.; I was working on the analysis of some IF images. I created a project, set the images to fluorescence, applied the viewing settings I wanted, and started annotating the tissue. I have several annotations to draw on each tissue to mark specific areas, and it is relatively time consuming to do for 20 images. I also worked out the best cellular detections, trained a classifier, and got pretty much where I wanted.; I checked all images again, double checked all annotations and everything seemed fine.; I then started a batch analysis... which started normally. Once finished (and I didn't get any error message), I checked my detection and annotations results and >15 slides had no data. When I tried openning the images in the QuPath project, everything was gone: I get ask to set the image type and all annotations had disappear. I tried openning the .backup file but everything was gone there too. ; I'm thinking I must have done something wrong but I have no idea what... and unfortunately the .backup file was not enough to save me from doing everything again. I guess my questions are: do you know what could have caused this to happen? would there be a way of exporting the annotations separately (to save them for easy re-load if needed) ?. **Desktop:**; - OS: macOS Sierra; - QuPath Version 0.2",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316:796,error,error,796,https://qupath.github.io,https://github.com/qupath/qupath/issues/316,1,['error'],['error']
Availability,"**Describe the bug**; When running `./gradlew.bat createPackage -Ppackager=/path/to/jpackage`, the createPackage task fails with the errors ""Invalid Option: [create-image]"" and (after fixing the first error) ""Invalid Option: [--strip-native-commands]"". **To Reproduce**; Steps to reproduce the behavior:; 1. Clone the repo and run `./gradlew.bat createPackage -Ppackager=/path/to/jpackage` (see JDK/JPackage versions below). **Expected behavior**; Successful build. **Desktop (please complete the following information):**; - OS: Windows 7; - QuPath Version: Trying to build from latest master (da83ef9); - Using JDK 11 & latest JPackage executable (Build 49) downloaded from https://jdk.java.net/jpackage/",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/311:133,error,errors,133,https://qupath.github.io,https://github.com/qupath/qupath/issues/311,3,"['down', 'error']","['downloaded', 'error', 'errors']"
Availability,"**Describe the bug**; When trying to hide QuPath via the menu bar or by pressing cmd + h, the ""About"" window is opened instead of QuPath being hidden. **To Reproduce**; Steps to reproduce the behavior:; 1. Click on app name (""QuPath-0.5.0-arm64"") in menu bar.; 2. Click on ""Hide QuPath-0.5.0-arm64"" (alternatively: press cmd + h).; 4. See error. **Expected behavior**; QuPath window being hidden. **Screenshots**; <img width=""553"" alt=""qupath-bug"" src=""https://github.com/qupath/qupath/assets/69714383/7e5be5b2-1bd6-408f-8f56-46a1ff4c3f67"">. **Desktop (please complete the following information):**; - OS: macOS 14.1.2; - QuPath Version: 0.5.0-arm64",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1436:339,error,error,339,https://qupath.github.io,https://github.com/qupath/qupath/issues/1436,1,['error'],['error']
Availability,"**Describe the bug**; When using multiple syncronized viewers, trying to move using the spacebar does not work. **To Reproduce**; 1. Open a .tif image; 2. Right click -> multi-view -> add column; 3. Select new viewer; 4. Open a .tif image in new viewer; 5. press and hold spacebar; 6. while holding spacebar, click and drag in any viewer; 7. First attempt might be succesful and ten give the error; 8. any subsequent attempt fails with the error below. ```; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.setSpaceDown(QuPathViewer.java:963); at qupath.lib.gui.QuPathGUI.lambda$new$4(QuPathGUI.java:690); ...; ```. [qplog.txt](https://github.com/qupath/qupath/files/3055606/qplog.txt). **Expected behavior**; Both images should move together. **Desktop (please complete the following information):**; - OS: Windows 10; - QuPath: every version (tested on 0.1.2, 0.1.3, 0.2.0-m1, 0.2.0-m2, 0.2.0-m3-SNAPSHOT [april 4]). **Additional context**; Attached log file containing error",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/302:392,error,error,392,https://qupath.github.io,https://github.com/qupath/qupath/issues/302,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"**Description of the bug**; Left-click on the Automate-Button to open the drop down menue that incorporates the ""script editor"" causes opening of log window with the qupath-exception text (see below). . Even not after reinstallation of QuPath and Java. ; Even to run QuPath inside a ZIP downloaded version does not solve the probem. . **To Reproduce**; Steps to reproduce the behavior:; 1. run the lock script: ; selectAnnotations(); getSelectedObjects().each {; it.setLocked(true); }; fireHierarchyUpdate(). There were large annotations with hierarchy. But only 170kb vertex points. One of them was a simple tissue detection. . ; **Desktop (please complete the following information):**; - 64 bit Windows10 ; - QuPath Version 0.1.2. **Exception text in log file**; at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.control.Menu.setShowing(Menu.java:199); at javafx.scene.control.Menu.show(Menu.java:408); at com.sun.javafx.scene.control.skin.MenuBarSkin.lambda$rebuildUI$401(MenuBarSkin.java:677); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(Ev",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/422:79,down,down,79,https://qupath.github.io,https://github.com/qupath/qupath/issues/422,2,['down'],"['down', 'downloaded']"
Availability,"**Description**; When I attempt to install QuPath 0.3.0 on Windows 10, the text of QuPath is unreadable (please see screenshot below). **To Reproduce**; Steps to reproduce the behavior:; 1. Download QuPath from https://github.com/qupath/qupath/releases/download/v0.3.0/QuPath-0.3.0-Windows.msi.; 2. Bypass Windows Defender security alerts.; 3. Run the installer.; 4. Open QuPath 0.3.0. **Screenshots**. ![image](https://user-images.githubusercontent.com/43010710/146222250-0d831aa3-f959-4bec-95d4-6af049cf994e.png). **Desktop**; - OS: Windows; - QuPath Version: 0.3.0. **Hash**; The SHA256 hash of the file I downloaded is:; ```; certutil -hashfile QuPath-0.3.0-Windows.msi SHA256; SHA256 hash of QuPath-0.3.0-Windows.msi:; d3661adca21ab8ea31acfa5d150345fb4b46a983526803fce3869f520949965e; ```; However, I cannot find the hash of the file from the GitHub API: https://api.github.com/repos/qupath/qupath/releases (see [here](https://stackoverflow.com/questions/29671303/where-to-get-md5-hashes-from-a-github-release)).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/866:190,Down,Download,190,https://qupath.github.io,https://github.com/qupath/qupath/issues/866,3,"['Down', 'down']","['Download', 'download', 'downloaded']"
Availability,"**TLDR**: the default tile size of the BioFormatsImageServer is too low, which makes reading remote Zarr too slow. This PR fixes that. Zarr images are slow to read. This is more visible for remote images. For example, the image https://uk1s3.embassy.ebi.ac.uk/idr/zarr/v0.4/idr0073A/9798462.zarr takes way more time to open in QuPath than when using [vizarr](https://hms-dbmi.github.io/vizarr/?source=https://uk1s3.embassy.ebi.ac.uk/idr/zarr/v0.4/idr0073A/9798462.zarr). Zarr images are divided into chunks, where each chunk contains pixel values in a dedicated file. When using [HTTP Toolkit](https://httptoolkit.com/) when opening a remote Zarr image in QuPath, we see that the underlying BioFormats readers make several web requests to the same chunk. With the example image mentioned above, QuPath downloads each chunk around 8 times, which is useless. This means that when opening the image through QuPath, around 320 web requests are made, while there should only be around 40 requests. The reason is because of the tile size. The tile size should correspond to the chunk size, but it's not always the case. Before this PR, the tile size corresponded to the chunk size of the lowest resolution. For example with the image above, the tile size was 164 * 128 pixels (which corresponds to the chunk size of the lowest resolution image), but the chunk size of the full resolution image is 1024 * 1024 pixels. This means that to read one chunk of the full resolution image, QuPath will make several readings, and each reading will download the entire chunk of 1024*1024 pixels, thus the same file will be downloaded several times. Therefore, to fix the issue, we must fix the tile size. The tile size is determined from the BioFormats reader's `getOptimalTileWidth()` and `getOptimalTileHeight()` functions. By default, they return the chunk size of the lowest resolution image. I found a workaround to get the chunk size of the full resolution image: we must set the resolution to 0 (full resolution",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1645:802,down,downloads,802,https://qupath.github.io,https://github.com/qupath/qupath/pull/1645,1,['down'],['downloads']
Availability,"**You've checked https://qupath.github.io for a new release that might already have fixed the issue, right?**. **And you've searched for related issues here to see if the issues has already been reported?**. Good, then please fill in the template about the bug... > For general questions about the software (not bugs) use [image.sc](https://forum.image.sc/tags/qupath). ----. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps to reproduce the behavior:; 1. Go to '...'; 2. Click on '....'; 3. Scroll down to '....'; 4. See error. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Windows, macOS, Ubuntu...]; - QuPath Version [e.g. 0.1.2]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/308:548,down,down,548,https://qupath.github.io,https://github.com/qupath/qupath/issues/308,2,"['down', 'error']","['down', 'error']"
Availability,"**You've checked https://qupath.github.io for a new release that might already have fixed the issue, right?**. **And you've searched for related issues here to see if the issues has already been reported?**. Good, then please fill in the template about the bug... > For general questions about the software (not bugs) use [image.sc](https://forum.image.sc/tags/qupath). ----. **Describe the bug**; In order to right click while running QuPath on macOS, one must have a mouse that can right click. The normal control-click shortcut in the absence of a mouse does not perform a right click in QuPath. I could easily grab a mouse, but I am lazy and would rather control-click. **To Reproduce**; Steps to reproduce the behavior:; 1. Attempt to right-click on a mac without a mouse.; 2. Try holding control and clicking on image or annotation.; 3. Nothing happens. **Expected behavior**; Hold down control and click on image. The right-click menu pops up. **Desktop (please complete the following information):**; - OS: macOS (10.14.3); - QuPath Version 0.2.0 m1",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/285:888,down,down,888,https://qupath.github.io,https://github.com/qupath/qupath/issues/285,1,['down'],['down']
Availability,"**You've checked https://qupath.github.io for a new release that might already have fixed the issue, right?**. **And you've searched for related issues here to see if the issues has already been reported?**. Good, then please fill in the template about the bug... > For general questions about the software (not bugs) use [image.sc](https://forum.image.sc/tags/qupath). ----. **Describe the bug**; Opening a project file by double-clicking in file file explorer [Windows 10 x64] fails if path contains special characters [in my case it was Ø]. QuPath error message: Could not open file. Opening the same project file residing in the same folder by using QuPath menu option ""Open project"" works fine. **To Reproduce**; Steps to reproduce the behavior:; On Windows 10 x64:; 1. create a project in a folder containing a special character (e.g. ø); 2. double click the project file in file explorer to open through MIME-type association; 3. QuPath opens but cannot open the project. **Expected behavior**; QuPath opens the project. **Screenshots**; not needed. **Desktop (please complete the following information):**; - OS: Windows 10 x64; - QuPath Version 0.2.0. **Additional context**; ---",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/320:551,error,error,551,https://qupath.github.io,https://github.com/qupath/qupath/issues/320,1,['error'],['error']
Availability,", ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 0.9, ""minAreaMicrons"": 6.0, ""maxAreaMicrons"": 150.0, ""threshold"": 2000.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 3.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Training size: org.bytedeco.javacpp.opencv_core$Size[address=0x608000811620,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000811620,deallocatorAddress=0x13aaec9c0]]; INFO: Responses size: org.bytedeco.javacpp.opencv_core$Size[address=0x60800080d2a0,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x60800080d2a0,deallocatorAddress=0x13aaec9c0]]; INFO: RTrees classifier termination criteria: org.bytedeco.javacpp.opencv_core$TermCriteria[address=0x608000816130,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000816130,deallocatorAddress=0x13aae1520]]; ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.NIOByteBufferProvider.allocate(NIOByteBufferProvider.java:112); at loci.common.NIOFileHandle.buffer(NIOFileHandle.java:647); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:133); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:151); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:165); at loci.common.Location.getHandle(Location.java:522); at loci.common.Loca",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-493938867:5177,ERROR,ERROR,5177,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867,1,['ERROR'],['ERROR']
Availability,", ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath()); ----------------------------------------------------------------------; WARN: Invalid requested downsample 1.0 - will use 1.057 instead; INFO: 1 region detected (processing time: 2.97 seconds); INFO: Processing complete in 3.06 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}; ERROR: Error writing D:\image-project\export\358.jpg with JPEG; ERROR: Unable to write D:\image-project\export\358.jpg! No compatible writer found.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420287639:2383,down,downsample,2383,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420287639,4,"['ERROR', 'Error', 'down']","['ERROR', 'Error', 'downsample']"
Availability,"- Added diagonal navigation (e.g. `UP` + `LEFT` keys); - Navigation speed can be modified; - Acceleration effects (e.g. slowing down when releasing keys) can be turned off; - Can turn on `ignore missing TMA cores` which will 'jump over' missing TMA cores when navigating a TMA grid with arrow keys ; - Preference options were added for `acceleration effects`, `navigation speed` and `ignore missing TMA cores`",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/616:128,down,down,128,https://qupath.github.io,https://github.com/qupath/qupath/pull/616,1,['down'],['down']
Availability,"- Adds mac arm64 build; - Only uploads javadoc from mac arm64 ; - Removes the linux stuff as RPMs weren't usable for snapshot/rc builds.; - Bumps action versions to remove some warnings. See #1460. So workflow would basically be, run the jpackage action, add info about release draft (changelog/etc), people download + test the artifacts from the draft release, when happy make a tag and publish the release",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1464:308,down,download,308,https://qupath.github.io,https://github.com/qupath/qupath/pull/1464,1,['down'],['download']
Availability,- Don't warn TensorFlow not available on Apple Silicon (it is with DJL v0.29.0); - Fix Delaunay display for empty tiles; - Fix creating an empty Delaunay subdivision; - Add DuplicatesStrategy so that builds don't fail when using `importFlat` during development,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1608:28,avail,available,28,https://qupath.github.io,https://github.com/qupath/qupath/pull/1608,1,['avail'],['available']
Availability,- Fixed the total amount of objects missing the specific feature for the classifier to be applied correctly (it would previously always give the total amount of objects instead). Reported [here](https://forum.image.sc/t/qupath-error-logging-bug/62361).,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/899:227,error,error-logging-bug,227,https://qupath.github.io,https://github.com/qupath/qupath/pull/899,1,['error'],['error-logging-bug']
Availability,"- Now allows 3 different kinds of OMERO URLs (i.e. ""Webgateway"", ""Webclient"", ""iViewer""); - Handles import of multiple images in a single URL; - Handles whole projects/datasets import; - Safer password handling; - Clearer warning/error messages when Exceptions occur",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/479:230,error,error,230,https://qupath.github.io,https://github.com/qupath/qupath/pull/479,1,['error'],['error']
Availability,"- QuPath now checks for the validity of OMERO image entries when opening projects/datasets through the OMERO browser (so the user is not stuck getting a lot of error messages when opening a dataset with loads of invalid images).; - Restrict the objects sent back to OMERO through the GUI to annotations only. Sending detections is still possible but only throught scripting.; - Running 'Send selected annotations to OMERO' with no selection will prompt the user with a dialog that asks if the command should be ran with all the annotations present in the current image.; - Removed '(s)'; - Added TMACoreObject serialization. This means that it is technically possible to run 'Send selected annotations to OMERO' for a selected TMA core. It will then behave as expected (N.B. on OMERO, it will still appear as a normal 'OMERO ROI')",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/708:160,error,error,160,https://qupath.github.io,https://github.com/qupath/qupath/pull/708,1,['error'],['error']
Availability,"- When setting the magnification/downsample for an image, the `TextField` is now directly in focus.; - Fix #667: All the dialogs requesting for a numeric input (such as the one above) are now restricted to digits and decimal separator only (e.g. ""1.20"" is permitted, while ""1.2f0"" is not). N.B.: Scientific notation is accepted only on copy/paste, as the filter will reject any intermediate representation of scientific notation (i.e. 1.23E4 **is** fine whereas 1.23E is **not**).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/668:33,down,downsample,33,https://qupath.github.io,https://github.com/qupath/qupath/pull/668,1,['down'],['downsample']
Availability,"---------------------------------------------------------; **2.groovy**:; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; ------------------------------------------------------------------------------------------------------------------; **error**:; 21:52:15.344 [main] [INFO ] QuPath - Launching QuPath with args: /oamp/bio/QuPath/0.1.2/command/9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg, -script, 2.groovy; 21:52:15.600 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: groovy.lang.MissingMethodException: No signature of method: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.setImageType() is applicable for argument types: (java.lang.String) values: [BRIGHTFIELD_H_DAB]; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.main(QuPath.java:162); Caused by: javax.script.ScriptException: groovy.lang.MissingMethodException: No signature of method: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.setImageType() is applicable for argument types: (java.lang.String) values: [BRIGHTFIELD_H_DAB]; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:346); 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); 	... 1 common frames omitted; Caused by: groovy.lang.MissingMethodException: No signature of method: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:5076,ERROR,ERROR,5076,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"--debug option to get more log output.; > Run with --scan to get full insights.; ; * Get more help at https://help.gradle.org; ; BUILD FAILED in 721ms. The instructions that I am following are as follows:. $ git clone https://github.com/qupath/qupath; $ cd qupath; $ ./gradlew clean jpackage. I have:; ```; $ uname -a; Linux goku.bu.edu 3.10.0-1160.59.1.el7.x86_64 #1 SMP Wed Feb 23 16:47:03 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux. ```; and; ```; $ lsb_release -a; LSB Version:	:core-4.1-amd64:core-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.9.2009 (Core); Release:	7.9.2009; Codename:	Core; ```. also:; ```; $ java -version; openjdk version ""1.8.0_322""; OpenJDK Runtime Environment (build 1.8.0_322-b06); OpenJDK 64-Bit Server VM (build 25.322-b06, mixed mode); ```. I also don't understand why it is looking elsewhere than where I have zipped it and set the directory to it as in:; ```; [jalal@goku downloads]$ sudo vi /etc/profile.d/gradle.sh; [jalal@goku downloads]$ sudo chmod +x /etc/profile.d/gradle.sh; [jalal@goku downloads]$ source /etc/profile.d/gradle.sh; [jalal@goku downloads]$ gradle -v. ------------------------------------------------------------; Gradle 7.4.2; ------------------------------------------------------------. Build time: 2022-03-31 15:25:29 UTC; Revision: 540473b8118064efcc264694cbcaa4b677f61041. Kotlin: 1.5.31; Groovy: 3.0.9; Ant: Apache Ant(TM) version 1.10.11 compiled on July 10 2021; JVM: 1.8.0_322 (Red Hat, Inc. 25.322-b06); OS: Linux 3.10.0-1160.59.1.el7.x86_64 amd64. [jalal@goku downloads]$ cat /etc/profile.d/gradle.sh . export GRADLE_HOME=/opt/gradle/gradle-7.4.2; export PATH=${GRADLE_HOME}/bin:${PATH}. $ tail -1 ~/.bashrc; export PATH=$PATH:/opt/gradle/gradle-7.4.2/bin; $ source ~/.bashrc. ```. The plugin that is reported as missing in the error is in ; ```; [jalal@goku ~]$ find /opt/gradle -name ""gradle-plugins-7.4.2.jar""; /opt/gradle/gradle-7.4.2/lib/plugins/gradle-plugins-7.4.2.jar; ```. Full log of `./gradlew cle",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/950:1498,down,downloads,1498,https://qupath.github.io,https://github.com/qupath/qupath/issues/950,1,['down'],['downloads']
Availability,-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79413ff000-7f7941400000 rw-p 0000d000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f7941400000-7f7941c00000 rw-p 00000000 00:00 0 ; 7f7941d69000-7f7941e0e000 r--p 00000000 fd:03 721040939 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans-Bold.ttf; 7f7941e0e000-7f7941e12000 ---p 00000000 00:00 0 ; 7f7941e12000-7f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:15901,down,downloads,15901,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,-processing-0.1.2.jar;qupath/qupath-core-processing-awt-0.1.2.jar;qupath/qupath-extension-ij-0.1.2.jar;qupath/qupath-extension-input-0.1.2.jar;qupath/qupath-extension-opencv-0.1.2.jar;qupath/qupath-extension-openslide-0.1.2.jar;qupath/qupath-extension-pen-0.1.2.jar;qupath/qupath-extension-script-editor-0.1.2.jar;qupath/qupath-gui-fx-0.1.2.jar;qupath/qupath-processing-ij-0.1.2.jar;qupath/qupath-processing-opencv-0.1.2.jar;jars/commons-math3-3.6.1.jar;jars/controlsfx-8.40.12.jar;jars/flowless-0.4.5.jar;jars/groovy-2.4.7.jar;jars/groovy-jsr223-2.4.7.jar;jars/gson-2.8.0.jar;jars/ij-1.51g.jar;jars/jfxtras-common-8.0-r5.jar;jars/jfxtras-menu-8.0-r5.jar;jars/jinput-2.0.6.jar;jars/jpen-2-150301.jar;jars/jutils-1.0.0.jar;jars/logback-classic-1.1.7.jar;jars/logback-core-1.1.7.jar;jars/opencv-3.1.0.jar;jars/openslide-3.4.1_2.jar;jars/packager.jar;jars/reactfx-2.0-M4u1.jar;jars/richtextfx-0.6.10.jar;jars/slf4j-api-1.7.20.jar;jars/undofx-1.2.jar;jars/wellbehavedfx-0.1.1.jar ; 20:56:56.627 [main] [ERROR] qupath.QuPath - Error running script! ; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException ; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155) ; 	at qupath.QuPath.main(Unknown Source) ; Caused by: javax.script.ScriptException: java.lang.NullPointerException ; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:346) ; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152) ; 	... 1 common frames omitted ; Caused by: java.lang.NullPointerException: null ; 	at qupath.imagej.images.servers.BufferedImagePlusServer.getPath(BufferedImagePlusServer.java:71) ; 	at qupath.lib.images.servers.ImageServer$getPath.call(Unknown Source) ; 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48) ; 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113) ; 	at org.codehaus.groovy.ru,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/260:3199,ERROR,ERROR,3199,https://qupath.github.io,https://github.com/qupath/qupath/issues/260,1,['ERROR'],['ERROR']
Availability,". This script at least runs, although I'm not sure if it's what you want or not:; ```groovy; //Exporting Image as .tif files; import qupath.lib.gui.ImageWriterTools. import qupath.lib.images.servers.ImageServer; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QP. import java.awt.image.BufferedImage. /*; * Adjustable parameters; */; int tileWidthPixels =1500 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 70 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput = buildFilePath(PROJECT_BASE_DIR, 'something else') // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!; mkdirs(dirOutput). int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-486778605:1190,error,errors,1190,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605,1,['error'],['errors']
Availability,". What format are you using?; Depending on the sensitivity you need, QuPath automatically includes your red and green channel mean intensities, so as long as you expand the cytoplasm out far enough, you will get a measure of how much stain is within that space. For the kind of staining I see in your image, I would also recommend the _Analyze->Cell analysis->Subcellular detection_ command, as it can generate a much more exact value for the ""amount of stain above a threshold"" within a given cell, without being diluted by empty space. This command will only work, though, if your image has Pixel width and height included in the metadata. Once you have the data you need on a cell to cell basis, it's as simple as creating a classifier, either with a training set and the classifier command, or creating your own, exact value, classifier. The slower way of doing this is creating your own classifier through the menu system, which Pete shows:; https://github.com/qupath/qupath/wiki/Object-classifications; about half way down the page. Using that setup, you can generate positive cells for each channel and a set of dual positive cells. My preferred method is using a script to classify. The following script is a toned down version of one Pete has posted elsewhere, but it generally gets the job done. Plus you can expand it out as much as you want using the code that is currently there. Want to classify based on two features? Add a ""def myNewFeature"" and a new ""double val2"" line inside the for loop. You can make the if statments as convoluted as you have the time or desire for, and it is much easier than changing things through the menu classification system.; ```. import qupath.lib.objects.classes.PathClass; import qupath.lib.objects.classes.PathClassFactory. def Positive = PathClassFactory.getPathClass(""Positive""); def Negative = PathClassFactory.getPathClass(""Negative""). //I honestly forget the exact text for the given fluorescence features; //but feature would be one of those; d",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/126#issuecomment-351212559:1377,down,down,1377,https://qupath.github.io,https://github.com/qupath/qupath/issues/126#issuecomment-351212559,1,['down'],['down']
Availability,".71, 25406.53],; [68746.27, 25903.55],; [65515.64, 26698.79],; [63629.79, 27496.64]; ]; ],; [; [; [66332.49, 38226.36],; [67901.34, 39472.21],; [69193.59, 40714.77],; [70137.93, 41758.51],; [70883.46, 42653.14],; [71239.44, 43151.51],; [74809.92, 43746.59],; [77493.84, 44243.61],; [79879.53, 44591.52],; [81619.1, 44740.63],; [82712.55, 44740.63],; [83358.68, 44641.23],; [83706.59, 44392.71],; [83905.4, 43945.4],; [83855.7, 43050.76],; [83358.68, 41609.4],; [82265.23, 39919.53],; [80426.26, 38130.26],; [77891.45, 36589.49],; [74809.92, 35545.75],; [71529.59, 35098.43],; [69094.19, 35396.64],; [67454.02, 36191.88],; [66509.68, 37384.73],; [66332.49, 38226.36]; ]; ]; ]; },; ""properties"": {; ""objectType"": ""annotation"",; ""measurements"": {; ""Area µm^2"": 3.5567575437333584E7,; ""Length µm"": 62782.89619349399,; ""Solidity"": 0.5638625874807928,; ""Max diameter µm"": 12192.853113808404,; ""Min diameter µm"": 7673.144125811996; }; }; }; ```. The following script creates a mask the 'QuPath' way:; ```groovy; def roi = getSelectedROI(); def mask = BufferedImageTools.createROIMask(roi, 10); new ij.ImagePlus(""Mask"", mask).show(); ```. You can generate an 'ImageJ' mask using _Extensions → ImageJ → Send region to ImageJ_ and then _Edit > Selection > Create Mask_. ### Expected behavior; When sending a QuPath ROI to ImageJ, any masks generated in either application should be identical - or at least very similar. This might be achieved by converting complicated `PolygonROI` instances into `GeometryROIs`. ### Screenshots; #### In QuPath; <img width=""903"" alt=""QuPath mask"" src=""https://github.com/user-attachments/assets/5ebd2fc7-12ef-4cec-8928-115fece9fe4e"">. #### In ImageJ; <img width=""903"" alt=""ImageJ mask"" src=""https://github.com/user-attachments/assets/0af83a44-d1d0-4cc9-b706-0d337eec2769"">. ### Desktop (please complete the following information):; - OS: All; - QuPath Version: 0.5.1 (presumably earlier versions too). ### Additional context; ImageJ's choice of winding rule may well be more se",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1674:6451,mask,mask,6451,https://qupath.github.io,https://github.com/qupath/qupath/issues/1674,2,['mask'],['mask']
Availability,".75],; [71529.59, 35098.43],; [69094.19, 35396.64],; [67454.02, 36191.88],; [66509.68, 37384.73],; [66332.49, 38226.36]; ]; ]; ]; },; ""properties"": {; ""objectType"": ""annotation"",; ""measurements"": {; ""Area µm^2"": 3.5567575437333584E7,; ""Length µm"": 62782.89619349399,; ""Solidity"": 0.5638625874807928,; ""Max diameter µm"": 12192.853113808404,; ""Min diameter µm"": 7673.144125811996; }; }; }; ```. The following script creates a mask the 'QuPath' way:; ```groovy; def roi = getSelectedROI(); def mask = BufferedImageTools.createROIMask(roi, 10); new ij.ImagePlus(""Mask"", mask).show(); ```. You can generate an 'ImageJ' mask using _Extensions → ImageJ → Send region to ImageJ_ and then _Edit > Selection > Create Mask_. ### Expected behavior; When sending a QuPath ROI to ImageJ, any masks generated in either application should be identical - or at least very similar. This might be achieved by converting complicated `PolygonROI` instances into `GeometryROIs`. ### Screenshots; #### In QuPath; <img width=""903"" alt=""QuPath mask"" src=""https://github.com/user-attachments/assets/5ebd2fc7-12ef-4cec-8928-115fece9fe4e"">. #### In ImageJ; <img width=""903"" alt=""ImageJ mask"" src=""https://github.com/user-attachments/assets/0af83a44-d1d0-4cc9-b706-0d337eec2769"">. ### Desktop (please complete the following information):; - OS: All; - QuPath Version: 0.5.1 (presumably earlier versions too). ### Additional context; ImageJ's choice of winding rule may well be more sensible - but it is not something we should change in QuPath too quickly. This clearly *could* be a serious problem for some workflows, but I struggle to think of a time when it is likely to have been a problem in reality. It is only likely to impact `PolygonROIs` with self-intersections. While these can be drawn in the viewer, internally QuPath will typically convert these to be `GeometryROIs` - and these seem to behave ok. Note that ImageJ's mask generation is in general a bit more sophisticated than QuPaths (see [here](https://github.com/",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1674:7046,mask,mask,7046,https://qupath.github.io,https://github.com/qupath/qupath/issues/1674,1,['mask'],['mask']
Availability,".com/qupath/qupath/blob/master/qupath-core/src/main/java/qupath/lib/roi/PolygonROI.java) for polygons. The most useful constructor is:; ```groovy; public PolygonROI(float[] x, float[] y, int c, int z, int t); ```; For ```c```, ```z``` and ```t``` (channel, z-slide & time point) you can probably use ```-1```, ```0```, ```0``` by default. . After creating your polygon ROI, then create a [```PathAnnotationObject```](https://github.com/qupath/qupath/blob/master/qupath-core/src/main/java/qupath/lib/objects/PathAnnotationObject.java) with the ROI:; ```groovy; public PathAnnotationObject(ROI pathROI); ```. and finally you can add this annotation to the hierarchy simply with; ```groovy; addObject(annotation); ```. I have some memory of Aperio ImageScope having a concept of layers, and also 'negative' regions; I don't know if this would also be in your XML. If so, these may not have exact matches inside QuPath, but there are various tricks you could use if you find they are needed (e.g. combining or subtracting ROIs, adding them to the hierarchy in different ways, setting names, classifications or colors etc.). If you haven't already, I suggest checking out the Wiki for [Writing custom scripts](https://github.com/qupath/qupath/wiki/Writing-custom-scripts) and [Advanced scripting with IntelliJ](https://github.com/qupath/qupath/wiki/Advanced-scripting-with-IntelliJ), which can help with writing the code and accessing the QuPath source. Finally, it may also be useful to know that, if you want to use any other Java libraries to help, then you can drag the required Jar file onto QuPath to copy it into QuPath's extensions directory. Even if the Jar isn't a 'real' QuPath extension, this means that it will still be available on QuPath's classpath when running the script. This could be useful if your XML parsing code is already contained in a Jar, or if you want to add another library (e.g. ```groovy-xml.jar```) to help with scripting the parsing. Hopefully that helps to get started.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/61#issuecomment-290912225:2456,avail,available,2456,https://qupath.github.io,https://github.com/qupath/qupath/issues/61#issuecomment-290912225,1,['avail'],['available']
Availability,".fireEvent(Event.java:198); 	at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:3144); 	at javafx.scene.Scene$DnDGesture.processTargetEnterOver(Scene.java:3316); 	at javafx.scene.Scene$DropTargetListener.dragEnter(Scene.java:3024); 	at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragEnter$0(GlassSceneDnDEventHandler.java:83); 	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399); 	at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragEnter(GlassSceneDnDEventHandler.java:77); 	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragEnter$9(GlassViewEventHandler.java:733); 	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424); 	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragEnter(GlassViewEventHandler.java:732); 	at com.sun.glass.ui.View.handleDragEnter(View.java:684); 	at com.sun.glass.ui.View.notifyDragEnter(View.java:1020); 	at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); 	at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:316); 	at java.base/java.lang.Thread.run(Thread.java:833); 13:36:13.428 [JavaFX Application Thread] [ERROR] q.l.g.QuPathUncaughtExceptionHandler - setDropCompleted can be called only from DRAG_DROPPED handler (see full stack trace above, or use 'debug' log level); 13:36:13.788 [JavaFX Application Thread] [ERROR] q.l.g.QuPathUncaughtExceptionHandler - setDropCompleted can be called only from DRAG_DROPPED handler (see full stack trace above, or use 'debug' log level); 13:36:14.052 [JavaFX Application Thread] [ERROR] q.l.g.QuPathUncaughtExceptionHandler - setDropCompleted can be called only from DRAG_DROPPED handler (see full stack trace above, or use 'debug' log level); ```. This doesn't happen with files or lists. (actually, this happens when the dragboard has a string, because apparently dragging+dropping URLs from a web browser doesn't make them recognised as URLs by dragboard)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1338#issuecomment-1727641846:2623,ERROR,ERROR,2623,https://qupath.github.io,https://github.com/qupath/qupath/pull/1338#issuecomment-1727641846,3,['ERROR'],['ERROR']
Availability,.property.ObjectPropertyBase.markInvalid(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.set(Unknown Source); at javafx.controls/javafx.scene.control.TreeView.setRoot(Unknown Source); at qupath.lib.gui.panes.PathObjectHierarchyView.hierarchyChanged(PathObjectHierarchyView.java:563); at qupath.lib.gui.panes.PathObjectHierarchyView.lambda$hierarchyChanged$11(PathObjectHierarchyView.java:559); at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(Unknown Source); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(Unknown Source); at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(Unknown Source); at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); ```; Still other times I see another error:. ```; ERROR: QuPath exception; at java.base/java.util.LinkedHashMap$LinkedHashIterator.nextNode(Unknown Source); at java.base/java.util.LinkedHashMap$LinkedKeyIterator.next(Unknown Source); at qupath.lib.objects.PathObject.nDescendants(PathObject.java:475); at qupath.lib.objects.PathObjectTools.countDescendants(PathObjectTools.java:200); at qupath.lib.objects.PathObject.objectCountPostfix(PathObject.java:190); at qupath.lib.objects.PathObject.toString(PathObject.java:224); at qupath.lib.gui.panes.PathObjectListCell.updateItem(PathObjectListCell.java:66); at qupath.lib.gui.panes.PathObjectListCell.updateItem(PathObjectListCell.java:36); at javafx.controls/javafx.scene.control.ListCell.updateItem(Unknown Source); at javafx.controls/javafx.scene.control.ListCell.lambda$new$2(Unknown Source); at javafx.base/javafx.collections.WeakListChangeListener.onChanged(Unknown Source); at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChange,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/744:5212,error,error,5212,https://qupath.github.io,https://github.com/qupath/qupath/issues/744,1,['error'],['error']
Availability,".qpdata files are files full of objects, not the image itself. The error you are getting is probably QuPath trying to find the same file path to the _image_ file. In general, it is best to store the images within the project folder, and transfer the entire project folder. Regardless, you should be able to look at your data again, even with a completely new project. Just create the project, import the images again, and then copy the qpdata files into the ""data"" folder.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/266#issuecomment-461090032:67,error,error,67,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461090032,1,['error'],['error']
Availability,.scn files error,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/184:11,error,error,11,https://qupath.github.io,https://github.com/qupath/qupath/issues/184,1,['error'],['error']
Availability,".sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$300(GlassViewEventHandler.java:388); 	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); 	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:387); 	at com.sun.glass.ui.View.handleMouseEvent(View.java:555); 	at com.sun.glass.ui.View.notifyMouse(View.java:937); 	at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); 	at com.sun.glass.ui.gtk.GtkApplication.lambda$null$450(GtkApplication.java:139); 	at java.lang.Thread.run(Thread.java:745); 09:32:08.265 [JavaFX Application Thread] [WARN ] q.l.i.servers.OpenslideServerBuilder - Unable to open /data/CAMELYON16/Train_Tumor/Tumor_005.tif with OpenSlide: null; 09:32:08.265 [JavaFX Application Thread] [ERROR] q.l.i.servers.ImageServerProvider - Unable to build whole slide server - check your classpath for a suitable library (e.g. OpenSlide, BioFormats); 	; 09:32:08.265 [JavaFX Application Thread] [ERROR] q.l.i.servers.ImageServerProvider - /home/vaibhav/QuPath/app/QuPathApp.jar:qupath/qupath-core-0.1.2.jar:qupath/qupath-core-awt-0.1.2.jar:qupath/qupath-core-processing-0.1.2.jar:qupath/qupath-core-processing-awt-0.1.2.jar:qupath/qupath-extension-ij-0.1.2.jar:qupath/qupath-extension-input-0.1.2.jar:qupath/qupath-extension-opencv-0.1.2.jar:qupath/qupath-extension-openslide-0.1.2.jar:qupath/qupath-extension-pen-0.1.2.jar:qupath/qupath-extension-script-editor-0.1.2.jar:qupath/qupath-gui-fx-0.1.2.jar:qupath/qupath-processing-ij-0.1.2.jar:qupath/qupath-processing-opencv-0.1.2.jar:jars/commons-math3-3.6.1.jar:jars/controlsfx-8.40.12.jar:jars/flowless-0.4.5.jar:jars/groovy-2.4.7.jar:jars/groovy-jsr223-2.4.7.jar:jars/gson-2.8.0.jar:jars/ij-1.51g.jar:jars/jfxtras-common-8.0-r5.jar:jars/jfxtras-menu-8.0-r5.jar:jars/jinput-2.0.6.jar:jars/jpen-2-150301.jar:jars/jutils-1.0.0.jar:jars/logback-classic-1.1.7.jar:jars/logback-core-1.1.7.jar:jars/opencv-3.1.0.jar:jars/openslide-3.4.1_2.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/65:7377,ERROR,ERROR,7377,https://qupath.github.io,https://github.com/qupath/qupath/issues/65,1,['ERROR'],['ERROR']
Availability,"// Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); File file = new File(dirOutput, name); ImageWriterTools.writeImageRegionWithOverlay(imageData, overlayOptions, request, file.getAbsolutePath()). // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; catch (Exception e) {; // Check if we have had a sufficient number of errors to just give up; nErrors++;; if (nErrors > maxErrors) {; println(""Maximum number of errors exceeded - aborting...""); return; }; e.printStackTrace(); }; }; }; }; ```; The original version contained quite a bit of ImageJ-related stuff but on closer inspection I'm not sure why since it actually writes JPEGs instead of ImageJ TIFFs. If the above script doesn't work, I think it would be best to start a new discussion at https://forum.image.sc/tags/qupath describing what it should do and perhaps there is an easier way to get there.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-486778605:3408,down,downsample,3408,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605,3,"['down', 'error']","['downsample', 'errors']"
Availability,"/github.com/qupath/qupath/issues/359. My OS is Windows 10 and I am using the 0.2.3 version. This is the system info:; Version: 0.2.3; Build time: 2020-09-11, 12:59; Latest commit tag: '43aad4ec'. Java version:		14.0.2; Java vendor: 		AdoptOpenJDK - https://adoptopenjdk.net/; Java home: 		C:\Users\lafore01\AppData\Local\QuPath-0.2.3\runtime. Operating system:		Windows 10 - 10.0; Architecture: 		amd64. What I have done so far: on a brightfield image, I first create DoG superpixels, calculate the intensity features, then load an object classifier to separate them into two classes: tumour and adipose. Finally, I use the tile classification to annotation feature. While all this works well when done manually, the following script (obtained by using the workflow to script feature) produces the same problem described previously when it reaches the tile classification to annotation line. See attached screenshot. `selectAnnotations();; runPlugin('qupath.imagej.superpixels.DoGSuperpixelsPlugin', '{""downsampleFactor"": 4.0, ""sigmaMicrons"": 10.0, ""minThreshold"": 10.0, ""maxThreshold"": 230.0, ""noiseThreshold"": 1.0}');; selectDetections();; runPlugin('qupath.lib.algorithms.IntensityFeaturesPlugin', '{""pixelSizeMicrons"": 2.0, ""region"": ""ROI"", ""tileSizeMicrons"": 25.0, ""colorOD"": true, ""colorStain1"": true, ""colorStain2"": false, ""colorStain3"": true, ""colorRed"": false, ""colorGreen"": false, ""colorBlue"": false, ""colorHue"": false, ""colorSaturation"": false, ""colorBrightness"": false, ""doMean"": true, ""doStdDev"": true, ""doMinMax"": true, ""doMedian"": false, ""doHaralick"": false, ""haralickDistance"": 1, ""haralickBins"": 32}');; runObjectClassifier(""TumAd_superpixel"");; runPlugin('qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin', '{""pathClass"": ""All classes"", ""deleteTiles"": true, ""clearAnnotations"": false, ""splitAnnotations"": false}');; `; . ![TileClasstoAnnotation](https://user-images.githubusercontent.com/82104756/114074358-336c7c80-989c-11eb-8379-3d364a48ec7c.PNG). As you can see i",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/704:1177,down,downsampleFactor,1177,https://qupath.github.io,https://github.com/qupath/qupath/issues/704,1,['down'],['downsampleFactor']
Availability,/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7940f5a5e3]; /lib64/libstdc++.so.6(+0x71555)[0x7f7940f5b555]; /lib64/libpthread.so.0(+0x620b)[0x7f822813720b]; /lib64/libstdc++.so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7f7866536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f82290579c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f822905c59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f822905bb8b]; /lib64/libdl.so.2(+0xfab)[0x7f8228e44fab]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/libdl.so.2(+0x15ad)[0x7f8228e455ad]; /lib64/libdl.so.2(dlopen+0x31)[0x7f8228e45041]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57924)[0x7f8227786924]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57a5a)[0x7f8227786a5a]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(JVM_LoadLibrary+0xbb)[0x7f822745bd6b]; /scratch3/downloads/QuPath/lib/runtime/lib/libjava.so(Java_jdk_internal_loader_NativeLibraries_load+0x17f)[0x7f822544627f]; [0x7f820e860bbb]; ======= Memory map: ========; 414cb000-414cd000 r-xs 00000000 00:04 20496117 /memfd:/.glXXXXXX (deleted); 41d6e000-41e1d000 rw-p 00000000 00:00 0 ; 80000000-80020000 rw-p 00000000 00:00 0 ; 80020000-80040000 rw-p 00000000 00:00 0 ; 80040000-800c0000 rw-p 00000000 00:00 0 ; 800c0000-80140000 rw-p 00000000 00:00 0 ; 80140000-801c0000 rw-p 00000000 00:00 0 ; 801c0000-80200000 rw-p 00000000 00:00 0 ; 80200000-80240000 rw-p 00000000 00:00 0 ; 80240000-80280000 rw-p 00000000 00:00 0 ; 80280000-80440000 rw-p 00000000 00:00 0 ; 80440000-80460000 rw-p 00000000 00:00 0 ; 80460000-80480000 ---p 00000000 00:00 0 ; 80480000-805d0000 rw-p 00000000 00:00 0 ; 805d0000-c0000000 ---p 00000000 ,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:3086,down,downloads,3086,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,00000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPa,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16495,down,downloads,16495,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,0:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f7941400000-7f7941c00000 rw-p 00000000 00:00 0 ; 7f7941d69000-7f7941e0e000 r--p 00000000 fd:03 721040939 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans-Bold.ttf; 7f7941e0e000-7f7941e12000 ---p 00000000 00:00 0 ; 7f7941e12000-7f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16018,down,downloads,16018,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,0d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec000 r--p 00000000 fd:03 721040943 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans.ttf; 7f79434ec000-7f79434f0000 r-xp 00000000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79434f0000-7f79436ef000 ---p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436ef000-7f79436f0000 r--p 00003000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f0000-7f79436f1000 rw-p 00004000 00:2f 23060194,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:17357,down,downloads,17357,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,"1 65 BF 48 66 72 67 87 1B 9C EB E9 E9 ...Ae.Hfrg......; 0060: B8 97 38 09 02 E8 70 93 16 C4 EF 35 5D 83 74 76 ..8...p....5].tv; 00F0: 83 18 85 B2 3D 20 EC 45 98 AB 54 21 0C B7 B0 2F ..t.= .E..T!.../; 0070: 8D 96 F8 01 E0 AD 3C 0F 18 07 0B 00 77 F3 32 E2 ......<.....w.2.; 0080: DC 68 9D F2 67 77 DF 1E 6D 06 82 66 F6 F7 8E 2B .h..gw..m..f...+; 0090: 35 9A 85 F6 09 72 7C 5B 3C CC 87 59 84 CF 96 68 5....r.[<..Y...h; 00A0: 6B D5 81 4C 74 B9 A7 91 98 49 0B 12 3F 8C E1 52 k..Lt....I..?..R; 00B0: E3 B3 53 B9 78 ED 29 56 82 E3 13 31 16 C0 6A A7 ..S.x.)V...1..j.; 00C0: F8 5A 8F FE 94 77 14 0A 22 0D 51 66 A1 55 BD 6B .Z......"".Qf...k; 00D0: D9 2E 4A 4F 9B 78 15 9B 53 1D 03 91 48 A0 92 D2 ..JO.x..S...H...; 00E0: 0A 26 24 32 18 15 C1 2B 1E 00 64 37 CE D4 34 29 .&$2...+..d7..4(; ; }; },; ]; }; ]; }; ); javax.net.ssl|DEBUG|29|Thread-9|2020-04-13 21:28:52.416 NOVT|null:-1|Received alert message (; ""Alert"": {; ""level"" : ""fatal"",; ""description"": ""handshake_failure""; }; ); javax.net.ssl|ERROR|29|Thread-9|2020-04-13 21:28:52.417 NOVT|null:-1|Fatal (HANDSHAKE_FAILURE): Received fatal alert: handshake_failure (; ""throwable"" : {; javax.net.ssl.SSLHandshakeException: Received fatal alert: handshake_failure; 	at java.base/sun.security.ssl.Alert.createSSLException(Unknown Source); 	at java.base/sun.security.ssl.Alert.createSSLException(Unknown Source); 	at java.base/sun.security.ssl.TransportContext.fatal(Unknown Source); 	at java.base/sun.security.ssl.Alert$AlertConsumer.consume(Unknown Source); 	at java.base/sun.security.ssl.TransportContext.dispatch(Unknown Source); 	at java.base/sun.security.ssl.SSLTransport.decode(Unknown Source); 	at java.base/sun.security.ssl.SSLSocketImpl.decode(Unknown Source); 	at java.base/sun.security.ssl.SSLSocketImpl.readHandshakeRecord(Unknown Source); 	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(Unknown Source); 	at java.base/sun.net.www.protocol.https.HttpsClient.afterConnect(Unknown Source); 	at java.base/sun.net.www.protocol.https.AbstractDe",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/436:11226,ERROR,ERROR,11226,https://qupath.github.io,https://github.com/qupath/qupath/issues/436,1,['ERROR'],['ERROR']
Availability,1. Clone or download the repository (and extract if necessary); 2. Open a command prompt in the downloaded folder; 3. Run `gradlew clean jpackage`. See https://qupath.readthedocs.io/en/0.5/docs/reference/building.html,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1542#issuecomment-2162851928:12,down,download,12,https://qupath.github.io,https://github.com/qupath/qupath/issues/1542#issuecomment-2162851928,2,['down'],"['download', 'downloaded']"
Availability,"1. Load any png or jpg; 2. Change the pixel size in the image tab to a number; 3. Run this code: . ```; import qupath.lib.images.servers.ImageServer; import qupath.lib.objects.classes.PathClassFactory. import java.awt.image.BufferedImage. import static qupath.lib.gui.scripting.QPEx.*. def imageData=getCurrentImageData(); Map<PathClass, Integer> labels = new LinkedHashMap<>();; int label = 1; labels.put(PathClassFactory.getPathClassUnclassified(), label++);; for (def annotation : imageData.getHierarchy().getAnnotationObjects()) {; def pathClass = annotation.getPathClass();; if (pathClass != null && !labels.containsKey(pathClass)); labels.put(pathClass, label++);; }. for (def annotation : imageData.getHierarchy().getAnnotationObjects()) {; def pathClass = annotation.getPathClass();; if (pathClass != null && !labels.containsKey(pathClass)); labels.put(pathClass, label++);; }. double downsample=1; ImageServer<BufferedImage> server = new LabeledImageServer.Builder(imageData); .backgroundLabel(0); .addLabels(labels); .downsample(downsample); .build();. print('Original Image Server'); print(imageData.getServer().getPixelCalibration().getAveragedPixelSize()); print(imageData.getServer().getPixelCalibration().getPixelWidthUnit()); print(imageData.getServer().getPixelCalibration().getAveragedPixelSizeMicrons()). print('Labeled Image Server'); print(server.getPixelCalibration().getAveragedPixelSize()); print(server.getPixelCalibration().getPixelWidthUnit()); print(server.getPixelCalibration().getAveragedPixelSizeMicrons()); ```. **Expected behavior**; The labeled image server should know the pixel calibration input in the image tab. . **Screenshots**; If applicable, add screenshots to help explain your problem.; ![image](https://user-images.githubusercontent.com/29264310/90062797-16e05c00-dc9d-11ea-978b-4c321ce7dffb.png). **Desktop (please complete the following information):**; - Windows 10; - QuPath 0.2.2. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/591:1794,down,downsample,1794,https://qupath.github.io,https://github.com/qupath/qupath/issues/591,2,['down'],['downsample']
Availability,"100); println timeit; Thread.sleep(200); println timeit; ```; Output:; ```; Time since start	106 ms; Time since start	314 ms; ```. It's also possible to have a bit more control, setting named checkpoints along the way:. ```groovy; var timeit = new Timeit(); .microseconds(); .start(""First checkpoint""); ; println 'Doing something now'; Thread.sleep(100). timeit.checkpoint(""Second checkpoint""). println 'Waiting for a bit'; Thread.sleep(200); ; timeit.stop(). println ""Doing something that isn't timed""; Thread.sleep(200). println timeit; ```. Output:; ```; Doing something now; Waiting for a bit; Doing something that isn't timed; First checkpoint	106323 µs; Second checkpoint	208185 µs; Total duration	314508 µs; ```. It can also be used to run the same code multiple times, reporting the individual and average times:. ```groovy; var timeit = new Timeit(); .summarizeCheckpoints(); .checkpointAndRun(""My calculation"", () -> mySlowCalculation(), 10); ; println timeit.stop() // Important to stop to get time for last checkpoint. void mySlowCalculation() {; def x = 2 + 2; Thread.sleep(50); }; ```. Output:; ```; My calculation (1)	56 ms; My calculation (2)	55 ms; My calculation (3)	54 ms; My calculation (4)	55 ms; My calculation (5)	61 ms; My calculation (6)	52 ms; My calculation (7)	55 ms; My calculation (8)	55 ms; My calculation (9)	53 ms; My calculation (10)	57 ms; Total duration	554 ms; Average per checkpoint: 55 ms; ```. ## Fix methods to get objects. Add missing `QP.getTileObjects()` method (https://github.com/qupath/qupath/issues/1065). Also ensure that `QP.getAllObjects()` returns a collection rather than array, for better consistency. ## Add version checking scripting methods. New methods to check the running QuPath version in scripts.; If the check fails, an exception will be thrown that will cause the script not to run. ```groovy; // Version v0.4.0 or newer; checkMinVersion('0.4.0'). // Version v0.4.x (but not earlier or later); checkVersionRange('0.4.0', '0.5.0'); ```. ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1078:3356,checkpoint,checkpoint,3356,https://qupath.github.io,https://github.com/qupath/qupath/pull/1078,1,['checkpoint'],['checkpoint']
Availability,"18 ms); INFO: Loaded extension ImageJ extension (58 ms); INFO: Loaded extension JPen extension (22 ms); INFO: Loaded extension OpenCV extensions (3 ms); INFO: Loaded extension Rich script editor extension (373 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; WARN: Unable to obtain full image format info for file:/D:/pDST/eHE-PDS18-015016-leica.tif (class java.util.NoSuchElementException); WARN: Temp memoization directory created at C:\Users\DanielH\AppData\Local\Temp\qupath-memo-13737650391880953912; WARN: If you want to avoid this warning, either disable Bio-Formats memoization in the preferences or specify a directory to use; ERROR: *** One or more readers is misbehaving. See the debug output for more information. e.g.:; loci.formats.in.APLReader@578b4451 -> java.lang.NullPointerException('null') ***; WARN: Removing alpha channel; WARN: Removing alpha channel; ERROR: QuPath exception: Java heap space; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(Unknown Source); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:539); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:707); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.java:902); at qupath.lib.display.ImageDisplay.updateHistogramMap(ImageDisplay.java:573); at qupath.lib.display.ImageDisplay.setImageData(ImageDisplay.java:144); at qupath.lib.gui.viewer.QuPathViewer.setImageData(QuPathViewer.java:1475); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2547); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2425); at qupath.lib.gui.commands.OpenCommand.run(OpenCommand.java:51); at qupath.lib.gui.QuPathGUI.lambda$createCommandAction$53(QuPathGUI.java:3528); at qupath.lib.gui.QuPathGUI$$Lambda$155/0x000000080024c",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/382:1532,ERROR,ERROR,1532,https://qupath.github.io,https://github.com/qupath/qupath/issues/382,1,['ERROR'],['ERROR']
Availability,"1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 4 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 5 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ; ...........Written tile 6 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ; Y =3000.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 7 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).ti",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:9594,error,error,9594,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,"1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 7 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 8 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ; ...........Written tile 9 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ; Y =4500.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 10 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:11161,error,error,11161,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,"2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath()); ----------------------------------------------------------------------; WARN: Invalid requested downsample 1.0 - will use 1.057 instead; INFO: 1 region detected (processing time: 2.97 seconds); INFO: Processing complete in 3.06 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""ex",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420287639:1825,down,downsample,1825,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420287639,1,['down'],['downsample']
Availability,"2),; ImageOps.Core.splitSubtract(; ImageOps.Filters.gaussianBlur(2.0),; ImageOps.Filters.gaussianBlur(5.0); ); ]; def op = ImageOps.Core.sequential(opList). // Apply the op to the image, handling any necessary padding; mat = ImageOps.padAndApply(op, mat). // Print some stats, per channel and across all channels; println 'Output channel mean: ' + OpenCVTools.channelMean(mat); println 'Output channel std dev: ' + OpenCVTools.channelStdDev(mat); println 'Output global mean: ' + OpenCVTools.mean(mat); println 'Output globalel std dev: ' + OpenCVTools.stdDev(mat). // Show result using ImageJ; def imp = OpenCVTools.matToImagePlus(""Result"", mat); imp.show(); ```. Additionally added `GroovyCV` to provide more assistance through Groovy categories and operator overloading. This is a *lot* more experimental, but here's a script:; ```groovy; import ij.*; import ij.gui.Roi; import ij.process.ImageProcessor; import org.bytedeco.opencv.global.opencv_core; import org.bytedeco.opencv.opencv_core.*. double downsample = 1.0; def roi = getSelectedROI(); def server = getCurrentServer(); def region = RegionRequest.createInstance(server.getPath(), downsample, roi). /**; * We can do fun stuff in here; */; use (GroovyCV) {. def img = server.readBufferedImage(region). // Let's start with OpenCV and average the channels; def mat = img as Mat; mat.convertTo(mat, opencv_core.CV_32F); mat = mat.splitChannels().average(). // Compute difference of Gaussians; def mat2 = mat.clone(); OpenCVTools.gaussianFilter(mat, 2.0) ; OpenCVTools.gaussianFilter(mat2, 5.0); mat = mat - mat2; ; // Compute a threshold using absolute values; mat2 = mat.abs(); double madStd = OpenCVTools.median(mat2) * 1.4826; mat = mat / madStd; def matBinary = mat.gt(3.0). // Switch to ImageJ for display; def impOrig = img as ImagePlus; impOrig.show(); def imp = mat as ImagePlus; imp.show(). // Create a ROI from the binary image, instead of showing it; def impBinary = matBinary as ImagePlus; impOrig.setRoi(impBinary as Roi); }; ```",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/723:1823,down,downsample,1823,https://qupath.github.io,https://github.com/qupath/qupath/pull/723,2,['down'],['downsample']
Availability,2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943af9000-7f7943afa000 r--p 00002000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afa000-7f7943afb000 rw-p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afb000-7f7943aff000 ---p 00000000 00:00 0 ; 7f7943aff000-7f7943bfc000 rw-p 00000000 00:00 0 ; 7f7943bfc000-7f7943c00000 ---p 00000000 00:00 0 ; 7f7943c00000-7f7943cfd000 rw-p 00000000 00:00 0 ; 7f7943cfd000-7f7943d01000 ---p 00000000 00:00 0 ; 7f7943d01000-7f7943dfe000 rw-p 00000000 00:00 0 ; 7f7943dfe000-7f7943dff000 r-xp 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943dff000-7f7943ffe000 ---p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943ffe000-7f7943fff000 r--p 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943fff000-7f7944000000 rw-p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7944000000-7f7944021000 rw-p 00000000 00:00 0 ; 7f7944021000-7f7948000000 ---p 00000000 00:00 0 ; 7f7948000000-7f7948021000 rw-p 00000000 00:00 0 ; 7f7948021000-7f794c000000 ---p 00000000 00:00 0 ; 7f794c000000-7f794d3e7000 rw-p 00000000 00:00 0 ; 7f794d3e7000-7f7950000000 ---p 00000000 00:00 0 ; 7f7950000000-7f7950022000 rw-p 00000000 00:00 0 ; 7f7950022000-7f7954000000 ---p 00000000 00:00 0 ; 7f7954000000-7f7954021000 rw-p 00000000 00:00 0 ; 7f7954021000-7f7958000000 ---p 00000000 00:00 0 ; 7f7958023000-7f7958024000 ---p 00000000 00:00 0 ; 7f7958024000-7f7958125000 rw-p 00000000 00:00 0 ; 7f7958125000-7f7958126000 ---p 00000000 00:00 0 ; 7f7958126000-7f7958227000 rw-p 00000000 00:00 0 ; 7f7958227000-7f7958228000 ---p 00000000 00:00 0 ; 7f7958228000-7f7958a28000 rw-p 00000000 00:00 0 ; 7f7958a28000-7f7958a34000 r-xp 00000000 fd:00 68762842 /usr/lib64/gio/modules/libdconfsettings.so; 7f7958a34000-7f7958c33000 ---p 0000c000 ,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:20083,down,downloads,20083,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,"3.0 | v0.4.0-SNAPSHOT |; | ------------- | ------------- |; | 593.9 s | 60.1 s |. Results identical as far as I can tell. So... quite a substantial difference :). Cell detection took close to 30s, with 326 498 cells detected,. ```groovy; def checkpoints = [:]. setImageType('BRIGHTFIELD_H_E'); setColorDeconvolutionStains('{""Name"" : ""H&E default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049"", ""Stain 2"" : ""Eosin"", ""Values 2"" : ""0.2159 0.8012 0.5581"", ""Background"" : "" 255 255 255""}'). clearAllObjects(). checkpoints << ['Tissue detection': System.currentTimeMillis()]. createAnnotationsFromPixelClassifier(""Tissue detection"", 10000.0, 0.0, ""INCLUDE_IGNORED""). checkpoints << ['Cell detection': System.currentTimeMillis()]. selectAnnotations(); runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 1.0, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}'). for (classifier in ['Some probability', 'Some classification']) {. // Create annotation measurements; checkpoints << [""Annotation measurements for $classifier"": System.currentTimeMillis()]; selectAnnotations(); addPixelClassifierMeasurements(classifier, classifier); ; // Create cell measurements; checkpoints << [""Cell measurements for $classifier"": System.currentTimeMillis()]; selectCells(); addPixelClassifierMeasurements(classifier, classifier); }; checkpoints << [""Done"": System.currentTimeMillis()]; resetSelection(); println 'Done!'. def entries = checkpoints.entrySet() as List; println ""Total time: \t${entries[-1].value - entries[0].value} ms""; for (int i = 0; i < entries.size()-1; i++) {; println "" ${entries[i].key} \t${entries[i+1].value - entries[i].value}""; }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1076#issuecomment-1279692584:1610,checkpoint,checkpoints,1610,https://qupath.github.io,https://github.com/qupath/qupath/pull/1076#issuecomment-1279692584,4,['checkpoint'],['checkpoints']
Availability,"3.run(DefaultScriptEditor.java:1534); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); Caused by Cannot invoke ""java.awt.image.BufferedImage.getSampleModel()"" because ""img"" is null at qupath.imagej.tools.IJTools.convertToUncalibratedImagePlus(IJTools.java:791); at qupath.imagej.tools.IJTools.convertToImagePlus(IJTools.java:864); at qupath.imagej.tools.IJTools.convertToImagePlus(IJTools.java:902); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:216); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); ```; 6. Error repeats per tile. **Expected behavior**; To recognise bounds or the image in ""create full image annotation"" command, excluding what the error is calling ""null"" regions. **Screenshots**; ![image](https://github.com/qupath/qupath/assets/154437026/e0daa716-19b8-47f9-b337-aa02cb1e44e9). ![image](https://github.com/qupath/qupath/assets/154437026/990ad117-5649-4e15-b376-8bce56d722bb). **Desktop (please complete the following information):**; - OS: Windows 11; - QuPath Version: 0.5.0. **Additional context**; Same issue was present in previous version (0.4.4)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1443:4045,Error,Error,4045,https://qupath.github.io,https://github.com/qupath/qupath/issues/1443,2,"['Error', 'error']","['Error', 'error']"
Availability,4/libjnijavacpp.so; 7f79413fe000-7f79413ff000 r--p 0000c000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79413ff000-7f7941400000 rw-p 0000d000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f7941400000-7f7941c00000 rw-p 00000000 00:00 0 ; 7f7941d69000-7f7941e0e000 r--p 00000000 fd:03 721040939 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans-Bold.ttf; 7f7941e0e000-7f7941e12000 ---p 00000000 00:00 0 ; 7f7941e12000-7f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:15784,down,downloads,15784,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,"4GB is fairly low, I had trouble running much with even 8GB on an older laptop, but if you can replicate and post more details on the error (a screenshot?) maybe Peter can help you.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/55#issuecomment-285858735:134,error,error,134,https://qupath.github.io,https://github.com/qupath/qupath/issues/55#issuecomment-285858735,1,['error'],['error']
Availability,"55, 44740.63],; [83358.68, 44641.23],; [83706.59, 44392.71],; [83905.4, 43945.4],; [83855.7, 43050.76],; [83358.68, 41609.4],; [82265.23, 39919.53],; [80426.26, 38130.26],; [77891.45, 36589.49],; [74809.92, 35545.75],; [71529.59, 35098.43],; [69094.19, 35396.64],; [67454.02, 36191.88],; [66509.68, 37384.73],; [66332.49, 38226.36]; ]; ]; ]; },; ""properties"": {; ""objectType"": ""annotation"",; ""measurements"": {; ""Area µm^2"": 3.5567575437333584E7,; ""Length µm"": 62782.89619349399,; ""Solidity"": 0.5638625874807928,; ""Max diameter µm"": 12192.853113808404,; ""Min diameter µm"": 7673.144125811996; }; }; }; ```. The following script creates a mask the 'QuPath' way:; ```groovy; def roi = getSelectedROI(); def mask = BufferedImageTools.createROIMask(roi, 10); new ij.ImagePlus(""Mask"", mask).show(); ```. You can generate an 'ImageJ' mask using _Extensions → ImageJ → Send region to ImageJ_ and then _Edit > Selection > Create Mask_. ### Expected behavior; When sending a QuPath ROI to ImageJ, any masks generated in either application should be identical - or at least very similar. This might be achieved by converting complicated `PolygonROI` instances into `GeometryROIs`. ### Screenshots; #### In QuPath; <img width=""903"" alt=""QuPath mask"" src=""https://github.com/user-attachments/assets/5ebd2fc7-12ef-4cec-8928-115fece9fe4e"">. #### In ImageJ; <img width=""903"" alt=""ImageJ mask"" src=""https://github.com/user-attachments/assets/0af83a44-d1d0-4cc9-b706-0d337eec2769"">. ### Desktop (please complete the following information):; - OS: All; - QuPath Version: 0.5.1 (presumably earlier versions too). ### Additional context; ImageJ's choice of winding rule may well be more sensible - but it is not something we should change in QuPath too quickly. This clearly *could* be a serious problem for some workflows, but I struggle to think of a time when it is likely to have been a problem in reality. It is only likely to impact `PolygonROIs` with self-intersections. While these can be drawn in the viewer, inte",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1674:6805,mask,masks,6805,https://qupath.github.io,https://github.com/qupath/qupath/issues/1674,1,['mask'],['masks']
Availability,"6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191); at java.lang.Thread.run(Thread.java:745); WARN: Error opening C:\Users\xxxx\Documents\data\2016_03_15__4457.czi with ImageJ: Could not open C:\Users\xxxx\Documents\data\2016_03_15__4457.czi with ImageJ; WARN: QuPath Bio-Formats extension is in beta! Be watchful for bugs...; INFO: ZeissCZIReader initializing C:\Users\xxxx\Documents\data\2016_03_15__4457.czi; INFO: Returning server: Bio-Formats for C:\Users\xxxx\Documents\data\2016_03_15__4457.czi; INFO: Estimating H-DAB staining; INFO: Image data set to ImageData: Brightfield (H-DAB), 2016_03_15__4457; INFO: ZeissCZIReader initializing C:\Users\xxxx\Documents\data\2016_03_15__4457.czi; INFO: ZeissCZIReader initializing C:\Users\xxxx\Documents\data\2016_03_15__4457.czi; INFO: ZeissCZIReader initializing C:\Users\xxxx\Documents\data\2016_03_15__4457.czi; INFO: ZeissCZIReader initializing C:\Users\xxxx\Documents\data\2016_03_15__4457.czi; INFO: ZeissCZIReader initializing C:\Users\xxxx\Documents\data\2016_03_15__4457.czi; INFO: ZeissCZIReader initializing C:\Users\xxxx\Documents\data\2016_03_15__4457.czi; IN",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/35:4889,Error,Error,4889,https://qupath.github.io,https://github.com/qupath/qupath/issues/35,1,['Error'],['Error']
Availability,"67""},{""channelName"":""Tm(169)_169Tmp-CollagenI""},{""channelName"":""Er(170)_170Er-CD3""},{""channelName"":""Yb(171)_171Yb-HistoneH3""},{""channelName"":""Yb(173)_173Yb-CD45RO""},{""channelName"":""Yb(174)_174Yb-HLA-DR""},{""channelName"":""Lu(175)_175Lu-Beta2M""},{""channelName"":""Yb(176)_176Yb-Nak-ATPase""},{""channelName"":""Ir(193)_193Ir-NA2""}],""op"":{""type"":""op.core.split-merge"",""ops"":[{""type"":""op.filters.multiscale"",""features"":[""GAUSSIAN"",""LAPLACIAN"",""WEIGHTED_STD_DEV"",""GRADIENT_MAGNITUDE"",""STRUCTURE_TENSOR_EIGENVALUE_MAX"",""STRUCTURE_TENSOR_EIGENVALUE_MIN"",""STRUCTURE_TENSOR_COHERENCE"",""HESSIAN_DETERMINANT"",""HESSIAN_EIGENVALUE_MAX"",""HESSIAN_EIGENVALUE_MIN""],""sigmaX"":4.0,""sigmaY"":4.0},{""type"":""op.filters.multiscale"",""features"":[""GAUSSIAN"",""LAPLACIAN"",""WEIGHTED_STD_DEV"",""GRADIENT_MAGNITUDE"",""STRUCTURE_TENSOR_EIGENVALUE_MAX"",""STRUCTURE_TENSOR_EIGENVALUE_MIN"",""STRUCTURE_TENSOR_COHERENCE"",""HESSIAN_DETERMINANT"",""HESSIAN_EIGENVALUE_MAX"",""HESSIAN_EIGENVALUE_MIN""],""sigmaX"":8.0,""sigmaY"":8.0}]}}: x=0, y=0, w=800, h=848, z=0, t=0, downsample=4; java.io.IOException: java.util.concurrent.ExecutionException: java.lang.RuntimeException: OpenCV(4.5.3) D:\a\javacpp-presets\javacpp-presets\opencv\cppbuild\windows-x86_64\opencv-4.5.3\modules\core\src\channels.cpp:141: error: (-215:Assertion failed) i1 >= 0 && j < ndsts && dst[j].depth() == depth in function 'cv::mixChannels'. at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:226); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:287); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:60); at qupath.process.gui.commands.ml.PixelClassifierTraining$TileFeatures.ensureFeaturesCalculated(PixelClassifierTraining.java:440); at qupath.process.gui.commands.ml.PixelClassifierTraining$TileFeatures.<init>(PixelClassifierTraining.java:429); at qupath.process.gui.commands.ml.PixelClassifierTraining.getTileFeatu",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947:4076,down,downsample,4076,https://qupath.github.io,https://github.com/qupath/qupath/issues/947,1,['down'],['downsample']
Availability,71555)[0x7f7940f5b555]; /lib64/libpthread.so.0(+0x620b)[0x7f822813720b]; /lib64/libstdc++.so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7f7866536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f82290579c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f822905c59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f822905bb8b]; /lib64/libdl.so.2(+0xfab)[0x7f8228e44fab]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/libdl.so.2(+0x15ad)[0x7f8228e455ad]; /lib64/libdl.so.2(dlopen+0x31)[0x7f8228e45041]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57924)[0x7f8227786924]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57a5a)[0x7f8227786a5a]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(JVM_LoadLibrary+0xbb)[0x7f822745bd6b]; /scratch3/downloads/QuPath/lib/runtime/lib/libjava.so(Java_jdk_internal_loader_NativeLibraries_load+0x17f)[0x7f822544627f]; [0x7f820e860bbb]; ======= Memory map: ========; 414cb000-414cd000 r-xs 00000000 00:04 20496117 /memfd:/.glXXXXXX (deleted); 41d6e000-41e1d000 rw-p 00000000 00:00 0 ; 80000000-80020000 rw-p 00000000 00:00 0 ; 80020000-80040000 rw-p 00000000 00:00 0 ; 80040000-800c0000 rw-p 00000000 00:00 0 ; 800c0000-80140000 rw-p 00000000 00:00 0 ; 80140000-801c0000 rw-p 00000000 00:00 0 ; 801c0000-80200000 rw-p 00000000 00:00 0 ; 80200000-80240000 rw-p 00000000 00:00 0 ; 80240000-80280000 rw-p 00000000 00:00 0 ; 80280000-80440000 rw-p 00000000 00:00 0 ; 80440000-80460000 rw-p 00000000 00:00 0 ; 80460000-80480000 ---p 00000000 00:00 0 ; 80480000-805d0000 rw-p 00000000 00:00 0 ; 805d0000-c0000000 ---p 00000000 00:00 0 ; 55d91efa2000-55d91f0b0000 r-xp 00000000 fd:02 35868047 /scratch3/downloads/QuP,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:3174,down,downloads,3174,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16615,down,downloads,16615,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f7943,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16732,down,downloads,16732,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec0,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16849,down,downloads,16849,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec000 r--p 00000000 fd:03 721040943 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans.ttf; 7f79434ec000-7f79434f0000 r-xp 0,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16966,down,downloads,16966,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,"7c4504be. For now, I've been reducing the number of channels passed, which gives me a training accuracy of ~88%. But it would be great to train on all available data, and see what the variable importance is of each feature and channel. **To Reproduce**; Steps to reproduce the behavior:; 1. Create a project with ~143 IMC images; 2. Annotate structures within ~38 images with 5 different classifications of annotations; 3. Open a non-annotated image; 4. Attempt to train a pixel classifier using all channels, scales, and features, loading training from other annotated images in the project.; 5. Click ""Live Preview"", note the error at the end of the post. **Expected behavior**; A pixel classifier should be trained, and a preview should be applied to the currently loaded image. **Desktop (please complete the following information):**; - OS: Windows 10, 32-thread processor, 127/128 Gb RAM allocated for QuPath, ~500 Gb SSD storage for tile cache; - QuPath Version 0.3.2. **Additional context**; Error log:; ```; 12:10:44.040 [JavaFX Application Thread] [INFO ] q.p.g.c.ml.PixelClassifierPane - Creating training data from 38 images; 12:10:44.953 [JavaFX Application Thread] [ERROR] q.p.g.c.ml.PixelClassifierTraining - Error requesting features for ImageOp server: ImageData: Other, xxxx___ROI8_ROI_008.ome.tiff - ROI8_ROI_008.ome {""colorTransforms"":[{""channelName"":""Pr(141)_141-SMA""},{""channelName"":""Nd(142)_142Nd-CD19""},{""channelName"":""Nd(143)_143Nd-Vimentin""},{""channelName"":""Nd(144)_144Nd-cd14""},{""channelName"":""Nd(146)_146NdCD16""},{""channelName"":""Nd(148)_148-Pan-Ker""},{""channelName"":""Sm(149)_149Sm-CD11b""},{""channelName"":""Sm(152)_152Sm-CD45""},{""channelName"":""Sm(154)_154Sm-CD11c""},{""channelName"":""Gd(155)_155Gd-FoxP3""},{""channelName"":""Gd(156)_156Gd-CD4""},{""channelName"":""Gd(158)_158Gd-E_Cadherin""},{""channelName"":""Tb(159)_159Tb-CD68""},{""channelName"":""Gd(160)_160Gd-Vista""},{""channelName"":""Dy(161)_161Dy-CD20""},{""channelName"":""Dy(162)_162Dy-CD8a""},{""channelName"":""Er(166)_166Er-CD45RA""},{""ch",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947:1994,Error,Error,1994,https://qupath.github.io,https://github.com/qupath/qupath/issues/947,1,['Error'],['Error']
Availability,"83.46, 42653.14],; [71239.44, 43151.51],; [74809.92, 43746.59],; [77493.84, 44243.61],; [79879.53, 44591.52],; [81619.1, 44740.63],; [82712.55, 44740.63],; [83358.68, 44641.23],; [83706.59, 44392.71],; [83905.4, 43945.4],; [83855.7, 43050.76],; [83358.68, 41609.4],; [82265.23, 39919.53],; [80426.26, 38130.26],; [77891.45, 36589.49],; [74809.92, 35545.75],; [71529.59, 35098.43],; [69094.19, 35396.64],; [67454.02, 36191.88],; [66509.68, 37384.73],; [66332.49, 38226.36]; ]; ]; ]; },; ""properties"": {; ""objectType"": ""annotation"",; ""measurements"": {; ""Area µm^2"": 3.5567575437333584E7,; ""Length µm"": 62782.89619349399,; ""Solidity"": 0.5638625874807928,; ""Max diameter µm"": 12192.853113808404,; ""Min diameter µm"": 7673.144125811996; }; }; }; ```. The following script creates a mask the 'QuPath' way:; ```groovy; def roi = getSelectedROI(); def mask = BufferedImageTools.createROIMask(roi, 10); new ij.ImagePlus(""Mask"", mask).show(); ```. You can generate an 'ImageJ' mask using _Extensions → ImageJ → Send region to ImageJ_ and then _Edit > Selection > Create Mask_. ### Expected behavior; When sending a QuPath ROI to ImageJ, any masks generated in either application should be identical - or at least very similar. This might be achieved by converting complicated `PolygonROI` instances into `GeometryROIs`. ### Screenshots; #### In QuPath; <img width=""903"" alt=""QuPath mask"" src=""https://github.com/user-attachments/assets/5ebd2fc7-12ef-4cec-8928-115fece9fe4e"">. #### In ImageJ; <img width=""903"" alt=""ImageJ mask"" src=""https://github.com/user-attachments/assets/0af83a44-d1d0-4cc9-b706-0d337eec2769"">. ### Desktop (please complete the following information):; - OS: All; - QuPath Version: 0.5.1 (presumably earlier versions too). ### Additional context; ImageJ's choice of winding rule may well be more sensible - but it is not something we should change in QuPath too quickly. This clearly *could* be a serious problem for some workflows, but I struggle to think of a time when it is likely to have",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1674:6641,mask,mask,6641,https://qupath.github.io,https://github.com/qupath/qupath/issues/1674,1,['mask'],['mask']
Availability,"85); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2618); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source). 2. how precisely did the abnormal shutdown occur?. I had a VPN connection with my pc in the office and then somebody else logged in to the machine and I got logged out. The VPN connection is via a .rdp file where I can just use my home screen/pc as a window to my office pc (is this clear?). 3. can you give precise steps to replicate the issue? -> Yes I can for this one but it happened to me before and I can not replicate that anymore. . In this particular case, have VPN connection with a PC. ; Open the software; Open a project; Work on a picture in the project; Let somebody else login without login you out; Wait until this person is finished working; login yourself again; Try to continue working -> not possible, software will crash; Close software via the Task Manager; Open software and open same project; Particular picture you were working on is now no longer available. . 4. do the other images in the project work?; Yes the other images work. . Thanks! For now your quick fix has saved me a lot of time :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/512#issuecomment-640534382:5980,avail,available,5980,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382,1,['avail'],['available']
Availability,"9, 38226.36],; [67901.34, 39472.21],; [69193.59, 40714.77],; [70137.93, 41758.51],; [70883.46, 42653.14],; [71239.44, 43151.51],; [74809.92, 43746.59],; [77493.84, 44243.61],; [79879.53, 44591.52],; [81619.1, 44740.63],; [82712.55, 44740.63],; [83358.68, 44641.23],; [83706.59, 44392.71],; [83905.4, 43945.4],; [83855.7, 43050.76],; [83358.68, 41609.4],; [82265.23, 39919.53],; [80426.26, 38130.26],; [77891.45, 36589.49],; [74809.92, 35545.75],; [71529.59, 35098.43],; [69094.19, 35396.64],; [67454.02, 36191.88],; [66509.68, 37384.73],; [66332.49, 38226.36]; ]; ]; ]; },; ""properties"": {; ""objectType"": ""annotation"",; ""measurements"": {; ""Area µm^2"": 3.5567575437333584E7,; ""Length µm"": 62782.89619349399,; ""Solidity"": 0.5638625874807928,; ""Max diameter µm"": 12192.853113808404,; ""Min diameter µm"": 7673.144125811996; }; }; }; ```. The following script creates a mask the 'QuPath' way:; ```groovy; def roi = getSelectedROI(); def mask = BufferedImageTools.createROIMask(roi, 10); new ij.ImagePlus(""Mask"", mask).show(); ```. You can generate an 'ImageJ' mask using _Extensions → ImageJ → Send region to ImageJ_ and then _Edit > Selection > Create Mask_. ### Expected behavior; When sending a QuPath ROI to ImageJ, any masks generated in either application should be identical - or at least very similar. This might be achieved by converting complicated `PolygonROI` instances into `GeometryROIs`. ### Screenshots; #### In QuPath; <img width=""903"" alt=""QuPath mask"" src=""https://github.com/user-attachments/assets/5ebd2fc7-12ef-4cec-8928-115fece9fe4e"">. #### In ImageJ; <img width=""903"" alt=""ImageJ mask"" src=""https://github.com/user-attachments/assets/0af83a44-d1d0-4cc9-b706-0d337eec2769"">. ### Desktop (please complete the following information):; - OS: All; - QuPath Version: 0.5.1 (presumably earlier versions too). ### Additional context; ImageJ's choice of winding rule may well be more sensible - but it is not something we should change in QuPath too quickly. This clearly *could* be a seriou",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1674:6586,Mask,Mask,6586,https://qupath.github.io,https://github.com/qupath/qupath/issues/1674,2,"['Mask', 'mask']","['Mask', 'mask']"
Availability,://qupath.github.io for a new release that might already have fixed the issue; * [x] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; `QuPath convert-ome` returns exit code 0 despite failure. **To Reproduce**; Steps to reproduce the behavior:; ```; scale=2; tile=1024; comp=ZLIB; input=broken_image.tif; output=broke_omage.ome.tif; QuPath convert-ome $input $output \; --pyramid-scale=$scale \; --tile-size=$tile \; --compression=$comp \; --parallelize; ```; Output (truncated); ```; 20:39:42.582 [main] [INFO ] q.l.i.s.b.BioFormatsServerOptions - Setting max Bio-Formats readers to 2; 20:39:43.272 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.274 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.275 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; ...; 20:39:43.604 [main] [ERROR] q.l.i.writers.ome.ConvertCommand - Unable to open file:broken_image.tif; java.io.IOException: Unable to open file:broken_image.tif; at qupath.lib.images.servers.ImageServers.buildServer(ImageServers.java:306); at qupath.lib.images.writers.ome.ConvertCommand.run(ConvertCommand.java:147); at picocli.CommandLine.executeUserObject(CommandLine.java:2026); at picocli.CommandLine.access$1500(CommandLine.java:148); at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2461); at picocli.CommandLine$RunLast.handle(CommandLine.java:2453); at picocli.CommandLine$RunLast.handle(CommandLine.java:2415); at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2273); at picocli.CommandLine$RunLast.execute(CommandLine.java:2417); at picocli.CommandLine.execute(CommandLine.java:2170); at qupath.QuPath.main(QuPath.java:202); Suppressed: java.io.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1451:1534,ERROR,ERROR,1534,https://qupath.github.io,https://github.com/qupath/qupath/issues/1451,1,['ERROR'],['ERROR']
Availability,:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec000 r--p 00000000 fd:03 721040943 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans.ttf; 7f79434ec000-7f79434f0000 r-xp 00000000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79434f0000-7f79436ef000 ---p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436ef000-7f79436f0000 r--p 00003000 00:2f 2306019409 /home/g,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:17245,down,downloads,17245,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f5000-7f79438f6000 r--p 00004000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f6000-7f79438f7000 rw-p 00005000 00:2f 2306019407 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_freetype.so; 7f79438f7000-7f79438fa000 r-xp 00000000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f79438fa000-7f7943af9000 ---p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943af9000-7f7943afa000 r--p 00002000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afa000-7f7943afb000 rw-p 00003000 00:2f 2306019406 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font.so; 7f7943afb000-7f7943aff000 ---p 00000000 00:00 0 ; 7f7943aff000-7f7943bfc000 rw-p 00000000 00:00 0 ; 7f7943bfc000-7f7943c00000 ---p 00000000 00:00 0 ; 7f7943c00000-7f7943cfd000 rw-p 00000000 00:00 0 ; 7f7943cfd000-7f7943d01000 ---p 00000000 00:00 0 ; 7f7943d01000-7f7943dfe000 rw-p 00000000 00:00 0 ; 7f7943dfe000-7f7943dff000 r-xp 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943dff000-7f7943ffe000 ---p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943ffe000-7f7943fff000 r--p 00000000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7943fff000-7f7944000000 rw-p 00001000 fd:02 10819064523 /scratch3/downloads/QuPath/lib/runtime/lib/libprefs.so; 7f7944000000-7f7944021000 rw-p 00000000 00:00 0 ; 7f7944021000-7f7948000000 ---p 00000000 00:00 0 ; 7f7948000000-7f7948021000 rw-p 00000000 00:00 0 ; 7f7948021000-7f794c000000 ---p 00000000 00:00 0 ; 7f794c000000-7f794d3e7000 rw-p 00000000 00:00 0 ; 7f794d3e7000-7f7950000000 ---p 00000000 00:00 0 ; 7f7950000000-7f7950022000 rw-p 00000000 00:00 0 ; 7f7950022000-7f7954000000 ---p 00000000 00:00 0 ; 7f7954000000-7f7954021000 rw-p 00000000 00:00 0,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:19741,down,downloads,19741,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; ERROR: java.lang.OutOfMemoryError: Java heap space; WARN: Fallback to requesting thumbnail directly...; ERROR: QuPath exception; WARN: Tile request exception; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); ,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:9149,Down,Downloads,9149,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['Down'],['Downloads']
Availability,":\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 5 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ; ...........Written tile 6 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ; Y =3000.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 7 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 8 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; X =",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:10123,error,error,10123,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,":\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 8 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ; ...........Written tile 9 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ; Y =4500.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 10 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 11 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; X",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:11690,error,error,11690,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,:\Users\xxxx\Documents\data\2016_03_15__4457.czi; INFO: ZeissCZIReader initializing C:\Users\xxxx\Documents\data\2016_03_15__4457.czi; INFO: ZeissCZIReader initializing C:\Users\xxxx\Documents\data\2016_03_15__4457.czi; INFO: ZeissCZIReader initializing C:\Users\xxxx\Documents\data\2016_03_15__4457.czi; INFO: ZeissCZIReader initializing C:\Users\xxxx\Documents\data\2016_03_15__4457.czi; INFO: ZeissCZIReader initializing C:\Users\xxxx\Documents\data\2016_03_15__4457.czi; INFO: ZeissCZIReader initializing C:\Users\xxxx\Documents\data\2016_03_15__4457.czi; INFO: ZeissCZIReader initializing C:\Users\xxxx\Documents\data\2016_03_15__4457.czi; INFO: ZeissCZIReader initializing C:\Users\xxxx\Documents\data\2016_03_15__4457.czi; INFO: ZeissCZIReader initializing C:\Users\xxxx\Documents\data\2016_03_15__4457.czi; INFO: ZeissCZIReader initializing C:\Users\xxxx\Documents\data\2016_03_15__4457.czi; INFO: ZeissCZIReader initializing C:\Users\xxxx\Documents\data\2016_03_15__4457.czi; ERROR: QuPath exception; at qupath.lib.images.servers.OpenslideImageServer.<init>(OpenslideImageServer.java:91); at qupath.lib.images.servers.OpenslideServerBuilder.buildServer(OpenslideServerBuilder.java:47); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2227); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2151); at qupath.lib.gui.panels.PathImageDetailsPanel.tryToOpenSelectedEntry(PathImageDetailsPanel.java:293); at qupath.lib.gui.panels.PathImageDetailsPanel.lambda$2(PathImageDetailsPanel.java:261); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); a,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/35:6759,ERROR,ERROR,6759,https://qupath.github.io,https://github.com/qupath/qupath/issues/35,1,['ERROR'],['ERROR']
Availability,"; Changes include:; * Many improvements to the pixel classifier; * New 'structure tensor' features; * Currently-training classifier can still operate when images are changed; * Added live feature overlays to view classifier features in context; * Added 'Advanced' features, including optional PCA and selecting a 'Boundary' classification; * Ability to save & reload classifiers (format may change!); * New 'Create threshold classifier' command (replaces old simple threshold command); * Improved 'Dark' theme (available in the preferences); * Scripting Improvements; * Changed syntax highlighting - for better behavior with the 'Dark' theme; * Core classes can now be auto-imported (use Ctrl-Shift to cycle through code-completions); * More helpful error messages for common errors; * New setPixelSizeMicrons(double, double) scripting method; * New replaceClassification(String, String) scripting method; * Warning when applying 'Run for project' to an image currently open; * Major ROI revisions; * Area ROIs 'snap' to pixel coordinates by default (can be changed in the preferences); * New GeometryROI replaces AWTAreaROI; * 'Distance to annotations 2D' now supports line and point ROIs; * Increased use of Java Topology Suite for Geometry calculations; * Removed older interfaces (PathShape, PathPoints, PathArea, PathLine and TranslatableROI), moved more methods into ROI directly; * Zoom in further for more accurate pixel-wise annotations; * Revised cell detection & other detection commands that use tiling; * Bigger tile overlap & improved contour smoothing in cell detection (note: this will impact results!); * Wand tool improvements; * Change wand color modes in Edit -> Preferences; * Press Ctrl (Cmd) while using Wand to select identical pixel values (useful with classification overlays); * Renamed & improved 'Create simple thresholder', support image smoothing",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/370:635,avail,available,635,https://qupath.github.io,https://github.com/qupath/qupath/pull/370,3,"['avail', 'error']","['available', 'error', 'errors']"
Availability,"; def path = QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""export""); QPEx.mkdirs(path). // Get the imageData & server; def imageData = QPEx.getCurrentImageData(); def server = imageData.getServer(); setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath()); ----------------------------------------------------------------------; WARN: Invalid requested downsample 1.0 - will use 1.057 instead; INFO: 1 region detected (processing time: ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420287639:1460,avail,available,1460,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420287639,1,['avail'],['available']
Availability,"; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 ..; [jalal@goku QuPath]$ cd bin/; [jalal@goku bin]$ JAVA_TOOL_OPTIONS=-Dorg.bytedeco.javacpp.nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f7940f5a192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7940f5a5e3]; /lib64/libstdc++.so.6(+0x71555)[0x7f7940f5b555]; /lib64/libpthread.so.0(+0x620b)[0x7f822813720b]; /lib64/libstdc++.so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7f7866536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f82290579c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f822",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:1692,error,error,1692,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['error'],['error']
Availability,"; }. String imgpath = server.getPath(); print(imgpath); int dotNich = imgpath.lastIndexOf("".""); int slashNich = imgpath.lastIndexOf(""\\""). // make output folder; String dirOutput = (imgpath[0..dotNich-1] + ""_tif""); print(""dirOutput="" + dirOutput); def subdir = new File(dirOutput); subdir.mkdir(); // clear the folder; subdir.eachFileMatch(~/.*.*/) { file ->; file.delete(); }; ```. The ourput was:. ```; INFO: Height:6338; INFO: Width:4737; INFO: ZSlices:1; INFO: nChannels:3; INFO: nTimepoints:1; INFO: TimeUnit:SECONDS; INFO: Magnification:20; INFO: HasPixelSizeMicrons:true; INFO: PixelHeightMicrons:0.5; INFO: PixelWidthMicrons:0.5; INFO: PixelZSpacingMicrons:NaN; INFO: file:/D:/QMDownload/5/%5Bfailed_handOK%5DLeica_scn/Leica-Fluorescence-1.scn#2; INFO: dirOutput=file:/D:/QMDownload/5/%5Bfailed_handOK%5DLeica_scn/Leica-Fluorescence-1_tif. ERROR: Error at line 99: C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\%5Bfailed_handOK%5DLeica_scn\Leica-Fluorescence-1_tif. ERROR: Script error; at org.codehaus.groovy.runtime.ResourceGroovyMethods.checkDir(ResourceGroovyMethods.java:1160); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1534); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1565); at org.codehaus.groovy.runtime.dgm$989.invoke(Unknown Source); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:244); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:135); at Script2.run(Script2.groovy:100); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.cod",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472886695:2941,ERROR,ERROR,2941,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472886695,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,========; /lib64/libc.so.6(+0x81329)[0x7f087c503329]; /lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7effa4e62192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7effa4e625e3]; /lib64/libstdc++.so.6(+0x71555)[0x7effa4e63555]; /lib64/libpthread.so.0(+0x620b)[0x7f087be4520b]; /lib64/libstdc++.so.6(+0x715a1)[0x7effa4e635a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7effa4e635e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7effa4e6043c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7efeb6536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f087cd659c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f087cd6a59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f087cd657d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f087cd69b8b]; /lib64/libdl.so.2(+0xfab)[0x7f087cb52fab]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f087cd657d4]; /lib64/libdl.so.2(+0x15ad)[0x7f087cb535ad]; /lib64/libdl.so.2(dlopen+0x31)[0x7f087cb53041]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57924)[0x7f087b494924]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57a5a)[0x7f087b494a5a]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(JVM_LoadLibrary+0xbb)[0x7f087b169d6b]; /scratch3/downloads/QuPath/lib/runtime/lib/libjava.so(Java_jdk_internal_loader_NativeLibraries_load+0x17f)[0x7f087915427f]; [0x7f0862860bbb]; ======= Memory map: ========; 416a7000-416a9000 r-xs 00000000 00:04 19971786 /memfd:/.glXXXXXX (deleted); 419dd000-41a8c000 rw-p 00000000 00:00 0 . ```. full error trace here https://pastebin.com/raw/qZy5Vb5d . ```; $ uname -a; Linux goku.bu.edu 3.10.0-1160.59.1.el7.x86_64 #1 SMP Wed Feb 23 16:47:03 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux. $ lsb_release -a; LSB Version:	:core-4.1-amd64:core-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.9.2009 (Core); Release:	7.9.2009; Codename:	Core. ```,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949:2150,down,downloads,2150,https://qupath.github.io,https://github.com/qupath/qupath/issues/949,5,"['down', 'error']","['downloads', 'error']"
Availability,"================================================; [ERROR PART]; def text = new File(xml_file).getText(); def list = new XmlSlurper().parseText(text). [ERROR]; ERROR: Script error; at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.unwrap(ScriptBytecodeAdapter.java:53); at org.codehaus.groovy.runtime.callsite.PogoGetPropertySite.getProperty(PogoGetPropertySite.java:52); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callGroovyObjectGetProperty(AbstractCallSite.java:307); at Script4.run(Script4.groovy:33); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: Error: startup failed:; Script5.groovy: 30: unable to resolve class XmlSlurper ; @ line 30, column 12.; def list = new XmlSlurper().parseText(text); ^. 1 error; ==================================================================. My question is how can I use that class in Windows.. At Mac, It worked fine after I copied 'groovy-xml-2.5.2.jar' into extensions folder. However, the structure of Qupath at windows is quite different from Mac. And I have no idea where to put 'groovy-xml-2.5.2.jar'. Thanks!!!",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/238:1827,ERROR,ERROR,1827,https://qupath.github.io,https://github.com/qupath/qupath/issues/238,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"> (since you're using annotations to train the classifier, how should QuPath distinguish between which annotations are for training and which should be classified...?). I'm not actually, sadly I don't get the chance to work in QuPath much as I mostly work with 3D images. This came about because of this post: https://forum.image.sc/t/using-annotations-imported-into-qupath/95333. It seems the user imported ROIs as annotations instead of detections. Ultimately probably more of a user error based on the current design of the system, but I just do feel it is confusing that everything is given the generic label of ""object"" (both the submenu and the filter) when it only works on detections. Perhaps another submenu within the Object classification menu specifically for Detection classification commands? I know that currently that would mean a single submenu item in the Object classification menu, but it would add clarity to the current state of things, and I would imagine that at least some of these commands will be restricted to detections only well into the future.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1501#issuecomment-2079438553:486,error,error,486,https://qupath.github.io,https://github.com/qupath/qupath/issues/1501#issuecomment-2079438553,1,['error'],['error']
Availability,"> > Can I ask how did you edited cfg file in terminal?; > ; > First, locate `.cfg` file. On a Mac, you’ll need to right-click on QuPath.app and choose Show package contents. The config file is inside the Contents/app directory. Open the terminal, type ` sudo nano pathtoqupath/QuPath-0.2.3.cfg`. Enter password and edit this line at the end: `java-options=-XX:MaxRAMPercentage=50`. In my case I set it to 85 instead of 50 % of available RAM. That's great. It worked! Thanks so much :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/490#issuecomment-1431663502:427,avail,available,427,https://qupath.github.io,https://github.com/qupath/qupath/issues/490#issuecomment-1431663502,1,['avail'],['available']
Availability,"> > Have you tried also building the JavaCpp example project+?; > ; > I tried https://github.com/bytedeco/sample-projects/tree/master/javacpp-android-gradle first but it seems to be a never ending series of issues because of the android stuff, so I gave up. Some other examples didn't support java 14 but this one did work at the end: https://github.com/bytedeco/sample-projects/tree/master/opencv-stitching-jlink; > ; > I just had to set `export JAVA_HOME=/usr/lib/jvm/adoptopenjdk-14-openj9xl-amd64/` before. (Which didn't make a difference for qupath.). Interesting... I found this surprising, but then saw that the OpenCV version is comparatively old: https://github.com/bytedeco/sample-projects/blob/master/opencv-stitching-jlink/pom.xml#L41. That uses `4.0.1-1.5` rather than `4.3.0-1.5.3`. You can find the available versions (there are two in between) via https://search.maven.org/artifact/org.bytedeco/opencv-platform/4.3.0-1.5.3/jar. The next version of OpenCV after that one you find works introduced a dependency on OpenBLAS. I recall this causes me some trouble, mentioned briefly in the build script: https://github.com/qupath/qupath/blob/master/build.gradle#L148. If this is connected, I think the sample should fail for you if you update the version to `4.3.0-1.5.3` (or any in between). QuPath *might* build for your if you downgrade the version in the build script to `4.0.1-1.5`, but this isn't really a solution... JavaCPP is a shared dependency for TensorFlow, and the versions end up rather tied to one another. I suspect other problems may arise if going back more versions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-633364724:814,avail,available,814,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633364724,2,"['avail', 'down']","['available', 'downgrade']"
Availability,"> > When does the `getAssociatedImage(String)` function of `qupath.lib.images.servers.ImageServer` is used? I don't think I was able to test it; > ; > It is used with _View → Show slide label_ - but is really only relevant for some file formats (although useful when relevant).; > ; > It's inspired by the 'associated images' provided by [OpenSlide here](https://openslide.org/api/python/#openslide.OpenSlide.associated_images) - since otherwise QuPath would have had no way to provide access to the label etc. But it doesn't map so easily to images from other readers, including Bio-Formats, which doesn't identify label images as being different. Do you know a way to test it? This *Show slide label* window always indicates ""No label available"" with the images I have. Apart from that, I think this pull request can be merged. The bio-format and omero ice image servers seem to be working with these new changes. I may still have to clean the code a bit but I think having the OMERO extension working properly is more important for now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1287#issuecomment-1706263104:737,avail,available,737,https://qupath.github.io,https://github.com/qupath/qupath/pull/1287#issuecomment-1706263104,1,['avail'],['available']
Availability,"> @oharismendy it sounds like in v0.2 the image is being opened with Bio-Formats. In v0.1.2 OpenSlide would have been used by default (unless you installed the Bio-Formats extension), and this flags specific images as label for a few formats (including .svs).; > ; > You can choose the image reader when importing an image to a project: https://qupath.readthedocs.io/en/latest/docs/tutorials/projects.html#add-images; > ; > Because QuPath relies upon open source image readers that support a wide range of formats, it's difficult/impossible to _know_ in all cases whether an image stored within a file as intended a 'full' image for analysis, label or macro image... particularly since different vendors write images in different ways, and we don't have specifications for the formats. It may be necessary for us to remove the label pop-up in the future, since it will inevitably fail to find a label sometimes sometimes.; > ; > Misassigning a full image as a label is a big problem, since QuPath doesn't support any analysis on labels - therefore we need to err on the side of caution.; > ; > If you can share an example image along with details of how it was written (e.g. software/scanner) then we might be able to add some logic to handle this specific case but otherwise we can only guess what a fix might be. Thanks. It makes perfect sense. I think dropping the pop-up and clarifying this label image is available under master is likely a safer way to go. Unless my issue is very rare.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/643#issuecomment-732318132:1410,avail,available,1410,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-732318132,1,['avail'],['available']
Availability,"> About the rest, am I correct if a recap of what you ask is:; > * Metadata parsing is fragmented between `BioFormatsImageServer` and `OMEReaderWrapper` / `OMETileReader`. This should not happen. Metadata should be requested only once and not lazily. Yes. See https://downloads.openmicroscopy.org/images/Vectra-QPTIFF/perkinelmer/PKI_fields/ and `HnE_3_1x1component_data.tif` for an example where it is a problem. This contains a 32-bit float image, along with an 8-bit thumbnail. If I try to open the thumbnail with this PR it fails, I believe because it is using a mixture of metadata (i.e. assuming that it has enough bytes for 32-bit data, and failing with an `ArrayIndexOutOfBoundsException`. > * One tile reader should support accessing only one `series`. Possibly - it is one option to overcome the issue. Currently, the implementation of `BioFormatsReaderWrapper` in this PR has two `getPixelValues()` methods. One of them sets the series and then resets it back to its original value, the other sets it but doesn't reset it. Without the reset, then the reader has changed into a different state - and the values returned by any call that requests metadata from the reader are subject to giving different results *(example at the end of this post)*. Additionally, both methods are potentially broken in a multithreading context because there is no synchronization done on the reader. . Excessive synchronization could harm performance. Forbidding the series and ID to be changed anywhere inside the class - *and* forbidding the reader from being accessed outside (i.e. not providing a `getReader()` option) - would reduce the need for synchronization, but probably not eliminate it because I am not sure that Bio-Formats guarantees that pixels can be accessed simultaneously from different threads even if the series and ID aren't changed. The alternative is to synchronize everything that uses the reader, and then taking care to design the class in such a way that it's not possible to get a",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547:268,down,downloads,268,https://qupath.github.io,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547,1,['down'],['downloads']
Availability,"> Although if calling either method in a script, the ambiguity and potential for confusion remains.; I had mostly been thinking about scripting. If there is no primary selected object, and getSelectedObject() is used, the script would simply break and provide an informative error message. The user is trying to do something (get a particular object) while providing insufficient information (which object? multiple are selected). I suppose there could be an even worse option where you also encode getASelectedObject() which returns the first, or largest, or some other logic. > keep the primary selected object if it's still selected in the new group, and; > set the primary selected object if there is only one object in the selection group, but not if there is more than one. I was also just thinking about this - what situations lead to there being no primary object, and could those be addressed instead?. Alternatively, specially code getSelectedObject() to allow for an array, check for an array size of 1, and handle that situation specifically if it arises. Still return null in other situations, along with an informative error message (or warning).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/758#issuecomment-869219746:275,error,error,275,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869219746,2,['error'],['error']
Availability,"> And as in @biovoxxel's video (thanks for the resource!), our users sometimes struggle with the ""DPI/PPI"" calculations. If this was a set parameter in preferences (e.g. 300PPI by default), then you could write next to downsample what would be the maximum figure size for that PPI (e.g. downsample 2, 300PPI -> up to 1200cm x 800cm figure).; > ; > The user would then be able to choose an appropriate downsample for their figure that's say, up to 20cm wide at the requested PPI. Side note:; I would fully avoid scaling and adapting to DPI, since this is not very helpful regarding the figure quality. Once you have the SVG you can adapt it to the document size without the need of changing any resolution etc. Boils down to: Less need for thinking and calculating with a better result image!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1272#issuecomment-1604299185:219,down,downsample,219,https://qupath.github.io,https://github.com/qupath/qupath/issues/1272#issuecomment-1604299185,4,['down'],"['down', 'downsample']"
Availability,"> Before deciding, one thing to check is whether or not TensorFlow can work via Rosetta2 on the Intel build, since this would give an alternative. Previously it failed, but it's worth checking again with the latest DeepJavaLibrary. Can confirm this definitely does **not** work... in fact, it causes QuPath to abruptly quit when just trying to download TensorFlow and load the engine.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1406#issuecomment-1782786354:344,down,download,344,https://qupath.github.io,https://github.com/qupath/qupath/issues/1406#issuecomment-1782786354,1,['down'],['download']
Availability,"> But does the Macro image show anything? Or is it there?. Thanks. I can indeed see it under the Image tab under ""Series 1 (label)"" (I did not know about this). But access from the pull down menu and label pop-up viewer is not working, which remains an issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/643#issuecomment-731459267:186,down,down,186,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-731459267,1,['down'],['down']
Availability,"> Can I ask how did you edited cfg file in terminal?. First, locate `.cfg` file. On a Mac, you’ll need to right-click on QuPath.app and choose Show package contents.; The config file is inside the Contents/app directory.; Open the terminal, type ` sudo nano pathtoqupath/QuPath-0.2.3.cfg`. Enter password and edit this line at the end:; `java-options=-XX:MaxRAMPercentage=50`. In my case I set it to 85 instead of 50 % of available RAM.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/490#issuecomment-1430091897:422,avail,available,422,https://qupath.github.io,https://github.com/qupath/qupath/issues/490#issuecomment-1430091897,1,['avail'],['available']
Availability,"> Can you rename .tiff to .ndpi? They are .ndpi via the link, and that's what they should be. OK I didn't understand that, but I still got the error:. ![image](https://github.com/user-attachments/assets/dff4b9c4-f1e4-4a48-8fb3-0a85ef356f6a). Anyway this is not related to this PR, so we can skip that for now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1620#issuecomment-2328940858:143,error,error,143,https://qupath.github.io,https://github.com/qupath/qupath/pull/1620#issuecomment-2328940858,1,['error'],['error']
Availability,"> For the order, should ""Core Extensions"" be first since this will be relevant for all users? Then filters down to those wanting to explore extensions further? I do like the idea of combining the ""Manage Extension"" section into a bar at the top of the ""User Extensions"" section. My logic was that you can't actually *do* anything with core extensions, but I remain undecided there. The rest are all good points, unlikely to be able to address them all today",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1748590254:107,down,down,107,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1748590254,1,['down'],['down']
Availability,"> However, now memory defaults to 50% of the available system memory. I would understand that this works for computers with not much RAM (e.g. 8 GB or 16 GB). But when you have 64 GB RAM or more, will using only 50% of available system memory mean having the other half of the massive RAM essentially unused?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/986#issuecomment-1171673291:45,avail,available,45,https://qupath.github.io,https://github.com/qupath/qupath/issues/986#issuecomment-1171673291,2,['avail'],['available']
Availability,"> I also don't see any javadocs if I call ./gradlew run; it would be nice if they could be available, but it isn't crucial since the normal use will be via jpackage builds. Actually this increases the startup time by a few seconds each time I run QuPath after changing something, which is quite annoying. Should we remove that feature?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1513#issuecomment-2096277248:91,avail,available,91,https://qupath.github.io,https://github.com/qupath/qupath/pull/1513#issuecomment-2096277248,1,['avail'],['available']
Availability,"> I can't replicate the bug on my Mac - if I drag a URL from chrome, the dragboard contains both a URL and a String - but good if it solves the problem somewhere. Yeah I suspect it's a Linux issue, either way I think trying to handle Strings as URLs is about the best we can do, as long as it shows the right kind of error. > *-I've consistently avoided [starred imports] & convinced my IntelliJ to stop doing it automatically - can discuss later if we want to change that policy. I don't pay any heed to imports; they're automatically hidden for me. The only strong argument I've been exposed to on the topic was that having a) a license and b) every imported class/static method right at the top of the file means that every file you open, you need to page down a couple of times before reading any code. If there was a risk of ambiguity I might be more concerned, but I think when there's a collision Java forces you to use a fully qualified name?. Anyways I think the license and imports are auto-hidden for me, so this doesn't really matter",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1338#issuecomment-1731105750:317,error,error,317,https://qupath.github.io,https://github.com/qupath/qupath/pull/1338#issuecomment-1731105750,2,"['down', 'error']","['down', 'error']"
Availability,> I have the same problem with m12. At the beginning I tried to load a SCN file and it worked. After I closed the and opened the m12 version again the message poped out and I cannot run the m12 anymore. UPDATE: After another examination of the debug log I saw that the error message came after QuPath tried to load extensions. I had previously installed the Weka extension which was still in my extentions folder. I removed the weka extention and it opened without problems.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/497#issuecomment-632431978:269,error,error,269,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632431978,1,['error'],['error']
Availability,"> I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under _View &rarr; Show log_ when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the [step by step instructions](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide) right to the end, it should result in a QuPath.exe file that work if you double-click it without any further effort. The other option is to install the latest [QuPath Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension)... but it shouldn't be necessary for standard .svs files.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-410954902:180,error,errors,180,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-410954902,1,['error'],['errors']
Availability,"> I suppose there could be an even worse option where you also encode getASelectedObject() which returns the first, or largest, or some other logic. Hmmm, might need to think about it some more but I think that risks increasing rather than reducing complexity. I'd rather have fewer options with more predictable behavior - in rare cases where something more complex is needed, it's always possible to query all the selected objects and then filter them however you like. But I don't think that should be part of the core API. > I was also just thinking about this - what situations lead to there being no primary object, and could those be addressed instead?. `selectAnnotations()` is a good example. Basically, anything that can select multiple objects without a clear 'main' object. So if you would run another command like `selectObjects(p -> p.getPathClass() == getPathClass('Tumor'))` you'd see the same: possibly multiple objects selected, but no 'main' selection. Or, with my pull request, a 'main' selection plucked more or less randomly - *unless* only one object is available, in which case it's just what you'd expect. > Alternatively, specially code getSelectedObject() to allow for an array, check for an array size of 1, and handle that situation specifically if it arises. Still return null in other situations, along with an informative error message (or warning). Internally there is already a set of selected objects - distinct from the main selected object. However, if there is a main selected object then it should always be included in the set. I think errors/warnings need to be used very sparingly to avoid causing undue alarm. But I'm coming around to the compromise I mentioned above, which I think falls somewhere between my pull request and your original suggestion.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/758#issuecomment-869227006:1077,avail,available,1077,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869227006,3,"['avail', 'error']","['available', 'error', 'errors']"
Availability,"> I think when there's a collision Java forces you to use a fully qualified name. It does, but I think they look ugly and weird in code. I tend to prefer the overview of what the class really uses, rather than 'a class here, a class there, some between 0 and absolutely everything from package X...'. I figure that, even with starred imports, there will be a need to page down anyway.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1338#issuecomment-1731132912:372,down,down,372,https://qupath.github.io,https://github.com/qupath/qupath/pull/1338#issuecomment-1731132912,1,['down'],['down']
Availability,"> Is there any reason you need to build from source, rather than use the pre-built binaries?. I'd like to get stardist working eventually. I get the same error when building it with tensorflow too but I always tried without that first. And when I run `build/dist/QuPath-0.2.0-m12/bin/QuPath-0.2.0-m12` after the failed build I get `Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: jnijavacpp (Not found in java.library.path)` followed by a segfault. The following ticket from just yesterday might be the same issue: https://github.com/bytedeco/javacpp/issues/399 and the latest commit there is about gradle too: https://github.com/bytedeco/javacpp/commit/3189a117080ca63ad93c6427cd367ed7395d5103 These might all be red herrings of course, I have very little experience with java, so I can't tell. . Looking at the stack trace this UnsatisfiedLinkError is coming from the `installWand` method (`Loader.load(opencv_core.class);`), which I guess is expected.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-633285245:154,error,error,154,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633285245,1,['error'],['error']
Availability,"> Is this a feature anyone really wants?. The answer to that is almost always ""yes""; the better question is whether it is worthwhile to implement given the refactoring/maintenance burden it entails. > Is it likely to be more helpful or confusing for new users?. It seems like the sort of thing that would be confusing if done accidentally, so we should try to make that difficult if possible, but as Leo says in imaging software it's common to have multiple images open. > Detaching one viewer (and leaving the rest of the 'viewer grid' intact). Does this mean that you'd have (eg) one button that toggles visible annotations on both images? If so, this seems restrictive, though I don't know if it would be annoyingly so. > Breaking up the UI entirely, so that there is no longer a grid and instead we have separate windows (including for the toolbar and analysis pane, more like ImageJ). It seems to me like at least some UI elements should be broken up across windows. For example I'd want to be able to view/edit the object hierarchy in each image separately (e.g. for training classifiers). If we wanted to emulate the other mode you described, then being able to hide UI elements would be a good start. > Is there a need to have the same image open in multiple viewers? . Probably a natural behaviour, as long as we lock the imageData when a viewer is interacting with it. There's a related issue in here to improve support for QuPath windows in tiling window managers, but I suspect I'm the only person who cares about that right now",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1317#issuecomment-1708675939:168,mainten,maintenance,168,https://qupath.github.io,https://github.com/qupath/qupath/issues/1317#issuecomment-1708675939,1,['mainten'],['maintenance']
Availability,"> Mmmm, I find I have no way to hide the unclassified TMA cores. And sorting my ascending/descending seems to only impact the two that I gave classes to - the rest remain stubbornly as they were (both before and after the classified core) - so I initially didn't think sorting was implemented. Ah yes, I think I misunderstood what my sorting logic was doing; should now be fixed. > Since we aren't dealing with NaNs, I have the feeling that string sorting would make sense here... even if that means 'Unclassified' being sorted as a string. That's intuitive to me, although it does somewhat point to the odd behaviour about unclassified things having a null class, or `PathClass.NULL_CLASS`... > And actually... what do you think about having 'Name' as another potential 'Measurement'... which we could relabel 'Sort by'? Then we could change 'Show measurement' to 'Show value' - both to save space, and because we're no longer limited to measurements. Sounds good, done. > Minor thing: when I assign a classification to a core after displaying the grid, this becomes available in the 'Classes' drop-down - which is nice. The less nice thing is that all the classes there appear deselected.... but aren't necessarily not visible. This should be fixed now, with only minor cursing at ControlsFX",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1588#issuecomment-2329158926:1068,avail,available,1068,https://qupath.github.io,https://github.com/qupath/qupath/pull/1588#issuecomment-2329158926,2,"['avail', 'down']","['available', 'down']"
Availability,"> Ok, so I've learned that OpenCV has a maximum number of channels, defined as `CV_CN_MAX`. That's set as 512, so any attempt to exceed that will fail.; > ; > Without a major rewrite of the pixel classifier, the most QuPath can do is provide a more informative error message. Sounds reasonable, I wouldn't expect most classifiers to benefit from using that many channels, given that they're all derived from a few dozen IHC channels at most.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1092134032:261,error,error,261,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092134032,1,['error'],['error']
Availability,"> Run Extensions → ImageJ → Send snapshot to ImageJ; > Try to interact and use accelerators with both ImageJ and QuPath windows in focus. For example, pressing shortcut+L should; > launch the ImageJ command finder if an ImageJ window is in focus; > launch the QuPath command list if a QuPath window is in focus; > not launch either the wrong window, or both at once. This is how it behaves, but I checked on a previous version and it also behaved this way. ""Send snapshot to ImageJ"" always sends the image on the ""primary"" viewer, not the selected one. Is this intended?. Side note: movement/zoom is coupled between viewers, even when different images are open. Is this intended? Seems counterintuitive to me. Also is not great if you have an image highly zoomed and then open another, or if two images have different levels of detail available",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1318#issuecomment-1713690482:835,avail,available,835,https://qupath.github.io,https://github.com/qupath/qupath/pull/1318#issuecomment-1713690482,1,['avail'],['available']
Availability,"> So long as 'arbitrarily large' is still small enough to work as a single image (not a pyramidal whole slide image), then it should certainly be possible. Image pyramids can't be written with QuPath currently.; > ; > One way to get a larger image may be via [Send region to ImageJ](https://github.com/qupath/qupath/wiki/Working-with-ImageJ#sending-image-regions-to-imagej) - from memory I think there's still a size limitation, but it should be bigger.; > ; > Otherwise, it is necessary to run a script. The closest matching script I can think of is [this one](https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d). By default, it will export the entire image at a very low resolution because of these lines; > ; > ```groovy; > // Aim for an output resolution of approx 20 µm/pixel; > double requestedPixelSize = 20; > ...; > // Calculate downsample factor depending on the requested pixel size; > double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); > def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()); > ```; > ; > You can switch it to export only the region corresponding to the selected object, at full resolution, as follows:; > ; > ```groovy; > // Calculate downsample factor depending on the requested pixel size; > double downsample = 1.0; > def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, getSelectedROI()); > ```; > ; > Let me know if that doesn't do what you need, and hopefully some other script change could help. Personally, I'd use the ImageJ method for exporting isolated regions occasionally, and a script if I wanted to export lots of regions in a single batch.; > ; > > Note: I've tagged this as _enhancement_ because I think it would make sense to increase the export size limit through the user interface to make this easier. I had forgotten the existing limit was so small... I have almost the same need as @nathan. I have s",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/127#issuecomment-853621895:857,down,downsample,857,https://qupath.github.io,https://github.com/qupath/qupath/issues/127#issuecomment-853621895,2,['down'],['downsample']
Availability,"> That is a very large classifier. Do you get the same error with both ANN and Decision Trees? When removing one scale?. Yep, I get the same error for both ANN and Decision Trees. When I drop scales until one succeeds, the other succeeds also. >Is there any chance you can replicate the problem with a more manageable/minimal dataset - preferably of publicly-accessible images?. Understandable; I'm working on creating a dataset from images that be publicly available regardless at the I2K conference. Will post a link shortly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1092033821:55,error,error,55,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092033821,3,"['avail', 'error']","['available', 'error']"
Availability,"> This error (and the reduction in variables allowing the classifier to work) brings to mind something I batted around in my head but never formalized as a feature request. Often, many if not most of the features fed into a classifier are nearly unused. How difficult would it be to code the extraction of the top variable combinations (to some N) from the decision trees ""rate my variables"" list? At the moment, adding in one new scale propogates across all features and channels, even if I knew I only wanted to use a particular low res scale with one marker.; > ; > I am not sure how practical coding an option like that might be, but it could streamline classifiers significantly in situations like this one. Under the Advanced Options, there is the ability to perform PCA dimensionality reduction. My understanding is that it computes a PCA variance ""score"" for each feature (a feature being a unique combination between a scale X convolution X channel), sorts the features by their score, and selects the top _n_ features that account for _m_% of variance, as specified in ""PCA Retained Variance"". But as you mentioned, there's not really a way to control this feature augmentation to be more heavily weighted on a specific channel.; ![image](https://user-images.githubusercontent.com/52012166/162272015-63b7051c-a9b4-4e26-8579-0dc5173cab6c.png). The other option is to check ""Compute Variable Importance"" in the classifier parameters, however not all model types have this as an option. Still, I usually use this as a first-pass pruning of what channels to use for training each classifier; ![image](https://user-images.githubusercontent.com/52012166/162272798-9a94e40f-eee4-4e43-9dee-9aa2b5480f61.png). One way of potentially implementing feature scoring across all models would be to compute various descriptive statistics of the feature across each class of an annotated area, and find which features have the greatest variance across classes (or some other metric such as fold change). I've",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1092079728:7,error,error,7,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092079728,1,['error'],['error']
Availability,"> To avoid the 'update URIs' dialog in am multi-user setting, each user can duplicate the project.qpproj file and use the duplicate as their own view on it, i.e. they open and update the project file to contain the absolute paths relevant to them. To facilitate this, when dragging a project directory on top of QuPath one can choose the precise file to open from a drop-down list. There is also a Recent Projects option to reopen the last project. Thanks for the suggestion, we will be doing that then. I apologize for the use of GitHub issues. I really thought that for some reason it was not taking the relative paths in windows and not that the feature had been removed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/468#issuecomment-623989433:371,down,down,371,https://qupath.github.io,https://github.com/qupath/qupath/issues/468#issuecomment-623989433,1,['down'],['down']
Availability,"> When I build QuPath with ./gradlew jpackage I'm only getting the non-core QuPath jars (qupath-bioimageio-spec and qupath-fxtras). Does it also happen with `./gradlew clean jpackage`? Since it's a `Copy` task it's safer to `clean` before. > I also don't see any javadocs if I call ./gradlew run; it would be nice if they could be available, but it isn't crucial since the normal use will be via jpackage builds. Added with last commit. > Lastly, when I open the Javadoc viewer, I see this:. There is an automatic redirection that is not triggered on the old Javadoc viewer. It seems to work on the new Javadoc viewer, can you check if it also works on your side?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1513#issuecomment-2095709470:331,avail,available,331,https://qupath.github.io,https://github.com/qupath/qupath/pull/1513#issuecomment-2095709470,1,['avail'],['available']
Availability,"> Where could you find the Weka extention? thanks. For me it was in C:\Users\ (Your Name)\QuPath\extensions. It was in the 7th line of code in the debug image from my original post above. Weka is an extension that I downloaded for a previous project so it must have been outdated (as suggested by @Svidro above). I would try removing all extensions to rule out any outdated / buggy ones causing the issue. If removing all the extensions does not work, could you post a screenshot of a log after opening QuPath through the debug application?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/497#issuecomment-632435699:216,down,downloaded,216,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632435699,1,['down'],['downloaded']
Availability,"> but it would be fiddly to try to get the location of the bar and font size to exactly match what is displayed in QuPath's viewer. I don't think this is strictly necessary because in the viewer, the scalebar tries to be unobtrusive, but as part of a figure, I think it would look too small (or that was the case for the figure I was trying to make). So yes, which corner, which physical length / thickness, length displayed (above/below) should ideally all be user defined (IMHO). Maybe an ""export preview"" window would help?. And as in @biovoxxel's video (thanks for the resource!), our users sometimes struggle with the ""DPI/PPI"" calculations. If this was a set parameter in preferences (e.g. 300PPI by default), then you could write next to downsample what would be the maximum figure size for that PPI (e.g. downsample 2, 300PPI -> up to 1200cm x 800cm figure). The user would then be able to choose an appropriate downsample for their figure that's say, up to 20cm wide at the requested PPI. Anyway anyway, I'll compile a v0.5 and check out the new additions. Thank you very much for taking the time to implement this @petebankhead !",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1272#issuecomment-1604160841:745,down,downsample,745,https://qupath.github.io,https://github.com/qupath/qupath/issues/1272#issuecomment-1604160841,3,['down'],['downsample']
Availability,"> my Mac automatically offloads them to the cloud if I haven't opened them for a few days. My best guess is that there is a cloud-related factor. Where is the project stored - is it only on your local computer, or is it also in OneDrive/iCloud/similar?. If the project is in a cloud folder, please try copying it to a local directory that doesn't experience any automatic cloud-offloading/downloading. Also, when this happens, please check under *View &rarr; Show log* for any messages or other information that could be helpful.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1313#issuecomment-1705956614:389,down,downloading,389,https://qupath.github.io,https://github.com/qupath/qupath/issues/1313#issuecomment-1705956614,1,['down'],['downloading']
Availability,"> try accessing the images some other way before opening them in QuPath (e.g. through Windows Explorer), in case 'pre-warning' the OS is somehow useful. I think this is it! I opened the folder containing the images in explorer, and set the thumbnail size to ""large icons"" via `view > large icons`. This would generate thumbnails for all files that are currently displayed on screen. After those were generated, I scrolled down, so that the remaining files would also have their thumbnails generated. Then, I launched the QuPath project in 0.4.1, and the load time was nearly instantaneous. Which, while resolving the issue, also means that the issue exists outside of QuPath. So, for some reason, the thumbnail previews are lost after a period of time, and don't seem to coincide with closing the folder or restarting the computer. The first thing I attempted to preserve thumbnails was to ensure ""Always show icons, never thumbnails"" in the folder options was unchecked, however it already was by default:; ![image](https://user-images.githubusercontent.com/52012166/211071879-ac70ef62-925f-4fe5-8ec3-10763d391393.png); Toggling this field didn't seem to have any impact on project loading performance, since in either case, the thumbnails were already generated (just replaced with an icon if the box is checked).; Next, under Windows performance options, I noticed ""save taskbar thumbnail previews"" was unchecked by default. I've checked it, and so far, I don't seem to have trouble loading projects that already have thumbnails generated in explorer. ; ![image](https://user-images.githubusercontent.com/52012166/211072664-c211658b-7aa6-435d-8067-830b4e1620b1.png). I'll continue to test other projects and rebooting my computer, to confirm if this has resolved the issue. TL;DR: **Check ""save taskbar thumbnail previews"" under Windows performance options. Subsequent loads of the project should now be much faster**. EDIT: So far, this fix persists after rebooting the system. EDIT 2: I've opened",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1154#issuecomment-1373971580:422,down,down,422,https://qupath.github.io,https://github.com/qupath/qupath/issues/1154#issuecomment-1373971580,1,['down'],['down']
Availability,"> was running a script but it never finishes. I don't understand exactly what steps you are taking?; * Are you using *Run &rarr; Run* from the script editor, or *Run &rarr; Run for project*? *Run for project* enables you to [run the same script sequentially across multiple images](https://qupath.readthedocs.io/en/stable/docs/scripting/workflows_to_scripts.html#running-a-script-for-multiple-images), but I don't know if you're using this.; * Do you have multiple images open simultaneously in QuPath, or only a single image at a time?. Please see also my question above:. >> I still have 15GB free; > ; > Is this available to QuPath, or only to the operating system? You can track QuPath's memory use with View → Show memory monitor (although this won't include anything JavaCPP does... which mostly means things connected with pixel/object classifiers). The memory monitor also provides ways to reclaim memory at any time. Although problem **the most important thing** is that I can see in your script (and screenshot) that you are running the cell detection after; ```groovy; createSelectAllObject(true);; ```; This is likely to be **extremely** inefficient, because it will process all the empty white space as well. Processing should be much faster, and memory use much lower, if you restrict cell detection to only the tissue regions.; See [Detecting tissue](https://qupath.readthedocs.io/en/stable/docs/tutorials/thresholding.html) for details; [Pixel classification](https://qupath.readthedocs.io/en/stable/docs/tutorials/pixel_classification.html) is another option.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/828#issuecomment-939704186:615,avail,available,615,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-939704186,1,['avail'],['available']
Availability,"@JoelRV It's not too strange, much of the image-reading code has been completely rewritten and I can see the change where the problem occurs. Building v0.2.0 with JDK 11 isn't documented anywhere yet, but it is more involved than v0.1.3 (mostly because OpenJDK 11 is needed along a pre-release version of jpackage, downloaded separately, with paths set accordingly). If 'the same error' means a build error, then I'd guess that's why.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472857161:315,down,downloaded,315,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472857161,3,"['down', 'error']","['downloaded', 'error']"
Availability,"@MichaelSNelson @petebankhead I've sent you a download link on the forums to a QuPath project and images that I'm able to reproduce the bug with, about 92 Mb in size. To reproduce the error, train a pixel classifier using all scales, features, and channels available, loading training from all 3 images in the project:; ![image](https://user-images.githubusercontent.com/52012166/162270961-33456355-318c-403c-8afc-151085a78d94.png); Thanks again for all your help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1092066516:46,down,download,46,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092066516,3,"['avail', 'down', 'error']","['available', 'download', 'error']"
Availability,"@Rylern figured out what's going on, and #1578 helps address this bit of undo/redo weirdness. The fix should be available in v0.6.0.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1487#issuecomment-2277243206:112,avail,available,112,https://qupath.github.io,https://github.com/qupath/qupath/issues/1487#issuecomment-2277243206,1,['avail'],['available']
Availability,"@SahPet can you confirm:; * Are you using TensorFlow CPU or GPU?; * Does it work for small images?; * Does it run for a bit and *then* crash terribly, or does it not run at all?. In the past with OpenCV/JavaCPP these errors have often been because an object (e.g. a Mat) has been freed too soon and then some later code tries to use it... which is often prompted by the garbage collector running during some intensive processing. If this is the issue, then I'd expect that it works for a while... and then suddenly everything disappears. Does that fit what you're seeing?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630637888:217,error,errors,217,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630637888,1,['error'],['errors']
Availability,"@Svidro Really appreciate your code!!! I guess it's little bit too much to ask, but I'm wondering if you could do me a final favor to teach me the code of reading coordinates from a json format like:; ```json; {; ""tumor"": [; {; ""name"": ""Annotation 0"",; ""vertices"": [; [; 100,; 150; ],; [; 200,; 250; ],; [; 300,; 350; ]; ]; },; {; ""name"": ""Annotation 1"",; ""vertices"": [; [; 1000,; 1500; ],; [; 2000,; 2500; ],; [; 3000,; 3500; ]; ]; }; ]; }; ```. I tried to use import groovy.json.JsonSlurper; But it gave me error of; `Script1.groovy: 5: unable to resolve class groovy.json.JsonSlurper`; With this part done, my entire issue should be resolved.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/140#issuecomment-359361318:509,error,error,509,https://qupath.github.io,https://github.com/qupath/qupath/issues/140#issuecomment-359361318,1,['error'],['error']
Availability,"@Svidro That's a different error. I couldn't replicate it, but my idea of a 'decent number' may be lower. If you are displaying all detections under the 'Hierarchy' tab, you can right-click on it and choose to hide them. That might help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/307#issuecomment-484627853:27,error,error,27,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484627853,1,['error'],['error']
Availability,"@Svidro Yes it is rather small. They mention their images being up to that size, but images only a quarter of that size are actually available. I realize it's incredibly small, but there's not much I can do about it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/459#issuecomment-620737325:133,avail,available,133,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-620737325,1,['avail'],['available']
Availability,"@ajerusalmi the error is caused by the old Weka extension being installed. This is compatible with v0.1.2, but not v0.2.0. Two things you can do:; * delete the Weka extension; to find its location, go to *Edit &rarr; Preferences* and check the 'QuPath user directory'; * use *Edit &rarr; Reset preferences* to reset the location of the user directory in QuPath, so the extension will not be found. I will close this issue since it is not a bug, however a change has been made for v0.2.0-m11 to enable QuPath to recover better in cases like this, see https://github.com/qupath/qupath/issues/454",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/458#issuecomment-620375806:16,error,error,16,https://qupath.github.io,https://github.com/qupath/qupath/issues/458#issuecomment-620375806,2,"['error', 'recover']","['error', 'recover']"
Availability,"@andyp05 have you checked for any errors under *View &rarr; Show log*?. I have not seen this behavior and have no way to replicate it, but my guess is that there may *possibly* be a memory error. You seem to have a lot of cores relative to the amount of available RAM, so reducing the *Number of parallel threads* option under *Edit &rarr; Preferences...* may help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/828#issuecomment-932290410:34,error,errors,34,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932290410,3,"['avail', 'error']","['available', 'error', 'errors']"
Availability,"@bpmed12 can you be more specific regarding what exactly you have tried, what does/does not work and any error messages you see?. Note that the 'image list' (under the 'Image' tab) does not exist in m3. So your issue may be different. Also not that the Bio-Formats extension must *not* be installed with m3 - it is included by default. You may still need to install the visual studio redistributable as specified at https://docs.openmicroscopy.org/bio-formats/6.1.1/formats/zeiss-czi.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/35#issuecomment-517719018:105,error,error,105,https://qupath.github.io,https://github.com/qupath/qupath/issues/35#issuecomment-517719018,1,['error'],['error']
Availability,"@kwiechen thanks for the suggestion, I haven't looked into this - what would it involve and what would it solve?; Currently, 'official' Windows builds are available for OpenSlide and seem to work fine. It is portability on Mac/Linux that poses the biggest problem (especially since pixman included in the last LTS Ubuntu release causes trouble).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-761851656:155,avail,available,155,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-761851656,1,['avail'],['available']
Availability,"@martyna90 Could you copy & paste the text of the error, or else scroll up a bit when making the screenshot? The bit with the most valuable information is usually near the top of the long list of 'at' statements; I'd need to see the first lines to better understand the problem. Thanks!. As far as I recall, VSI is *only* supported through Bio-Formats, but this is built-in with v0.2.0-m8. If you are using v0.2.0-m8, but still have the *old* Bio-Formats extension installed (for v0.1.2), then I believe both may fail to work properly. In case that's the issue, you can remove the Bio-Formats extension .jar files from QuPath's extensions folder, or use *Edit &rarr; Reset preferences* to reset the extensions folder itself in v0.2.0-m8. The second option leaves things unchanged for v0.1.2, in case you need to be able to use both versions on the same computer.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/387#issuecomment-577108438:50,error,error,50,https://qupath.github.io,https://github.com/qupath/qupath/issues/387#issuecomment-577108438,1,['error'],['error']
Availability,"@melvingelbard ; Thank you for kindly providing a possible solution!; However, manually modifying `.qptma` file is rather complicated. I have to first export `.qptma`, insert uniqueID, and import it, for every image.; For now, my alternative solution is through menu File -> TMA data -> import TMA data, copy arranged Unique ID, finally `Paste Gird`. At least, this method avoids export `.qptma` file with lots of other images. Hope the ""Drag and Drop `.qpmap`"" feature can be repaired soon~",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/829#issuecomment-944358370:477,repair,repaired,477,https://qupath.github.io,https://github.com/qupath/qupath/issues/829#issuecomment-944358370,1,['repair'],['repaired']
Availability,"@mezwick Hashes aren't currently generated or made available. Making a release remains a fairly laborious and manual process. Although the builds themselves are now generated automatically using GitHub Actions, I have to download and check these run on each platform and then upload again. And write all the release notes, tag the version etc. There can also be some extra renaming required, since `jpackage` (used for the build) has some awkwardness connected to artefact naming and 0.x.x versions that affects some platforms but not others (e.g. I think macOS forbids 0.x.x versions, so this needs worked around; also, it needs to be possible for people to have multiple versions installed for reproducibility). It's already a real pain to do, and I don't want to add any more manual steps if I can avoid it. It would be strongly preferable to automate the whole process a bit more, using [Upload to Release](https://github.com/marketplace/actions/upload-to-release) to avoid the download/upload requirement, and somehow include hashes (e.g. using the links from @KrisJanssen's last post) at that point. This seems to me at least a bit awkward to set up though, since the upload action is only triggered when a release is made. The [build workflow](https://github.com/qupath/qupath/blob/v0.3.2/.github/workflows/jpackage.yml) would have to be quite a bit more complex (e.g. to handle cross-platform filenames/content types for the builds, as well as different artefact compression methods). I'd also still need to retain the ability to check the release manually on each platform *before* the release itself is created, because creating the release is what triggers any update notifications... and after the release has been tagged is a bad time to identify some platform-specific breakage. These tend to happen with every release, e.g. because some dialog ends up misbehaving on Ubuntu but looks fine everywhere else. I strongly suspect I'd mess it up quite a few times before (hopefully) getting i",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1027#issuecomment-1208071371:51,avail,available,51,https://qupath.github.io,https://github.com/qupath/qupath/issues/1027#issuecomment-1208071371,3,"['avail', 'down']","['available', 'download']"
Availability,@ofrag I read this thread again and today I understood :). We've replaced `RoiTools.makeTiles` with a the new `Tiler` class that supports different alignment options. Hopefully it will make things much easier.; * https://github.com/qupath/qupath/pull/1350. I'll close this issue as the new class should be available soon when v0.5.0 is available.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1277#issuecomment-1738963292:306,avail,available,306,https://qupath.github.io,https://github.com/qupath/qupath/issues/1277#issuecomment-1738963292,2,['avail'],['available']
Availability,"@petebankhead Hi, thanks for the prompt and clear response. Their website is a little unclear about obtaining the data. There is a link on their page to a directory listing where you can download individual images. You unfortunately have to sign in to their site I believe to access this. These files are listed [here](http://ptak.felk.cvut.cz/Medical/dataset_ANHIR/images/), and the password can be seen on [this page](https://anhir.grand-challenge.org/Download/) after signing in. Edit: It's worth noting that this happens with many images, and the example is just one of them.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/459#issuecomment-620643098:187,down,download,187,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-620643098,2,"['Down', 'down']","['Download', 'download']"
Availability,"@petebankhead How does one get the code, mentioned above, (https://github.com/qupath/qupath/issues/202#issuecomment-415312268 where the pictures with specific contrast/brightness settings are exported) to work in version 0.2.0-m2?; It has some import failures in my version and when I am deleting all imports and click on ""include default bindings"" it also does not work. Can you help or do I have to use an older/newer version?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/202#issuecomment-520236152:251,failure,failures,251,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-520236152,1,['failure'],['failures']
Availability,"@petebankhead I will definitely share the new QuPath jobs. Thank you for these fixes to the TMA Data viewer. The table now has correct colors and all the columns that were missing values now have correct values. . I am just realizing that the data table is only sluggish when the TMAs have cell detections present. If I were to calculate my measurements of interest for each TMA and remove detections before testing the TMA Data viewer then it works very smooth. Is it possible that the vertical scroll issue sluggishness is a side effect of being able to view huge combined dataset ""live""!. I hope TMA Viewer is here to stay as a legacy feature for a while, it seems to have served well and continues to work. Thank you for keeping it alive.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1083#issuecomment-1289156832:736,alive,alive,736,https://qupath.github.io,https://github.com/qupath/qupath/issues/1083#issuecomment-1289156832,1,['alive'],['alive']
Availability,"@petebankhead Thanks a lot! Unfortunately, it does not work out (Startup error below). Shall I then move this question to the new qupath forum? One more question: Is there a documentation of the qupath functions and classes?. ```ERROR: Error: startup failed:; Script1.groovy: 7: unable to resolve class qupath.lib.color.ColorToolsAwt; @ line 7, column 1.; import qupath.lib.color.ColorToolsAwt; ^. Script1.groovy: 8: unable to resolve class qupath.lib.projects.Projects; @ line 8, column 1.; import qupath.lib.projects.Projects; ^. Script1.groovy: 6: unable to resolve class qupath.imagej.tools.IJTools; @ line 6, column 1.; import qupath.imagej.tools.IJTools; ^. 3 errors; `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/202#issuecomment-520238308:73,error,error,73,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-520238308,4,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error', 'errors']"
Availability,@petebankhead is there any way to work around this so that I can use saved training points on the same image that they were created in. . @Svidro I agree it does seem after some research like this might be the most reliable method. At the same time however doesn't this make it harder to train on a very large number of images? In order to train on 50 images I would need to create a project with 50 images and save the data in each project. It is my understanding and experience that these large project are much slower than smaller ones and frequently crash.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/360#issuecomment-530543289:215,reliab,reliable,215,https://qupath.github.io,https://github.com/qupath/qupath/issues/360#issuecomment-530543289,1,['reliab'],['reliable']
Availability,"@petebankhead sorry for the late answer, but I finally had time to continue with this project. No I never experienced any errors when I used default parameters. Simpler models with lower resolution greatly reduce the error rate! So I guess you are right, that my classifiers were too complex and that this is part of the problem. I tried my approach on four different computers and I've had the same errors every time, when I started the pixel classifier on full resolution. . I've added one of my JSON files below. [2020-02-21 Pixel Model.zip](https://github.com/qupath/qupath/files/4235332/2020-02-21.Pixel.Model.zip)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/394#issuecomment-589578173:122,error,errors,122,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-589578173,3,['error'],"['error', 'errors']"
Availability,"@petebankhead thank you for tagging me on these changes. . > Since all `PathObject` instances now have an ID property, which should be unique, the use of 'Unique ID' as a property for a TMA core becomes even more confusing. I agree. > My proposal is to change **Unique ID** to become **Case ID**. You have my upvote for this. Not necessarily better but the alternative I could think of is **Subject ID** but it has a similar vibe to **Patient ID**. > Making the change involves an extra decision. The easy bit is to create methods for `TMACoreObject.setCaseID(id)` and `TMACoreObject.getCaseID()` - the old methods can remain temporarily, but emit a warning if they are called*. The trickier choice is whether to update the name used internally to store the value; I'd like to change it, but it means that IDs saved in QuPath v0.4.0 won't be recognized in older versions. If these changes mean less confusing and clear APIs in the future, then, the sooner we address them, the fewer projects will be affected. . I personally do not have a reason to go back to 0.3.X once I create a project in 0.4.0X - because I believe all the commands that were present in 0.3.0X will be available in 0.4.0X. Please correct me if I am wrong - Are there any methods/workflows that will be dropped in 0.4.0? It would be easy to make a decision if we could identify potential reasons for someone to want to go back to 0.3.X - besides the fact that not everyone is running the most up-to-date version of QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1114#issuecomment-1303784568:1173,avail,available,1173,https://qupath.github.io,https://github.com/qupath/qupath/issues/1114#issuecomment-1303784568,1,['avail'],['available']
Availability,@petebankhead thank you for your response! I see what you mean. I think for now Bio-Formats is enough for me. I had some errors building with adoptopenjdk-14-hotspot so I built it with 15 (plus this little workaround for the cfg file to get it to run),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/615#issuecomment-725527739:121,error,errors,121,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-725527739,1,['error'],['errors']
Availability,"@petebankhead thank you, could you please have a look at this question? I tried to build from github but got this error. https://stackoverflow.com/questions/71835049/failed-to-apply-plugin-class-org-gradle-api-plugins-javaplugin-gradle-plugins",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095678096:114,error,error,114,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095678096,1,['error'],['error']
Availability,"@petebankhead thanks, yeah same exact error",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/825#issuecomment-925039627:38,error,error,38,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925039627,1,['error'],['error']
Availability,"@petebankhead, do you know an approach to run QuPath as a script for 0.3.0 version? In example, StarDist model worked in this way:; ```; ./QuPath/bin/QuPath script run_stardist.groovy -i OS-3.ndpi; ```; where `run_stardist.groovy` is a script from https://qupath.readthedocs.io/en/stable/docs/advanced/stardist.html. Now with StarDist as a separate JAR extensions, I have an error ""unable to resolve class qupath.ext.stardist.StarDist2D"". ---; **Update**: The following workaround looks fine for me. ```groovy; // import qupath.ext.stardist.StarDist2D; this.class.classLoader.addURL(new File(""qupath-extension-stardist-0.3.0.jar"").toURL());; def StarDist2D = Class.forName(""qupath.ext.stardist.StarDist2D"").newInstance();; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/665#issuecomment-919283605:375,error,error,375,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-919283605,1,['error'],['error']
Availability,"@r-mvl You could try the following script to investigate; ```groovy; import qupath.lib.images.servers.*. FileFormatInfo.cache.clear(). // Directory containing files; def path = 'path/to/scn/files'. // Filter only scn files; def files = new File(path).listFiles().findAll{it.getName().endsWith('.scn')}. // Print available readers; for (builder in ImageServerProvider.getInstalledImageServerBuilders()); print builder. for (f in files) {; def uri = f.toURI(); // Print all possible readers for the current file; print ImageServerProvider.getServerBuilders(java.awt.image.BufferedImage, uri.toString()).size(); // Print preferred reader; print ImageServerProvider.getPreferredUriImageSupport(java.awt.image.BufferedImage, uri.toString()); }; ```; I've tried a lot of files this morning and haven't been able to find any that fail... it remains mysterious :/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/348#issuecomment-518131563:312,avail,available,312,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518131563,1,['avail'],['available']
Availability,"@saudet since my machine is CentOS 7, I decided to build the code from scratch (as you can see in my Stackoverflow error). Running what you mentioned on the binary file found in tar of the QuPath results in this other error:. ```; drwxrwxrwt. 62 root root 20K Apr 11 18:07 ..; -rw-r--r--. 1 jalal cs-grad 152M Apr 11 18:10 gradle-7.4.2-all.zip; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 .; -rw-r--r--. 1 jalal cs-grad 6.4K Apr 11 19:16 EGFR SSM TCGA LUAD.csv; [jalal@goku downloads]$ cd QuPath/; [jalal@goku QuPath]$ ls; total 4.0K; drwxr-xr-x. 4 jalal cs-grad 66 Jan 17 03:51 lib; drwxr-xr-x. 2 jalal cs-grad 49 Jan 17 03:51 bin; drwxr-xr-x. 4 jalal cs-grad 40 Jan 17 03:51 .; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 ..; [jalal@goku QuPath]$ cd bin/; [jalal@goku bin]$ JAVA_TOOL_OPTIONS=-Dorg.bytedeco.javacpp.nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:115,error,error,115,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,3,"['down', 'error']","['downloads', 'error']"
Availability,"@skalteis any updates? v0.2.0-m10 is now available, and should be capable of working with VisualVM directly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/440#issuecomment-617732952:41,avail,available,41,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-617732952,1,['avail'],['available']
Availability,@subanookala Please post questions on the forum at http://forum.image.sc/tag/qupath and provide more detail (you may find a more complete error message under *View &rarr; Show log*).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/396#issuecomment-826532977:138,error,error,138,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-826532977,1,['error'],['error']
Availability,"@suzeteguarda you could try posting your question on the forum at https://forum.image.sc/tag/qupath. The error is that there isn't enough memory, but without having the classifier and knowing how much memory you have, I can't really guess what could be responsible. (This topic is really about loading training data to create classifiers, not classifiers themselves, so I will hide these posts to avoid distraction).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-1791280813:105,error,error,105,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791280813,1,['error'],['error']
Availability,"@yli-hallila did you spot any patterns when it happened?. Like, was it a high-resolution pixel classifier, and did the memory use accumulate over time?; Would it happen after 3 images, 30 images, or 300 images...?. I'm hoping that there is some place where I'm just failing to release memory used by OpenCV / JavaCPP, but I thought I'd tracked down where that was the case. The script does two things: clears the cache, and calls the garbage collector. If the thing that helps is clearing the cache, then that suggests to me that it is delaying (rather than solving) the problem - and there is probably still a leak somewhere. If the thing that helps is running the garbage collector then... I guess I'm confused, because I think that should happen before an out-of-memory error occurs anyway. I quite like hunting for leaks (as long as they are in code I can control), but here I'm not sure where exactly I should start.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1322#issuecomment-1715940498:344,down,down,344,https://qupath.github.io,https://github.com/qupath/qupath/issues/1322#issuecomment-1715940498,2,"['down', 'error']","['down', 'error']"
Availability,"A few more things:; * If I try to load a pixel classifier, I'm still prevented from opening the dialog if there is no classifier in the current project. In this case, I'd expect the dialog to open and allow me to choose a classifier.; * There's a gap to the right of the options now in the dialog that looks like it shouldn't be there.; ![Screenshot 2021-03-05 at 13 45 30](https://user-images.githubusercontent.com/4690904/110123703-23eba680-7db9-11eb-84f8-1aad3899d4ac.png); * It would be a little nicer to determine whether `(s)` is needed or not and adjust the message displayed to the user accordingly when offering to copy the classifier. I also think the wording is a bit redundant; I'd prefer 'Copy classifier to the current project?' and *Yes*, *No*, *Cancel*. Depending upon how the dialog is constructed you may have space to add some further text to explain what it means (but I'm not sure that's really needed).; ![Screenshot 2021-03-05 at 13 45 38](https://user-images.githubusercontent.com/4690904/110123699-2221e300-7db9-11eb-8204-fd45b13976d2.png); * I couldn't see a way to work drag & drop with the pixel classifier. I *can* drag a classifier onto QuPath's main window, but it appears that QuPath then tries (and fails) to open the classifier as an image. It doesn't display any meaningful error - or at least not for long enough for me to read it.; * There isn't any text in the *Load object classifiers* dialog that indicates you can load a classifier by drag & drop. I think this text should be added; you might also support adding a classifier by double-clicking and providing a file chooser. It doesn't have to part of this pull request, but since this will offer support for loading classifiers from elsewhere, perhaps we should relax the strict requirement that classifiers can only be saved within a project. What do you think?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/642#issuecomment-791435458:679,redundant,redundant,679,https://qupath.github.io,https://github.com/qupath/qupath/pull/642#issuecomment-791435458,2,"['error', 'redundant']","['error', 'redundant']"
Availability,"A little more on this: it is partly a Java issue - see [this StackExchange](https://softwareengineering.stackexchange.com/questions/20573/why-does-java-exit-with-success-after-an-uncaught-exception) post: Java exits with EXIT_SUCCESS on an uncaught exception. I have found the source of this uncaught exception: in `src/main/java/qupath/QuPath.java`, there are three different places where `runScript` is called, only one of which is protected by a `try`/`catch` construct, so if an exception is thrown in one of the other two cases (as happened to me), the exception is not caught but instead causes Java to crash. In particular, I can't then check for the logger message which is produced by this code in the first case:. ```; logger.error(""Error running script for image: "" + entry.getImageName(), e);; ```. So the solution would simply be to `try`/`catch` the other two cases as well. Best wishes, Julian",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/654#issuecomment-743001513:736,error,error,736,https://qupath.github.io,https://github.com/qupath/qupath/issues/654#issuecomment-743001513,2,"['Error', 'error']","['Error', 'error']"
Availability,"A proposal to fix #1527. It simply consists in reducing the size of the downsampled image by rounding down its width and height, instead of rounding it.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1528:72,down,downsampled,72,https://qupath.github.io,https://github.com/qupath/qupath/pull/1528,2,['down'],"['down', 'downsampled']"
Availability,"About commit [a7b184f](https://github.com/qupath/qupath/pull/1474/commits/a7b184f2bf0134432c52080e394ab51fea02dfe3):. In Zarr files (or at least in the Zarr files I have), the z values are scaled with the resolution. This means that if there is an image of shape (t: 10, c: 20, z: 30, y:40, x: 50) at full resolution, it will have a shape of (t: 10, c: 20, z: **15**, y:20, x: 25) with a downsample of 2 (and not (t: 10, c: 20, z: **30**, y:20, x: 25)). This means that in the BioFormats `IFormatReader.getIndex(z, c, t)` function, `z` can only take values between 0 and **15** (and not **30**) when called for the image of downsample 2. I'm not satisfied with this commit because it's ugly and assumes every Zarr files scale the z values with the resolution (which I was not able to find if it's the case in the [OME-ZARR specs](https://ngff.openmicroscopy.org/latest/)).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1474#issuecomment-1971320350:388,down,downsample,388,https://qupath.github.io,https://github.com/qupath/qupath/pull/1474#issuecomment-1971320350,2,['down'],['downsample']
Availability,"Actually there are more errors, introduced (I think) in v0.2.0-m5 when attempting to avoid recursion. The running statistics are not being reset between clusters, potentially resulting in further problems throughout these measurements.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/552#issuecomment-656226269:24,error,errors,24,https://qupath.github.io,https://github.com/qupath/qupath/issues/552#issuecomment-656226269,1,['error'],['errors']
Availability,"Actually, I was just reminded that there was another topic that handled this, if you scroll down to 4 in Peter's response. It has a macro you can run through the _Extensions -> ImageJ macro runner_ . That may be much more in line with what you are looking for.; https://github.com/qupath/qupath/issues/57",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/85#issuecomment-315177285:92,down,down,92,https://qupath.github.io,https://github.com/qupath/qupath/issues/85#issuecomment-315177285,1,['down'],['down']
Availability,"Actually, no need to send the error... I was able to reproduce the problem on an older Mac here. It would still be good to know what version of the operating system you are running. It works for me on Sierra, but not on Mavericks - although I'm not sure if that's relevant. In any case, my awkward hack of copying the ```lib*``` files from a working version to v0.1.1 appears to work - so I will try to find which part is missing in v0.1.1, and recompile a version with everything that is required.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/32#issuecomment-265496307:30,error,error,30,https://qupath.github.io,https://github.com/qupath/qupath/issues/32#issuecomment-265496307,1,['error'],['error']
Availability,"Actually... something that *might* help in the short term is to use the specify the color with [addLabel](https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html#addLabel(qupath.lib.objects.classes.PathClass,int,java.lang.Integer))​, i.e.; ```groovy; // Create an ImageServer where the pixels are derived from annotations; def labelServer = new LabeledImageServer.Builder(imageData); .backgroundLabel(0, ColorTools.BLACK) // Specify background label (usually 0 or 255); .downsample(downsample) // Choose server resolution; this should match the resolution at which tiles are exported; .addLabel('Tumor', 1, makeRGB(1, 1, 1)) // Choose output labels (the order matters!); .addLabel('Stroma', 2, makeRGB(2, 2, 2)); .multichannelOutput(false) // If true, each label refers to the channel of a multichannel binary image (required for multiclass probability); .build(); ```. You might still end up with an RGB image in Python, but when I tried it briefly it gave me a 2D image without LUT - as long as my RGB colors were all grayscale.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/993#issuecomment-1159782587:511,down,downsample,511,https://qupath.github.io,https://github.com/qupath/qupath/issues/993#issuecomment-1159782587,2,['down'],['downsample']
Availability,"Add badge for number of downloads (all releases), downloads for latest release and DOI link.; ![image](https://user-images.githubusercontent.com/10900214/103023501-15ad1e80-451c-11eb-970f-87409de3e9df.png)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/656:24,down,downloads,24,https://qupath.github.io,https://github.com/qupath/qupath/pull/656,2,['down'],['downloads']
Availability,Add changelistener to downsamplefactor,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1279:22,down,downsamplefactor,22,https://qupath.github.io,https://github.com/qupath/qupath/pull/1279,1,['down'],['downsamplefactor']
Availability,Add error badge to log toolbar button,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1341:4,error,error,4,https://qupath.github.io,https://github.com/qupath/qupath/pull/1341,1,['error'],['error']
Availability,Added info to error message for left quotes,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/636:14,error,error,14,https://qupath.github.io,https://github.com/qupath/qupath/pull/636,1,['error'],['error']
Availability,"Adding link back to original discussion: https://forum.image.sc/t/potential-bug-with-load-pixel-classifier-show-as-text-qupath-v0-4-3/80470. Haven't figured out exactly what aspect of the script is troublesome, so haven't come up with a proper minimal non-working example yet :/. Even without that, we can assume that a proper solution involved removing use of regex from the [styler classes](https://github.com/qupath/qupath/tree/v0.4.3/qupath-extension-script-editor/src/main/java/qupath/lib/gui/scripting/richtextfx/stylers)... or at least handling styling errors more quietly, without having an exception pop up.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1264#issuecomment-1532779834:560,error,errors,560,https://qupath.github.io,https://github.com/qupath/qupath/issues/1264#issuecomment-1532779834,1,['error'],['errors']
Availability,"Addresses https://github.com/qupath/qupath-extension-instanseg/issues/88. It feels awkward to use a static `WeakHashMap` but it seems the easiest way to solve the performance issue without complicating the API with more methods to mask objects (taking `Geometry` or `PreparedGeometry`). With this change, the original problematic image becomes bound by the inference speed rather than the geometry operations - as it should be.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1639:231,mask,mask,231,https://qupath.github.io,https://github.com/qupath/qupath/pull/1639,1,['mask'],['mask']
Availability,"After removing jpen jar files one by one I got this:. ```; 12:48:39.843 [JavaFX Application Thread] [ERROR] qupath.lib.gui.dialogs.Dialogs - Extension error: Error loading extension - check 'View -> Show log' for details.; 12:48:40.031 [JavaFX Application Thread] [ERROR] qupath.lib.gui.QuPathGUI - qupath.lib.gui.extensions.QuPathExtension: qupath.lib.gui.tools.jpen.JPenExtension Unable to get public no-arg constructor; java.util.ServiceConfigurationError: qupath.lib.gui.extensions.QuPathExtension: qupath.lib.gui.tools.jpen.JPenExtension Unable to get public no-arg constructor; ```. I guess I'd need to comment out some code too. I can probably figure that out. I'll also try it on Windows later, because the same tests used to fail there too, so that might just work now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-642570985:101,ERROR,ERROR,101,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-642570985,4,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"Ah ok, it should be a pyramidal TIFF then. Are you running QuPath on Linux, by any chance? Or what platform? Do you see any error message when you try, either popping up or under *View &rarr; Show log*?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371741529:124,error,error,124,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371741529,1,['error'],['error']
Availability,"Ah ok, then I'm afraid I have no idea and no way to reproduce the problem. It is working for me on all my test systems (but I haven't got CentOS installed anywhere). I can't see any obvious clues to a problem within QuPath's code from the error. The versions of Java, JavaFX and jpackage have been updated for v0.3.0, not sure if that is related. One option would be to try [building from source](https://qupath.readthedocs.io/en/stable/docs/reference/building.html) using a different JDK, or launch using `./gradlew run` (which would skip the jpackage part).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/825#issuecomment-925047351:239,error,error,239,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925047351,1,['error'],['error']
Availability,"Ah, my best guess was wrong. But now that I know the image, I have tried it out... and it opens for me on my Mac, also 10.13.3, without problems (using OpenSlide). Do all .tif whole slide images fail for you in QuPath? Do any other formats work (e.g. SVS or NDPI - there are freely available test images on the OpenSlide website)?. A lot of that error message comes from the failed Bio-Formats attempt - you might want to remove or disable it since it didn't solve the problem. But the log shows that OpenSlide was also tried without success.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371778042:282,avail,available,282,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371778042,2,"['avail', 'error']","['available', 'error']"
Availability,"Ah, seems not to be the issue I linked to then... but rather a 'normal' (albeit very poorly handled) memory error. Do you have more memory that you could make available to QuPath, or try reducing parallelization? ; There are some suggestions at https://github.com/qupath/qupath/wiki/Troubleshooting. Out-of-memory errors are (somewhat) inevitable when pushing things particularly hard, but if this results in completely losing .qpdata files then that definitely sounds like a bug that needs fixed. I will try to reproduce the problem and see if I can make it at least fail less catastrophically... and ideally not at all.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-493945197:108,error,error,108,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493945197,3,"['avail', 'error']","['available', 'error', 'errors']"
Availability,"Ah, sorry, I made this change on 0.4.3 where I was working on the extension and switched to main to cherry-pick without testing. The context I spotted it is definitely an edge case. 1. zoom in an arbitrary amount, say past 1x; 2. Click ""Adjust zoom for all images to fit the entire image in the viewer""; 3. Image downsample factor changes but displayed magnification doesn't. But this is fixed in main already it seems. Sorry!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1279#issuecomment-1639814876:313,down,downsample,313,https://qupath.github.io,https://github.com/qupath/qupath/pull/1279#issuecomment-1639814876,1,['down'],['downsample']
Availability,"Ah, thanks @melvingelbard - so it *is* OpenCV-related. That's really good to know, seems to confirm my suspicions although I have no clue why. It also seems to be specifically the `org.bytedeco.opencv.global.opencv_imgproc` class - assuming object classifiers are working, then `opencv_core` and `opencv_ml` must be ok. If you still have access to the computer, you could check if pixel classifiers work - since they use `opencv_imgproc` as well. If they do, perhaps the problem is more restricted. If launched from a command line, there might be more detailed errors emitted at some point. On Windows, that can be done simply by using the console exe launcher. On a Mac, it means running something like this from a terminal `/Applications/QuPath.app/Contents/MacOS/QuPath` (exact path might need changed).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/776#issuecomment-873087104:561,error,errors,561,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-873087104,1,['error'],['errors']
Availability,"Ah, that will be a Pete question, but I don't know of any way currently. It took a bit of work for me to get find new _mean_ stain intensities for the nucleus/cytoplasm when applying a variety of color vectors for multiplexing... ; I suspect the nucleus would be doable since that is a stand alone ROI, especially if you dig into the java files (the pixel by pixel cytoplasmic values, as far as I know, are only used as the cells are generated), but the cytoplasm might be more difficult. ; The file I am thinking about is: https://gist.github.com/Svidro/eaf29399e36d34caacddf345ab668b0c#file-watershedcelldetection-java; That is a version of it that I edited to use % of different color vectors for the nuclear detection, rather than just OD sum or Htx. That is where I would recommend starting if you want to try to insert an IQR measurement. But I really don't know!. It would be nice to have that information available, if you/Pete can get it working, but I don't think I can help much more here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/236#issuecomment-433484202:913,avail,available,913,https://qupath.github.io,https://github.com/qupath/qupath/issues/236#issuecomment-433484202,1,['avail'],['available']
Availability,"Ah, this is a harder one to work around... the problem is that QuPath strictly requires that the pixel size information is available in microns when using OpenSlide (which is the case here). Unfortunately, your newly-created pyramidal TIFF seems to be missing this information. I need to look into updating QuPath to support customizing this pixel size information when it's missing, rather than just refusing to open the image. Realistically this will take some weeks at least, although I'll report back here if I can think of a workaround in the short term. In the meantime, if you can find some way of adding the pixel size information (if known) to the TIFF in an OpenSlide-friendly way then that should also resolve the issue. Please do let me know if you manage to do this, as it could be useful in general. (Incidentally, do you know the origin of the TIFF? Is there any way to get the pixel size information - or even go back to the original software that wrote the TIFF in the first place and export the file directly into a different format?)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/221#issuecomment-423807718:123,avail,available,123,https://qupath.github.io,https://github.com/qupath/qupath/issues/221#issuecomment-423807718,1,['avail'],['available']
Availability,"Aims to fix https://github.com/qupath/qupath/issues/865; This takes a different approach to parallelization, managing a pool of ImageReaders with each tile-requesting thread taking the next available reader.; If there are no readers available, and the total number is less than some maximum value (based upon the number if available processors), a new reader is generated on another thread and added to the queue when ready. This should; * avoid generating more readers than needed, with a limit separate from the number of tile requesting threads; * avoid attempting to initialize multiple readers simultaneously, which can be a bottleneck. In addition, more tests have been added.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/867:190,avail,available,190,https://qupath.github.io,https://github.com/qupath/qupath/pull/867,3,['avail'],['available']
Availability,"All of a sudden, a project that I am currently working on will not open in QuPath via different methods. I am running Windows 10, and when I:. - When I try to double click on the project file in file explorer, nothing happens. - When I try to open the project within QuPath, I get a ""Could not read project from project.qpproj"" error. - When I try to drag the project file from file explorer to the QuPath window (I'm not sure if this is even a valid way to open a project?), I get a ""java.lang.NullPointerException"" error. Thanks in advance!!. Chris",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/613:328,error,error,328,https://qupath.github.io,https://github.com/qupath/qupath/issues/613,2,['error'],['error']
Availability,"Already loaded sounds like a the right error to see. I don't encounter any zooming problem when I use my touchscreen (without a pen) and don't recall having made any changes in this regard since v0.1.3. I can use the brush comfortably with the touchscreen & my finger, and it only zooms if I 'swipe' at the end of the gesture - otherwise the image is static. Is this also what you see? Since it turns out that JPen works after all, I really don't have enough information to know _exactly_ what problem you are reporting, when it occurs, how to reproduce it and with precisely what settings enabled in QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-479825671:39,error,error,39,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479825671,1,['error'],['error']
Availability,Another attempt to fix https://forum.image.sc/t/error-during-building-from-source/73322/,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1101:48,error,error-during-building-from-source,48,https://qupath.github.io,https://github.com/qupath/qupath/pull/1101,1,['error'],['error-during-building-from-source']
Availability,"Another example... zoomed in much more, and the distinction is more obvious when the boundaries are tracing pixels. ## Previous. ![Older-unconvincing](https://github.com/user-attachments/assets/53dff476-2374-4ab1-933c-3ef40a8b3300). ### With this PR. ![Newer-questionable](https://github.com/user-attachments/assets/a6f3af0a-c680-4ec2-aedf-3a24b522dcae). Note that when viewing at a downsample ≥ 1, there is no difference in behavior.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1623#issuecomment-2332558420:383,down,downsample,383,https://qupath.github.io,https://github.com/qupath/qupath/pull/1623#issuecomment-2332558420,1,['down'],['downsample']
Availability,"Another possibility for TMAs might be something like ; ```; getDetectionObjects() each {detection -> detection.setName(detection.getParent().getName())}; fireHierarchyUpdate(); ```; in order to name all cells after their parent TMA core (assuming no other annotations have been drawn at this point). . At that point, there could be a list of TMA cores you wanted to apply that particular classifier to which the script checks before applying the current classification steps. ; Downside: you would have to create both the list and each classifier. ; Upside: you would have complete control over the classifier and once created it would be easy to apply across many TMAs. PS. It might be more streamlined to check the parent annotation name within the classifier script against the list, though.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/57#issuecomment-289249459:478,Down,Downside,478,https://qupath.github.io,https://github.com/qupath/qupath/issues/57#issuecomment-289249459,1,['Down'],['Downside']
Availability,"Another way would be to change the opacity of the stromal (etc) colors to 1%. It refuses to allow 0% for full transparency, but if you double click on the color in the annotation tab, select Custom Color, you can manually turn down the opacity to 1%, which may be good enough. I am not sure how to do this in a script, however.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/108#issuecomment-335863365:227,down,down,227,https://qupath.github.io,https://github.com/qupath/qupath/issues/108#issuecomment-335863365,1,['down'],['down']
Availability,"Another workaround in your case could be a script like this:; ```groovy; def hierarchy = getCurrentHierarchy(); for (annotation in getAnnotationObjects()) {; hierarchy.getSelectionModel().setSelectedObject(annotation); runPlugin('qupath.imagej.detect.nuclei.PositiveCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true, ""thresholdCompartment"": ""Nucleus: DAB OD mean"", ""thresholdPositive1"": 0.2, ""thresholdPositive2"": 0.4, ""thresholdPositive3"": 0.6, ""singleThreshold"": true}');; }; ```; Or you could set the number of threads in a script:; ```groovy; import qupath.lib.gui.prefs.PathPrefs; PathPrefs.setNumCommandThreads(1); // Do other things... e.g.; selectAnnotations(); runPlugin('qupath.imagej.detect.nuclei.PositiveCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true, ""thresholdCompartment"": ""Nucleus: DAB OD mean"", ""thresholdPositive1"": 0.2, ""thresholdPositive2"": 0.4, ""thresholdPositive3"": 0.6, ""singleThreshold"": true}');; PathPrefs.setNumCommandThreads(Runtime.getRuntime().availableProcessors()) // The default; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/110#issuecomment-337002695:1724,avail,availableProcessors,1724,https://qupath.github.io,https://github.com/qupath/qupath/issues/110#issuecomment-337002695,1,['avail'],['availableProcessors']
Availability,"Any time I click Run for Add Intensity Features and have a one channel; selected and am running at least the mean. But so far only in the LuCa; image (of the few I have tested). Fairly regular cell generation parameters.; ![image](https://user-images.githubusercontent.com/23145209/61767453-2a224000-ad99-11e9-9422-582c1f37723a.png). On Tue, Jul 23, 2019 at 10:16 PM Pete <notifications@github.com> wrote:. > When is the error generated?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/301?email_source=notifications&email_token=AFQSV6KEL332YBYM5ENN5ATQA7QRPA5CNFSM4HDEAJ5KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD2VGFYA#issuecomment-514482912>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AFQSV6I7Q5KND67GRIGVTQLQA7QRPANCNFSM4HDEAJ5A>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/301#issuecomment-514484941:421,error,error,421,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514484941,1,['error'],['error']
Availability,"As @Svidro says, QuPath doesn't modify the whole slide images - and nor can it write a whole slide image itself (unless you were to do all the low-level stuff in a script yourself - just about anything should be possible then). Personally, I've never needed this functionality; or, more accurately, I've always found a way around it that was much easier than solving the problem of writing an entirely new whole slide image. These include:; * Exporting the original pixels along with the binary image (e.g. if using the masks to define training regions to create a new algorithm); * Exporting the binary image at a low resolution, and either exporting the scaling factor (downsample) or approximating this later based on the width & height compared to the original; * Exporting cropped regions, and including the bounding box and scale information in the file name; * Exporting cropped regions as ImageJ TIFFs, where QuPath is able to set the key information in the image properties to facilitate reading the regions back later. QuPath requests pixels using `RegionRequest` objects. To generate a string containing the key information from a `RegionRequest` you might use the following:; ```groovy; String name = String.format('%s_(%.2f,%d,%d,%d,%d)',; server.getShortServerName(),; request.getDownsample(),; request.getX(),; request.getY(),; request.getWidth(),; request.getHeight(); ); ```; The script [here](https://petebankhead.github.io/qupath/scripting/2018/03/14/script-export-labelled-images.html) uses this when exporting to include this information in the file name. If none of these methods seem like they would work for you, it would help if you describe a bit more what you need the final output for and what software you would be using next to read the images.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/95#issuecomment-388535578:520,mask,masks,520,https://qupath.github.io,https://github.com/qupath/qupath/issues/95#issuecomment-388535578,2,"['down', 'mask']","['downsample', 'masks']"
Availability,"As I mentioned (each time you brought this up :) ) the approach you have taken creates a dependency on `ImageDisplay` that I *really* do not want to be stuck with. It creates an awkward confusion between the GUI and core code that will be a maintenance headache, and would greatly complicate trying to implement a better design later. I added the alternative scripting methods that I linked to before precisely because you asked for it. Running that for a project is the solution I propose. It uses `ImageDisplay` internally (because it has to), but doesn't expose this publicly. Romain's comment wasn't a question, it seemed you had a solution you were satisfied with, and I received no reply to the changes I made for you except for 👍 so it remains very unclear to me what you want...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-632627020:241,mainten,maintenance,241,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-632627020,1,['mainten'],['maintenance']
Availability,"As I mentioned at both https://github.com/qupath/qupath/issues/363#issuecomment-606369334 and https://github.com/qupath/qupath/issues/426 the *next* release of QuPath will use JDK 14; v0.2.0-m9 does not (because it was not released at the time, and the version of Gradle used with it is not compatible with JDK 14). If you want v0.2.0-m9, you should follow the build instructions I posted under the above links using JDK 13 to build, but pointing to jpackage within JDK 14. It's cumbersome, but necessary because of the incompatibilities and the fact JDK 14 is extremely new. Otherwise you can build from the dev branch using JDK 14 or wait until v0.2.0-m10 is available. I will update the build documentation at that time. > **Please avoid creating issues for anything other than bug reports, and do not create multiple issues for the same thing. Use [the forum](http://forum.image.sc/tags/qupath/) for questions instead, as requested in the documentation and on the 'Issues' page itself.**; > ; > <img width=""696"" alt=""Issues"" src=""https://user-images.githubusercontent.com/4690904/71262757-5afea500-2338-11ea-8c14-91f68652c70b.png"">",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/427#issuecomment-606731627:661,avail,available,661,https://qupath.github.io,https://github.com/qupath/qupath/issues/427#issuecomment-606731627,1,['avail'],['available']
Availability,"As a bonus, here's how to write cores in parallel - this time as JPEGs:; ```groovy; import javax.imageio.ImageIO; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); def path = server.getPath(); getTMACoreList().parallelStream().forEach({core ->; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, core.getROI())); ImageIO.write(img, 'JPEG', new File(dirOutput, core.getName() + '.jpg')); }); print('Done!'); ```. This should give a bit of a speedup. Hopefully some combination of this or the other script will help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/97#issuecomment-327535268:206,down,downsample,206,https://qupath.github.io,https://github.com/qupath/qupath/issues/97#issuecomment-327535268,2,['down'],['downsample']
Availability,"As a follow up to the image.sc thread (https://forum.image.sc/t/feature-suggestion-option-to-revert-to-last-state-on-cancelling-script-run/74486), there could be a quicker way to cancel a running script and regain control of QuPath. Currently, on cancelling a script, QuPath will continue to run the current script until completion for the current image. For complex scripts, this can take a long time, from minutes to hours. I would imagine that for most users, when they cancel a running script, they would expect it to halt immediately and regain control of QuPath. Example scenarios for this would be:; - The user quickly notices some errors or mistakes in the script just after running it and would like to correct it.; - The script is running for an unusually long time and the user would like to investigate why (e.g. too many objects created or manipulating extremely complex ROIs?). At the time of writing, I and other users would just close QuPath or kill its instance and re-open the project to ""cancel"" the script run. It is unclear if this may cause data corruption or any other negative consequences. One small inconvenience for this method is that any unsaved scripts in the Script Editor will be lost, which can be the case when testing or optimising parameters. I have suggested in the image.sc thread if there is a way to revert to the last state just before running the script when trying to cancel the script run. From my naive perspective, it could be like:. For scripts running on the currently open image only, on clicking Run,; 1. Save current state of image before running the script.; 2. Start running the script.; 3. If run is cancelled, load the state saved in step 1. For scripts running in batch, on clicking Run for project,; 1. Start running script as usual.; 2. If run is cancelled, ignore whatever that has been done on the current image being processed and maintain the last saved image data. Any images that had already completed processing the script would have an",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1167:639,error,errors,639,https://qupath.github.io,https://github.com/qupath/qupath/issues/1167,1,['error'],['errors']
Availability,"Attempt to resolve https://github.com/qupath/qupath/issues/744. The underlying problem is that concurrent modification exceptions occurred whenever nDescendants() was called by the UI thread while another thread was adding/removing objects. Adding *more* synchronization to try to overcome this resulted in deadlocks. This commit tries to resolve the issue in two ways:; - Making the childList a synchronized collection (actually a Set); - Reducing synchronization on the PathObject itself, and synchonizing more sparingly on the childList. This is hopefully sufficient to avoid simply counting objects in one thread interfering with adding/removing objects in another. Since most adding/removing access is via a PathObjectHierarchy, counting is (I think...) the main concurrency risk, and the resulting code should be more robust. Along the way, the childList was also given a better default capacity.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/750:824,robust,robust,824,https://qupath.github.io,https://github.com/qupath/qupath/pull/750,1,['robust'],['robust']
Availability,"Attempts to fix https://github.com/qupath/qupath/issues/1527. This tries to take a conservative approach that should fix the most common occurrence of this: basically, if a request is made for to get the 'last' pixels on the right or bottom of the image, then a check is made to see if this can be fulfilled using the available lower resolution tiles. If the tiles don't quite make it (due to the lower pyramid levels being truncated), then a slightly smaller image can be returned - typically missing the last row and/or column. The unfortunate consequence would be that we can't compute the returned image size based upon the `RegionRequest` (width, height and downsample) - because this might have been internally adjusted. To handle that, we resize then to fit expectations. It feels messy and suboptimal, but failing to do this can result in black rows or columns appearing - which can thwart thresholds and image statistics and certain resolutions, and this is more problematic.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1531:318,avail,available,318,https://qupath.github.io,https://github.com/qupath/qupath/pull/1531,2,"['avail', 'down']","['available', 'downsample']"
Availability,Avoid confusing / by zero error when auto-setting image type fails,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/885:26,error,error,26,https://qupath.github.io,https://github.com/qupath/qupath/pull/885,1,['error'],['error']
Availability,"Awesome @petebankhead, yeah it's the first time someone uses an ImageJ server with rotation so we were quite at a loss too. Noticing that it worked with the BioFormats server saved the user's project and helped narrow down the issue a bit.; Thanks so much for looking into it!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1138#issuecomment-1317589117:218,down,down,218,https://qupath.github.io,https://github.com/qupath/qupath/issues/1138#issuecomment-1317589117,1,['down'],['down']
Availability,"B"", ""Values 2"" : ""0.15891 0.36799 0.91615 "", ""Background"" : "" 210 208 209 ""}');; Thread.sleep(100); runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; Thread.sleep(100); selectAnnotations();; Thread.sleep(100); runPlugin('qupath.imagej.detect.nuclei.WatershedCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 14.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.09, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; Thread.sleep(100). Error log:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:1985); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.clearSelection(TableView.java:2733); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2928); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItems",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424986075:1742,Error,Error,1742,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075,1,['Error'],['Error']
Availability,"BTW, binaries for OpenCV on macosx-arm64 are available in the snapshots: http://bytedeco.org/builds/; Would you mind giving that a try with a native (ARM64) version of the JDK?; At the moment, such builds of the JDK seem to be available from at least Azul, Microsoft, and Oracle here: ; https://www.azul.com/downloads/?os=macos&architecture=arm-64-bit&package=jdk; https://github.com/microsoft/openjdk-aarch64/releases/tag/jdk-16.0.2-ga; https://jdk.java.net/17/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1018240811:45,avail,available,45,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018240811,3,"['avail', 'down']","['available', 'downloads']"
Availability,"BTW, the C++ API of PyTorch has no such limitations when it comes to this kind of semantic segmentation, and we can easily use it from Java: https://github.com/bytedeco/javacpp-presets/tree/master/pytorch. There is some sample code in C++ available here: https://github.com/AllentDan/LibtorchSegmentation. @HGuillemet might have some sample code in Java to offer. However, I don't believe it supports algorithms like logistic regression and SVM...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1092348518:239,avail,available,239,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092348518,1,['avail'],['available']
Availability,"BUG:. WSI image will pixelate when trying to access deeper levels of magnification. Tested the soft in two different Macs with the same OS and the same happens. . To reproduce:. 1- Select Open and then the WSI image in .tif format.; 2- Two files are available: Image and the Mask. Select the Image and select Open.; 3- A dialogue will appear to select type of Image: select bright filed H&E; 4- Scroll with the mouse to activate zoom or with right-click, select display and then different levels of zoom. . Expected behavior; With the scroll, zoom should access higher levels of magnification and the image should not be pixelated. Cells must be able to be seen. . Desktop; MACOS Monterey 12.4, 2GHZ Core i5 (2 cores), 8GB 1867 MHZ DDR3, Intel iris 540 1036 MB; QuPath version 0.3.2, Max memory JVM may try to use: 4096 MB. ![DD0F3384-7024-455E-98AC-3916959D9B95](https://user-images.githubusercontent.com/53937441/170973697-316e32c0-6f1f-4de1-9d3e-d6a6134a34e3.jpeg)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/973:250,avail,available,250,https://qupath.github.io,https://github.com/qupath/qupath/issues/973,2,"['Mask', 'avail']","['Mask', 'available']"
Availability,"Back after a long delay... @kwiechen I didn't know of Spack but it looks interesting. Only issue is that we don't actually need OpenSlide only, but rather [OpenSlide Java](https://github.com/openslide/openslide-java). I created a [Homebrew tap](https://github.com/petebankhead/homebrew-qupath) that handles this, and works - but would require users to install locally and then has some awkward path issues to deal with. I found Homebrew installation on Mac straightforward... on Ubuntu, not so much. I wonder if trying to get OpenSlide Java into some familiar package manager is the best way to go. If the installation is easy enough, I guess Linux users probably won't mind and Mac users might tolerate it (and Windows users can still have the 'official' binaries made available by the OpenSlide devs). Alternatively, when Java's [foreign function & memory API](https://openjdk.org/jeps/424) stabilizes then perhaps it'll be possible to skip the current Java JNI stuff, and just use the existing package manager support for OpenSlide without Java. @delta2golf tifffile is a Python library, so unfortunately won't help here since QuPath is written in Java. @jcupitt thanks very much for these suggestions. It sounds trickier than I'd hoped, but also promising - I'll try to find a free day when my optimism levels are high enough to give this a proper go.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1346032726:695,toler,tolerate,695,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1346032726,2,"['avail', 'toler']","['available', 'tolerate']"
Availability,"Because I'm not very good at GitHub Actions. Which is also why I have to download the Linux stuff to make the tar.xz locally (and possibly Windows .zip? not sure if that's fixed), and why we end up with some packaged builds we never use (like the macOS .app).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1460#issuecomment-1936081052:73,down,download,73,https://qupath.github.io,https://github.com/qupath/qupath/pull/1460#issuecomment-1936081052,1,['down'],['download']
Availability,"Before doing that, could you check if there's anything is in https://openjfx.io/javadoc/11/javafx.graphics/javafx/scene/input/MouseEvent.html that could help?. I *think* the issue may be because there's no test for the event type in your current code - and so it could be fired on a mouse move event as well (with the middle button down). So I think you need to check for a pressed, released or click event (I forget which... this is a place were cross-platform stuff can be annoying). I've never used [`isStillSincePressed()`](https://openjfx.io/javadoc/11/javafx.graphics/javafx/scene/input/MouseEvent.html#isStillSincePress()) because I don't discovered it recently, but perhaps it can also help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1219670857:332,down,down,332,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1219670857,1,['down'],['down']
Availability,"Before submitting your bug report, please check the following:. * [X] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [X] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [X] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [X] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; Building QuPath from source as described below with CUDA GPU support will throw an error, meaning the official 0.4.0 release (built 2022-12-07) cannot run StarDist on GPUs. Tested with RTX 3090 and GTX 1660 Ti GPUs. I have a version of QuPath built on 2022-11-21 which has no problem running StarDist on the GPU, so it's likely tied to any commits between this period. Issue taken from forum post: https://forum.image.sc/t/stardist-gpu-support-unknown-error/74779. **To Reproduce**; Steps to reproduce the behavior:; 1. Build QuPath from source using the following command:; ```; git clone https://github.com/qupath/qupath; cd qupath; ./gradlew clean jpackage -Pcuda-redist; ```; 2. Install either the 0.3.2 or 0.4.0 releases of the StarDist extension: https://github.com/qupath/qupath-extension-stardist/releases; 3. Download pretrained models in .pb format; 4. Draw an annotation on a brightfield image; 5. Download the following script: https://github.com/MarkZaidi/Universal-StarDist-for-QuPath/blob/main/GPU_Multimodal%20StarDist%20Segmentation.groovy; 6. Run the script; 7. Observe the following error message:; ```; INFO: Performing detection on Brightfield image using single-channel trained model; INFO: [Annotation]; ERROR: OpenCV(4.6.0) D:\a\javacpp-presets\javacpp-presets\opencv\cppbuild\windows-x86_64-gpu\opencv-4.6.0\modules\dnn\src\cuda4dnn\csl\memory.hpp:54: error: (-217:Gpu API call) the provided PTX was compiled with an u",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1180:641,error,error,641,https://qupath.github.io,https://github.com/qupath/qupath/issues/1180,2,['error'],['error']
Availability,"Below is the command-line output if I run from command line instead of GUI:; We can see that the path was a combination of two paths, this is the problem. >> RMD_slide2ims_Entry; 23:18:18.288 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, D:\\QMDownload\\5\\Leica_scn\\Leica-Fluorescence-1.scn, -script, D:\\QMDownload\\5\\tpc9321172_2c3b_4e82_b55c_7ae4380fda4b.groovy ; 23:18:18.368 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!! ; 23:18:18.428 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1 ; WARNING: An illegal reflective access operation has occurred ; WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/C:/Program%20Files/QuPath-0.2.0-m1/app/kryo-2.24.0.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object) ; WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 23:18:19.436 [main] [WARN ] loci.formats.Memoizer - deleting invalid memo file: D:\QMDownload\5\Leica_scn\.Leica-Fluorescence-1.scn.bfmemo ; com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 458; Serialization trace:; service (loci.formats.in.OperettaReader); readers (loci.formats.ImageReader); reader (loci.formats.DimensionSwapper); reader (loci.formats.FileStitcher); helper (loci.formats.in.FilePatternReader); readers (loci.formats.ImageReader) ; 	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:119) ; 	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:641) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:375) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$Obje",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:412,ERROR,ERROR,412,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['ERROR'],['ERROR']
Availability,"Bio-Formats server options (Bio-Formats 6.2.0) (20 ms); 10:11:48.235 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (19 ms); 10:11:48.278 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (42 ms); 10:11:48.290 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (12 ms); 10:11:48.294 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension OpenCV extensions (3 ms); Oct 13, 2019 10:11:48 AM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; Oct 13, 2019 10:11:48 AM jpen.provider.NativeLibraryLoader$4 run; INFO: jpen-2-4-x86_64 loaded; WARNING: An illegal reflective access operation has occurred; WARNING: Illegal reflective access by org.codehaus.groovy.vmplugin.v7.Java7$1 (file:/usr/local/src/QuPath-0.2.0-m4/app/groovy-2.5.7.jar) to constructor java.lang.invoke.MethodHandles$Lookup(java.lang.Class,int); WARNING: Please consider reporting this to the maintainers of org.codehaus.groovy.vmplugin.v7.Java7$1; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations; WARNING: All illegal access operations will be denied in a future release; 10:11:48.594 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Rich script editor extension (300 ms); 10:11:48.603 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1; 10:11:48.698 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: null; 10:11:48.698 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 10:11:48.704 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []. (QuPath-0.2.0-m4:17581): Gdk-WARNING **: 10:11:48.706: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; ```",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/369:3951,error,error,3951,https://qupath.github.io,https://github.com/qupath/qupath/issues/369,1,['error'],['error']
Availability,Black row or column appears on some downsampled images,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1527:36,down,downsampled,36,https://qupath.github.io,https://github.com/qupath/qupath/issues/1527,1,['down'],['downsampled']
Availability,"Both of these issues are now addressed in `v0.0.5`. For now, running _Add intensity features_ will _always_ result in a prompt to confirm which objects will be used - to help force more deliberate choices. Additionally, large regions will be automatically split into tiles. Provisional checks suggest the results are almost identical to the untiled measurements - although further tests are needed. Some small loss in precision is to be expected compared to the 'true' measurement without tiling (e.g. with Haralick features, were adjacencies across tile boundaries will not be computed), but this should be low... and better than QuPath hanging, or an out-of-memory error. Currently, the _implicit_ tiling of large ROIs for the purposes of avoiding memory errors does not make use of parallelization. Therefore it is still _not_ advisable to compute measurements across very large areas at high resolution. However, it is expected that this shouldn't often be needed, because:; 1. the most useful measurement for a large region is the average intensity, which can be computed at a low resolution with good accuracy, and; 2. measurements of texture (e.g. standard deviation, or Haralick textures) are rarely meaningful when computed over very large numbers of pixels, but rather are more normally computed individually for (explicitly-created) tiles generated within such an the area (e.g. using the _Create tiles_ command). Intensity measurements made for _separate_ objects (including tile objects) will be parallelized, as normal.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/15#issuecomment-258995011:667,error,error,667,https://qupath.github.io,https://github.com/qupath/qupath/issues/15#issuecomment-258995011,2,['error'],"['error', 'errors']"
Availability,"Both of these issues should now be addressed in `v0.0.5`. Error messages are shown if no objects are selected, or if a region is selected which is particularly large.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/13#issuecomment-259152982:58,Error,Error,58,https://qupath.github.io,https://github.com/qupath/qupath/issues/13#issuecomment-259152982,1,['Error'],['Error']
Availability,"Bug fixes for:; * Resetting annotation name https://github.com/qupath/qupath/issues/661; * Error when manifest missing https://github.com/qupath/qupath/issues/664; * Errors when setting invalid magnifications, referred to at https://github.com/qupath/qupath/pull/668#issuecomment-791565911",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/674:91,Error,Error,91,https://qupath.github.io,https://github.com/qupath/qupath/pull/674,2,['Error'],"['Error', 'Errors']"
Availability,"Bump JTS to v1.18.2, fix javadoc error",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/810:33,error,error,33,https://qupath.github.io,https://github.com/qupath/qupath/pull/810,1,['error'],['error']
Availability,"Bump dependencies and attempt to avoid ConcurrentModificationExceptions when clearing the waitingMap.; These could occur (rarely) when using Measurement maps. Since the errors were hard to reproduce, it's not entirely clear if they are solved.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/724:169,error,errors,169,https://qupath.github.io,https://github.com/qupath/qupath/pull/724,1,['error'],['errors']
Availability,"CV , given the exception `OpenCV(4.5.3) D:\a\javacpp-presets\javacpp-presets\opencv\cppbuild\windows-x86_64\opencv-4.5.3\modules\core\src\channels.cpp:141: error: (-215:Assertion failed) i1 >= 0 && j < ndsts && dst[j].depth() == depth in function 'cv::mixChannels'`. OpenCV's mixChannels: https://docs.opencv.org/3.4/d2/de8/group__core__array.html#ga51d768c270a1cdd3497255017c4504be. For now, I've been reducing the number of channels passed, which gives me a training accuracy of ~88%. But it would be great to train on all available data, and see what the variable importance is of each feature and channel. **To Reproduce**; Steps to reproduce the behavior:; 1. Create a project with ~143 IMC images; 2. Annotate structures within ~38 images with 5 different classifications of annotations; 3. Open a non-annotated image; 4. Attempt to train a pixel classifier using all channels, scales, and features, loading training from other annotated images in the project.; 5. Click ""Live Preview"", note the error at the end of the post. **Expected behavior**; A pixel classifier should be trained, and a preview should be applied to the currently loaded image. **Desktop (please complete the following information):**; - OS: Windows 10, 32-thread processor, 127/128 Gb RAM allocated for QuPath, ~500 Gb SSD storage for tile cache; - QuPath Version 0.3.2. **Additional context**; Error log:; ```; 12:10:44.040 [JavaFX Application Thread] [INFO ] q.p.g.c.ml.PixelClassifierPane - Creating training data from 38 images; 12:10:44.953 [JavaFX Application Thread] [ERROR] q.p.g.c.ml.PixelClassifierTraining - Error requesting features for ImageOp server: ImageData: Other, xxxx___ROI8_ROI_008.ome.tiff - ROI8_ROI_008.ome {""colorTransforms"":[{""channelName"":""Pr(141)_141-SMA""},{""channelName"":""Nd(142)_142Nd-CD19""},{""channelName"":""Nd(143)_143Nd-Vimentin""},{""channelName"":""Nd(144)_144Nd-cd14""},{""channelName"":""Nd(146)_146NdCD16""},{""channelName"":""Nd(148)_148-Pan-Ker""},{""channelName"":""Sm(149)_149Sm-CD11b""},{""channelN",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947:1622,error,error,1622,https://qupath.github.io,https://github.com/qupath/qupath/issues/947,1,['error'],['error']
Availability,"Can anyone help me with any suggestions, please? I am not able to open the images although the project file is opening I am getting an error message: Caused by Unable to build ImageServer for file. Thank you,",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/396#issuecomment-826477900:135,error,error,135,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-826477900,1,['error'],['error']
Availability,Can confirm errors on Win10 0.3.0 SNAPSHOT as well. Cell classes do not change upon reload.; ```; ERROR: QuPath exception: OpenCV(4.5.1) modules\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. java.lang.RuntimeException: OpenCV(4.5.1) modules\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. at org.bytedeco.opencv.opencv_core.Algorithm.read(Native Method); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:258); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:188); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:270); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:261); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:131); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:222); at com.google.gson.TypeAdapter.fromJsonTree(TypeAdapter.java:285); at qupath.lib.io.GsonTools$SubTypeAdapterFactory$SubTypeAdapter.read(GsonTools.java:243); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.Gson.fromJson(Gson.java:932); at com.google.gson.Gson.fromJson(Gson.java:870); at qupath.lib.projects.ResourceManager$JsonFileResourceManager.readFromFile(ResourceManager.java:338); at qupath.lib.projects.ResourceManager$FileResourceManager.get(ResourceManager.java:197); at qupath.process.gui.commands.ObjectClassifierLoadCommand.getClassifier(ObjectClassifierLoadCommand.java:392); at qupath.process.gui.commands.ObjectClassifierLoadCommand.runClassifier(ObjectClassifierLoadCommand.java:329); at qupath.process.gui.commands.ObjectClassifierLoadCommand.l,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/752#issuecomment-866148194:12,error,errors,12,https://qupath.github.io,https://github.com/qupath/qupath/issues/752#issuecomment-866148194,4,"['ERROR', 'error']","['ERROR', 'error', 'errors']"
Availability,"Can somewhat resolve item 2 by adding this:. ```java; 				ImageRow selectedImageRow = getSelectedImageRow();; 				refreshTree(selectedImageRow);; ```; to the end of `actionAddMetadataValue`, although this isn't a particularly robust way of doing it in case metadata are edited elsewhere",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1537#issuecomment-2139690675:226,robust,robust,226,https://qupath.github.io,https://github.com/qupath/qupath/issues/1537#issuecomment-2139690675,1,['robust'],['robust']
Availability,Cannot import class XmlSlurper error at Windows,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/238:31,error,error,31,https://qupath.github.io,https://github.com/qupath/qupath/issues/238,1,['error'],['error']
Availability,Cell Detection Error On Large TIF File,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/69:15,Error,Error,15,https://qupath.github.io,https://github.com/qupath/qupath/issues/69,1,['Error'],['Error']
Availability,"Change looks good and should fix the main problem, but if I understand it correctly it won't restore the default classifications - so the message might be a bit misleading. We *could* reset the preference, but retaining the last valid class list makes sense too. Perhaps just change the message to; ```java; logger.error(""Classification list too long ({} bytes) - cannot save it to the preferences."", bytes.length);; ```; Would that make sense?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/633#issuecomment-719684705:315,error,error,315,https://qupath.github.io,https://github.com/qupath/qupath/pull/633#issuecomment-719684705,1,['error'],['error']
Availability,"Changelog:; ------------; * Completely revised projects; * New image importer, supports drag & drop for multiple images; * Specify image rotation on import; * Automatically check URIs when opening projects, attempt to resolve relative paths; * Fix broken paths through the user interface (rather than editing the .qpproj file manually); * Use the same image reader each time (e.g. OpenSlide, Bio-Formats); * Right-click in the project pane to add metadata for one or more selected images; * Store custom server metadata (double-click pixel sizes under the 'Image' tab to fix them); * Add support for more complex images via ServerBuilders (useful in the future...); * Adjust project pane thumbnail size in preferences; * Allow duplicate images in projects; * Viewer updates; * Improved touch gesture support; * New, perceptually uniform color tables for measurement maps; * Fixed bug with right-click being unresponsive on some Mac laptops; * Smoother Brush tool behavior; * Wand tool now pressure-sensitive (for supported graphics tablets only); * Revised pixel classifier features; * New Hessian features; * New 3D support; * Improved JSON serialization, via GsonTools class; * ROIs and PathObjects as GeoJSON; * Most ImageServers (via ServerBuilders); * Common OpenCV classes (Mat, StatModel); * Bio-Formats updates; * Update library to v6.2.0; * Improved multithreading and OME-TIFF export; * Avoid creating .bfmemo files in image directories (specify in preferences if/where you want them); * Miscellaneous changes; * Updated to JDK 12.0.2; * Default max memory to 50% available (previously 25%); * New .msi installer for Windows, optional 'debug' startup with console; * Improved 'Send to ImageJ' command, supports z-stacks & extra customization; * Major refactoring (warning, older scripts may not work!); * Added many javadocs for core modules; * Lots of bugs fixed! (No doubt some added...)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/342:1574,avail,available,1574,https://qupath.github.io,https://github.com/qupath/qupath/pull/342,1,['avail'],['available']
Availability,"Changelog:; ------------; * Positive cell detection supports different stainings (including multiplexed images); * Cell detection & the intensity measurement command use channel names rather than numbers; * (Note that channel order is still important when scripting the intensity measurement command); * Big changes to memory management; * Improved tile caching (using Guava) & more control; * Specify the proportion of available memory for tile caching in the preferences; * New options when importing images to a project; * 'Pyramidalize' large, single-resolution images; * Rotate images on import (90 degree increments); * Specify the image reading library (e.g. Bio-Formats, OpenSlide); * Improved resolution of paths to missing or moved images within projects; * New 'Search' button allows recursive search for missing images; * Improved 'Measurement map' behavior and colormap support; * Specify line cap when expanding line annotations; * For why this matters, see https://github.com/qupath/qupath/issues/228#issuecomment-518552859; * 'Send region to ImageJ' improvements; * Only send objects within the field of view as an overlay; * Set lookup tables where possible; * Support arbitrary small regions (can now send a 1x1 pixel image); * New preferences to specify viewer font size (scalebar, location text); * Code formatting is asynchronous (causes small delay, but reduces errors); * Project scripts are back... accessible from the 'Automate' menu; * More bugs fixed and others improvements, including; * Exceptions when generating some viewer/window snapshots; * Resolving relative URIs on Mac/Linux - https://github.com/qupath/qupath/issues/346; * SLIC bug - https://github.com/qupath/qupath/issues/344",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/353:420,avail,available,420,https://qupath.github.io,https://github.com/qupath/qupath/pull/353,2,"['avail', 'error']","['available', 'errors']"
Availability,"Changes now available [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3).; Absolute paths are stored, but QuPath checks relative path if the image is not found.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/325#issuecomment-514589547:12,avail,available,12,https://qupath.github.io,https://github.com/qupath/qupath/issues/325#issuecomment-514589547,1,['avail'],['available']
Availability,Channel drop-down box right click,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1498:13,down,down,13,https://qupath.github.io,https://github.com/qupath/qupath/issues/1498,1,['down'],['down']
Availability,Circular masks for intensity/tile features may be shifted by 1 pixel,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1239:9,mask,masks,9,https://qupath.github.io,https://github.com/qupath/qupath/issues/1239,1,['mask'],['masks']
Availability,"Closed due to lack of activity and because the import statement should address the original error. The need for better command line support remains, but this is the subject of other issues also.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213#issuecomment-494365043:92,error,error,92,https://qupath.github.io,https://github.com/qupath/qupath/issues/213#issuecomment-494365043,1,['error'],['error']
Availability,Closing this because the proposed fix is now available in v0.2.1. Feel free to reopen or create a new issue if a related problem remains.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/320#issuecomment-648053675:45,avail,available,45,https://qupath.github.io,https://github.com/qupath/qupath/issues/320#issuecomment-648053675,1,['avail'],['available']
Availability,"Closing this issue after discussion with @melvingelbard... it's not something we plan to do, and would be very apprehensive about including the change even if someone else implemented it. As I mentioned above, the consistency thing has some (partly historic) reasons. We only started adding spinners recently; the underlying rationale has been that sliders are used when the range is known in advance, spinners are used when it's not... New commands will endeavour to apply this rule more consistently, and old commands will either be either removed or updated. Regarding spinners and mouse wheel input, I think this really would need to be implemented in JavaFX directly. There are ostensibly easy ways to add support by attaching a scroll listener, in my experience to date this can open a whole can of worms... basically, scroll events can differ a lot depending upon the input device/platform (not to mention 'natural' scrolling in some cases, which can flip the direction). Therefore I think the risk is too high of creating something that inadvertently makes the user experience *worse* for many, and we would have no way to test all the relevant platforms to check this. I presume the JavaFX developers have reasons for not implementing this directly yet - perhaps related to the reason I give. But in any case, they would have access to potentially more platform-specific information to enable a robust implementation. For these reasons, I'm afraid I don't think we can/should act on this feature request.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/495#issuecomment-641183465:1404,robust,robust,1404,https://qupath.github.io,https://github.com/qupath/qupath/issues/495#issuecomment-641183465,1,['robust'],['robust']
Availability,Closing this issue because the proposed fix is now available in v0.2.0-m10 - please feel free to open it if you find the problem remains.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/345#issuecomment-617734843:51,avail,available,51,https://qupath.github.io,https://github.com/qupath/qupath/issues/345#issuecomment-617734843,1,['avail'],['available']
Availability,"Closing this with the note that I was able to use Simplify Annotations to prevent the error from occurring. As mentioned it only happened with script generated annotations, and even then only when creating them off of a downsampled ImageProcessor, followed by upscaling them back into annotations in QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/401#issuecomment-595979672:86,error,error,86,https://qupath.github.io,https://github.com/qupath/qupath/issues/401#issuecomment-595979672,2,"['down', 'error']","['downsampled', 'error']"
Availability,Compilation error,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363:12,error,error,12,https://qupath.github.io,https://github.com/qupath/qupath/issues/363,1,['error'],['error']
Availability,Compilation error on Eclipse,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/87:12,error,error,12,https://qupath.github.io,https://github.com/qupath/qupath/issues/87,1,['error'],['error']
Availability,"Complete rewrite of `build.gradle` in the hope of something that less resembles an explosion in a a curly brackets factory. Now uses `buildSrc` directory to isolate shared conventions, with most of the packaging logic moved to a new `qupath-app` subproject. For basic use to create an image; ```bash; ./gradlew clean jpackage`; ```. The type of package can be specified as one of `[image, msi, exe, dmg, pkg, deb, rpm, installer, all]`. Not all are supported on all platforms, and `installer` simply selects a platform-dependent installer (although this may fail for Linux...). The syntax is; ```bash; gradlew jpackage -P qupath.package=installer -P git-commit=true; ```; where `git-commit` requests that the last git commit is included in jar files for reference. The improved structure means that more tasks work as they should, so that; ```bash; ./gradlew tasks; ```; finally becomes meaningful. **Native libraries** are extracted at an early stage, and put into `build/natives`, which means that this is a good choice as a working directory when running from an IDE. It is also used by `gradlew run`. Several other small changes were made to ensure Java 11 compatibility (change to a use of `FileSystems`) and to remove `&` from Javadocs. ## Important. The QuPath version is now set in `settings.gradle`, and this is added to the `resources` of `qupath-core` - thereby making it available through `GeneralTools`. This should be more reliable than depending upon a `VERSION` file in the main repo, particularly when launching QuPath with different working directories. Relatedly, the project logic has been updated; previously it would fail completely if no version was found within a project JSON file, in the assumption it originated from v0.1.2 or earlier. Now it will make an effort to recover.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/738:1383,avail,available,1383,https://qupath.github.io,https://github.com/qupath/qupath/pull/738,3,"['avail', 'recover', 'reliab']","['available', 'recover', 'reliable']"
Availability,"Complete rewrite of `build.gradle` in the hope of something that less resembles an explosion in a a curly brackets factory. Now uses `buildSrc` directory to isolate shared conventions, with most of the packaging logic moved to a new `qupath-app` subproject. For basic use to create an image; ```bash; ./gradlew clean jpackage`; ```. The type of package can be specified as one of `[image, msi, exe, dmg, pkg, deb, rpm, installer, all]`. Not all are supported on all platforms, and `installer` simply selects a platform-dependent installer (although this may fail for Linux...). The syntax is; ```bash; gradlew jpackage -P qupath.package=installer -P git-commit=true; ```; where `git-commit` requests that the last git commit is included in jar files for reference. The improved structure means that more tasks work as they should, so that; ```bash; ./gradlew tasks; ```; finally becomes meaningful. Native libraries are extracted at an early stage, and put into `build/natives`, which means that this is a good choice as a working directory when running from an IDE. It is also used by `gradlew run`. Several other small changes were made to ensure Java 11 compatibility (change to a use of `FileSystems`) and to remove `&` from Javadocs. ## Important. The QuPath version is now set in `settings.gradle`, and this is added to the `resources` of `qupath-core` - thereby making it available through `GeneralTools`. This should be more reliable than depending upon a `VERSION` file in the main repo, particularly when launching QuPath with different working directories. Relatedly, the project logic has been updated; previously it would fail completely if no version was found within a project JSON file, in the assumption it originated from v0.1.2 or earlier. Now it will make an effort to recover.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/736:1379,avail,available,1379,https://qupath.github.io,https://github.com/qupath/qupath/pull/736,3,"['avail', 'recover', 'reliab']","['available', 'recover', 'reliable']"
Availability,Complicated 'Polygon' ROIs can give different masks in ImageJ & QuPath,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1674:46,mask,masks,46,https://qupath.github.io,https://github.com/qupath/qupath/issues/1674,1,['mask'],['masks']
Availability,"Copy and paste from: https://forum.image.sc/t/semi-random-script-errors-when-adding-removing-objects/53617. I am using a script to demonstrate both removing and adding objects, ideally for new coders (dun dun dunnn). The setting is a small rectangular annotation with cells generated inside of it, which is also divided into tumor/stroma annotations.; image. The purpose of the script is to remove the cells in one area, run an analysis that adds measurements based only on the cells in the second area, and then restore the cells that were removed. ```; //Load the LuCa object data before running!; resolveHierarchy() //let's make sure all of the cells are child objects of their annotations!; tumorAnnos = getAnnotationObjects().findAll{it.getPathClass() == getPathClass(""Tumor"")}; tumorCells = getCellObjects().findAll{it.getParent().getPathClass() == getPathClass(""Tumor"")}. //Remove the tumor annotations and their cells; removeObjects(tumorAnnos,false); removeObjects(tumorCells,false); //Analyze->Spatial analysis->Detect centroid distances 2D. detectionCentroidDistances(true); //Add everything back, and make sure the hierarchy is resolved!; addObjects(tumorAnnos); addObjects(tumorCells); resolveHierarchy(); ```. The code works most of the time. Probably 70%? I lack my usual variety of computers to test out whether it is based on my computer - but I do have a project file hosted online I can make available to run the test. Errors include: Null pointer exception popup in the lower right,. INFO: Starting script at Sat Jun 05 20:54:28 CDT 2021; WARN: Resolving hierarchy that contains 3 annotations and 1236 detections - this may be slow!; ERROR: QuPath exception; WARN: Resolving hierarchy that contains 3 annotations and 1236 detections - this may be slow!; INFO: Script run time: 0.25 seconds; The log file is not hugely informative on that one. Alternatively, I sometimes see a TMA core error. ```; ERROR: QuPath exception: Cannot invoke ""qupath.lib.objects.PathObject.isTMACore()"" b",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/744:65,error,errors-when-adding-removing-objects,65,https://qupath.github.io,https://github.com/qupath/qupath/issues/744,1,['error'],['errors-when-adding-removing-objects']
Availability,"Create a new `qupath.lib.experimental.pixels` package, which aims to greatly simplify adding new methods that require image processing. ## Important!. **This is still at an early stage and should be used with caution!**. ## Background ; The javadoc for `PixelProcessor` describes the idea:. ```java; * A class for tiled image processing.; * <p>; * The aim of this class is to make it easy to write pixel-based processing algorithms using a variety; * of different image representations, and also to run these in parallel.; * </p>; * <p>; * There are four main components:; * <ul>; * <li>An {@link ImageSupplier} that provides the image data</li>; * <li>A {@link MaskSupplier} that can generate binary masks that correspond to the image</li>; * <li>A {@link Processor} that processes the image data</li>; * <li>An {@link OutputHandler} that handles the output of the {@link Processor}</li>; * </ul>; * The idea is that the {@link Processor} is the only component that needs to be written for a specific task...; * and it is usually the fun bit to work on.; * <p>; * The other components are often very tedious to write and hard to get working correctly; also, there is much; * overlap in the functionality required for different tasks.; * For these reasons, we provide several default implementations here, written to support different image; * representations.; * </p>; ```. In addition to handling lots of thorny issues around tiling and merging, it also simplifies parallel processing with a progress monitor. In general, you would; * Choose how you want your images represented (e.g. `BufferedImage`, `ImagePlus`, `Mat`); * Write a custom function to do whatever processing you want *or* use a built-in option; * Use an appropriate 'output-handler' to handle whatever output your function gives (e.g. new objects, measurements, classifications). ## Examples. The following examples show the idea - albeit not necessarily with very meaningful processing. ### Image processing with ImageJ. Applied to",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1355:662,Mask,MaskSupplier,662,https://qupath.github.io,https://github.com/qupath/qupath/pull/1355,2,"['Mask', 'mask']","['MaskSupplier', 'masks']"
Availability,Currently running QuPath 0.2.3. ERROR: Project error: java.lang.NullPointerException; ERROR: Project error; at qupath.lib.projects.DefaultProject.loadProject(DefaultProject.java:1094); at qupath.lib.projects.DefaultProject.loadFromFile(DefaultProject.java:171); at qupath.lib.projects.ProjectIO.loadProject(ProjectIO.java:97); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDropImpl(DragDropFileImportListener.java:248); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:158); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:126); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:3057); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3283); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2997); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$2(GlassSceneDnDEventHandler.java:108); at jav,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/613#issuecomment-708516373:32,ERROR,ERROR,32,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708516373,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Currently, RoiTools supports [union](https://github.com/qupath/qupath/blob/2e7042fc0c5913757a1f5ba481941fa9ba9f8275/qupath-core/src/main/java/qupath/lib/roi/RoiTools.java#L124) and [intersection](https://github.com/qupath/qupath/blob/2e7042fc0c5913757a1f5ba481941fa9ba9f8275/qupath-core/src/main/java/qupath/lib/roi/RoiTools.java#L148) methods directly but not subtraction. Subtraction has to be done using [combineROIs](https://github.com/qupath/qupath/blob/2e7042fc0c5913757a1f5ba481941fa9ba9f8275/qupath-core/src/main/java/qupath/lib/roi/RoiTools.java#L97) and CombineOp methods, while not difficult, is incoherent as union and intersection is directly available as mentioned above. I would like to suggest having a RoiTools.subtract(roi1, roi2) method added alongside RoiTools.union(rois) and RoiTools.intersection(rois).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/995:656,avail,available,656,https://qupath.github.io,https://github.com/qupath/qupath/issues/995,1,['avail'],['available']
Availability,"Currently, you can do that via the workflow tab - assuming you've run it once before on that image. Or you can leave the window open when switching images - assuming they are the same type... bad things may happen if not, e.g. fluorescence to brightfield. Although that led me to see that bad things happen with this PR when the image type changes: QuPath isn't able to adjust and update the available options. So if I run cell detection for brightfield, then I can't use it for fluorescence within that QuPath session - because it will be stuck with the same available channels the first time it was run.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1560#issuecomment-2255814318:392,avail,available,392,https://qupath.github.io,https://github.com/qupath/qupath/pull/1560#issuecomment-2255814318,2,['avail'],['available']
Availability,"Cut the processes from 63 to 24 and some improvement. When it happened again, I saw the following in the log, but I still have 15GB free. Can I increase java heap memory for qupath, or is there a memory leak? If I close qupath and come back in it will work for a couple of slides before failing. Thanks,. Andy. ```; ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:139); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:107); at qupath.lib.gui.PluginRunnerFX.runTasks(PluginRunnerFX.java:98); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:169); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:192); at java.base/java.lang.Thread.run(Unknown Source); Caused by Java heap space at java.base/java.util.ArrayDeque.<init>(Unknown Source); at qupath.imagej.processing.Watershed$WatershedQueueWrapper.<init>(Watershed.java:242); at qupath.imagej.processing.Watershed.doWatershed(Watershed.java:83); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:852); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:1063); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:303); at qupath.imagej.detect.cells.PositiveCellDetection$DetectorWrapper.runDetection(PositiveCellDetection.java:140); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:112); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Un",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/828#issuecomment-932330593:316,ERROR,ERROR,316,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932330593,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"Da: Svidro [notifications@github.com]; Inviato: giovedì 29 novembre 2018 16.34; A: qupath/qupath; Cc: Tuccitto Alessandra; Author; Oggetto: Re: [qupath/qupath] TMA grid (#249). I would recommend looking through #77<https://github.com/qupath/qupath/issues/77>. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/249#issuecomment-442877107>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ArWoyy9fQqh1OZIfaIx3IN1LUJdlXAEKks5uz_51gaJpZM4Y5w90>. La presente comunicazione, che potrebbe contenere informazioni riservate e/o protette da segreto professionale, è indirizzata esclusivamente ai destinatari della medesima qui indicati. Ogni informazione qui contenuta, che non sia relativa alla nostra attività caratteristica, deve essere considerata come non inviata. Nel caso in cui abbiate ricevuto per errore la presente comunicazione, vogliate cortesemente darcene immediata notizia, rispondendo a questo stesso indirizzo di e-mail, e poi procedere alla cancellazione di questo messaggio dal Vostro sistema. E' strettamente proibito e potrebbe essere fonte di violazione di legge qualsiasi uso, comunicazione, copia o diffusione dei contenuti di questa comunicazione da parte di chi la abbia ricevuta per errore o in violazione degli scopi della presente. Ricordiamo che la tecnologia di trasmissione utilizzata non consente di garantire l’autenticità del mittente né l’integrità dei dati. This communication, which may contain confidential and/or legally privileged information, is intended solely for the use of the intended addressees. All information or advice contained in this communication is subject to the terms and conditions provided by the agreement governing each particular client engagement. If you have received this communication in error, please notify us immediately by responding to this email; then please delete it from your system. Any use, disclosure, copying o",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/249#issuecomment-442919733:1362,error,errore,1362,https://qupath.github.io,https://github.com/qupath/qupath/issues/249#issuecomment-442919733,1,['error'],['errore']
Availability,"Dear @Svidro ,. Many thanks for your suggestions. I am extremely sorry as I did not attach the original image to my previous post. I thought that you got everything with enclosed QPDATA files. I, here, give a ****download link** (below) of the original image.**; https://my.pcloud.com/publink/show?code=XZN1HC7ZCU8ImbiEUGShoj457lSYa7TCxtEy. **I have tried the following things as you suggested but could come up of the following issues:**. 1. I could not switch in-between diffient channels of colors as shown (comfortably) in the video. In other words, I could not check the _color deconvolution_ before estimating the vectors . 2. I wanted to get separate values for the number of cells with each color. But looks like, QuPath gives as a total number. Having them, is very important for me as . 3. In most cases, after _running_ the Positive Cell Detection, even some blue cells are not encircled, letting me assume that they were not counted probably. Image below:; ![capture](https://user-images.githubusercontent.com/44507241/50253977-ea821880-03b1-11e9-826e-bb092ba9b087.JPG). I admit that I am a newbie to QuPath. I apologize if you see these problems are because of very silly mistakes. . Many thanks for helping me out!; sincerely,; Partha",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/250#issuecomment-448783885:213,down,download,213,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-448783885,1,['down'],['download']
Availability,"Dear Arnulf,. Thanks again for your reply. I'm glad that the brightfield/RGB `*.mrxs` files are working. I'm not certain, but since Zoom from MicroDimensions is Windows-only, I suspect it may be using the Windows-only software libraries provided by [Zeiss](http://www.zeiss.com/microscopy/int/products/microscope-software/zen/czi.html) and [3D Histech](http://www.3dhistech.com/downloads). Since these are not open source (as far as I am aware), they [wouldn't be compatible with QuPath's GPL license](https://www.gnu.org/licenses/gpl-faq.html#GPLAndPlugins). Therefore including them would require a change to QuPath's license, and result in extra functionality being available on Windows but not on other platforms... and for these reasons it would really be a last resort. Nevertheless, if you or anyone at your place of work would like to give it a try, creating such an extension may be a [reasonable solution for internal use](https://www.gnu.org/licenses/gpl-faq.html#GPLRequireSourcePostedPublic). The biggest effort required is likely to be in being able to access the pixels from the native libraries within Java, but if that problem is solved then I could certainly help with the relatively small final step of integrating the result with QuPath. Still, hopefully Bio-Formats will be able to provide a solution for `*.czi` files in the near future - I'll post an update here and [Google Groups](https://groups.google.com/d/forum/qupath-users) whenever I see it. If so, that only leaves non-RGB `*.mrxs`. There may be a way to merge separated monochrome TIFFs into a single multi-channel TIFF using [Bio-Formats](http://www.openmicroscopy.org/site/support/bio-formats5.2/supported-formats.html)... although I'm not sure. Alternatively, [Pannoramic Viewer](http://www.3dhistech.com/pannoramic_viewer) may have alternative export options not present in CaseViewer. If neither of these approaches are suitable, I can imagine a new custom image reader within QuPath that is able to automatically",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/12#issuecomment-258467053:378,down,downloads,378,https://qupath.github.io,https://github.com/qupath/qupath/issues/12#issuecomment-258467053,2,"['avail', 'down']","['available', 'downloads']"
Availability,"Dear Dr Peter,. I was having a project opened, with drawn annotations on a few H&E images. The following message popped-up when I clicked on **""Automate""**. It didn't open the regular choices shown when inserting a script; I instantly had:. _ERROR:_; INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (29 ms); INFO: Loaded extension Experimental commands (16 ms); INFO: Loaded extension ImageJ extension (35 ms); INFO: Loaded extension JPen extension (16 ms); INFO: Loaded extension OpenCV extensions (5 ms); INFO: Loaded extension Rich script editor extension (213 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: _Name_; INFO: Image data set to ImageData: Brightfield (H&E), _ImageName_; ERROR: QuPath exception; at qupath.lib.gui.ScriptMenuLoader.addMenuItemsForPath(ScriptMenuLoader.java:149); at qupath.lib.gui.ScriptMenuLoader.updateMenu(ScriptMenuLoader.java:130); at qupath.lib.gui.QuPathGUI.lambda$new$9(QuPathGUI.java:776); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.control.Menu.setShowing(Menu.java:198); at javafx.scene.control.Menu.show(Menu.java:412); at javafx.scene.control.skin.MenuBarSkin.showMenu(MenuBarSkin.java:472); at javafx.scene.control.skin.MenuBarSkin.showMenu(Men",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/373:865,ERROR,ERROR,865,https://qupath.github.io,https://github.com/qupath/qupath/issues/373,1,['ERROR'],['ERROR']
Availability,"Dear Dr. Bankhead,. First of all: this is an incredible piece of software! We are exploring its multiple possibilities with great excitement. Thank you very much for making it publicly available. Among others, we are working with a lot of Zeiss *.czi and 3D Histech *.mrxs multichannel fluorescence whole slide images. The default version of QuPath can open the *.mrxs files, but only in the most coarse resolution. So I installed the Bio-Formats extension and it does show up in the ""Help/Installed Extensions ""dialogue. However, it does not appear in the ""Extensions"" Menu. Only ImageJ is accessible in this menu. Best regards,. Arnulf Mayer, University Medical Center Mainz, Germany",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/12:185,avail,available,185,https://qupath.github.io,https://github.com/qupath/qupath/issues/12,1,['avail'],['available']
Availability,"Dear Pete,. . It is indeed windows 10. This is what log shows:. . ERROR: Unable to load OpenCV libraries!. at java.lang.ClassLoader$NativeLibrary.load(Native Method). at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941). at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857). at java.lang.Runtime.loadLibrary0(Runtime.java:870). at java.lang.System.loadLibrary(System.java:1122). at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:59). at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:72). at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:116). at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1093). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:637). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:429). at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63). at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863). at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-411621646:66,ERROR,ERROR,66,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646,1,['ERROR'],['ERROR']
Availability,"Dear Pete,. . Unfortunately it still didn’t work. I noticed there was an Error during installation (see below), do you know what it means?. . Best and thank you so much for your support!. Marcel. . . Microsoft Windows [Version 10.0.17134.228]. (c) 2018 Microsoft Corporation. Alle Rechte vorbehalten. . C:\Users\marsh\Documents\GitHub\qupath>gradlew.bat jfxNative. Starting a Gradle Daemon, 1 incompatible and 1 stopped Daemons could not be reused, use --status for details. . > Configure project :. I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed). Operating system: Windows 10 10.0 x86. Current Java version: 1.8. Found the packager at C:\Program Files (x86)\Java\jdk1.8.0_181\jre\..\lib\packager.jar. Copying license directories:. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-ij\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-opencv\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-openslide\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-pen\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-script-editor\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-gui-fx\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-processing-ij\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-processing-opencv\src\main\resources\licenses. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\org\openslide\openslide\3.4.1_2\openslide-3.4.1_2-natives-windows.jar. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\net\sourceforge\jpen\jpen\2-150301\jpen-2-150301-natives-windows.jar. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\org\opencv\opencv\3.1.0\opencv-3.1.0-natives-windows.jar. Re",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-414648451:73,Error,Error,73,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414648451,1,['Error'],['Error']
Availability,"Dear Pete,. I understand the problems with the Windows-only algorithms. Unfortunately, we do not have the resources at our institution to create software like that, even though some of our medical physicists may have the programming skills. In the meantime, I was able to load a smaller three channel RGB tiff exported from a *.czi multichannel fluorescence file. However, in my first attempts I could not get QuPath to identify any cells. I get an error message telling me that my image is not brightfield (which is true). Do I understand it correctly that QuPath is not (yet?) ready for the analysis of fluorescence images? Do you plan to implement this functionality? I think that fluorescence files provide some strong advantages with regard to image analysis. . Best regards,. Arnulf",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/12#issuecomment-259121186:449,error,error,449,https://qupath.github.io,https://github.com/qupath/qupath/issues/12#issuecomment-259121186,1,['error'],['error']
Availability,"Dear Pete,. When trying to label a Z-Stack with a Dell Active Pen (MI8AH) everything works fine for 50-100 objects in multiple planes (using the polygon tool). Then I get this error message:. ERROR: QuPath exception; ERROR: QuPath exception: Too many touch points reported; at javafx.scene.Scene$ScenePeerListener.touchEventNext(Scene.java:2815); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleNextTouchEvent$26(GlassViewEventHandler.java:1324); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleNextTouchEvent$27(GlassViewEventHandler.java:1287); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleNextTouchEvent(GlassViewEventHandler.java:1286); at com.sun.glass.ui.View.handleNextTouchEvent(View.java:580); at com.sun.glass.ui.View.notifyNextTouchEvent(View.java:1055); at com.sun.glass.ui.TouchInputSupport.notifyNextTouchEvent(TouchInputSupport.java:142); at com.sun.glass.ui.win.WinGestureSupport.notifyNextTouchEvent(WinGestureSupport.java:58); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source); ERROR: QuPath exception. There is no crash. No data lost.; QuPath 0.2.0m5 (on Windows 10) ""just"" refuses to accept new input by my pen.; I can still go on using the mouse.; Thus, it is neither major nor urgent. I also tested: If I save close & reopen I can continue with the same file and the pen. Thanks a lot & Kind regards. Tobias",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/372:176,error,error,176,https://qupath.github.io,https://github.com/qupath/qupath/issues/372,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Dear Pete,. thank you very much for your fast reply!. Regarding *.mrxs files, the problems occur only with multichannel fluorescence images. Brightfield images open without a problem. Here is an example:. ![brightfield_example](https://cloud.githubusercontent.com/assets/23238491/19998070/e2515342-a26a-11e6-8f3d-8c2746210dc1.jpg). Indeed, as we can see, OpenSlide is used to access the *.mrxs file. Regarding the fluorescence files, all of the requirements that you stated above are fulfilled for my files. QuPath opens them using ImageJ. When I use ImageJ (or in my case, Fiji) to open them directly, the behaviour is the same: access is only possbile at the most coarse resolution. Both *.czi and *.mrxs can be exported as tiff files from their viewers (ZEN2 and CaseViewer). The monochrome tiffs can be opened in QuPath. However, when I joined three of these monochrome files in an RGB file, my first attempt at opening it in QuPath failed. I am going to keep experimenting. However, I wanted to point out that the technology to open multichannel *.czi and *.mrxs files already exists because it is implemented in a free viewer application called ""Zoom v2.0.0"", available from MicroDimensions (https://micro-dimensions.com/zoom/). We have been providing some slides for them over the last years to test their algorithms. They might be interested in a scientific cooperation. We can also provide test slides (image data) via our file transfer system for you if you give me an e-mail address. Best regards,. Arnulf",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/12#issuecomment-258370511:1166,avail,available,1166,https://qupath.github.io,https://github.com/qupath/qupath/issues/12#issuecomment-258370511,1,['avail'],['available']
Availability,"Dear Pete,; we are extensively using your QuPath, but we would need some extensions and modifications:; Precisely, what we would need is:. 1. extending the image rotation range to [-180 ,..., +180]; the reason for this request is that; we must deal with .svs slides that are scanned upside-down. Therefore, to match them a rotation of only -90 -> +90 degrees is not sufficient; 2. we would need to rotate the whole TMA grid without rotating the image.; Indeed, after I define a TMA grid and an object grid over an image, I would like to apply them (EDIT -> Copy grid&objects, EDIT-> Paste grid&objects) to all the other images that are slightly rotated or not perfectly aligned between them. To this aim, I must place the grid and the objects, and I must be able to rotate them.; 3. It would very useful to me to save the rotation information inside the project file. In this way when I open the project again the images are restored with the correct (previous) rotation; 4. in multi view mode translations is not preserved when I change active panel; now translated image is moving back to the original place as soon as I click on another image; 5. it would be very useful be able to save the TMA grid in a file on its own, and be able to load again in a different new project (save/load grid); 6. it could be very useful, when I align the core to the TMA grid, to be able to select the core with just 1 click and not double clicking it this would speed up the process a lot. I would be glad to be used as beta-tester for the next versions of your useful program. hope the best; best regards",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/269:290,down,down,290,https://qupath.github.io,https://github.com/qupath/qupath/issues/269,1,['down'],['down']
Availability,"Dear QuPath developers,. Quite some time ago a user of `paquo` reported a bug with network share URIs on windows, see: https://github.com/bayer-science-for-a-better-life/paquo/issues/65. This PR get's rid of the immediate issue in ImageServerProvider.getServerBuilders, but I'm not sure if there's more bugs further downstream using network share URIs. The fix boils down to using `java.nio.Paths.get(uri).toFile()` instead of `java.io.File(uri)` directly. (see: https://github.com/bayer-science-for-a-better-life/paquo/issues/65#issuecomment-970711915). I am currently unable to test this myself due to lack of access to a windows machine. . Cheers,; Andreas 😃",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1049:316,down,downstream,316,https://qupath.github.io,https://github.com/qupath/qupath/pull/1049,2,['down'],"['down', 'downstream']"
Availability,"Dear Qupath users,. I am a fairly new Qupath user and I would like to calculate the proportion of stroma/epithelium in a given area of annotated tissue (prostate biopsy in particular) and also identify immune cells (lymphocytes) and express them as a density (cells/mm2) in stromal and epithelial areas. I am beginning with benign tissue but would like to move on to tumour-containing tissues as well down the line. I am also looking for an effective way to extract that data for multiple images (>500) into an Excel spreadsheet. Unfortunately I cannot find any resources online for this. The Qupath classifier identifies individual cells and most responses are on IHC, whereas my images are H&E. Could anyone please help?. Thank you,. V",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/262:401,down,down,401,https://qupath.github.io,https://github.com/qupath/qupath/issues/262,1,['down'],['down']
Availability,"Dear all, dear Pete, . in the meanwhile it happened quite some times that the color deconvolution display in channel 2, 3 and 4 behaves stranges. I can not exactly say whan it starts and if it once started, the only chance to come back to nomality is to close the whole QuPath Software and restart. ; Even reset of image type and all color vectors does by a script does not help to repair the phenomen. . It starts, when I read out the color vectors directly from a rectangle. . Here an example: ; ![grafik](https://user-images.githubusercontent.com/16352785/34652666-a8449302-f3e1-11e7-83b0-8a4255cd7612.png). These are the color vectores that worked very well before I started to use the function ""Set stain vector from ROI?""; ![grafik](https://user-images.githubusercontent.com/16352785/34652670-c4ba3226-f3e1-11e7-8e4c-f4f2ad859c54.png). Afterwards the channels look like that: . ![grafik](https://user-images.githubusercontent.com/16352785/34652674-d6bb919a-f3e1-11e7-88b5-ad94312ffa60.png); for red; and for brown-yellowish: ; ![grafik](https://user-images.githubusercontent.com/16352785/34652677-e22da1bc-f3e1-11e7-8cdf-5f5f7d30f151.png); and for green: ; ![grafik](https://user-images.githubusercontent.com/16352785/34652684-f75ddeee-f3e1-11e7-97a5-64b56b184c4c.png). Normally the display can become better by manual adujstion in the ""Brightness Contrast"" Settings: ; ![grafik](https://user-images.githubusercontent.com/16352785/34652696-0fa3d620-f3e2-11e7-8182-33f2998c4cb1.png). But once the ""bug"" appeared, that is not possible anymore. . Does somebody have an assumption what might cause this problem?",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/131:382,repair,repair,382,https://qupath.github.io,https://github.com/qupath/qupath/issues/131,1,['repair'],['repair']
Availability,"Dear all,. I am trying to classify a slide from a colon cancer FFPE stained with a lymphocytic marker labelled with DAB, counterstained with Hematoxylin and scanned at 20X with Hamamatsu scanner. My aim is to quantify how many lymphocytes are stromal and how many are in the tumour/epithelium. the first issue I have is that Qupath is not able to pickup nuclei correctly and it either fragments them or downsizes it especially when they are elongated and packed together. . the second issue is that if I only classify objects as tumoural or stromal, I can only quantify the positive cells in the tumour and not in the stroma. Many thanks in advance,. Lucia",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/231:403,down,downsizes,403,https://qupath.github.io,https://github.com/qupath/qupath/issues/231,1,['down'],['downsizes']
Availability,"Dear,. I tried to perform a simple ImageJ Macro on a specific channel, but even if the channel is selected, it looks like the **ImageJ Macro Runner** is sending the whole color image, so my script that was tailored for DAB only failed.; Would it be possible to select the channel as it is when we send the region using **Extensions>ImageJ>Send Region to ImageJ** ?. Also, it looks like that if I can send a rescaled region by a certain factor using **Extensions>ImageJ>Send Region to ImageJ** (e.g. by 4) , I cannot use the same downscale factor using the **ImageJ Macro Runner**, which popup a message telling me the image is too big, requiring a smaller downscale factor (looks like a bug). Otherwise, thanks again for this great piece of software!; Best; Benjamin",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/68:529,down,downscale,529,https://qupath.github.io,https://github.com/qupath/qupath/issues/68,2,['down'],['downscale']
Availability,Decreased size of downsampled image,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1528:18,down,downsampled,18,https://qupath.github.io,https://github.com/qupath/qupath/pull/1528,1,['down'],['downsampled']
Availability,"Depending on the size, I would usually do something like that by sending a downsampled whole image to ImageJ to create and return a ""tissue annotation."" Then, tile that first annotation into further annotation tiles, and send each tile to ImageJ at full resolution. Use only your channel of interest to return detection objects for areas over your threshold. Removing all of the tile annotations would then leave you with your initial ""full"" annotation and a whole list of detection objects, which you could sum the area of and compare to the full annotation for a percent positive. The whole thing should be script-able. If you want to look at methods though or get help with scripting, I would recommend the [Google Group forum](https://groups.google.com/forum/#!forum/qupath-users).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/187#issuecomment-407093698:75,down,downsampled,75,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407093698,1,['down'],['downsampled']
Availability,"Did I correctly understand that v0.1.2 works on the same Linux machine where v0.2.0 fails?. If so, it may be because the native libraries are in the same location as the launcher. This happened 'naturally' with the `javafxpackager` in JDK 8, but not with `jpackage` now. Because loading [sub-dependencies is not exactly straightforward](https://bugs.openjdk.java.net/browse/JDK-8213772) the only way I could see to get it working on Windows was to load the dependencies in reverse order [here](https://github.com/qupath/qupath/blob/v0.2.0-m4/qupath-extension-openslide/src/main/java/qupath/lib/images/servers/openslide/OpenslideServerBuilder.java#L51). The problem may be masked on Linux where OpenSlide is already installed and so the libraries are found on the system... just not the expected ones. So the 'bug' in QuPath is separate from the pixman issue - it's rather around how the native libraries are made available. Therefore updating pixman on a broken system could at least get things working again. I can think of three possible ways around this within QuPath:; * Try to load the sub-dependencies 'backwards', as with Windows; not terribly maintainable, but if OpenSlide isn't actively developed then it won't be updated often; * Change the build script to try to get the native libraries alongside the launcher; I'd _prefer_ not to fight `jpackage` regarding locations in case it causes more trouble, but may be ok; * Require a separate OpenSlide installation (but the JNI library will still be needed). Overall, getting OpenSlide to behave well cross-platform has proven very difficult... not helped by my lack of C. The situation with OpenCV had been similar, but is now _much_ better thanks to JavaCPP. Any help with packaging OpenSlide up in a portable, cross-platform way would be much appreciated. See also https://github.com/qupath/qupath/issues/151",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/355#issuecomment-527339421:672,mask,masked,672,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527339421,2,"['avail', 'mask']","['available', 'masked']"
Availability,"Did you change anything in the build script?. Specifically, I get the same errors as you if I change `useGPU = true`... which is one of the reasons why `useGPU = false`. I have not been able to replicate the problem on any platform where `useGPU = false`.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-633259796:75,error,errors,75,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633259796,1,['error'],['errors']
Availability,"Do you see any errors under *View &rarr; Show log*?; Does it happen with annotations that have been generated in m10, or only ones that have been generated earlier?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/456#issuecomment-619374419:15,error,errors,15,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-619374419,1,['error'],['errors']
Availability,"Document that QuPath needs macOS 11 or later - although also add a flag so that it's possible to request a different JavaFX version when building (via a system property); ```; ./gradlew clean jpackage -Djavafx-version=20.0.2; ```; Also include the module path in the system info, if available (since this is set when using `gradlew run` and is handy to see for debugging).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1365:283,avail,available,283,https://qupath.github.io,https://github.com/qupath/qupath/pull/1365,1,['avail'],['available']
Availability,"Does m11 run with all features? Specifically, does the *Wand* tool appear in the toolbar and does it work...?. QuPath is written so that if certain dependencies (including OpenCV) aren't available then the rest of the application should work, just with missing options.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-630584161:187,avail,available,187,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630584161,1,['avail'],['available']
Availability,"Does the View->Show log give you any information when this happens? . I am not sure in your case, but if you are running the full script I wonder if it isn't the cell detection rather than the classifier that is erroring out. I don't believe the classifier runs in tiles, it should apply to the entire image at once, and only after the cell detection part of the script is completed. Memory might be an issue there, though there used to be some possible edge cases with very small tiles (where the tile clips the edge of the tissue and a very tiny region is generated) causing problems. I usually was able to get around that by changing the Simple Tissue detection settings, as it was incredibly rare. The logs should help determine what is happening. You said randomly, so this means you can't reproduce it on any single slide running it twice? Are the images QuPath is accessing stored across a potentially busy or slow network?. As an aside, you are running both a classifier in the cell detection (Positive cell detection with three thresholds), and again with a trained classifier?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/130#issuecomment-355477217:212,error,erroring,212,https://qupath.github.io,https://github.com/qupath/qupath/issues/130#issuecomment-355477217,1,['error'],['erroring']
Availability,Downgrade DJL to 0.24.0,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1428:0,Down,Downgrade,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1428,1,['Down'],['Downgrade']
Availability,Downgrade to use Bio-Formats 6.7.0,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/882:0,Down,Downgrade,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/882,1,['Down'],['Downgrade']
Availability,Ensure downsample is set to finite value,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1521:7,down,downsample,7,https://qupath.github.io,https://github.com/qupath/qupath/pull/1521,1,['down'],['downsample']
Availability,Error Opening Image,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/607:0,Error,Error,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/607,1,['Error'],['Error']
Availability,Error converting AreaROI to Geometry: Invalid number of points in LinearRing (found 3 - must be 0 or >= 4),MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/429:0,Error,Error,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/429,1,['Error'],['Error']
Availability,Error displayed when manifest can't be found in ShowInstalledExtensionsCommand,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/664:0,Error,Error,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/664,1,['Error'],['Error']
Availability,Error exists when open a tiff file,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/872:0,Error,Error,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/872,1,['Error'],['Error']
Availability,Error handling & keep connection alive,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/485:0,Error,Error,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/485,2,"['Error', 'alive']","['Error', 'alive']"
Availability,Error in Measurement with StarDist script with RGB fluorescence images,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/686:0,Error,Error,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/686,1,['Error'],['Error']
Availability,Error loading training objects,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/360:0,Error,Error,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/360,1,['Error'],['Error']
Availability,Error opening Vektra QPTIFF file,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/168:0,Error,Error,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/168,1,['Error'],['Error']
Availability,Error when clicking automate in menu bar,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/139:0,Error,Error,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/139,1,['Error'],['Error']
Availability,Error when labelling with pen,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/372:0,Error,Error,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/372,1,['Error'],['Error']
Availability,Error when opening script editor,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/349:0,Error,Error,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/349,1,['Error'],['Error']
Availability,Error with opening VSI files,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/387:0,Error,Error,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/387,1,['Error'],['Error']
Availability,Error with opening image,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/330:0,Error,Error,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/330,1,['Error'],['Error']
Availability,EventHandler.handleMouseEvent(GlassViewEventHandler.java:449); at com.sun.glass.ui.View.handleMouseEvent(View.java:557); at com.sun.glass.ui.View.notifyMouse(View.java:943); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184); at java.base/java.lang.Thread.run(Unknown Source); Caused by: java.util.concurrent.ExecutionException: java.lang.RuntimeException: OpenCV(4.5.3) D:\a\javacpp-presets\javacpp-presets\opencv\cppbuild\windows-x86_64\opencv-4.5.3\modules\core\src\channels.cpp:141: error: (-215:Assertion failed) i1 >= 0 && j < ndsts && dst[j].depth() == depth in function 'cv::mixChannels'. at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:222); ... 58 common frames omitted; Caused by: java.lang.RuntimeException: OpenCV(4.5.3) D:\a\javacpp-presets\javacpp-presets\opencv\cppbuild\windows-x86_64\opencv-4.5.3\modules\core\src\channels.cpp:141: error: (-215:Assertion failed) i1 >= 0 && j < ndsts && dst[j].depth() == depth in function 'cv::mixChannels'. at org.bytedeco.opencv.global.opencv_core.mixChannels(Native Method); at qupath.opencv.tools.OpenCVTools.mergeChannels(OpenCVTools.java:413); at qupath.opencv.ops.ImageOps$Core$SplitMergeOp.transformPadded(ImageOps.java:2511); at qupath.opencv.ops.ImageOps$Core$SplitMergeOp.apply(ImageOps.java:2470); at qupath.opencv.ops.ImageOps$ChannelImageDataOp.apply(ImageOps.java:425); at qupath.opencv.ops.ImageOpServer.readTile(ImageOpServer.java:98); at qupath.lib.images.servers.AbstractTileableImageServer.lambda$getTile$0(AbstractTileableImageServer.java:213); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:217); ... 58 common frames omitted; ```,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947:10494,error,error,10494,https://qupath.github.io,https://github.com/qupath/qupath/issues/947,1,['error'],['error']
Availability,"Eventually I managed to create a new Linux download for [v0.0.6](https://github.com/qupath/qupath/releases/tag/v0.0.6) using OpenJDK and OpenJFX. Still, two troubles remain: one minor, one major. The minor trouble is that (at least on Ubuntu 16.04) the build process is not entirely seamless, and `jfxrt.jar` needs to be manually copied into the distribution at the end (perhaps because it's not included in OpenJDK, but rather only a symbolic link is made with installing `openjfx` with Synaptic?). The major trouble is that OpenSlide continues not to be distributed in a ready-to-run fashion (as mentioned [here](https://github.com/qupath/qupath/wiki/Installing-QuPath#linux)). Indeed, I'm not sure if it will work on anyone's machine other than the one I was using. It is likely clear that my Linux use and experience is limited. The suggestions of someone who is more familiar with this would be very welcome. I think one of the following is required:; - Inclusion of OpenSlide and all its dependencies, precompiled (in the same way as QuPath provides for Windows and macOS), or; - A method of ensuring the Java library path in the packaged version of QuPath includes all the places that would be required to find a local installation of OpenSlide. In the second case, the user would still be asked to download and install it... but if this step goes smoothly, it can be expected to work. I plan to investigate this more in the future, but it may take some time...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/2#issuecomment-261056258:43,down,download,43,https://qupath.github.io,https://github.com/qupath/qupath/issues/2#issuecomment-261056258,2,['down'],['download']
Availability,"Every time when I run a script, a temp file was generated in QuPath 0.2.0 but not 0.1.2. From the echo, Bioformats tries to delete the temp file, but the file path has one additional dot before the filename, so the deletion failed:. `6:23:09.798 [main] [WARN ] loci.formats.Memoizer - file deletion failed D:\QMDownload\5\os\.OS-3.vsi.bfmemo `. The file was ; `D:\QMDownload\5\os\OS-3.vsi.bfmemo ; `. After a successful running, all the output was:; ```; 16:23:06.071 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, D:\\QMDownload\\5\\os\\OS-3.vsi, -script, C:\\Users\\rmd\\AppData\\Local\\Temp\\tpd56d11ce_e4ba_481c_a046_3d19297b763a.groovy ; 16:23:06.151 [main] [WARN ] q.lib.images.servers.FileFormatInfo - Strange 'bits per sample' of 0 ; 16:23:06.211 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1 ; WARNING: An illegal reflective access operation has occurred ; WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/C:/Program%20Files/QuPath-0.2.0-m1/app/kryo-2.24.0.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object) ; WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 16:23:07.141 [main] [WARN ] loci.formats.Memoizer - deleting invalid memo file: D:\QMDownload\5\os\.OS-3.vsi.bfmemo ; com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 429; Serialization trace:; service (loci.formats.in.OperettaReader); readers (loci.formats.ImageReader); reader (loci.formats.DimensionSwapper); reader (loci.formats.FileStitcher); helper (loci.formats.in.FilePatternReader); readers (loci.formats.ImageReader) ; 	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:119) ; 	at com.esotericsoftware.kryo.Kry",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/287:98,echo,echo,98,https://qupath.github.io,https://github.com/qupath/qupath/issues/287,1,['echo'],['echo']
Availability,"Everyone's forum :). You might want to check out [this new blog post](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html) describing how to try out lots of new QuPath improvements early. Especially check out the bit about *Positive pixel count* (about half-way down the page), which describes now & improved outputs that the command can give.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/157#issuecomment-374165232:279,down,down,279,https://qupath.github.io,https://github.com/qupath/qupath/issues/157#issuecomment-374165232,1,['down'],['down']
Availability,"Excellent, thanks - can confirm that; ```; ./gradlew clean run; ```; doesn't include the javadocs, but; ```; ./gradlew clean getJavadocs run; ```; does. And they are also included with; ```; ./gradlew clean jpackage; ```; Only minor comment is that `getJavadocs` doesn't seem a very gradle-ish task name and isn't so descriptive (use `gradlew tasks` to see all those that are available). What do you think of; ```; assembleJavadocs Copies the Javadoc jars to a directory for access within QuPath; ```; ?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1518#issuecomment-2097819235:376,avail,available,376,https://qupath.github.io,https://github.com/qupath/qupath/pull/1518#issuecomment-2097819235,1,['avail'],['available']
Availability,Exception when opening script if the last directory isn't available,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1441:58,avail,available,58,https://qupath.github.io,https://github.com/qupath/qupath/issues/1441,1,['avail'],['available']
Availability,Export annotations as segmentation masks,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/166:35,mask,masks,35,https://qupath.github.io,https://github.com/qupath/qupath/issues/166,1,['mask'],['masks']
Availability,Extract masked pixels,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1319:8,mask,masked,8,https://qupath.github.io,https://github.com/qupath/qupath/pull/1319,1,['mask'],['masked']
Availability,"Fair enough. Thanks for looking in to this. It would be great if ""at least"" the annotations could be kept 👍 ; Seeing the java heap space error I thought it might be that... but I have been able to run larger batches/images in the past so I wasn't expecting to have such problem. Can't remember if I actually did a larger analysis using this version though... and I don't get an error when not running it slide by slide (outside batch mode).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-493948324:137,error,error,137,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493948324,2,['error'],['error']
Availability,"Fantastic, that's a relief, thanks!; I saw those errors tile width/height too, only with MRXS files... but yes, they don't seem to cause trouble. For reference, this is what happened:; I recompiled OpenSlide for Mac back for v0.0.7, to address issues related to opening MRXS files with certain types of compression (possibly BMP or PNG). However, I appear to have accidentally included the previous versions of the library + dependencies in the Mac download, possibly because the machine on which I finally compiled the Mac version of QuPath for distribution had cached the original libraries, which had the same version number (since they traced back to the same version of OpenSlide). So v0.1.1 was the first download to actually contain the Mac OpenSlide updates intended for v0.0.7. And it turned out that those updates were missing a couple of required files, but which were available on my development machines... lulling me into a false sense of security that all was well. Anyhow, I've now repackaged OpenSlide + dependencies, added in the license notices for the additional required files, and bumped up the version number to 3.1.4_2 to make it clear which OpenSlide should be included in all future versions of QuPath compiled for Mac - regardless of machine. Outcome:; * OpenSlide included with the Mac distribution of v0.1.1 should be able to handle slightly more kinds of image than previous versions... but in the overwhelming majority of cases, it will look the same; * None of this matters for QuPath running on anything other than Mac; * I was never going to figure out there was a problem on my own, since it was working for me... so thanks for letting me know!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/32#issuecomment-265679401:49,error,errors,49,https://qupath.github.io,https://github.com/qupath/qupath/issues/32#issuecomment-265679401,4,"['avail', 'down', 'error']","['available', 'download', 'errors']"
Availability,Feature request: Export masks without a color lookup table,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/993:24,mask,masks,24,https://qupath.github.io,https://github.com/qupath/qupath/issues/993,1,['mask'],['masks']
Availability,Feature request: Make number entry fields w. up-down arrows react to mouse wheel events,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/495:48,down,down,48,https://qupath.github.io,https://github.com/qupath/qupath/issues/495,1,['down'],['down']
Availability,"Features:. - Display name, description, version; - Add extensions from a github repo[^1]; - Drag & drop repo URLs to install[^2]; - Remove and update[^3] extensions; - Open containing folder. Other changes:. - Make extensions `Map` an `Observable`; - Slightly change ""no newer version"" message, because 0.4.4 is not newer than 0.4.4 (for example); - Set minimum dimensions on welcome stage. Questionable:. - New Pane class as a (static) inner class of ExtensionManager, could be separate.; - Use of FXML for `ExtensionListCellVBox` --- it's easier for me to make sensible layouts with ML, but it also seems convoluted for a small class; - Existing ""Installed extensions"" pane distinguishes between ImageServer providers and Extensions, this one doesn't (which I think is fine, but I could easily add a wrapper class like the old `QuPathExtensionEntry` class.; - Downloading code located in DragDropImportHandler, seems like it should be in a Utils class instead. [^1]: If the repo follows some conventions; [^2]: ...hopefully, if the repo follows some conventions...; [^3]: if the extension class implements GitHubProject",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342:862,Down,Downloading,862,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342,1,['Down'],['Downloading']
Availability,First publicly available test version of QuPath,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1:15,avail,available,15,https://qupath.github.io,https://github.com/qupath/qupath/pull/1,1,['avail'],['available']
Availability,"First, draw a rectangle. Then select the area you want within the rectangle with the “Wand” tool (it will go out of the rectangle). Next, zoom in the image, hold down the ""Alt"" key and use the ""Brush"" tool to erase the area outside the rectangle",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/179#issuecomment-2046510611:162,down,down,162,https://qupath.github.io,https://github.com/qupath/qupath/issues/179#issuecomment-2046510611,1,['down'],['down']
Availability,Fix 'Create objects' rounding errors,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/771:30,error,errors,30,https://qupath.github.io,https://github.com/qupath/qupath/pull/771,1,['error'],['errors']
Availability,Fix black columns with downsampled images,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1531:23,down,downsampled,23,https://qupath.github.io,https://github.com/qupath/qupath/pull/1531,1,['down'],['downsampled']
Availability,Fix errors in Delaunay triangulation cluster features,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/556:4,error,errors,4,https://qupath.github.io,https://github.com/qupath/qupath/pull/556,1,['error'],['errors']
Availability,Fix regression in https://github.com/qupath/qupath/commit/2a66f7ce7e73c08e5d396f6d259dd050cd6e7804. Setting dark mode wouldn't work reliably if the default font was used (in practice this meant it was generally ok on Mac but broken everywhere else). Thanks to @finglis!,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1050:132,reliab,reliably,132,https://qupath.github.io,https://github.com/qupath/qupath/pull/1050,1,['reliab'],['reliably']
Availability,Fixed boundary check error,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/755:21,error,error,21,https://qupath.github.io,https://github.com/qupath/qupath/pull/755,1,['error'],['error']
Availability,Fixed error handling & timer for keeping connection alive.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/485:6,error,error,6,https://qupath.github.io,https://github.com/qupath/qupath/pull/485,2,"['alive', 'error']","['alive', 'error']"
Availability,Fixed region boundary check error and made local copies of variables in getTiledRegionRequests(),MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/755:28,error,error,28,https://qupath.github.io,https://github.com/qupath/qupath/pull/755,1,['error'],['error']
Availability,"Fixes exception thrown when trying to run a script for a project, and avoids catastrophic failure (inability to start up) if a project is specified that isn't available.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/765:90,failure,failure,90,https://qupath.github.io,https://github.com/qupath/qupath/pull/765,2,"['avail', 'failure']","['available', 'failure']"
Availability,"Fixes for; * https://github.com/qupath/qupath/issues/1265; * https://github.com/qupath/qupath/issues/1245; * https://github.com/qupath/qupath/issues/1249. Also improve image opening behavior... or non-opening when it fails ([here](https://github.com/qupath/qupath/commit/4b4955cea256d70272e96f7714cafe6e1a8b9762)). > Throw an `IOException` if `ImageDisplay.setImageData()` fails, and remove the constructor that takes an `ImageData` parameter in favor of adding a static `create()` method instead.; >; > The purpose is to 'fail faster and better' if pixels cannot be read from an image, to avoid putting the viewer into an invalid state.; > ; > Previously, failure to open an image (e.g. because JPEGXR decompression was unavailable on Apple Silicon) would lead to an extremely uninformative NPE, and then possibly a lot more exceptions when attempting to interact with the viewer in any way.; > ; > When making these changes, the constructors for `QuPathViewer` were changed to no longer take an `ImageData` as a parameter. This was always null anyway (viewers were always created without an image), so makes no real difference to the current code - but the change avoids the possibility of the constructor having to throw an exception if the image couldn't be set. Now the image must be set as a second step, after the viewer has been created.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1343:657,failure,failure,657,https://qupath.github.io,https://github.com/qupath/qupath/pull/1343,1,['failure'],['failure']
Availability,"Fixes https://github.com/qupath/qupath/issues/1220 - to an extent. This uses a very simple approach by calculating changes to the z and t position in the main viewer, and then adding these changes to the z and t values for the viewers to be synchronized - and then clipping to the actual range of z and t values supported by the image in viewer being synchronized. That should work nicely when synchronizing across stacks with identical dimensions, using the same z and t indices. But where dimensions or indices don't match, then out-of-range clipping can cause the relative difference between the main and synchronizing viewer to squeeze down to zero. I'm not at all convinced that's the ideal behavior, but it should be better than ignoring z and t entirely (as is currently the case).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1302:640,down,down,640,https://qupath.github.io,https://github.com/qupath/qupath/pull/1302,1,['down'],['down']
Availability,"Fixes https://github.com/qupath/qupath/issues/1468. There may still be an underlying issue whenever the display is initialized with a new server. What happened was that `selectedChannels` contained one extra channel that wasn't in `availableChannels`, so this was never removed within the `updateFromJSON` method. The bonus channel had the same name/properties as the in `availableChannels`, but the object itself was different. The situation 'corrected itself' whenever the image's channels were manipulated directly, not via 'Apply to similar image' changes in a different viewer. Nevertheless, anything in the selected channels list *should* always be in the available channels list - if that was truly the case, the previous implementation would have worked.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1482:232,avail,availableChannels,232,https://qupath.github.io,https://github.com/qupath/qupath/pull/1482,3,['avail'],"['available', 'availableChannels']"
Availability,"Fixes https://github.com/qupath/qupath/issues/1469 The problem was that viewers were being added to new split panes before they were removed from old ones. This didn't give an error, but also didn't work.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1479:176,error,error,176,https://qupath.github.io,https://github.com/qupath/qupath/pull/1479,1,['error'],['error']
Availability,Fixes https://github.com/qupath/qupath/issues/1472 Also speeds up the animations a bit (as they were quite sluggish) and sets a 'No measurements!' placeholder in the combo box when there are no measurements available.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1478:207,avail,available,207,https://qupath.github.io,https://github.com/qupath/qupath/pull/1478,1,['avail'],['available']
Availability,"Fixes https://github.com/qupath/qupath/issues/980; * Support `ChannelDisplayMode` in mini viewers; * Show only the visible/most relevant channels by default, based on image type; * Right-click to optionally show all available channels",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/985:216,avail,available,216,https://qupath.github.io,https://github.com/qupath/qupath/pull/985,1,['avail'],['available']
Availability,"Fixes to undo this fix:; * https://github.com/qupath/qupath/issues/1337. It turned out to be problematic in subtle ways. The main one was that there were strange permissions issues *that only emerged when the package was downloaded and installed* (not built locally). Basically, QuPath could no longer open images within its own project *unless* it had 'seen' them before in almost any interactive way (e.g. the images were opened via drag & drop, or even pasted into the script editor). When that was the case, the image opened fine consistently - and across restarts of QuPath, but not of the OS as a whole. For images QuPath hadn't seen, `new File(path).canRead()` would return false and there seemed to be no code-based way to convince it otherwise. The image-reading library didn't matter: OpenSlide, Bio-Formats, ImageJ all failed. Setting full disk access seemed promising, but ultimately didn't work consistently. The only workaround was to launch QuPath via a terminal, avoiding `launchd`. The hint that this was to blame came from; ```; tccutil reset SystemPolicyAllFiles QuPath-0.5; ```; producing an error and a report that the .plist had been modified... so macOS *knew*. Reverting this plist changes (and using Java 17) was sufficient to get things working again. The noticeable difference is that, when first trying to open an image, a system dialog pops up to ask whether QuPath can have access to Documents/Desktop/Downloads - which never happened with the change. Along the way, I learned that; * https://github.com/qupath/qupath/issues/1358. first emerged in JavaFX 20.0.1 so this PR also reverts to JavaFX 20 for now. I wanted to use Java 20 as well, but it complained when trying to build the `.pkg` from an existing `.app` because it didn't like the `app/.jpackage.xml` so that's why we're back on 17 for now.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1379:221,down,downloaded,221,https://qupath.github.io,https://github.com/qupath/qupath/pull/1379,3,"['Down', 'down', 'error']","['Downloads', 'downloaded', 'error']"
Availability,"Following up with my solution:. - The latest version of JPackage (Build 49) has renamed the `create-image` parameter to `create-app-image`, so this line needs to be changed accordingly to `params << 'create-app-image'`:. https://github.com/qupath/qupath/blob/da83ef9e809e18e4a99bf8510c03f42217bc1579/build.gradle#L415-L419. - Running the gradle build after doing this raised the ""Invalid Option: [--strip-native-commands]"" error, which I resolved by commenting out this line:. https://github.com/qupath/qupath/blob/da83ef9e809e18e4a99bf8510c03f42217bc1579/build.gradle#L439-L440. My understanding from [here](https://openjdk.java.net/jeps/343) is that `--strip-native-commands` is a jlink flag, and not a jpackage one?. Let me know if you have any questions!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/311#issuecomment-487145110:423,error,error,423,https://qupath.github.io,https://github.com/qupath/qupath/issues/311#issuecomment-487145110,1,['error'],['error']
Availability,"For now it was 2 times and luckily only 2 images (unfortunate within the same project). I think, it always happens when you use the Task manager to shut down the software, maybe that is something to be tested? I remember last time I also had to close the software with the Task manager because after half an hour it still did not respond.. . It would be awesome if indeed QuPath can discover the .bkp file and ask if this needs to be saved as the new data file, maybe indicating the date and time of the last back up to ask if you want to go back to this file or start from scratch to say so. But in general, this sounds like a good possible solution! Thanks!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/512#issuecomment-640575237:153,down,down,153,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640575237,1,['down'],['down']
Availability,"For small TMA cores and small biopsies (*.vsi and *.ndpi files, H-DAB, RGB, 100 - 500 mb, small images with one core or biopsy per image) the simple tissue detection and Stardist script often worked through the entire project in batch mode, about 100 images, without issues. For whole slides image projects (100 mb - 3,5 GB images) it can do 0 -1 images before crashing and more often crashes on the gigabyte whole slide images, so some sort of memory trouble can indeed be a possible issue (the m12 Tensorflow Qupath build only allows 32 GB memory I see, even though 64 GB is available - any way of forcing it to expand that?).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630737119:577,avail,available,577,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630737119,1,['avail'],['available']
Availability,"From the log, it looks like you're calling the script with `40770,35790` as the width and height parameters - which seems much too big, leading to a memory allocation error. Could it be that the bug is in whatever script you're using to make the request from QuPath?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/932#issuecomment-1056908079:167,error,error,167,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1056908079,1,['error'],['error']
Availability,Full bug report at https://forum.image.sc/t/removing-images-from-qupath-project-leads-to-error/85053,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1291:89,error,error,89,https://qupath.github.io,https://github.com/qupath/qupath/issues/1291,1,['error'],['error']
Availability,Full image annotation for Sparse training image throws errors for detections,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1443:55,error,errors,55,https://qupath.github.io,https://github.com/qupath/qupath/issues/1443,1,['error'],['errors']
Availability,"Full list from changelog (including some updated through previous commits):; * Bio-Formats 6.8.0; * See https://www.openmicroscopy.org/2021/12/09/bio-formats-6-8-0.html for details; * JavaFX 17.0.1; * Introduced to fix UI bugs, e.g. https://github.com/qupath/qupath/issues/833; * ImageJ 1.53i; * Downgrade to support headless, see https://github.com/imagej/imagej1/issues/140; * ControlsFX 11.1.1; * Groovy 3.0.9; * Gson 2.8.9; * Logback 1.2.9; * Picocli 4.6.2; * RichTextFX 0.10.7. Additionally, updated Gradle wrapper to 7.3.3 and both badass-runtime-plugin and dependency-license-report plugins.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/873:296,Down,Downgrade,296,https://qupath.github.io,https://github.com/qupath/qupath/pull/873,1,['Down'],['Downgrade']
Availability,"Further more, if I put the import... into if block, it gives an error:. ```; String version = ""0.2.0""; if (version.equals(""0.2.0"")){; //import qupath.imagej.images.servers.ImagePlusServer; //import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.imagej.helpers.IJTools; }; ```. ```; ERROR: Error: startup failed:; Script7.groovy: 25: Unknown type: IMPORT at line: 25 column: 1. File: Script7.groovy @ line 25, column 1.; import qupath.imagej.helpers.IJTools; ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:600); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/282#issuecomment-473504477:64,error,error,64,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473504477,8,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'ErrorCollector', 'error']"
Availability,"GENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ; * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, ; * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. ; * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, ; * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; ; * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ; * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ; * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; */; ```. 7. Save the script.; 5. Close the script (Ctrl+w); 6. Open the same script ==> the follwing error is thrown. **Expected behavior**; Enable to have an unlimited number of characters inside a block comment. **Screenshots**; ```; ERROR: QuPath exception; java.lang.StackOverflowError: null; at java.base/java.util.regex.Pattern$LazyLoop.match(Unknown Source); at java.base/java.util.regex.Pattern$GroupTail.match(Unknown Source); at java.base/java.util.regex.Pattern$BranchConn.match(Unknown Source); at java.base/java.util.regex.Pattern$CharProperty.match(Unknown Source); at java.base/java.util.regex.Pattern$Branch.match(Unknown Source); at java.base/java.util.regex.Pattern$GroupHead.match(Unknown Source); *****; at java.base/java.util.regex.Pattern$LazyLoop.match(Unknown Source); at java.base/java.util.regex.Pattern$GroupTail.match(Unknown Source); at java.base/java.util.regex.Pattern$BranchConn.match(Unknown Source); at java.base/java.util.regex.Pattern$CharProperty.match(Unknown Source); at java.base/java.util.regex.Pattern$Branch.match(Unknown Source); at java.base/jav",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1176:5023,error,error,5023,https://qupath.github.io,https://github.com/qupath/qupath/issues/1176,1,['error'],['error']
Availability,"Generating the tissue annotation can be a little tricky, for fluorescent images I started sending a downsampled image to ImageJ and using blur+thresholding tools there to generate the initial annotation. It worked well as long as the staining/nuclear density was great enough. For the rest, QuPath should be easy as long as you have a multichannel image. What format are you using?; Depending on the sensitivity you need, QuPath automatically includes your red and green channel mean intensities, so as long as you expand the cytoplasm out far enough, you will get a measure of how much stain is within that space. For the kind of staining I see in your image, I would also recommend the _Analyze->Cell analysis->Subcellular detection_ command, as it can generate a much more exact value for the ""amount of stain above a threshold"" within a given cell, without being diluted by empty space. This command will only work, though, if your image has Pixel width and height included in the metadata. Once you have the data you need on a cell to cell basis, it's as simple as creating a classifier, either with a training set and the classifier command, or creating your own, exact value, classifier. The slower way of doing this is creating your own classifier through the menu system, which Pete shows:; https://github.com/qupath/qupath/wiki/Object-classifications; about half way down the page. Using that setup, you can generate positive cells for each channel and a set of dual positive cells. My preferred method is using a script to classify. The following script is a toned down version of one Pete has posted elsewhere, but it generally gets the job done. Plus you can expand it out as much as you want using the code that is currently there. Want to classify based on two features? Add a ""def myNewFeature"" and a new ""double val2"" line inside the for loop. You can make the if statments as convoluted as you have the time or desire for, and it is much easier than changing things through the menu ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/126#issuecomment-351212559:100,down,downsampled,100,https://qupath.github.io,https://github.com/qupath/qupath/issues/126#issuecomment-351212559,1,['down'],['downsampled']
Availability,"Github issues are really for bugs. Please post on the [community forum](https://forum.image.sc/tag/qupath) :). Also if you have a sample image for other people to download and a clearer description of what you've tried so far it'll be easier. Pete mentioned above some options, that's probably a good start.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/305#issuecomment-874790067:163,down,download,163,https://qupath.github.io,https://github.com/qupath/qupath/issues/305#issuecomment-874790067,1,['down'],['download']
Availability,Give more useful error logs when unable to open files.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1372:17,error,error,17,https://qupath.github.io,https://github.com/qupath/qupath/pull/1372,1,['error'],['error']
Availability,"Glad it's resolved - I've just made a small change that will hopefully make QuPath's inability to load the old Weka extension a bit more graceful in v0.2.0, and also added a note on the downloads page for the extension to warn that it is incompatible.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/497#issuecomment-632495950:186,down,downloads,186,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632495950,1,['down'],['downloads']
Availability,"Going to have to make a few assumptions here, but I think that you probably changed locations or moved your project around from M2. M2 did not really tolerate changes to project locations very well, which led to the URI update detection and some other things. To work with the M2 projects in M2 again, the project file should either be in the same place, or I think you may need to edit the .qpproj file to update the new file path to the images. That is why the project will open (that path is set wherever you have run it from), but the images will not be found. If you open the log, I suspect that is the error message (and it will show the old file path). M8 will not run M2 projects, and I don't think it is very easy to even transfer annotations between them (you would probably need a script... and I'm not sure how well it would work even then).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/388#issuecomment-567689754:150,toler,tolerate,150,https://qupath.github.io,https://github.com/qupath/qupath/issues/388#issuecomment-567689754,2,"['error', 'toler']","['error', 'tolerate']"
Availability,"Good catch, thanks. Looks like this was a late and not-thought-through late addition - it should be ok to calculate the downsample and pass it directly, as [in the examples in the docs](https://qupath.readthedocs.io/en/latest/docs/advanced/exporting_images.html#tile-exporter). Will fix this for the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/648#issuecomment-739896593:120,down,downsample,120,https://qupath.github.io,https://github.com/qupath/qupath/issues/648#issuecomment-739896593,1,['down'],['downsample']
Availability,"Good! To answer your question:. ```QP``` is inside the 'core' modules, which means it doesn't know anything about the GUI. ```QPEx``` is a subclass of ```QP``` that lives inside the GUI module - which has access to all the core modules too. Therefore ```QPEx``` adds extra GUI-related methods (e.g. to request the QuPathGUI instance, or viewers) that aren't available within ```QP```. *Potentially*, if you only rely on ```QP```, you could run a script headlessly, and completely independent of the QuPath GUI. If instead you run your scripts from QuPath directly, then you may as well use ```QPEx```. It should do the same, but also give you access to more stuff if you need it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/102#issuecomment-332441466:358,avail,available,358,https://qupath.github.io,https://github.com/qupath/qupath/issues/102#issuecomment-332441466,1,['avail'],['available']
Availability,Great to hear that you could reproduce the error.; we've tried under osx Sierra and osx el Capitan with the same results.; thanks again!,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/32#issuecomment-265532855:43,error,error,43,https://qupath.github.io,https://github.com/qupath/qupath/issues/32#issuecomment-265532855,1,['error'],['error']
Availability,"Great! Thanks for confirming, glad that has solved it. I'll keep in mind the error in case I see it again, and close this issue now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-414691671:77,error,error,77,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414691671,1,['error'],['error']
Availability,"Great! Yes, I think we shouldn't increase the download by too much. My suggestion is to use a command line flag e.g. `-Pdocs=all` to activate this. Possible options:. * `all` - all javadocs, devs building locally may (rarely) want this; * `none` - don't include any javadocs; * `qupath` - jars that include `qupath` as the first element in the name only (should include extensions); * `default` - curated list of jars; I'd say `qupath` + JTS + ImageJ as a starting point. I think the default list should only add ~10MB or so. This also allows the gradle to be simplified and `mergedJavadocs` can be removed as a task (in preparation for a nicer javadoc viewer). **Note:** Currently, I can't build this PR fully with `./gradlew jpackage` because I get either. ```; The specified installation directory '/path/to/qupath/qupath-app/build/install/QuPath-0.6.0-SNAPSHOT' is neither empty nor does it contain an installation for 'QuPath-0.6.0-SNAPSHOT'.; ```; or (if I delete that directory); ```; Entry lib/qupath-gui-fx-0.6.0-SNAPSHOT.jar is a duplicate but no duplicate handling strategy has been set. Please refer to https://docs.gradle.org/8.7/dsl/org.gradle.api.tasks.Copy.html#org.gradle.api.tasks.Copy:duplicatesStrategy for details.; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1513#issuecomment-2089590369:46,down,download,46,https://qupath.github.io,https://github.com/qupath/qupath/pull/1513#issuecomment-2089590369,1,['down'],['download']
Availability,"Great, thanks!. The API documentation would be good... although I'm not entirely sure where/how to arrange to get it hosted. I guess you may already have things set up with IntelliJ as described on the Wiki (if not, you probably should!), and through that there may be a way to generate javadocs... or at least browse the code directly. In moments of desperation when I'm relying only on QuPath's editor, I use Java reflection to get a list of methods. Here, for example, is a script to generate a list of all the methods in QPEx, with a little bit of cleanup to reduce redundancy:. ```groovy; import qupath.lib.scripting.QPEx. def objectMethods = Object.getMethods() as Set. def replacements = [; 'qupath.lib.scripting.QPEx.' : '',; 'qupath.lib.scripting.QP.' : '',; 'public static ' : '',; 'java.lang.': '',; 'java.io.File': 'File',; 'java.util.List': 'List',; ',': ', '; ]. def sb = new StringBuilder('Methods:\n'); for (m in QPEx.getMethods()) {; if (m in objectMethods); continue; def method = m.toString(); for (entry in replacements.entrySet()); method = method.replaceAll(entry.getKey(), entry.getValue()); sb << method; sb << '\n'; }; ; print sb; ```. One day I hope to get this documented better and available on the Wiki (like ImageJ's macro reference)...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/102#issuecomment-332629803:1210,avail,available,1210,https://qupath.github.io,https://github.com/qupath/qupath/issues/102#issuecomment-332629803,1,['avail'],['available']
Availability,"Greatly improved the OMERO extension to allow (amongst other things) the user to:; - Log in/off OMERO servers with different credentials.; - View the connection types of different OMERO servers and their status (public/private - connected/not connected).; - Browse any OMERO servers from within QuPath and open any project/dataset/image from the browser.; - Retrieve OMERO project/dataset/image metadata (`More info..`).; - Advanced OMERO server search.; - Import/send ROIs from/to the original image hosted on OMERO.; - .. Most new panes are available under the 'OMERO' menu, located inside the 'Extensions' menu.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/689:543,avail,available,543,https://qupath.github.io,https://github.com/qupath/qupath/pull/689,1,['avail'],['available']
Availability,"Greetings,. I keep my images on external hard-drive, which used to be assigned to letter D: during the time of creation of the project. I recently changed my working computer, and due to multiple drives in it the letter of external drive changed, which again resulted in QuPath error about not finding the slides when trying to open them in the project. . Is it possible to modify the project files so, that I could assign them to new image path (just change the drive letter in this case)? I know it is possible to change it, when you try opening each slide separately from the folder, but it still doesn't save the new path to the file itself. Thank you! :)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/114:278,error,error,278,https://qupath.github.io,https://github.com/qupath/qupath/issues/114,1,['error'],['error']
Availability,Grid views don't show objects by default if no measurements are available,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1472:64,avail,available,64,https://qupath.github.io,https://github.com/qupath/qupath/issues/1472,1,['avail'],['available']
Availability,Groovy to JSON script error,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1264:22,error,error,22,https://qupath.github.io,https://github.com/qupath/qupath/issues/1264,1,['error'],['error']
Availability,"Haha, I mean the ability to have access to a list! It has always been something I missed in more complex classifiers. . Thanks for the link, it has been a while since i used Weka, but I may give that a try the next time I want to trim down or adjust my input selection.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424771491:235,down,down,235,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424771491,1,['down'],['down']
Availability,"Haha, I tried to do that too once! I never did pursue it though, since it only needed to be run once at the end of a project. The dirResults object is not a file path though, so manually selecting a directory means at least some of the downstream code needs to be rewritten. I will take another crack at it unless Pete gets to it first :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/268#issuecomment-467951358:236,down,downstream,236,https://qupath.github.io,https://github.com/qupath/qupath/issues/268#issuecomment-467951358,1,['down'],['downstream']
Availability,"Handles$Lookup(java.lang.Class,int) ; WARNING: Please consider reporting this to the maintainers of org.codehaus.groovy.vmplugin.v7.Java7$1 ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 15:23:37.065 [main] [ERROR] qupath.QuPath - Error running script! ; javax.script.ScriptException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:158) ; 	at qupath.QuPath.main(QuPath.java:161) ; Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311) ; 	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:151) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:121) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:133) ; 	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:325) ; 	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:224) ; 	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:190) ; 	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:226) ; 	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:196) ; 	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:965) ; 	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647) ; 	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623) ; 	at org.codehaus.g",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/286:3415,Error,ErrorCollector,3415,https://qupath.github.io,https://github.com/qupath/qupath/issues/286,1,['Error'],['ErrorCollector']
Availability,"Have you set qupath to use the available ram?. Den lør. 20. okt. 2018, 13:09 skrev simonesteffens <notifications@github.com; >:. > Hey Guys,; >; > could an image or annotation be to large for any analysis/computation?; > Because I tried to calculate my images on different computers but all of; > them stopped around 80% of the calculation.; >; > I talked to some IT-experts but they told me that these computer power; > (RAM, Processor unit etc.) should able to handle that.; >; > Anyone had that problem before?; >; > Greetings and thanks a lot.; > Simone; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/232>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/Af9pL5LW98a8f0kSlN7mcHQxVGhUybwrks5umwRigaJpZM4Xx3eP>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/232#issuecomment-431572591:31,avail,available,31,https://qupath.github.io,https://github.com/qupath/qupath/issues/232#issuecomment-431572591,1,['avail'],['available']
Availability,Have you tried building off a tag that corresponds to a release?; Does the downloadable v0.2.0-m11 for Linux work (built on Ubuntu)?. The current master builds for me fine on the Mac I'm currently using. The specific line that is causing you trouble is creating a Mat with JavaCPP + OpenCV. Therefore you might also try building any minimal code using these libraries to assess what is going wrong.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-630295536:75,down,downloadable,75,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630295536,1,['down'],['downloadable']
Availability,"Have you tried removing the Weka extension causing the error?. On Mon, Apr 27, 2020, 7:19 PM ajerusalmi <notifications@github.com> wrote:. > getting Failed to launch JVM error. Can open m8 without problems; > Thanks; >; > [image: image]; > <https://user-images.githubusercontent.com/62674450/80439704-1cc05600-88d5-11ea-95fe-ebbe661cc4ed.png>; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/458>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AFQSV6L7W4UXZTAEQFZDAWTROY4LXANCNFSM4MSNUQHQ>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/458#issuecomment-620339935:55,error,error,55,https://qupath.github.io,https://github.com/qupath/qupath/issues/458#issuecomment-620339935,2,['error'],['error']
Availability,"Hello @petebankhead, . Thank you for your quick consideration of the issue.; From what I have tested until now, it works fine. The number of characters in block comments does not throw the error anymore. and I can still run the scripts.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1176#issuecomment-1362564457:189,error,error,189,https://qupath.github.io,https://github.com/qupath/qupath/issues/1176#issuecomment-1362564457,1,['error'],['error']
Availability,"Hello Pete,; I have installed jdk-14 as well and when i compiled on my mac the following error showed. Starting a Gradle Daemon, 2 incompatible Daemons could not be reused, use --status for details; java.lang.NoClassDefFoundError: Could not initialize class org.codehaus.groovy.vmplugin.v7.Java7; at org.codehaus.groovy.vmplugin.VMPluginFactory.<clinit>(VMPluginFactory.java:43); at org.codehaus.groovy.reflection.GroovyClassValueFactory.<clinit>(GroovyClassValueFactory.java:35); at org.codehaus.groovy.reflection.ClassInfo.<clinit>(ClassInfo.java:107); at org.codehaus.groovy.reflection.ReflectionCache.getCachedClass(ReflectionCache.java:95); at org.codehaus.groovy.reflection.ReflectionCache.<clinit>(ReflectionCache.java:39); at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.registerMethods(MetaClassRegistryImpl.java:210); at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.<init>(MetaClassRegistryImpl.java:108); at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.<init>(MetaClassRegistryImpl.java:86); at groovy.lang.GroovySystem.<clinit>(GroovySystem.java:36); at org.codehaus.groovy.runtime.InvokerHelper.<clinit>(InvokerHelper.java:86); at groovy.lang.GroovyObjectSupport.getDefaultMetaClass(GroovyObjectSupport.java:59); at groovy.lang.GroovyObjectSupport.<init>(GroovyObjectSupport.java:32); at org.gradle.internal.extensibility.DefaultExtraPropertiesExtension.<init>(DefaultExtraPropertiesExtension.java:29); at org.gradle.internal.extensibility.DefaultConvention.<init>(DefaultConvention.java:49); at org.gradle.internal.extensibility.ExtensibleDynamicObject.<init>(ExtensibleDynamicObject.java:60); at org.gradle.internal.instantiation.generator.MixInExtensibleDynamicObject.<init>(MixInExtensibleDynamicObject.java:35); at org.gradle.initialization.DefaultSettings_Decorated.getAsDynamicObject(Unknown Source); at org.gradle.initialization.SettingsFactory.createSettings(SettingsFactory.java:58); at org.gradle.initialization.ScriptEvaluatingSett",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/427:89,error,error,89,https://qupath.github.io,https://github.com/qupath/qupath/issues/427,1,['error'],['error']
Availability,"Hello Pete,; I tried to install QuPATH latest version on linux CentOS.; I installed openjdk and JavaFX.; While I was installing with command:; ./gradlew createPackage -Ppackager=~/tools/jdk-14/bin/jpackage; The following error occurred (which can also be seen from the 2 screenshots attached); ![error_message_part1](https://user-images.githubusercontent.com/9053403/65413033-1344ac00-de23-11e9-988e-3dc178c613c3.png); ![error_message_part2](https://user-images.githubusercontent.com/9053403/65413036-150e6f80-de23-11e9-9275-6fe70d290ece.png). "" Task :createRuntime; /public/home/yangzhzh/tools/jdk-12.0.2/bin/jlink --output /public/home/yangzhzh/tools/qupath-master/build/jre --add-modules java.desktop,java.xml,java.scripting,java.sql,java.naming,jdk.uns> Task :createPackage FAILED"". ""FAILURE: Build failed with an exception."" . Does this mean that only this task failed (I could use some of the tasks) or the compilation failed completely?. Also, if it indicates some of the tasks can be used, is there a place showing how to use the command line to perform analyses?. I only tried it on my macMini, but it frequently aborted. That's why I switched to linux. But I wonder how to use the commands. Looking forward to your response.; Zhenzhen",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363:221,error,error,221,https://qupath.github.io,https://github.com/qupath/qupath/issues/363,2,"['FAILURE', 'error']","['FAILURE', 'error']"
Availability,Hello Pete; i tried to install qupath on my mac; and while i was installing with command the following error occured. Configure project :; Building QuPath version 0.2.0-m9; Current Java version: 13; /Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Operating system: Mac OS X 10.15.4 x86_64; Copying license directories:; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-core/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-core-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-experimental/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-bioformats/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-openslide/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-pen/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-script-editor/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-osx.jar into build/qupath; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-osx.jar into build/qupath; LICENSE PATH: /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/license-unknown.txt; Task :createPackage FAILED. Please specify where I can find a suitable packager! Something like this:; gradlew createPac,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/426:103,error,error,103,https://qupath.github.io,https://github.com/qupath/qupath/issues/426,1,['error'],['error']
Availability,"Hello all, . i had a bug running the tiles to anntoations function on a large .svs; Only parts of the image are processed. My hardware might be to weak and maybe the reason for it. Anyhow, there was no information about an error.; The image looks like this: . ![grafik](https://user-images.githubusercontent.com/16352785/32601114-e93bbd14-c541-11e7-9b6e-c41d78c56c28.png)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/115:223,error,error,223,https://qupath.github.io,https://github.com/qupath/qupath/issues/115,1,['error'],['error']
Availability,"Hello!. We had been running qupath for cell detection on a number of small images crops and it worked well. However later we decided that it would be better to make a mosaic out of input images and open one instance of qupath with a mosaic image and then run cell detection on a number of ROI. This time it did not work well. At the begining it seemed to work, so we started integrating that. Later it turned out that it randomly messes up giving a result of one ROI in multiple ones. You can see that in the screenshot. . ![image](https://user-images.githubusercontent.com/9865688/31624260-610252b6-b2a2-11e7-86b0-b8c8c08c3e7f.png). It happens only one in a 2-3 runs. What's more today I've been thinking about how I want to avoid multithreading in some other project (as it is error prone) and realized that it may be the case here. So I changed the number of processors per parallel command (in preferences) and it seems that the problem no longer exists :). To sum up, multi ROI cell detection fails randomly when multithreading is on.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/110:779,error,error,779,https://qupath.github.io,https://github.com/qupath/qupath/issues/110,1,['error'],['error']
Availability,"Hello, I was wondering how to package the program into an exe file from the source code of QuPath? I don't mean just download the installer you provide, but I want to package it directly from source into an exe file myself. Is there any good way? How did you do it? Your answer is very important to me, thank you!",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1542:117,down,download,117,https://qupath.github.io,https://github.com/qupath/qupath/issues/1542,1,['down'],['download']
Availability,"Hello, I'm one of the libvips maintainers, I can add a couple more links. libvips uses jhbuild to make windows and macos binaries, including openslide support. jhbuild came out of the gnome project: you describe a set of packages in xml and it'll download, patch, compile and link the library stack automatically. If you run inside a docker container, it's simple way to do things like nightly builds. . The build scripts are here for win:. https://github.com/libvips/build-win64. And here for macos:. https://github.com/jcupitt/build-osx. There are a set of MXE (makefile-style) scripts here for win as well, some people find them simpler to work with. https://github.com/libvips/build-win64-mxe. libvips 8.10 has added OME-TIFF pyramid support. There are some notes here:. https://libvips.github.io/libvips/2020/06/18/What's-new-in-8.10.html#pyramids. It should be quite a bit quicker than bioformats, though you may need to do some work to get the xml right. If QuPath were to use libvips for openslide import, there would probably need to be some kind of Java->libvips link. There are various Java bindings, but I've not used them myself and I don't know how suitable they would be. libvips is supposed to be mostly self-binding through introspection, so a full Java binding might only be a few weeks work. There's a high-quality C# binding which could be used as a model. https://github.com/kleisauke/net-vips. It's about 3,000 lines of code.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-716174039:247,down,download,247,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-716174039,1,['down'],['download']
Availability,"Hello,. I am trying to run the Tissue detection using structure information as a; groovy script ending with a binary downsampled mask. I am struggling; converting the mask information back to a QuPath annotation. Can you please; give me a hint?. Best regards,. Kai. Am So., 3. Jan. 2021 um 19:53 Uhr schrieb Pete <notifications@github.com>:. > https://forum.image.sc/search?q=%22qupath%22%20%22intellij%22; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/657#issuecomment-753660905>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZGYKHKRM5ZB6XVXXQL3SYC4LVANCNFSM4VR5VYCA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/657#issuecomment-757517752:117,down,downsampled,117,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-757517752,3,"['down', 'mask']","['downsampled', 'mask']"
Availability,"Hello,. I am using Qupath for manual cell counting for which I need to open a lot of files, the one after the other. My computer has 8 GB of RAM memory. When I only open QuPath, 2 GB of my RAM memory is in use. When I open the first file, the RAM use increases to 4 GB. As soon as I open the next file (I do not need the first file anymore), 6 GB of my RAM is occupied. When I then want to open the third file (or during the cell counting), I get the error ""GC overhead limit exceeded"". Info of the log:; `INFO: Writing object hierarchy with 3 object(s)...; INFO: Image data written to E:\Konijnen\Histologie\117\N 01 h.qpdata in 0.02 seconds; INFO: Returning server: Bio-Formats for E:\Konijnen\Histologie\117\N 02.czi; ERROR: java.lang.OutOfMemoryError: Java heap space; ERROR: deleting invalid memo file: E:\Konijnen\Histologie\117\.N 02.czi.bfmemo; WARN: file deletion failed E:\Konijnen\Histologie\117\.N 02.czi.bfmemo; ERROR: QuPath exception`. When I close QuPath and reopen the program, there is no problem anymore untill I open again the third file. The problem seems to be that the previous file is not closed before I open the next file, as the usage of the RAM only further increases. I have the same problem when I use another computer with 16 GB of RAM, but the problem appears only after opening more slides. Is there a way to close the previous file or to clear the RAM memory before I open a new file without entirely closing QuPath? (To maintain a few settings like showing the grid, grid settings, contrast window, cell couting window). Thanks in advance!",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/393:451,error,error,451,https://qupath.github.io,https://github.com/qupath/qupath/issues/393,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Hello,. I installed QuPath and the bioformats plugin on a new computer. When I try to open a .czi image, I get the error below and the image cannot be opened. What can be the problem and the solution?. Thanks in advance!. INFO: Refreshing extensions in C:\Users\u0127462\QuPath\extensions; INFO: Added extension: C:\Users\u0127462\QuPath\extensions\bioformats_package.jar; INFO: Added extension: C:\Users\u0127462\QuPath\extensions\qupath-extension-bioformats.jar; INFO: Bio-Formats version 6.1.1; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: ZeissCZIReader initializing E:\Konijnen\Histologie\5\6.czi; INFO: Generating memoization file E:\Konijnen\Histologie\5\.6.czi.bfmemo (9.23 MB); INFO: Returning server: Bio-Formats for E:\Konijnen\Histologie\5\6.czi; ERROR: java.lang.UnsatisfiedLinkError: ome.jxrlib.JXRJNI.new_DecodeContext()J; ERROR: QuPath exception; at ome.jxrlib.JXRJNI.new_DecodeContext(Native Method); at ome.jxrlib.DecodeContext.<init>(DecodeContext.java:43); at ome.jxrlib.AbstractDecode.decodeFirstFrame(AbstractDecode.java:101); at ome.jxrlib.Decode.decodeFirstFrame(Decode.java:51); at loci.formats.services.JPEGXRServiceImpl.decompress(JPEGXRServiceImpl.java:54); at loci.formats.codec.JPEGXRCodec.decompress(JPEGXRCodec.java:84); at loci.formats.in.ZeissCZIReader$SubBlock.readPixelData(ZeissCZIReader.java:3820); at loci.formats.in.ZeissCZIReader$SubBlock.readPixelData(ZeissCZIReader.java:3776); at loci.formats.in.ZeissCZIReader$SubBlock.readPixelData(ZeissCZIReader.java:3771); at loci.formats.in.ZeissCZIReader.openBytes(ZeissCZIReader.java:394); at loci.formats.FormatReader.openBytes(FormatReader.java:878); at loci.formats.ImageReader.openBytes(ImageReader.java:445); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.gui.BufferedImageReader.openImage(BufferedImageReader.java:86); at qupath.lib.imag",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/330:115,error,error,115,https://qupath.github.io,https://github.com/qupath/qupath/issues/330,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Hello,. I've recently installed the most recent version of QuPath (0.2.0-m12) and am getting an error message saying ""Failed to launch JVM"" when I try to launch the software. I am opening the software by double clicking on the actual QuPath application, not through opening a .svs file or any other image file. I had a similar issue when I installed a new-at-the-time vesion of QuPath (0.2.0-m8) but was eventually able to run it through means that I do not recall. Can anyone please help me out with what could be going wrong? I've attached a log from the debug version when I try to open it. I'm not very strong in computer science so unfortunately I could not decipher these hieroglyphics. -Phil . ![Qupath Error](https://user-images.githubusercontent.com/62361137/82617731-dda8bc00-9b85-11ea-8a6f-5f85cc40539a.PNG)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/497:96,error,error,96,https://qupath.github.io,https://github.com/qupath/qupath/issues/497,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hello,. In the process of grading bowel inflammation which includes leukocyte infiltrates. First step is to rotate the image to orientate the mucosa (epithelial layer) up as it's much easier to assess. Generally involves a +/- 90 degree rotation. Afterwards open counter tool and begin marking infiltrates. However the counter will register a click but no corresponding point will not appear on the image. Similarly converting detections to points does not display points either. Interestingly the points will display when the image is is rotated to <90 degrees either way. Furthermore the points will scale down with as the image is rotated towards to the original orientation. This is best seen when the smallest point size is selected. Otherwise a great program and is proving immensely helpful. Many thanks.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/193:608,down,down,608,https://qupath.github.io,https://github.com/qupath/qupath/issues/193,1,['down'],['down']
Availability,"Hello,. when I tried to open an image (.vsi format) of tissue with qupath m5, the image had completely wrong colors (the tissue was stained with CD3 Staining, but via qupath it looks like it's stained with LFB-PAS). The image is opened ,,normally'' (with correct coloring) on Olyvia or Ubuntu. Could this be an error with bioformat extensions? Thank you in advance!",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/387:311,error,error,311,https://qupath.github.io,https://github.com/qupath/qupath/issues/387,1,['error'],['error']
Availability,"Hello,; Great work on the QuPath, really nice tool!. We are working on implementing a plugin for QuPath that will provide importing slides from the PMA.Core/PMA.Start/My Pathomation servers (https://www.pathomation.com/). We are trying to achieve that by integrating our web-based tool PMA.UI (https://host.pathomation.com/sdk/pma.ui.documentation/) that provides all sort of menus and interfaces for interacting with PMA products. Unfortunately, the current build of QuPath does not contain ""jdk.jsobject"" module which is required for interaction with the WebView component. . In this PR I have introduced an adding of that ""jdk.jsobject"" to the build process and looking forward to PR being merged. Please ping me back if you have any questions/concerns. Kind Regards,; Egor",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/639:708,ping,ping,708,https://qupath.github.io,https://github.com/qupath/qupath/pull/639,1,['ping'],['ping']
Availability,"Hello,; Thanks for the detailed and rapid reply. I have made some progress following your instructions and am now at a different error message. ERROR: Error at line 17: Cannot invoke method getServer() on null object; ERROR: Script error. at org.codehaus.groovy.runtime.NullObject.invokeMethod(NullObject.java:91); at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.call(PogoMetaClassSite.java:48); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48); at org.codehaus.groovy.runtime.callsite.NullCallSite.call(NullCallSite.java:35); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:117); at Script1.run(Script1.groovy:18); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:757); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:687); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:669); at qupath.lib.scripting.DefaultScriptEditor.access$3(DefaultScriptEditor.java:659); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:979); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745). I should say that I wasn't able to copy libjep.jnilib as it doesn't exist on my system, instead it's called libjep.so. I don't know if that might be causing",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262778143:129,error,error,129,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262778143,5,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"Here is another issue I ran into. Not entirely QuPath's fault because MS Excel on windows for some reason decided to capitalize the column with values ```True``` & ```False```. When I opened the text file containing TMA data and saved it with MS Excel missing TMAs were no longer flagged as missing!! . Changing both of this:; https://github.com/qupath/qupath/blob/fca7fa5fd9efd815f4c317705fbe2a0f9c39270f/qupath-gui-fx/src/main/java/qupath/lib/gui/tma/TMASummaryViewer.java#L1627; and,; https://github.com/qupath/qupath/blob/fca7fa5fd9efd815f4c317705fbe2a0f9c39270f/qupath-gui-fx/src/main/java/qupath/lib/gui/tma/TMASummaryViewer.java#L1713. to use ```Str1.equalsIgnoreCase(Str2)``` addresses the issue. i.e.; ```java; boolean missing = missingColumn != null && ""True"".equalsIgnoreCase(missingColumn.get(i));; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1083#issuecomment-1292103430:56,fault,fault,56,https://qupath.github.io,https://github.com/qupath/qupath/issues/1083#issuecomment-1292103430,1,['fault'],['fault']
Availability,"Here's another OpenJDK 15 issue; after building with OpenJDK 15, I get the following error message (on a Linux system):. ```; euler:~/qupath (master) $ build/dist/QuPath-0.2.3/bin/QuPath-0.2.3 ; Error opening ""/home/jdg/qupath/build/dist/QuPath-0.2.3/lib/app/QuPath-0.2.cfg"" file: No such file or directory; ```. This does not occur when the package is built with OpenJDK 14, so somewhere the path is getting messed up. . Best wishes,. Julian",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/615#issuecomment-716706199:85,error,error,85,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-716706199,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hey @biovoxxel . > I would fully avoid scaling and adapting to DPI, since this is not very helpful regarding the figure quality. Problem is, the original images in QuPath are whole slide images, and rather large. [OS-2.ndpi for example](https://cytomine.com/collection/os-2/os-2-ndpi) is 126976 pixels wide. So first thing QuPath asks when doing an SVG export (with the image + overlay as background) is what downsampling factor should be applied to the original image. It's a necessary step, but what is not clear, is which factor would actually match some publication guidelines (for example, 300PPI + width of 170 mm for full page width figure [as defined here](https://cancerandmetabolism.biomedcentral.com/submission-guidelines/preparing-your-manuscript)). > Once you have the SVG you can adapt it to the document size without the need of changing any resolution etc. I agree with you, but the background bitmap embedded in the SVG document only needs to be as big as the physical size it will be printed at. Some reviews also impose a maximum file size for the SVG documents (e.g. < 20MB), so we can't just use a downsample of 1 or 2 and hope for the best. Then yes, anything vectoriel on top of the background image (lines, polygons, text...) just needs to be readable at the printed size and could easily be modified in Inkscape if not (fond size, linewidths...). Maybe I'm missing something (wouldn't be the first time), so let me know how you see this work. Cheers,; Egor",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1272#issuecomment-1604775665:409,down,downsampling,409,https://qupath.github.io,https://github.com/qupath/qupath/issues/1272#issuecomment-1604775665,2,['down'],"['downsample', 'downsampling']"
Availability,"Hey @zindy ,. Ok, I see. For such big images, I would agree that you have to down sample. I would try to stick to a factor divisible by two.; If you want to stick to the 300 PPI to theoretically have a pixel per printed dot (which is plain theory because dependent on printing device and final printing size) you could calculate it as follows (please check it again not that I made a mistake):. 17cm = 17cm / 2.54 cm/inch ~6.7 inches; At 300 PPI you would need an image width of 300 * 6.7 = 2,010 pixels minimally. Principally, you could divide your real original image width by this ~2010 pixels and you have the approximate down sampling factor. I would then use the closest factor, smaller than that and divisible by two to give it slightly more PPI.; So, if you have an original image width of 120,000 pixel, that would be an approximate factor of 120,000 / 2,000 = 60.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1272#issuecomment-1604913590:77,down,down,77,https://qupath.github.io,https://github.com/qupath/qupath/issues/1272#issuecomment-1604913590,2,['down'],['down']
Availability,"Hey Pete,; The script for exporting annotations as binary masks here [https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html](url) works perfectly and is super helpful, thanks a lot! ; I was wondering though if it would be possible to modify it to run nucleus detection (with 'qupath.opencv.WatershedNucleiCV' and save detection measurements but for each annotation in a separate file. So far I have been using saveDetectionMeasurements() command but it exports everything in one file. Would be ideal to get separate .txt for each annotation feature export (for my further analysis I need to know which cells come from the same annotation). ; I tried adding the script lines to the _export binary masks_ script but with no result, so any help would be much appreciated!",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/234:58,mask,masks,58,https://qupath.github.io,https://github.com/qupath/qupath/issues/234,2,['mask'],['masks']
Availability,"Hey. I'm trying to open an image through a symlink. I've created symlinks for both the folders with the metadata and the .vsi files, but I'm getting an error:. ![image](https://github.com/user-attachments/assets/329325f0-7e2c-4c82-b9f4-76f0745578e6). How can one create/open symlinks? I can open the images on the original paths just fine, but can't open the symlinks. Thanks",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1586:152,error,error,152,https://qupath.github.io,https://github.com/qupath/qupath/issues/1586,1,['error'],['error']
Availability,"Hi ; I am annotating on whole slide images and to save the images I only get .qpdata format. However I would like to save the image with annotations (smaller down-sampled image is fine too) in jpeg/tiff/png format. ; I tried using Extensions > ImageJ > Send region to ImageJ but is doesn't show annotated regions on saving. ; I can ""Export Image Region"" but that saves a png image without annotations.; Can you please guide me how to do that? ; Also, I can revert my last annotation but can't undo the last action while annotation while using the software. Is there a way to go back to previous steps while annotating?",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/92:158,down,down-sampled,158,https://qupath.github.io,https://github.com/qupath/qupath/issues/92,1,['down'],['down-sampled']
Availability,"Hi @EgorBushmelev, I'll have a look at this but it might take a little time. The module itself looks tiny, but I'm not sure if including it brings in any extra services. In general I'm reluctant to include jdk modules in the distribution without a clear understanding of what they will be used for (especially if QuPath doesn't require them itself) - can you give any more details of this?. Is your extension already available under an open source license / will it be? If you can link me to the code then I'd probably understand the need better.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/639#issuecomment-726872071:417,avail,available,417,https://qupath.github.io,https://github.com/qupath/qupath/pull/639#issuecomment-726872071,1,['avail'],['available']
Availability,"Hi @GiuseppeAntoniazzi, as indicated during issue creation, non-bugs are better for the forum. As an aside, it is also far more helpful to post the text of your error messages rather than a screenshot, as screenshots cannot be searched or copied from.; The error itself indicates that you have created objects with negative area and sounds like the sort of thing that happens with Warpy or transforming objects from another image resulting in the objects existing partially outside of the image area. I found [this forum post ](https://forum.image.sc/t/too-many-annotations-gives-me-data-export-error/81659/5?u=mike_nelson)when searching for the error. . You do seem to have a very large number of tiles, so if your tile size is close to a single pixel, that also might be causing problems.See this forum post. You do seem to have a very large number of tiles, so if your tile size is close to a single pixel, that also might be causing problems. Either way, this does not sound like a bug with QuPath, but more specific to your use case, and thus better placed on the forum.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1290#issuecomment-1679084114:161,error,error,161,https://qupath.github.io,https://github.com/qupath/qupath/issues/1290#issuecomment-1679084114,4,['error'],['error']
Availability,Hi @SikangSHU I'm closing this issue because you've also posted it at https://github.com/qupath/qupath/issues/221 and https://forum.image.sc/t/error-exists-when-open-a-tiff-image/61380. Please help us manage the demand for QuPath support by posting each question only once. The forum is the right place to ask so I've responded [there](https://forum.image.sc/t/error-exists-when-open-a-tiff-image/61380).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/872#issuecomment-1000156285:143,error,error-exists-when-open-a-tiff-image,143,https://qupath.github.io,https://github.com/qupath/qupath/issues/872#issuecomment-1000156285,2,['error'],['error-exists-when-open-a-tiff-image']
Availability,Hi @SikangSHU I've responded on the forum at https://forum.image.sc/t/error-exists-when-open-a-tiff-image/61380,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/221#issuecomment-1000156683:70,error,error-exists-when-open-a-tiff-image,70,https://qupath.github.io,https://github.com/qupath/qupath/issues/221#issuecomment-1000156683,1,['error'],['error-exists-when-open-a-tiff-image']
Availability,"Hi @charleshugo I would need more information to understand if this is a bug, including; * Version of QuPath you are using; * Type of classifier (e.g. RTrees, ANN); * Information about how many training annotations you have (e.g. a few hundred cells, or a few million); * Number of features for the classifier; * What happens on freezing (any error message, it eventually works again or it never works). I would also need a way to replicate the issue. Memory use was improved in v0.3.0, but elements of the live training and prediction cannot easily be parallelised because QuPath is a JavaFX application, which requires 1 thread for the user interface. Based on your description, my guess is that you may have too many training annotations - or your training annotations are too large. I suggest only drawing small training annotations to begin with, and gradually increase annotations to correct misclassifications. This can also easily happen by accident: if you have a single large annotation that has a classification (e.g. defining the entire tissue) then this will be used during classifier training and may cause a freeze. One workaround to this is to leave any large regions unclassified (or [use an 'ignored' class with an asterisk in the name](https://qupath.readthedocs.io/en/stable/docs/concepts/classifications.html#ignored-classifications); I often use `Region*`).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/831#issuecomment-949332484:343,error,error,343,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-949332484,1,['error'],['error']
Availability,"Hi @gianlucadirienzo my guess is that JPEG is probably the wrong format to share the files; QuPath works best with [pyramidal images](https://qupath.readthedocs.io/en/stable/docs/intro/formats.html). I suggest asking whoever send the files if they can do so using a different format. If a JPEG is 100 MB, then it is probably much much larger when uncompressed. This would cause the error you see.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/834#issuecomment-955668356:382,error,error,382,https://qupath.github.io,https://github.com/qupath/qupath/issues/834#issuecomment-955668356,1,['error'],['error']
Availability,"Hi @hubutui could you try building with `gradlew` (Gradle wrapper) instead? That's the 'proper' way to build QuPath - see https://qupath.readthedocs.io/en/stable/docs/reference/building.html. The part you link to in `build.gradle` isn't actually trying to specify the toolchain, but rather to recover the Java version for the toolchain that is already being used. When it comes to *specifying* the toolchain, it looks like the example you give is just copied from the code I wrote here :); https://github.com/qupath/qupath/blob/main/buildSrc/src/main/groovy/qupath.java-conventions.gradle#L11. That's what QuPath already uses, so you can already pass it a `-Ptoolchain=20` if you like. **However** I think the problem is that QuPath's build is locked to Gradle 7.5.1 because of ; * https://github.com/bytedeco/gradle-javacpp/issues/28. There hasn't been another `gradle-javacpp` release yet, and I don't want to switch to a snapshot - so I'm waiting for that before updating our build scripts. Since Gradle releases break stuff pretty often, I suspect other changes will be needed. Also, older Gradles can't build using toolchains for newer Javas and Java 20 wasn't around when Gradle 7.5.1 was released - so you're probably stuck building QuPath v0.4.x on Java 17-19. But using Gradle wrapper avoids most of those problems, as long as you use a compatible toolchain version.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1262#issuecomment-1524666346:293,recover,recover,293,https://qupath.github.io,https://github.com/qupath/qupath/issues/1262#issuecomment-1524666346,1,['recover'],['recover']
Availability,"Hi @ipaine01 this sounds like the issue reported at https://forum.image.sc/t/bug-channel-name-changed-when-changing-color/95010/6. If so, I have already fixed it at https://github.com/qupath/qupath/pull/1508 and the fix will be available in the next QuPath release. In the meantime, the workaround is to double-click on the channel (rather than clicking the color box) since this will allow you to choose a custom color in a different way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1539#issuecomment-2141265988:228,avail,available,228,https://qupath.github.io,https://github.com/qupath/qupath/issues/1539#issuecomment-2141265988,1,['avail'],['available']
Availability,"Hi @kaizen89 ,. Git issues are really for bugs, please use the forum to ask questions/help with QuPath: https://forum.image.sc/tag/qupath (plus you'll get more visibility there and more chances to get loads of answers to your questions). I'll answer here for future visitors that are looking for a similar help anyway. ; You can _Run for project_ this little script, which will save a factor-10 downsampled `tif` image of the currently opened image:. ```; // Get current server; def server = getCurrentServer(). // Write the full image downsampled by a factor of 10; def requestFull = RegionRequest.createInstance(server, 10). // Create dir and image file; def imageName = getProjectEntry().getImageName(); def path = buildFilePath(PROJECT_BASE_DIR, ""downsampled_images""); if (!new File(path).exists()); mkdirs(path). // Write image region; writeImageRegion(server, requestFull, buildFilePath(path, GeneralTools.getNameWithoutExtension(getProjectEntry().getImageName()) + "".tif"")). print ""Done!""; ```. For more info about this, check out the official docs [here](https://qupath.readthedocs.io/en/latest/docs/advanced/exporting_images.html). It's full of answers (partly including this one) and good tips.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/97#issuecomment-747467234:395,down,downsampled,395,https://qupath.github.io,https://github.com/qupath/qupath/issues/97#issuecomment-747467234,2,['down'],['downsampled']
Availability,"Hi @melvingelbard,. I see what you did and it makes the additions short and sweet. What you're losing though is the error checking and the ability to separate the arguments for the script from those for QuPath. That might make tracking some syntax errors (e.g. `--poject` vs `--project`) rather interesting without error checking. Limiting conflicts between QuPath options and script options could just be something to watch out for, I don't have an immediate feel for how much of an issue that would be (e.g. use `--newproject` rather than `--project` if the goal is to create a new project rather than opening the script on a specific QuPath project). So, pros and cons: My method ensures isolated arguments between QuPath and the script, but at the expense of having to add the `translateCommandline()` function, and a heavier syntax with quotes around the script commands and escaped quotes for paths with spaces. Yours is a lot simpler, but I think the biggest drawback is losing the error checking and possible collisions between options for QuPath and options for the script. That's just top of my head, I'm happy to have any kind of command-line control over the script, so I'll let you decide how you want to take this forward.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/647#issuecomment-744399347:116,error,error,116,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-744399347,4,['error'],"['error', 'errors']"
Availability,"Hi @oharismendy,. I've tried on some of my svs images but it seems to work fine.; What error message does QuPath show whenever you try to open the slide label?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/643#issuecomment-731358458:87,error,error,87,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-731358458,1,['error'],['error']
Availability,"Hi @ozen . The error message sounds like it is connected to drawing shapes, but to further diagnose the problem I would need the original .qpdata files - or at least the full error trace (usually under _View &rarr; Show log_). However as @Svidro says, the milestones aren't/can't be fully inter-compatible, and there can be no guarantee that an m5 project will work in m6 (although any that I've tried myself have worked ok). I've written about some of the major changes in v0.2.0-m6 [here](https://petebankhead.github.io/qupath/2019/11/17/sixth-milestone.html). I don't know why these would give an error in your case, but really I'm not able to do anything about it without further information and the ability to reproduce the problem myself. Can you reproduce the issue using a project created entirely in m6, and describe the steps required?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/376#issuecomment-554797379:15,error,error,15,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554797379,3,['error'],['error']
Availability,"Hi @petebankhead, do you know how to modify the script to export every file in a project to a jpeg with a downsampling factor of 10?; Thanks",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/97#issuecomment-747453397:106,down,downsampling,106,https://qupath.github.io,https://github.com/qupath/qupath/issues/97#issuecomment-747453397,1,['down'],['downsampling']
Availability,"Hi @petebankhead, thanks for the pointer. To close the loop here, **my installation of QuPath is now working as expected**, and the text is displaying appropriately. In case others encounter a similar problem, here's what worked to solve it:. 1. Download the Segoe UI font (e.g., from https://www.fontreach.com/segoe-ui-font-free-download/) and reinstall Segoe UI. For future reference, the following steps did NOT work:. 1. Reinstalling QuPath. 2. Using the `Repair` tool to repair the existing Qupath installation. 3. Updating Java to the latest version. 4. Updating OS from Windows 10 to Windows 11. Here are some links I found on 'javafx unreadable text' and Segoe UI:. 1. https://stackoverflow.com/questions/66747171/why-javafx-application-and-scene-builder-is-showing-garbled-text. 2. https://stackoverflow.com/questions/14091011/how-to-add-utf-8-for-non-english-support-in-javafx. 3. https://stackoverflow.com/questions/65150438/scene-builder-editor-displaying-weird-characters",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/866#issuecomment-996226418:246,Down,Download,246,https://qupath.github.io,https://github.com/qupath/qupath/issues/866#issuecomment-996226418,4,"['Down', 'Repair', 'down', 'repair']","['Download', 'Repair', 'download', 'repair']"
Availability,"Hi @petebankhead,. I just tried . ```groovy; objects_to_save = getAnnotationObjects(). def out_muscle_path = getCurrentImageData().getServer().getPath() +'_muscle_objects'. println(out_muscle_path). new File(out_muscle_path).withObjectOutputStream {; it.writeObject(objects_to_save); }; ```. and just got . ```; ERROR: Error at line 272: file:\network\path\to\the\file.ome.tiff_muscle_objects (The specified path is invalid); ```. Anything I can improve to make it work ?. Thanks :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/289#issuecomment-476099497:312,ERROR,ERROR,312,https://qupath.github.io,https://github.com/qupath/qupath/issues/289#issuecomment-476099497,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"Hi @saudet thanks very much for checking this. Yes, it is still a problem with JavaCPP 1.5.6 (although less often, with the larger limit). I have just confirmed it following the steps to reproduce above and the [OS-1.ndpi](https://openslide.cs.cmu.edu/download/openslide-testdata/Hamamatsu/OS-1.ndpi) image from openslide.org. ![Screenshot 2022-01-21 at 05 53 09](https://user-images.githubusercontent.com/4690904/150473986-f94358f8-f834-46d6-b502-d80d040829a6.png). ![Screenshot 2022-01-21 at 05 50 03](https://user-images.githubusercontent.com/4690904/150474005-3aae13a4-6bed-44f9-af05-fb0b677abf0b.png). QuPath's *Memory Monitor* above is based upon whatever `Runtime` provides. I followed the exact same steps on a 2013 iMac without any problems, so there does seem to be something different on the M1. Our use may be a little obscure. QuPath's pixel classifier ([docs](https://qupath.readthedocs.io/en/stable/docs/tutorials/pixel_classification.html)) is designed to support interactively training a machine learning classifier. It should support many image types, but is typically used with very large, tiled, multiresolution biomedical images (usually 10-50 GB per 2D image). The pixel classification uses OpenCV's ML module via JavaCPP, but in principle also supports semantic segmentation using a pretrained deep learning model with OpenCV's DNN module or TensorFlow - JavaCPP is central to it all (thanks!). In all cases, each required image tile is read on demand and cached as a Java `BufferedImage`. It is converted to an OpenCV `Mat` temporarily for whatever calculations are required, then the end result converted back to a `BufferedImage`. Therefore quite a lot of fairly large `Mat` objects can be generated for the pixels, features and predictions, but closed after use and using `PointerScope` extensively since QuPath v0.3. This seems to be working very well everywhere except on M1.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1018215470:252,down,download,252,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018215470,1,['down'],['download']
Availability,"Hi @vatempeli . I can replicate the bug if I delete one of the values in the *Create thresholder* dialog, and then press one of the associated up or down arrows. The solution is to type a valid number instead. Then the arrows should work. If that's not the issue you're seeing, I'd need more details about *exactly* what steps you used. I'd also need the full log message (the top is cropped off in the screenshot, so it misses the most important information).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/988#issuecomment-1145813614:149,down,down,149,https://qupath.github.io,https://github.com/qupath/qupath/issues/988#issuecomment-1145813614,1,['down'],['down']
Availability,"Hi @zindy I'm afraid this can't be included, as it breaks the menus on the Mac. In fact I've had to stay away from `CustomMenuItem` almost entirely for that reason (it's ok in popup menus). The problem is that QuPath uses the system menubar where possible. You can change this in the preferences, but it's on by default and that means that the app feels a lot more like a native one; on the Mac it means the menubar at the top, rather than anchored in the window. The downside on the Mac is that icons don't appear, and `CustomMenuItem` isn't supported. When I try this PR it causes the text of the recent menu items to disappear entirely. It reappears if I turn off the system menubar option... but then blocks me from ever turning it on again. I can't check it on Linux right now, but I suspect there might also be issues. Re. the separator, I can see an argument for changing it - but I'd tend towards leaving it as it is. My thinking is that it really represents the end part of the URI, so the slashes should be forward. Additionally, I'd encourage the use of forward slashes in paths for QuPath scripts - even when written in Windows - since they work consistently, while users need to know to escape backslashes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1145#issuecomment-1319606359:468,down,downside,468,https://qupath.github.io,https://github.com/qupath/qupath/pull/1145#issuecomment-1319606359,1,['down'],['downside']
Availability,"Hi Adam, the problem is access to the images - for which I can see you're using a custom extension, and not something that's part of QuPath itself. I got an email about this issue a while back; the conclusion then was that if you can access the .svs image files directly, rather than via the extension, the problem should go away. I'll close the issue here because it isn't really within QuPath itself. If you can send me an email (or track me down on ResearchGate, LinkedIn, Twitter or elsewhere) then I can discuss it further there. The missing annotations thing is a bit of a mystery, and may or may not be connected. If you can find a way to reproduce it please let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/174#issuecomment-390186531:444,down,down,444,https://qupath.github.io,https://github.com/qupath/qupath/issues/174#issuecomment-390186531,1,['down'],['down']
Availability,"Hi All, I am using code from v1.02 and having trouble switching from the ImagePlusServer that I was using. I am not sure how to change the following code to adapt to v2. The function is to export .tif files of various sizes into the project folder. . The code is here: ; ```groovy; //Exporting Image as .tif files; import ij.IJ; import ij.ImagePlus; import qupath.lib.gui.ImageWriterTools; import qupath.imagej.helpers.IJTools. def imp = IJTools.convertToImagePlus(server, request).getImage(). import qupath.lib.images.servers.ImageServer; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QP. import java.awt.image.BufferedImage. /*; * Adjustable parameters; */; int tileWidthPixels =1500 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 70 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput =('D:/QUPATH 2 - AT8/Exported Images' ) // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!. int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal). // Ensure convert the format to a file extension; String ext; if (format.startsWith",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309:841,down,downsample,841,https://qupath.github.io,https://github.com/qupath/qupath/issues/309,2,"['Down', 'down']","['Downsampling', 'downsample']"
Availability,"Hi Benjamin, the; ```groovy; guiscript=true; ```; line has to be the *very first line* in the script. Nothing else (even a comment) is allowed above it. This is a rather hackish, QuPath-specific trick to ensure that the script is run on the one JavaFX thread that is allowed to interact with the GUI. Otherwise, any attempt to do anything affecting the GUI directly results in the kind of errors you're seeing. There's an example of its use [here](https://gist.github.com/petebankhead/6f73a01a67935dae2f7fa75fabe0d6ee). Without the guiscript trick, you'd need to wrap the contents of the script in something like this; ```groovy; javafx.application.Platform.runLater {; // Everything else here...; }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/103#issuecomment-332887649:389,error,errors,389,https://qupath.github.io,https://github.com/qupath/qupath/issues/103#issuecomment-332887649,1,['error'],['errors']
Availability,"Hi Benjamin,. Great! Glad it works, thanks for letting me know. Regarding including the extension by default, that would definitely be handy. It should also be quite easy technically (thanks to Maven), but until now I've been a bit apprehensive about what requirements it would place on QuPath in terms of the GPL... i.e. providing source code, licenses for Bio-Formats and all its dependencies etc. So while I'm still learning about that side of things, I thought that requiring a separate download direct from the OME website makes things simpler in one way, even if it's a bit inconvenient. I'll give it a bit more thought though, and hopefully will be able to come up with a more streamlined way to install it at some point. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/34#issuecomment-266709923:491,down,download,491,https://qupath.github.io,https://github.com/qupath/qupath/issues/34#issuecomment-266709923,1,['down'],['download']
Availability,"Hi Benjamin,. It should work already. If you download the [QuPath Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension), then so long as you add the latest Bio-Formats 5.3.0 then you should get CZI support immediately. I've tried it with a couple of images and it seems to work well. I have some plans to update the Bio-Formats extension to incorporate [memoization](https://www.openmicroscopy.org/site/support/bio-formats5.3/developers/matlab-dev.html#improving-reading-performance) to see if it improves performance... although it shouldn't be needed for CZI support in general. Please let me know if it works for you as well, or if you find any problems. Thanks,. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/34#issuecomment-266703994:45,down,download,45,https://qupath.github.io,https://github.com/qupath/qupath/issues/34#issuecomment-266703994,1,['down'],['download']
Availability,"Hi Georgia,; Could you try using _Edit &rarr; Reset Preferences_?; If that resolves the issue then I think the QuPath isn't able to find some path to scripts. I'm not sure why (maybe a directory is missing or located on a server that isn't accessible?) and it shouldn't cause an error like this so I'll investigate anyway on the QuPath side.; If the doesn't resolve it then I'm not sure what the problem could be.... does it happen with all projects or just one?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/373#issuecomment-549758228:279,error,error,279,https://qupath.github.io,https://github.com/qupath/qupath/issues/373#issuecomment-549758228,1,['error'],['error']
Availability,"Hi Guys ; We are having trouble opening .SCN files, when we open an HE scan it does not display correctly with a Pink overlay. Also it seems that QuPath does not recognise it as HE but rather as fluorescence, I have tried to change to HE but with the same result. Have also tried to change the Brightness Contrast to no effect. The zoom feature does not seem to function even when viewing the actual slide image. ![qupath scn error](https://user-images.githubusercontent.com/35562636/35095344-076ed048-fc40-11e7-8a1e-3ab26579946a.png). Your help would be very much appreciated . Kindest of Regards",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141:426,error,error,426,https://qupath.github.io,https://github.com/qupath/qupath/issues/141,1,['error'],['error']
Availability,"Hi Guys. I am trying to open a .czi file which has 5 channel Multiplexing, this does not open at all with the logs shown below, however, the 4 plex scans open fine and we can do analysis on them. I have attached the file here https://drive.google.com/file/d/1kvqmxDA5n4Bq29FSrg8b6o_j5S--ZHp5/view?usp=sharing . Any help would very much be appreciated. Kindest of Regards . Mustafa. `INFO: Refreshing extensions in W:\Images\QuPath Extensions; INFO: Added extension: W:\Images\QuPath Extensions\bioformats_package.jar; INFO: Added extension: W:\Images\QuPath Extensions\qupath-extension-bioformats.jar; INFO: Added extension: W:\Images\QuPath Extensions\qupath-weka-extension.jar; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; WARN: Unable to open W:\Images\David\HW_5plex test\2018_02_02__4525.czi with OpenSlide: W:\Images\David\HW_5plex test\2018_02_02__4525.czi: Not a file that OpenSlide can recognize; WARN: Error opening W:\Images\David\HW_5plex test\2018_02_02__4525.czi with ImageJ: Could not open W:\Images\David\HW_5plex test\2018_02_02__4525.czi with ImageJ; WARN: QuPath Bio-Formats extension is in beta! Be watchful for bugs...; INFO: ZeissCZIReader initializing W:\Images\David\HW_5plex test\2018_02_02__4525.czi; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; INFO: Returning server: Bio-Formats for W:\Images\David\HW_5plex test\2018_02_02__4525.czi; INFO: ZeissCZIReader initializing W:\Images\David\HW_5plex test\2018_02_02__4525.czi; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' wi",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/145:980,Error,Error,980,https://qupath.github.io,https://github.com/qupath/qupath/issues/145,1,['Error'],['Error']
Availability,"Hi I am processing around 55 images in qupath they are all composite tiffs, which have all been compiled using the bioformats importer in imagej, so in theory they should all be the same type of image. they are about 2,000,000 KB each. At around image 30, every so often I would add an image and it would be image null. When this happens everything crashes. It is really slowing down the whole process! Any help would be appreciated",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/968:379,down,down,379,https://qupath.github.io,https://github.com/qupath/qupath/issues/968,1,['down'],['down']
Availability,"Hi Kai,. Thanks for the link, I only skimmed the first part of the paper. The method looks very interesting, I'll give some more thought about if/how it could be added to QuPath. In the meantime, you can already integrate whatever algorithms you like via scripting (in Groovy) or creating a Java extension. Changing/adding core algorithms raises a lot more complications in terms of user expectations and reproducibility (QuPath has thousands of users...), not to mention maintenance, and increasingly we need to think carefully about algorithms that handle images with different numbers of channels. Note that you can also use [pixel classification](https://qupath.readthedocs.io/en/latest/docs/tutorials/pixel_classification.html), which provides more sophisticated options than simply thresholding. I'd suggest reimplementing your changes as either a script or extension. Also, since this isn't a bug in QuPath, I will close the issue - the best place to discuss such things is the forum at http://forum.image.sc/tag/qupath. Best wishes,. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/657#issuecomment-753634843:472,mainten,maintenance,472,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-753634843,1,['mainten'],['maintenance']
Availability,"Hi Mario,. Thanks for letting me know. I have tried several MRXS images on v0.1.1 using Mac and it seems to be working here, so it would be good to know a bit more about the problem you are seeing. * Are you running QuPath on Windows/Linux/Mac?; * When it doesn't work, do any errors appear - or do you see any errors logged under *View &rarr; Show log*?; * Do you know if v0.1.0 works?. Thanks,. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/32#issuecomment-265467061:277,error,errors,277,https://qupath.github.io,https://github.com/qupath/qupath/issues/32#issuecomment-265467061,2,['error'],['errors']
Availability,"Hi Pete!; Reopening this as it's very similar and still happening in QuPath 0.5.0; A user had an annotation inside which there was another annotation filled with detections (over 5000); When runing ""Delaunay cluster features 2D"" we ran into; ```; Error running plugin: java.util.ConcurrentModificationException; java.util.concurrent.ExecutionException: java.util.ConcurrentModificationException; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractTaskRunner.awaitCompletion(AbstractTaskRunner.java:147); at qupath.lib.plugins.AbstractTaskRunner.runTasks(AbstractTaskRunner.java:117); at qupath.lib.gui.TaskRunnerFX.runTasks(TaskRunnerFX.java:106); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:147); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:177); at java.base/java.lang.Thread.run(Unknown Source); Caused by: java.util.ConcurrentModificationException; at java.base/java.util.ArrayList.checkForComodification(Unknown Source); at java.base/java.util.ArrayList.equals(Unknown Source); at java.base/java.util.WeakHashMap.matchesKey(Unknown Source); at java.base/java.util.WeakHashMap.get(Unknown Source); at java.base/java.util.Collections$SynchronizedMap.get(Unknown Source); at qupath.lib.measurements.NumericMeasurementList$AbstractNumericMeasurementList.getNameMap(NumericMeasurementList.java:142); at qupath.lib.measurements.NumericMeasurementList$AbstractNumericMeasurementList.close(NumericMeasurementList.java:133); at qupath.lib.measurements.NumericMeasurementList$FloatList.close(NumericMeasurementList.java:352); at qupath.opencv.features.DelaunayTriangulation.addClusterMeasurements(DelaunayTriangulation.java:466); at qupath.opencv.features.DelaunayClusteringPlugin$DelaunayRunnable.run(DelaunayClusteringPlugin.java:215); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1182#issuecomment-1876997601:247,Error,Error,247,https://qupath.github.io,https://github.com/qupath/qupath/issues/1182#issuecomment-1876997601,1,['Error'],['Error']
Availability,"Hi Pete, . I have annotations that are created by the tiles to annotations plugin. So I have 3 different classes and a lot of annotations of the same class. ; Then i select annotations by class 1 first, merge them and then i want to go on by selecting all annotations with class 2. ; That is the point when it fails. Running all steps within one run does not work. . Yes, I use windows. ; And no, the above script with rectangles and ellipse does not work on my laptop. It has Windows 10. . Svidros recommendation (thank you Svidro) did also not help. . I get a script error: Line 27 is my second ""mergeSelectedAnnotations();"" after ; resetSelection();; selectObjects { p -> p.getPathClass() == getPathClass(""NAMEofCLASS"") };. ERROR: Error at line 27: null. ERROR: Script error; at java.util.LinkedHashMap$LinkedHashIterator.nextNode(LinkedHashMap.java:719); at java.util.LinkedHashMap$LinkedKeyIterator.next(LinkedHashMap.java:742); at java.util.Collections$UnmodifiableCollection$1.next(Collections.java:1042); at qupath.lib.scripting.QPEx.mergeAnnotations(QPEx.java:320); at qupath.lib.scripting.QPEx.mergeSelectedAnnotations(QPEx.java:353); at qupath.lib.scripting.QPEx.mergeSelectedAnnotations(QPEx.java:309); at qupath.lib.scripting.QPEx$mergeSelectedAnnotations$0.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:198); at Script132.run(Script132.groovy:28); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/129#issuecomment-354857398:569,error,error,569,https://qupath.github.io,https://github.com/qupath/qupath/issues/129#issuecomment-354857398,5,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"Hi Pete, ; it happend two more times and I found in the log file, that the chosen channel 4 does not offer information for celldetection. After that QuPath switches automatically into channel 1. But Cell detection errors happen. Maybe because the switch is to slow?. You can see the nature of the cell detection errors in the screenshots. It happens, that QuPath copies celldetections form one part of the image into another one. I marked that in the screenshot above with the red polygons. . I changed the script using directly channel 1 instead of channel 4. ; Now it seems like not to happen anymore. I keep you updated. Since I changed the channel, I analysed only two more images. . The script uses fluorescence type on a DAB only stained jpg image for watershed cell detection. ; That seems to make no sence in the first place. But I found out by accident, that it allows cell detection in white areas if nuclei are not stained at all. ; This is very useful for many applications. . Is there any argument against this way for image processing of a brightfield image?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/153#issuecomment-370400288:214,error,errors,214,https://qupath.github.io,https://github.com/qupath/qupath/issues/153#issuecomment-370400288,2,['error'],['errors']
Availability,"Hi Pete, ; yes indeed. It works if pixel size information is available. . I work with jpg´s without pixel size information at the moment. . Thank you for your explanation!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/154#issuecomment-371119105:61,avail,available,61,https://qupath.github.io,https://github.com/qupath/qupath/issues/154#issuecomment-371119105,1,['avail'],['available']
Availability,"Hi Pete, and thanks for putting us in the loop!; It is true that the` RegionRequest` bits are a bit verbose, and any ease on that part would be welcome. . The proposed changes will have little effect on our scripts, as most calls are for `IJTools.createPathImage()` in any case... Concerning Warpy, and other extensions, we are happy to modify them and to update them no problem, and make sure to freeze the previous versions. On a personal note, breaking changes let us keep an eye on scripts that are still being used (often for projects that have little to do with the original requirements), so we kind of see it as a good thing when people come to us because something ""no longer works"". Helps us make sure that not too many weird things are being done with our scripts :) . I am pinging @rdornier, for completion, as he was working on the OMERO-RAW part we have here and might need to make some changes there, if we keep that extension after the 0.4 update. . One argument for making more intensive changes, without too much backwards compatibility is that it really forces us to keep up with the new developments, rather than let it linger on until it's too late. So I'm more in favor of ""breaking"" than keeping full backwards compatibility. Though admittedly, our user base is not as large as yours, so we won't see as much of a tidalwave... > include this in QuPath v0.4.0 (hopefully later this month). Awesome. > remove the default implementation of readRegion in v0.5.0, forcing any subclass of ImageServer to be updated to work... but still allowing scripts to use readBufferedImage, with the deprecation message logged. OK for us, though if the scripts end up breaking, this would not be a problem, kind of a nice extra way of announcing that things have changed. > remove readBufferedImage later, e.g. in v0.6.0. Not in v0.5.0 already? . Thanks again for the discussion! Looking forward to notes and comments from others!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072#issuecomment-1273134547:785,ping,pinging,785,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072#issuecomment-1273134547,1,['ping'],['pinging']
Availability,"Hi Pete, dear all, . I merged annotations of the same class into an Area annotation with class. ; Afterwards I let QuPath run cell detection. ; But it does not count the cells inside the ROI anymore!; Normally the cell count will be shown in the annotions tab: ; ![grafik](https://user-images.githubusercontent.com/16352785/36159106-368468ea-10de-11e8-886e-467bf90ae69d.png). And, even a bigger problem: the cell count does not appear anymore in the annotations results!. Is it maybe a formation error after merging annotations?. I use the following script to merge annotations: . selectAnnotations();; annotations = getAnnotationObjects().findAll {it.isAnnotation() && it.getPathClass() == getPathClass(""NameOfClass"")}; mergeAnnotations(annotations); selectObjects {it.isAnnotation() && it.getPathClass() == getPathClass(""NameOfClass"")}; mergeSelectedAnnotations();",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/147:496,error,error,496,https://qupath.github.io,https://github.com/qupath/qupath/issues/147,1,['error'],['error']
Availability,"Hi Pete, thanks for all your help so far! I am getting a somewhat different error now. . Here are the relevant lines of code: ; `// Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus; def imp = IJTools.convertToImagePlus(serverOriginal, request).getImage(). `. And here is the error message I am getting. ; `ERROR: Error at line 71: No such property: request for class: Script1. ERROR: Script error` . With a long following, which I can attach if you want. . Sorry if this is a silly question, I appreciate the help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-486769907:76,error,error,76,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486769907,6,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"Hi Pete, thanks for your reply. I agree that every abnormal termination will cause data to be lost, but I do have the strong feeling it should not brake the file ;) I hope you can agree on that. . I tried your approach and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/512#issuecomment-640534382:251,avail,available,251,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382,4,"['ERROR', 'avail', 'error']","['ERROR', 'available', 'errors']"
Availability,"Hi Pete,. . thank you so much for the new versoin, it works perfectly with my hp spectre 360 and the hp tilt pen!. . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. . Once again thank you so much!. . Yours,. Marcel. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 31. Juli 2018 11:10; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . Both are required - you'll need all the code there. If you follow the instructions towards the end of the linked page (starting with Step by step guide) you should end up with a runnable version of QuPath, with all the different components and dependencies. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-409255073> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t63nFYvKbsHb5pvIvHf0JgJLMPRaks5uMHMygaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9tyO3hUoiEJIDsuFGimLqg7M8qJCfks5uMHMygaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-410879743:498,down,down,498,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-410879743,1,['down'],['down']
Availability,"Hi Pete,. . thank you so much!. However can you tell me which is the very latest version?. Is it “core-processing-awt” or “gui-fx”? Both were published five days ago. . Once again thank you so much for your quick support!. . Marcel. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Donnerstag, 26. Juli 2018 05:04; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . Hi Marcel, if you want to try the version described here <https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html> then hopefully it resolves this issue. Be sure to fetch the very latest version, as I've only incorporated in the changes in the last few minutes. I just have one Dell touchscreen to test on (and no pen), but with these changes it certainly behaves a lot more sensibly than it did previously. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-408029691> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t627iqkNMmyVFat9LbnxkR_wY7xIks5uKYX4gaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t_MNy2cguhmKmBspZsSx-GuGcLgeks5uKYX4gaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-409252791:435,down,down,435,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-409252791,1,['down'],['down']
Availability,"Hi Pete,. . that seems to be the solution! Thank you sooo much!!!!. I still got some weird lines in the command prompt but QuPath is working now, supports all pen functions I was looking for and I am able to open *.svs files again!. . You are truly the best!. . Once again thank you so much for your fast reply and great solutions!. Best regards from New York,. Marcel. . . . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 21. August 2018 08:03; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . It looks like you're using 32-bit Windows - or, if not, then at least the 32-bit version of the Java JDK. QuPath needs the 64-bit bit version, unfortunately. If your Windows supports it, then you could try uninstalling the Java JDK and installing the one on the download page flagged as 'Windows x64' (rather than 'Windows x86'). That might help. I don't see exactly why it would cause this error (at 98%, so close!), but it's my best guess... I've not seen that error before, but I've only been able to test it on a 64-bit system. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-414650057> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t8wENrYavz2PybkZl3_cTMFIedraks5uS_bZgaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t5RWGu2zR9v2mWkHqPuU0bk-gBHDks5uS_bZgaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-414685806:578,down,down,578,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414685806,4,"['down', 'error']","['down', 'download', 'error']"
Availability,"Hi Pete,. I encountered a problem when I tried to open a tif which size is 428 MB, here is the log:. ```; INFO: TiffDelegateReader initializing C:\Users\617\Desktop\1800164.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for C:\Users\617\Desktop\1800164.tif; WARN: Unable to parse magnification: null; INFO: Returning server: Bio-Formats for C:\Users\617\Desktop\1800164.tif; ERROR: Error opening image 0 for region java.awt.Rectangle[x=0,y=0,width=23422,height=30978]; at loci.formats.FormatReader.openBytes(FormatReader.java:880); at loci.formats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.gui.BufferedImageReader.openImage(BufferedImageReader.java:86); at qupath.lib.images.servers.BioFormatsImageServer.readBufferedImage(BioFormatsImageServer.java:683); at qupath.lib.images.servers.BioFormatsImageServer.readBufferedImage(BioFormatsImageServer.java:95); at qupath.lib.images.servers.AbstractImageServer.getBufferedThumbnail(AbstractImageServer.java:70); at qupath.lib.gui.helpers.DisplayHelpers.estimateImageType(DisplayHelpers.java:117); at qupath.lib.gui.QuPathGUI.createNewImageData(QuPathGUI.java:2269); at qupath.lib.gui.QuPathGUI.createNewImageData(QuPathGUI.java:2258); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2236); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2152); at qupath.lib.gui.commands.OpenCommand.run(OpenCommand.java:51); at qupath.lib.gui.QuPathGUI.lambda$createCommandAction$46(QuPathGUI.java:3122); at org.controlsfx.control.action.Action.handle(Action.java:419); at org.controlsfx.control.action.Action.handle(Action.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandl",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/221:477,ERROR,ERROR,477,https://qupath.github.io,https://github.com/qupath/qupath/issues/221,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"Hi Pete,. I have used the code from ""Simple Tissue Detection"" for demonstration; purposes because I have no experience in Java (and Groovy too) development; at all. The few lines of demo code are simply placed between your ui/image; extraction code and the transformation of the tissue area mask to an; annotation.; Is it possible to reuse this module code and transfer to an extension or a; script?. Best regards,. Kai. Am So., 3. Jan. 2021 um 16:34 Uhr schrieb Pete <notifications@github.com>:. > Hi Kai,; >; > Thanks for the link, I only skimmed the first part of the paper. The; > method looks very interesting, I'll give some more thought about if/how it; > could be added to QuPath.; >; > In the meantime, you can already integrate whatever algorithms you like; > via scripting (in Groovy) or creating a Java extension. Changing/adding; > core algorithms raises a lot more complications in terms of user; > expectations and reproducibility (QuPath has thousands of users...), not to; > mention maintenance, and increasingly we need to think carefully about; > algorithms that handle images with different numbers of channels.; >; > Note that you can also use pixel classification; > <https://qupath.readthedocs.io/en/latest/docs/tutorials/pixel_classification.html>,; > which provides more sophisticated options than simply thresholding.; >; > I'd suggest reimplementing your changes as either a script or extension.; > Also, since this isn't a bug in QuPath, I will close the issue - the best; > place to discuss such things is the forum at; > http://forum.image.sc/tag/qupath; >; > Best wishes,; >; > Pete; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/657#issuecomment-753634843>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZG4BEALLTARPZEDYZVLSYCFBTANCNFSM4VR5VYCA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/657#issuecomment-753650048:291,mask,mask,291,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-753650048,2,"['mainten', 'mask']","['maintenance', 'mask']"
Availability,"Hi Pete,. I tried your code from your blog regarding creating binary masks: https://gist.githubusercontent.com/petebankhead/0b14beef131312042686c01056104b85/raw/8223a934f10761a885ef6cab20d71f786029bb84/QuPath-Export%20binary%20masks.groovy. It works perfectly smooth and would save me lots of work. There's just one thing that gives me a bit of trouble: The binary masks are not embedded in the whole image, meaning if I read them in somewhere else, I just get the mask according to those squared little images but I don't know where exactly they are located in the whole image that I'm annotating (unless there's something I'm overlooking right now). Could you tell me how to modify your code from the blog in order to save the binary masks embedded in the whole image?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/95#issuecomment-388339764:69,mask,masks,69,https://qupath.github.io,https://github.com/qupath/qupath/issues/95#issuecomment-388339764,4,['mask'],"['mask', 'masks']"
Availability,"Hi Pete,. I'm running QuPath under Mac. We replicated the issue on 2 machines. Version 1.0.0 works fine, too.; Server Type: OpenSlide. V1.0.1. Error in log is: Could not load OpenSlide native library (followed by a lot of Java errors); Server Type: ImageJ server. Cheers,; Mario",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/32#issuecomment-265471212:143,Error,Error,143,https://qupath.github.io,https://github.com/qupath/qupath/issues/32#issuecomment-265471212,2,"['Error', 'error']","['Error', 'errors']"
Availability,"Hi Pete,. I’ve attached the classifier file. Thanks very much for your help,. Cam. From: Pete [mailto:notifications@github.com]; Sent: 22 March 2018 15:07; To: qupath/qupath <qupath@noreply.github.com>; Cc: Camilla Coulson-Gilmer <>; Author <author@noreply.github.com>; Subject: Re: [qupath/qupath] loading classifier error (#160). I don't know, I haven't seen this problem before - and if nothing has changed in the meantime, I see no reason why the classifier wouldn't work. The updates mentioned above shouldn't affect this (more accurately, the updates that might affect it aren't available there yet). When you say you copied and pasted the classifier, I guess you mean the whole file through Windows Explorer?. Do you have any more luck if you try running it from a different location, e.g. copy it to the Desktop and try from there?. If you are able to send me the .qpclassifier file then I can investigate some more. If there isn't a way for you to upload it here and you haven't already got my email address from somewhere, then if you sign up to the QuPath user forum on Google Groups<https://groups.google.com/forum/#!forum/qupath-users> I can contact you directly. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/160#issuecomment-375339965>, or mute the thread<https://github.com/notifications/unsubscribe-auth/Aj60nFu_XkbrWH1Xr6vaENeGtItS4XCuks5tg74MgaJpZM4S3J1c>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/160#issuecomment-375346429:318,error,error,318,https://qupath.github.io,https://github.com/qupath/qupath/issues/160#issuecomment-375346429,2,"['avail', 'error']","['available', 'error']"
Availability,"Hi Pete,. Sorry I just saw your email in the junkbox. Thanks for informing that.; I have tried to look up the new writings for calling imageJ somewhere and modified a bit in my script and now it is working. P.S. I am a very beginner for writing the script. From: Pete <notifications@github.com>; Sent: 22 May 2020 07:46; To: qupath/qupath <qupath@noreply.github.com>; Cc: Wong, Dickson <dwong@ukaachen.de>; Comment <comment@noreply.github.com>; Subject: Re: [qupath/qupath] Failed to launch JVM (SOLVED) (#497). Glad it's resolved - I've just made a small change that will hopefully make QuPath's inability to load the old Weka extension a bit more graceful in v0.2.0, and also added a note on the downloads page for the extension to warn that it is incompatible. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F497%23issuecomment-632495950&data=02%7C01%7C%7Cc314e1e59f974884e4a808d7fe135d77%7C5a6d5ee56edf4a26ba93f5872dbb9614%7C0%7C0%7C637257231445064114&sdata=eepYC0iEwfTzvOrYiM0sSczIVqw2XCVBl1XLca4S0QE%3D&reserved=0>, or unsubscribe<https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAL5RYCOZ67FFTMCPJL624QDRSYGQJANCNFSM4NHKGXFA&data=02%7C01%7C%7Cc314e1e59f974884e4a808d7fe135d77%7C5a6d5ee56edf4a26ba93f5872dbb9614%7C0%7C0%7C637257231445074103&sdata=VALeHGevcV768bCs06vCj7qhSGOSp827e%2Bw8ngY7%2BOU%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/497#issuecomment-637489171:698,down,downloads,698,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-637489171,1,['down'],['downloads']
Availability,"Hi Pete,. Thank you for your reply. I attach another video which goes back in time to find which version was last able to open the image in question. In short, it's 0.3.0, but the video serves as evidence that I checked them correctly. I will rerun the tile extraction using QuPath 0.3.0 tonight (as opposed to 0.3.2, which is the one that failed). I hope this new information helps. When I say the code fails on one image, but works if I rerun it, I'm really not joking. It is super weird. I was thinking of putting it inside a try and except statement and giving it three or four goes before accepting failure because it never seems to fail on the same image twice in a row. I'd like to try building from source out of curiosity. I will also ask my PI if I'm allowed to get the image to you, if you'd like to try it for yourself?. https://user-images.githubusercontent.com/44713405/156409401-178cd9aa-81b1-4c2d-b76a-4bc8965f394c.mp4. Best,. Jim",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/932#issuecomment-1057152300:604,failure,failure,604,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057152300,1,['failure'],['failure']
Availability,"Hi Pete,. That's very helpful, thanks a lot ! It will make my analysis way faster. Sincerely,. GOEPP Julie; Manager of the Primary Airway Cell Biobank (PACB); Cystic Fibrosis Translational Research Center (CFTRc)<http://mcgill.ca/cftrc/platforms/primary-airway-cell-biobank-pacb>; McGill University - Department of Physiology; McIntyre Building, Room 1012; 3655 Promenade Sir William Osler; Montreal – Qc – Canada – H3G 1Y6; (514) 398-4323 (ext #2 or 3); PACB Website<http://mcgill.ca/cftrc/platforms/primary-airway-cell-biobank-pacb>. ________________________________; De : Pete <notifications@github.com>; Envoyé : 21 juin 2018 11:23:17; À : qupath/qupath; Cc : Julie Goepp, Ms; Author; Objet : Re: [qupath/qupath] Any way to add area measurement from several bruch tool areas ? (#179). There are a few options:. * Get the measurements from Measure → Show annotation measurements, copy them into a spreadsheet and add them up there; * When you're drawing with the Brush tool (or the Wand might be nicer, if you have good contrast between the purple stain and surroundings), hold down Shift to append to an existing annotation - if you're pressing Shift, different regions can be discontinuous but still counted as one (similarly, you can hold down Alt to use the Brush or Wand and subtract regions); * Select all the annotations (either in the Annotations pane on the left, or by alt-clicking on them with the Move tool selected in the main image), right-click on the image and choose Annotations → Merge selected annotations. Hopefully one of those helps!. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/179#issuecomment-399142573>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AmmAR_KTr2VFQD77eEVrU9ppSThbe9tKks5t-7pkgaJpZM4UyRk4>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/179#issuecomment-399149480:1081,down,down,1081,https://qupath.github.io,https://github.com/qupath/qupath/issues/179#issuecomment-399149480,2,['down'],['down']
Availability,"Hi Pete,. thanks for your answer. I want to learn all functions of QuPath. I like ; your documentation a lot. Its well done work. Do you develop QuPath all alone by yourself?. Another question: is there a log file, QuPath is writing, that can help ; you to track and find the reason for bugs and system crashes?. We did that with our software in the past. It is very helpful. Best. David. Am 23/01/2017 um 21:44 schrieb Pete:; >; > Thanks for reporting this. I have not been working with CZI images ; > myself, but I recently received one example image with this problem. ; > Unfortunately, I have not yet been able to identify the exact cause, ; > beyond the fact that too much memory is used. Because the image is not ; > being read by QuPath directly (but rather Bio-Formats) it is a bit ; > harder for me to track down where exactly the problem lies. However, I ; > will continue to investigate, and add an update here when I learn more.; >; > In the meantime, I have been told that the Zeiss ZEN software is able ; > to export the different scenes as separate images, which can then be ; > read into a QuPath project ; > <https://github.com/qupath/qupath/wiki/Projects>. Therefore this may ; > be a workaround that enables you to work with the images in QuPath.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub ; > <https://github.com/qupath/qupath/issues/45#issuecomment-274611030>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/APmGEV0UakHZI556HGXSHym-5fglXkHwks5rVREZgaJpZM4Lrcx8>.; >. -- ; Mit freundlichen Grüßen; Kind regards. Dipl. Biologe; David Haumann; CEO. Tel: +49 (0)7247 9342998-0; Mobil: +49 (0)171 9903171; E-Mail: david.haumann@hs-analysis.com; Webseite: www.hs-analysis.com. HS-Analysis GmbH; Steinbuch Centre for Computing (SCC), Geb. 441; Hermann-von-Helmholtz-Platz 1; 76344 Eggenstein-Leopoldshafen. Handelsregister: Amtsgericht Mannheim HRB 723920; UStIdNr: DE304551126; G",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/45#issuecomment-274930919:818,down,down,818,https://qupath.github.io,https://github.com/qupath/qupath/issues/45#issuecomment-274930919,1,['down'],['down']
Availability,"Hi Pete,. there's no much else I can do on this for now. It's ready to be tested by someone else in case I missed anything, and I don't have a mac to test on so I just can't guarantee this will work on all platforms. Also, the code is probably over-annotated and over-verbose on the console side, but that's just so that you can check what's going on in case there are issues I didn't notice myself. Once okayed, the code can be both toned down and cleaned up :-). If this is too much to test before the new release, we can reconsider this change for later. In fact, for this to be complete, I would also need to document my change (wouldn't be fair to let *you* do it if I wrote the feature) and add a middle button to your ""input viewer"". Cheers,; Egor",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1312782231:440,down,down,440,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1312782231,1,['down'],['down']
Availability,"Hi Pete,; I gave the full path to compile, yet it still shows error:. (base) [yangzhzh@hpc-login-gpu01 qupath-master]$ ./gradlew createPackage -Ppackager=/public/home/yangzhzh/tools/jdk-14/bin; Starting a Gradle Daemon (subsequent builds will be faster). > Configure project :; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Building QuPath version 0.2.0-m4; Current Java version: 12; /public/home/yangzhzh/tools/jdk-12.0.2; Operating system: Linux 3.10.0-862.14.4.el7.x86_64 amd64; Copying license directories: ; /public/home/yangzhzh/tools/qupath-master/qupath-core/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-core-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-bioformats/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-openslide/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin; /public/home/yangzhzh/tools/jdk-14/bin --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-534106040:62,error,error,62,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534106040,1,['error'],['error']
Availability,"Hi Pete,; I really appreciate your fast reply and your support.; As a non-code-speaking researcher I have found qupath relatively easy to navigate, although there is a degree of trial-and-error involved.; I have implemented your suggestions and it seems to have got around the problem. My main issue is that I need more memory on my computer for the processing that I am doing (4GB RAM is not enough).; Thanks again,; Chris. From: Pete [mailto:notifications@github.com]; Sent: Monday, 8 January 2018 6:19 AM; To: qupath/qupath <qupath@noreply.github.com>; Cc: Christopher Rowe <Christopher.W.Rowe@uon.edu.au>; Author <author@noreply.github.com>; Subject: Re: [qupath/qupath] PositiveCellDetection and Classifier fails (#130). It sounds like a memory issue to me too, although I'm not certain. Hopefully the log can help. I plan to write a better script to help explore memory issues soon, but in the meantime you could try this very basic one:. // Print the current memory situation. def runtime = Runtime.getRuntime(). double scale = 1.0/1024.0/1024.0. print 'Max memory (MB): ' + (runtime.maxMemory() * scale). print 'Total memory (MB): ' + (runtime.totalMemory() * scale). print 'Used memory (MB): ' + ((runtime.totalMemory() - runtime.freeMemory()) * scale). // Try to reclaim whatever memory we can, including emptying the tile cache. javafx.application.Platform.runLater {. getCurrentViewer().getImageRegionStore().cache.clear(). System.gc(). }. The top bit gives some numbers on current memory usage. Roughly, the 'max' is what QuPath/Java is allowed to use, the 'total' is what it is currently claiming the right to access (which might change over time, potentially increasing towards the 'max' as required), and the 'used' value is what is currently needed. The second bit of the script then tries to bring down the 'used' value by clearing out the cache of image tiles and reclaiming whatever memory if can. So if you run the script twice in a row, the 'used' memory value should generally b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/130#issuecomment-355877016:188,error,error,188,https://qupath.github.io,https://github.com/qupath/qupath/issues/130#issuecomment-355877016,1,['error'],['error']
Availability,"Hi Pete. I tried ImageJ earlier to no avail same issue with the pink overlay, looks like a bioformat issue, . here is a link to the file if you would like to have a look. I will try and get in touch with the guys up at Dundee regarding this issue . https://drive.google.com/file/d/1-zEYM58GxPxk5ldECU3LU-A4ZpSMVqJd/view?usp=sharing. Mustafa",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-358757127:38,avail,avail,38,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-358757127,1,['avail'],['avail']
Availability,"Hi Pete:. Thanks so much for your helpful comments!. I am a veterinary pathologist working with novel immunotherapeutic approaches to cancer treatment. We use in situ hybridization extensively for target discovery and to identify target + cells within our xenograft models. In addition to measuring a reduction in xenograft size via calipers, I am interested to use QuPath to document a reduction in the number of ISH target + cells / unit area of the xenograft. It would be incredibly helpful to have a ""learn by example"" approach to speed the task. Maybe you would select ISH- stromal cells, ISH+ stromal cells, ISH- tumor cells and ISH+ tumor cells, etc. as annotations and then run the Classifier?. I am also involved in gene therapy experiments in which we are attempting to knock down mRNA expression in specific cell populations in vivo. I would like to use QuPath to identify the cell population using annotations, then measure the amount of ISH signal per cell in treated vs untreated animals. In this case, rather than eliminating the cells of interest, we are attempting to demonstrate a reduction in ISH signal per cell. Thus, simply designating cells as ""positive"" or ""negative"" will not suffice. Rather, using the script you wrote above would be helpful to show that you have a reduction of cells listed as 4+ and 3+ and an increase in cells listed as 0 or 1+. Alternatively, if you could calculate an ""H score"" based upon a 5-point scale (negative, 1+, 2+, 3+, 4+), that would be a great way to compare between groups. . I think the intersection between pathology and artificial intelligence / machine learning is fascinating. I wonder if it would be feasible to learn Groovy so I can write my own scripts? . Thanks again!. Jim",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/146#issuecomment-368345195:786,down,down,786,https://qupath.github.io,https://github.com/qupath/qupath/issues/146#issuecomment-368345195,1,['down'],['down']
Availability,Hi Pete; i tried to install qupath on my mac ; and while i was installing with command the following error occured. > Configure project :; Building QuPath version 0.2.0-m9; Current Java version: 13; /Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Operating system: Mac OS X 10.15.4 x86_64; Copying license directories: ; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-core/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-core-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-experimental/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-bioformats/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-openslide/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-pen/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-script-editor/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-osx.jar into build/qupath; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-osx.jar into build/qupath; LICENSE PATH: /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/license-unknown.txt; > Task :createPackage FAILED; -------; Please specify where I can find a suitable packager! Something like this:; gradl,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-606369334:101,error,error,101,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-606369334,1,['error'],['error']
Availability,"Hi Peter, . Thank for the very complete message! I'll go and implement this now and submit it to see if it's to your liking. Right now I have placed my version of the ImageJMacroRunner in our QuPath, so that I could process the images I am receiving. > Furthermore, it might be prudent to take parallelization into account, and the result returned by PathPrefs.getNumCommandThreads(). I am not sure how you want to address this, each command thread might take an image of a different size, and these threads to not talk to each other. In a case like this, it would make more sense to find a way to gracefully show some sort of out of memory error in case this happens. > Currently you can use Objects → Create full image annotation. Perfect, then you're right, no need to send the whole image by default if it's just one command! I was making a RectangleROI with the dimensions of the image server in my script...; [EDIT] Hmm.. Actually I just tested that last one and preferred my way, as I do not need to add the annotation to the hierarchy.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/134#issuecomment-356863236:641,error,error,641,https://qupath.github.io,https://github.com/qupath/qupath/pull/134#issuecomment-356863236,1,['error'],['error']
Availability,"Hi Peter,; I was trying to make a project folder sharable by sending the image files in an annexing folder. My Idea was initially to modify the project json image paths manualy to either make them relative to the project dir using ""../image/image.file"" or ""{$PROJECT_DIR}/image/image.file"". It seems that since the milestone releases the json structure and image loading changed substantially. Thus when I try the above solution, I get:. ```; ""uri"": ""file:/../image/image1.tif"" >>> I get the new prompt window to change the URIs. ""uri"": ""file:/{$PROJECT_DIR}/../image/image1.tif"" >>> Error : java.net.URISyntaxException: Illegal character in path at index 6:....; ```. So my guess is simply that the new uri process broke those old workarounds. Is the an other way to either use the ""../"" syntax or to use a project dir variable?. I know that #325 specifies that the m3 version should recognize relative paths, but I simply can't get it to work. Desktop (please complete the following information):. OS: Linux Ubuntu 16.04; QuPath Version 0.2.0-m3 vs 0.1.2",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/346:584,Error,Error,584,https://qupath.github.io,https://github.com/qupath/qupath/issues/346,1,['Error'],['Error']
Availability,"Hi Svidro,. thank you very much for your suggestion. I renamed the file you attached (TMA.txt) to a .qpdata file giving the same name of my image (1.qpdata). Then, I opened the 1.qpdata by double clicking, but I found the following two error messages: ""Error invoking method"" and ""failed to launch JVM"". Could you suggest me how to use the qpdata file?. thank you in advance for your help. best regards. ________________________________________; Da: Svidro [notifications@github.com]; Inviato: giovedì 29 novembre 2018 16.34; A: qupath/qupath; Cc: Tuccitto Alessandra; Author; Oggetto: Re: [qupath/qupath] TMA grid (#249). I would recommend looking through #77<https://github.com/qupath/qupath/issues/77>. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/249#issuecomment-442877107>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ArWoyy9fQqh1OZIfaIx3IN1LUJdlXAEKks5uz_51gaJpZM4Y5w90>. La presente comunicazione, che potrebbe contenere informazioni riservate e/o protette da segreto professionale, è indirizzata esclusivamente ai destinatari della medesima qui indicati. Ogni informazione qui contenuta, che non sia relativa alla nostra attività caratteristica, deve essere considerata come non inviata. Nel caso in cui abbiate ricevuto per errore la presente comunicazione, vogliate cortesemente darcene immediata notizia, rispondendo a questo stesso indirizzo di e-mail, e poi procedere alla cancellazione di questo messaggio dal Vostro sistema. E' strettamente proibito e potrebbe essere fonte di violazione di legge qualsiasi uso, comunicazione, copia o diffusione dei contenuti di questa comunicazione da parte di chi la abbia ricevuta per errore o in violazione degli scopi della presente. Ricordiamo che la tecnologia di trasmissione utilizzata non consente di garantire l’autenticità del mittente né l’integrità dei dati. This communication, which may contain confidential",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/249#issuecomment-442919733:236,error,error,236,https://qupath.github.io,https://github.com/qupath/qupath/issues/249#issuecomment-442919733,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hi Tobias,. Everything in the stack trace relates to JavaFX - so I don't see anywhere where QuPath would be able to catch the error and do anything about it. A similar error was reported as a JavaFX bug but is apparently resolved [here](https://bugs.openjdk.java.net/browse/JDK-8095826). I'll leave the issue open for a while in case any new info comes to light, but since I don't have a Dell Active Pen to test with, and it doesn't _seem_ to be a problem in QuPath itself, I'm not sure whether anything can be done about it on the QuPath side. (If you could write a minimal JavaFX application that replicates the problem then it could be submitted as a JavaFX bug)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/372#issuecomment-549435406:126,error,error,126,https://qupath.github.io,https://github.com/qupath/qupath/issues/372#issuecomment-549435406,2,['error'],['error']
Availability,"Hi again! I finally went and edited the changes into my code in Eclipse, and while the channel option shows up and does not cause any errors, I am not seeing the channel change have any effect on the result. Has anyone else tested this and had it work? I am not sure if I am doing something wrong or missed something. I tried it with a few files from the OpenSlide site, like Mirax2-Fluorescence-1.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/93#issuecomment-323671758:134,error,errors,134,https://qupath.github.io,https://github.com/qupath/qupath/pull/93#issuecomment-323671758,1,['error'],['errors']
Availability,"Hi again,. I compiled the pete-java11 branch (after some ubuntu debugging). Sadly I had to compile it on a local laptop with low memory (until I get back to the lab). So take this into account (the log suggest that RAM is the problem on this machine). Here are my file links:. cropped : https://owncloud.ulb.ac.be/index.php/s/ReltLIepwxOZ2RK; fullsize : https://owncloud.ulb.ac.be/index.php/s/VhuHZheRNHgdUqk; PASSWORD: qupathBug ; Expires: march 17 2019. On my main machine I noticed that when opening the cropped version, qupath opens it after some minutes of intensive cpu calculations. This seems to suggest that qupath is precomputing something instead of directly opening the file. I tried opening my files and those from NHPatterson. As of yet it seems to still not be working. LOG DUMP; ```; INFO: Bio-Formats version 6.0.0; ERROR: Could not load OpenSlide native libraries; at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2660); at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:829); at java.base/java.lang.System.loadLibrary(System.java:1867); at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); at qupath.lib.images.servers.openslide.OpenslideServerBuilder.<clinit>(OpenslideServerBuilder.java:87); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62); at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45); at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:779); at java.base/java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:721); at java.base/java.util.ServiceLoader$3.next(ServiceLoader.java:1394); at qupath.lib.images.servers.ImageServerProvider.getIn",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:833,ERROR,ERROR,833,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['ERROR'],['ERROR']
Availability,"Hi all,. I use Petes script for exporting single TMA cores:. ```; import javax.imageio.ImageIO; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath('C:/Users/PabiG/Desktop/TMASingleCores', 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed ; if (Thread.currentThread().isInterrupted()); break; // Write the image; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, core.getROI())); ImageIO.write(img, 'PNG', new File(dirOutput, core.getName() + '.png')); }; ```. Because the built in TMA de-arrayer misses quite a few cores, I add those manually via ""Insert New Row/Column"", then adjusting the positions and click on ""Set Core Valid"". Somehow those cores do not seem to occur in the TMACoreList which is looped in the script above and consequently not exported. Does somebody know how to fix this or what I am doing wrong?. Best; Coco",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/334:188,down,downsample,188,https://qupath.github.io,https://github.com/qupath/qupath/issues/334,2,['down'],['downsample']
Availability,"Hi all,; I am trying to view a whole slide image, scanned with a Huron scanner, and saved as an .svs file. The file is 2.35 GB. When I try to load the slide into QuPath (version 0.1.2), I get an error: ""Sorry, I can't open <filepath>"". When I try to load a different .svs file, which is ~240 MB, the file opens in QuPath without a problem. I have 8GB of RAM and have set the QuPath maximum memory to 4 GB. So, my questions are:; 1) Can QuPath handle .svs files of 2-3 GB? If so, what process do I need to follow to put my QuPath into the state where it can ingest .svs files this large?; 2) If QuPath cannot handle .svs files of this size, can it handle files of any type of this size? If so, which type and how can I convert .svs files into that type?. Thanks so much for your help,; Rob",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/240:195,error,error,195,https://qupath.github.io,https://github.com/qupath/qupath/issues/240,1,['error'],['error']
Availability,"Hi all. Thanks again for an excellent app - making life a lot easier around our building. I have (what I hope is) a very simple query. I have multiple images in a project. Each image has 12 annotations (rectangles), as per the below. ![image](https://user-images.githubusercontent.com/44374335/47304270-feadd180-d61d-11e8-99a9-d12a8b3085e0.png). I want to export individual images for each annotation - I know this is simple enough when done manually (File...Export Image Region...) where i then specify the downsample and save directory. The file (PNG) is then automatically named with the Image Name, downsample, and coordinates (very handy). What I'd love to know is if there a simple script to export all 12 regions from an individual image, or even from an entire project in one go?",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/233:508,down,downsample,508,https://qupath.github.io,https://github.com/qupath/qupath/issues/233,2,['down'],['downsample']
Availability,"Hi everyone,. I tried using QuPath v0.2.0-m2 on my Mac with old qpdata files I had generated. They opened fine and it appeared that I could save the files when I was using the new version with qpdata files made with the old one. However, although it seemed to save, the original qpdata file is deleted or renamed/moved in such a way that I cannot find it anymore. It is not in the trash, and there is not a new/alternate file name generated in the same folder the original file was in. I know that in the window that appears when you open the new version that it says opening old files can make them incompatible, but I wasn't expecting to have no record of the file anymore. I have some alterations I made that would be great to recover, but otherwise, this is more reporting for a general notice. Thank you.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/292:730,recover,recover,730,https://qupath.github.io,https://github.com/qupath/qupath/issues/292,1,['recover'],['recover']
Availability,"Hi everyone,; @petebankhead first of all congratulations for this amazing work!. I was wondering to use QU Path in order to perform image registration of consecutive sections. My images are .jp2 format. I already added both JARs related to bio formats to the default plugins folder.; Still not being able to open my image, it throws me error. What can I do?. Thank you very much",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/72:336,error,error,336,https://qupath.github.io,https://github.com/qupath/qupath/issues/72,1,['error'],['error']
Availability,"Hi there,. I have pairs of WSI, one is the original image and the other is the annotation mask with the same size, and I want to open these two together. But the problem is they don't often align well, even if I used Multi-view -> check Synchronized viewer -> Add column. Sometimes, the two red boxes of focus on the two columns are the same region, but some times they aren't. It's a bit of random luck. How can I enforce the strict alignment between these two columns of images?. Thanks",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/138:90,mask,mask,90,https://qupath.github.io,https://github.com/qupath/qupath/issues/138,1,['mask'],['mask']
Availability,"Hi! . First of all thanks so much for the amazing QuPath project, and for all of the documentation online.; I have however a question. I am trying to export a binary mask of my image (where I have segmented glomeruli), but the following script, only export saves in the masks image the tiles where the segmentations are but not the actual entire image binarized as shown here: . https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html. Could you help me out with this? ; Thanks . Giovanna",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/538:166,mask,mask,166,https://qupath.github.io,https://github.com/qupath/qupath/issues/538,3,['mask'],"['mask', 'masks']"
Availability,Hi! I keep trying to open .scn files on the QuPath but I keep getting these two error messages... ERROR: Checking Big TIFF images currently not supported!!!; WARN: Error opening /Users/katherinepinkerton/Desktop/SheLab/Purohit IL1RA Mouse Pancreas/5751 Pancreas.SCN with ImageJ: Could not open /Users/katherinepinkerton/Desktop/SheLab/Purohit IL1RA Mouse Pancreas/5751 Pancreas.SCN with ImageJ; WARN: Unable to open /Users/katherinepinkerton/Desktop/SheLab/Purohit IL1RA Mouse Pancreas/5751 Pancreas.SCN with OpenSlide: Slides with dissimilar main images are not supported; ERROR: No image server provider found for /Users/katherinepinkerton/Desktop/SheLab/Purohit IL1RA Mouse Pancreas/5751 Pancreas.SCN; ERROR: Project: Import images: TextArea@40ec1c06[styleClass=text-input text-area]; INFO: Unable to import 1 paths:; 	/Users/katherinepinkerton/Desktop/SheLab/Purohit IL1RA Mouse Pancreas/5751 Pancreas.SCN. ERROR: QuPath exception; at javafx.scene.Scene$ScenePeerListener.scrollEvent(Scene.java:2556); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$null$369(GlassViewEventHandler.java:899); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleScrollGestureEvent$370(GlassViewEventHandler.java:881); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleScrollGestureEvent(GlassViewEventHandler.java:880); at com.sun.glass.ui.View.handleScrollGestureEvent(View.java:597); at com.sun.glass.ui.View.notifyScrollGestureEvent(View.java:1064); at com.sun.glass.ui.GestureSupport.handleScrollingEnd(GestureSupport.java:140); at com.sun.glass.ui.GestureSupport.lambda$createTouchCountListener$41(GestureSupport.java:379); at com.sun.glass.ui.TouchInputSupport.notifyEndTouchEvent(TouchInputSupport.java:115); at com.sun.glass.ui.mac.MacTouchInputSupport.notifyEndTouchEvent(MacTouchInputSupport.java:93); at com.sun.glass.ui.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/184:80,error,error,80,https://qupath.github.io,https://github.com/qupath/qupath/issues/184,6,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"Hi! I was just considering this problem, and I was wondering if you have tried splitting the image into two as a possible work-around?. There are multiple problems with this, but... one thing to try is:; 1. Get Pannoramic Viewer (Caseviewer does not do this) from 3DHISTECH.; 2. Export your image twice, and select only 3 of the 4 channels each time, with one different between the images.; 3. Import both images into QuPath, calculate your values, then recombine the images at the end. Since your DAPI channel should be the exact same, the cells generated should pair 1 to 1, and we even have XY coordinates now! Another downside though is that Pannoramic Viewer only exports .mrxs files in JPEG PNG and BMP, not JPEGXR, so you might lose some information there if you took the images in another format, or your files might end up being huge. Please let me know if this works for you! I may end up trying it some day...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/49#issuecomment-278233145:622,down,downside,622,https://qupath.github.io,https://github.com/qupath/qupath/issues/49#issuecomment-278233145,1,['down'],['downside']
Availability,"Hi!. We are planning to use qupath as a tool to teach histology to medical students at our university. We plan to make a self containing package of the image material that students can download for self study. What we currently miss is an option to write longer descriptions to annotations and to the images. We were planning to make a separate project per exercise like ""Muscle"" where there would be sample images from different muscle types. When you choose from project-view an image and you go to image-tab, there would be a good place for ""Description"" - freetext field where longer description of the image could be written. When I open the ""Annotation""-tab and choose an annotation, under the current ""key-value"" box there could be again ""Description"" freetext field for longer text. This could be edited in annotation set view. . Would this kind of new additional text fields be doable? . Br; Tero Heikkinen",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/144:185,down,download,185,https://qupath.github.io,https://github.com/qupath/qupath/issues/144,1,['down'],['download']
Availability,"Hi!; I am having some problem re-installing Qupath v0.1.3. Here is what happened recently:. I used Qupath v0.1.3 for while on mac OS with no big issues until I upgraded to Mojave. At this point Qupath started crashing (with a few more other Apps on my Mac) so I decided to downgrade to macOS Sierra using an old backup. Once I have done that, Qupath was working nicely again, however, one day I opened the software and the first things I have noticed, was that the setting I have changed in the preferences were back to the default ones. I didn't really bother, but then when I tried to open any of my immunofluorescence or chromogenic scans (.scn) Qupath was giving me an error saying that it was not able to find the images in the selected path (even if the images were there). I tried to change location of the slides or start a new project, but nothing worked. Then I tried to re-install the bioformat and qupath extentions. In this way the error message went away and I was apparently able to open the images but for some reason the actual scan wasn't there, it was only able to open the label and the prescan. I tried with different images (all .scn) but I wasn't able to fix the problem. Then I have decided to uninstall Qupath and re-install everything, and now the problem I have is that Qupath is not even opening. The installation from the repository went fine, I have also did `./gradlew clean` before running `./gradlew jfxNative` again. No errors during the installation but now when I double click on the Qupath icon, the software starts but before even opening the main interface it crashes. Any idea of what I am doing wrong?; Many thanks in advance for any help you can give me!",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/270:273,down,downgrade,273,https://qupath.github.io,https://github.com/qupath/qupath/issues/270,4,"['down', 'error']","['downgrade', 'error', 'errors']"
Availability,"Hi!; I've had trouble with *.tiff files lacking um/pixel information (scale). I've been able to set um per pixel scale using ImageJ to create an OME TIFF, but the magnification info is still lacking in QuPath and I get an error message saying: ""WARN: Unable to parse magnification: null"" ; I think this is what makes it impossible to apply/calculate ""Local Binary Pattern"" and ""Coherence texture"" features. Any idea how to set magnification manually either in Qupath or with another program? Appreciate any input.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223:222,error,error,222,https://qupath.github.io,https://github.com/qupath/qupath/issues/223,1,['error'],['error']
Availability,"Hi!; Unfortunately up and down movements on the screen always activates the zoom, even when I activate some of the marking tools. I wasn't able to fix this through tool settings.; If the zoom could be deactivated I could use touchscreen and pen very conveniently for marking the tissue areas.; Does anyone have a solution?; Best,; Marcel",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188:26,down,down,26,https://qupath.github.io,https://github.com/qupath/qupath/issues/188,1,['down'],['down']
Availability,"Hi, . I know there was such as issue described here already: https://github.com/qupath/qupath/issues/287. But I wanted to point out that with the latest 0.3.0-SNAPSHOT, the memoization file got saved in ; `C:\Users\oburri\AppData\Local\Temp\qupath-memo-15327719930616011555\biop\Image_Processing\User_Projects\Olivier\USERNAME_REDACTED\Sample images - metadata`. This mimmics the architecture I have where the actual file is stored:; `L:\biop\Image_Processing\User_Projects\Olivier\USERNAME_REDACTED\Sample images - metadata`. But in previous versions the memo files were in the same location as the original file. Is this new behavior intended?. And as it was the case in the other issue, this file fails to get deleted by BioFormats after considering it ""invalid"". This error message showed up in a script that I ran after reopening a project I created in QuPath 0.3.0-SNAPSHOT. ```; WARN: file deletion failed C:\Users\oburri\AppData\Local\Temp\qupath-memo-15327719930616011555\biop\Image_Processing\User_Projects\Olivier\USERNAME_REDACTED\Sample images - metadata\.MCF7_hPR_OVX_3rd_M6-10_Ki67.vsi.bfmemo; ERROR: temp file rename returned false: C:\Users\oburri\AppData\Local\Temp\qupath-memo-15327719930616011555\biop\Image_Processing\User_Projects\Olivier\valentina.scabia_UPBRI\Sample images - metadata\.MCF7_hPR_OVX_3rd_M6-10_Ki67.vsi.bfmemo5671337359207729134; ERROR: deleting invalid memo file: C:\Users\oburri\AppData\Local\Temp\qupath-memo-15327719930616011555\biop\Image_Processing\User_Projects\Olivier\valentina.scabia_UPBRI\Sample images - metadata\.MCF7_hPR_OVX_3rd_M6-10_Ki67.vsi.bfmemo; at loci.formats.in.JPEGReader$DefaultJPEGReaderConstructorAccess.newInstance(Unknown Source); at com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy$1.newInstance(Kryo.java:1275); at com.esotericsoftware.kryo.Kryo.newInstance(Kryo.java:1139); at com.esotericsoftware.kryo.serializers.FieldSerializer.create(FieldSerializer.java:562); at com.esotericsoftware.kryo.serializers.FieldSerialize",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/717:772,error,error,772,https://qupath.github.io,https://github.com/qupath/qupath/issues/717,1,['error'],['error']
Availability,"Hi, . This is Ali here. Thank you for your wonderful application. I had this error saying 'Java heap space' when trying to automate estimation of stain vectors. Does this have to do with low memory/specifications of my PC? Cause mine is i5 processor with 4GB RAM. Thanks.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/55:77,error,error,77,https://qupath.github.io,https://github.com/qupath/qupath/issues/55,1,['error'],['error']
Availability,"Hi, ; I was hoping someone could help me out here. I am currently trying to set up and building QuPath on Eclipse and I keep running into a compilation error in multiple GUI classes. They're all the same errors: refresh() has private access/is not visible in javafx.scene.control.TableView. ; I am very confused especially because I have not made any changes to the code and so if someone could help me out, that would be great! ; Thanks in advance!",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/87:152,error,error,152,https://qupath.github.io,https://github.com/qupath/qupath/issues/87,2,['error'],"['error', 'errors']"
Availability,"Hi, I test in Mac OS 10.13.3, I find log with errors:. ERROR: Unable to open /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif; at loci.formats.in.TiffJAIReader.initFile(TiffJAIReader.java:111); at loci.formats.FormatReader.setId(FormatReader.java:1397); at loci.formats.DelegateReader.setId(DelegateReader.java:300); at loci.formats.ImageReader.setId(ImageReader.java:839); at loci.formats.ReaderWrapper.setId(ReaderWrapper.java:650); at loci.formats.Memoizer.setId(Memoizer.java:677); at qupath.lib.images.servers.BioFormatsImageServer$BioFormatsReaderManager.createReader(BioFormatsImageServer.java:1156); at qupath.lib.images.servers.BioFormatsImageServer$BioFormatsReaderManager.createReader(BioFormatsImageServer.java:1111); at qupath.lib.images.servers.BioFormatsImageServer$BioFormatsReaderManager.getPrimaryReader(BioFormatsImageServer.java:1025); at qupath.lib.images.servers.BioFormatsImageServer.<init>(BioFormatsImageServer.java:234); at qupath.lib.images.servers.BioFormatsImageServer.<init>(BioFormatsImageServer.java:198); at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371771791:46,error,errors,46,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371771791,2,"['ERROR', 'error']","['ERROR', 'errors']"
Availability,"Hi, I tried to use openslide to show Tumor_005.tif 1.49G in command line, and errors:. OpenSlide('/Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif'); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/anaconda/lib/python3.6/site-packages/openslide/__init__.py"", line 154, in __init__; self._osr = lowlevel.open(filename); File ""/anaconda/lib/python3.6/site-packages/openslide/lowlevel.py"", line 174, in _check_open; ""Unsupported or missing image file""); openslide.lowlevel.OpenSlideUnsupportedFormatError: Unsupported or missing image file; ; It is very strange and seems opensilde cannot work in my macbook",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371990019:78,error,errors,78,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371990019,1,['error'],['errors']
Availability,"Hi, ah, silly error on my part. Thanks. . Ok, so now the imports seem to work, but something isn't connecting right for the jep section of the script. ```. INFO: Mean red (from Java): 86.81525; INFO: Mean green (from Java): 72.492275; INFO: Mean blue (from Java): 68.141675; INFO: java.lang.UnsatisfiedLinkError: no jep in java.library.path. ```. I tried the script you sent and received:; ```. INFO: Current image data: ImageData: Fluorescence, IMG_5_11_sq; INFO: Current image server: ImageJ server: /home/bl/Documents/IMG_5_11_sq.png (IMG_5_11_sq.png). ```. I should say that I think jep is installed ok, though I have only played with for a second this morning. But I can start jep, and do the basic test on the jep git Getting Started page (the python to java one).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262781834:14,error,error,14,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262781834,1,['error'],['error']
Availability,"Hi, if an extension is written in Java (not Javascript) then it would be possible to make it work like it's a built-in part of the software, e.g. with menu items to import/export the annotations. Then it could potentially be included in QuPath as well. I agree it would be useful, although I do have two hesitations...; * The kinds of annotations supported by ImageScope and QuPath don't quite match, and not all regions that could be drawn in ImageScope could be shown in QuPath, and vice versa (although rectangles should be fine); * I'm not aware of any publicly available specification for the XML used with ImageScope. The second one is maybe more important. I'm apprehensive about trying to add built-in support for these kinds of annotations without a specification.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/128#issuecomment-354851520:566,avail,available,566,https://qupath.github.io,https://github.com/qupath/qupath/issues/128#issuecomment-354851520,1,['avail'],['available']
Availability,"Hi, joining a bit late.... part of one of the suggestions above contained:; ```groovy; getDetectionObjects().parallelStream().forEach({Polygon ->; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, Polygon.getROI())); ImageIO.write(img, 'JPEG', new File(dirOutput, Polygon.getName() + '.jpg')); }); ```. If you want to keep that kind of concise way of looping, `eachWithIndex` might help. The corresponding part might look something like this:; ```groovy; getDetectionObjects().eachWithIndex {pathObject, index ->; def img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, pathObject.getROI())); def name = pathObject.getDisplayedName() + '_' + index + '.jpg'; ImageIO.write(img, 'JPEG', new File(dirOutput, name)); }; ```. I also used `getDisplayedName()`; if no name has been set, this will try to come up with something else useful for that object (e.g. the classification). And I added `def`, which you don't really need but it keeps the variables local (otherwise you could likely access them after the loop).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/118#issuecomment-346934805:213,down,downsample,213,https://qupath.github.io,https://github.com/qupath/qupath/issues/118#issuecomment-346934805,2,['down'],['downsample']
Availability,"Hi, yes I'm afraid the error is related to memory and unfortunately 4GB is probably not enough to do much analysis with QuPath. For browsing and annotating images it should be ok. Nevertheless, you might be able to get further if you adjust the memory settings and then restart QuPath for them to take effect - there is some information [here](https://github.com/qupath/qupath/wiki/Troubleshooting#setting-memory-limits). The above link also contains instructions for how to reduce the number of things QuPath does in parallel, which can reduce the amount of memory needed for processing (at the cost of things taking longer to run). In this situation, it would be best to run QuPath with as few other applications as possible open on your computer at the same time. For the specific example of getting the *Estimate stain vectors* command to work, you can also try selecting a smaller rectangle in your image, as described [here](https://github.com/qupath/qupath/wiki/Preprocessing#find-a-representative-region).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/55#issuecomment-285868226:23,error,error,23,https://qupath.github.io,https://github.com/qupath/qupath/issues/55#issuecomment-285868226,1,['error'],['error']
Availability,"Hi,. Congratulations for QuPath v2-mx series, amazing work!. Working with .ndpi files, ""No label available"". It would be useful to see the label in QuPath, e.g. when working with large collections of images from different experimental conditions, errors can easily occur when renaming the files after scanning, and being able to view the label would be valuable to detect possible errors, while at the same time adding an alternative to only relying on the file name for slide identification. Kind regards,; Carlos",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/40#issuecomment-622099365:97,avail,available,97,https://qupath.github.io,https://github.com/qupath/qupath/issues/40#issuecomment-622099365,3,"['avail', 'error']","['available', 'errors']"
Availability,"Hi,. I am trying to run the classifier the same as shown in the directions on how to do this (https://github.com/qupath/qupath/wiki/Classifying-objects).; Using only 2 annotations, tumor and stroma. The classifier looks exactly like the one from your directions, I also get no error in running the classifier in the details.; But I don't see any colors on my image showing up which cells were annotated to which group.; Any idea how I can fix this?. Best,; Sane",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/210:277,error,error,277,https://qupath.github.io,https://github.com/qupath/qupath/issues/210,1,['error'],['error']
Availability,"Hi,. I am trying to use python with QuPath via JEP, as per the docs. I am using linux (Fedora 24) and am having trouble locating the JEP directory to symlink, and also I am not sure from the docs exactly which directory to put the symlink in. . I've tried symlinking from the jep folder in the python installation site-packages directory, to the jars directory under qpath. I've also symlinked all the contents of the jep folder, including the jep-3.6.1.jar, into the QuPath/apps/jars directory. I still get 3 errors when I run the groovy script provided in the docs; they are just 'unable to resolve class jep.Jep', etc. I appreciate your help, thanks.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27:510,error,errors,510,https://qupath.github.io,https://github.com/qupath/qupath/issues/27,1,['error'],['errors']
Availability,"Hi,. I have a problem installing QuPath packages in my desktop (Window 10). First I downloaded QuPath 0.2.0 and installed it in 'My document'. I then downloaded;; * A Java 11 JDK from https://jdk.java.net/11/; * JPackage from https://jdk.java.net/jpackage/; * The QuPath source code from https://github.com/qupath/qupath/releases/tag/v0.2.0-m2. I unzipped above zip three zip files under 'My document' but different folder respectively.; I did not see any installation file for above files. Then, I started a command prompt, and move to the folder containing Qupath-0.2.0.exe file.; Then I ran ./gradlew.bat createPackage -Ppackager=/path/to/jpackage; I got error message saying; '.' is not recognized as an internal or external command,; operable program or batch file. Can anybody tell me what I have done wrong or how to have packages installed in Qupath in my situation?",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/303:84,down,downloaded,84,https://qupath.github.io,https://github.com/qupath/qupath/issues/303,3,"['down', 'error']","['downloaded', 'error']"
Availability,"Hi,. I have trouble installing qupath 0.2.1 on ubuntu 20.04. I extracted the file to /Home but what do I have to do next? - I tried it several times also with downloading other packages in the past, but I forgot the steps, but I was not successful whatsoever. And I am new to Ubuntu. I was hoping there is just some ""make install"" command?. Best,; Sophia",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/546:159,down,downloading,159,https://qupath.github.io,https://github.com/qupath/qupath/issues/546,1,['down'],['downloading']
Availability,"Hi,. I'm encountering the following error when ever I click 'automate' on the menu bar:. INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: QuPath exception; at qupath.lib.gui.ScriptMenuLoader.addMenuItemsForPath(ScriptMenuLoader.java:134); at qupath.lib.gui.ScriptMenuLoader.updateMenu(ScriptMenuLoader.java:115); at qupath.lib.gui.QuPathGUI.lambda$new$5(QuPathGUI.java:662); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.control.Menu.setShowing(Menu.java:199); at javafx.scene.control.Menu.show(Menu.java:408); at com.sun.javafx.scene.control.skin.MenuBarSkin.lambda$rebuildUI$401(MenuBarSkin.java:677); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.eve",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/139:36,error,error,36,https://qupath.github.io,https://github.com/qupath/qupath/issues/139,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Hi,. I'm getting an error when loading my classifier, which has previously been working absolutely fine. I am able to bypass the issue on closing and reopening the file. This has been happening for 2 days. I have copied and pasted the classifier for my colleague to use, however she's now getting the same error but it won't resolve for her on reopening the file. Is there something we're doing wrong or is this a software problem? Can you let me know how I can fix it/when the issue will be resolved?. Thanks,. Cam. The error message is as follows:; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: [N:\Faculty-of-Medicine-and-Health\LICAP\DATA\PTHY\Pathology\Breast Group\BCCTB Samples\Audits\BCN QA 2017\Frozen samples QuPath tumourstromaratio\Batch_2\Tumour\402428.svs]; INFO: Test reading thumbnail with openslide: passed (BufferedImage@5d207157: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 193 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); INFO: Returning server: OpenSlide for N:\Faculty-of-Medicine-and-Health\LICAP\DATA\PTHY\Pathology\Breast Group\BCCTB Samples\Audits\BCN QA 2017\Frozen samples QuPath tumourstromaratio\Batch_2\Tumour\402428.svs; INFO: Estimating H & E staining; INFO: Image data set to ImageData: Brightfield (H&E), 402428; INFO: 1 region detected (processing time: 215.44 seconds); INFO: Processing complete in 215.63 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 219, ""requestedPixelSizeMicrons"": 2.0, ""minAreaMicrons"": 20.0, ""maxHoleAreaMicrons"": 200.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/160:20,error,error,20,https://qupath.github.io,https://github.com/qupath/qupath/issues/160,3,['error'],['error']
Availability,"Hi,. I'm using QuPath for analysis of highly multiplexed data (40+ channels), and I would like to ask for the following:. 1. The height of the brightness and contrast panel window is limited , and it would be much more convenient if I can make it higher to reduce scrolling down using the slider when I want to turn channels on and off. 2. Can you please add an option to turn On/Off all the channels at once, eg with ""Select All"" / ""Unselect All"" button or checkbox. Thanks; Ofra",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1201:274,down,down,274,https://qupath.github.io,https://github.com/qupath/qupath/issues/1201,1,['down'],['down']
Availability,"Hi,. It occurred that after being working with pixel classifiers and closed the project, when quitting QuPath one or several error dialogs appear briefly in the bottom right corner of QuPath window (as in screenshot). ![image](https://user-images.githubusercontent.com/6029017/82741310-18ab1b00-9d51-11ea-876b-c0a653d28279.png). Best regards,; Carlos",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/503:125,error,error,125,https://qupath.github.io,https://github.com/qupath/qupath/issues/503,1,['error'],['error']
Availability,"Hi,. Looking back that the documentation, I see it wasn't the clearest... I've just tested the following on macOS Sierra with a downloaded QuPath and I was able to run the script in the docs after the following steps:. 1. If you don't already have a QuPath extensions directory, you can either set one under *Edit &rarr; Preferences* or follow the process to install any extension that takes your interest [here](https://github.com/qupath/qupath/wiki/Extensions). 2. Next, locate where JEP is installed and create a symbolic link in your QuPath extensions directory to its Jar file. For me, this was the command:; ```; ln -s /usr/local/lib/python2.7/site-packages/jep/jep-3.5.3.jar /Users/pete/QuPath/extensions/jep.jar; ```. 3. Alongside the Jar, there were also two native files ```jep.so``` and ```libjep.jnilib```. The easiest way to get QuPath to see them is simply to copy these into your QuPath directory containing ```QuPathApp.jar``` (there should already be other native libraries there too). I haven't tested this on Linux, but would be very interested to know if it works (or, indeed, if other things are working fine for you with Fedora). If so I'll update the docs to be a bit clearer. Note that I never took the use of JEP with QuPath far enough for it to be genuinely useful, since I didn't have a sufficient need for it myself until now. But I think the ability to run Python scripts could be really valuable, so I'd be happy to help with setting this up or coming up with a neat way to wrap or convert data structures. If you'd like to discuss more the kind of applications you see this being useful for (e.g. segmentation, classification, manipulating objects, statistical analysis...) just let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262733775:128,down,downloaded,128,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262733775,1,['down'],['downloaded']
Availability,"Hi,. QuPath is brilliant and the recent updates for IF images have been very helpful - so thanks for all the work you've put into it. I am now trying to get mean intensity values from manually annotated ROIs within multiplex IF images with 11 channels (with hopes to go up to 20-30 channels in the future). Unfortunately, it seems that QuPath can currently only provide mean intensity measurements for a maximum of 8 channels at the moment. Is it possible to overcome this limit?. I tried to do this using the following Groovy script:. `setImageType('FLUORESCENCE');; runPlugin('qupath.lib.algorithms.IntensityFeaturesPlugin', '{""downsample"": 1.0, ""region"": ""ROI"", ""tileSizePixels"": 200.0, ""channel1"": true, ""channel2"": true, ""channel3"": true, ""channel4"": true, ""channel5"": true, ""channel6"": true, ""channel7"": true, ""channel8"": true, ""channel9"": true, ""channel10"": true, ""channel11"": true, ""doMean"": true, ""doStdDev"": false, ""doMinMax"": false, ""doMedian"": false, ""doHaralick"": false, ""haralickMin"": NaN, ""haralickMax"": NaN, ""haralickDistance"": 1, ""haralickBins"": 32}');`. This generated intensity measurements for the first 8 channels. However, I get the following error:. > WARN: Unable to set parameter channel9 with value true; > WARN: Unable to set parameter channel10 with value true; > WARN: Unable to set parameter channel11 with value true; > WARN: Unable to set parameter haralickMin with value NaN; > WARN: Unable to set parameter haralickMax with value NaN. A simple workaround would have been to switch the first few channels to ""false"" and the remaining channels to ""true"" in the above script. Sadly that didn't work either. Would be grateful for your help with this. Cheers,; Ashwin",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/197:630,down,downsample,630,https://qupath.github.io,https://github.com/qupath/qupath/issues/197,2,"['down', 'error']","['downsample', 'error']"
Availability,"Hi,. Strange... my quick attempt on Ubuntu also didn't work, but apparently for a different reason... An alternative method to add to your library path would be to track down the ```QuPath.cfg``` file within your QuPath installation, and amend it - something like the following:; ```; [JVMOptions]; -Djava.library.path=.:/usr/local/lib/python2.7/dist-packages/jep/; ```. With this, it shouldn't be necessary to copy the files. Does this help at all, or is it the same error?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262835928:170,down,down,170,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262835928,2,"['down', 'error']","['down', 'error']"
Availability,"Hi,. Thank you both very much for your comments, I've gone for the more robust longer method. That seems to work better for these samples as I can adjust the selection better. It works really well, thank you for the quick responses!. Ieva",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/121#issuecomment-349293402:72,robust,robust,72,https://qupath.github.io,https://github.com/qupath/qupath/issues/121#issuecomment-349293402,1,['robust'],['robust']
Availability,"Hi,. Thank you first for making qupath available to the community. I think is a great tool and something like this was missing. . I'm trying to compile the source under windows using Oracle JDK for the java part and I'm getting all kind of errors but before I embark into the debugging process was wondering if you guys would have any recommendations ?. Thanks; Elton",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/84:39,avail,available,39,https://qupath.github.io,https://github.com/qupath/qupath/issues/84,2,"['avail', 'error']","['available', 'errors']"
Availability,"Hi,. Thank you for making this amazing software. Overall I love the love the capabilities so far and I'm hoping to be able to create some extensions as my java knowledge improves. I can't tell if the issue I'm encountering is an error or a result of the intended design. I'm attempting to change the value for Stain 2 (DAB) under Image>Properties>Value. When I input a new RGB value (example: 0.296,0.433,0.493) the value does not change from the default value of: 0.269 0.568 0.778. The only way I have been able to get the value to change has been to change one number at a time:; Example: 0.269 0.568 **0.778** -> 0.269 0.568 **0.493**; But when I do this it re-adjusts all 3 numbers to: 0.337 0.711 0.617 . Overall my goal is to use the Positive Pixel Count tool (Analyze>Region identification>Positive Pixel Count (experimental)) to analyze ROI's that have been stained for different protein accumulations (intracellular and extracellular). To do this I need to be able to change the color of the DAB stain (Stain 2) for each unique stain. A suggestion I have is that there should be a tool to easily set the color of each stain by sampling pixels from the image. Then it will be easier to perform analysis of % area occupied each new stain. Thank you for your help!; Andrew",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/104:229,error,error,229,https://qupath.github.io,https://github.com/qupath/qupath/issues/104,1,['error'],['error']
Availability,"Hi,. Thanks for this new exciting version.; I was trying to compare InstaSeg results to StarDist results. InstaSeg is working nicely but the StarDist scripts (from Extensions>StarDist) fail with the following error.; I tried both H&E and Fluorescence scripts. (I set the model path). ```; ERROR: 'org.locationtech.jts.geom.Geometry qupath.lib.roi.GeometryTools.createRectangle(double, double, double, double)'; java.lang.NoSuchMethodError: 'org.locationtech.jts.geom.Geometry qupath.lib.roi.GeometryTools.createRectangle(double, double, double, double)'; at qupath.ext.stardist.StarDist2D.lambda$detectObjects$10(StarDist2D.java:940); at java.base/java.util.stream.ReferencePipeline$2$1.accept(Unknown Source); at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source); at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source); at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source); at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source); at java.base/java.util.stream.AbstractPipeline.evaluate(Unknown Source); at java.base/java.util.stream.ReferencePipeline.collect(Unknown Source); at qupath.ext.stardist.StarDist2D.detectObjects(StarDist2D.java:941); at qupath.ext.stardist.StarDist2D.detectObjectsImpl(StarDist2D.java:886); at qupath.ext.stardist.StarDist2D.lambda$detectObjects$6(StarDist2D.java:823); at qupath.ext.stardist.StarDist2D.runInPool(StarDist2D.java:849); at qupath.ext.stardist.StarDist2D.detectObjects(StarDist2D.java:823); at qupath.ext.stardist.StarDist2D.detectObjectsImpl(StarDist2D.java:859); at qupath.ext.stardist.StarDist2D.lambda$detectObjects$5(StarDist2D.java:812); at qupath.ext.stardist.StarDist2D.runInPool(StarDist2D.java:849); at qupath.ext.stardist.StarDist2D.detectObjects(StarDist2D.java:812); at org.codehaus.groovy.vmplugin.v8.IndyInterface.fromCache(IndyInterface.java:321); at QuPathScript.run(QuPathScript:48); at org.codehaus.groovy.jsr223.GroovyScriptEngine",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1635:209,error,error,209,https://qupath.github.io,https://github.com/qupath/qupath/issues/1635,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Hi,. thanks all for your responses. I'm not sure if I can follow what you actually mean but I think we talking about two different things. Anyways, I think, I'm good to go with the information that is included in the file name. I didn't notice at first that the coordinates given in the file name was '0,0'-coordinate of the respective small image. I believe that I just can generate an array with filled zeros in the size of the RoI and then fill in the binary mask at the coordinates in the file name,. Thanks a lot to you guys for your help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/95#issuecomment-388643336:462,mask,mask,462,https://qupath.github.io,https://github.com/qupath/qupath/issues/95#issuecomment-388643336,1,['mask'],['mask']
Availability,"Hi,; I am trying to set the ImageJ plugins directory and I am getting the following error:. INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: QuPath exception; at java.io.File.<init>(File.java:277); at qupath.imagej.gui.IJExtension.lambda$1(IJExtension.java:468); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.control.MenuItem.fire(MenuItem.java:462); at com.sun.javafx.scene.control.GlobalMenuAdapter.lambda$bindMenuItemProperties$20(GlobalMenuAdapter.java:153); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.control.MenuItem.fire(MenuItem.java:462); at com.sun.javafx.tk.quantum.GlassSystemMenu$1.action(GlassSystemMenu.java:238). Thanks in advance for the help",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/91:84,error,error,84,https://qupath.github.io,https://github.com/qupath/qupath/issues/91,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Hi,; Yes, I have both `jep`.so and `libjep.so` copied in the folder and am still getting the error message I reported. I didn't realize initially but `libjep.so` is just a symlink to `jep.so`.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262802247:93,error,error,93,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262802247,1,['error'],['error']
Availability,"Hi. . I would like to be able to loop though my annotations (rectangles and circles) and set a specific class to each one of them. ; To print the current classes works fine:; `getAnnotationObjects() each {annotation -> print(annotation.getPathClass())}`. But I would like to set the class based on which pixel on the x-axis the centroid is located at. The function setPathClass() only gives errors. . `getAnnotationObjects() each {annotation -> annotation.setPathClass(annotation.getROI().getCentroidX())}`. If it's not possible to give them a class that isn't defined I would like to set the first annotation to Tumor then Stroma and so on. . By the way. Is there a sheet or file in qupath that lists functions you can use on different objects? My current workflow is that I'm ""grep'ing"" the source code for function names that sound like it could work. . Regards,; Björn",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/158:391,error,errors,391,https://qupath.github.io,https://github.com/qupath/qupath/issues/158,1,['error'],['errors']
Availability,"Hi:. The latest release of the QuPath v0.5.1:. [QuPath-v0.5.1-Mac-arm64.pkg](https://github.com/qupath/qupath/releases/download/v0.5.1/QuPath-v0.5.1-Mac-arm64.pkg); [QuPath-v0.5.1-Mac-x64.pkg](https://github.com/qupath/qupath/releases/download/v0.5.1/QuPath-v0.5.1-Mac-x64.pkg). The issue with Mac applications that use ad-hoc signatures is that, while they provide a code signing digest (or cdhash) allowing macOS to verify whether the app or component has been altered, they don't verify the identity of the developer. This means that macOS can detect if the code has changed but has no way to confirm who signed the code or if it comes from a trusted source. Key concerns with ad-hoc signatures include:. No Developer Identity Verification: Ad-hoc signatures don’t provide information about the developer’s identity, unlike certificates from Apple, which are linked to verified developer accounts. This can pose security risks as it’s harder to establish trust in the source of the code. Limited Use Cases: Ad-hoc signing is typically used for specific scenarios, such as:; Unsigned code running on Apple Silicon, where macOS requires all code to be signed, even if it’s just ad-hoc.; Web Apps on macOS 14 Sonoma, where the code isn't distributed via traditional app distribution methods. Security Risks: Since there is no certification authority involved in ad-hoc signing, it is easier for malicious or unauthorized code to be signed ad-hoc and executed, which could expose the system to potential vulnerabilities. I would recommend moving away from ad-hoc certificates and following the Apple Developer guidelines on application creation & distribution. For example, here is a free GUI application called ""Apparency"" that will help explain issues and test your applications.; https://mothersruin.com/software/Apparency/. ![image](https://github.com/user-attachments/assets/d69830e4-e271-430a-987c-c58b1b708481); ![image](https://github.com/user-attachments/assets/4a03b7ba-c911-486b-91de-2d86d0e",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1672:119,down,download,119,https://qupath.github.io,https://github.com/qupath/qupath/issues/1672,2,['down'],['download']
Availability,Hi; Computer: Dell Latitude with touchpad. No graphics tablet/pen used at the moment. The firs error message was created using the wand. While playing around with the bit a bit I managed to get a slightly different error message... `ERROR: QuPath exception: Points of LinearRing do not form a closed linestring; at org.locationtech.jts.geom.LinearRing.validateConstruction(LinearRing.java:90); at org.locationtech.jts.geom.LinearRing.<init>(LinearRing.java:85); at org.locationtech.jts.geom.GeometryFactory.createLinearRing(GeometryFactory.java:356); at org.locationtech.jts.geom.GeometryFactory.createLinearRing(GeometryFactory.java:343); at org.locationtech.jts.util.GeometricShapeFactory.createEllipse(GeometricShapeFactory.java:231); at qupath.lib.gui.viewer.tools.BrushTool.createShape(BrushTool.java:489); at qupath.lib.gui.viewer.tools.BrushTool.getUpdatedObject(BrushTool.java:326); at qupath.lib.gui.viewer.tools.BrushTool.mouseDragged(BrushTool.java:302); at qupath.lib.gui.viewer.tools.AbstractPathTool.lambda$registerTool$0(AbstractPathTool.java:333); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchCha,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/380#issuecomment-561071266:95,error,error,95,https://qupath.github.io,https://github.com/qupath/qupath/issues/380#issuecomment-561071266,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,Hi; First I will take the opportunity to salute the maker of such a formidable piece of software. It hits its audience right on the mark. Easy enough for those puking of computers and powerful enough for those willing to go the extra miles and code some themselves. I was working on a TMA project with 11 TMAs and about 600 patients with 4 cores each. I can open each individual TMA in TMA data viewer and play around with the summary statistics. But when I try to import from current project my computer slows down to a crawl. After increasing the amount of memory available to qupath to 5GiB import from current project will eventually work. . I guess it is the TMA core images that makes this process so memory hungry. Is it possible to turn of this feature?,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/117:511,down,down,511,https://qupath.github.io,https://github.com/qupath/qupath/issues/117,2,"['avail', 'down']","['available', 'down']"
Availability,"Hm, perhaps.. In my case I worked on 0.2.0-m2 only, and within a project, so there must be more to it... I've tried again with different images this morning after my post, and I found that processing 1 image worked, but running the analysis on a batch of 3 images did not... with a similar outcome (analysis stopped and lost all annotations).; Except this time I did get an error message (maybe I missed it last time). Here is part of it:. ```; INFO: 2159 nuclei detected (processing time: 21.18 seconds); INFO: 2159 nuclei detected (10%); INFO: 1803 nuclei detected (processing time: 19.79 seconds); INFO: 1803 nuclei detected (11%); ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:191); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:237); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:201); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:258); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:278); at qupath.lib.gui.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:196); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:216); at Script3.run(Script3.groovy:6); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-493938867:374,error,error,374,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"Hmm, I had already forgotten about that... and I have not yet been able to replicate the error with those turned off. *Places head into contact with table repeatedly*",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/307#issuecomment-484630072:89,error,error,89,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484630072,1,['error'],['error']
Availability,"Hmm, I still think your best option will be running something like the Simple Tissue Detection to get your annotation area to exclude all background that is external to your tissue (you may have to go over the edges yourself, and definitely play with the Max fill area, as setting it to just larger than the largest fat globule you want to measure is key!) so that you only have two populations, background/fat globule (low OD) and tissue (high OD).; You might also play with tiling your tissue annotation (pretty much everything I suggest will involve generating an annotation, I'm afraid) and then sending each tile to ImageJ for thresholding (Extensions->ImageJ->ImageJ Macro runner). The returned detections end up looking something like these... and depending on how much you play with your thesholds (both size and OD) you will see more or less of the errors around the edges. The tiling allows you to analyze the image in small enough sections such that ImageJ can handle the full resolution.; Edit: deleted on account of privacy. Maybe Peter will have something better I have not thought of, though :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/56#issuecomment-286453790:858,error,errors,858,https://qupath.github.io,https://github.com/qupath/qupath/issues/56#issuecomment-286453790,1,['error'],['errors']
Availability,"Hmm, I worry about burying the option in the preferences. It reminds me of ImageJ's 'Black background' option where a hidden preference causes different results for different users, making it harder to give instructions to anyone else. If you want to run as script as a command (with menu item), you can use this:; ```groovy; getQuPath().installGroovyCommand(""Objects>Select children"", ; """"""; def children = getSelectedObject().getChildObjects(); selectObjects(children); """"""; ); ```. To make it always available without the hassle of creating an extension, you can include it in a startup script file - basically any Groovy file, which can be set in the preferences under 'Startup script path'. This should allow you to add multiple custom commands in menus of your choosing, to run any short scripts.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1438#issuecomment-1851926777:503,avail,available,503,https://qupath.github.io,https://github.com/qupath/qupath/issues/1438#issuecomment-1851926777,1,['avail'],['available']
Availability,"Hmm, not sure but it might have been collateral damage from the other recent ROI/Geometry fixes, eg https://github.com/qupath/qupath/issues/429. I'll look out for it, but I haven't seen the problem myself and would probably need an example of a broken ROI/way to reproduce the error to be able to do anything about it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/456#issuecomment-619377874:277,error,error,277,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-619377874,1,['error'],['error']
Availability,"Hmmm, I still fail to see any evidence of a QuPath bug here. Your reference to 'the true image dimensions' is hard to interpret since I don't know where you're getting the 'true' dimensions from, or what is the source of your files. Without actual specifics (e.g. an example file), I don't see why you should assume the 'bug' is in QuPath and not elsewhere. OpenSlide only sets the bounds for a subset of file formats, so most shouldn't be affected anyway. I've only seen it for scn and mrxs, which are the two formats mentioned in the commit that makes the bounds available: https://github.com/openslide/openslide/commit/421cb647acdc8fe35e33c2683949f5098925c8ac. Note my comment above about 'cropping' being arguably the same as 'not padding'... one could argue that QuPath simply removes the padding that OpenSlide has added, because [the bounds define where there is pixel data](https://github.com/openslide/openslide/issues/424#issuecomment-1382416341). QuPath aims to read the pixels from an image consistently, regardless of whether OpenSlide is used or not. As a specific example from my side, see the image `Leica-1.scn` from the OpenSlide freely-distributable data:; https://openslide.cs.cmu.edu/download/openslide-testdata/Leica/. Screenshots below show the image with a full image annotation within QuPath. ## Bio-Formats; <img width=""939"" alt=""SCN-Bio-Formats"" src=""https://github.com/qupath/qupath/assets/4690904/039b2449-5c20-4b93-a4af-d65928324a50"">. ## OpenSlide (default, cropped to bounds); <img width=""941"" alt=""SCN-OpenSlide"" src=""https://github.com/qupath/qupath/assets/4690904/771af2d0-2dcb-44ee-95e6-31ff62f0f7e2"">. ## OpenSlide (with `--no-crop` arg); <img width=""941"" alt=""SCN-OpenSlide-no-crop"" src=""https://github.com/qupath/qupath/assets/4690904/3cf52a48-ca91-4dff-8eb4-7e299d851b3e"">. The size is identical when read using QuPath v0.4.3 when using either OpenSlide or Bio-Formats by default (no extra arguments passed to either). Explicitly passing the `--no-crop` arg cau",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1278#issuecomment-1631106660:565,avail,available,565,https://qupath.github.io,https://github.com/qupath/qupath/issues/1278#issuecomment-1631106660,1,['avail'],['available']
Availability,"Hmmm, for the min/max error do you see similar behavior to the previous problem *after* the exception has been thrown once? It sounds like a bug that can be fixed on the QuPath side with better thread handling. If QuPath recovers and can handle later radius adjustments then I think it's unconnected. The OpenCV thing is very weird indeed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/776#issuecomment-874056600:22,error,error,22,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874056600,2,"['error', 'recover']","['error', 'recovers']"
Availability,"Hmmm, so the rising memory is to be expected - but it should decrease again any time the garbage collector/Reclaim memory is called. I've just tried it several times with a moderately large region (> 50,000 nuclei) on my moderately old computer and can find no sign of a memory leak. You'll certainly have more threads on your better computer than my meagre 8, but I found it worked fine... sometimes rising > 10 GB, but regularly dropping down to ~1.5 GB when the garbage collector was triggered (either automatically or manually). And after everything was done, if I cleaned up the objects the memory use for QuPath as a whole went down to < 400 MB... so nothing was lingering too long. However I've just made a change that will try to make memory available again sooner: https://github.com/petebankhead/qupath/commit/9d2150ae1d2b08e6eefd2d9800baf6eecf6336cc; This may or may not help. You could also try the `nThreads()` option. Your bug report indicates you've 20 cores... not sure if that means 20 threads are working with stardist, or 40. Either way, it's probably worth reducing that number, e.g. by inserting `nThreads(10)` to your script in the place where the stardist model is being customized. Finally, from the look of your profiling, QuPath never gets close to its personal maximum of 32 GB -- but your 64 GB is pretty much full. Could something else be stealing memory that QuPath really wants?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630892684:440,down,down,440,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630892684,3,"['avail', 'down']","['available', 'down']"
Availability,"Hmmm... I've never tried this kind of setup, and have no idea if it can work. It would be very interesting if you can find a way... Those dramatic errors tend to involve native libraries (rather that code within Java). From the log, it appears to go wrong at the the earliest stage - so I'd try to launch it from ```QuPathApp.jar``` directly. There might be some clues in [Issue 27](https://github.com/qupath/qupath/issues/27#issuecomment-264693922). Otherwise, would it be of any benefit if you could run scripts on the server - having developed the scripts locally, on the less powerful machine? There are some links regarding that at #94 . Even if this isn't what you want to do, it might be worth trying to run such a script from the command line just to see if it works, or if the same error occurs.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/109#issuecomment-336031954:147,error,errors,147,https://qupath.github.io,https://github.com/qupath/qupath/issues/109#issuecomment-336031954,2,['error'],"['error', 'errors']"
Availability,"Hmmm... the plot thickens. That error has a completely different source, and occurs after `getBrushDiameter()` has been constrained to be >= 1. https://github.com/qupath/qupath/blob/cece52bff55965b72577e413be67d9a91df8b55e/qupath-gui-fx/src/main/java/qupath/lib/gui/viewer/tools/BrushTool.java#L481-L489. You could try resetting your preferences and testing on another computer. I will need to be able to replicate it to find a fix but currently I can't (on Windows) and it has not been reported before.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/380#issuecomment-561076442:32,error,error,32,https://qupath.github.io,https://github.com/qupath/qupath/issues/380#issuecomment-561076442,1,['error'],['error']
Availability,"Humnn, I have tested your suggestion and it doesn't seem to throw any error. I have yet to wrap my head around the whole TMA Data Viewer logic. Thank you for the quick review. Now does that mean, this also needs fixing ?; https://github.com/qupath/qupath/blob/fca7fa5fd9efd815f4c317705fbe2a0f9c39270f/qupath-gui-fx/src/main/java/qupath/lib/gui/tma/TMASummaryViewer.java#L1444-L1446. Because I looked at the above code when correcting the following:; https://github.com/qupath/qupath/blob/fca7fa5fd9efd815f4c317705fbe2a0f9c39270f/qupath-gui-fx/src/main/java/qupath/lib/gui/tma/TMASummaryViewer.java#L1463-L1465",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1096#issuecomment-1290993508:70,error,error,70,https://qupath.github.io,https://github.com/qupath/qupath/pull/1096#issuecomment-1290993508,1,['error'],['error']
Availability,"I actually didn't know that TMAs had a UniqueID property. I recently used TMAs with multiple cores from the same patient and I had to write my own work around for this. It seems it's not available in right click menu GUI, where it would be most natural (for me) to input them?. That being said, I think the changes you made are useful. I would prioritize clean code into the future over the ability for older versions to read new projects. If I have a project with TMAs in 0.3.2, will this change leave me unable to open in in 0.4?. Also, I vote that ID is capitalized in set and get functions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1114#issuecomment-1304333085:187,avail,available,187,https://qupath.github.io,https://github.com/qupath/qupath/issues/1114#issuecomment-1304333085,1,['avail'],['available']
Availability,"I added the command line flags and removed the `mergedJavadocs` task. About the error, I wasn't able to reproduce it but I added a duplicate handling strategy that should fix it. Opening the results of the new task with the [javadoc viewer](https://github.com/qupath/javadoc-viewer) seems to work correctly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1513#issuecomment-2092892346:80,error,error,80,https://qupath.github.io,https://github.com/qupath/qupath/pull/1513#issuecomment-2092892346,1,['error'],['error']
Availability,"I also can't close QuPath *without* interacting with the script editor, because I get an exception; ```; 15:17:30.307	[JavaFX Application Thread]	ERROR	qupath.lib.gui.QuPathUncaughtExceptionHandler	Cannot invoke ""javafx.stage.Stage.close()"" because ""this.dialog"" is null	java.lang.NullPointerException: Cannot invoke ""javafx.stage.Stage.close()"" because ""this.dialog"" is null; 	at qupath.lib.gui.scripting.DefaultScriptEditor.promptToClose(DefaultScriptEditor.java:518); 	at qupath.lib.gui.QuPathGUI.handleCloseMainStageRequest(QuPathGUI.java:1018); 	at javafx.base@22.0.1/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); 	at javafx.base@22.0.1/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232); 	at javafx.base@22.0.1/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189); 	at javafx.base@22.0.1/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); 	at javafx.base@22.0.1/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); 	at javafx.base@22.0.1/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); 	at javafx.base@22.0.1/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); 	at javafx.base@22.0.1/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); 	at javafx.base@22.0.1/javafx.event.Event.fireEvent(Event.java:198); 	at javafx.graphics@22.0.1/com.sun.javafx.stage.WindowPeerListener.closing(WindowPeerListener.java:100); 	at javafx.graphics@22.0.1/com.sun.javafx.tk.quantum.GlassStage.lambda$requestClosingAllWindows$3(GlassStage.java:204); 	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400); 	at javafx.graphics@22.0.1/com.sun.javafx.tk.quantum.GlassStage.requestClosingAllWindows(GlassStage.java:203); 	at javafx.graphics@22.0.1/com.sun.javafx.tk.quantum.QuantumToolkit$2.handleQuitAct",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1524#issuecomment-2133581152:146,ERROR,ERROR,146,https://qupath.github.io,https://github.com/qupath/qupath/pull/1524#issuecomment-2133581152,1,['ERROR'],['ERROR']
Availability,"I also had some problems using the bioformats package and scn files. After installing the plugin, when I try to open my images on qupath, qupath tries to open my scn files using the bioformats server (not openslide) and it cannot determine the magnification metadata I tried manually editing the metadata into the qpproj file, but this had no effect. Turning off the bioformats plugin in edit>preferences resolved my error.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-400023655:417,error,error,417,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-400023655,1,['error'],['error']
Availability,"I also noticed that if you just do the first two steps (loading image and objects) that you won't be able to undo loading the objects anyway. The undo action gets available after doing something else, even selecting and deleting an object. Pretty weird to me, where is that undo action coming from? It is unrelated to actions later. I think it is storing a state with no objects at all somewhere.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1487#issuecomment-2010988726:163,avail,available,163,https://qupath.github.io,https://github.com/qupath/qupath/issues/1487#issuecomment-2010988726,1,['avail'],['available']
Availability,"I am actually just getting into this from the other side, learning how to set up a deep learning model to take in images generated by QuPath. Part of the question is what kinds of images do you want to send out, and do you want to classify them ahead of time? For example, I am probably going to be looking at cells, so I intend to export the cell object (in this case each cell is ""polygon"" as an image:; ```; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, polygon.getROI())). ImageIO.write(img, 'PNG', new File(dirOutput, name + '.png')); ```; although I will need to edit the write name to both increment so that it does not overwrite, edit the name so it includes the class (for anything in the training set), and edit the ""polygon.getROI()"" so that it is the correct size. . Also, once you have your 256 by 256 tile size in micrometers (multiply out by the pixel width in the Image tab), you can also use the _Analyze-> Region identification-> Tiles and superpixels -> Create tiles_ to see what a grid export could look like for your Simple tissue detection annotation. And Pete beat me to it anyway! So I won't include my much more terrible box drawing script!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/137#issuecomment-357349047:477,down,downsample,477,https://qupath.github.io,https://github.com/qupath/qupath/issues/137#issuecomment-357349047,1,['down'],['downsample']
Availability,"I am applying intensity classifications to an image, using code from v1.02, and while it successfully exported a txt file with the correct numbers, it also gave this error message. . Code is here: ; `runPlugin('qupath.lib.algorithms.IntensityFeaturesPlugin', '{""pixelSizeMicrons"": 2.0, ""region"": ""ROI"", ""tileSizeMicrons"": 200, ""colorOD"": false, ""colorStain1"": false, ""colorStain2"": true, ""colorStain3"": false, ""colorRed"": false, ""colorGreen"": false, ""colorBlue"": false, ""colorHue"": false, ""colorSaturation"": false, ""colorBrightness"": false, ""doMean"": true, ""doStdDev"": false, ""doMinMax"": false, ""doMedian"": false, ""doHaralick"": true, ""haralickDistance"": 1, ""haralickBins"": 32}');; def roi = 'ROI: 2.00 ' + qupath.lib.common.GeneralTools.micrometerSymbol() + ' per pixel: DAB: Mean'; // seperate superpixels into 1+, 2+ etc; setIntensityClassifications(qupath.lib.objects.PathTileObject, roi , 0.22, 0.25, 0.33);`. Error message here: ; `ERROR: QuPath exception; at java.base/java.util.LinkedHashMap$LinkedHashIterator.nextNode(LinkedHashMap.java:719); at java.base/java.util.LinkedHashMap$LinkedKeyIterator.next(LinkedHashMap.java:741); at java.base/java.util.Collections$UnmodifiableCollection$1.next(Collections.java:1045); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:161); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:219); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1670); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.gla",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/307:166,error,error,166,https://qupath.github.io,https://github.com/qupath/qupath/issues/307,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"I am encountering an issue with the QuPath Viewer while attempting to load a .tiff image. When I click on the image to view it in the viewer, the QuPath UI hangs, and it appears that the OpenSlide library is not loading correctly. I have attempted to resolve this by installing the OpenSlide library using the package manager, but the problem persists. The logs indicate that OpenSlide is loaded successfully, yet an error is thrown stating “No OpenSlide search path supplied and failed to load OpenSlide.”. It’s worth noting that I have created a project and added the .tiff image to the project using a Groovy script. I am invoking QuPath through the command line. Note: I have successfully loaded a .tiff image in QuPath Viewer using a script without any issues on the Windows platform(openslide installed with qupath binary). However, on Linux, I encountered a problem where OpenSlide is not installed by default with QuPath binaries. Even after installing OpenSlide separately using a package manager, the issue persists. Any insights or suggestions on resolving this issue would be greatly appreciated. qupath_exe=“/opt/QuPath/bin/QuPath”; “$qupath_exe” script /usr/addImages.groovy --args “$volumeDataDir” --args “$QupathProjDir”; “$qupath_exe” -q -p “$QupathProjDir”/QuPathProject/project.qpproj. OS : Ubuntu :22.04. ![image](https://github.com/qupath/qupath/assets/6927393/5bc64744-cde9-4e11-8261-dc2c401727f4); ![image](https://github.com/qupath/qupath/assets/6927393/cad90c79-ef22-4339-8068-e50407028b6c)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1491:417,error,error,417,https://qupath.github.io,https://github.com/qupath/qupath/issues/1491,1,['error'],['error']
Availability,"I am following the [instructions for building QuPath][1] from source on CentOS 7. I get the following error:. [jalal@goku qupath]$ ./gradlew clean jpackage; ; FAILURE: Build failed with an exception.; ; * What went wrong:; Failed to apply plugin class 'org.gradle.api.plugins.JavaPlugin'.; > java.io.FileNotFoundException: /scratch3/downloads/gradle-7.4.2/lib/plugins/gradle-plugins-7.4.2.jar (No such file or directory); ; * Try:; > Run with --stacktrace option to get the stack trace.; > Run with --info or --debug option to get more log output.; > Run with --scan to get full insights.; ; * Get more help at https://help.gradle.org; ; BUILD FAILED in 721ms. The instructions that I am following are as follows:. $ git clone https://github.com/qupath/qupath; $ cd qupath; $ ./gradlew clean jpackage. I have:; ```; $ uname -a; Linux goku.bu.edu 3.10.0-1160.59.1.el7.x86_64 #1 SMP Wed Feb 23 16:47:03 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux. ```; and; ```; $ lsb_release -a; LSB Version:	:core-4.1-amd64:core-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.9.2009 (Core); Release:	7.9.2009; Codename:	Core; ```. also:; ```; $ java -version; openjdk version ""1.8.0_322""; OpenJDK Runtime Environment (build 1.8.0_322-b06); OpenJDK 64-Bit Server VM (build 25.322-b06, mixed mode); ```. I also don't understand why it is looking elsewhere than where I have zipped it and set the directory to it as in:; ```; [jalal@goku downloads]$ sudo vi /etc/profile.d/gradle.sh; [jalal@goku downloads]$ sudo chmod +x /etc/profile.d/gradle.sh; [jalal@goku downloads]$ source /etc/profile.d/gradle.sh; [jalal@goku downloads]$ gradle -v. ------------------------------------------------------------; Gradle 7.4.2; ------------------------------------------------------------. Build time: 2022-03-31 15:25:29 UTC; Revision: 540473b8118064efcc264694cbcaa4b677f61041. Kotlin: 1.5.31; Groovy: 3.0.9; Ant: Apache Ant(TM) version 1.10.11 compiled on July 10 2021; JVM: 1.8.0_322 (Red Hat, Inc. 25.322-b0",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/950:102,error,error,102,https://qupath.github.io,https://github.com/qupath/qupath/issues/950,3,"['FAILURE', 'down', 'error']","['FAILURE', 'downloads', 'error']"
Availability,"I am getting the same problem using SLICs and classifiers to yield area; annotations for whole tissue slides. Detections are handled without a; problem, but the program freezes when I try to create margins for the; annotations. I do not run out of memory, but using the memory monitor I; notice a sawtooth pattern whe is the freezes happen. Perhaps it will run better if run from the command line since it no longer; will have to compete with the application thread?. I will set up a more powerful computer tomorrow. Perhaps that will handle; the problem. 7. feb. 2019 20:46 skrev ""Pete"" <notifications@github.com>:. It's hard to tell much here without a clearer idea of what 'a lot of rather; large and complex annotations' means, but it may very well be that there; are too many vertices that that slows down the rendering too much (on the; JavaFX application thread, same as the menus and rest of the GUI). If so it; isn't really a bug, but more pushing QuPath with a different application; than that for which it was previously designed/optimized... See https://github.com/qupath/qupath/wiki/Types-of-object for differences; in object types, and why it's not really intended to have very large; numbers of annotations. You might try having fewer vertices somehow, perhaps with *Objects →; Simplify annotation shape* or splitting larger annotations into smaller; ones (since annotations outside the field of view do not need to be; rendered). Or write a script that periodically converts annotations you; won't need to change any more into detections. Or try to leave parts of the; image that are particularly complex *unannotated*, and then interpret the; unannotated region appropriately later. (I was actually looking into this today for completely different reasons,; and may be able to improve the annotation handling somewhat... but it; doesn't help you now). —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub; <https://gith",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/267#issuecomment-461575920:806,down,down,806,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461575920,1,['down'],['down']
Availability,"I am glad I checked completely. Despite appearing to read in correctly, there is still some issue that saving using the LabeledImageServer does not resolve. I am not sure what the problem is, but my model, despite showing the mask correctly, trains as if the entire image is background. I am not happy to report ""something does not work somewhere"" since that will not help fix the problem, but that is where I am at. Running it through Fiji to convert to 8bit still works, however. ; Exporting the images both ways results in, as far as I can tell, identical images.; ![image](https://user-images.githubusercontent.com/85200392/174497099-16e24bec-c6db-442c-abe3-03e26d1d408a.png). However the one on the right was exported directly by the LabeledImageServer, and fails to work during training.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/993#issuecomment-1159796100:226,mask,mask,226,https://qupath.github.io,https://github.com/qupath/qupath/issues/993#issuecomment-1159796100,1,['mask'],['mask']
Availability,"I am not able to build QuPath with Gradle by following the procedure.; Below is the error I'm facing to create the Package:. > Task :createPackage FAILED; Task ':createPackage' is not up-to-date because:; Task has not declared any outputs despite executing actions.; Using packager: C:\jdk13; C:\jdk13 create-image --input C:\QuPath\build\qupath --output C:\QuPath\build\dist --main-jar qupath-0.2.0-m2.jar --name QuPath-0.2.0-m2 --app-version 0.2.0-m2 --strip-native-commands --icon C:\QuPath\build\resources\main\package\windows\QuPath.ico --runtime-image C:\QuPath\build\jre; Starting process 'command 'C:\jdk13''. Working directory: C:\QuPath Command: C:\jdk13 create-image --input C:\QuPath\build\qupath --output C:\QuPath\build\dist --main-jar qupath-0.2.0-m2.jar --name QuPath-0.2.0-m2 --app-version 0.2.0-m2 --strip-native-commands --icon C:\QuPath\build\resources\main\package\windows\QuPath.ico --runtime-image C:\QuPath\build\jre; :createPackage (Thread[Execution worker for ':' Thread 2,5,main]) completed. Took 0.002 secs. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':createPackage'.; > A problem occurred starting process 'command 'C:\jdk13''. * Try:; Run with --stacktrace option to get the stack trace. Run with --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. BUILD FAILED in 2m 1s; 63 actionable tasks: 63 executed . C:\jdk13 - is my JPackage path.; Any idea of what I am doing wrong?; Many thanks in advance for any help!!",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/297:84,error,error,84,https://qupath.github.io,https://github.com/qupath/qupath/issues/297,2,"['FAILURE', 'error']","['FAILURE', 'error']"
Availability,"I am not able to create classifiers because I am not able to select features. ""No features selected!"" when attempting to create detection classifier in the ""Advanced options"" drop down under ""Classifier"" in ""Create detection classifier"". . Seems like I am missing something simple -- any ideas?",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/63:180,down,down,180,https://qupath.github.io,https://github.com/qupath/qupath/issues/63,1,['down'],['down']
Availability,"I am not sure about null, but if having a primary selected object is important, not having one could throw a meaningful error rather than returning null. ""No primary object is selected and you have attempted to select a single object when multiple objects are selected. Please add more logic to your statement to determine which object you want, if you only want one object."". That could probably be phrased better, but maybe it gets the idea across?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/758#issuecomment-869212957:120,error,error,120,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869212957,1,['error'],['error']
Availability,"I am so sorry,; I found this to be my fault. I did not add the parameter ""-image"". After adding parameters, the program runs normally.; -----------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-nat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420540074:38,fault,fault,38,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074,1,['fault'],['fault']
Availability,"I am trying to implement a script to assist in [IF colocalization calculations](https://forum.image.sc/t/if-colocalization-calculations-for-qupath/25165) and one of the classes does not exist. The script was originally written in 0.2.0m2, but I am using 0.2.0m6. Was this class modified between milestones, [similar to the IJTools](https://petebankhead.github.io/qupath/2019/08/21/scripting-in-v020.html#working-with-imagej)? . My code reads: ; `import qupath.imagej.objects.ROIConverterIJ`; With an error as below:; `ERROR: It looks like you have tried to import a class 'qupath.imagej.objects.ROIConverterIJ' that doesn't exist!`; `ERROR: Error at line 26: startup failed: Script6.groovy: 27: unable to resolve class qupath.imagej.objects.ROIConverterIJ`. I have tried importing all objects:; `import qupath.imagej.objects.*`; But receive the following error:; `ERROR: I cannot find 'ROIConverterIJ'!`; `ERROR: Error at line 56: No such property: ROIConverterIJ for class: Script7`. Thanks in advance for your help.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/384:500,error,error,500,https://qupath.github.io,https://github.com/qupath/qupath/issues/384,8,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"I am unable to open a project file that was last opened two days ago (5/23/2023). The file is not visible in the folder it has been saved to, but the backup is still there. I tried opening it via recent programs but I get an error message (see below). I also tried copying the backup and changing the name to make it a regular project file, but it only has the blank LIF files and not the annotations and classifications that I have applied for analysis. Is there any way I would be able to retrieve the original file? I haven't had any issues with it until now and redoing the analysis would be a huge inconvenience.; ![Screenshot (1)](https://github.com/qupath/qupath/assets/134634667/d6facfc3-79c7-4d43-9eff-f331d11b4631). Thank you in advance.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1268:225,error,error,225,https://qupath.github.io,https://github.com/qupath/qupath/issues/1268,1,['error'],['error']
Availability,"I am working on getting QuPath up and running on a shared lab computer and am having issues opening .scn files using the bioformats extension. I copied over all the same settings from my personal computer that are confirmed to be working for me, however when I try to open the same images, they import at an unnamed image that throws an error when I try to open it, and a zoomed out image of the whole slide named ""macro."" In the properties panel all the information appears to be correct including the image type and the file name. Any ideas? . ![capture2](https://user-images.githubusercontent.com/41748563/53506051-cc542b00-3a7a-11e9-9a1a-082354da8e42.PNG); ![capture3](https://user-images.githubusercontent.com/41748563/53506052-cc542b00-3a7a-11e9-94ae-c33569a3575a.PNG); ![capture](https://user-images.githubusercontent.com/41748563/53506053-cc542b00-3a7a-11e9-8e32-35189308a3d8.PNG)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/271:337,error,error,337,https://qupath.github.io,https://github.com/qupath/qupath/issues/271,1,['error'],['error']
Availability,"I can replicate the issue with CMU-1-JP2K from https://openslide.cs.cmu.edu/download/openslide-testdata/DICOM/. In a QuPath script, calling ; ```groovy; getCurrentServer().dumpMetadata(); ```; indicates that the magnification is not present in the OME metadata from Bio-Formats, therefore I don't think this is a QuPath bug. ; ```xml; <?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>; <OME xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""; xsi:schemaLocation=""http://www.openmicroscopy.org/Schemas/OME/2016-06 http://www.openmicroscopy.org/Schemas/OME/2016-06/ome.xsd""; xmlns=""http://www.openmicroscopy.org/Schemas/OME/2016-06"">; <Image ID=""Image:0"" Name=""VOLUME"">; <Description>DERIVED\PRIMARY\VOLUME\NONE</Description>; <Pixels BigEndian=""false"" DimensionOrder=""XYCZT"" ID=""Pixels:0"" Interleaved=""true""; PhysicalSizeX=""4.99E-4"" PhysicalSizeXUnit=""mm"" PhysicalSizeY=""4.99E-4""; PhysicalSizeYUnit=""mm"" SignificantBits=""8"" SizeC=""3"" SizeT=""1"" SizeX=""46000""; SizeY=""32893"" SizeZ=""1"" Type=""uint8"">; <Channel ID=""Channel:0:0"" SamplesPerPixel=""3"">; <LightPath />; </Channel>; <MetadataOnly />; <Plane TheC=""0"" TheT=""0"" TheZ=""0"" />; </Pixels>; </Image>; <Image ID=""Image:1"" Name=""THUMBNAIL"">; <Description>DERIVED\PRIMARY\THUMBNAIL\RESAMPLED</Description>; <Pixels BigEndian=""false"" DimensionOrder=""XYCZT"" ID=""Pixels:1"" Interleaved=""true""; PhysicalSizeX=""0.022416015625"" PhysicalSizeXUnit=""mm"" PhysicalSizeY=""0.022416015625""; PhysicalSizeYUnit=""mm"" SignificantBits=""8"" SizeC=""3"" SizeT=""1"" SizeX=""1024"" SizeY=""732""; SizeZ=""1"" Type=""uint8"">; <Channel ID=""Channel:1:0"" SamplesPerPixel=""3"">; <LightPath />; </Channel>; <MetadataOnly />; <Plane TheC=""0"" TheT=""0"" TheZ=""0"" />; </Pixels>; </Image>; <Image ID=""Image:2"" Name=""OVERVIEW"">; <Description>DERIVED\PRIMARY\OVERVIEW\NONE</Description>; <Pixels BigEndian=""false"" DimensionOrder=""XYCZT"" ID=""Pixels:2"" Interleaved=""true""; PhysicalSizeX=""0.058932714617169"" PhysicalSizeXUnit=""mm""; PhysicalSizeY=""0.058932714617169"" PhysicalSizeYUnit=""mm"" SignificantB",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1445#issuecomment-1881296347:76,down,download,76,https://qupath.github.io,https://github.com/qupath/qupath/issues/1445#issuecomment-1881296347,1,['down'],['download']
Availability,"I can run the m11 download, but not build it (same errors). Will try the minimal approach",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-630429685:18,down,download,18,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630429685,2,"['down', 'error']","['download', 'errors']"
Availability,"I can start a new thread for this if you want, but the error I was referring to earlier I could replicate quickly by generating a decent number of subcellular detections... and then trying to double click on a cell in the viewer to see values. After this happens, any interaction with the viewer results in the same Exception spam popup in the corner of the program. The popup itself says Stack Overflow. > ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > INFO: Processing complete in 34.46 seconds; > INFO: Completed!; > INFO: ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > ERROR: QuPath exception; > at javafx.scene.Node.access$100(Node.java:398); > at javafx.scene.Node$1.doMarkDirty(Node.java:424); > at com.sun.javafx.scene.NodeHelper.markDirtyImpl(NodeHelper.java:158); > at com.sun.javafx.scene.shape.ShapeHelper.markDirtyImpl(ShapeHelper.java:80); > at com.sun.javafx.scene.NodeHelper.markDirty(NodeHelper.java:98); > at javafx.scene.shape.Shape$2.invalidated(Shape.java:463); > at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); > at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); > at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); > at javafx.css.StyleableObjectProperty.applyStyle(StyleableObjectProperty.java:68); > at javafx.scene.shape.Path.<init>(Path.java:139); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.createButtonShap",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/307#issuecomment-484622516:55,error,error,55,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516,1,['error'],['error']
Availability,"I can't replicate this issue. @GiuseppeAntoniazzi can you provide more detailed step-by-step instructions see the error?. It helps if the error can be reproduced using a publicly-available image, e.g. one from https://qupath.readthedocs.io/en/0.4/docs/intro/acknowledgements.html. If this isn't possible, then it would help to provide the actual objects you are using. These can be exported using *File &rarr; Export objects as GeoJSON*",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1290#issuecomment-1685767165:114,error,error,114,https://qupath.github.io,https://github.com/qupath/qupath/issues/1290#issuecomment-1685767165,3,"['avail', 'error']","['available', 'error']"
Availability,"I cannot make pytorch work. I tried also with a conda env but nothing works. Even if I just select CPU in Instantseg, it tries to load the cuda version. Problem is that it detects cuda 12.1 so maybe it does not even want to try to load the CPU version?. `Failed to load PyTorch native library; ai.djl.engine.EngineException: Failed to load PyTorch native library; 	at ai.djl.pytorch.engine.PtEngine.newInstance(PtEngine.java:90); 	at ai.djl.pytorch.engine.PtEngineProvider.getEngine(PtEngineProvider.java:41); 	at ai.djl.engine.Engine.getEngine(Engine.java:190); 	at qupath.ext.instanseg.core.PytorchManager.lambda$getEngineOnline$0(PytorchManager.java:28); 	at qupath.ext.instanseg.core.PytorchManager.callWithTempProperty(PytorchManager.java:114); 	at qupath.ext.instanseg.core.PytorchManager.callOnline(PytorchManager.java:106); 	at qupath.ext.instanseg.core.PytorchManager.getEngineOnline(PytorchManager.java:28); 	at qupath.ext.instanseg.ui.InstanSegController.downloadPyTorch(InstanSegController.java:826); 	at qupath.ext.instanseg.ui.InstanSegController.ensurePyTorchAvailable(InstanSegController.java:815); 	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source); 	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source); 	at java.base/java.util.concurrent.ForkJoinTask.doExec(Unknown Source); 	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(Unknown Source); 	at java.base/java.util.concurrent.ForkJoinPool.scan(Unknown Source); 	at java.base/java.util.concurrent.ForkJoinPool.runWorker(Unknown Source); 	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source); Caused by: java.lang.UnsatisfiedLinkError: C:\Users\username\.djl.ai\pytorch\2.3.1-cu121-win-x86_64\cudnn_cnn_infer64_8.dll: The specified procedure could not be found; 	at java.base/jdk.internal.loader.NativeLibraries.load(Native Method); 	at java.base/jdk.internal.loader.NativeLibraries$NativeLibraryImpl.open(Unknown Source); 	",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1636:966,down,downloadPyTorch,966,https://qupath.github.io,https://github.com/qupath/qupath/issues/1636,1,['down'],['downloadPyTorch']
Availability,"I could not replicate the problem. I opened the common sample image `CMU-1.svs` and used QuPath to write a pyramidal OME-TIFF with tile size 1024x1024 and default compression option (here, uses JPEG). After relaunching QuPath v0.3.2 (to ensure a clean start), It works properly with tile reading, caching and viewing across resolutions. * Have you tested this with multiple OME-TIFF files?; * Which software was used to write the pyramidal OME-TIFF files that are misbehaving?; * Are there any clues / errors reported in QuPath under *View &rarr; Show log*?; * Can you share any example images exhibiting this issue?. Note that v0.3.1 temporarily used a different version of Bio-Formats (6.8.0), but v0.3.0 and v0.3.2 use the same version of Bio-Formats (6.7.0). If you could compare behavior across all three versions, this may help identify when any problem could have been introduced.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/904#issuecomment-1025461117:502,error,errors,502,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1025461117,1,['error'],['errors']
Availability,"I created a bunch of annotations by first using the pixel classifier and then ""create objects."" I want to quantify the cells in my image but the object creator clumped some together. When I go in and try to split these annotations, I click ""unlock"" but the software will only sometimes (maybe about a third of the time) give me the draggable points that I can then use to edit the annotation and split it. No error is returned or anything, I'm just unable to edit the annotation despite unlocking it in most cases. There doesn't seem to be any pattern to describe when it will work and when it won't. I'm on Windows 10 using v0.4.2.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1224:409,error,error,409,https://qupath.github.io,https://github.com/qupath/qupath/issues/1224,1,['error'],['error']
Availability,"I definitely agree that the current limit is bad. But the fix could result in more out-of-memory errors. I think it would be good to good to give some protection from these (or a more informative error if they occur), and aim for a more substantial fix. Two changes could help:; * Choose a pixel count threshold based upon both the maximum pixel count that ImageJ could conceivably support, i.e. 2<sup>31</sup>-1 (or a little more than 1) *and* also a memory threshold based on estimating the image size and memory available; * Add a scaling factor as a static field to control what proportion of the available memory is permitted for use. It could be something like this:; ```java; static double MEMORY_THRESHOLD = 0.5;; ...; long remainingMemory = ... // With the help of Runtime.getRuntime(), after request for garbage collection; long approxMemory = ... // Calculation based on pixel count, bit-depth & number of channels; if (approxPixelCount > 2147480000L || approxMemory > remainingMemory * MEMORY_THRESHOLD) {; // Show the size error; } else {; // Have a go at extracting the region; }; ```; By making the scaling factor a static field, there is at least the option of overriding it in a Groovy script if absolutely necessary. The details around the pixel count get a bit fiddly, considering that ImageJ1 will use a packed int array in a `ColorProcessor` for RGB images, while in other cases a new array will be allocated for every channel. Furthermore, it might be prudent to take parallelization into account, and the result returned by `PathPrefs.getNumCommandThreads()`. I'm dubious about sending the whole image if no selection exists, because it's really easy to accidentally run the command without an area selected... and then everything can grind to a halt while QuPath tries (and possibly fails) to extract a massive region. Currently you can use *Objects &rarr; Create full image annotation*, its shortcut `Ctrl + Shift + A` or the scripting command `createSelectAllObject(true);` t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/134#issuecomment-356714438:97,error,errors,97,https://qupath.github.io,https://github.com/qupath/qupath/pull/134#issuecomment-356714438,4,"['avail', 'error']","['available', 'error', 'errors']"
Availability,"I deleted the snapshots from my gradle cache, and built QuPath again just now. I'm afraid I still see the same behavior, it still gives the error. In case I was still somehow using an out-of-date jar, I checked the JavaCPP manifest and see; ### JavaCPP; ```; Bundle-Version: 1.5.7.202201240730; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1022924614:140,error,error,140,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1022924614,1,['error'],['error']
Availability,"I don't know, I haven't seen this problem before - and if nothing has changed in the meantime, I see no reason why the classifier wouldn't work. The updates mentioned above shouldn't affect this (more accurately, the updates that *might* affect it aren't available there yet). When you say you copied and pasted the classifier, I guess you mean the whole file through Windows Explorer?. Do you have any more luck if you try running it from a different location, e.g. copy it to the Desktop and try from there?. If you are able to send me the `.qpclassifier` file then I can investigate some more. If there isn't a way for you to upload it here and you haven't already got my email address from somewhere, then if you sign up to the [QuPath user forum on Google Groups](https://groups.google.com/forum/#!forum/qupath-users) I can contact you directly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/160#issuecomment-375339965:255,avail,available,255,https://qupath.github.io,https://github.com/qupath/qupath/issues/160#issuecomment-375339965,1,['avail'],['available']
Availability,"I don't think QuPath directly modifies any of the images. You can create new files with a ""burned in"" mask at whatever size/downsample as long as they are within the allowable size for that file type, but modifying pyramidal files might be rough. Similar question here perhaps: https://github.com/qupath/qupath/issues/166. Side note, the square images should have XY coordinates as part of their name so that they can be reconstructed from the file names. You may also be able to create the binary mask as Pete posted above, but as a single image with a known downsample, then expand it back to normal size within the program you are using to merge it into your (I assume) tiff. If you want essentially an extra channel with the mask in it, I think you want a file of a size that FIJI/ImageJ can handle, and merge the extra channel in there after exporting the mask from QuPath. That still leaves stitching all of the files together using another plugin or program, if you exported as many tiles. https://imagej.net/Stitch_and_Align_a_sequence_of_grid_images_Tutorial",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/95#issuecomment-388386859:102,mask,mask,102,https://qupath.github.io,https://github.com/qupath/qupath/issues/95#issuecomment-388386859,6,"['down', 'mask']","['downsample', 'mask']"
Availability,"I edited the code to try that but I still got the following error: . ````; ERROR: Error: startup failed:; Script53.groovy: 45: unable to resolve class ImagePlusServer ; @ line 45, column 17.; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal); ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:596); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1034); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-484643330:60,error,error,60,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-484643330,8,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'ErrorCollector', 'error']"
Availability,I encountered the same error using generic tiled pyramidal tifs generated with ImageMagick or libvips. ; Here is an example file:; [Image](https://vanderbilt.box.com/s/s833k4t61ntwmrxu37p4edxpimqzzndm),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472104490:23,error,error,23,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472104490,1,['error'],['error']
Availability,"I expect it starts from the underlying Geometry becoming somehow invalid. However I don't know for sure if this is the case, haven't experienced it myself and have no idea how to reproduce it. If you _do_ press undo, have you tried doing so multiple times? I mean, if the shape is being modified then a 'valid' version might be 'several undos back'. Apart from that, I would likely need one or all of the following:; * the contents of _View &rarr; Show log_ (if any errors are reported); * a .qpdata file with a misbehaving annotation; * steps or a script that enable me to reproduce it. Oh yes, and as @Svidro says - the version number is essential. If it only happens before v0.2.0-m7 then it may already have been fixed (as I have made many changes in this area).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/381#issuecomment-561272296:466,error,errors,466,https://qupath.github.io,https://github.com/qupath/qupath/issues/381#issuecomment-561272296,1,['error'],['errors']
Availability,"I feel that is likely to cause more confusing and maintenance headaches as the software develops, mostly for the reasons I outlined above. Commands will change and improve. The same command (e.g. *Load object classifier*) might meaningfully only work for detections now, but handle other object types in the future (I think that, in principle, it already *does* support other object types, if you can somehow create and save a classifier that applies to annotations). There had been a *Train detection classifier* in earlier versions, so the renaming in that case was to reduce confusion because there was a transition period during which both commands were maintained in parallel. If we move things, we need to update the documentation - and some of the docs are in the form of videos, so that's not straightforward. And if we push the term 'detection classifier' it will likely confuse *someone* who thinks it isn't relevant to them because they have cells, not detections. I don't think the current arrangement is ideal, but we are always trying to balance the current software with the past, the future, the docs, and a large number of users with very different needs and expectations... and a very small number of developers. Added to that are the people who write extensions, for whom changing menu structures can cause trouble. It is not an easy project to manage.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1501#issuecomment-2079524506:50,mainten,maintenance,50,https://qupath.github.io,https://github.com/qupath/qupath/issues/1501#issuecomment-2079524506,1,['mainten'],['maintenance']
Availability,"I get the Pointer warnings too (I dug down into them once - as far as I can tell they can be ignored)... but not the segfault. Yesterday's ticket does indeed look relevant, albeit a bit lacking in detail. Have you tried also building the JavaCpp example project+? It would be good to be able to figure out if the source of the problem exists entirely outside of QuPath. Also check out JavaCpp-presets - https://github.com/bytedeco/javacpp-presets/wiki. In times of desperation, you might replace the opencv declarations in build.gradle with opencv-platform: https://search.maven.org/artifact/org.bytedeco/opencv-platform/4.3.0-1.5.3/jar. The difference is that opencv-platform does a rather more complete job of resolving dependencies... which here involves downloading binaries for *all* platforms, i.e. a lot more than is needed. This can help debug issues if QuPath's more stripped-down inclusions are the source of the problem - but I don't think that's the case here. Finally, you could try getting Gradle to skip tests (I haven't done this myself, so would also be googling the process) to see if the build works. > +I don't know exactly what the example project refers to...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-633287941:38,down,down,38,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633287941,3,['down'],"['down', 'downloading']"
Availability,I got a fresh Windows 10 vm from https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/ java 14 from https://jdk.java.net/14/ and I get the exact two test failures when building m12.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-633258192:164,failure,failures,164,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633258192,1,['failure'],['failures']
Availability,"I guess it's good news that it works for you. Could be related to my set up then.... I'm on mac as well, High Sierra currently. I've tried different bioformat extension versions, doing as you said to remove or add, also tried reinstalling QuPath, but I still get an error like this:. INFO: Refreshing extensions in /Users/rmevel/QuPath/extensions; INFO: Added extension: /Users/rmevel/QuPath/extensions/qupath-extension-bioformats(1).jar; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:45); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409140774:266,error,error,266,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409140774,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"I had 730 slides with 10 different stains, so I ran them in batches of 73 slides and each of them had the same issue of slowing down significantly after the first few slides. I think I faced an OutOfMemoryError once or twice which led me into finding and using that script, which resolved at least running out of memory (or just ""fixed"" it that it never happened with my batch size anymore) and might have sped up the process marginally but not to the same speed as running the script without batching. Below hopefully are the relevant parts of the script and classifiers. ```java; createAnnotationsFromPixelClassifier(""ASMA Classifier"", 100000.0, 200000.0, ""DELETE_EXISTING""); ```. ```json; ""pixel_classifier_type"": ""OpenCVPixelClassifier"",; ...; ""pixelWidth"": {; ""value"": 8.048,; ""unit"": ""µm""; },; ""pixelHeight"": {; ""value"": 8.048,; ""unit"": ""µm""; }; ...; ""inputWidth"": 512,; ""inputHeight"": 512,; ```. I can try running the analysis sometime and see if I can reproduce the OutOfMemoryError or see any patterns with and without the snippet.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1322#issuecomment-1716011063:128,down,down,128,https://qupath.github.io,https://github.com/qupath/qupath/issues/1322#issuecomment-1716011063,1,['down'],['down']
Availability,"I had wanted to play with something like this for a while now, and this post finally got me going! It took some time as I am not great with Java, but I have put together a two part system that is independent of the .qpdata file, though you could certainly enhance it's usefulness with annotations. To start (assuming you have a project with an image), you would create an ""Explore"" (capitalized) folder within your project folder, at the same level as the ""data"" folder. Then run the ""Location file creator"" and select the views that you would want the student to cycle through, in order, while writing a text file referencing each location (which will be labeled 1,2,3, etc.).; Once you have both the text file and the object file saved to your Explore folder, anyone currently looking at an image should be able to run the Slide Explore script which takes the text file and the object file with the views, and allows the user to read and cycle through the various views that were set up. I created a sample for JP2K-33003-1 if anyone wants to try it out and give some feedback. Once I am a little better with Java, I would like to change the Next/Previous buttons into hyperlinks in the text, but I am not quite there yet :). Scripts at: https://gist.github.com/Svidro/86fb224d69484ae5955631ce68d27054. The test image can be accessed at: http://openslide.cs.cmu.edu/download/openslide-testdata/Aperio/JP2K-33003-1.svs; The "".log"" file needs to be renamed to "".obj"" as I cannot post that file directly otherwise. I am sure there are a lot of improvements that could be made, and any feedback is welcome. [JP2K-33003-1.txt](https://github.com/qupath/qupath/files/1715587/JP2K-33003-1.txt). [JP2K-33003-1.log](https://github.com/qupath/qupath/files/1715588/JP2K-33003-1.log)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/144#issuecomment-364849591:1368,down,download,1368,https://qupath.github.io,https://github.com/qupath/qupath/issues/144#issuecomment-364849591,1,['down'],['download']
Availability,"I hadn't really thought of libvips for this purpose as it seems much more than an image-reading library - but if it could offer a more extensive and maintainable alternative to OpenSlide alone that would be fantastic. I notice that bindings are available for multiple languages, but Java isn't listed as one of them. I can also only see binaries provided for Windows. Therefore, assuming it can be used in a similar way to OpenSlide (i.e. open an image, retaining a reference to it and requesting tiles on demand) then to get it into QuPath I think it would need:; * Binaries for Windows, Linux and Mac (including OpenSlide and potentially other optional dependencies - assuming the licenses all fit); * Java bindings, presumably with JNI (or [can JavaCPP help...?](https://github.com/bytedeco/javacpp/wiki/Mapping-Recipes)); * A QuPath extension to bridge the gap. The last one of these should be quite straightforward. I'm afraid I don't have the time or skills for the first two, but they can be treated entirely separately from QuPath. Do you know of a solution to the first two requirements / have any interest in coming up with one to make libvips available in a cross-platform way that could be distributed through QuPath?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/355#issuecomment-529201022:245,avail,available,245,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-529201022,2,['avail'],['available']
Availability,"I happened to me again today and your explanation is sound. It occurs somewhat randomly, and eventually would work after repetitive attempts to put the files in the project... not ideal! For example I had 7 images and it would only load 5 the first time, and then I'd have to add the 2 others subsequently. ; Also, for some reason it seems to never load any file if I do the following steps:; - create directory outside of QuPath (which will become the project directory); - open qupath, create a project and select the directory just created; - drag and drop the files to the project in qupath . But if I dont ""pre-create"" the folder and only create it while creating the project, and use the ""add images"" button, then it seems to accept the files (or more files at a time at least). I didn't get the chance to try the script you posted sorry (forgot really), but will definitely try m4 when it's available!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/348#issuecomment-520551709:898,avail,available,898,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-520551709,1,['avail'],['available']
Availability,"I have CZI files on which I've done some pre-processing in Zen, including messing with the tile stitching. They open naturally in Zen. To open them in ImageJ I have to turn off the bio-formats Autostitch. There does not seem to be a way to do that in QuPath m8? When I ask it to open with the Default (let QuPath decide) ImageProvider, it fails and gives the error below. If I tell it to use Bioformats, nothing happens (no error, no image). A small cropped example image is here: https://drive.google.com/file/d/1XTnZdoex08mZajcMMjw37U2456tFlV3X/view?usp=sharing. Is there a way (or can you add a way) to turn off Autostitch in the bioformats settings?. ```; 14:59:04.755 [qupath-shared-1] [WARN ] q.l.i.servers.ImageServerProvider - Unable to open UriImageSupport (class qupath.imagej.images.servers.ImageJServerBuilder) support=1.0, builders=1; 14:59:04.755 [qupath-shared-1] [WARN ] q.l.g.c.ProjectImportImagesCommand - Exception adding Image null; java.io.IOException: Unable to build ImageServer for file:/D:/Random%20for%20core/qupath%20to%20csv/2016-08-11%20%2006_Flattened-Create%20Image%20Subset-01.czi (args=[]); at qupath.lib.images.servers.ImageServerBuilder$DefaultImageServerBuilder.buildOriginal(ImageServerBuilder.java:323); at qupath.lib.images.servers.ImageServerBuilder$AbstractServerBuilder.build(ImageServerBuilder.java:147); at qupath.lib.gui.commands.ProjectImportImagesCommand.initializeEntry(ProjectImportImagesCommand.java:505); at qupath.lib.gui.commands.ProjectImportImagesCommand$1.lambda$call$1(ProjectImportImagesCommand.java:278); at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source); at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source); at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source); at java.base/java.util.stream.ForEachOps$ForEachTask.compute(Unknown Source); at java.base/java.util.concurrent.CountedCompleter.exec(Unknown Source); at java.base/java.util.concurrent.ForkJoinTa",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/396:359,error,error,359,https://qupath.github.io,https://github.com/qupath/qupath/issues/396,2,['error'],['error']
Availability,"I have a script that runs via QuPath GUI without problem.; However, if I run this via GUI, a weird compilation error appeared inside the code:; double PixelHeightMicrons,PixelWidthMicrons,PixelZSpacingMicrons; ```; if (HasPixelSizeMicrons){; PixelHeightMicrons = server.getPixelHeightMicrons(); print(""PixelHeightMicrons:"" + PixelHeightMicrons); PixelWidthMicrons = server.getPixelWidthMicrons(); print(""PixelWidthMicrons:"" + PixelWidthMicrons); PixelZSpacingMicrons = server.getZSpacingMicrons(); print(""PixelZSpacingMicrons:"" + PixelZSpacingMicrons); }else{; PixelHeightMicrons = 1.0; print(""PixelHeightMicrons:"" + PixelHeightMicrons); PixelWidthMicrons = 1.0; print(""PixelWidthMicrons:"" + PixelWidthMicrons); PixelZSpacingMicrons = 1.0; print(""PixelZSpacingMicrons:"" + PixelZSpacingMicrons); }; ```; The weird error take place at the line,which is a very common line:; `PixelWidthMicrons = server.getPixelWidthMicrons(); `; ```; 15:23:36.355 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, D:\\QMDownload\\5\\~!@#$%^&( )_+=-0987654321`{}[%23];',\\single_neur~!@#$%^&( )_+=-0987654321`{}[%23];',on_40X_3.mrxs, -script, D:\\QMDownload\\5\\~!@#$%^&( )_+=-0987654321`{}[%23];',\\tpce66e23b_cda9_4090_b04a_b5603607aba8.groovy ; 15:23:36.512 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1 ; 15:23:36.562 [main] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.level[0].tile-width' not available, will return default value 256.0 ; 15:23:36.562 [main] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.level[0].tile-height' not available, will return default value 256.0 ; 15:23:36.812 [main] [INFO ] q.l.i.s.o.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@2f953efd: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 87 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0) ; 15:23:36.812 [main] [INFO ] q.l.i.servers.Im",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/286:111,error,error,111,https://qupath.github.io,https://github.com/qupath/qupath/issues/286,2,['error'],['error']
Availability,"I have a very strong suspicion that it's a Linux issue with the system dragboard, but I've not managed to narrow it down. When I said . > come from the same source. I think I was maybe wrong - I tried dragging the same URL from a text editor, and it still didn't work as expected. I did get a `file://` link to overwrite a `https://` link, but I couldn't do the reverse...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1415#issuecomment-1798055787:116,down,down,116,https://qupath.github.io,https://github.com/qupath/qupath/pull/1415#issuecomment-1798055787,1,['down'],['down']
Availability,"I have an issue with certain ome.tiff images not opening in QuPath. In the command line console, Im receiving the Java error: NegativeArraySizeException and when I try to edit in the command line, it will not allow me to and I dont know how to access that. If you have any help or advice to get these images open, please let me know",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/437#issuecomment-1410779242:119,error,error,119,https://qupath.github.io,https://github.com/qupath/qupath/issues/437#issuecomment-1410779242,1,['error'],['error']
Availability,"I have difficulties reproducing the following bug, but - since it happens to me at least once daily - I am sure this doesn't happen on a random pattern:. Sometimes upon anotating an area the brush/magic wand all of a sudden won't be able to further extend the existing anotation and the miniature version of the anotation depicted next to the term 'Annotation (Geometry)' in the list on the left will have got lost. I have even tried saving the file, rebooting my PC and opening the file anew, but I still wouldn't be able to expand the annotated area and in the list of annotations, the miniature depiction of the annotation would still be gone. So, the only solution left is to delete the annotation and start a new one.; P.S.: Of course, I have also tried the Undo feature - lamentably, in vain, though... ![QuPath bug ](https://user-images.githubusercontent.com/58481912/70072532-77d87000-15f7-11ea-8ca5-68a2b23396c6.jpg)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/381:451,reboot,rebooting,451,https://qupath.github.io,https://github.com/qupath/qupath/issues/381,1,['reboot'],['rebooting']
Availability,"I have downloaded dataset from https://camelyon16.grand-challenge.org/ but looks like QuPath openslide is not able to open it up and giving null pointer exception. I am able to open this file using openslide deep zoom sample server. Error below from openslide. 09:32:08.147 [JavaFX Application Thread] [WARN ] q.i.i.servers.ImageJServerBuilder - Error opening /data/CAMELYON16/Train_Tumor/Tumor_005.tif with ImageJ: Could not open /data/CAMELYON16/Train_Tumor/Tumor_005.tif with ImageJ; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; 09:32:08.264 [JavaFX Application Thread] [ERR",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/65:7,down,downloaded,7,https://qupath.github.io,https://github.com/qupath/qupath/issues/65,3,"['Error', 'down']","['Error', 'downloaded']"
Availability,"I have installed the new extension with the same results. I tried to exclude the .scn file from bioformats so that OpenSlide opens it to no avail it comes up with file can't open, however, I downloaded a sample of the .scn file from openslide it opens OK ; It could well be the issue @Svidro illuded to.; Its seems like this is an ongoing issue https://github.com/openslide/openslide/issues/189, The files I have here are produced by Leica Versa while our older .scn from SCN400 work OK",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-358745153:140,avail,avail,140,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-358745153,2,"['avail', 'down']","['avail', 'downloaded']"
Availability,"I have installed the new version of QuPath and after that the app doesn't load any longer on my Mac.; The version I downloaded was QuPath-0.4.1-Mac.pkg. <img width=""263"" alt=""Screenshot 2022-12-23 at 11 18 39"" src=""https://user-images.githubusercontent.com/11831210/209308931-805aca40-25d6-4ceb-b659-23a801eb6167.png"">. MacOS version: 13.1 (22C65); MacBook Pro 13-inch, 2020.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1199:116,down,downloaded,116,https://qupath.github.io,https://github.com/qupath/qupath/issues/1199,1,['down'],['downloaded']
Availability,"I have kept meaning to try the Weka plugin, but never seemed to get around to it! This sounds like an excellent chance to test it out.; Somewhat related, I am not sure I understand exactly what you are measuring, but if you are measuring ""the amount of white space"" in your tissue, I have a couple of suggestions.; 1. Create a macro that sends your annotation areas to ImageJ, which can then create detection objects from a mask created to detect below/above a certain ""white"" threshold.; 2a. Built in, create a smallish annotation that includes significant whitespace and your tissue of interest. Next use the Analyze->Preprocessing->Estimate stain vectors to both set your background to the mode (first popup), and secondly set one stain vector as best you can to line up with your detections, and the other you can pretty much ignore.; ![step1](https://cloud.githubusercontent.com/assets/23145209/23876638/b0997bee-07fb-11e7-9c2a-434dacaddead.JPG); 2b. Use the Analyze->Region Identification->Positive Pixel Count (experimental) with very a very low threshold for the stain vector you used in the previous step, and an absurdly high threshold for your second vector which we will ignore. I would iterate a few times on a VERY small area, as this is very computationally intensive, and the program tends to respond very slowly for me after running it on a large area.; 2c. Once you have your settings and run the pixel count on your annotation, you can use your pixel area and the total area to get a percentage of total pixels that are below threshold. In the case of my image, I used the hematoxylin vector, so I multiplied the negative pixel count times the area of my pixels (seen under the image tab, Pixel Width and Pixel Height) and used that to obtain a percentage of non-tissue area within my annotation. You can see that in the Excel window, and that it roughly matches up with what you can see in the annotation.; ![step2](https://cloud.githubusercontent.com/assets/23145209/23877031/93cf",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/56#issuecomment-286257042:424,mask,mask,424,https://qupath.github.io,https://github.com/qupath/qupath/issues/56#issuecomment-286257042,1,['mask'],['mask']
Availability,"I have lots of QuPath's installed, and for me and `QuPath` (presumably v0.1.2) and `QuPath-0.3.0.app` are the only ones that show up in launchpad. v0.4.3 doesn't. To be honest, I forgot launchpad exists. I suspect the issue is related to the macOS version stored in the app. For v0.1.2 this is 0.1.2, but for all subsequent releases it is 1.0.0. The issue has come up a couple of times:; * https://github.com/qupath/qupath/issues/1250; * https://github.com/qupath/qupath/issues/1337. I spent several days trying to address it, but ultimately trying to embed the 'true' version number caused subtle, release-destroying issues: ; * https://github.com/qupath/qupath/pull/1379; Most annoyingly, the failure only emerged at the very end when *downloading* QuPath - local builds were ok, which meant that it's possible to believe it's fixed when it isn't. Therefore unless anyone else can spot a fix and confirm it works with downloaded versions, I'm afraid it's not something we can address. If my theory is correct, it will hopefully go away for QuPath >1.0.0, when we get there. For now, it's a restriction imposed by `jpackage` and macOS.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1448#issuecomment-1898097102:695,failure,failure,695,https://qupath.github.io,https://github.com/qupath/qupath/issues/1448#issuecomment-1898097102,3,"['down', 'failure']","['downloaded', 'downloading', 'failure']"
Availability,"I have saved a project in which I had identified single cells throughout a single TMA image. Upon closing and reloading the project I can see all images, but cannot load any information from any preprocessing or cell analysis.; Log and Error below.; Thanks for your help,; Hart. INFO: Reading data from HER2.qpdata...; ERROR: Reached end of file...; ERROR: QuPath exception; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:627); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:239); at qupath.lib.io.PathIO.readImageData(PathIO.java:334); at qupath.lib.gui.QuPathGUI.openSavedData(QuPathGUI.java:2399); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2208); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2152); at qupath.lib.gui.commands.OpenCommand.run(OpenCommand.java:51); at qupath.lib.gui.QuPathGUI.lambda$createCommandAction$46(QuPathGUI.java:3122); at org.controlsfx.control.action.Action.handle(Action.java:419); at org.controlsfx.control.action.Action.handle(Action.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.control.MenuItem.fire(MenuItem.java:462); at com.sun.javafx.scene.control.GlobalMenuAdapter.lambda$bindMenuItemProperties$20(GlobalMenuAdapter.java:153); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.ev",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/58:236,Error,Error,236,https://qupath.github.io,https://github.com/qupath/qupath/issues/58,3,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"I have seen the same error before, but not since updating to JDK 14 (which will be a minimum requirement for v0.2.0, since it greatly simplifies building by including jpackage). To avoid the error with JDK 11-13, I think you'd need to change the build script to include more modules with jlink.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/436#issuecomment-612953950:21,error,error,21,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-612953950,2,['error'],['error']
Availability,"I have seen the tiny rectangle appear whenever I use the brush tool in 'subtract' mode (with the ```Alt``` key down), and remove the entire area. However, in that case it is just a display thing - and the rectangle quickly disappears. But based on your post I've just checked and I can reproduce it using *Subtract selected annotations*... in which case the rectangle can hang around for longer. It still *does* disappear (sometimes...) if I select it, then start drawing a new annotation - but not entirely consistently. What I think is happening is this:; * Whenever a ROI is effectively removed (either with the brush tool or subtraction), it results in a rectangle at location (0, 0) with zero width and zero height - this is nevertheless still drawn on screen; * When removing with the brush tool, a sanity check is applied to see if the resulting ROI has no area - and if so, the object is removed (e.g. [see here](https://github.com/qupath/qupath/blob/61a382e1e345e671b3fde32da08e03f08f4f7bcf/qupath-gui-fx/src/main/java/qupath/lib/gui/viewer/tools/AbstractPathDraggingROITool.java#L100)); * This sanity check isn't applied with the *Subtract selected annotations* command... so the 'empty' ROI does not result in the object being automatically removed; * Sometimes the sanity check can be triggered later... but it entirely clear when and why. I've flagged this as a bug, since something here is definitely not right and should be fixed. I do think that there is a broader issue with the usefulness of the commands for combining annotations; these can and should behave more predictably. It may not be helped by the fact that for a long time (before release) QuPath didn't support multiple objects being selected simultaneously, and much of the original code was written back in those days; as you can imagine, this was quite limiting. You're completely right about support for subtracting multiple annotations being tricky from a how-to-present-this-to-the-user point of view. I will give thi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/78#issuecomment-302926092:111,down,down,111,https://qupath.github.io,https://github.com/qupath/qupath/issues/78#issuecomment-302926092,1,['down'],['down']
Availability,"I have the same problem with CZI files. . Pete answered with this - i didnt try to find if my settings were FL instead of brightfield yet, but most of the suggestions i tested already. It did not help. Here the suggestions: . This happens whenever QuPath is unable to detect any cores. There are a few reasons why this may occur:. The Image type is wrong (e.g. set to fluorescence rather than brightfield) - this can be seen after clicking on the Image tab on the left. There is a screenshot here.; The specified TMA core diameter is either too large or too small. QuPath determines the expected TMA grid from 'complete' cores, which have a diameter within a small tolerance of the value set in the dialog box. If no cores fall within this tolerance, the grid cannot be found.; The intensity threshold is either too high or too low (but it is automatically determined from the data, and I don't see any reason in your image why it would be determined wrongly). If the image type is set correctly, then I would try increasing and decreasing the TMA core diameter to see if this gives any improvements. If not, then there may be some issue happening internally when trying to read from the CZI file - although I have not seen such a problem before. The contents of View → Show log may be helpful to track down the problem.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/53#issuecomment-282308795:665,toler,tolerance,665,https://qupath.github.io,https://github.com/qupath/qupath/issues/53#issuecomment-282308795,3,"['down', 'toler']","['down', 'tolerance']"
Availability,"I haven't been able to reproduce the issue either in m8. I can now add a duplicate image and look at one image with the masks on while looking at a second image with no objects. Miniviewer for masks! Except not mini. I guess. I used to be able to do some other stuff like turn the masks off or on or color them differently per viewer, but that no longer seems to be possible. Not a big deal though, not not really relevant to this.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/284#issuecomment-562880040:120,mask,masks,120,https://qupath.github.io,https://github.com/qupath/qupath/issues/284#issuecomment-562880040,3,['mask'],['masks']
Availability,"I haven't tried the new classifier with a large training set, and I'm afraid I really cannot help more without a clear error message (e.g. from the log). However, the new object classifier is not really intended to scale to 200,000 objects for interactive training... or, at least, doing so is likely to require more memory. Therefore this sounds like it may be a limitation rather than a bug. This may change in the future; in particular, a future release may document how to train a classifier via scripting in a way that requires less memory. The legacy classifier might cope with larger training sets but at a cost of being much more restricted in how it works, and having other issues (e.g. needing to be retrained when reloaded https://github.com/qupath/qupath/issues/343). It is deprecated, but not yet removed in case anyone still needs to use it: https://qupath.readthedocs.io/en/latest/docs/reference/faqs.html#why-are-some-commands-marked-as-deprecated. For now I'd recommend trying to be more selective for training examples when using the new classifier, or else resort to the legacy classifier if you prefer.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-631451060:119,error,error,119,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-631451060,1,['error'],['error']
Availability,"I keep getting the following error while installing QuPath on MacOS Big Sur v 11.6.; Nothing shows up in the security settings, so it's not the normal case of being blocked and needing to approve installation in settings.; What can be done?. Thanks; <img width=""438"" alt=""Screen Shot 2021-10-21 at 9 36 33 AM"" src=""https://user-images.githubusercontent.com/11299568/138761171-413c2c15-f636-49cf-9f2a-ca22deca134c.png"">",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/832:29,error,error,29,https://qupath.github.io,https://github.com/qupath/qupath/issues/832,1,['error'],['error']
Availability,"I know there are some updates to how OpenCV operates with the newest version of QuPath. Are you running that one or the older 1.2? (I don't know that it is entirely official yet, but you can find it here https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html). I don't have anything immediately useful, just wanting to check which version the error is happening in!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/160#issuecomment-375334835:357,error,error,357,https://qupath.github.io,https://github.com/qupath/qupath/issues/160#issuecomment-375334835,1,['error'],['error']
Availability,"I mean polygons that might have multiple separate regions and yet are still treated as the same shape, or contain holes inside them - and so can't be represented simply by a list of vertices. You can create such shapes using the brush or wand tool - hold down 'Alt' to turn on 'subtract mode', and this lets you remove areas from inside an existing shape. You can also hold down shift when using the brush to create multiple polygons but which are treated as the same object (which you can see by the fact they are all selected together... using the default colors this means all shown as yellow). Given that your plan is to create a binary mask, definitely check out the blog. It should be much easier to do this directly from within QuPath and not need to handle another way to handle the shapes. From memory, there are a few posts where I described this kind of thing.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/95#issuecomment-388286086:255,down,down,255,https://qupath.github.io,https://github.com/qupath/qupath/issues/95#issuecomment-388286086,3,"['down', 'mask']","['down', 'mask']"
Availability,"I mean the memory limit - does it show an error, or just ignore your request? How are you setting the request for increased memory?; Is 64 GB the total amount for the system, or the total amount you want QuPath to use?; Is the behavior any different in v0.2.0-m11?. I do not recall any intentional change that would make this any different from m11, but I don't have so much RAM myself...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630761406:42,error,error,42,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630761406,1,['error'],['error']
Availability,I noticed when running object / pixel classifiers in batches that QuPath would not always clear up the tile cache properly (or that's at least what I thought?) and would occasionally end up running out of memory / being sluggish due to limited available memory. . I added something similar to the snippet below to my scripts and it partially resolved my problems if I recall correctly -- probably worth investigating if nothing else comes up (although my issues were possibly different than the issues brought on image.sc). ```java; Thread.sleep(100). javafx.application.Platform.runLater {; getCurrentViewer().getImageRegionStore().cache.clear(); System.gc(); }. Thread.sleep(100); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1322#issuecomment-1715891250:244,avail,available,244,https://qupath.github.io,https://github.com/qupath/qupath/issues/1322#issuecomment-1715891250,1,['avail'],['available']
Availability,"I only mentioned the Wand tool because, if this works, it means that OpenCV is working. The test errors occur when OpenCV Mats are being created, so it sounds like - in these cases - OpenCV is not being loaded correctly. I do not know why this is happening for you but not for me.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-631584620:97,error,errors,97,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631584620,1,['error'],['errors']
Availability,"I originally saved the classifier in a shared folder on our work network.. my colleague and I both copied and pasted the file from there onto our desktops (to make it faster to locate when loading it through QuPath). I've had no problems with it at all prior to this week! My colleague has now left but I'll ask her to try it from the shared folder tomorrow and see if that fixes the issue. I've just tried loading it from the original folder but having the same issue fixable by closing and reopening. . The error message that pops up says: 'QuPath has encountered a problem, sorry. If you can replicate it, please notify a developer. java.security.PrivelegedActionException: java.lang.Exception: std::exception: bad allocation'. Thanks both for your help! Pete I will email you the qpclassifier file now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/160#issuecomment-375345642:509,error,error,509,https://qupath.github.io,https://github.com/qupath/qupath/issues/160#issuecomment-375345642,1,['error'],['error']
Availability,"I ramp the ""backgroundRadiusMicrons"" up to 50; this is much higher than the preset so I will play with this a bit more. . The error seems to only affect tiles that are along the periphery (i.e., tiles that are only partially complete).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/80#issuecomment-305266246:126,error,error,126,https://qupath.github.io,https://github.com/qupath/qupath/issues/80#issuecomment-305266246,1,['error'],['error']
Availability,"I ran [this script](https://gist.github.com/petebankhead/40520366791ef8fe0ab0ca3403812d8d) to print more memory info from Java and JavaCPP. ### MacBook Pro M1; After the errors above:; ```; Runtime:; maxMemory() 	4096 MB; totalMemory() 	4082 MB; freeMemory() 	2657.05673980712890625 MB; Memory used 	1424.94326019287109375 MB. Pointer:; maxBytes() 	4096 MB; maxPhysicalBytes() 	16384 MB; totalBytes() 	0.0015869140625 MB; physicalBytes() 	19015.328125 MB. Total count: 	32. Operating system:; Total: 	16384 MB; Available: 	14.92578125 MB; ```. ### 2013 iMac Intel; After the same processing steps, running without problems:; ```; Runtime:; maxMemory() 	4096 MB; totalMemory() 	4096 MB; freeMemory() 	2742.839874267578125 MB; Memory used 	1353.160125732421875 MB. Pointer:; maxBytes() 	4096 MB; maxPhysicalBytes() 	16384 MB; totalBytes() 	0.00140380859375 MB; physicalBytes() 	5464.46875 MB. Total count: 	30. Operating system:; Total: 	32768 MB; Available: 	194.671875 MB; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1018219477:170,error,errors,170,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018219477,3,"['Avail', 'error']","['Available', 'errors']"
Availability,"I really like your draft. It seems the most beautiful, design-wise. The `ImageServerStub` solution in the end may just work as a helper for writing ""good"" fast scripts, exposing exactly where the image files are absolutely needed. I made a small comment on your draft PR about the metadata, as i feel that is an important info to access *offline*. But in the end, if that was sorted out, that solution would be a drop-in replacement to mine. As you said, at last it will come down to which one is the most maintainable. I see pros and cons in both: `ImageServerStub` offers a solution that is segregated in one file, but then requires to punch multiple small holes in QP interface in order to use it; `lazy-server` distributes the code responsibility to multiple classes and requires to be careful in future development of QuPath so that it does not end up requesting for the server when it is not really useful. In the latter case it is due to the solution having a silent behaviour. However, since everything is managed internally in the lazy approach, in the future it may create less problems surging from punching holes in QuPath's interface. Ultimately, I think your solution is better maintainable-wise, granted that a few things are managed:; * have the retrieval of the image server be loud in logs. Perhaps even with some traceback to what portion of code triggered it?; * expose a `getCurrentMetadata()` function to avoid having to do `getServer().getMetadata()`; * check qupath code that requested for the server but may not need it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1488#issuecomment-2032062846:476,down,down,476,https://qupath.github.io,https://github.com/qupath/qupath/pull/1488#issuecomment-2032062846,1,['down'],['down']
Availability,I recently found resources like this:. Release hash:; https://github.com/MCJack123/ghaction-Generate-Release-Hashes. Release signing:; https://wiki.debian.org/Creating%20signed%20GitHub%20releases (which equally allows one to verify a given download),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1027#issuecomment-1200433309:241,down,download,241,https://qupath.github.io,https://github.com/qupath/qupath/issues/1027#issuecomment-1200433309,1,['down'],['download']
Availability,"I recently updated to MacOS 13.5 (Ventura), on my desktop mini (M1 processor). ; Now my QuPath program doesn't work at all. ; I get a message saying ""This file is corrupted and should be moved to the trash""; I've tried re-downloading QuPath, as well as re-downloading the OS, to no avail. ; Any advice?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1280#issuecomment-1642372686:222,down,downloading,222,https://qupath.github.io,https://github.com/qupath/qupath/issues/1280#issuecomment-1642372686,3,"['avail', 'down']","['avail', 'downloading']"
Availability,"I recently updated to MacOS 13.5 (Ventura), on my desktop mini (M1 processor).; Now my QuPath program doesn't work at all.; I get a message saying ""This file is corrupted and should be moved to the trash""; I've tried re-downloading QuPath, as well as re-downloading the OS to no avail.; Any advice?",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1281:220,down,downloading,220,https://qupath.github.io,https://github.com/qupath/qupath/issues/1281,3,"['avail', 'down']","['avail', 'downloading']"
Availability,"I saw some z-stacks in the images that you linked, and it's possible to switch between slices with the slider at the top left. The auto contrast settings are a bit more sensible at if you can build the beta version [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html), and this will also then save the contrast settings within the `.qpdata` file. The viewer should be quite a bit more responsive as well, if you have more channels. So it's definitely worth checking out if you're working with fluorescence. If you add the image to a QuPath project, all the potentially-interesting images _should_ become available in the project, and you can optionally delete some afterwards.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409247462:628,avail,available,628,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409247462,1,['avail'],['available']
Availability,"I see your point and agree - maybe you can add a warning in case a user chooses to save a project in a folder with a special character in its path?; Same goes for the error message when trying to open from a ""dangerous"" path.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/320#issuecomment-496139825:167,error,error,167,https://qupath.github.io,https://github.com/qupath/qupath/issues/320#issuecomment-496139825,1,['error'],['error']
Availability,"I should probably admit that I didn't know anything about shapefiles - I'll look out for them from now on! If you happen to know of other pathology software that can export/import them (can Definiens do both?) that would be very good to know. I actually made a half-hearted attempt to incorporate Jython support in the early days, before I went all-in for Groovy because trying to be multilingual took extra effort that (at the time) didn't seem worth it. _However_, this means that if you download the Jython standalone jar and drag it onto QuPath then a new 'Jython' option will appear as an available scripting language. Now the half-hearted bit: there's a tiny error in the default import statement for Jython in v0.1.2 - so until that's fixed you'll need to *uncheck* the option *Run &rarr; Include default bindings*. This means that the normal [`QPEx` things](https://github.com/qupath/qupath/wiki/Writing-custom-scripts#default-methods--imports) will not be available in the script, and you'll need to import these separately... and possibly remember to turn the default imports back on if your Groovy scripts require them. The following works for me, after installing the jar and setting the script language to `Jython`:; ```python; from qupath.lib.scripting.QPEx import *; annotations = getAnnotationObjects(); print annotations; ```. The fix to address this in the code appears trivial (switching `+` to `,` in the code), so potentially this won't be necessary in later versions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/95#issuecomment-395945546:490,down,download,490,https://qupath.github.io,https://github.com/qupath/qupath/issues/95#issuecomment-395945546,4,"['avail', 'down', 'error']","['available', 'download', 'error']"
Availability,"I should say that I also did try setting the CLASSPATH to include the jep-3.6.1.jar and also the LD_LIBRARY_PATH to include the two .so library files. But so far, still stuck at the java.lang.UnsatisfiedLinkError. Actually, when I run it again, the error changes to:. INFO: java.lang.NoClassDefFoundError: Could not initialize class jep.Jep",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262791032:249,error,error,249,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262791032,1,['error'],['error']
Availability,"I solve the import error by this way:; ```; def IJTools,ImagePlusServer,ImagePlusServerBuilder; try {; //import qupath.imagej.helpers.IJTools; IJTools = ""qupath.imagej.helpers.IJTools"" as Class; } catch(Exception ex) {; //import qupath.imagej.images.servers.ImagePlusServer; //import qupath.imagej.images.servers.ImagePlusServerBuilder; ImagePlusServer = ""qupath.imagej.images.servers.ImagePlusServer"" as Class; ImagePlusServerBuilder = ""qupath.imagej.images.servers.ImagePlusServerBuilder"" as Class; }. ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/282#issuecomment-473505073:19,error,error,19,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473505073,1,['error'],['error']
Availability,"I suspect it is running into a similar error as https://github.com/qupath/qupath/issues/67; Try setting your hematoxylin threshold lower, or adjusting your color vector.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/111#issuecomment-342659964:39,error,error,39,https://qupath.github.io,https://github.com/qupath/qupath/issues/111#issuecomment-342659964,1,['error'],['error']
Availability,"I tested performance using CMU-1.svs.; I used a very basic thresholder and simple classifier trained for 3 classes, saved for both classification and probability output - then ran the script at the bottom. Using a Mac Studio (2022) with M1 Max and 32 GB RAM the processing time was:. | v0.3.0 | v0.4.0-SNAPSHOT |; | ------------- | ------------- |; | 593.9 s | 60.1 s |. Results identical as far as I can tell. So... quite a substantial difference :). Cell detection took close to 30s, with 326 498 cells detected,. ```groovy; def checkpoints = [:]. setImageType('BRIGHTFIELD_H_E'); setColorDeconvolutionStains('{""Name"" : ""H&E default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049"", ""Stain 2"" : ""Eosin"", ""Values 2"" : ""0.2159 0.8012 0.5581"", ""Background"" : "" 255 255 255""}'). clearAllObjects(). checkpoints << ['Tissue detection': System.currentTimeMillis()]. createAnnotationsFromPixelClassifier(""Tissue detection"", 10000.0, 0.0, ""INCLUDE_IGNORED""). checkpoints << ['Cell detection': System.currentTimeMillis()]. selectAnnotations(); runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 1.0, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}'). for (classifier in ['Some probability', 'Some classification']) {. // Create annotation measurements; checkpoints << [""Annotation measurements for $classifier"": System.currentTimeMillis()]; selectAnnotations(); addPixelClassifierMeasurements(classifier, classifier); ; // Create cell measurements; checkpoints << [""Cell measurements for $classifier"": System.currentTimeMillis()]; selectCells(); addPixelClassifierMeasurements(classifier, classifier); }; checkpoints << [""Done"": System.currentT",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1076#issuecomment-1279692584:531,checkpoint,checkpoints,531,https://qupath.github.io,https://github.com/qupath/qupath/pull/1076#issuecomment-1279692584,3,['checkpoint'],['checkpoints']
Availability,"I think I do get the point, but want to ensure it's clear what exactly should be solved here, as I suspect there are alternative approached to consider. For example, I quickly drafted a rough alternative at https://github.com/qupath/qupath/pull/1489. This simply delays loading images until the `ImageServer` is requested. It has the advantages of being simpler (no need for different 'Run' actions), doesn't introduce any new `ImageServerStub` class, and avoids failure if pixels are requested. It probably has disadvantages too, as calling code needs to be more careful not to request the server at all (even for metadata), to avoid triggering the image to be loaded. I'm not sure which is best, but we should go with the most maintainable solution that solves the main problem.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1488#issuecomment-2025049875:463,failure,failure,463,https://qupath.github.io,https://github.com/qupath/qupath/pull/1488#issuecomment-2025049875,1,['failure'],['failure']
Availability,"I think I found a tiny little bug in the GUI for the pixel classifier in m9:. Under Train Pixel Classifier > Edit Features, there is a box where you input the Local Normalization Scale. It feels like you should be able to type in a number, but it does not accept input from the keyboard. You have to click the up and down arrows, which gets annoying if you are trying to change the value much. Could you either enable typing, or this was intentional, change the box type so that it doesn't look like a user can type?. ![image](https://user-images.githubusercontent.com/29264310/78305960-14077a80-74f7-11ea-9f96-05caf9f6fabd.png)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/432:317,down,down,317,https://qupath.github.io,https://github.com/qupath/qupath/issues/432,1,['down'],['down']
Availability,"I think I got it. The point was to give each Polygon an individual name so that each Polygon can be saved as individual image file. This works for me:. ```; import javax.imageio.ImageIO; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(""XXX/""); mkdirs(dirOutput). // Write the nuclei; def server = getCurrentImageData().getServer(); def path = server.getPath(); for (Polygon in getDetectionObjects()){; roi = Polygon.getROI(); print(roi); area = roi.getArea(); print(area); name = (""Polygon_"" + area); print(name); // Stop if Run -> Kill running script is pressed ; if (Thread.currentThread().isInterrupted()); break; // Write the image; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, Polygon.getROI())); ImageIO.write(img, 'PNG', new File(dirOutput, name + '.png')); }; print('Done!'). ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/118#issuecomment-346830301:279,down,downsample,279,https://qupath.github.io,https://github.com/qupath/qupath/issues/118#issuecomment-346830301,2,['down'],['downsample']
Availability,"I think I ran into the same issue, but somehow couldn't narrow down the steps to reproduce it (so didn't open an issue). I think I set the maximum memory to `-1` (default), restarted QuPath, then tried again and it ""fixed"" it?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/582#issuecomment-668847956:63,down,down,63,https://qupath.github.io,https://github.com/qupath/qupath/issues/582#issuecomment-668847956,1,['down'],['down']
Availability,"I think that since this is not an issue/bug/error, it should be posted on the forum, as indicated during the process of creating the issue :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/409#issuecomment-595586902:44,error,error,44,https://qupath.github.io,https://github.com/qupath/qupath/issues/409#issuecomment-595586902,1,['error'],['error']
Availability,I think the 'points' it is referring to is completely separate from the points (vertices) that make up the shape - because the error seems to occur _before_ the input reaches QuPath. Although in saying that I'm not entirely sure what it _is_ referring to.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/372#issuecomment-549576562:127,error,error,127,https://qupath.github.io,https://github.com/qupath/qupath/issues/372#issuecomment-549576562,1,['error'],['error']
Availability,"I think the saving/reloading errors are completely different from the complete crashes. I'm a bit lost regarding which occurs with which classifiers and when, and I can't replicate most of what you report (except for the logistic regression thing). I also notice that you're running your classifiers at a very high resolution, and also with the parameters you're using the model could become rather complex. I haven't really had a chance to explore the limits of the pixel classifier, but it may well be that it really requires simpler models in its current form (the really complex stuff will likely need deep learning... and therefore quite a different approach). With that in mind. * Do you experience the same errors when using the default parameters?; * Do you experience the same errors when using simpler models (e.g. less training data, applied at a lower resolution)?; * If you try things on another computer, do you see exactly the same behavior?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/394#issuecomment-581003877:29,error,errors,29,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-581003877,3,['error'],['errors']
Availability,"I think the video is showing exactly this issue: https://github.com/qupath/qupath/issues/894; It relates to opening a subset of images *outside of a project* using Bio-Formats in v0.3.1 and v0.3.2, when QuPath hangs. Not all svs files are affected, it depends upon how labels/macro images are stored inside. Some other formats (e.g. .vsi, .lif) suffer the issue too. I've already fixed that and the fix will be in the next release. Because that particular bug is related to the UI, I don't think it should have any impact when called from the command line - so I think it's different from the original tiling issue here. I'm really interested to find out of the tiling issue is avoided when using QuPath v0.3.0. There was a change in how tiles are requested in parallel in QuPath v0.3.1 and v0.3.2. This didn't directly *cause* the UI problem, but it revealed its existence (because the UI code was requesting tiles from an image after it was closed, and that caused the hang). Intermittent issues like the tiling one here do sound like parallelisation is somehow involved, but the initial error on this thread is strange.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/932#issuecomment-1057173906:1090,error,error,1090,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057173906,1,['error'],['error']
Availability,"I think this is a different issue; somehow the magnification needs to be written to the OME-TIFF. Unfortunately I don't know enough about OME-TIFF to do that... I don't have another QuPath-based workaround myself. There isn't a way to override what the image-reader gets from the image yet. The problem exists because _Add Local Binary Pattern features_ and _Add Coherence texture feature_ come from a time when I was using magnification instead of 'Requested/Preferred pixel size' (as is now the case for _Add intensity features_); the pixel size is a better and more robust approach to define an appropriate resolution, but it seems I didn't update the other two commands to adopt it... not least because I didn't find a use for them myself. I'm curious: do you find them to be particularly valuable, or are you just exploring if they are useful? Lest the software become too bloated by options and confusing, I would be tempted to remove them rather than update them... but if they are very useful then I should probably resist.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424744221:569,robust,robust,569,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424744221,1,['robust'],['robust']
Availability,"I think this is a good & elegant way to fix the problem. I haven't merged it yet as I'm trying to think if it could have any other implications that mean we should target v0.6.0 rather than v0.5.1. Were you able to reproduce the original error? I've tried creating some training images with empty regions, but haven't managed to cause the problem yet.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1465#issuecomment-1971249723:238,error,error,238,https://qupath.github.io,https://github.com/qupath/qupath/pull/1465#issuecomment-1971249723,1,['error'],['error']
Availability,"I think this is pretty much it. ; https://groups.google.com/forum/#!searchin/qupath-users/touch%7Csort:date/qupath-users/IZSVOOgWZ9E/Hd3QWlQXBAAJ; I am not sure if the changes are in version 1.3 yet, but you could try downloading that.; https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-407441080:218,down,downloading,218,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-407441080,1,['down'],['downloading']
Availability,"I think this looks good and could be merged any time. I have a few wishlist requests, which would be added here or in a later PR:; * The popover doesn't match the css, which looks especially strange in dark mode.; * Using [`WebViews`](https://github.com/qupath/qupath/blob/f12b38a32906e0257a34ea380e9a66d67e58ae75/qupath-gui-fx/src/main/java/qupath/lib/gui/tools/WebViews.java#L38) to create the `WebView` and bind the stylesheet may help, (although I think `PopOver` is generally hard to style in a well-behaved way); * ~~The `i` info button has different styling when highlighted in the sub-popup window (it basically just ignores whether the row is selected - whichever logic is in the main table might be useful here too)~~ *(edit: I was wrong)*; * The `Owner` and `Repository` fields shouldn't be automatically reset whenever a download is requested or fails with an error; * I don't think `Download extension from GitHub` should be collapsible (it doesn't take up much space); * It feels convoluted to me that the user *must* fill in two fields, whenever they might just want to copy and paste one GitHub url. Could/should the `Owner` and `Repository` be able to identify when a full URL has been pasted, and then automatically split it?; * e.g. Pasting `https://github.com/qupath/qupath-extension-py4j` would result in `Owner=qupath` and `Repository=qupath-extension-py4j`. Pinging @Rylern and @finglis for their opinions as well, and include a screenshot to illustrate some of what I'm referring to. <img width=""879"" alt=""extension-manager"" src=""https://github.com/user-attachments/assets/f0fc272d-3b1c-4a09-9f6e-6cecf6e1d5b7"">",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1486#issuecomment-2256038253:833,down,download,833,https://qupath.github.io,https://github.com/qupath/qupath/pull/1486#issuecomment-2256038253,4,"['Down', 'Ping', 'down', 'error']","['Download', 'Pinging', 'download', 'error']"
Availability,"I think you also need to consume the event, to ensure it doesn't filter down somewhere else.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/472#issuecomment-625399963:72,down,down,72,https://qupath.github.io,https://github.com/qupath/qupath/pull/472#issuecomment-625399963,1,['down'],['down']
Availability,"I think you have a couple of options depending on how easy it is to determine stroma vs tumor in your samples, and positive vs negative. If the differentiation is clear, and easy for the classifier to make, I would start with using one of the built in classifiers to sort all of the cells in the TMA into Stroma and Tumor classes. ; Then, by right clicking on the right hand side of the annotation tab, I would ""Add Class"" and make ""Tumor CD3 Positive"" and ""Stroma CD3 Positive"" classes. After you have those made, use the Classify->Classify By Specific Feature. This will take two steps, but it will let you select first ""Stroma"" class cells as the input and ""Stroma CD3 Positive""/""Stroma"" classes as the outputs. A second pass lets you do the same for the ""Tumor"" cells.; The downside to this is the Classify by specific feature command does not show up in the workflow and can be annoying to use on multiple images since you have to type it out each time. There is also a script that I can hunt down, if you want, that lets you automate the process, I forget if Peter posted it somewhere on the Wiki. You do need to rewrite the script somewhat for what you specifically want, however. ; The other option , if you cannot use the classifier to determine Stroma vs Tumor, and want to draw annotations in each core by hand, you can use a simple script that is currently the most recently discussed topic on the Gitter page, seen here [https://gitter.im/qupath-users/Lobby?utm_source=share-link&utm_medium=link&utm_campaign=share-link](url); After you use the annotations to assign the initial classes, proceed the same way. Of course, I am sure there are other ways to do it as well, this is quite versatile software!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/52#issuecomment-281009359:778,down,downside,778,https://qupath.github.io,https://github.com/qupath/qupath/issues/52#issuecomment-281009359,2,['down'],"['down', 'downside']"
Availability,"I tried `defaults` first, but quickly ran into the permissions problem - so switched to `PlistBuddy` as suggested at https://github.com/qupath/qupath/issues/1250. That *seemed* to work, but it turned out to still fail in confusing and subtle ways after downloading & installing. After very many hours spent trying to sort it out, I had to admit defeat because it was blocking the release - details are at https://github.com/qupath/qupath/pull/1379",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1750386372:253,down,downloading,253,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1750386372,1,['down'],['downloading']
Availability,"I tried reproducing the error a few times with that classifier with 4 GB of RAM and I wasn't able to reproduce it. I bumped up the resolution to `1,01 µm/px` and two `OutOfMemoryError` came up with only one stacktrace (this happened without any GC or cache clearing; didn't try with it enabled either). **This was running on 0.3.2**, I can give it a try on newer versions if any relevant parts have changed in the code. I've attached the whole classifier below (it's just a simple thersholder to filter out the background). I think the original analysis was done with 6 GB or 8 GB of RAM but I also had other scripts with `qupath.imagej.detect.cells.WatershedCellDetection` running and I can't say for 100% certainty whether it was the Pixel Classifier, Cell Counting or both which caused OutOfMemoryErrors. ```; ERROR: OutOfMemoryError: Java heap space. ERROR: qupath.opencv.tools.OpenCVTools.matToBufferedImage(OpenCVTools.java:765); qupath.opencv.ml.pixel.OpenCVPixelClassifier.applyClassification(OpenCVPixelClassifier.java:115); qupath.lib.classifiers.pixel.PixelClassificationImageServer.readTile(PixelClassificationImageServer.java:299); qupath.lib.images.servers.AbstractTileableImageServer.lambda$getTile$0(AbstractTileableImageServer.java:213); qupath.lib.images.servers.AbstractTileableImageServer$$Lambda$1691/0x0000000800796740.call(Unknown Source); java.base/java.util.concurrent.FutureTask.run(Unknown Source); qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:217); qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:287); qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:60); qupath.lib.analysis.images.ContourTracing.traceGeometriesImpl(ContourTracing.java:1157); qupath.lib.analysis.images.ContourTracing.traceGeometries(ContourTracing.java:1143); qupath.lib.analysis.images.ContourTracing.lambda$traceGeometriesImpl$9(ContourT",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1322#issuecomment-1719699500:24,error,error,24,https://qupath.github.io,https://github.com/qupath/qupath/issues/1322#issuecomment-1719699500,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"I tried to delete extensions, but the error remains.; It does not matter, the program works and seems to suit the user.; Thank you.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/150#issuecomment-370794394:38,error,error,38,https://qupath.github.io,https://github.com/qupath/qupath/issues/150#issuecomment-370794394,1,['error'],['error']
Availability,"I tried to install Segoe UI Bold from an online vendor but doing so simply reverted all the text to the garbled version. Looks like you can't re-download the original TrueType font files directly from Microsoft (see https://docs.microsoft.com/en-us/typography/font-list/segoe-ui), so not sure where to obtain the correct `.ttf` files from.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/866#issuecomment-996246433:145,down,download,145,https://qupath.github.io,https://github.com/qupath/qupath/issues/866#issuecomment-996246433,1,['down'],['download']
Availability,"I tried to modify the script proposed in #97 for the case demonstrated in the following figure:. ![02](https://user-images.githubusercontent.com/20478730/33174622-18c2a36e-d059-11e7-9972-ee1a58d4fe01.PNG). Script:; ```; import javax.imageio.ImageIO; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(""XXX/TESTFOLDER""); mkdirs(dirOutput). // Write the nuclei; def server = getCurrentImageData().getServer(); def path = server.getPath(); for (Polygon in selectDetections()){; // Stop if Run -> Kill running script is pressed ; if (Thread.currentThread().isInterrupted()); break; // Write the image; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, Polygon.getROI())); ImageIO.write(img, 'PNG', new File(dirOutput, Polygon.getName() + '.png')); }; print('Done!'); ```; I substituted _core_ from the original script with _Polygon_ and `getTMACoreList()` with `selectDetections()` to make it working for detections. . There is no error message in the script but it doesn´t work. Does anyone have an advice? Thank you!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/118#issuecomment-346617281:342,down,downsample,342,https://qupath.github.io,https://github.com/qupath/qupath/issues/118#issuecomment-346617281,3,"['down', 'error']","['downsample', 'error']"
Availability,I untarred the file and tried to start the program but got a dependency error on Linux. ./QuPath: /usr/lib/x86_64-linux-gnu/libstdc++.so.6: version `GLIBCXX_3.4.21' not found (required by ./QuPath). I ran sudo apt-get install libstdc++6. libstdc++6 is already the newest version. Any idea what may be causing the issue?. Appreciated.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/51:72,error,error,72,https://qupath.github.io,https://github.com/qupath/qupath/issues/51,1,['error'],['error']
Availability,"I use the software for high quality publication images. However, very often the scans are upside down and a 90 degree rotation is not enough to turn it correctly. It would be so helpful if this issue could be fixed.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/293:97,down,down,97,https://qupath.github.io,https://github.com/qupath/qupath/issues/293,1,['down'],['down']
Availability,"I used the jars from your links (in case I was getting old SNAPSHOTs), deleted the JavaCPP cache and I'm afraid that I'm still getting the same errors.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1024110668:144,error,errors,144,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024110668,1,['error'],['errors']
Availability,"I was able to find your example script located here. https://groups.google.com/forum/#!searchin/qupath-users/macro%7Csort:date/qupath-users/C3GRBF614N8/iewaOLGDAgAJ. ```; import qupath.imagej.plugins.ImageJMacroRunner; import qupath.lib.plugins.parameters.ParameterList. // Create a macro runner so we can check what the parameter list contains; def params = new ImageJMacroRunner(getQuPath()).getParameterList(); print ParameterList.getParameterListJSON(params, ' '). // Change the value of a parameter, using the JSON to identify the key; params.getParameters().get('downsampleFactor').setValue(4.0 as double); print ParameterList.getParameterListJSON(params, ' '). // Get the macro text and other required variables; def macro = 'print(""Overlay size: "" + Overlay.size)'; def imageData = getCurrentImageData(); def annotations = getAnnotationObjects(). // Loop through the annotations and run the macro; for (annotation in annotations) {; ImageJMacroRunner.runMacro(params, imageData, null, annotation, macro); }; print 'Done!'. ```; and replaced the ; `def macro = 'print(""Overlay size: "" + Overlay.size)'` ; with ; `def macro = new File(""myMacroPath/MacroName.ijm"").text`. and it worked!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/176#issuecomment-394919066:569,down,downsampleFactor,569,https://qupath.github.io,https://github.com/qupath/qupath/issues/176#issuecomment-394919066,1,['down'],['downsampleFactor']
Availability,"I was able to run the example with py4j. https://github.com/qupath/qupath/wiki/Working-with-Python. However, I am still not sure how to create useful scripts. ; If I want to create the script below to call from python what modifications are needed?. import qupath.lib.regions.*; import ij.*; import java.awt.Color; import java.awt.image.BufferedImage. // Read RGB image & show in ImageJ (won't work for multichannel!); def server = getCurrentServer(); def roi = getSelectedROI(); double downsample = 4.0; def request = RegionRequest.createInstance(server.getPath(), downsample, roi); def img = server.readBufferedImage(request); new ImagePlus(""Image"", img).show()",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/474:487,down,downsample,487,https://qupath.github.io,https://github.com/qupath/qupath/issues/474,2,['down'],['downsample']
Availability,"I was seeing a bigger difference (`Files.exist(path)` taking about 1/3 the time). Here's my awful test, run through QuPath:. ```groovy; import groovy.transform.CompileStatic; import qupath.lib.common.Timeit. import java.nio.file.Files; import java.nio.file.Path. List<File> files = new File(System.getProperty(""user.home"")).listFiles() as List. for (int i = 0; i < 10; i++); files.add(new File(Math.random() as String)). List<Path> paths = files.collect(f -> f.toPath()) as List. int nIterations = 10000; println(""Same: "" + (countFilesExist(files) == countPathsExist(paths))). println new Timeit(); .checkpointAndRun(""Paths "", () -> countPathsExist(paths, nIterations)); .checkpointAndRun(""Files "", () -> countFilesExist(files, nIterations)); .stop(); .summarizeCheckpoints(). @CompileStatic; int countFilesExist(List<File> files, int iterations=0) {; int count = 0;; for (int i = 0; i < iterations; i++) {; for (def f : files) {; if (f.exists()); count++;; }; }; return count;; }. @CompileStatic; int countPathsExist(List<Path> files, int iterations=0) {; int count = 0;; for (int i = 0; i < iterations; i++) {; for (def f : files) {; if (Files.exists(f)); count++;; }; }; return count;; }. ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1298#issuecomment-1691548799:600,checkpoint,checkpointAndRun,600,https://qupath.github.io,https://github.com/qupath/qupath/pull/1298#issuecomment-1691548799,2,['checkpoint'],['checkpointAndRun']
Availability,"I we can define the start of the line, left and right could be defined from; the perspective of the starting point looking down the line towards the; end. Inner/outer will be confusing as this will change according to where; your object of interest is (unless there is some kind of way to manually; decide inner/outer). The latter approach seems interesting. However, I have problems envisioning; its. Perhaps it has to be tested. I has the potential to create a lot of; annotations fast. Den tir. 16. okt. 2018 kl. 10:38 skrev Pete <notifications@github.com>:. > Thinking about it some more... the polygon/polygon could be expanded, and; > then the *original* polygon/polyline could be subtracted from the result; > (this would require that it has some thickness; perhaps one pixel). This; > would result in multiple annotations being created - at least two (one for; > each side), but possibly more if the shape is self-intersecting. Then it; > becomes a matter of deleting the annotations that you didn't want.; >; > What do you think? Currently it's only an idea, I haven't tried; > implementing it...; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/228#issuecomment-430151424>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/Af9pL9P1XkGW49Da7gop_J0ur51Mvddeks5ulZsGgaJpZM4Xdx7z>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/228#issuecomment-430154093:123,down,down,123,https://qupath.github.io,https://github.com/qupath/qupath/issues/228#issuecomment-430154093,1,['down'],['down']
Availability,"I will close this issue because there isn't anything we can replicate or fix. I see there have been about >4,500 downloads of the macOS version of v0.3 at this point, and since there haven't been other reports I guess it may be a system-specific problem that we can't fix on the QuPath side. Please do add comments if there is further info. Meanwhile, it might be possible to get a version of QuPath that works for you by following the [build from source](https://qupath.readthedocs.io/en/stable/docs/reference/building.html) instructions. This can directly generate an .app rather than a .pkg, so might work around any installer problems.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/832#issuecomment-966046117:113,down,downloads,113,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-966046117,1,['down'],['downloads']
Availability,"I wonder if you can help. I have to apologise but I am not the most computer literate but I have some CZI files from Zen I would like to analyse in QuPath. I have downloaded the bioformats extension and package and attempted to download the visual c++ redistributable but I keep failing at this step. I cannot install this and my only option is to repair, which it attempts and then fails giving me a log code which I can provide if required. I have also tried installing qupath on my mac with the same problems. I have downloaded the bioformats package and extension and still cannot open said files. . Please help.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/135:163,down,downloaded,163,https://qupath.github.io,https://github.com/qupath/qupath/issues/135,4,"['down', 'repair']","['download', 'downloaded', 'repair']"
Availability,"I would definitely recommend doing the export with ImageJ if you can, using the [ImageJ macro runner](https://github.com/qupath/qupath/wiki/Working-with-ImageJ#running-macros) and a very simple ImageJ macro like this one. ```; saveAs(""tif"", ""/Users/peteb/Desktop/export/"" + getTitle()); ```. You'll need to make sure that the export directory exists before running it. Still, if you do it this way then if you open the resulting TIFF within ImageJ you should find that the pixel sizes are preserved - and even the information regarding where in the image the region was taken (look under *Image &rarr; Properties* in ImageJ). This isn't stored if you export in any other format (e.g. PNG, JPEG). Even if you don't need it currently, this at least gives the possibility that you could relate any detected regions etc. that come from processing the TIFF back to where they came from in the original, whole slide image. You can also modify the export resolution by changing the 'Downsample factor' in the macro runner.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/85#issuecomment-317354440:976,Down,Downsample,976,https://qupath.github.io,https://github.com/qupath/qupath/issues/85#issuecomment-317354440,1,['Down'],['Downsample']
Availability,"I would try using SLICs rather than tiles, but either way, it looks like you have the classification down. If you want a picture, do you mean something like the File->Export->Export Viewer Snapshot (but scripted)? Just trying to verify because there are a lot of image export options, though none of them will create a whole slide image. This issue has a bunch of links to various options: https://github.com/qupath/qupath/issues/216",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/251#issuecomment-449676448:101,down,down,101,https://qupath.github.io,https://github.com/qupath/qupath/issues/251#issuecomment-449676448,1,['down'],['down']
Availability,"I'd like some help to modify the code from my previous question(https://github.com/qupath/qupath/issues/97) so that I can save each core as a multi-channel TIFF (ideal, or otherwise a tiff/png of each individual channel separately). I've tried this: and it's just not saving the files. ```. import javax.imageio.ImageIO; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); //outdir=""C:/Users/VS120/Desktop/Qupath_Sample_images/"". // Create output directory inside the project; //def dirOutput = buildFilePath(outdir, 'cores/'). mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed ; if (Thread.currentThread().isInterrupted()); break; // Write the image; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, core.getROI())); print(img);; ; ImageIO.write(img, 'TIFF', new File(dirOutput, core.getName() + '.tiff'));; print('Done!'); ; }. ```",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/202:413,down,downsample,413,https://qupath.github.io,https://github.com/qupath/qupath/issues/202,2,['down'],['downsample']
Availability,"I'd need more information from you to be able to answer that... what exactly are the steps that you have applied, what features calculated, how many objects per image etc. Note also that the memory reported in Windows might not be the best guide. Use *View &rarr; Show memory monitor* within QuPath instead, and press *Reclaim memory* to find out what is *really* needed. And you can also clear the tile cache/reset undo/redo to really squeeze it down to the essentials of what QuPath currently needs at that moment. VisualVM is the technical way to find out what *exactly* is being loaded: https://visualvm.github.io",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-635240041:447,down,down,447,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-635240041,1,['down'],['down']
Availability,"I'd say 3.3 GB is a perfectly respectable amount of RAM for QuPath (I assume your computer has 8 GB or 12 GB...?). Personally, I have never had a powerful enough computer to be able to give anywhere close to 64 GB when either developing or using QuPath... and I don't think I ever needed 16 GB either. Maybe my needs have been modest than @Svidro's but I think that it's not typical to need such huge amounts of memory for most people :). However, I note that you are using a CZI image. There are still some lingering issues around QuPath's ability to handle CZI images; depending on the type of image (e.g. TMA/non-TMA, stitched...), I've heard that sometimes it works very well and sometimes there are problems. It's on my to-do list to investigate why this happens... currently it is a little mysterious for me, and it's not clear if it's something I can resolve within QuPath or which requires more outside help. Anyway, I don't know if that is the source of your memory woes, but it could be. Out of curiosity,; * is your image brightfield or fluorescence? (the error suggests brightfield); * is it a 2D whole slide scan, or an image from a microscope?; * is it a TMA image, large tissue section, or something else?; * does QuPath operate reasonably smoothly, or horribly slowly before the crash? If you need a comparison, there are some [links on the wiki](https://github.com/qupath/qupath/wiki/Counting-cells) to test data that you might use for comparison.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343309138:1067,error,error,1067,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343309138,1,['error'],['error']
Availability,I'll close this as the proposed fix is available in v0.2.0-m10 - please reopen if the problem persists.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/403#issuecomment-618000560:39,avail,available,39,https://qupath.github.io,https://github.com/qupath/qupath/issues/403#issuecomment-618000560,1,['avail'],['available']
Availability,I'll close this because https://github.com/qupath/qupath/pull/951 should now display a sensible error notification when attempting to use more features than OpenCV can merge.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1098276166:96,error,error,96,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1098276166,1,['error'],['error']
Availability,"I'll close this issue as part of my Saturday repo-cleaning, since support for overlays in SVG exports has now been merged and will be available in the next release (v0.5.0).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1272#issuecomment-1732340239:134,avail,available,134,https://qupath.github.io,https://github.com/qupath/qupath/issues/1272#issuecomment-1732340239,1,['avail'],['available']
Availability,I'll close this issue because v0.2.0-m9 is now available - please reopen if you find it doesn't solve the problem.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/396#issuecomment-586470278:47,avail,available,47,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-586470278,1,['avail'],['available']
Availability,"I'll close this issue because, as far as I can tell, it has already been fixed in v0.3.0-rc1 and in the main branch. I see the error; ```; IllegalArgumentException at line 17: Downsample must be > 0, but this one is 0.0; ```; if I run the following script; ```groovy; import qupath.lib.images.servers.LabeledImageServer. def imageData = getCurrentImageData(). // Define output path (relative to project); def name = GeneralTools.getNameWithoutExtension(imageData.getServer().getMetadata().getName()); def pathOutput = buildFilePath(PROJECT_BASE_DIR, 'export', name); mkdirs(pathOutput). // Define output resolution; double requestedPixelSize = 0. // Convert to downsample; double downsample = requestedPixelSize / imageData.getServer().getPixelCalibration().getAveragedPixelSize(). // Create an ImageServer where the pixels are derived from annotations; def labelServer = new LabeledImageServer.Builder(imageData); .backgroundLabel(0, ColorTools.WHITE) // Specify background label (usually 0 or 255); .downsample(downsample) // Choose server resolution; this should match the resolution at which tiles are exported; .addLabel('Tumor', 1) // Choose output labels (the order matters!); .addLabel('Stroma', 2); .addLabel('Other', 3); .lineThickness(2) // Optionally export annotation boundaries with another label; .setBoundaryLabel('Boundary*', 4) // Define annotation boundary label; .multichannelOutput(false) // If true, each label refers to the channel of a multichannel binary image (required for multiclass probability); .build(). // Export each region; int i = 0; for (annotation in getAnnotationObjects()) {; def region = RegionRequest.createInstance(; labelServer.getPath(), downsample, annotation.getROI()); i++; def outputPath = buildFilePath(pathOutput, 'Region ' + i + '.ome.tif'); writeImageRegion(labelServer, region, outputPath); }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/777#issuecomment-878087749:127,error,error,127,https://qupath.github.io,https://github.com/qupath/qupath/issues/777#issuecomment-878087749,7,"['Down', 'down', 'error']","['Downsample', 'downsample', 'error']"
Availability,"I'll close this issue, v0.2.1 should be available next week containing this and some other minor fixes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/518#issuecomment-641435861:40,avail,available,40,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-641435861,2,['avail'],['available']
Availability,"I'll have a look at restoring the link. There's currently a power outage due to grid work (affecting my server phromo.se), expected to have it working again in roughly 2 hours after writing this post. Update: the link is now working again. Although, dunno if this is the best workaround anymore :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/628#issuecomment-1231398434:66,outage,outage,66,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-1231398434,1,['outage'],['outage']
Availability,I'll leave this issue open until either a more informative error is displayed (but that's a little awkward because of where in the code it occurs) and/or the limitation is added to the documentation.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1092149041:59,error,error,59,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092149041,1,['error'],['error']
Availability,"I'm afraid I don't have much experience of handling dependencies on Linux. There is a little more information the binaries were created at https://github.com/qupath/qupath/issues/2. Basically I compiled it on Ubuntu 16.04 and have not tested it on 14.04. The possibilities that I can think of that might help would be:; * Try a newer version of Ubuntu if possible.; * Make sure Java is installed in Ubuntu. I don't think this should be necessary (since it is included in the QuPath download)... but perhaps.; * Try removing any ```.jar``` files connected to OpenSlide / OpenCV / JInput / JPen from within QuPath (the libraries should be mentioned in the ```qupath-***.jar``` file name). Apart from the Java Runtime Environment (JRE) itself, these are the parts that depend on native libraries. QuPath should still work without them, but will miss some features - such as whole slide image handling and classification. If the JRE is not the problem then hopefully this would enable QuPath to start, and you can recover some of the missing functionality by downloading [extensions](https://github.com/qupath/qupath/wiki/Extensions) that don't require native libraries.; * Try compiling QuPath from source from within Eclipse. You may find this easier to set up using Oracle's Java Development Kit than OpenJDK... but both should work.; * Try launching QuPath from the command line, setting the ```java.library.path``` variable and possibly using a different JRE if required... figuring out how to do this could be tricky, although [this](https://github.com/qupath/qupath/issues/27) may help a little bit. I hope something in there might be useful. If you are able to find a solution, it would be great if you could post it here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/51#issuecomment-280861844:482,down,download,482,https://qupath.github.io,https://github.com/qupath/qupath/issues/51#issuecomment-280861844,3,"['down', 'recover']","['download', 'downloading', 'recover']"
Availability,"I'm afraid I don't know of any way to open at 16-bit .mrxs files within QuPath... and I don't know of any current developments that will change that situation. Basically, there are two libraries that can be used to read whole slide images into QuPath: OpenSlide and Bio-Formats. However, OpenSlide only supports a subset of 8-bit RGB .mrxs files (16-bit multichannel would require a very substantial redesign), and is [not officially supported](https://lists.andrew.cmu.edu/pipermail/openslide-users/2012-July/000377.html).; [This blog post](http://blog.openmicroscopy.org/file-formats/community/2016/01/06/format-support/) explains why there is no support for .mrxs files within Bio-Formats. If another library became freely available that could read .mrxs files, then potentially this could be used to add support within QuPath. But I'm not personally aware of any such library, and the blog post above suggests that creation one would be a difficult task. I've tagged this post as 'help wanted', in case anyone sees a possibility to help by creating such a library/integration.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/106#issuecomment-333917237:726,avail,available,726,https://qupath.github.io,https://github.com/qupath/qupath/issues/106#issuecomment-333917237,1,['avail'],['available']
Availability,"I'm afraid `undefined symbol: JLI_InitArgProcessing` looks like some deep error independent of QuPath. I know that jpackage is also a work in progress. I've build QuPath successfully on Windows, Mac & Ubuntu but don't know how well it works anywhere else. The build script does sometimes need to be updated whenever jpackage is updated because the command line arguments it requires change. I'll close this issue as there doesn't seem to be a QuPath problem to solve - hope you find a solution that lets you do what you need to.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-534118216:74,error,error,74,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534118216,1,['error'],['error']
Availability,"I'm afraid it looks like the ```.qpdata``` file is incomplete for some reason, effectively making the data corrupt/unreadable for QuPath. See [this thread](https://groups.google.com/forum/#!topic/qupath-users/sYzchFq-Y60) for some more information - and for some details about ```.backup``` files, which might (possibly) be able to help. This appears to happen very rarely, and I don't know why (since I don't recall the last time it happened to me). Do you happen to remember did anything strange happen / did QuPath crash when saving the data the first time around? Or can you figure out any way to reproduce the problem?. It's particularly hard to debug, since I presume that the problem happens when saving but the error log only shows what happens when trying to reload the data. I haven't found a way to reproduce it myself, so any insights you could have on what could have caused it would be very welcome.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/58#issuecomment-289494801:719,error,error,719,https://qupath.github.io,https://github.com/qupath/qupath/issues/58#issuecomment-289494801,1,['error'],['error']
Availability,"I'm afraid not, since `The crash happened outside the Java Virtual Machine in native code.` it will probably be very hard to debug. The actual problem has happened outside of QuPath, and the best QuPath can do is to try to avoid calling the problematic code. Such errors have been quite common when using OpenCV, and it is a constant battle to eliminate them as far as possible... I will look out for it, but since the TensorFlow code is still at a very early and experimental stage (and not part of the public release) I'm afraid it really isn't something I'm able to support at this stage. If you are able to replicate it with a minimal sequence of steps and/or find any solution, please do let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630152060:264,error,errors,264,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630152060,1,['error'],['errors']
Availability,"I'm afraid that some of the commands flagged 'experimental' are more experimental than others... and that's one that is more experimental than most. It was added as a very simple counting method, but I only used it myself for some TMAs to have a quick comparison of the results against 'full' cell-by-cell analysis. It turns out to have some troubles that need to be fixed, especially when used in other contexts. The problem @Svidro mentions is that it requires at least one 'hematoxylin' pixel to be able to return anything.; Another strange feature is that, if you look at the hierarchy, the 'Positive' region is _inside_ the 'Negative' one.; And a third is that the 'Num pixels' value is a count of the pixels at the downsample level used. This isn't necessarily 'wrong', but it is not ideal because the measurement name doesn't say what downsample was used. It would be preferable to have a value converted to µm. > Some of these problems arose because the command was initially designed to generate 'Any staining' and 'DAB' regions; at that time, it was logical to return nothing if 'Any staining' was 0. It was also logical to put the 'DAB' region inside 'Any staining' in the hierarchy. Unfortunately, these aspects weren't updated when 'Any staining' was switched to become 'Hematoxylin'. Added to all that, the command doesn't handle fluorescence or other stain types. For all these reasons, I expect that this command will be replaced or substantially changed at some point. Therefore, while you could maybe work around the limitations of the positive pixel command, I'd suggest trying to use other commands for now if possible.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/67#issuecomment-297915004:721,down,downsample,721,https://qupath.github.io,https://github.com/qupath/qupath/issues/67#issuecomment-297915004,2,['down'],['downsample']
Availability,"I'm afraid that would be tricky... you'll definitely need access to the raw pixels. To achieve this after detection, it's best _not_ to choose _Smooth boundaries_ in the cell detection parameters, to keep the contours as close as possible to their original shapes... then you could potentially loop through every cell, extract the pixels for the cell, create a binary mask for the nucleus and another for the cell, and work from there. Or alternatively you could write an entirely new cell detection (e.g. with ImageJ or OpenCV). Another option would be to look at exporting the pixels, and the cell ROIs as labelled images (with unique integer labels for each cell). Then you can potentially tackle the task in Python or R. Whichever way you choose it's not entirely straightforward, and calculating the values efficiently for large numbers of cells would be a further challenge. So... it's technically possible, but would require quite a lot of effort.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/236#issuecomment-433483920:368,mask,mask,368,https://qupath.github.io,https://github.com/qupath/qupath/issues/236#issuecomment-433483920,1,['mask'],['mask']
Availability,"I'm afraid that, as an open-source project, we don't have the time or resources to provide code signing certificates at this time. We'd potentially need certificates for all operating systems, and it's not something we can work on right now. We provide full instructions to build QuPath from the source code, so if it helps your IT department could build a version themselves, rather than relying on the downloads here: https://qupath.readthedocs.io/en/stable/docs/reference/building.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1605#issuecomment-2312201023:404,down,downloads,404,https://qupath.github.io,https://github.com/qupath/qupath/issues/1605#issuecomment-2312201023,1,['down'],['downloads']
Availability,"I'm afraid this isn't working for me - the externalized strings seem to be missing. If I enter; ```; qupath/qupath-extension-jpen; ```; and agree to the prompts for a download, I end up with an exception. The important part seems to be:; ```; Caused by: java.util.MissingResourceException: Can't find resource for bundle java.util.PropertyResourceBundle, key ExtensionControlPane.tag; 	at java.base/java.util.ResourceBundle.getObject(ResourceBundle.java:567); 	at java.base/java.util.ResourceBundle.getObject(ResourceBundle.java:561); 	at java.base/java.util.ResourceBundle.getString(ResourceBundle.java:523); ```. I also have the feeling the text field is too small, and it should expand (filling all available space would be ok):. <img width=""1154"" alt=""short"" src=""https://github.com/user-attachments/assets/3ffad225-9867-4f62-91ea-afbd60762928"">. If being really picky, I'd also ask for a tiny bit of horizontal space between the label and text field (possibly 5 or so pixels of padding). Lastly, the tooltip is also misleading - it implies that `qupath-extension-stardist` is a valid repository on its own (although maybe just because I have the old strings).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1486#issuecomment-2258818054:167,down,download,167,https://qupath.github.io,https://github.com/qupath/qupath/pull/1486#issuecomment-2258818054,2,"['avail', 'down']","['available', 'download']"
Availability,"I'm currently working on importing imageScope annotations to Qupath using groovy script. When I was working with Mac OS, the script worked pretty well without any error. However, after changing to Windos. I had a trouble at below part. (Even though I copied 'groovy-xml-2.5.2.jar' into C:\Program Files\QuPath\app\jars). ==================================================================; [ERROR PART]; def text = new File(xml_file).getText(); def list = new XmlSlurper().parseText(text). [ERROR]; ERROR: Script error; at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.unwrap(ScriptBytecodeAdapter.java:53); at org.codehaus.groovy.runtime.callsite.PogoGetPropertySite.getProperty(PogoGetPropertySite.java:52); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callGroovyObjectGetProperty(AbstractCallSite.java:307); at Script4.run(Script4.groovy:33); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: Error: startup failed:; Script5.groovy: 30: unable to resolve class XmlSlurper ; @ line 30, column 12.; def list = new XmlSlurper().parseText(text); ^. 1 error; ======",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/238:163,error,error,163,https://qupath.github.io,https://github.com/qupath/qupath/issues/238,5,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"I'm getting the same two test failures when trying to build on ubuntu 18.04 and java14 installed from adoptopenjdk.net. For master, m11, and m10 too. And the wand tool does fail on the pre-built m11:. ```; ERROR: QuPath exception: OpenCV(4.3.0) /home/travis/build/javacpp-presets/opencv/cppbuild/linux-x86_64/opencv-4.3.0/modules/imgproc/src/drawing.cpp:1866: error: (-215:Assertion failed) radius >= 0 && thickness <= MAX_THICKNESS && 0 <= shift && shift <= XY_SHIFT in function 'circle'. at org.bytedeco.opencv.global.opencv_imgproc.circle(Native Method); at qupath.process.gui.WandToolCV.createShape(WandToolCV.java:423); at qupath.lib.gui.viewer.tools.BrushTool.createNewROI(BrushTool.java:497); at qupath.lib.gui.viewer.tools.AbstractPathROITool.createNewAnnotation(AbstractPathROITool.java:92); at qupath.lib.gui.viewer.tools.BrushTool.mousePressed(BrushTool.java:259); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:419); at qupath.lib.gui.viewer.tools.BrushTool.handle(BrushTool.java:65); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:62); at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-631377861:30,failure,failures,30,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631377861,3,"['ERROR', 'error', 'failure']","['ERROR', 'error', 'failures']"
Availability,I'm learning about Qupath (v0.2.0-m2) and can not open any image (.ZVI or .TFI). The error log is as follows:; ----; INFO: Refreshing extensions in C:\Users\souza\QuPath\extensions; INFO: Added extension: C:\Users\souza\QuPath\extensions\bioformats_package.jar; INFO: Added extension: C:\Users\souza\QuPath\extensions\qupath-bioformats-extension.jar; INFO: Added extension: C:\Users\souza\QuPath\extensions\qupath-extension-bioformats.jar; INFO: Bio-Formats version 6.0.1; INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: QuPath exception; at qupath.lib.images.servers.ImageServerProvider.lambda$buildServer$0(ImageServerProvider.java:147); at java.base/java.util.TimSort.binarySort(TimSort.java:296); at java.base/java.util.TimSort.sort(TimSort.java:221); at java.base/java.util.Arrays.sort(Arrays.java:1515); at java.base/java.util.ArrayList.sort(ArrayList.java:1749); at java.base/java.util.Collections.sort(Collections.java:177); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:146); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2450); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2369); at qupath.lib.gui.commands.OpenCommand.run(OpenCommand.java:51); at qupath.lib.gui.QuPathGUI.lambda$createCommandAction$50(QuPathGUI.java:3412); at org.controlsfx.control.action.Action.handle(Action.java:419); at org.controlsfx.control.action.Action.handle(Action.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.s,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/312:85,error,error,85,https://qupath.github.io,https://github.com/qupath/qupath/issues/312,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"I'm not exactly sure why, but I get a weird character showing in the error message if I run; ```groovy; a = “something”; ```; I see; ```; At least one left quotation mark (“) was found @ line 1 column 5! You can try replacing it with a regular apostrophe ('). ERROR: MultipleCompilationErrorsException at line 1: startup failed:; Script14.groovy: 2: Unexpected input: '“' @ line 2, column 5.; a = “something”; ^. 1 error; ```; (On a Mac, it's shown as a square in the script editor). I'd suggest:; * matching the suggestion to the suggestion to the error, i.e. whether it is a single or double quotation mark; otherwise, correcting `“` to `'` would still likely be an error; * alternatively, give a generic error message `""You can try replacing all instances of fancy quotation marks (‘“’”) with a straight ones (',"")""`; * referring to a 'straight quotation mark' rather than apostrophe (which might be curly); * referring to `At least one invalid quotation mark` rather than `At least one left quotation mark`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/636#issuecomment-724191551:69,error,error,69,https://qupath.github.io,https://github.com/qupath/qupath/pull/636#issuecomment-724191551,6,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"I'm not sure about this. It has been a long time, but I think the reason I excluded sum from non-nucleus measurements is because it is common for people to train classifiers using all features. Because cell expansion is only distance-based, I felt that sum measurements outside the nucleus could be extremely unreliable. Also, the sum depends upon the resolution at which the measurement is calculated; for the default cell detection, this is the detection resolution, but that might not be what the user expects. The need for a nucleus sum, however, seemed sufficiently common that it should be included - and the nucleus ROI is likely to be more reliable, which reduces the problems slightly. I realise it's a judgement call and people may disagree. I'm reluctant to change the built-in cell detection, since the current behavior hasn't changed across releases and any modifications can impact classifiers. I'd rather we focus on moving away to alternative cell detection methods, and decouple measurement from detection to improve flexibility.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1454#issuecomment-1909779883:648,reliab,reliable,648,https://qupath.github.io,https://github.com/qupath/qupath/issues/1454#issuecomment-1909779883,1,['reliab'],['reliable']
Availability,"I'm not sure what you mean by 'portable version', but it should be possible to use QuPath without installation, e.g. from a folder on the desktop. For Windows, you'd need to download the .zip distribution (not the .msi - which is the only one that required installation).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/391#issuecomment-570329327:174,down,download,174,https://qupath.github.io,https://github.com/qupath/qupath/issues/391#issuecomment-570329327,1,['down'],['download']
Availability,"I'm not sure... I'm now trying to run specifically that one test through eclipse, switching between OpenJDK 17 for x86_64 and for aarch64. It is failing reproducibly for me using `x86_64`, and passing with `aarch64`.; I've added a `System.out.println(System.getProperty(""os.arch""));` with failures I see e.g.; ```; NoFileBytes; x86_64; 420986880 436666368; ```; and with successes; ```; NoFileBytes; aarch64; 36864000 40239104; ```. VM args (adjusted so the other tests pass):; ```; -ea -Xmx1G -Dorg.bytedeco.javacpp.maxRetries=3; ```. Meanwhile I have seen more failures with the full `mvn test`, but it remains inconsistent. However, when it does fail it is always on that test.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1024152670:289,failure,failures,289,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024152670,2,['failure'],['failures']
Availability,"I'm quite sure my file has no metadata (might have been given to me from a crop on photoshop). That could explain the error, I'm trying to get metadata info (px to um). I'm using version 0.1.2. I'm actually trying what was suggested here but with no success. Dimensions get updated on FIJI but not on QuPath; https://github.com/qupath/qupath/issues/163",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/328#issuecomment-499254844:118,error,error,118,https://qupath.github.io,https://github.com/qupath/qupath/issues/328#issuecomment-499254844,1,['error'],['error']
Availability,"I'm running archlinux and trying to build against openjdk 14 (it's not in the official repo yet but I installed and set it via JAVA_HOME in the gradlew script). Running . `> ./gradlew clean build createPackage`. results in two failed tests:. ```; Task :qupath-core:test FAILED. TypeAdaptersCVTest > testGetOpenCVTypeAdaptorFactory() FAILED; java.lang.ExceptionInInitializerError at TypeAdaptersCVTest.java:32; Caused by: java.lang.NullPointerException at TypeAdaptersCVTest.java:32. TypeAdaptersCVTest > testGetTypeAdaptor() FAILED; java.lang.NoClassDefFoundError at TypeAdaptersCVTest.java:99. 42 tests completed, 2 failed. FAILURE: Build failed with an exception.'; ```. I get the same failure using the latest archlinux openjdk (13) too. I can build the dist using the 'assemble' command but it doesn't run either.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484:625,FAILURE,FAILURE,625,https://qupath.github.io,https://github.com/qupath/qupath/issues/484,2,"['FAILURE', 'failure']","['FAILURE', 'failure']"
Availability,"I'm trying to run QuPath on my linux server and use X forwarding to view on my local system. Basically, the server is much more powerful, which is why I want to do it this way, but it doesn't work. Would really appreciate your advice. Here's the error message I get:. ```; 18:26:55.603 [main] [INFO ] qupath.QuPath - Launching QuPath with args: ; Prism ES2 Error - nInitialize: glXChooseFBConfig failed; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x000000000000ad66, pid=159313, tid=0x00007ff2286f0700; #; # JRE version: OpenJDK Runtime Environment (8.0_111-b14) (build 1.8.0_111-8u111-b14-2ubuntu0.16.04.2-b14); # Java VM: OpenJDK 64-Bit Server VM (25.111-b14 mixed mode linux-amd64 compressed oops); # Problematic frame:; # C 0x000000000000ad66; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /home/rrawat/QuPath/app/hs_err_pid159313.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; #; Aborted; ```",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/109:246,error,error,246,https://qupath.github.io,https://github.com/qupath/qupath/issues/109,4,"['Error', 'error']","['Error', 'error']"
Availability,"I'm trying to use a similar script for creating an annotation from an XML, but I cannot get XMLSlurper to work. If I understand this thread correctly, `groovy-xml` should be included in base QuPath. I do indeed see `groovy-xml-4.0.15.jar` in `/Applications/QuPath-0.5.0-arm64.app/Contents/app/` (I'm on an M2 Mac). I did try dropping that jar file on QuPath to add to extensions and met the same result. This is the error I get:. ```; ERROR: It looks like you've tried to import a class 'XmlSlurper' that couldn't be found. ERROR: startup failed:; QuPathScript: 7: unable to resolve class XmlSlurper; @ line 6, column 12.; def list = new XmlSlurper().parseText(file.getText()); ^; ```. Here's the (minimal) code that produces this. Of course, the error occurs on startup, so all that matters here is the import list, I believe.; ```; import qupath.lib.scripting.QP; import qupath.fx.dialogs.Dialogs; import qupath.fx.dialogs.FileChoosers. def file = FileChoosers.promptForFile(""Choose file""); def list = new XmlSlurper().parseText(file.getText()); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/455#issuecomment-1934515325:416,error,error,416,https://qupath.github.io,https://github.com/qupath/qupath/issues/455#issuecomment-1934515325,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability,I'm unable to reproduce this on Windows 10; using _Automate &rarr; Shared scripts &rarr; ..._ my script opens without an error.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/349#issuecomment-518238493:121,error,error,121,https://qupath.github.io,https://github.com/qupath/qupath/issues/349#issuecomment-518238493,1,['error'],['error']
Availability,"I'm using QuPath to open a Leica-Fluorescence-1.scn file with Z,C,T=3,1,1.; In the QuPath 0.1.2, when I open it, I cannot see the fluorescence image, but could only see a zoom-out whole slide with label in white light, and the server is Bioformats.; Then I try to open it in version 0.2.0. Under this version, I can see the fluorescence image now (alaso Bioformats). Then I run a script to split the image and export as tiles. ; When using QuPath 0.1.2: ; (1)if I run the script from menu, it works without problem.; (2) If I run feed in the script to QuPath via command line, the Bioformat extension cannot be loaded. When using QuPath 0.2.0:; (1) if I run the script from menu, error appeared:. ERROR: Error: startup failed:; Script1.groovy: 17: unable to resolve class qupath.imagej.images.servers.ImagePlusServer; @ line 17, column 1.; import qupath.imagej.images.servers.ImagePlusServer; ^. Script1.groovy: 18: unable to resolve class qupath.imagej.images.servers.ImagePlusServerBuilder; @ line 18, column 1.; import qupath.imagej.images.servers.ImagePlusServerBuilder; ^. 2 errors. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:596); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280:680,error,error,680,https://qupath.github.io,https://github.com/qupath/qupath/issues/280,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"I'm using QuPath's basic functions to replace Aperio ScanScope on Ubuntu. My use case is viewing and exporting regions from .svs format slides. Is there a way to export, using `Export Image Region`, an arbitrarily large region? Currently the size is capped ~10MB. . I get the following message in console:; ```; 08:54:35.252 [JavaFX Application Thread] [ERROR] q.lib.gui.helpers.DisplayHelpers - Export image region: Requested export region too large - try selecting a smaller region, or applying a higher downsample factor; ```",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/127:354,ERROR,ERROR,354,https://qupath.github.io,https://github.com/qupath/qupath/issues/127,2,"['ERROR', 'down']","['ERROR', 'downsample']"
Availability,"I've added a PR that is intended to address this... although its main focus is on another related bug: https://github.com/qupath/qupath/pull/1070. > Visualizing objects overlaid onto images shouldn't result in substantial lag. Ideally it shouldn't, but if it does I wouldn't say it's necessarily a bug... since QuPath is already needing to do a *lot* of stuff to get acceptable performance across a wide range of scenarios. Specifically here:; * For a downsample >= 1, repainting detections caches tiles and multiple resolution levels for performance - this is why QuPath can handle millions of objects.; * For downsample < 1, repainting happens for all detections in the field of view (like for annotations) for improved appearance without nasty bitmap-upsampling artefacts. This is inevitably laggier than using cached tiles, but caching itself has considerable overhead in terms of memory and worse appearance. I think this tradeoff makes sense, since details really matter when viewing the image at high magnification but the number of objects visible should be limited (possibly thousands, but not millions). However it does mean that if you have a large enough monitor, many detections, and a downsample value slightly less than 1, performance there certainly can be a noticeable lag... and object connections make this worse by meaning that thousands more lines need to be rendered. However, investigating this revealed that QuPath was painting all the connections twice, which certainly wasn't helping things :). So the PR fixes the double-painting bug. Along the way, it adds a spatial cache that enables QuPath to be a bit smarter about which connections it paints. The main reason for this change is to overcome an issue with long connections sometimes being broken at some resolutions:. ### Old behavior:; ![connection_bug-1](https://user-images.githubusercontent.com/4690904/194024037-795fceaa-e542-4c67-8fa2-84e6a8aca691.png). ### New behavior:; ![connection_fix-1](https://user-images.g",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1069#issuecomment-1268167189:452,down,downsample,452,https://qupath.github.io,https://github.com/qupath/qupath/issues/1069#issuecomment-1268167189,2,['down'],['downsample']
Availability,"I've attempted a fix at https://github.com/qupath/qupath/pull/1344 - it seems to be working on my computer, so if no new problems arise the correct version should be available in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1732323244:166,avail,available,166,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1732323244,1,['avail'],['available']
Availability,"I've downloaded _m6_ and it seems like I still have the same problem. Also, when I click on the menus (File, Edit, Tools...) they close when I release the mouse button, they don't stay open to allow clicking on them.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/336#issuecomment-558638519:5,down,downloaded,5,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-558638519,1,['down'],['downloaded']
Availability,"I've flagged this as ready for review now. It definitely needs more testing. As described by @carlocastoldi the server is loaded whenever *any* change to the metadata is made. The server can be loaded more often might be expected, sometimes for subtle, hard-to-address reasons. Some relevant facts:; * `ImageServerMetadata` *isn't usually saved with an image when it is first added to a project*. This only happens the first time the data file is saved.; * The `ImageServerMetadata` is updated as soon as an image is opened in a project to ensure that the name specified in the project matches that in the server metadata. This triggers the server to be loaded if; * The `ImageServerMetadata` isn't available, or; * The `ImageServerMetadata` is available, but contains the wrong name (e.g. the name was changed in a project, but then the data file wasn't saved afterwards); * *Run for project* will always force the `ImageServer` to be loaded, because it will always save the data - and this act of saving requires the `ImageServer`. So you can only get advantages if you avoid *Run for project*, e.g. by using *Run for project (without save)* instead.; * We can't rely on not saving if there have been no changes, because the script editor now automatically fires a hierarchy change after completion. This means QuPath *always* thinks that the script may have changed the `ImageData`, so `ImageData.isChanged()` returns true. We didn't used to do this, but then we had to keep telling users to add `fireHierarchyUpdate()` at the end of many otherwise simple-looking scripts, and that was a pain for everyone. This basically means that lazy-loading only works if the data for an image has been saved at least once, and the user hasn't messed around too much with image names within their project. The 'easy' way to trigger an image to be saved once is to do a 'Run for project' script - even if the script doesn't do anything. This should be enough to prompt the `ImageServerMetadata` to become embedd",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1489#issuecomment-2273821037:699,avail,available,699,https://qupath.github.io,https://github.com/qupath/qupath/pull/1489#issuecomment-2273821037,2,['avail'],['available']
Availability,"I've had similar issues with different Linux distros, try downloading the JDK/JRE for Java 16 from AdoptOpenJDK (Here's the JRE 16 for Linux x64: https://github.com/AdoptOpenJDK/openjdk16-binaries/releases/download/jdk-16.0.1%2B9/OpenJDK16U-jre_x64_linux_hotspot_16.0.1_9.tar.gz), extract it, and navigate to `<QuPath folder>/lib/app` and run `<where you extracted the JRE>/jdk-16.0.1+9-jre/bin/java -cp ""./*"" qupath.QuPath` (or set the folder to your PATH and just use `java`). This has magically solved many of my issues.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/825#issuecomment-925125755:58,down,downloading,58,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925125755,2,['down'],"['download', 'downloading']"
Availability,"I've just compiled QuPath from main and can confirm that this bug has now been fixed (in 0.4.1, setting a point annotation class causes a ""bidirectional binding failed error""). Thanks Pete!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1202#issuecomment-1381853809:168,error,error,168,https://qupath.github.io,https://github.com/qupath/qupath/issues/1202#issuecomment-1381853809,1,['error'],['error']
Availability,"I've made an update that will be included in v0.1.2 so that QuPath can recover more gracefully if it finds that OpenSlide cannot be loaded. Previously, it recovered only the first time... but subsequent attempts to open images were thwarted by a particularly nasty error - which caused the trouble you found. Therefore while it still remains a mystery why OpenSlide cannot be used on one of your computers, at least there should be no need to manually disable OpenSlide through renaming from now on. (Note: I'd recommend uninstalling QuPath before installing the update, since otherwise it is likely that the current files, renamed and not, will hang around within Windows... they shouldn't cause trouble, but uninstalling manually can help make sure.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/35#issuecomment-268797552:71,recover,recover,71,https://qupath.github.io,https://github.com/qupath/qupath/issues/35#issuecomment-268797552,3,"['error', 'recover']","['error', 'recover', 'recovered']"
Availability,"I've made some changes in the recent commits that should help. This should automatically result in the .bkp file being used if the 'proper' data file cannot be found. I was unable to find any general problem with closing from the task manager, but it would make sense if the software hangs because of a problem writing the data file and it is force quit for that reason. In this case, restoring from the backup is probably the best QuPath can offer anyway. I'll close this issue, v0.2.1 should be available next week containing this and some other minor fixes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/512#issuecomment-641434675:497,avail,available,497,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-641434675,1,['avail'],['available']
Availability,"I've now updated the documentation on using ImageJ with QuPath at https://github.com/qupath/qupath/wiki/Working-with-ImageJ. I'll close this issue now, but please reopen it if things aren't working as described. The use of visibility status to influence what is sent to ImageJ should be available in the v0.0.4 release of QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/5#issuecomment-253767302:287,avail,available,287,https://qupath.github.io,https://github.com/qupath/qupath/issues/5#issuecomment-253767302,1,['avail'],['available']
Availability,"I've repeated the issue several times but not always (I know this doesn't make sense but I don't know how to explain it). Here is an example of error message that I have been getting when it has not worked:. ```; INFO: Bio-Formats version 6.2.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.2.0) (17 ms); INFO: Loaded extension Experimental commands (9 ms); INFO: Loaded extension ImageJ extension (49 ms); INFO: Loaded extension JPen extension (15 ms); INFO: Loaded extension OpenCV extensions (2 ms); INFO: Loaded extension Rich script editor extension (161 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: 190804; WARN: Unable to obtain full image format info for file:/C:/pathtoimage***.scn (null)WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; WARN: Unable to open UriImageSupport (class qupath.lib.images.servers.openslide.OpenslideServerBuilder) support=2.5builders=1; WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; ```. Seems like it tried to open with openslide while it should have used bioformats?. Another weird behaviour (not sure if this is intended) of the new version: if I drag an drop fluorescent images (.scn or .vsi) (not tried with chromogenic) to qupath without having pre-created a project, it only opens the label/macro image without letting me access to higher resolution images....",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/348#issuecomment-518022687:144,error,error,144,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518022687,1,['error'],['error']
Availability,"I've run it several times with different JDKs, both x86_64 and aarch64. Tests have passed every time... except once, using AdoptOpenJDK 16 with Rosetta. ![Screenshot 2022-01-28 at 11 40 01](https://user-images.githubusercontent.com/4690904/151541015-d439dd98-5411-4115-ad08-c91cab4f620c.png). However I haven't managed to repeat the failure despite repeatedly trying with the same JDK. I am confused...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1024136572:333,failure,failure,333,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024136572,1,['failure'],['failure']
Availability,"I've since managed to build both m11 and m12 with `./gradlew clean assemble CreatePackage` and jdk 14 (it also seems to work using the current arch linux jdk v13 to build qupath m12). . When I first tried to skip the tests using the same approach last week the builds would segfault (I think with the same pointer error balazs described above). I got the that error today on one attempt , but can't seem to repeat it. . ```; Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on; 12:35:11.253 [JavaFX Application Thread] [WARN ] qupath.lib.gui.QuPathGUI - No directory set for log files! None will be written.; 12:35:11.260 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.2.0-m12; Build time: 2020-05-26, 12:34; 12:35:11.263 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 1981.50 MB (25.0% max memory). (QuPath-0.2.0-m12:49988): Gdk-WARNING **: 12:35:11.652: XSetErrorHandler() called with a GDK error trap pushed. Don't do that. 12:35:12.161 [JavaFX Application Thread] [INFO ] q.l.i.s.b.BioFormatsOptionsExtension - Bio-Formats version 6.5.0; 12:35:12.165 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (12 ms); 12:35:12.166 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (1 ms); 12:35:12.199 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (33 ms); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:3",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-634101819:314,error,error,314,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819,3,['error'],['error']
Availability,"I've tried now on three computers (Windows 64, Mac M1, Mac Intel) and can't replicate any problem - the tiles open fine at all resolutions in QuPath v0.3.2. I see the warning in v0.3.1 but the image still opens without problems. Two things you could try:; * Reset QuPath's preferences, with *Edit &rarr; Reset preferences*; * Increase the logging in the hope that a more useful error appears; to do this go to *Edit &rarr; Preferences...* and search for `Log level`, then set its value to `DEBUG`. (I do see that the images aren't recognised as RGB, but that's a different issue... I may need to update QuPath to convert it to a more standard RGB automatically)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/904#issuecomment-1065014828:378,error,error,378,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1065014828,1,['error'],['error']
Availability,"IFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; 09:32:08.264 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; java.io.IOException: Premature end of JPEG file; 	at org.openslide.OpenSlide.checkError(OpenSlide.java:178); 	at org.openslide.OpenSlide.paintRegionARGB(OpenSlide.java:245); 	at qupath.lib.images.servers.OpenslideImageServer.readBufferedImage(OpenslideImageServer.java:203); 	at qupath.lib.images.servers.OpenslideImageServer.readBufferedImage(OpenslideImageServer.java:1); 	at qupath.lib.images.servers.AbstractImageServer.getBufferedThumbnail(AbstractImageServer.java:70); 	at qupath.lib.images.servers.OpenslideImageServer.<init>(OpenslideImageServer.java:147); 	at qupath.lib.images.servers.OpenslideServerBuilder.buildServer(OpenslideServerBuilder.java:51); 	at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); 	at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); 	at qupath.lib.gui.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/65:2066,avail,available,2066,https://qupath.github.io,https://github.com/qupath/qupath/issues/65,1,['avail'],['available']
Availability,"INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/joelrv/QuPath/extensions; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /home/joelrv/Downloads/bftools/test_pyramid_fullsize.tif; 12:25:56.155 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - Estimating H-DAB staining; 12:25:56.537 [JavaFX Application Thread] [INFO ] qupath.lib.gui.viewer.QuPathViewer - Image data set to ImageData: Brightfield (H-DAB),",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472813709:1815,ERROR,ERROR,1815,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709,1,['ERROR'],['ERROR']
Availability,INFO: Refreshing extensions in C:\Users\user\QuPath\extensions; 	INFO: Selected style: Modena Light; 	INFO: Performing update check...; 	INFO: Starting QuPath with parameters: []; 	INFO: Refreshing extensions in C:\Users\user\QuPath\extensions; 	INFO: Added extension: C:\Users\user\QuPath\extensions\qupath-extension-bioformats.jar; 	INFO: Extension loaded: Bio-Formats server options; 	INFO: Image server loaded: Bio-Formats; 	WARN: Strange 'bits per sample' of 0; 	ERROR: QuPath exception; 		at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); 		at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); 		at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); 		at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2152); 		at qupath.lib.gui.commands.OpenCommand.run(OpenCommand.java:51); 		at qupath.lib.gui.QuPathGUI.lambda$createCommandAction$46(QuPathGUI.java:3122),MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/168:468,ERROR,ERROR,468,https://qupath.github.io,https://github.com/qupath/qupath/issues/168,1,['ERROR'],['ERROR']
Availability,"If all classes are 'ignored', yet 'Create objects' with a pixel classifier doesn't want to create ignored objects, give a meaningful error rather than throwing an exception.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/876:133,error,error,133,https://qupath.github.io,https://github.com/qupath/qupath/pull/876,1,['error'],['error']
Availability,"If it is an image or BioFormats based issue, I doubt there is much that can be done on the QuPath end. **Have you tried opening the file in FIJI using the BioFormats importer?** If it works there and doesn't in QuPath, it might be a QuPath interpretation error, otherwise it would need to be handled on the BioFormats issues page/Image.sc forum. Also, thank you for taking the time to fill out the whole form :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/337#issuecomment-509283482:255,error,error,255,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-509283482,1,['error'],['error']
Availability,"If it's TIFF you want, then it's best to send it to ImageJ and save from there. There's still a size limit, so if you want to export especially large regions and that still doesn't work then let me know... in the short term you might need a script to work around that limit. Two extra notes:; * QuPath can't export regions that are approaching the size of a whole slide yet at all; i.e. it can handle thousands of pixels along each dimension, but not tens of thousands.; * If the *Downsample factor* is 1 and the image is RGB, then *Export image region* should give you the same pixels in the PNG as you'd get in the TIFF, at the full resolution.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/143#issuecomment-361588582:481,Down,Downsample,481,https://qupath.github.io,https://github.com/qupath/qupath/issues/143#issuecomment-361588582,1,['Down'],['Downsample']
Availability,"If there is nothing really in the error log, I would start with upping the memory available to QuPath. The m1 and m2 have their own independent max memory settings, and default to something like 1/4 of the total available. . **which can be found in the Help menu under Show Setup Options.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/294#issuecomment-475407873:34,error,error,34,https://qupath.github.io,https://github.com/qupath/qupath/issues/294#issuecomment-475407873,3,"['avail', 'error']","['available', 'error']"
Availability,"If you can provide more information about when it does/doesn't happen that would be helpful. Also if you have seen it across different versions of the software and different methods of generating detections (e.g. using the built-in cell detection instead). And also if it persists after restarting QuPath. Since you mention pixel classification, I wonder if it is still active in the background. (When v0.2.0-m10 becomes available you will be able to use VisualVM to profile it and see what might be causing slowdowns... but it doesn't work easily with v0.2.0-m9)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/440#issuecomment-614159617:421,avail,available,421,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614159617,1,['avail'],['available']
Availability,"If you could provide a screenshot of what you are looking at (cell detections/annotations+the classifier dialog) and a copy of the log (View->Show Log), that would help the troubleshooting a bit. Occasionally the classifier does run into errors and those show up in the log (unless that is what you meant by details).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/210#issuecomment-418390877:238,error,errors,238,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418390877,1,['error'],['errors']
Availability,"If you do not want to or are not able to rescan those images, one option is using the free Pannoramic Viewer from 3DHISTECH to export the images in 8bit format. It can be obtained at: ; http://www.3dhistech.com/downloads. I recommend maximizing the tile size for speed and your own sanity :) Especially as you would need some kind of external Python script or something in order to convert the images, as Pannoramic viewer only handles one at a time, manually. I recommend multiple logins on a server, or multiple computers!. Last I checked, the newer CaseViewer did not have as many options for exporting and could not be used for this purpose.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/106#issuecomment-333959855:211,down,downloads,211,https://qupath.github.io,https://github.com/qupath/qupath/issues/106#issuecomment-333959855,1,['down'],['downloads']
Availability,"If you don't have a huge number of cores, and could tolerate just manually annotating and deleting certain regions, that might be the easiest way... draw around the region you don't want (*after* detecting cells/superpixels or whatever your previous step was) and press *Backspace* to delete the annotation - and then choose *No* when asked about keeping descendent objects. Based on the description, my guess is you're using *Positive cell detection*. You might also try to create a classifier (as described [here](https://github.com/qupath/qupath/wiki/Classifying-objects)) and leave it up to the classifier to find the areas of carbon based on whatever features have been calculated; for example, you could assign classifications for *Carbon* and *Valid* (or whatever other category names you want to use). Then delete the carbon areas and reapply the positive/negative classifications using something like the following script:. ```groovy; carbon = getDetectionObjects().findAll {it.getPathClass() == getPathClass('Carbon')}; removeObjects(carbon, true); setCellIntensityClassifications('Nucleus: DAB OD mean', 0.2); ```. If this doesn't work well enough, then you can tell QuPath to calculate new features for each cell using *Analyze &rarr; Calculate features &rarr; Add intensity features (experimental)*; I'd suggest adding the mean values for red, green and blue as a starting point and see if that's enough. Otherwise, if you're able to provide an example image and say a bit more about what steps are involved in your analysis then maybe we can think of other ways.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/172#issuecomment-388539146:52,toler,tolerate,52,https://qupath.github.io,https://github.com/qupath/qupath/issues/172#issuecomment-388539146,1,['toler'],['tolerate']
Availability,"If you search for this error you should find many discussions about it and Java Topology Suite. It is a frequent source of problems since QuPath started using JTS routinely for ROIs, although I still think that on balance there are many more advantages of using JTS overall. I had tried to put in additional steps to reduce the frequency of occurrence in m9, but it seems from this issue that is can still happen. I can see from the screenshot roughly where this occurs, but without steps to reproduce it I am not sure I can do much in the near future. Two questions: are you using pixel snapping to round ROI coordinates to integers here? And how did you generate all the annotations (ie by hand or automatically)? These are likely to be more relevant than the many cells.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/401#issuecomment-587001656:23,error,error,23,https://qupath.github.io,https://github.com/qupath/qupath/issues/401#issuecomment-587001656,1,['error'],['error']
Availability,"If you use VisualVM then you should be able to find exactly what takes time. Thumbnail generation can't safely be done in parallel because there's no guarantee the images will be pyramidal, so there is a high risk of out of memory errors. That being said, I'm not certain thumbnail generation is the problem. If it's once per day, there could be some issue associated with update checking... but I can't see why that would be a problem and it wouldn't happen with the project is requested. VisualVM should resolve it one way or another in any case. One other thing: is there anything conventional about where the project/images are stored? The need for a reboot makes me think there could be an operating system component. I've never seen it myself and don't recall anyone having reported it before.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1154#issuecomment-1325599611:231,error,errors,231,https://qupath.github.io,https://github.com/qupath/qupath/issues/1154#issuecomment-1325599611,2,"['error', 'reboot']","['errors', 'reboot']"
Availability,"If you've already got everything set up in _GitHub Desktop_, there should be a _Fetch origin_ button towards the top right - click that, and then again if the text changes to _Pull origin_. Then, with the latest code successfully pulled down, in the _History_ tab on the left the top entry should be _Fixed point painting bug_. If you follow the rest of the instructions to build QuPath, you should end up with a version that works. I've tested it on Windows and Mac and it is working here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/193#issuecomment-409486427:237,down,down,237,https://qupath.github.io,https://github.com/qupath/qupath/issues/193#issuecomment-409486427,1,['down'],['down']
Availability,"ImageDisplay`. Eventually I think this kind of color transform approach should completely replace the (currently GUI-only) color transforms for better consistency and more maintainable code. More generally, I need to be thinking broadly about existing users as well as how the software will need to look a year from now, or two years from now, to meet a host of new applications. And I need to think about how much of those years will go into maintaining existing things where it is *already* clear they are not using the right approach. Often, there are lots of considerations that I haven't articulated anywhere (there just isn't time), but which are impacted by the choices. For example: finding a better approach to handle brightness/contrast perhaps could/should also support serializing the image histograms (since `ImageDisplay` uses them). Storing these histograms would make opening images a great deal faster as well. But then, having histograms separated from the GUI (and JavaFX) would also make intensity distribution information instantly available in general. This might open up new and faster processing and analysis options - including the use of automated thresholds based on such histograms. If something is not public, it can be freely changed without breaking other extensions (and also well-behaved scripts). If it is public, other extensions and scripts that use it will definitely break. Each breaking change costs a) user annoyance, and b) developer time. Making fewer things public reduces that. Time is incredibly precious... there are now (finally) two of us working on it, but there are quite some demands on us. And in academia, a lot of what we are judged on isn't software anyway. So I think it is important we follow our beliefs about what will protect our time and be better in the long run - trying to be helpful, but not caving to pressure :). So why the scripting approach?. In general, when something is used internally by QuPath, we have a much better idea of wh",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-632668731:3776,avail,available,3776,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-632668731,1,['avail'],['available']
Availability,"Implement a much faster approach to computing the union of large numbers of polygons when they are not all connected, including parallelisation. The algorithm is:; 1. Extract all polygons from the input.; 2. Identify intersecting and non-intersecting polygons; 3. Group all polygons that should potentially be merged, because they intersect (directly or indirectly) with other polygons in the group; each polygon should be represented in only one group; 4. Union all the polygon groups; 5. Combine all resulting polygons into a single polygon or multipolygon. This addressing the pixel classification performance bottleneck described at https://forum.image.sc/t/can-creating-detections-from-pixel-classifier-be-made-to-run-faster/96745. When implementing this, it became clear that extremely complex polygons couldn't be displayed in the viewer because generating an `Area` object failed (ultimately with out-of-memory error). Also, `PolygonROI.getGeometry()` was slow when called repeatedly because the geometry is recomputed each time. So the PR uses a `SoftReference` to avoid this, while still allowing references to be dropped when memory is low. When the geometry isn't needed, the overhead should be avoided. This PR also addresses this problem by using JTS' shape representation instead. ## To test. ### Union of many objects. A simple test:; * Detect cells in an image; * Run the following script. ```groovy; import qupath.lib.common.Timeit; import qupath.lib.roi.GeometryTools. import static qupath.lib.scripting.QP.*. def detections = getDetectionObjects(). List<GeometryTools> geoms = detections.collect {it.getROI().getGeometry()}. def timeit = new Timeit(); .start(); def geomUnion = GeometryTools.union(geoms); println timeit.stop(). double sumArea = geoms.sum {g -> g.getArea()}; println ""Sum area: \t${sumArea}""; println ""Num geometries: \t${geoms.size()}""; def roi = GeometryTools.geometryToROI(geomUnion, ImagePlane.getDefaultPlane()); def pathClass = getPathClass(""Merged geometrie",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1543:919,error,error,919,https://qupath.github.io,https://github.com/qupath/qupath/pull/1543,1,['error'],['error']
Availability,Improve CellTools robustness,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/992:18,robust,robustness,18,https://qupath.github.io,https://github.com/qupath/qupath/pull/992,1,['robust'],['robustness']
Availability,Improve PathClass robustness,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/731:18,robust,robustness,18,https://qupath.github.io,https://github.com/qupath/qupath/pull/731,1,['robust'],['robustness']
Availability,"Improve PathPrefs, Locale support & available PathClasses",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/971:36,avail,available,36,https://qupath.github.io,https://github.com/qupath/qupath/pull/971,1,['avail'],['available']
Availability,"Improve build scripts for building using Apple silicon; * Avoid including TensorFlow & OpenSlide (which won't work); * Support a -Popenslide=/path/to/openslide.jar preference to create a build that uses a local openslide jar; * Give more informative error if (when) OpenSlide can't be found. Without a custom build, installing with homebrew and including `libopenslide-jni.jnilib` in the app directory can also work (assuming it contains links to its dependencies).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1170:250,error,error,250,https://qupath.github.io,https://github.com/qupath/qupath/pull/1170,1,['error'],['error']
Availability,Improve error messages on import,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1416:8,error,error,8,https://qupath.github.io,https://github.com/qupath/qupath/pull/1416,1,['error'],['error']
Availability,Improve reliability of cell expansion code,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/588:8,reliab,reliability,8,https://qupath.github.io,https://github.com/qupath/qupath/pull/588,1,['reliab'],['reliability']
Availability,In 0.1.3-SNAPSHOT I get this output:; `INFO: java.lang.UnsatisfiedLinkError: Native Library C:\Program Files\Qupath-dev\app\jpen-2-3-64.dll already loaded in another classloader`; In 0.2.0-m2 I get this output:; `INFO: java.lang.UnsatisfiedLinkError: Native Library C:\Program Files\QuPath-0.2.0-m2\app\jpen-2-3-64.dll already loaded in another classloader`; Hope that helps you somehow. Update: It appears the lack of pressure sensitivity was actually caused by a recent change in Windows 10 which was fixed by a driver released in mid-march. So We are back to only having trouble with the zooming while moving up/down.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-479821853:615,down,down,615,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479821853,1,['down'],['down']
Availability,"In `splitRegionRequests`, the working coordinates are in downscaled pixels, and stored in `maxX` and `maxY`. However, the two nested `for` loops over `x` and `y` have incorrect initialisers: for `y` it is `int y = request.getY()` instead of `int y = (int)(request.getMinY() / downsample)`. It probably doesn't matter much, though, as presumably `request.getY()` and `request.getMinY()` both return 0 in normal situations.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/649:57,down,downscaled,57,https://qupath.github.io,https://github.com/qupath/qupath/issues/649,2,['down'],"['downsample', 'downscaled']"
Availability,"In a way. I think once you get the first TMA core, you can keep Adding Row and Adding Column until you get the correct number. I suppose if those commands show up in the workflow and/or are scriptable, you might be able to craft something through scripting. Pete also might know something more elegant. ; I tend to just cheat though. If you rename the file I attached (TMA.txt) to a .qpdata file, then give it the same name as your image, for example, MyImageName.qpdata, you get to start off with a fairly large TMA, which you can then shave down or add columns to as necessary. You may need to do a fair bit of re-aligning though. Plus if you are using a standard TMA size for all of your images, once you have your TMA the way you want it, just save the data file make a spare copy of it somewhere. You can then use that file and rename copies of it to YourNextTMA.qpdata as many times as you need. All of the .qpdata files should be in the ""data"" folder in your project directory. [TMA.txt](https://github.com/qupath/qupath/files/998431/TMA.txt)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/77#issuecomment-301233047:543,down,down,543,https://qupath.github.io,https://github.com/qupath/qupath/issues/77#issuecomment-301233047,1,['down'],['down']
Availability,"In m4, Haralick features will not calculate. I've tried it on SLICs, tiles, cells, and annotations. When going through the menu Analyze > Calculate Features > Add Intensity Features, it will select cells/detections as normal, but no measurement appears. In a script, this error appears:. ```; ERROR: Error running plugin: java.lang.IllegalArgumentException: No double parameter with key 'haralickMin'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:355); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:260); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:280); at qupath.lib.gui.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:196); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:216); at Script1.run(Script1.groovy:3); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:676); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/358:272,error,error,272,https://qupath.github.io,https://github.com/qupath/qupath/issues/358,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"In the file `qupath-core/src/main/java/qupath/lib/images/writers/TileExporter.java` the definition of the `requestedPixelSize` method has the fraction the wrong way up; it should instead read:. ```java; 	public TileExporter requestedPixelSize(double pixelSize) {; 		this.downsample = pixelSize / server.getPixelCalibration().getAveragedPixelSize().doubleValue();; 		return this;; 	}; ```. Otherwise, if the requested pixel size is 5.0, say, and the average pixel size is 0.25, the downsample value is set to 1/20 instead of the correct 20. This affects the current GitHub version of QuPath (at commit 3ca92f9026c9c32bcfb28de419673d2beac49c4a).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/648:271,down,downsample,271,https://qupath.github.io,https://github.com/qupath/qupath/issues/648,2,['down'],['downsample']
Availability,In the hope it fixes https://forum.image.sc/t/error-during-building-from-source/73322,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1100:46,error,error-during-building-from-source,46,https://qupath.github.io,https://github.com/qupath/qupath/pull/1100,1,['error'],['error-during-building-from-source']
Availability,"In the log badge/info message, show only the count of *unseen* errors (i.e. those that have occurred since the log viewer was last visible).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1362:63,error,errors,63,https://qupath.github.io,https://github.com/qupath/qupath/pull/1362,1,['error'],['errors']
Availability,"In the script editor, when you have a script selected, File->Close script. I overlooked that a few times too when I was starting, thinking it might close the whole thing. Update measurement names: Where does it break down? Are the channels named correctly? And is there an error?. Batch images for view settings-> These will not have any effect, as they only work on the currently open image and are not saved as part of the .qpdata file at this time. Pete mentioned this in another post... https://groups.google.com/forum/#!searchin/qupath-users/viewer%7Csort:date/qupath-users/uBMxJ_3JnBM/GkDahJw7EAAJ ah there it is.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-411576889:217,down,down,217,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-411576889,2,"['down', 'error']","['down', 'error']"
Availability,Include checksums when using jpackage.; Update gradle wrapper for Java 21 support (when available).,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1369:88,avail,available,88,https://qupath.github.io,https://github.com/qupath/qupath/pull/1369,1,['avail'],['available']
Availability,Initial suggestions from a drop-down menu when typing Ctrl+Space.; Limited to only static methods/fields and specified common classes.; Also assemble merged javadocs into a single jar.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/954:32,down,down,32,https://qupath.github.io,https://github.com/qupath/qupath/pull/954,1,['down'],['down']
Availability,Initial support for commands that can result in a badge appearing on a toolbar button (or other node). The eventual plan is to use this to draw attention to errors/warnings that may not otherwise be visible to the user.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1336:157,error,errors,157,https://qupath.github.io,https://github.com/qupath/qupath/pull/1336,1,['error'],['errors']
Availability,Intriguing - if you download the x86 build does it have the same behavior? I guess you may have to rename any Apple silicon installation beforehand (I'm not sure if/how the general package installer deals with multiple installations with the same name).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1184#issuecomment-1351834309:20,down,download,20,https://qupath.github.io,https://github.com/qupath/qupath/issues/1184#issuecomment-1351834309,1,['down'],['download']
Availability,"Introduce `qupath.lib.objects.utils.ObjectMerger` as an attempt to provide a general, reusable and performant way to handle tile boundary issues with segmentation algorithms. It is designed to support different merging criteria, with three baseline implementations for now. This might be extended in the future. The following Groovy script shows it in action:. ```groovy; import qupath.lib.objects.utils.ObjectMerger. def pathObjects = getSelectedObjects(). println ""Before merging: ${pathObjects.size()}"". // Create a merger that requires one horizontal/vertical boundary to match; // (with a minimum shared length threshold, and a small overlap tolerance); double threshold = 0.75; def merger = ObjectMerger.createSharedTileBoundaryMerger(threshold). // Alternatives; // merger = ObjectMerger.createSharedClassificationMerger() // ROIs can be discontinuous; // merger = ObjectMerger.createTouchingMerger() // ROIs must touch, but not intersect. // Do the merging; def mergedObjects = merger.merge(pathObjects); println ""After merging: ${mergedObjects.size()}"". // Replace the objects; removeObjects(pathObjects, true); addObjects(mergedObjects); ```. On my M1 Max Mac Studio it is capable of reducing 88350 detections to 76394 in 2-4 seconds.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1346:647,toler,tolerance,647,https://qupath.github.io,https://github.com/qupath/qupath/pull/1346,1,['toler'],['tolerance']
Availability,Is an sha256 hash available for the current Qupath (0.3.2) release? (specifically the windows distribution?),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1027#issuecomment-1207982738:18,avail,available,18,https://qupath.github.io,https://github.com/qupath/qupath/issues/1027#issuecomment-1207982738,1,['avail'],['available']
Availability,Is it expected that running a positive pixel count on a larger area of interest (28824679 um^2) give the program troubles and essentially freeze up/crash the program? I am running it with an Intel i7 8 core 3GHx processor with 64GB ram. Is there something I need to modify in the pixel count settings (eg. adjusting the downample factor)? Or is it just the nature of the request/analysis?. Thanks!. Chris,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/611:320,down,downample,320,https://qupath.github.io,https://github.com/qupath/qupath/issues/611,1,['down'],['downample']
Availability,Is there an installer log available with useful information (as described at [this post](https://apple.stackexchange.com/questions/275915/debugging-the-installer-encountered-an-error-that-caused-the-installation-to-fa))?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/832#issuecomment-956259133:26,avail,available,26,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956259133,2,"['avail', 'error']","['available', 'error-that-caused-the-installation-to-fa']"
Availability,Issue can be deleted - it was a handling error,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/142:41,error,error,41,https://qupath.github.io,https://github.com/qupath/qupath/issues/142,1,['error'],['error']
Availability,"It all depends on different factors such as the `downsample` used and the size of your image (which might be more helpful if it is in terms of pixels, rather than microns) amongst other things. Also, the `Positive pixel count` is a deprecated command, and was replaced in most recent versions of QuPath, to which we strongly recommend updating. The pixel classifier might just do what you need!. I will close this issue with your permission as it is not a bug. Is that ok?; For questions and help, you can ask on the community forum, where you'll find answers and more guiding: https://forum.image.sc/tag/qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/611#issuecomment-701504695:49,down,downsample,49,https://qupath.github.io,https://github.com/qupath/qupath/issues/611#issuecomment-701504695,1,['down'],['downsample']
Availability,"It already came up on the forum, I created an Issue for it, and @melvingelbard fixed it :); https://github.com/qupath/qupath/issues/557. Fix will be available in v0.2.2 (planned to be available in the next day or two, if nothing else comes up before then...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/572#issuecomment-664006280:149,avail,available,149,https://qupath.github.io,https://github.com/qupath/qupath/issues/572#issuecomment-664006280,2,['avail'],['available']
Availability,"It appears that raising the min area fixes this issue, at least on the example image. The error goes away with `minArea` set to `5.0`.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/459#issuecomment-620642254:90,error,error,90,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-620642254,1,['error'],['error']
Availability,"It could be I was thinking of the pre-tiling days for cell detection, or maybe SLICs and subcellular detections on large images? And yes, I'm probably not typical :) Never used CZI images, so I have no idea about the effect of those. Anyway, giving a few things a shot. One thing I already noticed is that when I zip around an image and cap out the available memory that way, I tend to run into detection problems. However, as you say, this isn't a hardware memory limit problem, as I can lower the memory cap down to 2GB on a fairly large image (Annotation area 1.3x10^8 um^2) and have it run successfully, but slowly. If I fill up those 2 GB by looking around the image, though, it failed it's cell detection. Even on a comparatively small image (2.5x10^6 um^2) I ran into problems once the memory was filled. On the other hand, once I bumped the available memory up to 5GB, I stopped running into errors on the smaller image, though it was very difficult to fill the image buffer. On the larger image I could quite easily cap out the image buffer around 5GB and then sometimes ran into errors. Although sometimes the program would simply go over the 5GB limit and everything would be fine. I am afraid I wasn't able to find anything usefully consistent. . Anyway, the error, whenever I ran into it looks familiar:. > ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:163); at java.lang.Thread.run(Thread.java:745); Caused by Java heap space at java.ut",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343336690:349,avail,available,349,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343336690,4,"['avail', 'down', 'error']","['available', 'down', 'errors']"
Availability,"It definitely seems to be entirely a result of the length of the variables vector/string/etc. Even reducing the Training Data - Maximum samples to 5, I still get the same error at the same number of variables. ; In the case of the provided data set, that occurs between two and three ""Scales"" being selected, and it does not matter which scales are selected. . Attempting to use the PCA option does not change the result, probably because it needs to _start_ with the complete set of different measurements, and fails _there_ rather than after PCA when using the reduced set. Loading data from a single image also results in the error. The final message is somewhat odd, and probably a result of the string passed to OpenCV failing? ; `WARN: No training data found - if you have training annotations, check the features are compatible with the current image.; `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1092108822:171,error,error,171,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092108822,2,['error'],['error']
Availability,"It did show an error message when it first happened, but not since then. The log shows it this way:. ERROR: Error updating ROI; at org.locationtech.jts.geomgraph.EdgeEndStar.propagateSideLabels(EdgeEndStar.java:286); at org.locationtech.jts.geomgraph.EdgeEndStar.computeLabelling(EdgeEndStar.java:122); at org.locationtech.jts.operation.relate.RelateComputer.labelNodeEdges(RelateComputer.java:290); at org.locationtech.jts.operation.relate.RelateComputer.computeIM(RelateComputer.java:125); at org.locationtech.jts.operation.relate.RelateOp.getIntersectionMatrix(RelateOp.java:112); at org.locationtech.jts.operation.relate.RelateOp.relate(RelateOp.java:57); at org.locationtech.jts.geom.Geometry.relate(Geometry.java:1026); at org.locationtech.jts.geom.Geometry.intersects(Geometry.java:758); at qupath.lib.gui.viewer.tools.BrushTool.getUpdatedObject(BrushTool.java:340); at qupath.lib.gui.viewer.tools.BrushTool.mouseDragged(BrushTool.java:298); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:413); at qupath.lib.gui.viewer.tools.BrushTool.handle(BrushTool.java:65); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:62); at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.ev",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/456#issuecomment-619374801:15,error,error,15,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-619374801,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"It has been a while, but I do not think you should have to install anything for Bioformats. All you need is the JAR file off of their website, and the JAR file from Pete, both at: https://github.com/qupath/qupath-bioformats-extension; And as it says, just drag them into the open QuPath window to add them to QuPath. I am not sure why you are having issues with a visual C++ redistributable; I am not entirely sure if that is related. At least, I do not recall having to install anything else when adding bioformats to QuPath, even when it was one of the first things I put on my computer. Is the error a QuPath error? It would probably be best to include a picture or at least the text of the error, and exactly when the error pops up (when you drag the bioformats extension into the QuPath window? when you try to open the CZI file?).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/135#issuecomment-356998068:597,error,error,597,https://qupath.github.io,https://github.com/qupath/qupath/issues/135#issuecomment-356998068,4,['error'],['error']
Availability,"It is a 64 bit machine and I get exact same two test errors during build on m12 too. And I've just noticed that on the pre-built m11 the wand tool does work even if there's an error. Also, most of the time there's no error! In fact, now that I'm writing this, I don't get an error at all now. So, these wand tool errors might have been unrelated to the test failures during build.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-631493326:53,error,errors,53,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631493326,6,"['error', 'failure']","['error', 'errors', 'failures']"
Availability,"It is a complete guess without seeing your image, but I'd try:; * Send the image to ImageJ: https://github.com/qupath/qupath/wiki/Working-with-ImageJ; * _Process &rarr; Find Maxima_ and preview the point selection. Experiment with the noise tolerance, with the goal of _detecting_ the white center.; * If the count looks basically ok, make sure the output type is 'Point Selection' and click 'OK'; * Use _Plugins &rarr; Send ROI to QuPath_ to initialize the point selection; * Edit the points in QuPath as necessary",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/266#issuecomment-461197765:241,toler,tolerance,241,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461197765,1,['toler'],['tolerance']
Availability,"It is often necessary/helpful to select all child objects of annotations, e.g. to delete or classify them. The selection of child objects in the object list on the Hierarchy tab is tedious and error-prone - especially when the number of objects is large. A function (in the menu and in the context menu of annotations) for selecting all child objects of all selected annotations would be desirable and helpful. Until now this selection can be done via scripting:; ```; childs = getSelectedObject().getChildObjects(); selectObjects(childs); ```; In my opinion, the function described is so basic that it should be available in the menu.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1438:193,error,error-prone,193,https://qupath.github.io,https://github.com/qupath/qupath/issues/1438,2,"['avail', 'error']","['available', 'error-prone']"
Availability,"It looks good, got a few bugs/points (sorry ignore if any are repeats from what's already been discussed) ; 1. The extension text is black in dark mode; 2. For the order, should ""Core Extensions"" be first since this will be relevant for all users? Then filters down to those wanting to explore extensions further? I do like the idea of combining the ""Manage Extension"" section into a bar at the top of the ""User Extensions"" section.; 3. Also the ""Core Extensions"" section could have a max height defined since we know the number of extensions?; 4. Width of window on opening squishes the ""Manage Extension"" section, increase width or change ""download"" to the symbol also used in WSInfer?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1748510267:261,down,down,261,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1748510267,2,['down'],"['down', 'download']"
Availability,It looks like the error occurs rather deep in the JavaFX code [here](https://github.com/javafxports/openjdk-jfx/blob/4f0addff16de7182752bc60541f44baeb0e99d2a/modules/javafx.controls/src/main/java/javafx/scene/control/skin/MenuButtonSkinBase.java#L188).; Does it happen consistently? At first glance it doesn't look like it's something that can be resolved within QuPath.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/349#issuecomment-518300141:18,error,error,18,https://qupath.github.io,https://github.com/qupath/qupath/issues/349#issuecomment-518300141,1,['error'],['error']
Availability,"It looks like you have things down pretty well on the scripting side, hopefully this gives you the extra nudge to get everything working in a TMA:; https://gist.github.com/Svidro/68dd668af64ad91b2f76022015dd8a45#file-class-percentages-to-tma-measurements-groovy; You will want to rewrite each of your cell lists for the current core's ""total"" (using another findAll), which is the total number of cellsObjects in that core. In this case the measurements are placed into the TMA measurement list, but you could also print them out if desired.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/255#issuecomment-454414897:30,down,down,30,https://qupath.github.io,https://github.com/qupath/qupath/issues/255#issuecomment-454414897,1,['down'],['down']
Availability,"It looks like you're using 32-bit Windows - or, if not, then at least the 32-bit version of the Java JDK. QuPath needs the 64-bit bit version, unfortunately. If your Windows supports it, then you could try uninstalling the Java JDK and installing the one on the download page flagged as 'Windows x64' (rather than 'Windows x86'). That might help. I don't see exactly why it would cause this error (at 98%, so close!), but it's my best guess... I've not seen that error before, but I've only been able to test it on a 64-bit system.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-414650057:262,down,download,262,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414650057,3,"['down', 'error']","['download', 'error']"
Availability,It may work if you open the image within a project and specify that OpenSlide should be the image server. This could have been the default in v0.1.2 and the underlying issue is that Bio-Formats does not support this particular sort of tiff fully. Parts of the error message also bring back memories. You may also reduce problems using Bio-Formats by putting the image inside another (sub)folder: https://github.com/ome/bioformats/issues/3343,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/382#issuecomment-561707434:260,error,error,260,https://qupath.github.io,https://github.com/qupath/qupath/issues/382#issuecomment-561707434,1,['error'],['error']
Availability,"It seems to work, not a single failure reported. Some stats:. ```; Converted 47303 regions.; 43 regions had ""warnings"" on conversion.; The warnings affected 64 ""problematic but small"" subregions.; Area changes stats (original_pixel_sq - fixed_pixel_sq):; mean 0.903476; std 1.829168; min -0.032314; 25% -0.003454; 50% -0.000293; 75% 0.732723; max 7.054605; ```; ![area_changes](https://user-images.githubusercontent.com/642252/78652097-8f837600-78c1-11ea-9345-c8e58fcf69b8.png). We are missing some visual inspection that I hope will happen soon, but I would tentatively declare this case closed. Thank you so much for your prompt help, this is the classiest support I have seen in quite a long time.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/434#issuecomment-610277278:31,failure,failure,31,https://qupath.github.io,https://github.com/qupath/qupath/issues/434#issuecomment-610277278,1,['failure'],['failure']
Availability,"It should be something like this:; ```groovy; import ij.CompositeImage; import ij.IJ; import ij.ImagePlus; import ij.process.LUT; import qupath.imagej.tools.IJTools; import qupath.lib.color.ColorToolsAwt; import qupath.lib.projects.Projects; import qupath.lib.regions.RegionRequest; import static qupath.lib.gui.scripting.QPEx.*. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def project = getProject(); def dirOutput = buildFilePath(Projects.getBaseDirectory(project).getAbsolutePath(), 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed; if (Thread.currentThread().isInterrupted()); break; // Request ImagePlus; def imp = IJTools.convertToImagePlus(server, RegionRequest.createInstance(path, downsample, core.getROI())).getImage() as ImagePlus; if (!imp.isComposite()) {; def display = getCurrentViewer().getImageDisplay(); def composite = new CompositeImage(imp, CompositeImage.COMPOSITE); for (int c = 0; c < server.nChannels(); c++) {; def channel = display.availableChannels().get(c); def color = ColorToolsAwt.getCachedColor(channel.getColor()); composite.setChannelLut(; LUT.createLutFromColor(color), c+1); composite.setC(c+1); composite.setDisplayRange(channel.getMinDisplay(), channel.getMaxDisplay()); }; composite.setC(1); imp = composite; }; IJ.save(imp, new File(dirOutput, core.getName() + '.tiff').getAbsolutePath()); }; print('Done!'); ```; I'm afraid I haven't had time to track down an appropriate image and check it works; it doesn't work for brightfield but hopefully does with fluorescence. (I'm trying to move away from GitHub for questions to use it properly as an issue tracker, so https://forum.image.sc/tags/qupath would be best for following up)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/202#issuecomment-520237540:381,down,downsample,381,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-520237540,4,"['avail', 'down']","['availableChannels', 'down', 'downsample']"
Availability,"It shouldn't be file size. Under *Help &rarr; Show setup options* I can restrict the RAM available to QUPath to 1GB and can still open the image without problems. You can also try the memory monitor from https://petebankhead.github.io/qupath/scripting/2018/03/06/script-memory-monitor.html. The log says `Not a file that OpenSlide can recognize`. It's not clear to me if *any* images are working for you using OpenSlide. I asked above: under the *Image* tab does it say *OpenSlide* beside the entry *Server type*? If you see that for any images, then we can conclude that OpenSlide is (at least partially) working. But if you always see *ImageJ server* or *Bio-Formats server*, then it probably isn't and that's the problem that needs to be solved. In that case, it would help to know if a separate installation of OpenSlide on your machine can read the image at all through any means.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371850256:89,avail,available,89,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371850256,1,['avail'],['available']
Availability,"It sounds like ```jep-3.6.1jar``` is not a problem any more, and it is instead related to the native libraries. I've just had a look on Ubuntu, and there's a ```jep.so``` and ```libjep.so```. Do you have both, and did you copy them both in?. When I do that in Ubuntu I don't get any library or class def errors. It still doesn't work though, due to an ```attr not found``` problem...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262797014:304,error,errors,304,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262797014,1,['error'],['errors']
Availability,"It sounds like a memory issue to me too, although I'm not certain. Hopefully the log can help. I plan to write a better script to help explore memory issues soon, but in the meantime you could try this very basic one:; ```groovy; // Print the current memory situation; def runtime = Runtime.getRuntime(); double scale = 1.0/1024.0/1024.0; print 'Max memory (MB): ' + (runtime.maxMemory() * scale); print 'Total memory (MB): ' + (runtime.totalMemory() * scale); print 'Used memory (MB): ' + ((runtime.totalMemory() - runtime.freeMemory()) * scale). // Try to reclaim whatever memory we can, including emptying the tile cache; javafx.application.Platform.runLater {; getCurrentViewer().getImageRegionStore().cache.clear(); System.gc(); }; ```. The top bit gives some numbers on current memory usage. Roughly, the 'max' is what QuPath/Java is allowed to use, the 'total' is what it is currently claiming the right to access (which might change over time, potentially increasing towards the 'max' as required), and the 'used' value is what is currently needed. The second bit of the script then tries to bring down the 'used' value by clearing out the cache of image tiles and reclaiming whatever memory if can. So if you run the script twice in a row, the 'used' memory value should generally be lower the second time, assuming you had previously been browsing around the image (and therefore filling up the tile cache). Running this script before running the cell detection might increase the chances of it ending successfully. If it still sometimes fails, but it looks like a memory problem, then either increasing the memory limit or decreasing the number of parallel threads could help - see https://github.com/qupath/qupath/wiki/Troubleshooting for more info.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/130#issuecomment-355845333:1106,down,down,1106,https://qupath.github.io,https://github.com/qupath/qupath/issues/130#issuecomment-355845333,1,['down'],['down']
Availability,"It sounds like this might be better addressed on the forum, preferably with an example file hosted and shared, the bio-formats tag added, and the error message from the log (question mark, upper right) included. ; There are some Versa related posts as well, at least one as recently as this year - https://forum.image.sc/t/qupath-cant-open-svs-images-from-aperio-versa-slide-scanner/93502/10",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1580#issuecomment-2276493467:146,error,error,146,https://qupath.github.io,https://github.com/qupath/qupath/issues/1580#issuecomment-2276493467,1,['error'],['error']
Availability,"It sounds like you need a simple, one-line script that contains your settings. QuPath should already record these settings for you under the 'Workflow' tab. Double-clicking an entry there should open/run the corresponding command with the appropriate settings... but this is only available for commands you've already run for the current image. To transfer settings across an image, press *Create script*. The automatically-generated script will probably contain too many lines, but you can simply delete the ones you don't want; for example, just keep the last line if the last thing you did was run the cell counting algorithm. The script you end up with probably looks something like this:; ```groovy; runPlugin('qupath.imagej.detect.nuclei.PositiveCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true, ""thresholdCompartment"": ""Nucleus: DAB OD mean"", ""thresholdPositive1"": 0.2, ""thresholdPositive2"": 0.4, ""thresholdPositive3"": 0.6, ""singleThreshold"": true}');; ```. You can then save this as a file with the extension ```.groovy``` and drag it onto QuPath again to open it. Press *Run &rarr; Run* from the top menubar to apply it. There is some more information under https://github.com/qupath/qupath/wiki/From-workflows-to-scripts",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/105#issuecomment-333905568:280,avail,available,280,https://qupath.github.io,https://github.com/qupath/qupath/issues/105#issuecomment-333905568,1,['avail'],['available']
Availability,"It will only show up when your pixels have a size. Your previous post showed that your images were missing metadata indicating what size each pixel was, so that option would not have been useful. Also, it is essentially a downsampling option, to make the cell detection run more smoothly.; https://www.youtube.com/watch?v=Hh-53Uqik-Y; Another description:; https://forum.image.sc/t/qupath-intro-choose-your-own-analysis-adventure/27906/12. Finally, questions like this should be directed to the forum, not the issues page.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/357#issuecomment-527537199:222,down,downsampling,222,https://qupath.github.io,https://github.com/qupath/qupath/issues/357#issuecomment-527537199,1,['down'],['downsampling']
Availability,"It won't load the pixel data if it doesn't need it, only the objects. However, it does this less efficiently than the old classifiers - and so will require *some* more memory. For example, I believe the old classifiers stripped away the ROIs from training objects, and therefore this saved some memory... so in practice it needed less than 200 MB per image. QuPath now probably does need the full 200 MB per image (but not 20 GB). I don't know how much RAM you have, and how much of it is given to pixels (rather than objects), so I can't estimate when this limit is reached in your case. Ultimately the new design will enable more powerful and flexible classifiers in future versions (because more information is available). We will also look to improve the efficiency in the future, and track the memory use better so that we can give more informative warnings before a crash. But all of this will take some time to write, and will not appear in v0.2.0. If there is a clear memory leak (and QuPath crashes with a small number of objects, or an exact error log can help us find a problem) then we'll try to fix it. But at this point, I don't know if that's the case.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-633901008:714,avail,available,714,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-633901008,2,"['avail', 'error']","['available', 'error']"
Availability,"It works for me, but perhaps the image you are trying to export is too large / lacks pixel size information, resulting in the image not being downsampled enough?. You could try replacing the line; ```groovy; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); ```; with; ```groovy; double downsample = 10; ```; or a higher value to specify that the image should be downsampled. Or try using one of the whole slide images from the early stages of the Wiki, where there are step-by-step guides. Otherwise, if you are able to attach your original image then I can try replicating your issue exactly - but for the images I've tried it works. > It's also quite hard to read your code with the different font size/bold formatting - you can format code by enclosing it as follows:; > ```groovy; > ```groovy; > // Code here; > ```; > ```; > See https://help.github.com/articles/creating-and-highlighting-code-blocks/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420294416:142,down,downsampled,142,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420294416,4,['down'],"['downsample', 'downsampled']"
Availability,"It works now if I use explicit strings:. String serverName = server.getShortServerName(); String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"",serverName,downsample, xi, yi, wi, hi, z, ext); IJ.save(imp, ""D:\\QMDownload\\5\\Leica\\Leica-Fluorescence-1_tif\\"" + name). INFO: Written tile 5 to D:\QMDownload\5\Leica\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif; INFO: X =4000.0",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472942759:176,down,downsample,176,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472942759,1,['down'],['downsample']
Availability,"It would also be good if you could copy and paste the full long error message, in case that helps identify exactly which library is failing to load (OpenSlide links to several).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/32#issuecomment-265488012:64,error,error,64,https://qupath.github.io,https://github.com/qupath/qupath/issues/32#issuecomment-265488012,1,['error'],['error']
Availability,"It would help to see your Workflow script, as I am not really sure what you mean in your first paragraph. Perhaps you were using the Points Tool?. It also sounds like you might be running into a lack of memory error, but I don't have enough information about your computer to help there either. QuPath requires significant resources (RAM) to run large scale cell detections and the program is failing to run Positive cell detection might indicate a problem there. Another possibility is that by default it only runs the cell detection on the ROIs that you have selected. If you want to run Positive cell detection on everything, you would need to make sure you have either nothing or everything selected.; I'm not sure I can be much more help without your [Workflow](https://github.com/qupath/qupath/wiki/Workflows) or more exact information about the steps you took.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-342841570:210,error,error,210,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-342841570,1,['error'],['error']
Availability,"It's definitely possible, as long as each annotation is of some manageable size (which it is here). A couple of blog posts are relevant:; * https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html; * https://petebankhead.github.io/qupath/scripting/2018/03/07/script-extracting-image-regions-to-imagej.html. For the first one, you can remove the `ImageIO.write(imgMask, 'PNG', fileMask)` bit if you don't need a binary image (which wouldn't be very meaningful here...). For the second you'd need to uncomment the `//IJ.save(imp, '/path/to/save.tif')` part, choose a sensible output name, and avoid showing the image through ImageJ. It should be possible to _Run &rarr; Run for project_ in both cases, so long as your image files all have distinct names. A recent script from Sara might help too: https://groups.google.com/d/msg/qupath-users/aHcikTZF9HE/dkcn0BoFBwAJ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/233#issuecomment-431887783:227,mask,masks,227,https://qupath.github.io,https://github.com/qupath/qupath/issues/233#issuecomment-431887783,1,['mask'],['masks']
Availability,"It's hard to tell much here without a clearer idea of what 'a lot of rather large and complex annotations' means, but it may very well be that there are too many vertices that that slows down the rendering too much (on the JavaFX application thread, same as the menus and rest of the GUI). If so it isn't really a bug, but more pushing QuPath with a different application than that for which it was previously designed/optimized... See https://github.com/qupath/qupath/wiki/Types-of-object for differences in object types, and why it's not really intended to have very large numbers of annotations. You might try having fewer vertices somehow, perhaps with _Objects &rarr; Simplify annotation shape_ or splitting larger annotations into smaller ones (since annotations outside the field of view do not need to be rendered). Or write a script that periodically converts annotations you won't need to change any more into detections. Or try to leave parts of the image that are particularly complex _unannotated_, and then interpret the unannotated region appropriately later. (I was actually looking into this today for completely different reasons, and may be able to improve the annotation handling somewhat... but it doesn't help you now)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/267#issuecomment-461569891:187,down,down,187,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461569891,1,['down'],['down']
Availability,"It's intended behavior, albeit with room for improvement. You can adjust the settings beyond what the slider permits by double-clicking on the label displaying the min/max display value: https://github.com/qupath/qupath/issues/26. For 8-bit it is straightforward and the range should be 0-255. For 16-bit and 32-bit it is not so straightforward; the actual range of the data can be much less than the range permitted by the bit-depth, and a slider from 0-65,535 would be extremely difficult to adjust with any level of accuracy. Also, for 16-bit images the actual camera may well be 12 or 14-bit - but that information isn't necessarily available in the image metadata. When an image is being opened, QuPath generates a histogram per channel and the default min/max values are taken from this. For large images, this must be calculated from a lower-resolution image. Because decreasing resolution likely involves smoothing, the maximum of the low-resolution image may well be less than the maximum of the full-resolution image.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/352#issuecomment-520907454:637,avail,available,637,https://qupath.github.io,https://github.com/qupath/qupath/issues/352#issuecomment-520907454,1,['avail'],['available']
Availability,Its running with no OpenSlide errors in the logs,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1325#issuecomment-1748522020:30,error,errors,30,https://qupath.github.io,https://github.com/qupath/qupath/pull/1325#issuecomment-1748522020,1,['error'],['errors']
Availability,Ive just downloaded and re-installed on my mac and its working now! What a pallava! I think I was tried to add extensions on the mac where they weren't needed and it seems to be working now. Ive just had a look at some tissue detections and it seems to be functional! I will continue using the software and would you mind if I checked in again if I continue having problems?. Thank you again,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/135#issuecomment-357061650:9,down,downloaded,9,https://qupath.github.io,https://github.com/qupath/qupath/issues/135#issuecomment-357061650,1,['down'],['downloaded']
Availability,Java heap space error,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/55:16,error,error,16,https://qupath.github.io,https://github.com/qupath/qupath/issues/55,1,['error'],['error']
Availability,"Just as another suggestion:. In our pathology dataset library we implemented functionality that allows you to retrieve a tile at a location with a certain size and at a **specific MPP** (see [here](https://github.com/Bayer-Group/pado/blob/738ed0f814297f22ba005d5b30d254244e23ef82/pado/images/image.py#L506-L508)). Because after talking to a few researchers, they usually don't want to think about the downsample values of levels in the file. They want tiles at a specific magnification / mpp / resolution.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072#issuecomment-1279321821:401,down,downsample,401,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072#issuecomment-1279321821,1,['down'],['downsample']
Availability,"Just linked this in the forums as well, but if you can define how you want to draw the annotation within a text file (groovy script) you might be able to use:; https://groups.google.com/forum/#!searchin/qupath-users/command$20line$20|sort:date/qupath-users/lE5AJDcxA28/JR0UouPLAAAJ; to get started. The following positions the viewer (although you need to create the viewer first, see the whole file in the link below):; ```; viewer.setDownsampleFactor(downsample); viewer.setCenterPixelLocation(xCoordinate, yCoordinate);; ```; from: https://gist.github.com/Svidro/86fb224d69484ae5955631ce68d27054#file-slide-explore-groovy; which was modified from who knows where... I think Pete's memory monitor. Exporting simple annotations as coordinate arrays is fairly straightforward (and definitely on the forums somewhere), but I am not as sure about XML formatting...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/173#issuecomment-389972084:453,down,downsample,453,https://qupath.github.io,https://github.com/qupath/qupath/issues/173#issuecomment-389972084,1,['down'],['downsample']
Availability,"Labels don't seem to be stored in a consistently identifiable away across scanners and file formats, and I'm afraid I don't think there is any reliable way for QuPath to identify automatically if a 'small image' within a larger file really is a slide label or something else. This would all be much easier if QuPath only needed to support a few scanners, and especially if it was written with file format specifications available, but unfortunately we don't have that much information :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/40#issuecomment-622246686:143,reliab,reliable,143,https://qupath.github.io,https://github.com/qupath/qupath/issues/40#issuecomment-622246686,2,"['avail', 'reliab']","['available', 'reliable']"
Availability,"Latest commit adds more options to restrict where live pixel classifier prediction is calculated. Previously, it could be restricted to annotations - but using their full bounding box. This could sometimes still result in very large regions being processed. ![annotations_bounds](https://user-images.githubusercontent.com/4690904/195979231-ee656727-83dd-4569-80d7-318beb8c4c6f.png). Now it's also possible to restrict using the annotation ROI directly (i.e. the ROI shape intersects the tiled region that may be processed). This can reduce the amount of processing required substantially in some cases. ![annotations_only](https://user-images.githubusercontent.com/4690904/195979232-ef0c6862-d715-47b9-a022-0f4267f1c47c.png). Both options still exist, since the more complex calculations to restrict the predicted regions could *potentially* slow things down in some cases.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1076#issuecomment-1279704970:854,down,down,854,https://qupath.github.io,https://github.com/qupath/qupath/pull/1076#issuecomment-1279704970,1,['down'],['down']
Availability,"Left quotes have been known to lead to unexpected behaviours when running scripts.; Now, if a script throws an Exception, QuPath checks whether there is at least one left (single/double) quote and notify the user in the error message.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/636:220,error,error,220,https://qupath.github.io,https://github.com/qupath/qupath/pull/636,1,['error'],['error']
Availability,"Library(System.java:1122); 	at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:59); 	at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:72); 	at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:116); 	at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1099); 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:645); 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:437); 	at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63); 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863); 	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326); 	at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295); 	at java.security.AccessController.doPrivileged(Native Method); 	at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294); 	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95); 	at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); 	at com.sun.glass.ui.gtk.GtkApplication.lambda$null$48(GtkApplication.java:139); 	at java.lang.Thread.run(Thread.java:748); 13:20:08.246 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 13:20:08.246 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 13:20:08.256 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 13:20:17.509 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Calling Platform.exit();; ```. In Centos 6, I found some information about the error message ""j java.lang.Object.<clinit>()V+0"" : this may be a stack problem. I tried to change the thread stack size with -Xss in QuPath.cfg [JVMOptions], but I can not do it : . ```; 13:11:03.460 [main] [INFO ] qupath.QuPath - Launching QuPath with args: ; QuPath Error invoking method.; QuPath Failed to launch JVM; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/150#issuecomment-368857650:2856,error,error,2856,https://qupath.github.io,https://github.com/qupath/qupath/issues/150#issuecomment-368857650,2,"['Error', 'error']","['Error', 'error']"
Availability,Linux binaries are only available for the very first release (v0.0.1). There hasn't yet been any audible demand for updated binaries... but they should at least be provided for v0.1. Ideally these would use OpenJDK and OpenJFX... although so far it has proven easier to create them using Oracle's JDK. Any Linux users who would like to see Linux binaries are invited to comment here...,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/2#issuecomment-258683889:24,avail,available,24,https://qupath.github.io,https://github.com/qupath/qupath/issues/2#issuecomment-258683889,1,['avail'],['available']
Availability,"Log a meaningful warning if loading a classifier (object, pixel?) for an image where not all required features are available. Note that it is potentially acceptable for features to be missing in some cases (e.g. with RTrees). I'd suggest emitting the warning only if *all* valid 'classifiable things' are missing one or more feature. The aim is to warn the user if loading a classifier that is inappropriate for the current image. See https://forum.image.sc/t/how-to-use-a-classifier-in-qupath/34790/5",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/411:115,avail,available,115,https://qupath.github.io,https://github.com/qupath/qupath/issues/411,1,['avail'],['available']
Availability,Log any errors occurring in a script,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/730:8,error,errors,8,https://qupath.github.io,https://github.com/qupath/qupath/pull/730,2,['error'],['errors']
Availability,"Looks good! I won't get a chance to try the code for a few days, but I will soon - sorry for the delay... Since you mention adding it to the preferences, this is how it works:; ```java; import javafx.beans.property.DoubleProperty;; import qupath.lib.gui.QuPathGUI;; import qupath.lib.gui.prefs.PathPrefs;. DoubleProperty preference = PathPrefs.createPersistentPreference(""ijFreeMemory"", 0.5);; QuPathGUI.getInstance().getPreferencePanel().addPropertyPreference(; preference, Double.class, ""Extract region memory limit"", ""ImageJ"",; ""The proportion free memory that ImageJ is allowed to use when extracting regions (set > 1 to use as much memory as possible)"");; ```. And your reference to using it elsewhere reminds me of the command to extract regions [here](https://github.com/qupath/qupath/blob/v0.1.2/qupath-extension-ij/src/main/java/qupath/imagej/gui/commands/ExtractRegionCommand.java#L120). Looking back at that code, it seems to contain an error in using totalMemory rather than the proper combination of max/total/free that you used. That is probably another candidate for improvement, and for calling your new method...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/134#issuecomment-357533150:948,error,error,948,https://qupath.github.io,https://github.com/qupath/qupath/pull/134#issuecomment-357533150,1,['error'],['error']
Availability,"Looks like I need to also get my head around `includeBuild`, though the gradle documentation is as abstract as ever. I don't really see a huge difference either way. Would we be pushing updates to the openslide (or other ""core"" extensions) without making a new QuPath release?. I guess it would make issue tracking (and responsibilities) more granular if we can gradually slim down the qupath repo, though if that has the side-effect of making issues harder to find, then it's not really great. It is straightforward to extract the git history: https://docs.github.com/en/get-started/using-git/splitting-a-subfolder-out-into-a-new-repository",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1325#issuecomment-1714324343:377,down,down,377,https://qupath.github.io,https://github.com/qupath/qupath/pull/1325#issuecomment-1714324343,1,['down'],['down']
Availability,M1 github actions runner now available,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1458:29,avail,available,29,https://qupath.github.io,https://github.com/qupath/qupath/issues/1458,1,['avail'],['available']
Availability,"Main changes:. * Optionally sync brightness/contrast settings across viewers; * Feature request from @zmikulski & @saramcardle; * Makes it easier to adjust colors and sliders with multiple images open simultaneously.; * Only has an impact if the images are 'compatible', i.e. the same channels available in the same order, and the ; * Support viewing log histogram counts; * Make it much easier to work with histograms that have a tall peak; * Rename *Keep settings* option to *Apply to similar images*; * Make it more obvious which channel is selected & prevent adjusting sliders if this is hidden; * Refactor histogram code to make it more reusable. ![BC log](https://github.com/qupath/qupath/assets/4690904/ec63bae3-dd33-4aed-aedb-5badb57a12b1)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1335:294,avail,available,294,https://qupath.github.io,https://github.com/qupath/qupath/pull/1335,1,['avail'],['available']
Availability,Many errors logged when using Bio-Formats memoization with Java 17,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/957:5,error,errors,5,https://qupath.github.io,https://github.com/qupath/qupath/issues/957,1,['error'],['errors']
Availability,"Many improvements and new features, including:. #### Multiplexed analysis & Object classification; * Completely rewritten object classifier (currently flagged with 'New'! in the menus); * Support for multi-class classification with composite classifiers; * New command to create single-measurement classifiers ; * New command to apply intensity (sub)classification; * JSON serialization for classifiers; * New 'Centroids only' cell display mode to visualize cells with complex classifications; * Improved Brightness/Contrast support; * Filter box to quickly find specific channels within long lists; * New scripting methods to set display range, e.g. setChannelDisplayRange(channel, min, max). #### Classes & annotations; * Revised 'Annotations' tab; * New options to set the available class list (e.g. from existing objects, image channels); * Change class visibility with spacebar (toggle), s (show) or h (hide); * Select objects with specific classifications more easily; * More consistent annotation menus; * Major changes to annotation ROI manipulation; * 'Duplicate annotations' applies to multiple selections; * 'Merge annotations' and 'Split annotations' work with point ROIs, not only areas; * 'Make inverse' uses ROIs from multiple annotations (within the same plane); * More ROI manipulation commands are scriptable, update selections when complete; * Counting tool improvements. ### Images & projects; * Bio-Formats series selector (enables specific series to be accessed outside projects); * More project options; * Duplicate images, optionally with associated data files; * Fixed issue with 'Add images' pane, where the window could be too large for some screens; * 'Add images' pane now supports Drag & Drop; * 'Add images' pane now supports .qpproj files to import images & data from other projects; * New SVG export options (made possible by JFreeSVG). ### Other things; * File -> Quit menu item added; * Viewer no longer 'resets' location when opening the same image or reloading dat",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/400:776,avail,available,776,https://qupath.github.io,https://github.com/qupath/qupath/pull/400,1,['avail'],['available']
Availability,"Mmmm, I find I have no way to hide the unclassified TMA cores. And sorting my ascending/descending seems to only impact the two that I gave classes to - the rest remain stubbornly as they were (both before and after the classified core) - so I initially didn't think sorting was implemented. Since we aren't dealing with NaNs, I have the feeling that string sorting would make sense here... even if that means 'Unclassified' being sorted as a string. And actually... what do you think about having 'Name' as another potential 'Measurement'... which we could relabel 'Sort by'? Then we could change 'Show measurement' to 'Show value' - both to save space, and because we're no longer limited to measurements. The name is especially informative for TMA cores, but it looks like we don't currently have a way to display it. Minor thing: when I assign a classification to a core _after_ displaying the grid, this becomes available in the 'Classes' drop-down - which is nice. The less nice thing is that all the classes there appear deselected.... but aren't necessarily not visible.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1588#issuecomment-2321529903:917,avail,available,917,https://qupath.github.io,https://github.com/qupath/qupath/pull/1588#issuecomment-2321529903,2,"['avail', 'down']","['available', 'down']"
Availability,"My command should be consistent with the latest documentation. The script does in fact run but it prints ""null"" for the current image data which seems to mean that the image is never loaded. If I try to run a pixel classifier in the same script I get an error which seems consistent with the image not being loaded:. UnsupportedOperationException at line 9: Interface can't be instantiated! Interface name: qupath.lib.classifiers.pixel.PixelClassifier",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/513#issuecomment-639520268:254,error,error,254,https://qupath.github.io,https://github.com/qupath/qupath/issues/513#issuecomment-639520268,1,['error'],['error']
Availability,"My fault for [trying to write a valid tar from memory](https://xkcd.com/1168/) but the current linux build ends up as a tar.xz that contains the build/dist/QuPath directory, rather than the top level being QuPath",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1485:3,fault,fault,3,https://qupath.github.io,https://github.com/qupath/qupath/pull/1485,1,['fault'],['fault']
Availability,"My nodes run CentOS, so I can't use Qupath due to the version of libc :. > QuPath; > /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.21' not found (required by QuPath). So I try to run Qupath in a Ubuntu container, and java core dump : ; > singularity exec ubuntu_1604.simg .../QuPath/QuPath ; > A fatal error has been detected by the Java Runtime Environment:; > ; > SIGBUS (0x7) at pc=0x00007fc8990a9ca1, pid=95904, tid=0x00007fc8ab79e740; > ; > JRE version: (8.0_111-b14) (build ); > Java VM: OpenJDK 64-Bit Server VM (25.111-b14 mixed mode linux-amd64 compressed oops); > Problematic frame:; > j java.lang.Object.<clinit>()V+0; > ; > Core dump written. Default location: .../QuPath/app/core or core.95904; > ; > An error report file with more information is saved as:; > .../QuPath/app/hs_err_pid95904.log; > Memory fault (core dumped) . Any idea ?",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/150:304,error,error,304,https://qupath.github.io,https://github.com/qupath/qupath/issues/150,3,"['error', 'fault']","['error', 'fault']"
Availability,"My thought was that with the addition of merging the data set (links below), you can still end up with a final sheet that represents the data points from your cores. It would be one project per TMA, but at least you could fairly easily get the results right now, rather than waiting for m3. Or I guess you could continue to use 1.3, that works as well :); https://forum.image.sc/t/h-score-by-object-class/27490/2?u=research_associate; If you want the visualization of your cores, that wouldn't help at all, of course. If you are in Zen (not sure which all versions), you can uncheck ""show scenes individually"" (I might not be remembering the exact wording, it is just below the image area, slightly to the left) to get an overview image. We have used that to create downsampled overviews of multiple wells on a 6 well plate, for example.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/337#issuecomment-509669310:766,down,downsampled,766,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-509669310,1,['down'],['downsampled']
Availability,"Neat idea, would love to see the script if you get this working! I wonder how easily you could add the mask as an extra channel in the .tiff image and keep the original for reference as well?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/166#issuecomment-381163241:103,mask,mask,103,https://qupath.github.io,https://github.com/qupath/qupath/issues/166#issuecomment-381163241,1,['mask'],['mask']
Availability,"New additions to `ImageOps` and `OpenCVTools` intended to make scripting with OpenCV a lot more straightforward. An example:. ```groovy; import ij.*; import ij.gui.Roi; import ij.process.ImageProcessor; import qupath.lib.images.servers.PixelType; import org.bytedeco.opencv.global.opencv_core; import org.bytedeco.opencv.opencv_core.*. // Request a region and convert to an OpenCV Mat; double downsample = 1.0; def roi = getSelectedROI(); def server = getCurrentServer(); def region = RegionRequest.createInstance(server.getPath(), downsample, roi). def img = server.readBufferedImage(region); def mat = OpenCVTools.imageToMat(img). // Define a list of operations to apply sequentially; // Here, convert to 32-bit and then apply a Difference of Gaussian filter; def opList = [; ImageOps.Core.ensureType(PixelType.FLOAT32),; ImageOps.Core.splitSubtract(; ImageOps.Filters.gaussianBlur(2.0),; ImageOps.Filters.gaussianBlur(5.0); ); ]; def op = ImageOps.Core.sequential(opList). // Apply the op to the image, handling any necessary padding; mat = ImageOps.padAndApply(op, mat). // Print some stats, per channel and across all channels; println 'Output channel mean: ' + OpenCVTools.channelMean(mat); println 'Output channel std dev: ' + OpenCVTools.channelStdDev(mat); println 'Output global mean: ' + OpenCVTools.mean(mat); println 'Output globalel std dev: ' + OpenCVTools.stdDev(mat). // Show result using ImageJ; def imp = OpenCVTools.matToImagePlus(""Result"", mat); imp.show(); ```. Additionally added `GroovyCV` to provide more assistance through Groovy categories and operator overloading. This is a *lot* more experimental, but here's a script:; ```groovy; import ij.*; import ij.gui.Roi; import ij.process.ImageProcessor; import org.bytedeco.opencv.global.opencv_core; import org.bytedeco.opencv.opencv_core.*. double downsample = 1.0; def roi = getSelectedROI(); def server = getCurrentServer(); def region = RegionRequest.createInstance(server.getPath(), downsample, roi). /**; * We can do fun ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/723:393,down,downsample,393,https://qupath.github.io,https://github.com/qupath/qupath/pull/723,2,['down'],['downsample']
Availability,"New method (+ corresponding test) to extract pixels from a ROI using OpenCV.; ; It extracts pixels from the input with non-zero values in the corresponding mask, limited to the requested (zero-based) channel index. The mask doesn't have to be multichannel; it could be, but also could be just a single channel that should be applied to all channels.; ; The corresponding unit test generates a binary image of a circle, and then duplicate it to use as the main input image. It checks if the mean value is 1 with the mask, and less than 1 without it.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1319:156,mask,mask,156,https://qupath.github.io,https://github.com/qupath/qupath/pull/1319,3,['mask'],['mask']
Availability,"Nice, I can confirm that does appear to be working through fast.ai - ; ![image](https://user-images.githubusercontent.com/85200392/174496575-f5f147d1-855f-4ccb-81a5-d87fb78c5aa9.png); The masks are loading the correct number of channels in the right places now, at least!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/993#issuecomment-1159793793:188,mask,masks,188,https://qupath.github.io,https://github.com/qupath/qupath/issues/993#issuecomment-1159793793,1,['mask'],['masks']
Availability,No CUDA available in instantseg,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1634:8,avail,available,8,https://qupath.github.io,https://github.com/qupath/qupath/issues/1634,1,['avail'],['available']
Availability,"No external dependencies should be needed - a Java Runtime Environment is included in the installation. A google search for `""the installer encountered an error that caused the installation to fail""` reveals quite a few discussions about all kinds of different software applications where the error appeared, but I'm afraid I can't replicate the issue so I can't test any of the proposed solutions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/832#issuecomment-956171629:155,error,error,155,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956171629,2,['error'],['error']
Availability,"No need to install anything extra to run scripts, but you can also just change the downsample for TMA export in the preferences. > Please use the forum at https://forum.image.sc/tags/qupath for questions as described whenever you try to create an issue here... it helps keep the answers in one, searchable place. GitHub issues is intended just for bugs.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/317#issuecomment-494029538:83,down,downsample,83,https://qupath.github.io,https://github.com/qupath/qupath/issues/317#issuecomment-494029538,1,['down'],['downsample']
Availability,"No problem @medskillz !. @Tkilvaer Yes, I recall the change was recent. It came up on the forum:; * https://forum.image.sc/t/making-shared-library-file-type-executable-on-linux/37778; * https://forum.image.sc/t/exe-missing-with-qupath-0-2-0-m11-and-0-2-0-m12-releases/38073. It wasn't intentional - but I don't know exactly what update caused it. I don't see how it could have been a change in the QuPath code, since the launcher is generated using jpackage. I don't know if something in Ubuntu or jpackage changed that caused this. Happy to include a workaround if anyone finds one, but since the software does still run (and the number of Linux downloads is much lower than other platforms) it isn't something we've been exploring much.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/546#issuecomment-650188152:647,down,downloads,647,https://qupath.github.io,https://github.com/qupath/qupath/issues/546#issuecomment-650188152,1,['down'],['downloads']
Availability,Not for earlier releases; https://github.com/qupath/qupath/commit/857d7670007e31631a97e7a854aba098ebc70d34 + JDK 14 fixes any handshake errors I have seen and will be in future releases.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/436#issuecomment-612965106:136,error,errors,136,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-612965106,1,['error'],['errors']
Availability,"Not quite sure what you mean, but Qupath just closes. Attaching some error reports. [hs_err_pid19784.log](https://github.com/qupath/qupath/files/4650037/hs_err_pid19784.log); [hs_err_pid1100.log](https://github.com/qupath/qupath/files/4650038/hs_err_pid1100.log); [hs_err_pid17304.log](https://github.com/qupath/qupath/files/4650039/hs_err_pid17304.log)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630760110:69,error,error,69,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630760110,1,['error'],['error']
Availability,"Not really a solution, but a thought... they just updated BioFormats to 6.0.0, so I am guessing you downloaded the newest version on the new computer. You might try copying the BioFormats jar files from your Extensions folder on the older PC, and using them instead to see if it allows you to open the files again. If that works, there was probably something in the update that either messed up the .scn reader on the BioFormats end, or broke some kind of connection in the QuPath extension.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/271#issuecomment-467942230:100,down,downloaded,100,https://qupath.github.io,https://github.com/qupath/qupath/issues/271#issuecomment-467942230,1,['down'],['downloaded']
Availability,"Notable changes:; * Translucent overlay for live prediction (useful to identify if a tile has been processed when at least one class is transparent); * New 2D/3D thinning & interpolation classes (experimental, not yet used - but available now for scripts); * Many internal improvements, particularly around OpenCV/ImageOps",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/706:229,avail,available,229,https://qupath.github.io,https://github.com/qupath/qupath/pull/706,1,['avail'],['available']
Availability,"Note that there's a `requestedPixelSize` used to control the resolution - it's set for a whole slide image (with some pretty aggressive downsampling...). You can either change the `requestedPixelSize` or `downsample`, where it is used later in the script.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/200#issuecomment-411347979:136,down,downsampling,136,https://qupath.github.io,https://github.com/qupath/qupath/issues/200#issuecomment-411347979,2,['down'],"['downsample', 'downsampling']"
Availability,"O: 521 nuclei detected (processing time: 5.53 seconds); INFO: Processing complete in 34.91 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Writing object hierarchy with 29994 object(s)...; INFO: Image data written to N:\Faculty-of-Medicine-and-Health\LICAP\DATA\PTHY\Pathology\Breast Group\BCCTB Samples\Audits\BCN QA 2017\Frozen samples QuPath tumourstromaratio\Batch_2\Tumour\402428.qpdata in 2.08 seconds; INFO: Training size: 33x5031; INFO: Responses size: 1x5031; INFO: RTrees classifier termination criteria: { type: 1, maxCount: 50, epsilon: 0.0}; ERROR: QuPath exception; at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$354(GlassViewEventHandler.java:416); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:415); at com.sun.glass.ui.View.handleMouseEvent(View.java:555); at com.sun.glass.ui.View.notifyMouse(View.java:937); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191); at java.lang.Thread.run(Thread.java:745); Caused by std::exception: bad allocation at org.opencv.ml.StatModel.train_0(Native Method); at org.opencv.ml.StatModel.train(StatModel.java:74); at qupath.opencv.classify.OpenCvClassifier.createAndTrainClassifier(OpenCvClassifier.java:250); at qupath.opencv.classify.ParameterizableOpenCvClassifier.createAndTrainClassifier(P",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/160:4942,ERROR,ERROR,4942,https://qupath.github.io,https://github.com/qupath/qupath/issues/160,1,['ERROR'],['ERROR']
Availability,"OK, it turns out that adding `MOUSE_RELEASED` to `ignoreTypes` is not needed (any more). At some point, I made the logic of the middle button [robust to fast clicks](https://github.com/qupath/qupath/blob/ca41a4d033eb65c5f9ee1c12a64bf1e96f60276d/qupath-gui-fx/src/main/java/qupath/lib/gui/QuPathGUI.java#L1108-L1112). I suspect that consuming the extra events generated by subsequent middle click events (`e.getClickCount() > 1`) is enough. Then all I do is check is `e.isMiddleButtonDown()` and I don't see anything weird happening whether I do rapid middle button clicks or if I press the left button or use the mouse wheel while the middle button is pressed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1313554395:143,robust,robust,143,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1313554395,1,['robust'],['robust']
Availability,Object connections cause moderate viewer lag when downsample factor is less than 1,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1069:50,down,downsample,50,https://qupath.github.io,https://github.com/qupath/qupath/issues/1069,1,['down'],['downsample']
Availability,"Ofcourse!; I see from the log now that all the objects were unclassified.; So I understand why I don't see any colours. But as the structures are quiet different I would think that it should be able to come up whit a classifier right?; ![image](https://user-images.githubusercontent.com/36917491/45081418-75871d80-b0f7-11e8-9ed9-373228da976e.png). Log-file:; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Openslide: Property not available: openslide.objective-power; INFO: Test reading thumbnail with openslide: passed (BufferedImage@77accd0e: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 193 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); INFO: Returning server: OpenSlide for L:\basic\divg\CEMM-Lexor\SannetH\1. SANNE\Project 2. IHC Validation PICCOLO and COIN\Qupath PICCOLO\R-PICCOLO-16_CDX2-88_20x.tiff; INFO: Estimating H-DAB staining; INFO: Image data set to ImageData: Brightfield (H-DAB), R-PICCOLO-16_CDX2-88_20x; INFO: Will (re)compute TMA grid...; INFO: Processing complete in 1.26 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.dearray.TMADearrayerPluginIJ {""coreDiameterMM"": 0.7, ""labelsHorizontal"": ""1-16"", ""labelsVertical"": ""A-J"", ""labelOrder"": ""Row first"", ""densityThreshold"": 5, ""boundsScale"": 105}; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 1932 nuclei detected (processing time: 3.82 seconds); INFO: Processing complete in 3.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoot",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/210#issuecomment-418647572:472,ERROR,ERROR,472,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572,2,"['ERROR', 'avail']","['ERROR', 'available']"
Availability,"Oh dear, that does look suspiciously similar to the picture in @Svidro's link. As it happens, I've just been working on a pretty major revision of the QuPath Bio-Formats extension this morning. It should solve a lot of issues, but I don't know if it will solve this one. However, it will at least give some extra entries in the preference pane that would allow you to selectively enable/disable Bio-Formats for specific image extensions, so that you could ensure that OpenSlide is used for scn if you wanted. If nothing too bad appears in the next couple of hours I'll merge the changes with the main branch and then the extension will be available for testing. Or see [here](https://github.com/petebankhead/qupath-bioformats-extension) if you're happy to compile it yourself while it's still a work-in-progress.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-358633899:639,avail,available,639,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-358633899,1,['avail'],['available']
Availability,"Oh dear, that sounds worse - I am using a Mac, and no extra extensions should be needed. Does the software start ok? I have seen a problem on some older Macs where it wasn't possible to start QuPath because of an incompatibility with OpenCV... but if the window opens at all then that shouldn't be the issue. You should be able to open a JPEG just by dragging it onto the main QuPath window. Could you try with the image *CMU-1.svs* that is suggested at https://github.com/qupath/qupath/wiki/First-steps ?; If there are problems, could you also choose *View &rarr; Show log* and report back if you see any error messages?. The CZI problem sounds like the one I met before, and will try to resolve next week.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/135#issuecomment-357055699:606,error,error,606,https://qupath.github.io,https://github.com/qupath/qupath/issues/135#issuecomment-357055699,1,['error'],['error']
Availability,"Oh, definitely not too complicated, as we don't really know what the rest of the slides look like. Your method is far more robust, and if there are other dark blotches or other unwanted clumps of cell pellets/detritus on the images, a classifier would be able to pick that up, while simple tissue detection will simply look for ""anything"" that is ""dark."" . It does go to show how QuPath has multiple ways to accomplish the same task though, depending on your needs!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/121#issuecomment-349101867:123,robust,robust,123,https://qupath.github.io,https://github.com/qupath/qupath/issues/121#issuecomment-349101867,1,['robust'],['robust']
Availability,"Ok, I tested the ""Offline TMA Data Viewer"" (not sure what to call this method!). I exported TMA data (qptma) for all 6 TMA slides. I loaded one file in the TMA Data Viewer in a new QuPath instance which seem to load data for all the qptma files present in the folder ! is that expected behavior ?. With this method the table is very smooth. It makes sense to work offline if I want to look at the combined data from multiple TMAs after completing the cell detection and classification. I opened one of the qptma file using notepad. I did not see any measurements or survival data in the file content - however the TMA Data Viewer was able to populate all the columns including measurements. Where is the data being pulled from ? what kind of magic is this. I may also have discovered additional bug(s):. 1. I am seeing columnImage is null error in the log at loading - everything seem to work regardless. The same error is thrown everytime I toggle ""Group by ID"" as well.; ```; ERROR: QuPath exception: Cannot invoke ""javafx.scene.control.TreeTableColumn.setPrefWidth(double)"" because ""columnImage"" is null; java.lang.NullPointerException: Cannot invoke ""javafx.scene.control.TreeTableColumn.setPrefWidth(double)"" because ""columnImage"" is null; at qupath.lib.gui.tma.TMASummaryViewer.lambda$refreshTableData$66(TMASummaryViewer.java:1463); ```; 2. In the log I also noticed ```WARN: Unable to find censored column - survival data will be uncensored``` - not sure why ? ; ```; INFO: Update check for https://github.com/qupath/qupath; WARN: You need to enable the startup script in the Preferences if you want to run it; INFO: Starting QuPath with parameters: []; INFO: Update check for https://github.com/qupath/qupath-extension-stardist; INFO: Predicate set to: null; INFO: Parsed 84 from HS-1_Scan1.ome.tif.qptma (84 total); INFO: Parsed 84 from HS-2_Scan1.ome.tif.qptma (168 total); INFO: Parsed 84 from HS-3_Scan1.ome.tif.qptma (252 total); INFO: Parsed 84 from HS-4_Scan1.ome.tif.qptma (336 total)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1083#issuecomment-1289564901:839,error,error,839,https://qupath.github.io,https://github.com/qupath/qupath/issues/1083#issuecomment-1289564901,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Ok, I understand. No one expects support on one week old experimental features on an experimental build of a testversion of 0.2.0:) Got an error message from Windows this time, by the way, and it seems to be a memory issue. ![error message qupath memory](https://user-images.githubusercontent.com/43611111/82339241-1d3ca000-99ee-11ea-830f-7595fa33621b.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630858222:139,error,error,139,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630858222,2,['error'],['error']
Availability,"Ok, I've managed to reproduce this issue on one computer (out of 3 tested). The image used was `OS-1.ndpi`. * OS: MacOs (Mojave); * CPU: 2.3 GHz Intel Core i9; * 32 Gb RAM; * Radeon Pro 560X 4 Gb. Same problem as mentioned above. No overlay is shown, except when `density radius < 10`, where the overlay very slightly appears (see screenshot below). Overlay opacity slider is obviously on max. ; <img width=""885"" alt=""Screenshot 2021-07-02 at 10 58 59"" src=""https://user-images.githubusercontent.com/47279429/124259772-cb3dd780-db26-11eb-861c-e8bcffb7a0e3.png"">; ________; ### If the value is < 10; I can click on `Find hotspot` and see this temporary visualisation (see screenshot below). <img width=""885"" alt=""Screenshot 2021-07-02 at 11 04 18"" src=""https://user-images.githubusercontent.com/47279429/124259867-f0324a80-db26-11eb-88b3-7f3e352a22e7.png"">. But then, when clicking `Apply`, it gives me this long error message (open_cv):; ```; ERROR: QuPath exception: Could not initialize class org.bytedeco.opencv.global.opencv_imgproc; java.lang.NoClassDefFoundError: Could not initialize class org.bytedeco.opencv.global.opencv_imgproc; at qupath.opencv.tools.OpenCVTools.findRegionalMaxima(OpenCVTools.java:2276); at qupath.lib.analysis.heatmaps.DensityMaps.findHotspots(DensityMaps.java:613); at qupath.process.gui.commands.density.DensityMapUI$HotspotFinder.fire(DensityMapUI.java:621); at qupath.process.gui.commands.density.DensityMapUI.lambda$createDensityMapAction$2(DensityMapUI.java:324); at org.controlsfx.control.action.Action.handle(Action.java:419); at org.controlsfx.control.action.Action.handle(Action.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(Compos",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/776#issuecomment-872890572:912,error,error,912,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-872890572,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Ok, good. Can you provide more information about what exactly is printed when running the build (including before the error)?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-630746162:118,error,error,118,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630746162,1,['error'],['error']
Availability,"Ok, so I've learned that OpenCV has a maximum number of channels, defined as `CV_CN_MAX`. That's set as 512, so any attempt to exceed that will fail. Without a major rewrite of the pixel classifier, the most QuPath can do is provide a more informative error message.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1092122418:252,error,error,252,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092122418,1,['error'],['error']
Availability,"Okay. Will look forward to the new version.; Thank you for your help, Pete. Best regards,; Kathy Yee. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Tuesday, June 9, 2020 at 11:50 AM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). I'll close this issue, v0.2.1 should be available next week containing this and some other minor fixes. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-641435861&data=02%7C01%7Ckyee%40umc.edu%7C9d731bc401b64e12fc1608d80c953380%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637273182238802631&sdata=35kLxw2W6caULJz3%2BBpsA14p3ff4jQMudfZyvd2fDBk%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNE2ZSFDWOSMQL5V6SOTRVZR43ANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7C9d731bc401b64e12fc1608d80c953380%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637273182238812636&sdata=euPaoon04N%2F82Kf22ZIMOfEzWDQjc4LmxotHQSNCcaA%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/518#issuecomment-641438041:461,avail,available,461,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-641438041,2,"['avail', 'error']","['available', 'error']"
Availability,"On some images there's a lot of artifact, on others the program doesn't find any cores. I want to use the downstream functions after cores are identified: e.g. Core labeling and quantification, and these functions seem to require the tma grid - not just oval annotations. How to make a tma grid from scratch with manual supervision?",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/77:106,down,downstream,106,https://qupath.github.io,https://github.com/qupath/qupath/issues/77,1,['down'],['downstream']
Availability,"One idea may be to forego cell detection (at least as a first step), and instead create square tiles or superpixels, add intensity/texture features to them, and then classify these. There is then a *Tile classification to annotations* command to merge the classified tiles. Cells could optionally be detected inside the annotations at the end, if still required. Alternatively, you could use *Extensions &rarr; ImageJ &rarr; Send region to ImageJ* to get a (possibly heavily downsampled) version of the image into ImageJ. The cells will be passed along too on an ImageJ overlay, with colors and names set according to their original classification. Then it becomes an ImageJ scripting/macro problem to combine these into regions - maybe using distance or voronoi transforms. *Plugins &rarr; Send ROI to QuPath* can be use to send back annotations to QuPath, if they are needed. In the event that you don't really care about the cell boundaries, you can open up the *Point* tool (three circles) and choose *Convert detections to points* first to get centroids only before sending them to ImageJ. I'm not sure if either of these do what you need, and the second may be a bit overly complicated. Could you say a bit more about the aim?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/70#issuecomment-298747073:475,down,downsampled,475,https://qupath.github.io,https://github.com/qupath/qupath/issues/70#issuecomment-298747073,1,['down'],['downsampled']
Availability,"One more thing: should we expose the builders in `qupath.lib.images.servers.ImageServers.*` so that you can test what kind of `ImageServer` is being used, if the builder is available?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1489#issuecomment-2278093823:173,avail,available,173,https://qupath.github.io,https://github.com/qupath/qupath/pull/1489#issuecomment-2278093823,1,['avail'],['available']
Availability,"One problem I have occasionally seen with CZI is that a request for the *entire* image is made whenever only a small part is needed. This inevitably causes memory problems, but I have not yet been able to investigate when and why this might happen only for specific images. In the meantime I'd rather avoid suggesting that a huge amount of memory is required to use QuPath; it shouldn't be. Certainly with less memory available there may be problems if running something especially intensive (e.g. cell detection, even subcellular detection) across very large regions, but in that case the easiest solution is simply to restrict the analysis to smaller regions. But yes, if you can spare a few more GB it would be very good to increase what is available to QuPath. For what it's worth, my laptop has 16 GB RAM and I give about 8 GB to QuPath, although I've also used 4 GB for analysis (or less for just browsing and annotation). There are also some more memory-related tips at https://github.com/qupath/qupath/wiki/Troubleshooting#setting-memory-limits. It would be good to confirm whether the trouble only occurs when working with cell detection on large regions (at least hundreds of thousands of cells). My suspicion is that this isn't the case, and it is more likely to be related to the current patchy support for CZI - which is something I hope can be improved within the next few months. But I could be wrong on this if the behavior is fine whenever only small regions are considered.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343393030:418,avail,available,418,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343393030,2,['avail'],['available']
Availability,"Only other thought I have regarding intermittent errors is that some people storing image files, especially large ones, on network locations have run into trouble at times. And with active directory, your desktop might be a network location. If all of your files are on your hard drive, I'm out of ideas, good luck!. *and I see that the error log images are on the C drive.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/348#issuecomment-518033169:49,error,errors,49,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518033169,2,['error'],"['error', 'errors']"
Availability,"Oops, I take that back, Pete's script does not work for me when I use the Ellipse, I was selecting something else at the time, but now I have closed it and forgot what I was playing with. . The following does not work on Windows however, reducing the problem down a little.; ```; selectObjects {it.isAnnotation() && it.getROI().getROIType() == 'Rectangle'}; mergeSelectedAnnotations(); selectAnnotations(); ```; It still gives the same warning as above.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/129#issuecomment-354860945:259,down,down,259,https://qupath.github.io,https://github.com/qupath/qupath/issues/129#issuecomment-354860945,1,['down'],['down']
Availability,"Oops, my mistake. That's what I get for always posting as I wake up!. I have found them useful in SLIC classifications to automatically detect different types of tissue... and that is about it. Which ones are useful and why, I don't really know as I tend to feed them into classifiers and have not yet found a way to extract information from the classifier regarding which measurements were most useful. It was mostly trial and error based on what worked. Edit: The top discriminating features sounds like... a fantastic feature!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424748214:428,error,error,428,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424748214,1,['error'],['error']
Availability,"Path-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=0, w=2000, h=1500, z=0).tif ; ...........Written tile 1 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=0, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; ...........Written tile 2 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; ...........Written tile 3 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; Y =1500.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 4 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; X ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:8033,error,error,8033,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,"Path/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.main(QuPath.java:162); Caused by: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:346); 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); 	... 1 common frames omitted; Caused by: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.runtime.NullObject.invokeMethod(NullObject.java:91); 	at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.call(PogoMetaClassSite.java:48); 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48); 	at org.codehaus.gro",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:4001,ERROR,ERROR,4001,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"Path/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /home/joelrv/Downloads/bftools/test_pyramid_fullsize.tif; 12:25:56.155 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - Estimating H-DAB staining; 12:25:56.537 [JavaFX Application Thread] [INFO ] qupath.lib.gui.viewer.QuPathViewer - Image data set to ImageData: Brightfield (H-DAB), test_pyramid_fullsize; ```; I not familiar enough with the code to understand what's happening, it's just so strange that it used to work before... In any case thanks for trying to adress the issue!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472813709:2021,avail,available,2021,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709,2,"['Down', 'avail']","['Downloads', 'available']"
Availability,"Perhaps I'm misremembering, but I think the extensions directory was *always* configured on a per-user basis? As in... it was stored in the user preferences, alongside all the other preferences. This has not changed. It is also true for all persistent preferences, since in the end they depend upon `Preferences.userRoot();` ([here](https://github.com/qupath/qupath/blob/master/qupath-gui-fx/src/main/java/qupath/lib/gui/prefs/PathPrefs.java#L312)). With that in mind, I expect that in your case the 'user directory' is basically equivalent to the old extensions directory (except that the extensions themselves are stored 'one level down'). Of course, you may need to tell individual users not to mess with it, because it is kept for facility use... but I presume this was always the case.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/500#issuecomment-632622328:634,down,down,634,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632622328,1,['down'],['down']
Availability,"Pete,; Sorry, I am still learning how to post my queries in the forum, This was my; message. Can you advise please? Thank you very much, suba; Hello, I am able to load the images from the Qupath project, however, when; I double-click on the whole slide, I am getting an error message : **Unable; to build Image server: (view log below) for all the images but one that was; added recently to the project. Can anyone please suggest how to restore my; data please? Thank you, Suba; INFO: Initializing type adapters; INFO: Bio-Formats version 6.5.1; INFO: Loaded extension Bio-Formats options (Bio-Formats 6.5.1) (17 ms); INFO: Loaded extension Experimental extension (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.im",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/396#issuecomment-827610434:270,error,error,270,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434,1,['error'],['error']
Availability,"Pinging @petebankhead about the change in the interface as it'll possibly break stuff, if not merge away",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1524#issuecomment-2117897280:0,Ping,Pinging,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1524#issuecomment-2117897280,1,['Ping'],['Pinging']
Availability,"Pixel snapping is turned on, but I'm not sure if it applies to script generated annotations. And these are script generated annotations, and generated using a downsampled imageprocessor, I should have included that. . Would it work to try and round all of the annotation points prior to using addObjects(), and if so do you have any recommendations on how to do that (the annotations could, theoretically, have holes)? Or is it possible to snap objects to the grid with a function similar to resolveHierarchy?. As a note, I would probably do this at the ROI stage, where I use IJTools.convertToROI(). Looking into options to edit the point values within those ROI objects now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/401#issuecomment-587058614:159,down,downsampled,159,https://qupath.github.io,https://github.com/qupath/qupath/issues/401#issuecomment-587058614,1,['down'],['downsampled']
Availability,"PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:708); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.java:819); at qupath.lib.display.ImageDisplay.updateHistogramMap(ImageDisplay.java:554); at qupath.lib.display.ImageDisplay.setImageData(ImageDisplay.java:144); at qupath.lib.gui.viewer.QuPathViewer.setImageData(QuPathViewer.java:1385); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2459); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:23",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:3685,Down,Downloads,3685,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['Down'],['Downloads']
Availability,"Please help!. I have been away on holiday and whilst away the university computer I use was upgraded from windows 7 to windows 10. I am now unable to open any images from my project. These were saved on a external hard drive. The project opens with the thumbnails but when I try to open an image it says 'sorry can't open file'. I copied a single image to my desktop and tried to open that but still got the error. I tried making a new project but it says unable to import file. The file types are NDPI. I need to get this work complete for my thesis which is due in a month, so please help!!!. INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; WARN: Strange 'bits per sample' of 0; WARN: Error opening D:\Rivka\nanozoomer\Scans RL 2\Exp 5 (LI)\A3 LI 03.ndpi with ImageJ: Could not open D:\Rivka\nanozoomer\Scans RL 2\Exp 5 (LI)\A3 LI 03.ndpi with ImageJ; ERROR: Could not load OpenSlide native library; at java.lang.ClassLoader$NativeLibrary.load(Native Method); at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941); at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857); at java.lang.Runtime.loadLibrary0(Runtime.java:870); at java.lang.System.loadLibrary(System.java:1122); at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); at qupath.lib.images.servers.OpenslideImageServer.<init>(OpenslideImageServer.java:91); at qupath.lib.images.servers.OpenslideServerBuilder.buildServer(OpenslideServerBuilder.java:51); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/351:408,error,error,408,https://qupath.github.io,https://github.com/qupath/qupath/issues/351,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,Please make sure you followed the instructions [here](https://github.com/qupath/qupath-bioformats-extension) and downloaded _both_ `.jar` files - it looks like `bioformats_package.jar` is missing. You can find it at http://www.openmicroscopy.org/bio-formats/downloads/. I can replicate the error if I remove `bioformats_package.jar` from my extensions folder.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409153464:113,down,downloaded,113,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409153464,3,"['down', 'error']","['downloaded', 'downloads', 'error']"
Availability,"Potentially, although I'm not seeing any difference on my Mac. . Made a small guess and something that would help - can you pull down the latest code and try it out please?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1316#issuecomment-1708431678:129,down,down,129,https://qupath.github.io,https://github.com/qupath/qupath/pull/1316#issuecomment-1708431678,1,['down'],['down']
Availability,"Preview & QuPath both look ok to me:. ![Screenshot 2020-10-23 at 20 49 48](https://user-images.githubusercontent.com/4690904/97047805-6bdc0080-1571-11eb-8a78-f2ec9652945c.png). I do have a homebrew install as well:. ![Screenshot 2020-10-23 at 20 52 12](https://user-images.githubusercontent.com/4690904/97048049-ba899a80-1571-11eb-8751-6dc0394469e5.png). ----. Thanks very much for the link, I'll check your build scripts - I think it is already safe to say they are a lot more sophisticated than anything used for QuPath! I'm afraid I'm one of the people who has spent too long with Java and Python... Do you think there would be any sense in trying to include libvips with QuPath? We could put some work into that from our side - especially if it would help us incorporate OpenSlide more reliably into QuPath while also giving access to some of libvips' other functionality (like faster image pyramid-writing?) - but I'm not sure if there are reasons that's a bad idea.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/627#issuecomment-715571233:790,reliab,reliably,790,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715571233,1,['reliab'],['reliably']
Availability,"Previously, we just assumed qupath extension releases would follow the convention `qupath-extension-[name]-[version].jar` (or similar, I can't really remember). This version uses the github API to poll for the latest release. If there's only one release, it goes with that. If there's more than one, it presents them as options in a table. Once the user has selected one, it then asks the github API about the assets of that release, and downloads the first matching one, assuming it's not a javadoc or sources jar. If there's more than one, it presents them as options to the user.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1486:438,down,downloads,438,https://qupath.github.io,https://github.com/qupath/qupath/pull/1486,1,['down'],['downloads']
Availability,Problem in Exporting Binary Mask,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/538:28,Mask,Mask,28,https://qupath.github.io,https://github.com/qupath/qupath/issues/538,1,['Mask'],['Mask']
Availability,"Problem of run script from system command when image was opened using BioFormats Extension. I want to using QuPath open an image and run a groovy script by command like this:. ""C:\Program Files\QuPath\app\QuPathApp.jar"" -image ""D:\QMDownload\6\[failed_handOK]Leica_scn\Leica-Fluorescence-1.scn"" -script ""D:\\QMDownload\\6\\Tiling_a_whole_slide_image.groovy"". If the image was originally openable in QuPath using OpenSlide server, then the command could run. If the image was originally openable( and only Bioformats can handle it because without this extension then QuPath cannot open it) in QuPath using BioFormats Extension, such as .vsi/.scn format, then the command raise error:. However, the image Leica-Fluorescence-1.scn could be hand-opened in QuPath, and after openning, I can run the same script by clicking inside QuPath without problem. So the issue would be that how to let Bioformats extension usable when call QuPath from system command, but bot GUI. Any suggestions are welcome.; ================. 20:56:55.735 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, D:\\QMDownload\\6\\[failed_handOK]Leica_scn\\Leica-Fluorescence-1.scn, -script, D:\\QMDownload\\6\\Tiling_a_whole_slide_image.groovy ; 20:56:55.829 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!! ; Unsupported format or not found ; 20:56:55.876 [main] [WARN ] q.i.i.servers.ImageJServerBuilder - Error opening D:\\QMDownload\\6\\[failed_handOK]Leica_scn\\Leica-Fluorescence-1.scn with ImageJ: Could not open D:\\QMDownload\\6\\[failed_handOK]Leica_scn\\Leica-Fluorescence-1.scn with ImageJ ; 20:56:55.907 [main] [WARN ] q.l.i.servers.OpenslideServerBuilder - Unable to open D:\\QMDownload\\6\\[failed_handOK]Leica_scn\\Leica-Fluorescence-1.scn with OpenSlide: Can't find main image ; 20:56:55.907 [main] [ERROR] q.l.i.servers.ImageServerProvider - Unable to build whole slide server - check your classpath for a suitable library (e.g. OpenSlide, BioF",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/260:676,error,error,676,https://qupath.github.io,https://github.com/qupath/qupath/issues/260,1,['error'],['error']
Availability,Projects in v0.2.0-m8 are quite different from in v0.1.2. The above instructions won't work and the awkward workarounds should no longer be necessary. I've written a bit about how to update paths since v0.2.0-m4 [here](https://petebankhead.github.io/qupath/2019/08/20/fourth-milestone.html#repair-projects-by-finding-missingmoved-images).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/266#issuecomment-579362758:290,repair,repair-projects-by-finding-missingmoved-images,290,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-579362758,1,['repair'],['repair-projects-by-finding-missingmoved-images']
Availability,"Proposed fix for https://github.com/qupath/qupath/issues/1586. @alanocallaghan @Rylern please test this and let me know what you think, I don't use symlinks much... Ideal tests should involve a range of file types, including images and .qpdata, via drag & drop and opened in other ways. In particular, the original report related to an image that involves multiple files (.vsi). I don't know of good .vsi examples are public, but .ndpis is similar-ish: https://downloads.openmicroscopy.org/images/Hamamatsu-NDPI/manuel/. Then you have 3 .ndpi files that *could* be opened independently, but if you open the .ndpis then the other files should act as different channels. The trouble for me is that it won't work on an Apple Silicon Mac due to Bio-Formats - it needs an Intel build.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1620:461,down,downloads,461,https://qupath.github.io,https://github.com/qupath/qupath/pull/1620,1,['down'],['downloads']
Availability,"Proposed fix for https://github.com/qupath/qupath/issues/654. Note that from the command line the exit code should be 0 if a script succeeded or 1 if an exception was thrown. Note that this applies to running the `script` subcommand for a single image. If an exception is thrown when attempting to apply the script to *multiple* images in a project, QuPath will attempt to recover and continue processing the next image. The exit code will then be 0.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/676:373,recover,recover,373,https://qupath.github.io,https://github.com/qupath/qupath/pull/676,1,['recover'],['recover']
Availability,"QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 11 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif ; ...........Written tile 12 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif ; Y =6000.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=6000, w=2000, h=338, z=0).tif ; ...........Written tile 13 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=6000, w=2000, h=338, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=6000, w=2000, h=338, z=0).tif ; ...........Written tile 14 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=6000, w=2000, h=338, z=0).tif ; X =40",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:13260,error,error,13260,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,Qpath error in opening JPEG file,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/834:6,error,error,6,https://qupath.github.io,https://github.com/qupath/qupath/issues/834,1,['error'],['error']
Availability,"QuPath 0.3.2, and prior, I imagine. Currently when exporting labels using the [LabeledImageServer](https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html), the saved file includes a color lookup table which is quite nice in Windows for viewing the labels. In grayscale, low values would often disappear is 0,1 and 2 are fairly similar. However, some Python readers like PIL interpret the color lookup table as meaning that the image should be read in color, and a TIFF file with all 0, 1 and 2 values in a single channel will show up with 255s (for a white background) and other intermediate numbers. . It would be nice if there were an option to not apply a lookup table when exporting the masks. For the moment, my workaround is to resave the images as 8bit through an ImageJ macroRunner at the end of the script that writes the labeled images - overwriting the original. I am not including it here as it makes some assumptions about the Hierarchy that may not be true in all cases. Cheers,; Mike",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/993:732,mask,masks,732,https://qupath.github.io,https://github.com/qupath/qupath/issues/993,1,['mask'],['masks']
Availability,"QuPath does not include any code that directly relates to the GPU - everything happens through OpenCV/JavaCPP (and sometimes also PyTorch/TensorFlow/DJL). If you search for `the provided PTX was compiled with an unsupported toolchain` you should find lots of discussions separately from QuPath; it seems that the issue is normally related to the driver. I tried to replicate the issue with the only Windows computer I have access to (including a GeForce 1060) and could not - it runs without errors, and `DnnTools.isCudaAvailable()` returns true. > Given that issue https://github.com/qupath/qupath/issues/841 was marked as resolved 5 days ago, it could be linked to that. Perhaps there were some changes to the API such that closing of the model should be scripted differently?. I don't think that can be relevant here. I'm not sure that there is any bug here that can be fixed within QuPath. I have seen such error messages before, but the solution was always to update my graphics card driver. Have you tried this?. Note that QuPath v0.4.0 gives a range of options for deep learning, but CUDA incompatibilities will mean that probably not all can work at once (e.g. I could get PyTorch with GPU acceleration today by installing CUDA 11.7, but TensorFlow seems to require 11.3... I'm not sure there's a combination that gets both working together). I don't see that there's really anything much more we can do apart from simply removing the option of GPU acceleration altogether and not documenting it as an option - but that seems a shame when often it does work. > I have a version of QuPath built on 2022-11-21 which has no problem running StarDist on the GPU, so it's likely tied to any commits between this period. Because QuPath doesn't directly access the GPU, please check the .jar files within each installation. I don't know what the problem could be, unless it is somehow related to the inclusion of some Deep Java Library dependencies - or if you have other extensions installed that are",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1180#issuecomment-1341628127:492,error,errors,492,https://qupath.github.io,https://github.com/qupath/qupath/issues/1180#issuecomment-1341628127,2,['error'],"['error', 'errors']"
Availability,QuPath down list problems,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1067:7,down,down,7,https://qupath.github.io,https://github.com/qupath/qupath/issues/1067,1,['down'],['down']
Availability,"QuPath is a Java application, and the memory behavior is complicated and implementation-dependent: https://www.baeldung.com/gc-release-memory. The memory monitor uses the `Runtime` class, and makes calls to `System.gc()` for garbage collection.; The [javadocs](https://docs.oracle.com/en/java/javase/22/docs/api/java.base/java/lang/Runtime.html#freeMemory()) contain statements like `""Calling the gc method may result in increasing the value returned by freeMemory`""... where that 'may' is interesting. In some cases (such as the tile cache), QuPath retains a (soft or weak) reference to objects for 'as long as it can' to help performance, but will release them before any out-of-memory error is produced. In short, this doesn't sound like a bug to me. Unless there can be shown to be a memory leak within QuPath itself, there are too many other possible reasons beyond our control why memory use reported by the JVM might increase.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1646#issuecomment-2358859105:688,error,error,688,https://qupath.github.io,https://github.com/qupath/qupath/issues/1646#issuecomment-2358859105,1,['error'],['error']
Availability,"QuPath should (i.e. has in the past) compile fine under Linux, with the required native libraries. However, no distribution for Linux is available under _Releases_ yet. This should happen, but requires gaining access to a suitable Linux machine soon to arrange and test it...",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/2:137,avail,available,137,https://qupath.github.io,https://github.com/qupath/qupath/issues/2,1,['avail'],['available']
Availability,"QuPath-0.2.0-m1/app/groovy-2.5.6.jar) to constructor java.lang.invoke.MethodHandles$Lookup(java.lang.Class,int) ; WARNING: Please consider reporting this to the maintainers of org.codehaus.groovy.vmplugin.v7.Java7$1 ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 15:23:37.065 [main] [ERROR] qupath.QuPath - Error running script! ; javax.script.ScriptException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:158) ; 	at qupath.QuPath.main(QuPath.java:161) ; Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311) ; 	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:151) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:121) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:133) ; 	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:325) ; 	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:224) ; 	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:190) ; 	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:226) ; 	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:196) ; 	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:965) ; 	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647) ; 	at org.codehaus.groovy.control.Compilatio",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/286:3345,error,error,3345,https://qupath.github.io,https://github.com/qupath/qupath/issues/286,1,['error'],['error']
Availability,"Quick addition. Defining an area using a polygon no longer works for the in-built detection, just when running a stardist script:. ![image](https://github.com/qupath/qupath/assets/154437026/9e4ba23a-f54a-4742-8a5c-ec10b063f7f2). ```; ERROR: Error processing Polygon (7616, 10604, 2099, 1863); java.io.IOException: java.lang.InterruptedException; at qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(BioFormatsImageServer.java:911); at qupath.lib.images.servers.AbstractTileableImageServer.lambda$prerequestTiles$2(AbstractTileableImageServer.java:462); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at qupath.lib.images.servers.AbstractTileableImageServer.prerequestTiles(AbstractTileableImageServer.java:464); at qupath.lib.images.servers.AbstractTileableImageServer.readRegion(AbstractTileableImageServer.java:295); at qupath.lib.images.servers.AbstractTileableImageServer.readRegion(AbstractTileableImageServer.java:60); at qupath.lib.images.servers.CroppedImageServer.readRegion(CroppedImageServer.java:90); at qupath.lib.images.servers.CroppedImageServer.readRegion(CroppedImageServer.java:39); at qupath.lib.images.servers.SparseImageServer.readTile(SparseImageServer.java:265); at qupath.lib.images.servers.AbstractTileableImageServer.lambda$prerequestTiles$2(AbstractTileableImageServer.java:462); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at qupath.lib.images.servers.AbstractTileableImageServer.prerequestTiles(AbstractTileableImageServer.java:464); at qupath.lib.images.servers.AbstractTileableImageServer.readRegion(AbstractTileableImageServer.java:295); at qupath.lib.images.servers.AbstractTileableImageServer.readRegion(AbstractTileableImageServer.java:60); at qupath.imagej.tools.IJTools.convertToImagePlus(IJTools.java:863); at qupath.imagej.tools.IJTools.convertToImagePlus(IJTools.java:902); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:216); at qupath.lib.p",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1443#issuecomment-1864490583:234,ERROR,ERROR,234,https://qupath.github.io,https://github.com/qupath/qupath/issues/1443#issuecomment-1864490583,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"Quick update, I started suffering this problem too with Ubuntu 20.04 LTS. As a workaround, I create a `launch_qupath.bsh` script inside the QuPath directory with the following contents:. ```; #!/bin/bash. DIR=""$( cd ""$( dirname ""${BASH_SOURCE[0]}"" )"" >/dev/null 2>&1 && pwd )""; echo $DIR; export LD_PRELOAD=$DIR/lib/app/libpixman-1.so.0; $DIR/bin/QuPath-0.2.3; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/628#issuecomment-762152617:278,echo,echo,278,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-762152617,1,['echo'],['echo']
Availability,"Quick update: there are no longer any plans to make QuPath OpenJDK 15-compatible. The next release is intended to be >= March 2021, by which time OpenJDK 16 should be available and there is a risk things will have changed again. However, jpackage is an intended feature for 16 so should be more stable... and worth updating for. In the meantime, QuPath v0.2.* is only intended to be built with OpenJDK 14. QuPath's code should be compatible with Java 11; OpenJDK 14 is required only for jpackage. From an IDE, it should run with other Java versions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/615#issuecomment-757141337:167,avail,available,167,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-757141337,1,['avail'],['available']
Availability,Qupath error when changing view on a czi slide,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/35:7,error,error,7,https://qupath.github.io,https://github.com/qupath/qupath/issues/35,1,['error'],['error']
Availability,"Qupath with tensorflow build (https://qupath.readthedocs.io/en/latest/docs/advanced/stardist.html) keeps closing while running Stardist on large images. I get the following error report in the QuPath directory (hs_err_pid1260.txt - first parts of error report included) - any idea what's wrong? I see maximum memory can only be set to 32 GB, even though 64 GB is available. # A fatal error has been detected by the Java Runtime Environment:; #; # EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x00007ff9724d7c77, pid=1260, tid=17968; #; # JRE version: OpenJDK Runtime Environment AdoptOpenJDK (14.0.1+7) (build 14.0.1+7); # Java VM: OpenJDK 64-Bit Server VM AdoptOpenJDK (14.0.1+7, mixed mode, tiered, g1 gc, windows-amd64); # Problematic frame:; # C 0x00007ff9724d7c77; #; # No core dump will be written. Minidumps are not enabled by default on client versions of Windows; #; # If you would like to submit a bug report, please visit:; # https://github.com/AdoptOpenJDK/openjdk-support/issues; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #. --------------- S U M M A R Y ------------. Command Line: -Djava.library.path=C:\Users\IT-bruker\Documents\GitHub\qupath\build\dist\QuPath-0.2.0-m12-SNAPSHOT\app;C:\Users\IT-bruker\Documents\GitHub\qupath\build\dist\QuPath-0.2.0-m12-SNAPSHOT -Djava.launcher.path=C:\Users\IT-bruker\Documents\GitHub\qupath\build\dist\QuPath-0.2.0-m12-SNAPSHOT -XX:MaxRAMPercentage=50 qupath.QuPath. Host: Intel(R) Xeon(R) W-2155 CPU @ 3.30GHz, 20 cores, 63G, Windows 10 , 64 bit Build 18362 (10.0.18362.778); Time: Mon May 18 12:40:22 2020 Vest-Europa (sommertid) elapsed time: 599 seconds (0d 0h 9m 59s). --------------- T H R E A D ---------------. Current thread (0x00000295c2dd7000): JavaThread ""ForkJoinPool.commonPool-worker-37"" daemon [_thread_in_native, id=17968, stack(0x000000f49ec00000,0x000000f49ed00000)]. Stack: [0x000000f49ec00000,0x000000f49ed00000], sp=0x000000f49ecfe350, free s",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481:173,error,error,173,https://qupath.github.io,https://github.com/qupath/qupath/issues/481,4,"['avail', 'error']","['available', 'error']"
Availability,"R IMPLIED WARRANTIES, INCLUDING, ; * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. ; * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, ; * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; ; * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ; * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ; * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; */; ```. 7. Save the script.; 5. Close the script (Ctrl+w); 6. Open the same script ==> the follwing error is thrown. **Expected behavior**; Enable to have an unlimited number of characters inside a block comment. **Screenshots**; ```; ERROR: QuPath exception; java.lang.StackOverflowError: null; at java.base/java.util.regex.Pattern$LazyLoop.match(Unknown Source); at java.base/java.util.regex.Pattern$GroupTail.match(Unknown Source); at java.base/java.util.regex.Pattern$BranchConn.match(Unknown Source); at java.base/java.util.regex.Pattern$CharProperty.match(Unknown Source); at java.base/java.util.regex.Pattern$Branch.match(Unknown Source); at java.base/java.util.regex.Pattern$GroupHead.match(Unknown Source); *****; at java.base/java.util.regex.Pattern$LazyLoop.match(Unknown Source); at java.base/java.util.regex.Pattern$GroupTail.match(Unknown Source); at java.base/java.util.regex.Pattern$BranchConn.match(Unknown Source); at java.base/java.util.regex.Pattern$CharProperty.match(Unknown Source); at java.base/java.util.regex.Pattern$Branch.match(Unknown Source); at java.base/java.util.regex.Pattern$GroupHead.match(Unknown Source); **** n times (probably n = nb of characters); ERROR: Error applying syntax highlighting: StackOverflowError; ```. **Desktop**; - OS: Windows 11; - QuPath Version: 0.4.0",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1176:6112,ERROR,ERROR,6112,https://qupath.github.io,https://github.com/qupath/qupath/issues/1176,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,RAM not cleared before opening next file --> error after opening a few files,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/393:45,error,error,45,https://qupath.github.io,https://github.com/qupath/qupath/issues/393,1,['error'],['error']
Availability,Recover from NPE if colormap requested with a color missing,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/473:0,Recover,Recover,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/473,1,['Recover'],['Recover']
Availability,Recover when going wild with the 'radius' slider and generating density maps,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/790:0,Recover,Recover,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/790,1,['Recover'],['Recover']
Availability,Reduce impact of tiling errors when processing large regions,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/767:24,error,errors,24,https://qupath.github.io,https://github.com/qupath/qupath/pull/767,1,['error'],['errors']
Availability,"Reformat code for consistency & readability, and include source with gradle wrapper.; Resolve (hopefully) some issues with task ordering and output directories to reduce errors and issues that occur with parallel builds.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/970:170,error,errors,170,https://qupath.github.io,https://github.com/qupath/qupath/pull/970,1,['error'],['errors']
Availability,"Refreshing slightly more than necessary is probably ok, it's only a problem if you notice it slowing things down. Certainly better than missing a necessary `refresh()` call :). There's no .tif support because then that brings in channel colors/brightness & contrast and so on, so I guess that would require a more core change to export with those settings. But that gets even more awkward if the visualization settings might not be available if calling the export by batch processing...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1096#issuecomment-1292322424:108,down,down,108,https://qupath.github.io,https://github.com/qupath/qupath/pull/1096#issuecomment-1292322424,2,"['avail', 'down']","['available', 'down']"
Availability,"Regarding the script, are you merging two different annotation classes two different ways? Or merging the same annotation twice? Are you running the cell detection command in the script immediately after the second merge? That could be a big problem if so. You have two merge statements, each done a different way. If you are actually running the script as is, you are probably running into the same problem as before, where one merge has not completed when the second starts running, and everything is getting ""bugged out."" If that is the case (and you are running your cell detection in the script right after the second merge), you may want the thread sleep command from https://github.com/qupath/qupath/issues/129. I am not certain, but I have a feeling that this has more to do with the shape of your annotation causing cell detection a problem than the merge statement. . When I have had something like this happen (cell detection starts running, but no cells show up in the annotation tab), it does not always show an error in the log, but the first thing to do would be to check the View->Show log to see if there is an error message there. If there is, great, that might be useful. On the other hand, if there is nothing, it may just be the cell detection not completing, but without causing any errors. . If none of the above helps, could you paste your .qpdata file as a .log file (rename the file extension), with ONLY the annotations saved. It should be quite small. I would like to try importing it onto another dummy whole slide image just to try running cell detection to see if the shape of the annotation is causing problems.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/147#issuecomment-365346916:1025,error,error,1025,https://qupath.github.io,https://github.com/qupath/qupath/issues/147#issuecomment-365346916,3,['error'],"['error', 'errors']"
Availability,"Relates to; * https://github.com/qupath/qupath/issues/1444; * https://github.com/qupath/qupath/issues/1591 . and incorporates synchronization from; * https://github.com/qupath/qupath/pull/1466. ---. This substantially updates the `MeasurementList` API, while avoiding any serialization-breaking changes.; It also adds many new tests to help improve the robustness of both the `MeasurementList` directly and any associated `Map` view. Methods that were deprecated since v0.4.0 have now been removed, and there are 2 more deprecations.; The replacement methods have shorter names and should have reliable performance.; `MeasurementList` implementations should also now be threadsafe (if they prove not to be, please report a bug). Several other key changes:; * `getNames()` (previously `getMeasurementNames()`) returns a defensive copy of the measurement. Before, it would sometimes return an unmodifiable list that wrapped a list that could still change - and that was sometimes responsible for #1444 and #1591; * `List<Measurement> getMeasurements()` and `Measurement getByIndex(int)` now provide ways to access a snapshot of one or more measurements. Previously, `getMeasurementName(int)` and `getMeasurementValue(int)` were used - but when requesting these sequentially, there was no way to guarantee that the values were properly in sync.; * `String.intern()` is now used with all `MeasurementList` implementations. Previously, it was only used for the 'general' list used for annotations. It wasn't important if other lists were closed, but if they weren't then we could end up with huge numbers of duplicate strings greatly increasing memory use. In general, the goal of `MeasurementList` is to optimize mostly for memory use and good behavior.; Updating and querying measurements is generally rare enough that small computational costs (e.g. synchronization, defensive copying) shouldn't matter a great deal - but if we are to cope with millions of objects having hundreds of measurements each, ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1592:353,robust,robustness,353,https://qupath.github.io,https://github.com/qupath/qupath/pull/1592,2,"['reliab', 'robust']","['reliable', 'robustness']"
Availability,"Relax the requirements that any image has to be a local file to work with Bio-Formats. For example, https://qupath.github.io/images/qupath-banner-web-logo.jpg can now be opened directly. This may become more important if Zarr support becomes available through Bio-Formats. One risk with this is that it will make adding an OMERO (or similar) image very slow, as Bio-Formats tries and fails to read it. To mitigate the problem, the image is tested based upon its URI path only - if no potentially-compatible reader is found then the image read won't be attempted. The option to read other URLs is turned off by default through the preferences.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/729:242,avail,available,242,https://qupath.github.io,https://github.com/qupath/qupath/pull/729,1,['avail'],['available']
Availability,Remove accidental use of Java 16 Stream.toList() and update Action to catch such problems earlier.; Increase available memory for testing to avoid errors on Apple Silicon.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/797:109,avail,available,109,https://qupath.github.io,https://github.com/qupath/qupath/pull/797,2,"['avail', 'error']","['available', 'errors']"
Availability,Removing >255 measurements throws error when reproducing from workflow script,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/915:34,error,error,34,https://qupath.github.io,https://github.com/qupath/qupath/issues/915,1,['error'],['error']
Availability,"Reopening this as it's very similar and still happening in QuPath 0.5.0; A user had an annotation inside which there was another annotation filled with detections (over 5000); When runing ""Delaunay cluster features 2D"" we ran into; ```; Error running plugin: java.util.ConcurrentModificationException; java.util.concurrent.ExecutionException: java.util.ConcurrentModificationException; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractTaskRunner.awaitCompletion(AbstractTaskRunner.java:147); at qupath.lib.plugins.AbstractTaskRunner.runTasks(AbstractTaskRunner.java:117); at qupath.lib.gui.TaskRunnerFX.runTasks(TaskRunnerFX.java:106); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:147); at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:177); at java.base/java.lang.Thread.run(Unknown Source); Caused by: java.util.ConcurrentModificationException; at java.base/java.util.ArrayList.checkForComodification(Unknown Source); at java.base/java.util.ArrayList.equals(Unknown Source); at java.base/java.util.WeakHashMap.matchesKey(Unknown Source); at java.base/java.util.WeakHashMap.get(Unknown Source); at java.base/java.util.Collections$SynchronizedMap.get(Unknown Source); at qupath.lib.measurements.NumericMeasurementList$AbstractNumericMeasurementList.getNameMap(NumericMeasurementList.java:142); at qupath.lib.measurements.NumericMeasurementList$AbstractNumericMeasurementList.close(NumericMeasurementList.java:133); at qupath.lib.measurements.NumericMeasurementList$FloatList.close(NumericMeasurementList.java:352); at qupath.opencv.features.DelaunayTriangulation.addClusterMeasurements(DelaunayTriangulation.java:466); at qupath.opencv.features.DelaunayClusteringPlugin$DelaunayRunnable.run(DelaunayClusteringPlugin.java:215); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concu",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1444:237,Error,Error,237,https://qupath.github.io,https://github.com/qupath/qupath/issues/1444,1,['Error'],['Error']
Availability,"Reverting macOS changes, downgrade JavaFX",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1376:25,down,downgrade,25,https://qupath.github.io,https://github.com/qupath/qupath/pull/1376,1,['down'],['downgrade']
Availability,"Rich script editor extension (144 ms); INFO: Loaded extension SVG export extension (0 ms); INFO: Loaded extension StarDist extension (2 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Update check for https://github.com/qupath/qupath; INFO: No newer release for QuPath (0.4.1 is newer than 0.4.1); INFO: Update check for https://github.com/qupath/qupath-extension-stardist; INFO: No newer release for StarDist extension (0.4.0 is newer than 0.4.0); INFO: Update check for https://github.com/biop/qupath-extension-cellpose; INFO: No newer release for Cellpose 2D QuPath Extension (0.6.0 is newer than 0.6.0); WARN: Selecting project file /media/image_in/T7 Shield/Recherche/LABO/12.22-Efferocytose_InCuCyte/qupath/QupathProject_donneur1/project.qpproj; INFO: Project set to Project: QupathProject_donneur1-project; INFO: Setting max Bio-Formats readers to 20; WARN: Removing alpha channel; ... (a lot of warnings); WARN: Removing alpha channel; ERROR: QuPath exception: Bidirectional binding failed, setting to the previous value; java.lang.RuntimeException: Bidirectional binding failed, setting to the previous value; at com.sun.javafx.binding.BidirectionalBinding$TypedGenericBidirectionalBinding.invalidated(BidirectionalBinding.java:677); at com.sun.javafx.binding.ExpressionHelper$SingleInvalidation.fireValueChangedEvent(ExpressionHelper.java:136); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); at javafx.scene.control.Labeled.setTextFill(Labeled.java:766); at org.controlsfx.glyphfont.Glyph.setColor(Glyph.java:288); at qupath.lib.gui.tools.IconFactory.createROIIcon(IconFact",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1202:2201,ERROR,ERROR,2201,https://qupath.github.io,https://github.com/qupath/qupath/issues/1202,1,['ERROR'],['ERROR']
Availability,"SLIC superpixel detection has stopped working in m3. It divides the large annotation into tiles, and then just stops. According to Svidro, it produces this error in the log: . ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMerge'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMerge' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.imagej.superpixels.SLICSuperpixelsPlugin$SLICSuperpixelDetector.runDetection(SLICSuperpixelsPlugin.java:281); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:132); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/344:156,error,error,156,https://qupath.github.io,https://github.com/qupath/qupath/issues/344,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"Scene.java:1762); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:380); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:294); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$354(GlassViewEventHandler.java:416); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:415); at com.sun.glass.ui.View.handleMouseEvent(View.java:555); at com.sun.glass.ui.View.notifyMouse(View.java:937); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191); at java.lang.Thread.run(Thread.java:745); ERROR: Error reading image region C:\Users\617\Desktop\1800164.tif: x=0, y=0, w=23422, h=30978, z=0, t=0, downsample=140.81 for image size 23422 x 30978; at qupath.lib.images.servers.BioFormatsImageServer.resize(BioFormatsImageServer.java:864); at qupath.lib.images.servers.BioFormatsImageServer.readBufferedImage(BioFormatsImageServer.java:689); at qupath.lib.images.servers.BioFormatsImageServer.readBufferedImage(BioFormatsImageServer.java:95); at qupath.lib.images.servers.AbstractImageServer.getBufferedThumbnail(AbstractImageServer.java:70); at qupath.lib.gui.helpers.DisplayHelpers.estimateImageType(DisplayHelpers.java:117); at qupath.lib.gui.QuPathGUI.createNewImageData(QuPathGUI.java:2269); at qupath.lib.gui.QuPathGUI.createNewImageData(QuPathGUI.java:2258); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2236); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2152); at qupath.lib.gui.commands.OpenCommand.run(OpenCommand.java:51); at qupath.lib.gui.QuPathGUI.lambda$createCommandAction$46(QuPathGUI.ja",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/221:10357,ERROR,ERROR,10357,https://qupath.github.io,https://github.com/qupath/qupath/issues/221,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"See also https://github.com/openslide/openslide/issues/353 and the quote. > You can get the bounding box of the actual pixel data from the `openslide.bounds-{x,y,width,height}` properties. This is what the VIPS `autocrop` option uses to trim the slide to the available pixels. While OpenSlide's approach is internally consistent and may be justifiable, it doesn't seem to me that it is more 'correct' than using the 'bounding box of the actual pixel data'... and failing to crop by default to the actual pixel data seems at least as likely to make the problem you describe *worse* rather than better:. > Any change to the OpenSlide, the library, failure to derive these coordinates etc. breaks everything. As it currently stands, I think QuPath is more internally consistent by cropping - and this reduces rather than increases the dependency on OpenSlide, by making its use interchangeable with Bio-Formats. If there are cases where QuPath crops* and Bio-Formats or other popular libraries don't, then we might need to look at it again, but I don't know of any. *-From the description above, it sounds more like QuPath/Bio-Formats *don't pad* than that they crop...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1278#issuecomment-1630779200:259,avail,available,259,https://qupath.github.io,https://github.com/qupath/qupath/issues/1278#issuecomment-1630779200,2,"['avail', 'failure']","['available', 'failure']"
Availability,See https://forum.image.sc/t/minor-qupath-issue/54602; Also repair some tooltips & refresh 'Load pixel classifier' for a new image by bringing the window into focus.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/771:60,repair,repair,60,https://qupath.github.io,https://github.com/qupath/qupath/pull/771,1,['repair'],['repair']
Availability,See https://github.com/locationtech/jts/issues/571; This manifest itself in *sometimes* failing on the ObservableMeasurementTableDataTest due to incorrect object counts being returned. No errors could be reproduced if the locator was initialized before any parallel stream.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/586:188,error,errors,188,https://qupath.github.io,https://github.com/qupath/qupath/pull/586,1,['error'],['errors']
Availability,"See https://github.com/qupath/qupath/issues/587; These changes don't correct cells that 'go wrong' (with TopologyExceptions), but instead try to recover more gracefully - so that *all* cells are not lost.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/588:145,recover,recover,145,https://qupath.github.io,https://github.com/qupath/qupath/pull/588,1,['recover'],['recover']
Availability,"Sensible. That would be a downside of the deb/rpm approach on Linux, unless we do some similar shenanigans with application names",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1732357842:26,down,downside,26,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1732357842,1,['down'],['downside']
Availability,Set focus on magnification/downsample textfield,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/668:27,down,downsample,27,https://qupath.github.io,https://github.com/qupath/qupath/pull/668,1,['down'],['downsample']
Availability,"Several script editor improvements, which include now showing the caret position and giving more informative error messages. Biggest change is calling `fireHierarchyUpdate()` by default, to ensure the UI is notified of changes. This means it's no longer required to include it at the end of many scripts.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1104:109,error,error,109,https://qupath.github.io,https://github.com/qupath/qupath/pull/1104,1,['error'],['error']
Availability,Should fix https://forum.image.sc/t/limit-delaunay-cluster-clustering-to-specific-annotations-throws-error/70976,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1044:101,error,error,101,https://qupath.github.io,https://github.com/qupath/qupath/pull/1044,1,['error'],['error']
Availability,Should revisit this and print the counts (I need to reboot to switch OS). On Ubuntu:. ```; INFO: Starting script at Thu Aug 24 14:00:58 BST 2023; INFO: Same: true; INFO: Paths 	4.703 s; Files 	3.655 s; Total duration	8.358 s; Average per checkpoint: 4.179 s; INFO: Total run time: 10.93 seconds; ```. On windows:. ```; INFO: Same: true; INFO: Paths 	37.279 s; Files 	17.887 s; Total duration	55.166 s; Average per checkpoint: 27.583 s; ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1298#issuecomment-1691595026:52,reboot,reboot,52,https://qupath.github.io,https://github.com/qupath/qupath/pull/1298#issuecomment-1691595026,3,"['checkpoint', 'reboot']","['checkpoint', 'reboot']"
Availability,"Show a small badge in the log toolbar button to try attention to errors. This is intended to be useful whenever the log viewer is not open, but the user may need to see an error reported there. Also set the minimum size for the main QuPath window, because @alanocallaghan had a point. ![error-badges](https://github.com/qupath/qupath/assets/4690904/e073b3e3-0a62-41dd-87e9-4b3991284f8b)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1341:65,error,errors,65,https://qupath.github.io,https://github.com/qupath/qupath/pull/1341,3,['error'],"['error', 'error-badges', 'errors']"
Availability,Show only error count since log visible,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1362:10,error,error,10,https://qupath.github.io,https://github.com/qupath/qupath/pull/1362,1,['error'],['error']
Availability,"Simple merger that checks if IoU is higher than the given threshold. I also implemented an OutputHandler that does something like this:. 1. create objects within the regionRequest; 2. remove any objects within N pixels of the boundary of the regionRequest; 3. mask objects based on the parent annotation (not the proxy/tile, as is usually done). Since these are probably useful together, should I add this OutputHandler to this PR?",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1502:260,mask,mask,260,https://qupath.github.io,https://github.com/qupath/qupath/pull/1502,1,['mask'],['mask']
Availability,"Since the released of bioformat 5.3.0, we can now open czi axioscan slides, but today I got an error while changing the Scene in image list:. This problem do not occur on other computer with the same installation files. Here is the error logs:. `; INFO: Refreshing extensions in C:\Users\xxxx\QuPath\extensions; INFO: Added extension: C:\Users\xxxx\QuPath\extensions\bioformats_package.jar; INFO: Added extension: C:\Users\xxxx\QuPath\extensions\qupath-extension-bioformats.jar; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Could not load OpenSlide native library; at java.lang.ClassLoader$NativeLibrary.load(Native Method); at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941); at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857); at java.lang.Runtime.loadLibrary0(Runtime.java:870); at java.lang.System.loadLibrary(System.java:1122); at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); at qupath.lib.images.servers.OpenslideImageServer.<init>(OpenslideImageServer.java:91); at qupath.lib.images.servers.OpenslideServerBuilder.buildServer(OpenslideServerBuilder.java:47); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2227); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:1); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.Comp",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/35:95,error,error,95,https://qupath.github.io,https://github.com/qupath/qupath/issues/35,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Slightly updated script showing there is indeed some badness going on (note the counts don't match!). ```groovy; import groovy.transform.CompileStatic; import qupath.lib.common.Timeit. import java.nio.file.Files; import java.nio.file.Path. List<File> files = new File(System.getProperty(""user.home"")).listFiles() as List. for (int i = 0; i < 10; i++); files.add(new File(Math.random() as String)). List<Path> paths = files.collect(f -> f.toPath()) as List. int nIterations = 1000; println(""Same: "" + (countFilesExist(files) == countPathsExist(paths))); println(""Count files: "" + countFilesExist(files)); println(""Count paths: "" + countPathsExist(paths)). println new Timeit(); .checkpointAndRun(""Paths "", () -> countPathsExist(paths, nIterations)); .checkpointAndRun(""Files "", () -> countFilesExist(files, nIterations)); .stop(); .summarizeCheckpoints(). @CompileStatic; int countFilesExist(List<File> files, int iterations=1) {; int count = 0;; for (int i = 0; i < iterations; i++) {; for (def f : files) {; if (f.exists()); count++;; }; }; return count;; }. @CompileStatic; int countPathsExist(List<Path> files, int iterations=1) {; int count = 0;; for (int i = 0; i < iterations; i++) {; for (def f : files) {; if (Files.exists(f)); count++;; }; }; return count;; }; ```. Windows:; ```; INFO: Same: false; INFO: Count files: 51; INFO: Count paths: 38; INFO: Paths 	4.273 s; Files 	1.838 s; Total duration	6.111 s; Average per checkpoint: 3.055 s; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1298#issuecomment-1691680125:678,checkpoint,checkpointAndRun,678,https://qupath.github.io,https://github.com/qupath/qupath/pull/1298#issuecomment-1691680125,3,['checkpoint'],"['checkpoint', 'checkpointAndRun']"
Availability,"So I took a quick run at it, and came up with a few options.; First off, due to your somewhat off-white background, I would definitely use something like:; ```; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.69602 0.66056 0.28145 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.47625 0.62539 0.61811 "", ""Background"" : "" 224 224 224 ""}');; ```. Next I drew a square that had some DAB and non DAB stained areas and tested the following **with the annotation selected**:; ```; runPlugin('qupath.imagej.detect.tissue.PositivePixelCounterIJ', '{""downsampleFactor"": 1, ""gaussianSigmaMicrons"": 0.5, ""thresholdStain1"": 0.1, ""thresholdStain2"": 0.2, ""addSummaryMeasurements"": true}');; ```. Alternatively you could try superpixels, which I like, but would also require a classification step. For now you can use the Measure->Show measurment maps command to look at what values you could use for a classifier. Again **with the annotation selected**:; ```; runPlugin('qupath.imagej.superpixels.SLICSuperpixelsPlugin', '{""sigmaMicrons"": 1.0, ""spacingMicrons"": 10.0, ""maxIterations"": 10, ""regularization"": 0.25, ""adaptRegularization"": false, ""useDeconvolved"": false}');; selectDetections();; runPlugin('qupath.lib.algorithms.IntensityFeaturesPlugin', '{""pixelSizeMicrons"": 0.25, ""region"": ""ROI"", ""tileSizeMicrons"": 25.0, ""colorOD"": true, ""colorStain1"": true, ""colorStain2"": true, ""colorStain3"": false, ""colorRed"": false, ""colorGreen"": false, ""colorBlue"": false, ""colorHue"": false, ""colorSaturation"": false, ""colorBrightness"": false, ""doMean"": true, ""doStdDev"": true, ""doMinMax"": false, ""doMedian"": false, ""doHaralick"": false, ""haralickDistance"": 1, ""haralickBins"": 32}');; ```. You can also choose a larger size for your SLICs if you want to do more of a tissue structure analysis. Smaller is usually better if you are looking for color differences though. Another options is just using the cell detection mentioned above:; ```; selectAn",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/157#issuecomment-372875465:619,down,downsampleFactor,619,https://qupath.github.io,https://github.com/qupath/qupath/issues/157#issuecomment-372875465,1,['down'],['downsampleFactor']
Availability,"So long as 'arbitrarily large' is still small enough to work as a single image (not a pyramidal whole slide image), then it should certainly be possible. Image pyramids can't be written with QuPath currently. One way to get a larger image may be via [Send region to ImageJ](https://github.com/qupath/qupath/wiki/Working-with-ImageJ#sending-image-regions-to-imagej) - from memory I think there's still a size limitation, but it should be bigger. Otherwise, it is necessary to run a script. The closest matching script I can think of is [this one](https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d). By default, it will export the entire image at a very low resolution because of these lines; ```groovy; // Aim for an output resolution of approx 20 µm/pixel; double requestedPixelSize = 20; ...; // Calculate downsample factor depending on the requested pixel size; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()); ```. You can switch it to export only the region corresponding to the selected object, at full resolution, as follows:; ```groovy; // Calculate downsample factor depending on the requested pixel size; double downsample = 1.0; def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, getSelectedROI()); ```. Let me know if that doesn't do what you need, and hopefully some other script change could help. Personally, I'd use the ImageJ method for exporting isolated regions occasionally, and a script if I wanted to export lots of regions in a single batch. > Note: I've tagged this as *enhancement* because I think it would make sense to increase the export size limit through the user interface to make this easier. I had forgotten the existing limit was so small...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/127#issuecomment-354475050:827,down,downsample,827,https://qupath.github.io,https://github.com/qupath/qupath/issues/127#issuecomment-354475050,6,['down'],['downsample']
Availability,"So the lack of a buffered stream is probably unimportant, since digging down deeper I see that a `PrintWriter` is used... which involves some buffering (as far as I can tell). Which may explain why I didn't really spot any clear improvement when using a `BufferedOutputStream`.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1045#issuecomment-1230386652:72,down,down,72,https://qupath.github.io,https://github.com/qupath/qupath/issues/1045#issuecomment-1230386652,1,['down'],['down']
Availability,"Some assorted responses:. * You say 'QuPath did it again', but it’s not clear if QuPath is actually doing what it is supposed to in deleting objects. I already described that you should not do automated counts in the same region after manual counting. Did you read my explanation above? If it does not describe your situation, please be more specific. https://github.com/qupath/qupath/issues/112#issuecomment-342941759. * QuPath is written in Java, and is therefore limited by the amount of memory assigned to it on first startup, or under *Help &rarr; Show setup options*. Additional memory being available on the computer doesn’t change this; QuPath won't use it. * My best guess remains that the memory problems are related to the handling of CZI images - which is something I will investigate, but I have very little free time currently and it may take a while. It is not a format I have used much myself, and I have very little relevant data that I can use to test it properly. * If you want to investigate this yourself, try doing simple processing steps using images in another file format (e.g. Aperio or Hamamatsu - maybe from http://openslide.cs.cmu.edu/download/openslide-testdata/). If the problem persists then my guess is wrong, and it is not reliant on file format. But then if you describe your exact steps I may be able to reproduce the issue. * If you are optimizing positive classification settings, re-running the cell detection would be a horribly slow way to do it. Running this one-line script and adjusting the values should be *much* faster:; ```groovy; setCellIntensityClassifications('Nucleus: DAB OD mean', 0.2); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-344522051:598,avail,available,598,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-344522051,2,"['avail', 'down']","['available', 'download']"
Availability,"Some undo support is now available in v0.2.0-m1 (and beyond), and explained [on my blog](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#new-limited-support-for-undo).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/75#issuecomment-518580699:25,avail,available,25,https://qupath.github.io,https://github.com/qupath/qupath/issues/75#issuecomment-518580699,1,['avail'],['available']
Availability,Sorry Peter. I missed your reply-I will give the multiple projects a try. But I am also keen to script it. I have a c# background but have downloaded the java source to see if I can get my head around it. I can supply the ndpis files if you would like to do any testing. Basically it's just a text file that links multiple ndpi files that came from the same scan run (i.e. different filter per ndpi file),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/113#issuecomment-343225491:139,down,downloaded,139,https://qupath.github.io,https://github.com/qupath/qupath/issues/113#issuecomment-343225491,1,['down'],['downloaded']
Availability,"Sorry about the wait. **In response to your questions**. - I have tested zooming into an image with multiple OME-TIFF files and have gotten the same results. - The software used to generate the OME-TIFF files was through a two-step process of converting MRXS files (written from 3DHISTECH software) into OME-TIFF files through the help of conversion tools from Glencoesoftware:. The first step used a tool called bioformats2raw (https://github.com/glencoesoftware/bioformats2raw) which converts MRXS files into Zarr file-type. . The second step used a tool called raw2ometiff (https://github.com/glencoesoftware/raw2ometiff) which converts the Zarr file into an OME-TIFF file type. - While viewing an image with QuPath-0.3.0 and checking _Show log_, these were the errors reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. For QuPath-0.3.2, the result was the same except it did not have the ""WARN"" error. For QuPath-0.3.1 (which also can not cache tiles or load the resolution properly when zooming in), this was reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Setting max Bio-Formats readers to 4; INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. ### Here is an example of my image while zoomed in using QuPath-0.3.0; <img width=""960"" alt=""QuPath_030_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751366-613ce0e7-1dc4-4e03-a0f4-8a055db1f3d7.PNG"">. ### Here is an example of my image while zoomed in using QuPath-0.3.2 (looks the same on QuPath-0.3.1); <img width=""960"" alt=""QuPath_032_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751374-6702bd00-8f17-4005-a56c-7b3a96f6c258.PNG"">. As ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/904#issuecomment-1064493475:765,error,errors,765,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1064493475,1,['error'],['errors']
Availability,"Sorry for your frustrations. I am also unclear on what exact process you used. To help, I would need exact steps that I can use to reproduce the problems you are seeing, and any errors messages you see. I would also suggest:. * Make sure you are working with images in a project.; * Save regularly, and use *File &rarr; Revert* (Ctrl + R) to return to the last saved version.; * Whenever you have performed any lengthy manual steps consider duplicating your entire project folder (or creating a zip file of it) so that you may return to it later.; * If something goes wrong, check out *View &rarr; Show log* for any error messages, and post them here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-342939465:178,error,errors,178,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-342939465,2,['error'],"['error', 'errors']"
Availability,"Sorry to keep bugging you with more bugs :/. In m4, the tile classification -> annotations feature stopped working. I've tested it on brightfield images only, with rectangular tiles and both types of superpixels. When you use the plugin, no new annotations are created, however internal annotations and the tiles themselves are deleted (when those options are selected). . If you have a single ROI selected, there's no error produced in the log. If you use ""entire image"", you get this error:. ```; INFO: Image processed in 0.00 seconds; INFO: Processing complete in 0.02 seconds; INFO: Completed!; ERROR: QuPath exception; at qupath.lib.gui.viewer.overlays.HierarchyOverlay.lambda$paintOverlay$0(HierarchyOverlay.java:196); at java.base/java.util.ArrayList.removeIf(Unknown Source); at java.base/java.util.ArrayList.removeIf(Unknown Source); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:196); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1757); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:420); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:257); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:508); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source); ERROR: QuPath exception; at qupath.lib.gui.viewer.overlays.HierarchyOverlay.lambda$paintOverlay$0(HierarchyOverlay.java:196); at java.base/java.util.ArrayList.removeIf(Unknown Source); at java.base/java.util.ArrayList.removeIf(U",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/359:419,error,error,419,https://qupath.github.io,https://github.com/qupath/qupath/issues/359,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Sorry, I again answered too quickly without time to test the code. This script at least runs, although I'm not sure if it's what you want or not:; ```groovy; //Exporting Image as .tif files; import qupath.lib.gui.ImageWriterTools. import qupath.lib.images.servers.ImageServer; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QP. import java.awt.image.BufferedImage. /*; * Adjustable parameters; */; int tileWidthPixels =1500 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 70 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput = buildFilePath(PROJECT_BASE_DIR, 'something else') // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!; mkdirs(dirOutput). int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's norm",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-486778605:578,down,downsample,578,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605,3,"['Down', 'down', 'error']","['Downsampling', 'downsample', 'errors']"
Availability,"Sorry, I didn't read closely enough.; ```groovy; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal); ```; should be removed entirely. Then you can try this; ```groovy; // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus; def imp = IJTools.convertToImagePlus(serverOriginal, request).getImage(); ```; The previous error was because you were using `server` before it was defined. But actually with the update in v0.2.0 you don't need to define `server` separately from `serverOriginal` at all. Note that v0.2.0 is a work in progress and will change further in various ways. I wouldn't really recommending switching to it and spending much time updating scripts yet.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-484671442:433,error,error,433,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-484671442,1,['error'],['error']
Availability,"Sorry, I just saw that the bug was marked close and didn't think deeper about it. Yes, the bug was gone in version 0.1.3 on the same computer (Windows 10) and with the same tablet and drivers.; So to specify what was working in 0.1.3:. - Pan (using e.g. spacebar or move tool) would correctly move the viewport in the desired direction. Moving up or down would not result in pan AND zoom; - Pen pressure would change the brush size to mimic the brush strokes of a paint brush and thus making it much more flexible when doing precise annotation at different zoom levels. By the way, it would be a neat feature if it was possible to rotate images more than +-90 degrees and perhaps even flip them (for when you want to align images in two viewports).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-479515958:350,down,down,350,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479515958,1,['down'],['down']
Availability,"Sorry, I should have said I tested it only with v0.2.0-m3 - where it works for brightfield only if I disable the brightness/contrast thing (which is where I'm only guessing it should work for fluorescence...). My guess/hope is that that is the source of the error if you were using v0.2.0-m2. I've been working towards adding javadocs for all the public methods in QuPath and have written many hundreds so far, but still have many more to go... I'm afraid it will take a while. I try to answer questions about the milestones as they change, but I'm afraid I can't really support the older ones (not least because it's hard to keep all the changes in my head, and set up a scripting environment for each). I'd really advise to switch from m2 as soon as feasible:; https://forum.image.sc/t/third-milestone-on-the-path-to-qupath-v0-2-0/27953/15",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/202#issuecomment-520238887:258,error,error,258,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-520238887,1,['error'],['error']
Availability,"Sounds good, but I have been a bit busy here, just started the download now, and probably won't be back to take a look at it for ~12 hrs. Should be able to have a look at it then.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/157#issuecomment-372679831:63,down,download,63,https://qupath.github.io,https://github.com/qupath/qupath/issues/157#issuecomment-372679831,1,['down'],['download']
Availability,"Sounds like a potential memory leak, but I'm not aware of any that would cause this. > I still have 15GB free. Is this available to QuPath, or only to the operating system? You can track QuPath's memory use with *View &rarr; Show memory monitor* (although this won't include anything JavaCPP does... which mostly means things connected with pixel/object classifiers). There are some instructions for making more memory available to QuPath [here](https://qupath.readthedocs.io/en/stable/docs/reference/faqs.html#set-max-memory). If you're comfortable digging deeper, [VisualVM](https://visualvm.github.io) is extremely helpful for tracking memory in any running Java application (and is what I'd use if I could replicate the issue). Apart from that, how are you running positive cell detection - interactively, or from a script? How do you define the regions within which cells are detected?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/828#issuecomment-932368906:119,avail,available,119,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932368906,2,['avail'],['available']
Availability,"Sounds like that could work. I will play with the script and will also try running the cell analysis only one level down. It appears that Qupath currently applies the TMA name one level down but maybe not two.; Within my TMA cores, I run the tissue identification and then run the cell and membrane analysis within the annotated areas. Under Name the core identifier is present for the annotated tissue but not for the cells inside the annotated tissue.; Thanks, I'll get back to you tomorrow.; H",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/59#issuecomment-289513743:116,down,down,116,https://qupath.github.io,https://github.com/qupath/qupath/issues/59#issuecomment-289513743,2,['down'],['down']
Availability,Speed up object masking,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1639:16,mask,masking,16,https://qupath.github.io,https://github.com/qupath/qupath/pull/1639,1,['mask'],['masking']
Availability,Spurious 'Physical memory usage is too high' errors when training a pixel classifier,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856:45,error,errors,45,https://qupath.github.io,https://github.com/qupath/qupath/issues/856,1,['error'],['errors']
Availability,"Strange... it suggests the cause is the one that I expected (not being able to load native libraries), but I'm not sure why it's happening here. You should be able to just delete the directory containing everything downloaded from GitHub; if you want to check where it is, inside GitHub Desktop you can choose _Repository &rarr; Show in Explorer_. . Then you can start again with https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#building-qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-411636630:215,down,downloaded,215,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411636630,1,['down'],['downloaded']
Availability,"Support reloading display settings; 1. via drag & drop onto a viewer; 2. in a script. Here's an example that uses the display settings to export rendered RGB images with different settings (saved in the project):. ```groovy; import qupath.lib.gui.images.servers.RenderedImageServer; import qupath.lib.gui.viewer.overlays.HierarchyOverlay. import static qupath.lib.gui.scripting.QPEx.*. // Choose a sensible downsample; def imageData = getCurrentImageData(); double downsample = Math.max(1.0, Math.max(imageData.server.width, imageData.server.height) / 512). // Get the viewer for some options; def viewer = getCurrentViewer(). // Create an output directory; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'rendered_export'); mkdirs(dirOutput). // Get the image name; def name = getCurrentImageNameWithoutExtension(). // Create a rendered server that includes a hierarchy overlay using the display settings saved in the project; for (def settingsName in ['my first settings', 'my second settings']) {; def settings = loadDisplaySettings(settingsName); def server = new RenderedImageServer.Builder(imageData); .downsamples(downsample); .settings(settings); .layers(new HierarchyOverlay(viewer.getImageRegionStore(), viewer.getOverlayOptions(), imageData)); .build(); ; // Write the image; String path = buildFilePath(dirOutput, ""$name [$settingsName].png""); writeImage(server, path) ; }; ```",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1359:407,down,downsample,407,https://qupath.github.io,https://github.com/qupath/qupath/pull/1359,4,['down'],"['downsample', 'downsamples']"
Availability,Switch back to pkg because dmg fails after download.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/773:43,down,download,43,https://qupath.github.io,https://github.com/qupath/qupath/pull/773,1,['down'],['download']
Availability,"Switching to apply the syntax highlighting asynchronously appears to address this issue... or at least make the error less obtrusive. This will be in v0.2.0-m4. Replacing the script editor is still preferable in the longer term, for performance, features and maintainability.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/241#issuecomment-518353876:112,error,error,112,https://qupath.github.io,https://github.com/qupath/qupath/issues/241#issuecomment-518353876,1,['error'],['error']
Availability,Sync 'Create single measurement classifier' combo boxes to available classes,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/883:59,avail,available,59,https://qupath.github.io,https://github.com/qupath/qupath/pull/883,1,['avail'],['available']
Availability,TMA in CZI format - with 120 scenes brings QuPath down to crash,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/45:50,down,down,50,https://qupath.github.io,https://github.com/qupath/qupath/issues/45,1,['down'],['down']
Availability,"TMA in CZI format - with 120 scenes brings QuPath down to crash. . I have no informatic education - so i can not specify the problem in more detail. If you have further questions to solve the issue, i rely on your questions to me.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/45:50,down,down,50,https://qupath.github.io,https://github.com/qupath/qupath/issues/45,1,['down'],['down']
Availability,Temporarily active 'Selection mode' by holding down the `S` key while interacting with a viewer,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1600:47,down,down,47,https://qupath.github.io,https://github.com/qupath/qupath/pull/1600,1,['down'],['down']
Availability,"Thank you !; With Gradle the build ends properly despite some warnings and It ran in a CentOS 7, with some errors, but it ran :. ```; $ QuPath; 13:20:05.914 [main] [INFO ] qupath.QuPath - Launching QuPath with args: ; Prism-ES2 Error : GL_VERSION (major.minor) = 1.4; 13:20:06.362 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to fr_FR; 13:20:06.366 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 13:20:06.396 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Tile cache size: 3568,00 MB; 13:20:07.893 [JavaFX Application Thread] [ERROR] qupath.opencv.OpenCVExtension - Unable to load OpenCV libraries!; java.lang.UnsatisfiedLinkError: /soft/c7/qupath/0.1.3/app/libopencv_java310.so: /lib64/libstdc++.so.6: version `GLIBCXX_3.4.20' not found (required by /soft/c7/qupath/0.1.3/app/libopencv_java310.so); 	at java.lang.ClassLoader$NativeLibrary.load(Native Method); 	at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941); 	at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857); 	at java.lang.Runtime.loadLibrary0(Runtime.java:870); 	at java.lang.System.loadLibrary(System.java:1122); 	at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:59); 	at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:72); 	at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:116); 	at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1099); 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:645); 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:437); 	at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63); 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863); 	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326); 	at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295); 	at java.security.AccessController.doPrivileged(Na",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/150#issuecomment-368857650:107,error,errors,107,https://qupath.github.io,https://github.com/qupath/qupath/issues/150#issuecomment-368857650,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'errors']"
Availability,"Thank you Pete for your fast reply!. I am already looking forward to that update!. . I appreciate your work so much!. . Best,. Marcel. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 24. Juli 2018 11:13; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . As far as I remember, the fix I made is in a different branch and so not in v0.1.3 yet.; But I can confirm that there is no combination of settings in v0.1.2 to work around this, unfortunately... it will require an update to QuPath itself. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-407442971> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t4lxL8zuwRnSs13DwCom_Y8IfbkSks5uJzl2gaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t9545gipQaUMFkktOfyaa_Ebxhdiks5uJzl2gaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-407444374:335,down,down,335,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-407444374,1,['down'],['down']
Availability,"Thank you Pete. Kathy. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Monday, June 8, 2020 at 12:11 PM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). This looks like a simple bug, albeit one that has existed for some months at least - weirdly without being reported before. Should be fixed in the next minor release, but I first need to check it in more detail. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-640758278&data=02%7C01%7Ckyee%40umc.edu%7Cd4b7b44c44274db73a8308d80bcef036%7C78a0681ef0be47e280498616858818a5%7C0%7C1%7C637272330716768343&sdata=I6ByW3NeHWrDm7VTBAvpv2MpkhL6TLrhVIKQdriYgAA%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNEYF5JGJNVJRBCHLL3DRVULSZANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7Cd4b7b44c44274db73a8308d80bcef036%7C78a0681ef0be47e280498616858818a5%7C0%7C1%7C637272330716773334&sdata=3J8BiWMPaBCV6Q7lr8IOEGiTxaRqEaq2AUvxwH2crGY%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/518#issuecomment-640759146:1410,error,error,1410,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640759146,1,['error'],['error']
Availability,"Thank you both for answering! @Svidro and @petebankhead ; I started all over again, so I don't have the workflow anymore. Nevertheless, what I meant was that I used indeed the pointing tool. I had two populations, one negative and one positive. After I ran the positive cell detection, the negative population was gone. And unfortunately, there is no undo button. My goal was indeed compare the manual counting and the automated counting. For optimization. I don't know whether the error is the lack of RAM, I checked and i have 3,3GB available. And I only have 4 ROI's in one image. When I run the analysis, I make sure nothing is selected and choose the option 'all annotation'. It might be, but it might be not, because sometimes it also does not analyse only 1 ROI, but other times it does. However, the log it says 'memory error'. the programs that are running on my computer besides Qupaht are google chrome (1tab), one note with an excel file, and file explorer. ![capture](https://user-images.githubusercontent.com/33484227/32604466-0266ac66-c54e-11e7-9a9b-ede61554510b.PNG); ![capture2](https://user-images.githubusercontent.com/33484227/32604472-05d80ef8-c54e-11e7-97d1-b1540f6ee388.PNG); ![capture3](https://user-images.githubusercontent.com/33484227/32604473-07eafa66-c54e-11e7-9aca-94fae7d0e9da.PNG). I really don't know why sometimes it works or not, but i'll be more careful in what I'll do.; Unfortunately, there was also no backup file in the folder after the failure of saving.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343227944:482,error,error,482,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343227944,4,"['avail', 'error', 'failure']","['available', 'error', 'failure']"
Availability,"Thank you both for answering!. > This makes sense, but are there use cases where it would not be appropriate?. I can't think of any myself... however, if you run a command like; ```; selectAnnotations(); ```; then if there is more than 1 annotation available, the one that will become the 'primary' selected annotation is (from the user's perspectively) essentially random. Randomness doesn't feel good in this scenario, but neither does seemingly not having a selected object when you can plainly see that you definitely have selected object**s** (as is currently the case). > Or at least to me, this does not make sense. Not only does it quickly become more complex, but I personally don't believe a larger ROI is any more important than a smaller one. Perhaps it depends on the context. Good! Inasmuch as I don't like the idea much either. Its only benefit really is that it makes the choice non-random. I think sometimes it would 'feel' like the right choice, e.g. imagine if you have one large tissue annotation and two little annotations inside. I think making the large one the primary selection would feel somehow intuitive. But if, on the other hand, you have three annotations of similar size and importance I agree it doesn't make much sense. And it's probably better not to introduce too much predictable-but-dubious behavior, lest *someone* make it a key part of their workflow... So yeah, I think the size-based idea can be discarded. > I am not sure about null, but if having a primary selected object is important, not having one could throw a meaningful error rather than returning null. Hmmm, that sounds like it could work for code internal to QuPath, as long as it always checks both for `getSelectedObject()` and `getSelectedObjects()`. Although if calling either method in a script, the ambiguity and potential for confusion remains. Although then the question resurfaces, is it better to just leave things as they are?. In any case, the proposed change is implemented at https:/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/758#issuecomment-869217737:249,avail,available,249,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869217737,1,['avail'],['available']
Availability,"Thank you both for your response. I would preferably like to run the software on the mac but have access to PC too if this is more suitable . The original files I wanted to work with were TMAs with multiple scenes but I cannot even open a jpg file. I am at home now and I am on my mac and it is still not opening the jpg files. . Thank you for looking into addressing the qupath bio-formats extension. In the meantime, should I need to download any extensions to run the software on the mac? I know in your tutorial for start ups you suggest you do but I have had no joy with this . Thank you again",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/135#issuecomment-357053806:436,down,download,436,https://qupath.github.io,https://github.com/qupath/qupath/issues/135#issuecomment-357053806,1,['down'],['download']
Availability,Thank you for your quick response! I followed the instruction in the link you gave and successfully converted the TIF to a pyramidal format using this command:; `convert before_converting.tif -compress jpeg -quality 75 -define tiff:tile-geometry=256x256 ptif:after_converting.tif `; But it can't be opened either. Here is the log:; ```; ERROR: Openslide: Property not available: openslide.mpp-x; ERROR: Openslide: Property not available: openslide.mpp-y; ERROR: Openslide: Property not available: openslide.objective-power; ERROR: QuPath exception; ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/221#issuecomment-423805036:337,ERROR,ERROR,337,https://qupath.github.io,https://github.com/qupath/qupath/issues/221#issuecomment-423805036,7,"['ERROR', 'avail']","['ERROR', 'available']"
Availability,"Thank you for your quick response, Pete. Today morning I tried to provoke this error with different classifiers. The error occured with 'Random trees', 'Artificial neural network' and 'Logistic regression'. I think the more settings I change, the more likely the error will occur - but I couldn't figure out if a single setting is the reason. With my usual approach I train the pixel classifier on a project training image. If I could successfully save the classifier and load it for another image in the project, I get the following error messages for ANN and KNN:. ANN classifier:; ![err_ann](https://user-images.githubusercontent.com/59967282/73450688-34d01a00-4366-11ea-9c8f-7e08251c6261.png). KNN classifier:; ![err_knn](https://user-images.githubusercontent.com/59967282/73450694-37cb0a80-4366-11ea-98f8-17df5cefcf52.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/394#issuecomment-580236559:79,error,error,79,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-580236559,4,['error'],['error']
Availability,"Thank you so much for answering. Is that information that you asked about my memory?. -------------- S Y S T E M ---------------. OS:; Windows 10 , 64 bit Build 19041 (10.0.19041.3570); OS uptime: 5 days 10:23 hours. CPU: total 6 (initial active 6) (6 cores per cpu, 1 threads per core) family 6 model 158 stepping 10 microcode 0xea, cx8, cmov, fxsr, mmx, 3dnowpref, sse, sse2, sse3, ssse3, sse4.1, sse4.2, popcnt, lzcnt, tsc, tscinvbit, avx, avx2, aes, erms, clmul, bmi1, bmi2, rtm, adx, fma, vzeroupper, clflush, clflushopt; Processor Information for all 6 processors :; Max Mhz: 3000, Current Mhz: 3000, Mhz Limit: 3000. Memory: 4k page, system-wide physical 7966M (772M free); TotalPageFile size 23838M (AvailPageFile size 7045M); current process WorkingSet (physical memory assigned to process): 3284M, peak: 3876M; current process commit charge (""private bytes""): 6219M, peak: 6444M. vm_info: OpenJDK 64-Bit Server VM (17.0.8+7) for windows-amd64 JRE (17.0.8+7), built on Jul 18 2023 21:02:32 by ""admin"" with MS VC++ 16.7 (VS2019). END. From: Pete ***@***.***>; Sent: Thursday, November 2, 2023 2:08 PM; To: qupath/qupath ***@***.***>; Cc: Farias Da Guarda, Suzete Nascimento ***@***.***>; Mention ***@***.***>; Subject: Re: [qupath/qupath] Load training in object classifier -> QuPath crashes (#493). External Email - Use Caution. @suzeteguarda<https://secure-web.cisco.com/15zJZ1AC2HfUFv9L0mLItqMCfEQMcq1aVBJmggNtWQuQ1aMdkxQL4M8DQsziZIjbQclRsiUgnd4btBVr7WmNM9GAmb5IdGegWqzsNoLW7i0t8ZduDtcd418DQ9BIIDpRAJC02UjlE2keamNPfGPyTA13hxoJ6aI6fRjs8P6PPD3ag1gjsZJuHqXh28XIp9ClIy6uiD9WiE2a29pnEogefoBAUSjm8iBfMR0HcxqAtG_TdnAk0f4Y8BA4E5sVwzFhbDhm_alns-l7jx4c65825lN1brlaamgEFYOcr-bx0yB5-ONuFLKVRdD6nCGWcI1iPAsoohE7nnVhyPIYtURWpKQ/https%3A%2F%2Fgithub.com%2Fsuzeteguarda> you could try posting your question on the forum at https://forum.image.sc/tag/qupath<https://secure-web.cisco.com/13_E9lRMQxY8xtZmKYPnw2mmwaiElPiHzTIMUOwQH_-6FzgRz4LkCsf_cFjrfUWLwo9750a0MmRr_eXTVN0eusQkomn-qYLuoCcVIKhtD0lyGLisH8Fxc-WF",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:708,Avail,AvailPageFile,708,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738,1,['Avail'],['AvailPageFile']
Availability,"Thank you so much! In the best case I would like to have a downsampling factor of 1, so larger!; Maybe I was too dumb to see it, because I already had this issue open, but this:. ```; import javax.imageio.ImageIO; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed ; if (Thread.currentThread().isInterrupted()); break; // Write the image; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, core.getROI())); ImageIO.write(img, 'PNG', new File(dirOutput, core.getName() + '.png')); }; print('Done!'); ```. is basically what I am searching for, isn't it (I never programmed Java or Groovy)? This posted Pete in Issue 97. . One further question: To execute this within QuPath's Script editor, do I have to install something before? . Best",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/317#issuecomment-494027815:59,down,downsampling,59,https://qupath.github.io,https://github.com/qupath/qupath/issues/317#issuecomment-494027815,3,['down'],"['downsample', 'downsampling']"
Availability,"Thank you very much for your help, but I have a new problem. How can I save the results to my local disk? ; ------------------------------------------script---------------------------------------; import static qupath.lib.scripting.QP.*; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; ---------------------------------------------error---------------------------------------; 04:25:18.186 [main] [INFO ] QuPath - Launching QuPath with args: /oamp/bio/QuPath/0.1.2/command/9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg, -script, 2.groovy; Script result: false; ------------------------------------------------------------------------------------------; thanks!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213#issuecomment-419363485:887,error,error,887,https://qupath.github.io,https://github.com/qupath/qupath/issues/213#issuecomment-419363485,1,['error'],['error']
Availability,"Thank you. Alan. From: Pete <notifications@github.com>; Sent: Tuesday, April 28, 2020 12:38 AM; To: qupath/qupath <qupath@noreply.github.com>; Cc: Alan Jerusalmi <ajerusalmi@bioaihealth.com>; Mention <mention@noreply.github.com>; Subject: Re: [qupath/qupath] Issue staring QuPath 0.2.0 m9 or m10 (#458). @ajerusalmi<https://github.com/ajerusalmi> the error is caused by the old Weka extension being installed. This is compatible with v0.1.2, but not v0.2.0. Two things you can do:. * delete the Weka extension; to find its location, go to Edit → Preferences and check the 'QuPath user directory'; * use Edit → Reset preferences to reset the location of the user directory in QuPath, so the extension will not be found. I will close this issue since it is not a bug, however a change has been made for v0.2.0-m11 to enable QuPath to recover better in cases like this, see #454<https://github.com/qupath/qupath/issues/454>. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/458#issuecomment-620375806>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AO6FMERJ4NRH6754WL7Q6ELROZMSBANCNFSM4MSNUQHQ>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/458#issuecomment-620601601:351,error,error,351,https://qupath.github.io,https://github.com/qupath/qupath/issues/458#issuecomment-620601601,2,"['error', 'recover']","['error', 'recover']"
Availability,"Thanks @Edwinterb yes, we used to provide a dmg but recent macOS releases thwarted that - they were particularly unhappy if this was downloaded, and seemed to work extra hard to make it non-runnable. The pkg has proven the 'least painful' distribution method, and the right-click trick is documented [here](https://qupath.readthedocs.io/en/0.4/docs/intro/installation.html#macos). I do most of my development on a Mac, so suffer the pain directly. `jpackage` integrates well with our build tools, and seems to be the 'official' way to make installers for Java applications. I'm not good enough with XCode, build tools or GitHub Actions to figure out a way to piece together an alternative that gives an opportunity to squeeze in a proper version number. @alanocallaghan would have a better chance of figuring it out than I do, but I don't see how I can possibly mention it to him when he's already [embroiled in other macOS-related woes](https://github.com/qupath/qupath/issues/629#issuecomment-1723504495) - without actually being a Mac user.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1727694329:133,down,downloaded,133,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1727694329,1,['down'],['downloaded']
Availability,"Thanks @MakarowMax, I haven't seen this error before but I am able to replicate it when I chance to the *Logistic Regression* classifier. I can change to *Artificial Neural Network* without problems. Is this also true for you?. It's curious because I am fairly sure I have used *Logistic Regression* without errors in the past; I'm not sure if it depends upon operating system or if any recent updates might be causing the trouble. In any case, the error occurs deep within OpenCV - and unfortunately there is no possibility to capture the exception within QuPath before the Java Virtual Machine shuts down. In the past, the only solution I could find to OpenCV errors like this has been to avoid calling the crashing code. In this case, that would mean removing the *Logistic Regression* option. I haven't found it to be terribly useful (even when it worked) so I don't think this would be a big loss; I personally prefer *Artificial Neural Network* (and sometimes *Random Trees*). *K Nearest Neighbor* really only makes sense when training using point annotations (when given a large number of samples it is too slow). What do you think? Does it happen to you with other classifier types as well?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/394#issuecomment-579836335:40,error,error,40,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-579836335,5,"['down', 'error']","['down', 'error', 'errors']"
Availability,"Thanks @NHPatterson and @JoelRV . In both cases, Bio-Formats appears not to see the pyramidal levels and instead tries to open everything - and that is the reason for any attempting to open being very slow and requiring a lot (or too much) memory. It might be worth following up on this with the Bio-Formats team on GitHub or https://forum.image.sc/; Since Bio-Formats writes OME-TIFF, which now supports pyramidal images, you could also use `bfconvert` to create a more Bio-Formats friendly image in the first place. Therefore success only comes if OpenSlide opens the image instead. This was failing because of too harsh a check that the pixel sizes are available and valid, and my recent commit should fix this. I'm now able to open both images - _but without pixel size information_. I'm not sure if it should be there or not, but it's progress. @JoelRV the reason it's still failing for you seems to be because OpenSlide is not being loaded correctly on Ubuntu... which is a problem I've never quite solved, and success seems largely dependent on whether enough other stuff happens to be installed already. Could you try installing OpenSlide through your package manager and see if that helps ensure the dependencies are all available?. Ultimately, QuPath + OpenSlide on Linux has issues.... OpenSlide has some sub-dependencies (e.g. libtiff) and these aren't searched for in the place that I hoped they would be (i.e. the QuPath directory) but rather elsewhere on the system. So either a new, more portable way of packaging up OpenSlide needs to be found, or else is should be installed separately, or else Linux users would have to rely more on Bio-Formats. But that of course requires Bio-Formats to work for your file formats...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472470374:656,avail,available,656,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472470374,2,['avail'],['available']
Availability,"Thanks @NHPatterson. @petebankhead I tried recompiling the java-11 branch on my main machine, but it keeps failing with the same error.; For my cursiosity, did you try loading the same files with the published 0.1.2 or 0.1.3-SNAPSHOT versions. For example using the later I have the following log after opening everything without issues:. ```; ./QuPath ; 12:25:42.077 [main] [INFO ] qupath.QuPath - Launching QuPath with args: ; 12:25:42.710 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to fr_BE; 12:25:42.714 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 12:25:42.742 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Tile cache size: 4096,00 MB; 12:25:43.922 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/joelrv/QuPath/extensions; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Open",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472813709:129,error,error,129,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709,1,['error'],['error']
Availability,"Thanks @NicoKiaru that sounds pretty similar to what I've tried to do here. As far as I can see, my implementation is working ok so I'll stick with it for now. One minor difference is that my version restricts creating new readers to a single background thread, since I found that sometimes (although rarely) constructing many reader simultaneously had really bad performance, as all the constructors got stuck parsing XML. By ensuring readers are created sequentially, I avoid blocking for too long when tile reading is substantially faster than reader initializing: if a thread wants a reader, it puts in its request. If there's a reader available, it gets that immediately. If not (and the max reader limit isn't reached) a background thread goes off to create a new reader. The original thread will then wait for the next available reader - which *might* be the one initialized because of its request, but it might also be one that has since become available. Waiting time is minimized in any case. I also added some `Cleaner` support from Java 9 to handle the fact that it's easy to miss closing an `ImageServer` properly. PS. Since the recycling is really important, should you do it in a `finally` block?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/867#issuecomment-1002502877:640,avail,available,640,https://qupath.github.io,https://github.com/qupath/qupath/pull/867#issuecomment-1002502877,3,['avail'],['available']
Availability,"Thanks @Svidro, I have lost track of which scripts I've written and where :); But yes, that would give a way to handle areas... and shows the trouble involved (separate list of external polygons and holes). It's also possible to get `java.awt.Shape` objects for any QuPath `ROI` and have the task of exporting them; still a job to do, but at least there is likely to be more documentation available. It would be worthwhile to have a general export function within QuPath; but my question is about which format should be used for export. Ideally it would be a standard, open format of general usefulness in the digital pathology community. Ideas welcome!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/95#issuecomment-388118309:389,avail,available,389,https://qupath.github.io,https://github.com/qupath/qupath/issues/95#issuecomment-388118309,1,['avail'],['available']
Availability,"Thanks @ap-- and @j-hudecek :). The acceptance of this API change has me now thinking about going a step further... I am missing a method like; ```java; public T readLevel(int level, ImageRegion region);; ```; where the `level` is a specific level of the pyramid (0 for full-resolution). Currently, if I want to get a rectangle of pixels from level 2, I need to figure out the coordinates in the full-resolution image (i.e. multiply by the downsample value). Then QuPath should find them again after dividing by the downsample. However, the coordinates need to be integers - which makes me uneasy about what happens if the downsample is something like 4.23452345.; Should I be rounding or flooring when I scale up the coordinates?; And can I be sure that QuPath will do the right thing when it scales them back down, so that I get the original coordinates I wanted again...?. If not, then it seems I might get off-by-one errors and slightly unexpected results. If I want a 256 x 256 pixel region, I might end up with a 255 x 256 pixel region... which would be annoying. It seems that I can round or floor when scaling up, and then round or floor when scaling down, but I wasn't completely sure which I should be doing so I created a quick Python simulation to test what happens: https://gist.github.com/petebankhead/2d4a21cb69f3b68c8f8fa14475723647. Based on this, it seems I need to round in both directions... which was maybe a predictable conclusion for the more mathematically confident, but I wasn't sure of it's what QuPath does internally* and we can't count on users necessarily knowing that. (*However*, note that if the downsample is < 1 then all the methods fail...). I think it would be nice to resolve the ambiguity somehow, although adding an extra method; ```java; public T readLevel(int level, int x, int y, int width, int height, int z, int t);; ```; looks like a horrible explosion of ints. A possibly-simpler alternative might be to support something like this:; ```java; public T r",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072#issuecomment-1278540089:440,down,downsample,440,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072#issuecomment-1278540089,5,"['down', 'error']","['down', 'downsample', 'errors']"
Availability,"Thanks @ap-- it's tempting since QuPath generally µm/px values where it can, but the trouble is that we can't count on them always being available. When I know it's there, I end up doing a lot of; ```groovy; double downsample = requestedPixelSizeMicrons / server.getPixelCalibration().getAveragedPixelSizeMicrons();; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072#issuecomment-1279724824:137,avail,available,137,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072#issuecomment-1279724824,2,"['avail', 'down']","['available', 'downsample']"
Availability,"Thanks @bgilbert - that sounds really promising. If I can help at all with maintaining OpenSlide Java just let me know. @cpwardell thanks, but this is a bit off-topic & would be better [discussed this on the forum](https://forum.image.sc/tag/qupath). There are other files and formats where OpenSlide reading is more reliable and/or more performant than using Bio-Formats. That's why QuPath attempts to use sensible defaults, while also [giving you the option to override them](https://qupath.readthedocs.io/en/0.4/docs/tutorials/projects.html#add-images).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1359579785:317,reliab,reliable,317,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1359579785,1,['reliab'],['reliable']
Availability,"Thanks @finglis the more I think about this, the more I think we **really** need this. Relatedly, I wonder if we could build on the idea to make auto-estimating the image type smarter?. My first (and entirely untested) idea would be to . * loop through all the known stain vector combinations; * apply the stain vectors to an image; * and calculate the mean absolute value (for example) of the residual; * select the vectors where the error is minimized. This would only be suitable for 2 stains and might not handle artifacts very well, so I imagine it would need some refinement. But perhaps we can incorporate more prior knowledge (e.g. that stains should be negative) while still keeping the method simple and fast to compute. The goal would be to enable a user to have the (probably small) number of stain vectors that are relevant for their images based upon their image sources/scanners, and have QuPath make more intelligent suggestions which to use - rather than relying upon scripting or using *Estimate stain vectors* on every image. But I guess any auto-estimate is likely to be wrong sometimes. So some other related ideas:. * We could incorporate stain selection into the ""Project import"" dialog (alongside where we set the image type) to give another way of ensuring an image batch has consistent stain vectors set.; * We could add a 'Run for project'-like command that specifically exists to transfer the image type and stain vectors from the current image to all images in the project. This can already be scripted easily, but isn't very approachable for people who really don't want to handle scripts. Logging the ideas here for consideration when we come to tackle the original enhancement, and in case any are worth discussing.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1247#issuecomment-1452171437:435,error,error,435,https://qupath.github.io,https://github.com/qupath/qupath/issues/1247#issuecomment-1452171437,1,['error'],['error']
Availability,"Thanks @franfcunha !. I recently opened a (very small, single-channel) .jp2 image in QuPath with the help of Bio-Formats, but I do not have a whole slide image in that format to test. JPEG2000 *does* currently appear on the [Bio-Formats list of supported formats](https://www.openmicroscopy.org/site/support/bio-formats5.4/supported-formats.html) with a tick in the 'pyramid' column... but I am not sure whether that should be interpreted as meaning pyramidal .jp2 whole slide images are supported, or if it is simply a comment on the capabilities of the format. I would suggest asking the OME team about this through their [mailing list](http://lists.openmicroscopy.org.uk/mailman/listinfo/ome-users/) - they are the experts. Apart from that, in QuPath under *View &rarr; Show log* you may get more useful information to help track down the source of any error. Where Bio-Formats is involved, I would also recommend trying to open a cropped/lower resolution part of any problematic image with [Fiji](http://fiji.sc) as well, since the Bio-Formats plugin for Fiji is much more established. This can helps to track down whether the problem is most likely to be with the file itself, the file reader, or the QuPath extension.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/72#issuecomment-299391470:833,down,down,833,https://qupath.github.io,https://github.com/qupath/qupath/issues/72#issuecomment-299391470,3,"['down', 'error']","['down', 'error']"
Availability,"Thanks @ozen I can replicate the issue with this file. The error message shows that the problem comes as QuPath tries to draw the annotation on screen at a low resolution. If shouldn't affect files without annotations, but I should be able to take steps to make this bit of the code more robust. In the meantime, you can try this script to update the ROIs to the 'new' format. That appears to resolve the problem for me.; ```groovy; def annotations = getAnnotationObjects(); annotations = annotations.each { a ->; if (a.getROI().getClass().getSimpleName().contains('Area')); a.setROI(GeometryTools.geometryToROI(a.getROI().getGeometry(), a.getROI().getImagePlane())); }; fireHierarchyUpdate(); ```. I think (but haven't confirmed) that it should be possible to use _Run &rarr; Run for project_ to apply this across your project (but of course best to do it to a copy, not the original!).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/376#issuecomment-554910235:59,error,error,59,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554910235,2,"['error', 'robust']","['error', 'robust']"
Availability,"Thanks @reynoldscem, I haven't seen this before. Is there an easy way for me to get an image that fails without downloading the whole dataset? I will only have a few minutes to look at it today and couldn't easily identify the offending image through the ANHIR link. Otherwise I can wrap the code where the error occurs in a try/catch block so that if it can't resolve the overlap it will at least fail less catastrophically... but I will be guessing the fix without being able to test it directly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/459#issuecomment-620641833:112,down,downloading,112,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-620641833,2,"['down', 'error']","['downloading', 'error']"
Availability,"Thanks @saudet I've just tried this with the latest `javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar` on my M1 MacBook Pro. I do still see the error, but it seems to take longer to reach (I had to train 3 classifiers rather than 2). ```; Runtime:; maxMemory() 	4096 MB; totalMemory() 	4088 MB; freeMemory() 	2722.48044586181640625 MB; Memory used 	1365.51955413818359375 MB. Pointer:; maxBytes() 	4096 MB; maxPhysicalBytes() 	16384 MB; totalBytes() 	0.00213623046875 MB; physicalBytes() 	17062.1875 MB. Total count: 	38. Operating system:; Total: 	16384 MB; Available: 	26.12109375 MB; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1021270775:136,error,error,136,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1021270775,2,"['Avail', 'error']","['Available', 'error']"
Availability,"Thanks @saudet that showed me that I forgot about ~/.javacpp/cache and I was still on opencv-4.5.4-1.5.7_SNAPSHOT. I deleted my JavaCPP cache and updated the dependency, but I'm still seeing the error. As far as I can tell, the right libraries are being loaded. If I run a Groovy script in QuPath to print `Loader.getLoadedLibraries()` I see:. ```; opencv_ml@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_ml.405.dylib; gfortran@.5 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; jniopencv_core : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_core.dylib; gfortran@.3 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; gfortran@.4 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.4.dylib; gcc_s@.1 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniope",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:195,error,error,195,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980,1,['error'],['error']
Availability,"Thanks Benjamin! That's really good to know, I had not realised that installing the redistributable was necessary. I have added the link to https://github.com/qupath/qupath/wiki/Supported-image-formats#zeiss-czi. On the topic of CZI support, I have recently learned there may be some memory issues connected to reading CZI files that have been 'prestitched' using QuPath + Bio-Formats... is this something you have encountered / solved at all?. In the example I looked at, reading a single tile at the highest resolution would require preallocating an array that is the size of the entire full-resolution image whenever JPEG-XR compression was used... which would lead to out-of-memory errors in most cases. However I am not clear on the exact cause of this, and any insights would be very welcome.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/43#issuecomment-272952005:686,error,errors,686,https://qupath.github.io,https://github.com/qupath/qupath/issues/43#issuecomment-272952005,1,['error'],['errors']
Availability,"Thanks Pete 😄! I will try to replicate the error without the extension to see if that might be the issue. . Miniconda should not be bringing any error since that is only use to create the virtual environment to install Cellpose. What is shown in the extensions window is just the path to the location of that python environment that contains the installation of Cellpose. I just used those settings to show how paths set from the first installation were being drag to the second one. . I think the behavior should be like the one observed when using the zip installation where every time that is installed it resets the preferences. . From all of these, I still think it might have been a user privilege difference. What I mean with this is that, if the first user installing QuPath is admin it sets the preferences globally. Then the second user, which doesn't have admin rights, seems to preserve first installation preferences and is able to navigate the first users files. The solution from my end was to proceed and install the zip version and uninstall the .msi version. Sorry for not being able to explain this more straight forward",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108#issuecomment-1302519161:43,error,error,43,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108#issuecomment-1302519161,2,['error'],['error']
Availability,"Thanks Pete, it works, although it generate a multiple times the following error message:. `; ERROR: QuPath exception; at com.sun.javafx.tk.Toolkit.checkFxUserThread(Toolkit.java:236); at com.sun.javafx.tk.quantum.QuantumToolkit.checkFxUserThread(QuantumToolkit.java:423); at javafx.scene.Parent$2.onProposedChange(Parent.java:367); at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:113); at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:108); at com.sun.javafx.scene.control.skin.LabeledSkinBase.updateChildren(LabeledSkinBase.java:575); at com.sun.javafx.scene.control.skin.TreeCellSkin.updateChildren(TreeCellSkin.java:197); at com.sun.javafx.scene.control.skin.LabeledSkinBase.handleControlPropertyChanged(LabeledSkinBase.java:204); at com.sun.javafx.scene.control.skin.TreeCellSkin.handleControlPropertyChanged(TreeCellSkin.java:125); at com.sun.javafx.scene.control.skin.BehaviorSkinBase.lambda$registerChangeListener$61(BehaviorSkinBase.java:197); at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55); at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89); at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.StringPropertyBase.fireValueChangedEvent(StringPropertyBase.java:103); at javafx.beans.property.StringPropertyBase.markInvalid(StringPropertyBase.java:110); at javafx.beans.property.StringPropertyBase.set(StringPropertyBase.java:144); at javafx.beans.property.StringPropertyBase.set(StringPropertyBase.java:49); at javafx.beans.property.StringProperty.setValue(StringProperty.java:65); at javafx.scene.control.Labeled.setText(Labeled.java:145); at qupath.lib.gui.panels.ProjectBrowser$ImageEntryCell.updateItem(ProjectBrowser.java:813); at java",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/103#issuecomment-332808179:75,error,error,75,https://qupath.github.io,https://github.com/qupath/qupath/issues/103#issuecomment-332808179,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Thanks Pete,. For the time being I've dealt with the multiple subtractions simply by adding all of the areas that need to be subtracted first. When things are passed in the right order things seem to work OK. I haven't looked through the code enough to understand if it's spurious or not yet, but locking also seems to make it more reliable. If it becomes an issue I'll dive a little deeper as you suggest. Besides occasionally having to learn some java-specific construction, I seem to be meandering through the code OK. . Colin",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/78#issuecomment-303464822:332,reliab,reliable,332,https://qupath.github.io,https://github.com/qupath/qupath/issues/78#issuecomment-303464822,1,['reliab'],['reliable']
Availability,"Thanks Peter. Quick and clear as usual. ; I'm getting the feeling that the latter will be a bit longer but more reliable. I assume the same approach could be taken with IntelliJ, no? ; It might be a bit of work but I think this would be an interesting feature for QuPath to have, and there might be a way to get several different user groups to collaborate and contribute images for training.; Thanks again for the direction.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/76#issuecomment-301125628:112,reliab,reliable,112,https://qupath.github.io,https://github.com/qupath/qupath/issues/76#issuecomment-301125628,1,['reliab'],['reliable']
Availability,"Thanks a lot ! It really works! I download the VIPS , use it convert my TIFF to pyramidal TIFF, and then the Qupath can open it with no problem. Thanks again for your help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/195#issuecomment-409849565:34,down,download,34,https://qupath.github.io,https://github.com/qupath/qupath/issues/195#issuecomment-409849565,1,['down'],['download']
Availability,"Thanks a lot Pete for you prompt answer and sorry for my late reply!. So, I did as you suggested to fix the not-opening issue: I have installed QuPath v0.1.2 and installed the 2 extension .jar file in it. This solved the problem and allowed me to open v0.1.3. However, I was still not able to open my .scn file properly. So, I decided to remove the qupath-extension-bioformats.jar v0.0.7 and install v0.0.5. This solved the problem. I can properly open my images now with the advantage of not having the pink image and the grey low resolution scan on the image lists. However, if I try to update the qupath-extension-bioformats.jar to v0.0.6 or 0.0.7, I have the same problem as before. Qupath load the images showing me the white macro and another image that does not open in the image list. The error it gives me is about location:. ""Sorry, I can't open /Users/alice/Desktop/Analysis/images/AL_p21ko_edu2color_20x_5_3e68c69d-05c4-4cbc-9fbc-25f745e724a9.scn::"". It is like QuPath is not able to locate my images anymore when I upgrade to the newer version of qupath-extension-bioformats.jar. Any idea why? I can wait a week or more if needed. I can still use QuPath with the v0.0.5 version, so I am not in a super rush. Thanks a lot for your help, I really appreciate. . Alice",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/270#issuecomment-468670846:797,error,error,797,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-468670846,1,['error'],['error']
Availability,"Thanks a lot. I downloaded tif from camelyon16 datasets. A single one is over 1GB. I have installed bioformats extension, but it seems cannot help. Should I need some format transformed? Thank you!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371740975:16,down,downloaded,16,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371740975,1,['down'],['downloaded']
Availability,"Thanks again, Pete!. I've tried it now and it updates both um/pixel and magnification, but I can't get it to work with the further script - probably because I'm doing some beginner mistake in the script setup - my programming ""knowledge"" is limited to cut and paste:). I run this and get the following error log (see below):. // Set the magnification & pixel size (be cautious!!!); def metadata = getCurrentImageData().getServer().getOriginalMetadata(); metadata.magnification = 40; metadata.pixelWidthMicrons = 0.25; metadata.pixelHeightMicrons = 0.25. setImageType('BRIGHTFIELD_H_DAB');; Thread.sleep(100); setColorDeconvolutionStains('{""Name"" : ""H-DAB TMA40x"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.82788 0.53885 0.15571 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.15891 0.36799 0.91615 "", ""Background"" : "" 210 208 209 ""}');; Thread.sleep(100); runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; Thread.sleep(100); selectAnnotations();; Thread.sleep(100); runPlugin('qupath.imagej.detect.nuclei.WatershedCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 14.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.09, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; Thread.sleep(100). Error log:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.g",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424986075:302,error,error,302,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075,1,['error'],['error']
Availability,"Thanks for reporting this. I have not been working with CZI images myself, but I recently received one example image with this problem. Unfortunately, I have not yet been able to identify the exact cause, beyond the fact that too much memory is used. Because the image is not being read by QuPath directly (but rather Bio-Formats) it is a bit harder for me to track down where exactly the problem lies. However, I will continue to investigate, and add an update here when I learn more. In the meantime, I have been told that the Zeiss ZEN software is able to export the different scenes as separate images, which can then be read into a [QuPath project](https://github.com/qupath/qupath/wiki/Projects). Therefore this may be a workaround that enables you to work with the images in QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/45#issuecomment-274611030:366,down,down,366,https://qupath.github.io,https://github.com/qupath/qupath/issues/45#issuecomment-274611030,1,['down'],['down']
Availability,"Thanks for the detailed response Peter. That's a great starting point. ; As a follow up, is there a good place to learn about how to access QuPath data from the groovy scripting interface? Perhaps a list of the available data stored in various objects and the methods that can be used to access them? The examples are a great start, and have been very good at interpreting the kinds of things we're hoping to do, but it can be hard to go beyond them (short of diving deeper into the QuPath code itself).; The software has been very impressive so far - great interface and the scripting capability makes it feel quite extensible. Best,; Colin",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/44#issuecomment-273939189:211,avail,available,211,https://qupath.github.io,https://github.com/qupath/qupath/issues/44#issuecomment-273939189,1,['avail'],['available']
Availability,"Thanks for the fast replies @all!. What I eventually want to do with the extracted polygon vertices, is to convert them to a binary mask, i.e. all the pixels inside the polygon will be marked as one class and the pixels of the polygon will be marked as another class. @andanis ; This approach isn't going to work out for drawing a binary mask, I think. The polygon vertices must be seperated, otherwise I will probably have all the stuff that is between each polygon also marked as the same class in the binary mask. @petebankhead ; Thanks for the code, Pete. But when I execute it, I get a blank text file. I changed `for (pathObject in getAllObjects())` to `for (pathObject in getAnnotationObjects())` which is giving the desired coordinates of all the polygons. Could you explain a little bit more about what you mean by complex polygons in discontinous regions? What do you mean by regions and when can they be discontinous?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/95#issuecomment-388285040:132,mask,mask,132,https://qupath.github.io,https://github.com/qupath/qupath/issues/95#issuecomment-388285040,3,['mask'],['mask']
Availability,"Thanks for the feedback - I much prefer the look of this. Remaining issues:. - Probably lots I've not noticed; - When you make the height large, it drags out into empty unused space at the bottom (pictured). Have tried various VBox.vgrow settings, but no avail. ![Screenshot from 2023-10-05 16-16-21](https://github.com/qupath/qupath/assets/10779688/547cea53-f03c-4f01-9ec1-ca5828082f61)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1749116788:255,avail,avail,255,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1749116788,1,['avail'],['avail']
Availability,"Thanks for the feedback!. > The main question (maybe to discuss with @alanocallaghan and @finglis) is whether we should use Optional instead of just returning null. I am slightly in favor of using it sometimes - especially when the return really is optional - but here it seems to be used where throwing an exception would be preferable.; > ; > Returning null can be informative, inasmuch as it suggests we have a sparse image without pixels for every location - and shouldn't happen whenever there has been an exception. You're right, I was overusing `Optional`. Now, each time an error occurs, an exception is thrown. I kept `Optional` only when a function is not guaranteed to return a result AND no error occurred during its execution. > ReaderWrapper looks very tied to the 'OME' way of doing things (Bio-Formats and OMERO); I'd expect a general image reader to return something more informative than a byte[][], which can only be interpreted with a lot of other return values and Bio-Formats logic. So it isn't very easy to use in a standalone way.; > ; > That isn't in itself a problem, but if writing a general image reader for use with the OMERO web API or [IIIPImage Server](https://iipimage.sourceforge.io/documentation/server) (for example) I imagine it would be far harder to return a byte[][] than a BufferedImage.; > ; > So I think it should either 1) embrace being Bio-Formats/OMERO-specific, and prioritise simplicity, or 2) incorporate more of the processing logic that converts the byte[][] into a BufferedImage, and prioritise reusability. If the goal is for ReaderWrapper and ReaderPool to be reusable, it needs to be easy to generate and work with their return values. I changed `ReaderWrapper` to be as generic as possible (its read function now returns a `BufferedImage`). However, I wanted a `ReaderWrapper` class common to Bio-Formats and OMERO (because they have a lot of code in common), so I created the `OMEReaderWrapper` class (not sure of the name) that is a child of `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1287#issuecomment-1709836979:582,error,error,582,https://qupath.github.io,https://github.com/qupath/qupath/pull/1287#issuecomment-1709836979,2,['error'],['error']
Availability,"Thanks for the prompt response, but the example I gave was probably one of the more simple type of structures that I'm interested in looking at. Another type of structure I'd be interested in looking at is the marginal invasive zone of a tumour. While at first it may seem simple (boundary between tumour and non-tumor tissue), there isn't always a clear boundary; instead there could be a lot of interwoven tumour tissue among non-tumour tissue. ; I'd be interested in a function that could classify (after training) this boundary, and I imagine it'd take into account the ratio of tumour to non-tumour regions or something like that if the computer found that to be a reliable and consistent variable in the classification of this structure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/254#issuecomment-452897098:670,reliab,reliable,670,https://qupath.github.io,https://github.com/qupath/qupath/issues/254#issuecomment-452897098,1,['reliab'],['reliable']
Availability,"Thanks for the replies. The easiest method seemed to be exporting to imagej however when I try to use the macro in batch mode, I get an error if I try to export the full size core (without downsampling). Images over 5000x5000 px don't seem to export well to imagej. Workarounds?. Thanks. Sent from my iPhone. > On Sep 1, 2017, at 00:01, Pete <notifications@github.com> wrote:; > ; > There are a few options, depending upon what exactly you want / how much effort can be involved.; > ; > Under Edit → Preferences you can change the TMA export downsample factor to be 1 to get the highest resolution. However, this will still write JPEGs. There isn't an easy way to change that; the relevant part of the code is here and it doesn't give a place to specify a different format.; > ; > If it is the image of the TMA core only that you need, then I would suggest the one-line ImageJ macro at #85. You should be able to modify this to export PNGs. The main reason for (possibly) preferring to export as TIFF instead is that this would include the pixel size information in microns, in a way that ImageJ can understand; this might be useful if you want to do some analysis on the exported cores. The main disadvantage is that the TIFF files are likely to be extremely big (while the PNGs will probably just be 'big').; > ; > It is also possible to do the QuPath export in a Groovy script. In this case, you could also export the overlay (showing the QuPath objects) as well. But this would take a bit more effort and I'm not sure if this is something you need or not.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/97#issuecomment-326631504:136,error,error,136,https://qupath.github.io,https://github.com/qupath/qupath/issues/97#issuecomment-326631504,3,"['down', 'error']","['downsample', 'downsampling', 'error']"
Availability,Thanks for the reply. I think I actually figured out why it wasn't working before. The refresh method's accessibility was changed in javafx from Java 8u60 and onwards. I didn't realize but I was running an older JRE on Eclipse and thus the compilation error.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/87#issuecomment-316820068:252,error,error,252,https://qupath.github.io,https://github.com/qupath/qupath/issues/87#issuecomment-316820068,1,['error'],['error']
Availability,"Thanks for the tip. ; ![Skjermbilde (205)](https://user-images.githubusercontent.com/43611111/82345329-6e9c5d80-99f5-11ea-9534-a5303ee739bf.png); Seems like the 64 GB system memory fills up quite quickly, while the Qupath program itself in the windows systems monitor actually reads out as using much less memory (down below 1 GB at times) after a while (while 99 percent of the system memory still used).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630894744:314,down,down,314,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630894744,1,['down'],['down']
Availability,"Thanks for your answer.; I tried to follow your tips, but I am a bit lost with the different steps and how to perform them. 1/ Detect tissue using : `Analyze>Preprocessing>Simple Tissue Detection` ✓ ; 2/ Split it into multiple tiles : `Analyze>Region Identification>Tiles & Super Pixels` then select `Make annotation tiles` and `Remove parents annotation` ✓ ; 3/ Sending each tile to ImageJ for thresholding : `Extensions->ImageJ->ImageJ Macro runner`; So at this step, I am not sure how to perform that. As an example, I set the following into the Image Macro runner:; ```; run(""8-bit"");; setAutoThreshold(""Huang dark"");; //setThreshold(187, 255);; setOption(""BlackBackground"", false);; run(""Convert to Mask"");; run(""Analyze Particles..."", "" show=Overlay display clear"");; ```; Then I selected `Send ROI to ImageJ`, `Clear Current child Object` and `Create detection object from ImageJ overlay`. ![image](https://cloud.githubusercontent.com/assets/1775952/23943366/7c26ced2-096f-11e7-9cb9-f8ca32c9e1eb.png). To run it on the wholde slide, I selected all the annotation and pressed `Run`. Is that the correct way ?. And after running, indeed it worked:; ![image](https://cloud.githubusercontent.com/assets/1775952/23943815/fe38edd2-0970-11e7-9b84-b3cf189a51b3.png). For some reason, the background has also been selected, although it was outside of the tile.; -My first question is how to avoid that?. -Second question, all detected objects are by tile, is there a way to merge the connected one?. And finally, it works tile by tile, but in case I would like to perform the Weka segmentation (which could be done easily thanks to the bridge you made via an ImageJ Macro), since the weka segmentation perform filtering (gqussian, hessian etc...), ideally, I would like to process the tile with a little bit of extra border so for example a gaussian filter with a kernel of 4 will take into account the pixel outside of the tile. But right now, it will only take into account the pixels inside the tile.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/56#issuecomment-286702227:704,Mask,Mask,704,https://qupath.github.io,https://github.com/qupath/qupath/issues/56#issuecomment-286702227,1,['Mask'],['Mask']
Availability,"Thanks for your help. Exactly, the .mds file is a kind of mirror file. The statistics I got from my teacher are all of this kind which can only be open with a special software . Otherwise some errors might occur. I agree with your guess because Qupath can open the .tif files which are pyramidal TIFF I got from camelyon challenge. But is there any method of expanding the memory or is there an alternative to solve the problem?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/195#issuecomment-409831047:193,error,errors,193,https://qupath.github.io,https://github.com/qupath/qupath/issues/195#issuecomment-409831047,1,['error'],['errors']
Availability,"Thanks for your quick reply. My bad, how could I forget to add jpackage. Yet I tried it, the error seems to be different:; ./gradlew createPackage -Ppackager=/public/home/yangzhzh/tools/jdk-14/bin/jpackage. > Configure project :; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Building QuPath version 0.2.0-m4; Current Java version: 12; /public/home/yangzhzh/tools/jdk-12.0.2; Operating system: Linux 3.10.0-862.14.4.el7.x86_64 amd64; Copying license directories: ; /public/home/yangzhzh/tools/qupath-master/qupath-core/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-core-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-bioformats/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-openslide/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin/jpackage; /public/home/yangzhzh/tools/jdk-14/bin/jpackage --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/tools/qupath-master/build/dist ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-534115250:93,error,error,93,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534115250,1,['error'],['error']
Availability,"Thanks for your report and tracking down the problem. We definitely should close any new image tile store that is being created here, although we shouldn't have to if the 'main' tile store used by QuPath is used instead. Could you try modifying your rendered server builder as shown below please?; ```java; def server = new RenderedImageServer.Builder(imageData); .display(display); .downsamples(downsample); .store(viewer.getImageRegionStore()) // The new line!; .layers(new HierarchyOverlay(viewer.getImageRegionStore(), viewer.getOverlayOptions(), imageData)); .build(); ```; I haven't tried it, but from reading the description I think it might help work around the issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1561#issuecomment-2235714291:36,down,down,36,https://qupath.github.io,https://github.com/qupath/qupath/issues/1561#issuecomment-2235714291,3,['down'],"['down', 'downsample', 'downsamples']"
Availability,"Thanks! And yes, I found the previous reports hard to find as well, even though I remembered writing them :) I've just reopened; * #894 . and changed the wording to make it easier to find until v0.4.0 is available.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1020#issuecomment-1186393557:204,avail,available,204,https://qupath.github.io,https://github.com/qupath/qupath/issues/1020#issuecomment-1186393557,1,['avail'],['available']
Availability,"Thanks! Now it partially works using this code:. ```; import javax.imageio.ImageIO; import qupath.lib.regions.RegionRequest; // Define resolution - 1.0 means full size; double downsample = 1.0; // Create output directory inside the project; def dirOutput = buildFilePath(""XXX/""); mkdirs(dirOutput); // Write the nuclei; def server = getCurrentImageData().getServer(); def path = server.getPath(); getDetectionObjects().parallelStream().forEach({Polygon ->; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, Polygon.getROI())); ImageIO.write(img, 'JPEG', new File(dirOutput, Polygon.getName() + '.jpg')); }); print('Done!'); ```. **However it only saves one Polygon** (more or less randomly, out of ca. 20). I guess its because the Polygons do not have unique names. . Is there a way to include a command in the above mentioned script that gives each Polygon an unique name?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/118#issuecomment-346793633:176,down,downsample,176,https://qupath.github.io,https://github.com/qupath/qupath/issues/118#issuecomment-346793633,2,['down'],['downsample']
Availability,"Thanks!. > Oddly enough, I ran into trouble with the new Telerium openjdk not recognizing gradlew when trying to set that up on my new computer, but was able to build and test things out on my old one so... I will look into that later. Hmmm, that can happen if you've installed the latest JDK and it's now the system default, but you haven't built QuPath in a while. I tend to update gradlew as soon as I see there's a new stable release, although that tends to come a bit after the JDK. If that's the issue that got you, the 'solution' can be to set an older JDK to be the system default (e.g. Java 11) and run gradlew using that... or find some other way to run gradle with a different, older JDK. It's able to download separately the JDK it actually needs to build QuPath, separately from the JDK used to run gradle itself - if that makes any sense. More info about [toolchains here](https://docs.gradle.org/current/userguide/toolchains.html).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/984#issuecomment-1183544161:713,down,download,713,https://qupath.github.io,https://github.com/qupath/qupath/issues/984#issuecomment-1183544161,1,['down'],['download']
Availability,"Thanks!. And generally, thank you a lot for taking the time and the chance to do such a core change to QuPath's architecture. I am certain it will have big impacts on the users, however i hope it won't weight too much on the maintenance burdening.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1579#issuecomment-2277444939:225,mainten,maintenance,225,https://qupath.github.io,https://github.com/qupath/qupath/pull/1579#issuecomment-2277444939,1,['mainten'],['maintenance']
Availability,"Thanks, I made minor edits to ensure `super.close()` is called as well, and made some variables final. One worry, possibly obscure: it looks like `dedicatedStore` is being set as a side-effect or calling `getStore()`. That's fine if the builder is only used once, but if it is reused and passed a different `store` (or `findViewer()` gives a non-null result) before the second use then I think we could still end up closing a store that is being used elsewhere. Possible workarounds:; 1. Move the `getStore()` logic into `build()` so that `dedicatedStore` doesn't need to be a field of the builder; 2. Reset the value of `dedicatedStore` whenever its value may change (e.g. `findViewer(imageData)` doesn't return `null`, or `store` is updated); 3. Build the store inside the `RenderedImageServer` if the store it is given is `null` - and then set `dedicatedStore` only within `RenderedImageServer` (which knows whether or not it created a store). I tend to think Option 3. might be the easiest to code, and most robust.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1577#issuecomment-2273859612:1012,robust,robust,1012,https://qupath.github.io,https://github.com/qupath/qupath/pull/1577#issuecomment-2273859612,1,['robust'],['robust']
Availability,"Thanks, I see the image with the smallest file size is 44304 x 25156. Uncompressed, this would require at least 44304 * 25156 * 3 bytes of memory (assuming three, 8-bit channels) - or just over 3 GB. In practice, more memory would be required as the image is being read and uncompressed. I find that I cannot open it in QuPath or ImageJ, and Bio-Formats also fails with an error ; ```; java.io.IOException: Restart interval and markers invalid; 	at loci.formats.services.JPEGTurboServiceImpl.initialize(JPEGTurboServiceImpl.java:222); 	at loci.formats.in.TileJPEGReader.reopenFile(TileJPEGReader.java:144); 	at loci.formats.in.TileJPEGReader.initFile(TileJPEGReader.java:121); 	at loci.formats.FormatReader.setId(FormatReader.java:1421); 	at loci.formats.DelegateReader.setId(DelegateReader.java:300); 	at loci.formats.in.JPEGReader.setId(JPEGReader.java:87); 	at loci.plugins.in.ImportProcess.initializeFile(ImportProcess.java:499); 	at loci.plugins.in.ImportProcess.execute(ImportProcess.java:142); 	at loci.plugins.in.Importer.showDialogs(Importer.java:140); 	at loci.plugins.in.Importer.run(Importer.java:76); 	at loci.plugins.LociImporter.run(LociImporter.java:78); ```. JPEG is just not the right file format to use for images of this size. Even if the file *could* be opened, performance would be really bad because of the memory requirements. QuPath *could* handle a pyramidal TIFF that is much bigger very efficiently. The file names include the words 'cropped region', therefore I would suggest requesting the original files. QuPath might be able to handle them already. I will close this issue because it doesn't seem to be a bug in QuPath (comparable software also can't open the image). If you'd like to discuss formats / suggestions, the forum would be the best place: http://forum.image.sc/tag/qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/834#issuecomment-955743430:373,error,error,373,https://qupath.github.io,https://github.com/qupath/qupath/issues/834#issuecomment-955743430,1,['error'],['error']
Availability,"Thanks, I should have thought of that. I've just tried the ARM64 build from 2021-11-08 and it works beautifully - I couldn't reproduce the issue, and it runs noticeably faster. I used the old build because it's unfortunately really awkward to build QuPath for M1 - the libraries we use to read whole slide images are stuck on Intel.; * OpenSlide - https://github.com/openslide/openslide / https://github.com/openslide/openslide-java; * Bio-Formats - https://github.com/ome/bioformats (because it uses an older libjpeg-turbo). I hacked together something that works locally with OpenSlide installed via Homebrew so I could test JavaCPP / OpenCV, but I haven't figured out how to make the whole distribution portable (https://github.com/qupath/qupath/issues/629). If it's possible to resolve the memory errors via JavaCPP so that it works via Rosetta that would be excellent, but I understand if not - especially since it seems fine in the ARM64 build, and we'll want to use that as soon as we can figure out how.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1018254282:801,error,errors,801,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018254282,1,['error'],['errors']
Availability,"Thanks, can you describe a bit more how to replicate the original bug and check it is fixed?. We need something we can link to in https://github.com/qupath/qupath/blob/main/CHANGELOG.md to describe the fix (either an issue or a PR). Also, I think that `settings.gradle` was included here in error.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1039#issuecomment-1219552207:291,error,error,291,https://qupath.github.io,https://github.com/qupath/qupath/pull/1039#issuecomment-1219552207,1,['error'],['error']
Availability,"Thanks, closing this now since it's 'fixed' as far as it's likely to be within QuPath, and it's now available in v0.2.2.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/573#issuecomment-665048258:100,avail,available,100,https://qupath.github.io,https://github.com/qupath/qupath/issues/573#issuecomment-665048258,1,['avail'],['available']
Availability,"Thanks, have you been able to try this on any other operating system? I can't replicate it on my laptop but will try to test it on Ubuntu soon. Also, do you have a graphics tablet / pressure-sensitive pen?. The error takes me to https://github.com/qupath/qupath/blob/5ddf2cdf8b2b7eb689d70240878887af78de43cb/qupath-extension-processing/src/main/java/qupath/opencv/tools/WandToolCV.java#L420-L424; so my best guess is that the radius is somehow less than 0. I don't see why that would be the case, but you could try the following script; ```groovy; println qupath.lib.gui.viewer.tools.QuPathPenManager.getPenManager(); println qupath.lib.gui.viewer.tools.QuPathPenManager.getPenManager().getPressure(); ```; to investigate. If there can be an scenario when the pressure is < 0 then the fix might just require checking is `radius <= 0` at line 421... but I'm guessing.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/380#issuecomment-561064260:211,error,error,211,https://qupath.github.io,https://github.com/qupath/qupath/issues/380#issuecomment-561064260,1,['error'],['error']
Availability,"Thanks, makes sense. I'm still unable to get things working reliably in QuPath, including after a restart and when keeping the process alive after testing, but I'm not sure what else to try. For QuPath itself, the problem remains pretty obscure (I don't think any users have complained yet). I wouldn't want this to delay any 1.5.7 release, and I can't be certain any lingering problems aren't on our side anyway - I'm looking forward to the non-SNAPSHOT aarch64 builds being available.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1024245119:60,reliab,reliably,60,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024245119,3,"['alive', 'avail', 'reliab']","['alive', 'available', 'reliably']"
Availability,"Thanks, that would be good - it sounds like it would be difficult and time-consuming for anyone else to replicate the problem, and might not be possible if it turns out to be something more specific to your system. So solving this will likely require any any info you can get from VisualVM's CPU sampling. I'll try to write up info about VisualVM + QuPath at some point, but there are brief instructions at https://forum.image.sc/t/designing-a-qupath-workstation/54849/14. QuPath shouldn't be regenerating thumbnails when a project is opened, and it shouldn't be remembering anything (other than the preferences) across relaunches. v0.4.0 should generating missing thumbnails only, and do so in a background thread that doesn't block. Both v0.3 and v0.4 will try to access the thumbnail images in the project when it is opened; this *could* potentially block the UI, because it needs to be done in the UI thread (and there can only be one). However these should generally be small JPEGs so I've never known that to be a problem. Therefore I'd only expect this to be troublesome if there is some other reason why access to the disk is exceptionally slow. I couldn't really tell what was going on in the video, partly because the analysis pane was closed - and when the image was opened I couldn't really see how or when that happened. For slightly more info in the log, you can switch the log level in the preferences from `INFO` to `DEBUG`. Not sure if that will help narrow things down or not.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1154#issuecomment-1326026753:1482,down,down,1482,https://qupath.github.io,https://github.com/qupath/qupath/issues/1154#issuecomment-1326026753,1,['down'],['down']
Availability,"Thanks, that's quite strange... I've just downloaded it again, and it is working here on two different Macs. Are you running macOS Sierra, or some other version?. If QuPath can't load OpenSlide, then I expect it can't load any other whole slide formats (unless you have the Bio-Formats extension installed). In that case, I would expect it to fall back to using ImageJ for MRXS images to read only the low-resolution data. If you right-click on QuPath.app and select 'Show package contents', you should be able to see something like what is shown below:. ![libopenslide](https://cloud.githubusercontent.com/assets/4690904/20973479/a23ad306-bc90-11e6-9863-e9281c2c9110.jpg). I suspect the issue may be connected to differences in the many ```lib*``` files. One way to test this is to copy all the ```lib.*``` files from a QuPath version that works (i.e. anything before v0.1.1?) and paste it into the QuPath that doesn't. This may cause v0.1.1 to function. If these instructions make any sense, could you try this?. Thanks,. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/32#issuecomment-265486923:42,down,downloaded,42,https://qupath.github.io,https://github.com/qupath/qupath/issues/32#issuecomment-265486923,1,['down'],['downloaded']
Availability,"Thanks, the command is unfinished & needs more attention at some point, but the fact it works for 'below threshold' is probably why I've never seen the issue (and it seemed to work for me when I tried it). > Side note: Classify Detections, when working off of a loaded classifier, seems to try to do something, then fails with a whole lot of:; `WARN: Classification Unclassified is invalid! Will be set to null instead`. Does it fail or is it just wordy? Because warnings aren't errors, this alone does not necessarily mean it fails.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/403#issuecomment-588528261:479,error,errors,479,https://qupath.github.io,https://github.com/qupath/qupath/issues/403#issuecomment-588528261,1,['error'],['errors']
Availability,"Thanks, the screenshot suggests it's the `Files.exists()` check that is so slow. QuPath is probably calling this quite a lot, because it's usually really inexpensive - and *not* calling it leaves open the (admittedly small) possibility that the file has been deleted between calls. I could try to cut down on this, but I'm skeptical that it will help because it sounds a lot like it's only the first call that is slow. In fact, I'd be curious as to whether accessing each file is slow or just the first one on the disk. That should be relatively easy to test by creating a much smaller project and comparing the speed. Either way, it sounds like the problem lurks in the realm of Java, the operating system, and the hard drive. I'm not sure if there's much can be done about it in QuPath. I'd suggest:. * try accessing the images some other way before opening them in QuPath (e.g. through Windows Explorer), in case 'pre-warning' the OS is somehow useful; * try copying the images to a local drive (if possible); * try timing a simple script with a file on the same disk, e.g. ```groovy; import java.nio.file.*; var path = '/path/to/some/file'; println ""Exists: ${Files.exists(Paths.get(path))}""; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1154#issuecomment-1327044045:301,down,down,301,https://qupath.github.io,https://github.com/qupath/qupath/issues/1154#issuecomment-1327044045,1,['down'],['down']
Availability,"Thanks, this looks like a bug in the Bio-Formats extension. I can replicate the problem with the attached image. I've tracked it down to one line [here](https://github.com/qupath/qupath-bioformats-extension/blob/master/src/main/java/qupath/lib/images/servers/BioFormatsImageServer.java#L670) - presumably `mergeChannels` contains some logic to treat 4-channel 8-bit images are ARGB. If I open the image in ImageJ and save it as a multichannel image then all 4 channels are measured, as they should be. So it's not an inherent limitation in the cell detection. If I'm correct, most other combinations of channel numbers and bit-depths should be fine... It should be a fairly straightforward fix. I'm travelling at the moment, but will have a look soon.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/164#issuecomment-380835137:129,down,down,129,https://qupath.github.io,https://github.com/qupath/qupath/issues/164#issuecomment-380835137,1,['down'],['down']
Availability,"Thanks. There isn't a pixel classifier here, only on an experimental bit of a branch on my fork... but indeed I get the same error. Fixed now, good to catch it early :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/170#issuecomment-383882612:125,error,error,125,https://qupath.github.io,https://github.com/qupath/qupath/issues/170#issuecomment-383882612,1,['error'],['error']
Availability,"That *might* be normal behavior with Java... I'm not 100% sure but I think that, by default, once Java has grabbed some memory, it is reluctant to give it back until shutting down. But it shouldn't go beyond the maximum of 32 GB. Since it is calling TensorFlow and OpenCV, which are outside Java's normal world, normal rules might not apply entirely. The last changes I made are my current best guess for something that might help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630898801:175,down,down,175,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630898801,1,['down'],['down']
Availability,That is a very large classifier. Do you get the same error with both ANN and Decision Trees? When removing one scale?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1091970309:53,error,error,53,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1091970309,1,['error'],['error']
Availability,"That is correct, and as far as I know it is the only possible behavior for the simple tissue detection command. I have always added any extra annotations after that first step. . If you do not want that behavior, you could also create an ImageJ script that does something similar, and then run it on all existing annotations. Assuming the ImageJ script was set up correctly (downsampling to fit ImageJ's file size requirements, etc), you could use Thresholding+Analyze Particles and then return the created outlines as annotation objects. . That is actually more like what I do for fluorescent tissue detection, and it can work fairly well.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/248#issuecomment-441513852:375,down,downsampling,375,https://qupath.github.io,https://github.com/qupath/qupath/issues/248#issuecomment-441513852,1,['down'],['downsampling']
Availability,"That is usually Gatekeeper (since the app is not signed and notarized). You can either turn off Gatekeeper or right-click on the program and choose Open (only needs to be done once). Sent from my iPhone. On Jul 19, 2023, at 12:10 PM, ReganFulton ***@***.***> wrote:. ﻿. I recently updated to MacOS 13.5 (Ventura), on my desktop mini (M1 processor).; Now my QuPath program doesn't work at all.; I get a message saying ""This file is corrupted and should be moved to the trash""; I've tried re-downloading QuPath, as well as re-downloading the OS, to no avail.; Any advice?. —; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/1280#issuecomment-1642372686>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABMJCNSIL52UXHDWZGSRNS3XRABFXANCNFSM6AAAAAA2QBRGYY>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1280#issuecomment-1642380536:490,down,downloading,490,https://qupath.github.io,https://github.com/qupath/qupath/issues/1280#issuecomment-1642380536,3,"['avail', 'down']","['avail', 'downloading']"
Availability,"That looks eerily similar to an error I think @Svidro mentioned once. It's related to painting the cell overlay on top of the image. Painting errors are annoying, but shouldn't generally be really critical. I believe it occurs because a change in selected objects happens to occur at the same time that the objects are being painted. I have made a change in the code that should address this. If you can find a way to reproduce the error consistently I will check it... otherwise if you find it continues to happen in the next milestone please let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/307#issuecomment-484602478:32,error,error,32,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484602478,3,['error'],"['error', 'errors']"
Availability,"That sounds much easier, once integrated, than my method of downsampling the whole image to a size where I could submit it to ImageJ, greyscaling a merged image of the channels, and then sending back the annotation region! I haven't tested it yet, but can it work on multiple channels at once?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/93#issuecomment-323493294:60,down,downsampling,60,https://qupath.github.io,https://github.com/qupath/qupath/pull/93#issuecomment-323493294,1,['down'],['downsampling']
Availability,"That usually happens when the path is broken to the image. 0.2.0 is not as.. mobile as the earlier versions. If you check ""View->show log,"" I suspect you will find an error showing that it cannot find the image. You would need to move the project or images back to the original location.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/322#issuecomment-497035914:167,error,error,167,https://qupath.github.io,https://github.com/qupath/qupath/issues/322#issuecomment-497035914,1,['error'],['error']
Availability,"That's good to know, thanks. Poking deeper into the error I see; ```; qupath.lib.images.servers.bioformats.BioFormatsImageServer$ReaderPool.openImage(Lqupath/lib/images/servers/TileRequest;IIZLjava/awt/image/ColorModel;)Ljava/awt/image/BufferedImage;+249; ```; which is definitely a new line connected with how tiles are paralleled in QuPath's Bio-Formats reading since v0.3.1. However, the bigger context is very mysterious:; ```; # Problematic frame:; # C [libc.so.6+0x9a23b] __libc_malloc+0x12b. [...more stuff...]. Current thread (0x00007f594d8d5540): JavaThread ""tile-exporter10"" daemon [_thread_in_vm, id=314754, stack(0x00007f4ec1aaf000,0x00007f4ec1bb0000)]. Stack: [0x00007f4ec1aaf000,0x00007f4ec1bb0000], sp=0x00007f4ec1bac3d0, free space=1012k; Native frames: (J=compiled Java code, A=aot compiled Java code, j=interpreted, Vv=VM code, C=native code); C [libc.so.6+0x9a23b] __libc_malloc+0x12b. Java frames: (J=compiled Java code, j=interpreted, Vv=VM code); J 758 java.lang.ClassLoader.defineClass1(Ljava/lang/ClassLoader;Ljava/lang/String;[BIILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (0 bytes) @ 0x00007f594243a6f0 [0x00007f594243a640+0x00000000000000b0]; J 754 c1 java.lang.ClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class; java.base@16.0.2 (43 bytes) @ 0x00007f593b0f1dc4 [0x00007f593b0f1a80+0x0000000000000344]; J 939 c1 java.security.SecureClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/CodeSource;)Ljava/lang/Class; java.base@16.0.2 (16 bytes) @ 0x00007f593b150c8c [0x00007f593b150bc0+0x00000000000000cc]; J 739 c1 jdk.internal.loader.BuiltinClassLoader.defineClass(Ljava/lang/String;Ljdk/internal/loader/Resource;)Ljava/lang/Class; java.base@16.0.2 (121 bytes) @ 0x00007f593b0e9acc [0x00007f593b0e8c20+0x0000000000000eac]; J 653 c1 jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(Ljava/lang/String;)Ljava/lang/Class; java.base@16.0.2 (64 bytes) @ 0x00007f593b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/932#issuecomment-1057931302:52,error,error,52,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057931302,1,['error'],['error']
Availability,"The `.pkg` wraps up the `.app` in an installer. I think `jpackage` will create the `.app` first, then the `.pkg` if required - but I don't think it gives space in between to do anything useful. I've never used `defaults` (didn't know it existed...) so don't know if it requires the `.app`. We use `package=installer` to get the `.pkg` because otherwise I think the `.app` has all sorts of scary quarantine flags set that mean it can't be launched without recursively removing them all (at least that's my vague memory of what happened, I may well be misremembering). The flags only occurred when downloading - so on my local build I thought all was fine...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1727775157:596,down,downloading,596,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1727775157,1,['down'],['downloading']
Availability,"The behavior has been unchanged in v0.2.0 milestones for many months (without previous complaint) and it is now too late to make any substantial change before v0.2.0. QuPath v0.1.2 handled projects in a much simpler way, but this is insufficient for many recent and planned features for which a single local file path isn't enough to identify an image. v0.2.0 therefore stores both the absolute and relative paths. If the relative path to the project file is maintained, QuPath will show a dialog and prepopulate the necessary changes to the absolute paths to update the project. The user only has to accept these changes and the project will be updated. This should allow everything to be 'corrected' immediately when the project is opened. If the absolute paths were *not* updated, then resolving relative paths every time they are required would be rather a lot more complex, and could result in projects being silently updated in unexpected ways (e.g. when changing an image name, trigging the project file to be rewritten). The current behavior aims to strike a compromise between being easy to use and not causing unexpected problems. To avoid the 'update URIs' dialog in am multi-user setting, each user can duplicate the *project.qpproj* file and use the duplicate as their own view on it, i.e. they open and update the project file to contain the absolute paths relevant to them. To facilitate this, when dragging a project directory on top of QuPath one can choose the precise file to open from a drop-down list. There is also a *Recent Projects* option to reopen the last project. > **Please respect the request to use image.sc for questions and discussions, not GitHub.**; > ![bug report](https://user-images.githubusercontent.com/4690904/80976463-68b25400-8e1b-11ea-8c19-739a35dd4942.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/468#issuecomment-623497951:1512,down,down,1512,https://qupath.github.io,https://github.com/qupath/qupath/issues/468#issuecomment-623497951,1,['down'],['down']
Availability,"The bug was in the base class, therefore affected all OpenCV classifiers (see [here](https://stackoverflow.com/questions/42484908/error-while-saving-trained-svm-in-opencv-3-2-0-java) for a mention). Do you actually find cases where classifiers are different upon reloading, or only expect that would be the case?. This is something I considered at the time and to the best of my knowledge all random number generators involved are seeded when necessary (within QuPath and OpenCV) and the classifiers _are_ reproducible. I have memories of running end-to-end analysis of TMAs via scripts, including reloading classifiers, and obtaining identical results. If this is not the case that would of course be a more serious issue, but I am not aware of any instances where your expectation as a user would not be met for this reason.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/343#issuecomment-515309402:130,error,error-while-saving-trained-svm-in-opencv-,130,https://qupath.github.io,https://github.com/qupath/qupath/issues/343#issuecomment-515309402,1,['error'],['error-while-saving-trained-svm-in-opencv-']
Availability,"The changes in https://github.com/petebankhead/qupath/commit/deea6c7d71baee558701f9ae1e5c85434c00384c have hopefully resolved the issue, and will be available in v0.3.; Please do reopen this if you find that it hasn't been fixed after all.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/646#issuecomment-816053915:149,avail,available,149,https://qupath.github.io,https://github.com/qupath/qupath/issues/646#issuecomment-816053915,1,['avail'],['available']
Availability,"The commit [f37dcfc](https://github.com/qupath/qupath/pull/1096/commits/f37dcfc63cc65a43b8a0eba76e7b7db86c3d75bc) assumes both the ```columnImage``` & ```columnOverlay``` are available and works well when it is true. Table does not seem to refresh when only one of them is available. ; Hence the table may need to be refreshed outside the ```if``` statement. Does this mean that the table may refresh twice when both column are available ? ; This one is trickier that I had initially thought.; ; ```java; 		// Add columns to show images, if we have them; 		if (hasImages || hasOverlay) {; 			TreeTableColumn<TMAEntry, TMAEntry> columnImage = hasImages ? new TreeTableColumn<>(""Thumbnail"") : null;; 			TreeTableColumn<TMAEntry, TMAEntry> columnOverlay = hasOverlay ? new TreeTableColumn<>(""Overlay"") : null;. 			if (hasImages) {; 				columnImage.setCellValueFactory(new Callback<CellDataFeatures<TMAEntry, TMAEntry>, ObservableValue<TMAEntry>>() {; 					@Override; 					public ObservableValue<TMAEntry> call(CellDataFeatures<TMAEntry, TMAEntry> p) {; 						return p.getValue().valueProperty();; 					}; 				});; 				columnImage.setCellFactory(c -> new ImageTableCell(imageCache, false));; 				columnImage.maxWidthProperty().bind(maxSmallWidth);; 				columnImage.widthProperty().addListener((v, o, n) -> {; 					if (n.doubleValue() == columnImage.getPrefWidth()); 						return;; 					if (hasOverlay); 						columnOverlay.setPrefWidth(n.doubleValue());; 					table.refresh();; 				});; 				columns.add(columnImage);; 			}. 			if (hasOverlay) {; 				columnOverlay.setCellValueFactory(new Callback<CellDataFeatures<TMAEntry, TMAEntry>, ObservableValue<TMAEntry>>() {; 					@Override; 					public ObservableValue<TMAEntry> call(CellDataFeatures<TMAEntry, TMAEntry> p) {; 						return p.getValue().valueProperty();; 					}; 				});; 				columnOverlay.setCellFactory(c -> new ImageTableCell(imageCache, true));; 				columnOverlay.maxWidthProperty().bind(maxSmallWidth);; 				columnOverlay.widthProperty().addL",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1096#issuecomment-1292310472:175,avail,available,175,https://qupath.github.io,https://github.com/qupath/qupath/pull/1096#issuecomment-1292310472,3,['avail'],['available']
Availability,"The core images are loaded in a background thread, and there is a 5 second timeout associated with this - see [here](https://github.com/qupath/qupath/blob/v0.1.2/qupath-gui-fx/src/main/java/qupath/lib/gui/commands/TMAGridView.java#L254). One possibility is that the timeout isn't generous enough in your case, and the cores are not being loaded fast enough. I don't know why that would be the case... it might be to do with the computer specifications, where the image is located (a network share?), or the access time required for the specific file format. Another option is that there are just too many cores. That is my best guess, since the scrollbar thumb on the right in your screenshot looks very small. There is a limit to the size of the cache used to store the TMA cores to reduce the risk of memory errors, see [here](https://github.com/qupath/qupath/blob/v0.1.2/qupath-gui-fx/src/main/java/qupath/lib/gui/commands/TMAGridView.java#L133) for the location in the code. Currently there is no way to increase the size of the cache through the user interface to support more cores in the grid view. Although, as is often the case, there is a way through a script. You could try running this to double the cache size to see if it helps.; ```groovy; qupath.lib.gui.commands.TMAGridView.MAX_CACHE_SIZE = 500; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/96#issuecomment-326105429:810,error,errors,810,https://qupath.github.io,https://github.com/qupath/qupath/issues/96#issuecomment-326105429,1,['error'],['errors']
Availability,"The counting within the annotation seems to be positive in some squares, while other squares are not counted at all. It only happens with a few files.; I also tried to count the same annotation again and the bad count happens always in the same squares.; ![Capture](https://user-images.githubusercontent.com/50907268/58162476-888c4e80-7c82-11e9-850e-7e7b75cc65db.JPG). Here I attached a snapshot of a count. **You've checked https://qupath.github.io for a new release that might already have fixed the issue, right?**. **And you've searched for related issues here to see if the issues has already been reported?**. Good, then please fill in the template about the bug... > For general questions about the software (not bugs) use [image.sc](https://forum.image.sc/tags/qupath). ----. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps to reproduce the behavior:; 1. Go to '...'; 2. Click on '....'; 3. Scroll down to '....'; 4. See error. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Windows, macOS, Ubuntu...]; - QuPath Version [e.g. 0.1.2]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/318:956,down,down,956,https://qupath.github.io,https://github.com/qupath/qupath/issues/318,2,"['down', 'error']","['down', 'error']"
Availability,"The crashes on Mojave sound a lot like this: https://twitter.com/petebankhead/status/1080743299454025728; So if you upgrade your JDK and rebuild QuPath using Gradle then that might be enough. The inability to handle the .scn files would be because, if the preferences are reset, then the extensions directory gets reset also. Reinstalling Bio-Formats has the side-effect of also setting the extensions directory. For the not-opening issue, if you're able to start QuPath from the command line then you should get a more meaningful error message. It might be trouble in the extensions directory or some corrupting preference. Opening v0.1.2 and using it to reset the preferences again might help resolve the not-opening problem. Finally, if all else fails but you can wait a week, then I should have a bit more info to share then...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/270#issuecomment-467853740:531,error,error,531,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-467853740,1,['error'],['error']
Availability,"The error includes `image size too large (2453.678853034973 MB)`. My guess is that the exported TIFF isn't a pyramidal TIFF, and this may be why QuPath + Bio-Formats needs to resort to reading it in one go - and too much memory is required for that to be possible. I'm not familiar with `.mds` - I don't suppose it works directly, or do you have any alternative options to export the image?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/195#issuecomment-409798891:4,error,error,4,https://qupath.github.io,https://github.com/qupath/qupath/issues/195#issuecomment-409798891,1,['error'],['error']
Availability,The error still exist even if I add a folder by hand:; D:\QMDownload\5\[failed_handOK]Leica_scn\Leica-Fluorescence-1_tif,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472889869:4,error,error,4,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472889869,1,['error'],['error']
Availability,"The example script is running fine except it is not writing the image, showing error : **No compatible writer found.**",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/200#issuecomment-411343228:79,error,error,79,https://qupath.github.io,https://github.com/qupath/qupath/issues/200#issuecomment-411343228,1,['error'],['error']
Availability,The fix for this has been merged and will be available in v0.3.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/701#issuecomment-816127793:45,avail,available,45,https://qupath.github.io,https://github.com/qupath/qupath/issues/701#issuecomment-816127793,1,['avail'],['available']
Availability,"The issue looks to be the same as https://github.com/qupath/qupath/issues/336, in which case the switch to use OpenJFX 13 in the next release of QuPath will hopefully resolve it. If you want to try building it from the `dev-m5` branch (some guidance [here](https://petebankhead.github.io/qupath/2019/10/01/building-qupath.html)) please do let me know if it does work or not. Otherwise I hope v0.2.0-m5 will be available within the next week.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/369#issuecomment-541389834:410,avail,available,410,https://qupath.github.io,https://github.com/qupath/qupath/issues/369#issuecomment-541389834,1,['avail'],['available']
Availability,"The last commit adds a toolbar button to show detection 'connections' (neighbors based on a Delaunay triangulation):. ![image](https://github.com/user-attachments/assets/90878352-9335-4163-aa36-9f1517225b31). This was previously available under the *View* command, but only actively did anything if the *Delaunay cluster features 2D* command had been run. Now, it can be used at any time and will show connecting lines for cells (if available), or detections (if there are no cells). Currently, it is only a visual tool - using the new features require scripts such as those described above.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1597#issuecomment-2305236713:229,avail,available,229,https://qupath.github.io,https://github.com/qupath/qupath/pull/1597#issuecomment-2305236713,2,['avail'],['available']
Availability,The last commit should avoid showing an error message unnecessarily.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/503#issuecomment-633205314:40,error,error,40,https://qupath.github.io,https://github.com/qupath/qupath/issues/503#issuecomment-633205314,1,['error'],['error']
Availability,The lazy code further down where I loop through properties and make them persistent there. Using the name makes it easier to assign them a sensible persistent key.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1601#issuecomment-2312160962:22,down,down,22,https://qupath.github.io,https://github.com/qupath/qupath/pull/1601#issuecomment-2312160962,1,['down'],['down']
Availability,"The main part of the error message is from OpenSlide, saying; ```; Slides with dissimilar main images are not supported; ```. You could try installing the [Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension) to see if that works for your images. There is more information on the [Supported image formats](https://github.com/qupath/qupath/wiki/Supported-image-formats) page of the wiki.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/184#issuecomment-403369967:21,error,error,21,https://qupath.github.io,https://github.com/qupath/qupath/issues/184#issuecomment-403369967,1,['error'],['error']
Availability,"The milestone versions aren't really intended to be completely inter-compatible. See the very beginning of the linked blog post on the download site:; https://petebankhead.github.io/qupath/2019/11/17/sixth-milestone.html; ""Warning! It’s generally not a good idea to switch between different QuPath versions. You should be able to read older data files within v0.2.0-m6, but the reverse might not be true. Backup often!"". I would recommend creating a new project and importing any scripts or classifiers you might have had into the new project, rather than trying to resuse it. Especially if you are using images without any objects. That mostly consists of copying the folders named things like ""classifiers"" and ""scripts"" into the new project folder.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/376#issuecomment-554792060:135,down,download,135,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554792060,1,['down'],['download']
Availability,"The minus key on my main keyboard and the minus key on my number pad both cause; zooming-in / increased magnification. Both of my + keys don’t do anything. From: MicroscopyRA <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Monday, June 8, 2020 at 1:26 PM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). Right, that was the first part, sorry for lack of clarity. Num lock on or off has no impact. ""The + and - keys no the num pad do nothing when I use them."". —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-640795671&data=02%7C01%7Ckyee%40umc.edu%7C3f6606e691e84856b92008d80bd9728c%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272375844340509&sdata=PdIW4tJzmYbxH24BlWci00hk0WXzvZf6SoWFDKxEnks%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNEZE2DLPTDWWMJINGMLRVUUM3ANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7C3f6606e691e84856b92008d80bd9728c%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272375844350502&sdata=80Q8pB3Tqf9csexrlxWph406VYzvfheP775lDTJ9y6Q%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/518#issuecomment-640799956:1494,error,error,1494,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640799956,1,['error'],['error']
Availability,"The most useful bits of information there are probably the version, OS, and any information on what you have attempted so far.; And yep, it's probably what Pete is suggesting :) Though you said you followed the instructions at the site, I wasn't sure which site you meant.; `ERROR: java.lang.UnsatisfiedLinkError: ome.jxrlib.JXRJNI.new_DecodeContext()J`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/330#issuecomment-501890102:275,ERROR,ERROR,275,https://qupath.github.io,https://github.com/qupath/qupath/issues/330#issuecomment-501890102,1,['ERROR'],['ERROR']
Availability,"The primary cell detection command under *Analyze &rarr; Cell analysis &rarr; Cell detection* is primarily intended for brightfield images. However, it ought also to work for fluorescence. Under some conditions it does, namely when:. * the *first* fluorescence channel contains a nuclear staining (e.g. DAPI); * the *Max background intensity* parameter is either set negative or very high, or *Background radius* is negative; * the *Threshold* value is set appropriately high. This is because, in the case of fluorescence data, the command only looks for the first available channel within which to detect nuclei. Furthermore, the *Max background intensity* and *Threshold* parameters, by default, are selected for optical density units... which can be far away from being sensible values for fluorescence. The command should be adapted to use more sensible defaults in the case of fluorescence images, and to permit the selection of alternative channels.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/14:565,avail,available,565,https://qupath.github.io,https://github.com/qupath/qupath/issues/14,1,['avail'],['available']
Availability,"The problematic TIFF appears not to be pyramidal, which means that QuPath + Bio-Formats try to read an very large image that is 23422 x 30978 pixels in size all in one go... which is doomed to failure. QuPath can handle much larger images, but they do need to by pyramidal so that QuPath can quickly extract lower resolution versions of the image when appropriate (which is presumably the case with your SVS file). You might be able to convert the TIFF to a pyramidal format, e.g. see https://github.com/openslide/openslide/wiki/CreatingPyramidalTIFFs",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/221#issuecomment-423728088:193,failure,failure,193,https://qupath.github.io,https://github.com/qupath/qupath/issues/221#issuecomment-423728088,1,['failure'],['failure']
Availability,"The safest way is probably to use Docker or something similiar. ons. 22. sep. 2021, 17:38 skrev Pete ***@***.***>:. > Ah ok, then I'm afraid I have no idea and no way to reproduce the problem.; > It is working for me on all my test systems (but I haven't got CentOS; > installed anywhere).; >; > I can't see any obvious clues to a problem within QuPath's code from the; > error. The versions of Java, JavaFX and jpackage have been updated for; > v0.3.0, not sure if that is related.; >; > One option would be to try building from source; > <https://qupath.readthedocs.io/en/stable/docs/reference/building.html>; > using a different JDK, or launch using ./gradlew run (which would skip; > the jpackage part).; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/825#issuecomment-925047351>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AH7WSL62XZNUGJTSADEHNB3UDHZ6HANCNFSM5ERSPAHA>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/825#issuecomment-925051403:372,error,error,372,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925051403,1,['error'],['error']
Availability,"The third option listed above is now integrated, and locale information is added to `.qpdata` files. This has been done in a way that should not break compatibility with any existing saved files. Testing involved varying the locale using commands such as those below (one at a time):. ``` groovy; Locale.setDefault(Locale.UK);; Locale.setDefault(Locale.GERMAN);; Locale.setDefault(Locale.JAPAN);; Locale.setDefault(Locale.CHINA);; ```. ...and then testing whether files written with one locale could then be read using another. This appears to be working, but further insights and bug-reports relating to location-specific issues would be welcome. The fix will be included in `v0.0.5`. (Note: I could conceive of trouble with `ClassNotFoundExceptions` in the event of attempting to deserialize a `.qpdata` file where the saved `Locale` is not available... however it's not clear to me whether this could or would ever actually happen. In the even that it does, QuPath should default to not changing the locale at all - and so would still have a reasonable chance of succeeding.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/18#issuecomment-258824636:843,avail,available,843,https://qupath.github.io,https://github.com/qupath/qupath/issues/18#issuecomment-258824636,1,['avail'],['available']
Availability,"The title of this issue is issue looks quite dramatic, but I don't understand what the error is at all. Can you explain further? Was cell detection applied to a brightfield image with the image type set to 'Fluorescence'?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/153#issuecomment-370398858:87,error,error,87,https://qupath.github.io,https://github.com/qupath/qupath/issues/153#issuecomment-370398858,1,['error'],['error']
Availability,"The warning; ```; WARN: Cannot assign class unambiguously - 0 classes represented in selection; ```; should be ok - QuPath is checking if there is one and only one classification that it can use to assign to the merged annotation. Unfortunately it's not smart enough to recognize that no classifications is fine as well, and doesn't really require a warning. But the latest script from @Svidro lets me experience the trouble described in the original question (albeit not an error message). I'm not entirely sure where it is going wrong, but I assume that it is somehow connected to multithreading, and things not being done in quite the right order. I suspect it's also connected to the selection changing while other processing is happening. This will be triggering some activity in the thread responsible for the user interface. Here are three ways to try to work around this - hopefully at least one of them will work. ### Method 1 - Do everything in the application thread; As the *very* first line of your script (with no spaces above it), add; ```; guiscript=true; ```; to force the script to run in the same thread as the user interface. This can often help work around troublesome multithreading issues for scripts that run very quickly. It's probably not a good idea here because the processing is likely to take a while, and the GUI will be totally blocked. ### Method 2 - Pause briefly; Adding `Thread.sleep(time)` pauses the script for a specified number of milliseconds, which can be enough to get things on track.; ```groovy; selectObjects {it.isAnnotation() && it.getROI().getROIType() == 'Rectangle'}; mergeSelectedAnnotations(); Thread.sleep(100); selectObjects {it.isAnnotation() && it.getPathClass() == getPathClass(""Tumor"")}; ```. ### Method 3 - Avoid depending on selections; If possible, it's usually good to avoid depending on objects being selected if you don't have to. Sometimes it's necessary (e.g. if you're running a command like cell detection, the annotations/TMA cores",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/129#issuecomment-354864318:475,error,error,475,https://qupath.github.io,https://github.com/qupath/qupath/issues/129#issuecomment-354864318,1,['error'],['error']
Availability,"There are a few options, depending upon what exactly you want / how much effort can be involved. Under *Edit &rarr; Preferences* you can change the *TMA export downsample factor* to be 1 to get the highest resolution. However, this will still write JPEGs. There isn't an easy way to change that; the relevant part of the code is [here](https://github.com/qupath/qupath/blob/v0.1.2/qupath-gui-fx/src/main/java/qupath/lib/io/PathAwtIO.java#L326) and it doesn't give a place to specify a different format. If it is the image of the TMA core only that you need, then I would suggest the one-line ImageJ macro at [#85](https://github.com/qupath/qupath/issues/85#issuecomment-317354440). You should be able to modify this to export PNGs. The main reason for (possibly) preferring to export as TIFF instead is that this would include the pixel size information in microns, in a way that ImageJ can understand; this might be useful if you want to do some analysis on the exported cores. The main disadvantage is that the TIFF files are likely to be *extremely* big (while the PNGs will probably just be 'big'). It is also possible to do the QuPath export in a Groovy script. In this case, you could also export the overlay (showing the QuPath objects) as well. But this would take a bit more effort and I'm not sure if this is something you need or not.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/97#issuecomment-326506002:160,down,downsample,160,https://qupath.github.io,https://github.com/qupath/qupath/issues/97#issuecomment-326506002,1,['down'],['downsample']
Availability,"There are a few options:; * Get the measurements from *Measure &rarr; Show annotation measurements*, copy them into a spreadsheet and add them up there; * When you're drawing with the *Brush* tool (or the *Wand* might be nicer, if you have good contrast between the purple stain and surroundings), hold down *Shift* to append to an existing annotation - if you're pressing *Shift*, different regions can be discontinuous but still counted as one (similarly, you can hold down *Alt* to use the *Brush* or *Wand* and subtract regions); * Select all the annotations (either in the *Annotations* pane on the left, or by alt-clicking on them with the *Move* tool selected in the main image), right-click on the image and choose *Annotations &rarr; Merge selected annotations*. Hopefully one of those helps!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/179#issuecomment-399142573:303,down,down,303,https://qupath.github.io,https://github.com/qupath/qupath/issues/179#issuecomment-399142573,2,['down'],['down']
Availability,"There are lots of possible export options and discussions, but I'm not sure if they match exactly what you want. Here are some:; * https://groups.google.com/d/msg/qupath-users/Anci7FBEHQg/XcGFJcfGAQAJ; * https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html; * https://petebankhead.github.io/qupath/scripting/2018/03/14/script-export-labelled-images.html; * https://groups.google.com/forum/#!topic/qupath-users/ub6TC9IMmZ8. None of them are quite the same as the _Viewer snapshot_, but then the output of this would depend on the current magnification, window size etc. and so you would lose some control in the script concerning what is actually exported (unless you also programmatically modify the viewer...). Therefore in scripts I tend to export overview images using a different approach from the viewer snapshot directly. If the above links don't help, could you describe more what exactly you want to export, and how it should look?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420215988:291,mask,masks,291,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420215988,1,['mask'],['masks']
Availability,"There is no error message. Just ""No Slide label available"" in the slide label viewer. I know there is a slide label in the file as I can see it in version 0.1.2. I am doing this within a project indeed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/643#issuecomment-731375500:12,error,error,12,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-731375500,2,"['avail', 'error']","['available', 'error']"
Availability,"There is no version with precisely the name v0.0.2-alpha. I see the error log mentions files that are not part of QuPath (e.g. `qupath.lib.GenowisAPI`), and refers indeed to 'celery_qupath_1'. Therefore it appears you are using a completely different distribution of QuPath modified by someone else and of which I know nothing. I am closing this issue because it is not related to the 'official' QuPath distribution and source code hosted here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/389#issuecomment-567871641:68,error,error,68,https://qupath.github.io,https://github.com/qupath/qupath/issues/389#issuecomment-567871641,1,['error'],['error']
Availability,"There is really not enough information here to answer, and since it does not relate to a bug https://forum.image.sc/tags/qupath would be the right place to post this question. My guess is that your images may have moved / be on an external disk that is not accessible when you try to reopen the m2 project using QuPath v0.2.0-m2. But I would need to know what error messages are displayed, and if anything appears under *View &rarr; Show log*. It is not expected that a project created using m2 will open with m8 because of large changes between milestones; specifically I recall the project structure changed from m2 to m3 (I don't remember if there were subsequent changes). There is a script to migrate old projects from m2 to m3, but use with caution (i.e. with backups) and be sure to read the description at the top if you use it: https://gist.github.com/petebankhead/8dfbaf2de91f6432b79c7678e2997d6a",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/388#issuecomment-567854079:360,error,error,360,https://qupath.github.io,https://github.com/qupath/qupath/issues/388#issuecomment-567854079,1,['error'],['error']
Availability,"These will likely cause some problems:; * Any JavaFX from 20.0.1 onwards breaks (javascript) search links within javadocs - at least when accessing javadocs from within a .jar; * Deep Java Library has probably broken the approach previously used to test if an `Engine` is available before attempting to download it. Nevertheless, we don't want to be stuck on old dependencies - so merging early in the path towards v0.6.0 will hopefully give us time to find fixes/workarounds. This commit also updates the pref name to have the correct QuPath version.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1496:272,avail,available,272,https://qupath.github.io,https://github.com/qupath/qupath/pull/1496,2,"['avail', 'down']","['available', 'download']"
Availability,"This PR proposes a moderately significant change to the `ImageServer` interface, which I'd like to discuss (and sanity-check) with the people most affected. @iwbh15 @NicoKiaru @lacan @ap-- @sdvillal @finglis (sorry if I have missed anyone...). The background is that pixels are currently accessed in QuPath via something like; ```java; RegionRequest request = RegionRequest.createInstance(server.getPath(), downsample, x, y, width, height);; BufferedImage img = server.readBufferedImage(request);; ```. Creating a `RegionRequest` made sense in the early days, since it was used for caching. It remains useful for accessing corresponding regions in paired images, or for creating requests from ROIs, and for avoiding a plethora of parameters (particularly if `z` and `t` indices should be returned as well). However, often it just feels like unnecessary overhead, e.g. when writing simple scripts... or accessing from another language, like Python. It is pretty easy to retrofit support for; ```java; BufferedImage img = server.readBufferedImage(downsample, x, y, width, height, z, t);; BufferedImage img2 = server.readBufferedImage(downsample, x, y, width, height);; ```; by simply adding default methods to the interface. I don't think this should break anything. However this leads to another consideration... `readBufferedImage` isn't a great name, since the method really returns an instance of whatever the generic parameter `T` stands for in `ImageServer<T>`. It happens that this is pretty much always `BufferedImage` in QuPath, but the original idea was that an `ImageServer` could exists that returns something else that might be more convenient (e.g. something from ImgLib2, or an OpenCV `Mat`). So rather than doubling-down on `server.readBufferedImage` I would like to switch to `server.readRegion(RegionRequest)` instead. This feels to me more accurate and intuitive. The tricky bit is not breaking everything else... like parts of paquo or warpy, and all existing scripts that need pixel",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072:407,down,downsample,407,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072,1,['down'],['downsample']
Availability,"This approach is much more elegant than #1488, i like it!; However I feel it doesn't exploit all the possible info that can be gathered without reading the image files. Specifically images' metadata for info such as the number of channels and their names or even as well as pixel calibration.; If available, they're available in the `.qpproj` and they're already read when opening the project. Perhaps this could be done by exposing a `getCurrentMetadata()` method, so that it does not require to pass through calling `getServer()`?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1489#issuecomment-2031984755:297,avail,available,297,https://qupath.github.io,https://github.com/qupath/qupath/pull/1489#issuecomment-2031984755,2,['avail'],['available']
Availability,"This error (and the reduction in variables allowing the classifier to work) brings to mind something I batted around in my head but never formalized as a feature request. Often, many if not most of the features fed into a classifier are nearly unused. How difficult would it be to code the extraction of the top variable combinations (to some N) from the decision trees ""rate my variables"" list? At the moment, adding in one new scale propogates across all features and channels, even if I knew I only wanted to use a particular low res scale with one marker. I am not sure how practical coding an option like that might be, but it could streamline classifiers significantly in situations like this one.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1092063797:5,error,error,5,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092063797,1,['error'],['error']
Availability,"This gets rid of the warnings about deprecation during startup. Only the Bio-Formats and OpenSlide servers relied upon this as a backup in case `ImageServer.close()`, and both now use `Cleaner`. Note that this should be more reliable anyway, since servers that wrapped other servers don't reliably call `close()` on the servers that they wrap. They arguably should, but if multiple servers wrap the same core server then there's a chance it is closed even while still in use... so it's safer to rely on the `Cleaner` (unfortunately). One way to test this is to run a script such as ; ```groovy; int n = 10; for (int i = 0; i < n; i++) {; def server = getProjectEntry().getServerBuilder().build(); println server; }; ```; for a project with an OpenSlide or Bio-Formats image open, and check the log for evidence that `Cleaner` was used (at debug level).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1617:225,reliab,reliable,225,https://qupath.github.io,https://github.com/qupath/qupath/pull/1617,2,['reliab'],"['reliable', 'reliably']"
Availability,"This happens whenever QuPath is unable to detect any cores. There are a few reasons why this may occur:. * The *Image type* is wrong (e.g. set to fluorescence rather than brightfield) - this can be seen after clicking on the *Image* tab on the left. There is a screenshot [here](https://github.com/qupath/qupath/wiki/Preprocessing#viewing-the-default-stain-vectors).; * The specified TMA core diameter is either too large or too small. QuPath determines the expected TMA grid from 'complete' cores, which have a diameter within a small tolerance of the value set in the dialog box. If no cores fall within this tolerance, the grid cannot be found.; * The intensity threshold is either too high or too low (but it is automatically determined from the data, and I don't see any reason in your image why it would be determined wrongly). If the image type is set correctly, then I would try increasing and decreasing the *TMA core diameter* to see if this gives any improvements. If not, then there may be some issue happening internally when trying to read from the CZI file - although I have not seen such a problem before. The contents of *View &rarr; Show log* may be helpful to track down the problem.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/48#issuecomment-276482533:536,toler,tolerance,536,https://qupath.github.io,https://github.com/qupath/qupath/issues/48#issuecomment-276482533,3,"['down', 'toler']","['down', 'tolerance']"
Availability,"This involves several changes:; - Use toolchain rather than target version.; - This is required because Gradle can't currently be run using Java 16, and so the build script needs to be called using a different Java version than the one used to build QuPath. If Java 16 isn't available, Gradle will download it.; - Strip the version number from the application name.; - This is required to avoid package failures due to the .cfg file name being different. *Unfortunately, this may cause problems for users wanting multiple versions installed simultaneously.* The workaround is to rename/use the .zip installations on Windows.; - Explicitly specify the java.library.path to be $APPDIR; - This is required to load OpenSlide/JPen. The library path was previously set automatically by jpackage in Java 14 (but not 15).; - Explicitly use java-options in the cfg file when changing the memory settings; - Avoid setting the version on macOS; - Sadly, we cannot start a version number with 0. These changes should also address the issues that arose when building QuPath v0.2 with Java 14: https://github.com/qupath/qupath/issues/615. Several other changes were made:; - Update gradlew; - JavaCPP now uses platform plugin for better dependency management; - Guava version updated; - License report plugin updated; - include jdk.jsobject",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/685:275,avail,available,275,https://qupath.github.io,https://github.com/qupath/qupath/pull/685,3,"['avail', 'down', 'failure']","['available', 'download', 'failures']"
Availability,"This is a *milestone* (i.e. still in development) version made available to try out new features early.; * Fixed repainting bug that could cause existing annotations to temporarily shift when drawing new annotations; * Fixed 'Zoom to fit' bug that meant command did not correctly resize and center the image in the viewer; * Added 'Match viewer resolutions' command to help synchronize when using multiple viewers; * Improved tile export within a script; * Improved interactive transformations; * More options for 'Interactive image alignment', including support to specify affine transform manually; * Log affine transform when applying 'Rotate annotation'",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/385:63,avail,available,63,https://qupath.github.io,https://github.com/qupath/qupath/pull/385,1,['avail'],['available']
Availability,"This is a continuation from #429. After the fix in there, we have seen the number of AreaROIs we cannot convert to JTS Geometry reduced from 187 to 24. Over thousands of ""naturally occurring"" ROIs, so I believe conversion is becoming really robust. On a typical error we still get, first we receive a warning ""Unable to fix geometry, (area before x, **area after 0.0**)"" and then a NullPointerException with a stacktrace like this (note, line numbers correspond to current 0.2.0m10 ""dev"" branch):. ```java; WARN: Unable to fix geometry (area before: 63.93478012084961, area after: 0.0); ERROR: QuPath exception; at org.locationtech.jts.geom.Envelope.intersects(Envelope.java:576); at org.locationtech.jts.algorithm.locate.SimplePointInAreaLocator.locate(SimplePointInAreaLocator.java:71); at org.locationtech.jts.algorithm.locate.SimplePointInAreaLocator.isContained(SimplePointInAreaLocator.java:90); at qupath.lib.roi.GeometryTools$GeometryConverter.convertAreaToGeometry(GeometryTools.java:742); at qupath.lib.roi.GeometryTools$GeometryConverter.areaToGeometry(GeometryTools.java:509); at qupath.lib.roi.GeometryTools$GeometryConverter.areaToGeometry(GeometryTools.java:493); at qupath.lib.roi.GeometryTools$GeometryConverter.roiToGeometry(GeometryTools.java:457); at qupath.lib.roi.AbstractPathROI.getGeometry(AbstractPathROI.java:172); at qupath.lib.roi.AreaROI.getGeometry(AreaROI.java:355); at qupath.lib.gui.viewer.tools.AbstractPathTool.setConstrainedAreaParent(AbstractPathTool.java:231); at qupath.lib.gui.viewer.tools.MoveTool.mousePressed(MoveTool.java:138); at qupath.lib.gui.viewer.tools.AbstractPathTool.lambda$registerTool$7(AbstractPathTool.java:441); ...; ```. [This is an example serialized ROI](https://github.com/qupath/qupath/files/4442109/broken_area_roi_Liver_Necroses_mf_hp_01_0.ser.tar.gz) that corresponds to this image (this kind of complex geometries happen often in our dataset, blame nature and our super-careful pathologists). ![Screenshot 2020-04-07 at 06 57 48](http",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/434:241,robust,robust,241,https://qupath.github.io,https://github.com/qupath/qupath/issues/434,3,"['ERROR', 'error', 'robust']","['ERROR', 'error', 'robust']"
Availability,"This is a mystery to me.... You could try launching it from the command line. To help ensure OpenSlide can be loaded successfully, it is best to do this from within the 'app' directory found within the QuPath installation. So on Windows for v0.2.0-m2 you'd use something like this at the command prompt:; ```; cd path\to\qupath\app; ..\runtime\bin\java -Xmx4G -jar qupath-0.2.0-m2.jar; ```; This should attempt to start QuPath with a maximum of 4GB RAM... which of course you can adjust to whatever you need. The value show appear under 'Show setup options', and you can also visualize memory use with https://petebankhead.github.io/qupath/scripting/2018/03/06/script-memory-monitor.html. Does starting the software this way make any difference to the memory available?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/321#issuecomment-495874974:759,avail,available,759,https://qupath.github.io,https://github.com/qupath/qupath/issues/321#issuecomment-495874974,1,['avail'],['available']
Availability,This is as opposed to reporting it as an error.; See https://forum.image.sc/t/how-to-measure-the-staining-intensity-without-positive-cell-detection/66847/12,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1003:41,error,error,41,https://qupath.github.io,https://github.com/qupath/qupath/pull/1003,1,['error'],['error']
Availability,"This is how it looks like one of the offending AreaROIs. Just a hypothesis, but zooming in one can spot tiny spurious subregions that might be the cause of the error. ![Screenshot 2020-04-01 at 20 53 08](https://user-images.githubusercontent.com/642252/78175265-dfde7c00-745a-11ea-98be-62f14f087079.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/429#issuecomment-607431796:160,error,error,160,https://qupath.github.io,https://github.com/qupath/qupath/issues/429#issuecomment-607431796,1,['error'],['error']
Availability,"This is not really an existing issue since I solve it but I faced the problem. In addition to drag and drop `bioformats_package.jar` and `qupath-extension-bioformats.jar`, opening the CZI files will also require to install **Visual C++ Redistributable for Visual Studio 2015** (you can find it here [https://www.microsoft.com/en-us/download/details.aspx?id=48145](https://www.microsoft.com/en-us/download/details.aspx?id=48145) ) for Microsoft Windows.; It's something I missed and made the usage of bioformat to open CZI hectic (works on some computer where Visual C++ was installed but not where it was not installed.; See https://www.openmicroscopy.org/site/support/bio-formats5.3/formats/zeiss-czi.html for the bioformat documentation. It would be useful to add this information to the documentation. Thanks again for this very nice software!; Benjamin",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/43:332,down,download,332,https://qupath.github.io,https://github.com/qupath/qupath/issues/43,2,['down'],['download']
Availability,"This is now a duplicate of https://github.com/qupath/qupath/issues/217 and it would be better to continue there. On Linux, it appears that image hasn't been opened and therefore there is no `imageData` (both here and in the other discussion). I don't know why this is the case; it could be a bug in QuPath, or it could be an error in the way you call it from the command line (I don't know what you type at the command line or where your image is located). Can you say what exactly solved the problem above? https://github.com/qupath/qupath/issues/216#issuecomment-420296209; This would be helpful in case a similar question comes up in the future.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420533550:325,error,error,325,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420533550,1,['error'],['error']
Availability,"This is one way to do the export:; ```groovy; import javax.imageio.ImageIO; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed ; if (Thread.currentThread().isInterrupted()); break; // Write the image; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, core.getROI())); ImageIO.write(img, 'PNG', new File(dirOutput, core.getName() + '.png')); }; print('Done!'); ```. This won't give any existing overlay, but I assume this isn't needed. Perhaps more importantly, it can be rather slow - and the resulting files may be large (often > 50 MB per PNG in my test). Exporting to JPEG would give much smaller manageable file sizes (~2 MB).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/97#issuecomment-327534509:168,down,downsample,168,https://qupath.github.io,https://github.com/qupath/qupath/issues/97#issuecomment-327534509,2,['down'],['downsample']
Availability,"This is the log from 0.1.3; ![expected output](https://user-images.githubusercontent.com/33515823/54674681-3e111900-4afd-11e9-9396-0196a9651c5d.png). ERROR: Openslide: Property not available: openslide.level[0].tile-width; ERROR: Openslide: Property not available: openslide.level[0].tile-height; INFO: Test reading thumbnail with openslide: passed (BufferedImage@5239565c: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 86 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); INFO: Returning server: OpenSlide for /media/thomas/My Passport/images/WSI/CD8_CK/CD8_CK_area_data_0.1.3/../image_files/102.mrxs; INFO: Estimating H-DAB staining; INFO: Image data set to ImageData: Brightfield (H-DAB), 102; INFO: Reading data from 102.qpdata...; INFO: Hierarchy with 153193 object(s) read from /media/thomas/My Passport/images/WSI/CD8_CK/CD8_CK_area_data_0.1.3/data/102.qpdata in 1.55 seconds. This is the log from 0.2.0-m2; ![observed output](https://user-images.githubusercontent.com/33515823/54674742-541ed980-4afd-11e9-8187-f4d32bf10136.png). WARN: Openslide: Property 'openslide.level[0].tile-width' not available, will return default value 256.0; WARN: Openslide: Property 'openslide.level[0].tile-height' not available, will return default value 256.0; INFO: Test reading thumbnail with openslide: passed (BufferedImage@4cd960db: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 147 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); INFO: Returning server: OpenSlide for file:/media/thomas/My%20Passport/images/WSI/CD8_CK/CD8_CK_area_data_0.2.0-m2/../image_files/102.mrxs; INFO: Reading data from 102.qpdata...; INFO: Image data set to ImageData: Brightfield (other), 102.mrxs",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/291:150,ERROR,ERROR,150,https://qupath.github.io,https://github.com/qupath/qupath/issues/291,6,"['ERROR', 'avail']","['ERROR', 'available']"
Availability,"This looks good and very useful! Nice touches with auto-updating the image name based on the delimiter, and auto-disabling the column include/exclude as needed :). Some small things:; * Beware invalid characters in the fields... if the filename contains commas, the entire table becomes shifted if exporting as .csv. It appears to work properly (at least in MS Excel) if the name is enclosed in ""inverted commas"". There are rules for this [here](https://en.wikipedia.org/wiki/Comma-separated_values#Basic_rules).; * Avoid including spaces when before/after the delimiter.; * Try to get the controls to align at the right, and fill the entire space at the bottom of the dialog. For example, for the combo boxes you'll need to set the max width to Double.MAX_VALUE and (assuming you're using a GridPane) some other grow/fill properties (I forget which).; * Rename 'Choose path' to 'Choose...' and 'Output File' to 'Output file' (for capitalization consistency), and add tooltip text to this row.; * Change 'Apply on' to 'Export type' or similar. Try adding 'Image' as an option, i.e. the root object, and perhaps also TMA cores. 'Image' should probably be the default.; * Add tooltip to the 'Output File' option (and rename to 'Output file' for consistency); * Fix the tooltip for 'Columns to exclude' (says 'include'); * Revise the javadocs for 'ProjectDialogs'; add for getSourceItems, and standardize for createImageChoicePane (i.e. use the `@param` tags). Not essential at this point, but after playing with it a bit I think there would be a way to improve the control even further: the choice of columns could be a CheckComboBox, which is populated *if* the user presses a *Populate* button. This needs to be an explicit choice, because it would require opening all the currently-selected images to figure out which column headings are available... and this may be slow. Perhaps not worth the effort for now, having this at all will be a major improvement!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/425#issuecomment-606125263:1839,avail,available,1839,https://qupath.github.io,https://github.com/qupath/qupath/pull/425#issuecomment-606125263,1,['avail'],['available']
Availability,"This relates to https://github.com/qupath/qupath/issues/1634. Because CUDA detection and PyTorch downloading is all performed by DeepJavaLibrary, we are very limited in what we can do on the QuPath side. Then there is the issue of how Java loads native library dependencies - and especially the platform-specific fun of how *sub*-dependencies are handled. And the potential interference of environment variables or other things that could be installed. It is, in short, hard. The page on the docs is currently our best 'general' approach to help with this, based on many hours trying to find something workable across computers: https://qupath.readthedocs.io/en/stable/docs/deep/gpu.html#gpu-support. We will continue to try to improve this, but I'll close the issue because I don't think there is any clearly-defined QuPath bug here that we can address. To try to avoid fragmenting the discussion in multiple places, I suggest posting on the forum. There are more users active on the forum who might potentially be able to help from their own experience, and there are already some related discussions, e.g. https://forum.image.sc/search?q=qupath%20gpu%20order%3Alatest",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1636#issuecomment-2346013057:97,down,downloading,97,https://qupath.github.io,https://github.com/qupath/qupath/issues/1636#issuecomment-2346013057,1,['down'],['downloading']
Availability,"This replaces the *ImageJ macro runner*. Both can be seen in this screenshot - the old on the left, the new on the right:. ![imagej-macro-runner](https://github.com/user-attachments/assets/851d4ef3-b6cd-423a-bf30-8df12e9de672). Improvements include:; * Syntax highlighting; * Autocomplete with built-in macro functions when pressing `Ctrl+space`; * Better control over which objects are sent for processing; * Better control over resolution, with 3 different methods to control the size of images sent to ImageJ (not just downsample); * Better control over parallelization; * Option to select channels to send; * Built-in examples of potentially-useful macros; * Support for `Roi` groups, which map to QuPath classifications; * Scriptability; macros can be stored in the command history and run later through Groovy scripts; * Ability to run Groovy scripts instead of macros; * These are different from Groovy scripts run through the script editor; they are specifically written to work on an `ImagePlus` obtained from ImageJ via a call to `IJ.getImage()`; * New `IJProcessing` and `IJFilters` classes make it easier to process images obtained this way; * Properties are set in the `ImagePlus` based on the QuPath image type so it's possible to determine a sensible value of `darkBackground` or `lightBackground` in macros or scripts; * Better maintainability through the use of fxml and externalised strings; * Available by the 'ImageJ' toolbar button, not only the menus. This required a *lot* of changes, so there is a reasonable chance things have broken elsewhere... including with the regular script editor (which needed changed to make it possible to generate a script editor control elsewhere). But I think it remains functional... Some limitations:; * It's not possible to control via a script which objects or Rois are sent to ImageJ with an `OverlayOptions` object; * The previous macro runner didn't do this perfectly either - see https://github.com/qupath/qupath/issues/1522 ); * It's not",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1682:522,down,downsample,522,https://qupath.github.io,https://github.com/qupath/qupath/pull/1682,1,['down'],['downsample']
Availability,"This seems likely to be a bug in the image reading library (OpenSlide or Bio-Formats - you can tell which is used under the 'Image' tab by looking at the server type), or perhaps a non-standard representation of the pyramidal levels within the converted TIFF image. In general, it should be possible to work directly from the .ndpi image in QuPath. Because there are all sorts of (supposedly) pyramidal TIFFs in the wild, I really don't know what kind your conversion has produced. In any case, QuPath does not contain its own image readers, and therefore it is unlikely the issue can be resolved within QuPath alone. Also, v0.1.2 will not be further updated - so the first thing to do would be to check if the error persists in the latest milestone release (currently v0.2.0-m8). Depending upon the image reader used, you might want to report it as a Bio-Formats or OpenSlide issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/386#issuecomment-566096742:711,error,error,711,https://qupath.github.io,https://github.com/qupath/qupath/issues/386#issuecomment-566096742,1,['error'],['error']
Availability,"This seems to address the ```""columnImage"" is null``` error mentioned in #1083 when loading the qptma file in the TMA Data Viewer.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1096:54,error,error,54,https://qupath.github.io,https://github.com/qupath/qupath/pull/1096,1,['error'],['error']
Availability,"This situation is hopefully much improved in v0.0.7. OpenSlide and OpenCV were both recompiled, and I attempted to ensure all non-standard, required dependencies are now included - with an appropriate ```rpath``` setting so that they may find one another. Most of the steps taken are documented under the ['Maven' directory](https://github.com/qupath/qupath/tree/master/maven). The Linux version 0.0.7 was created using Ubuntu 16.04 running through VirtualBox on an iMac. I also tested the compiled QuPath on a clean installation of Fedora 25, also through VirtualBox. Both were able to run QuPath, including commands depending on OpenSlide and OpenCV - although things did run a bit more smoothly on Ubuntu (e.g. the *Brush* tool misbehaved on Fedora). Additionally, the Linux version is created using [OpenJDK](http://openjdk.java.net) and [OpenJFX](http://openjdk.java.net/projects/openjfx/) - as opposed to the [Oracle JDK](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html) used for Windows and Mac.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/2#issuecomment-263157251:974,down,downloads,974,https://qupath.github.io,https://github.com/qupath/qupath/issues/2#issuecomment-263157251,2,['down'],"['downloads', 'downloads-']"
Availability,"This sounds very interesting! I'm afraid I don't have any immediate insights on the y-offset question... I have not explored .mrxs images too deeply. I haven't needed to, and so far I've just sadly accepted that the creators of the format just don't seem to want it to be very open. I am also not completely sure I understand the exact question here - I don't know how things look in either QuPath or CaseViewer, nor how exactly you've got it to display in QuPath, i.e. is it just the plane that OpenSlide can provide, or have you already got your tiles into QuPath some other way?. Nevertheless, two pieces of information that may be of use:; * The next release of Bio-Formats (already available as a milestone build) will have support for reading and writing image pyramids as OME-TIFF, which is also capable of handling z-stacks (and time series). Since Bio-Formats is compatible with QuPath, has exceptional metadata support, and can be used with MATLAB, it could be would trying to get your extracted tiles into OME-TIFF format: http://blog.openmicroscopy.org/file-formats/community/2018/11/29/ometiffpyramid/; * In the next release of QuPath (I very much hope later this month... at least in early form) I have revised the `ImageServer` interface considerably, which will impact how new file readers work. Specifically, it will reduce the effort involved in creating a reader to three main things:; * Parse metadata; * Declare what tiles are available; * Have the ability to read a tile. The hard work of merging, rescaling and caching tiles is abstracted away. This has been done partly to help make it possible to create `ImageServers` that wrap other `ImageServers`... for example if you have sparse tissue regions represented in multiple files that ought to be displayed as a single image, this combining can be performed automatically - allowing you to specify where the separate pieces ought to be position. In the case of overlaps there is no special blending performed (by default anyway",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/265#issuecomment-459976203:687,avail,available,687,https://qupath.github.io,https://github.com/qupath/qupath/issues/265#issuecomment-459976203,1,['avail'],['available']
Availability,"This update does allow the export to run as expected when saving as ""ome.tif"". It might be useful to have a check/warning prior to attempting to write a file that is too large to a basic .tif. If I attempt the same export to .tif, after a long pause I get:. `WARN: Unable to write image; ERROR: IOException at line 22: Unable to write F:\filepath\Sox2 region_0_annotationLabels.tif! No compatible writer found.`. Oddly enough, I ran into trouble with the new Telerium openjdk not recognizing `gradlew ` when trying to set that up on my new computer, but was able to build and test things out on my old one so... I will look into that later.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/984#issuecomment-1183514515:288,ERROR,ERROR,288,https://qupath.github.io,https://github.com/qupath/qupath/issues/984#issuecomment-1183514515,1,['ERROR'],['ERROR']
Availability,"This was causing trouble in https://forum.image.sc/t/how-can-display-more-than-one-images-in-qupath-viewer-using-scripting/96156/ initially because the width and height here zero, leading to an infinite downsample value... and persistent JavaFX complaints upon all interactions with the viewer. This happened when setting the viewer grid size and then *immediately* setting the image in the viewer; somehow this resulted in wrong values being calculated, and a non-invertible AffineTransform that caused trouble indefinitely. The workaround here avoids many repeated exceptions, although still results in the image being opened at full resolution rather than the expected (fitted) downsample.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1521:203,down,downsample,203,https://qupath.github.io,https://github.com/qupath/qupath/pull/1521,2,['down'],['downsample']
Availability,"Tile cache size: 4096,00 MB; 12:25:43.922 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/joelrv/QuPath/extensions; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /home/joelrv/Downloads/bftools/test_pyramid_fullsize.tif; 12:25:56.155 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - Estimating H-DAB staining; 12:25:56.537 [JavaFX Application Thread] [INFO ] qupath.lib.gui.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472813709:1745,avail,available,1745,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709,1,['avail'],['available']
Availability,Timepoint data is rarely available (or correct),MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1628:25,avail,available,25,https://qupath.github.io,https://github.com/qupath/qupath/issues/1628,1,['avail'],['available']
Availability,"To begin, I disable the two lines:; ```; import qupath.imagej.images.servers.ImagePlusServer; import qupath.imagej.images.servers.ImagePlusServerBuilder. ```; Then I replace the two lines below:. ```; // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(); // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal); ```. to:. ```; // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(); ```. Then I run the acript again in QuPath 0.2.0. When import error was removed, the modified ""server"" now can give correct information:. ```; // get size of whole image; int H = server.getHeight(); int W = server.getWidth(); int Z = server.nZSlices() //usually 1; int C = server.nChannels(); int T = server.nTimepoints(); String TU = server.getTimeUnit(); int Magnification = server.getMagnification(); boolean HasPixelSizeMicrons = server.hasPixelSizeMicrons(); int BitsPerPixel = server.getBitsPerPixel(). print(""Height:"" + H) ; print(""Width:"" + W); print(""ZSlices:"" + Z); print(""nChannels:"" + C); print(""nTimepoints:"" + T); print(""TimeUnit:"" + TU); print(""Magnification:"" + Magnification); print(""HasPixelSizeMicrons:"" + HasPixelSizeMicrons). double PixelHeightMicrons; double PixelWidthMicrons; double PixelZSpacingMicrons. if (HasPixelSizeMicrons){; PixelHeightMicrons = server.getPixelHeightMicrons(); print(""PixelHeightMicrons:"" + PixelHeightMicrons); PixelWidthMicrons = server.getPixelWidthMicrons(); print(""PixelWidthMicrons:"" + PixelWidthMicrons); PixelZSpacingMicrons = server.getZSpacingMicrons(); print(""PixelZSpacingMicrons:"" + PixelZSpacingMicrons); }else{; PixelHeightMicrons = 1.0; print(""PixelHeightMicrons:"" + PixelHeightMicrons); PixelWidthMicrons = 1.0; print(""PixelWidthMicrons:"" + PixelWidthMicrons); PixelZSpacingMicrons = 1.0; print(""PixelZSpacingMicrons:"" + PixelZSpacingMicrons); }. String imgpath = server.getPath(); print(i",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472886695:609,error,error,609,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472886695,1,['error'],['error']
Availability,"To troubleshoot installation issues, including recent Mac issues, see https://qupath.readthedocs.io/en/latest/docs/intro/installation.html. The error you get when building from source is because you need jpackage, as described at https://qupath.readthedocs.io/en/latest/docs/reference/building.html. (Note this won't be necessary for the next release; the build script will change and require JDK 14, which includes jpackage already.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/426#issuecomment-606410721:144,error,error,144,https://qupath.github.io,https://github.com/qupath/qupath/issues/426#issuecomment-606410721,1,['error'],['error']
Availability,"Trigger update to location text with any viewer movement, not just a change of downsample factor.; Fixes https://github.com/qupath/qupath/issues/819",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/823:79,down,downsample,79,https://qupath.github.io,https://github.com/qupath/qupath/pull/823,1,['down'],['downsample']
Availability,"True, I will give it some thought and investigate a bit when I return to the tool to update the icon. Left/right would break down for a horizontal line, although that could be resolved. However it's not clear to me what a kind of result a U shape of polyline should produce.... inner/outer is an easier concept there, but returns to closed polygons. But it gets worse when thinking of S shapes... or intersecting polylines. If we can come up with a clear and unambiguous definition for what polyline expansions make sense then we can look at how it might be implemented. Failing that, is there a way that adding extra commands/options could preserve your current approach, but make it more streamlined?. I've also been looking into the ability to transform ROIs to a Java Topology Suite-compatible format, which should give more options for interesting shape transforms and determining spatial relationships... although I don't recall anything in the library directly helpful here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/228#issuecomment-430150335:125,down,down,125,https://qupath.github.io,https://github.com/qupath/qupath/issues/228#issuecomment-430150335,1,['down'],['down']
Availability,"True, but there are multiple places where text could be generated in QuPath that is copied to the clipboard. I don't really fancy trying to track down all of them... Are you able to share a file that includes the problem? I currently have no way to replicate it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/573#issuecomment-664523997:146,down,down,146,https://qupath.github.io,https://github.com/qupath/qupath/issues/573#issuecomment-664523997,1,['down'],['down']
Availability,"Try to propagate more meaningful errors when an image can't be opened or import to a project, especially for .czi images that don't work with Apple Silicon. To help achieve this, don't rely on ImageJ to attempt any image - but instead query the image type first, and try only if ImageJ has a good chance of handling it.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1416:33,error,errors,33,https://qupath.github.io,https://github.com/qupath/qupath/pull/1416,1,['error'],['errors']
Availability,Try to resolve issue with mergedJavadocs (at least on Windows) and downloading an unnecessary toolchain,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/963:67,down,downloading,67,https://qupath.github.io,https://github.com/qupath/qupath/pull/963,1,['down'],['downloading']
Availability,"Trying to run v0.2.0m10 with the Google Cloud Healthcare API extension installed crashes ""silently"" QuPath. This is so because the extension has not been adapted to the new QuPath API, but one needs to look at the logs (or manually run java to get them on the CLI) to figure out. I think we could improve this by:; - Being resilient to extension errors at start time and list problematic ones with suggestions of how to look for help.; - Maybe introducing some sort of protocol for extensions to check if they are compatible with current QuPath (although this likely would add some overhead to extension maintainers). I see this would actually be a ""soft"" restriction asking the user whether to disable an extension or run it at her own risk.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/454:323,resilien,resilient,323,https://qupath.github.io,https://github.com/qupath/qupath/issues/454,2,"['error', 'resilien']","['errors', 'resilient']"
Availability,"Ubuntu/PopOS results, pretty much what I expected, more files less time, no inconsistency:. ```; INFO: Starting script at Thu Aug 24 14:47:27 BST 2023; INFO: Same: true; INFO: Count files: 208; INFO: Count paths: 208; INFO: Paths 	598 ms; Files 	319 ms; Total duration	917 ms; Average per checkpoint: 458 ms; INFO: Total run time: 2.68 seconds; ```. > Also... why do they not match?!?. The unholy combination that is Windows and Java, I guess",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1298#issuecomment-1691717326:289,checkpoint,checkpoint,289,https://qupath.github.io,https://github.com/qupath/qupath/pull/1298#issuecomment-1691717326,1,['checkpoint'],['checkpoint']
Availability,"Unable to adjust/set max memory in QuPath, either in 0.1.2 or 0.2.0-m2. Running analysis on cell files fails, does not detect cell direction or anything. This still does work on v 0.1.1 with 0.50GB set... Steps to reproduce the behavior:; 1. Go to Help > Show Setup Options; 2. Change Maximum memory from the default of 1 to any number (computer has 32GB avail); 3. Click Apply; 4. Close QuPath and reopen; 5. Go to Help > Show Setup Options; still shows ""current maximum memory is 0.48GB (v 0.1.2) or 0.50GB (v 0.2.0-m2). **Expected behavior**; Expect Max memory to change to what was set. Installed on a separate computer and Max was set without issue. Verified in 0.2.0-m2 that the .cfg file does change each time, however it still only displays ""0.50GB"". **Screenshots**; ![image](https://user-images.githubusercontent.com/51007080/58358449-cc728580-7e33-11e9-9c66-5ec6cd67bb9a.png). ![image](https://user-images.githubusercontent.com/51007080/58358462-da280b00-7e33-11e9-9897-0bf811ddfa88.png). ![image](https://user-images.githubusercontent.com/51007080/58358468-deecbf00-7e33-11e9-9233-f658233afbcb.png). **Desktop (please complete the following information):**; - OS: Windows 10 Enterprise x64, latest build; - QuPath Version 0.1.2 & 0.2.0-m2. **Additional context**; It's possible this is occurring due to multiple upgrades. This computer looks like it was upgraded from Win 7 to Win 8 to Win 10, or just one of those to Win 10 (inherited support on this one). Also running Leica imaging software. Will most likely try a fresh re-install of the OS at this point to rule that out.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/321:355,avail,avail,355,https://qupath.github.io,https://github.com/qupath/qupath/issues/321,1,['avail'],['avail']
Availability,Uncaught exceptions can fill the screen with duplicate error notifications,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/990:55,error,error,55,https://qupath.github.io,https://github.com/qupath/qupath/issues/990,1,['error'],['error']
Availability,"Under *Edit &rarr; Preferences...* check if *Mask image names in projects* is selected. This is a feature that helps with analysis based on manual evaluation, where seeing the file name could bias the interpretation.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/655#issuecomment-743789788:45,Mask,Mask,45,https://qupath.github.io,https://github.com/qupath/qupath/issues/655#issuecomment-743789788,1,['Mask'],['Mask']
Availability,"Unfortunately, I installed the bio-formats extensions and forced QuPath to use Bio-Formats in the preferences, and still got the same behavior (error message rather than opening image file.) If you, or others, have other ideas, I'd love to hear them. . Thanks for the observation about svs files not being all alike. Based on that information, I'll dig more into the format being the problem, and not the size. . Thanks!; Rob",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/240#issuecomment-436386267:144,error,error,144,https://qupath.github.io,https://github.com/qupath/qupath/issues/240#issuecomment-436386267,1,['error'],['error']
Availability,Uninformative / by zero error when setting stain vectors on empty images,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/880:24,error,error,24,https://qupath.github.io,https://github.com/qupath/qupath/issues/880,1,['error'],['error']
Availability,"Uninstalled Java and was able to make a new build from the updated master - and now, (so far) IT WORKS! No seeming memory leakage (system RAM use keeps under 45 GB, not contantly pushing 64 GB like before). Did not add any nThreads() command or anything, so I guess it's your memory trick that did the trick:; ""[...] However I've just made a change that will try to make memory available again sooner: petebankhead@9d2150a; This may or may not help. [...]"". Thanks so much, Pete!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-631299162:378,avail,available,378,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-631299162,1,['avail'],['available']
Availability,"Update logic related to reading/importing images, to try to have fewer errors and more informative messages logged when errors do occur. ## Improve checks for Bio-Formats image support. Throw an exception if unable to read a single pixel from a Bio-Formats image.; Accessing the pixel may introduce some overhead when importing images, but it avoids problems where metadata can be parsed yet the fact the image can't actually be read only becomes apparent later. This was causing trouble with .ndpi on Apple Silicon, because skipping the use of NDPIReader was causing a fallback to a regular TIFF reader... and this didn't recognize the image as pyramidal and couldn't read the pixels. So requesting Bio-Formats for .ndpi was both adding many (~12) images to a project (for the different pyramid levels), and not actually able to open them. Also fix the logic for determining which IFormatReader is used for a specified image. This was previously giving ImageReader rather than the specific reader, and therefore wasn't properly enabling the reader check to be skipped for readers generated in other threads. This also had an extra issue in Apple Silicon, because these checks could cause exceptions regarding unsupported libraries being logged, even if they weren't relevant to the image itself. ## Improve use of json with image servers. Make `JSONImageServerBuilder` genuinely useful by enabling it to read the server.json files stored within projects. This could potentially help in the future if attempting to recover data from a broken project. This involves estimating the ""builderType"" since that wasn't actually serialized within the server.json before. To simplify things in the future, the server.json now serializes the `ImageServer` and not the `ServerBuilder` - so that more information is present.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1402:71,error,errors,71,https://qupath.github.io,https://github.com/qupath/qupath/pull/1402,3,"['error', 'recover']","['errors', 'recover']"
Availability,"Update to use JTS 1.19.0. Introduce `-Djts.overlay=ng` by default.; Lots of evidence on the forum that this resolves thorny TopologyExceptions.; See https://forum.image.sc/t/stardist-error-message-topologyexception/67708/7 for more info. Avoid calling `geom.intersection(g)` twice in `RoiTools.clipToROI(ROI, Collection)`, which caused problems with OverlayNG.; This should fix https://github.com/qupath/qupath/issues/996",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/998:183,error,error-message-topologyexception,183,https://qupath.github.io,https://github.com/qupath/qupath/pull/998,1,['error'],['error-message-topologyexception']
Availability,"Update. This still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unk",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/301#issuecomment-514482720:123,error,error,123,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"Upon further exploration, removing 'Original RGB' as the 'first' available channel could be more problematic/confusing whenever image types are changed. However, I think there's no justification for `Normalized OD colors` being available. Therefore proposed 'fix' is just to remove that as an option when using RGB fluorescence images. Channel toggling is still possible, it just involves adding one (i.e. 2 for red, 3 for green, 4 for blue). This doesn't feel optimal, but does feel less scary in the short term at least. ### Before; <img width=""1732"" alt=""Screenshot 2022-07-12 at 18 32 08"" src=""https://user-images.githubusercontent.com/4690904/178557437-e19f71c1-f733-4483-9fbb-3ef04943bfb4.png"">. ### After; <img width=""1732"" alt=""Screenshot 2022-07-12 at 18 31 48"" src=""https://user-images.githubusercontent.com/4690904/178557465-7937107a-bc8c-43c2-a658-cc5572536ddd.png"">",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1006#issuecomment-1182093909:65,avail,available,65,https://qupath.github.io,https://github.com/qupath/qupath/issues/1006#issuecomment-1182093909,2,['avail'],['available']
Availability,"Use GitHub Packages to make `qupath-core`, `qupath-core-processing` and `qupath-gui-fx` available via Maven. These are the main three modules that are useful as dependencies. Others may be included in the future, but may also be moved to different repositories. With that in mind, `settings.gradle` has been updated to remove `qupath-extension-pen`, `qupath-extension-omero`, `qupath-extension-experimental` and `qupath-extension-tensorflow` in preparation for these to become extensions with their own repos.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/740:88,avail,available,88,https://qupath.github.io,https://github.com/qupath/qupath/pull/740,1,['avail'],['available']
Availability,Use cuda by default if available,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/802:23,avail,available,23,https://qupath.github.io,https://github.com/qupath/qupath/pull/802,1,['avail'],['available']
Availability,Use default extension path if it's available,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1260:35,avail,available,35,https://qupath.github.io,https://github.com/qupath/qupath/issues/1260,1,['avail'],['available']
Availability,"Used for deep learning optimization (StarDist algorithm); 1. Download model in OpenVINO Intermediate Representation format:; [dsb2018_heavy_augment.zip](https://mega.nz/file/IY92FbjK#ppzuYyjdxp9lPLZ2J6BnN6bCUFeZkRgbbolT4cSMI6w); [he_heavy_augment.zip](https://mega.nz/file/1U1wmTYR#HFLXGNjoAS3WR3E64-g7K3QT58cBxbrAJci2iD0EMkE); INT8: [he_heavy_augment_int8.zip](https://mega.nz/file/NMsgzJgZ#JseSxOTcOeqQbG2X9p3W2e-CXgJ6KjC8n1cs4QS49mY); INT8: [dsb2018_heavy_augment_int8.zip](https://mega.nz/file/oAkFDKBA#ZjVP4f2Il_tcjsc0iywpVRXLLvh8lBkkAD3wJ7rDdmQ). Performance:. | Intel(R) Core(TM) i7-6700K | **Test image**: OS-3.ndpi<br>**Model**: he_heavy_augment<br>**Tile size**: 1024x1024<br>**Number of tiles**: 2183 | **Test image**: LuCa-7color_Scan1.qptiff<br>**Model**: dsb2018_heavy_augment<br>**Tile size**: 1024x1024<br>**Number of tiles**: 936 |; |---|---|---|; | TensorFlow backend | 23:05 minutes | 14:20 minutes; | OpenVINO backend | 15:28 minutes (x1.5) | 10:39 minutes (x1.36); | OpenVINO backend (INT8) | 12:29 minutes (x1.87) | 8:43 (x1.68); | OpenVINO backend (INT8) + NormalizePercentileOp | 11:55 minutes (x1.99) | 8:27 minutes (x1.7). Build with OpenVINO:; ```; ./gradlew clean build createPackage -Puse_openvino=true; ```. Use `build` argument to enable OpenVINO backend:; ```groovy; def stardist = StarDist2D.builder(pathModel); .threshold(0.5) // Prediction threshold; .normalizePercentiles(1, 99) // Percentile normalization; .pixelSize(0.5) // Resolution for detection; .build(""openvino"") // or ""tensorflow"" to use TensorFlow backend. If empty, use any available backend; ```",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/665:61,Down,Download,61,https://qupath.github.io,https://github.com/qupath/qupath/pull/665,2,"['Down', 'avail']","['Download', 'available']"
Availability,Using only the smoothed featurs for the classifier I do see now that the classifier works:. INFO: Number of reclassified objects: 40 of 4375; INFO: Stroma: 138; INFO: Tumor: 165; INFO: 303 objects available for classifier training from 1 images; INFO: Classifier already trained with the same samples - existing classifier will be used; INFO: Classifier training time: 0.01 seconds; INFO: Main classifier unchanged...; INFO: Classification time: 0.00 seconds; INFO: Percentage of correctly classified objects in TRAINING set: 100.00% (n=303); WARN: It is *strongly* advised not to report accuracies based on testing using the training set!; INFO: Confusion matrix; 	Stroma	 Tumor; Stroma	 138	 0; Tumor	 0	 165. But still it doesn't apply this to the rest of the picture. Sanne,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/210#issuecomment-418648914:197,avail,available,197,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418648914,1,['avail'],['available']
Availability,"VIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, ; * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. ; * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, ; * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; ; * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ; * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ; * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; */; ```. 7. Save the script.; 5. Close the script (Ctrl+w); 6. Open the same script ==> the follwing error is thrown. **Expected behavior**; Enable to have an unlimited number of characters inside a block comment. **Screenshots**; ```; ERROR: QuPath exception; java.lang.StackOverflowError: null; at java.base/java.util.regex.Pattern$LazyLoop.match(Unknown Source); at java.base/java.util.regex.Pattern$GroupTail.match(Unknown Source); at java.base/java.util.regex.Pattern$BranchConn.match(Unknown Source); at java.base/java.util.regex.Pattern$CharProperty.match(Unknown Source); at java.base/java.util.regex.Pattern$Branch.match(Unknown Source); at java.base/java.util.regex.Pattern$GroupHead.match(Unknown Source); *****; at java.base/java.util.regex.Pattern$LazyLoop.match(Unknown Source); at java.base/java.util.regex.Pattern$GroupTail.match(Unknown Source); at java.base/java.util.regex.Pattern$BranchConn.match(Unknown Source); at java.base/java.util.regex.Pattern$CharProperty.match(Unknown Source); at java.base/java.util.regex.Pattern$Branch.match(Unknown Source); at java.base/java.util.regex.Pattern$GroupHead.match(Unknown Source); **** n times (probably n = nb of characters); ERROR: Error applying syntax highlighting: StackOv",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1176:5158,ERROR,ERROR,5158,https://qupath.github.io,https://github.com/qupath/qupath/issues/1176,1,['ERROR'],['ERROR']
Availability,Version 0.4.4 has pixel classifier shows errors and does not process the annotations in the image.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1691:41,error,errors,41,https://qupath.github.io,https://github.com/qupath/qupath/issues/1691,1,['error'],['errors']
Availability,"We are happy QuPath early adopters and have annotated many different images during the last year using QuPath v0.2.0m2 and v0.2.0m5. Now we are trying to convert the annotations to v0.2.0m9, wishing to get all the great benefits in later releases, specially everything related to the move to JTS. We can convert the projects to v0.2.0m5 without problems, but when trying to convert to later versions (we have tried with v0.2.0m6 and v0.2.0m9), there are many AreaROIs that seem to carry invalid geometries and so JTS chokes. The error (using v0.2.0m9) is always the same ```Invalid number of points in LinearRing (found 3 - must be 0 or >= 4)'```. ```java; ERROR: QuPath exception: Invalid number of points in LinearRing (found 3 - must be 0 or >= 4); at org.locationtech.jts.geom.LinearRing.validateConstruction(LinearRing.java:94); at org.locationtech.jts.geom.LinearRing.<init>(LinearRing.java:85); at org.locationtech.jts.geom.GeometryFactory.createLinearRing(GeometryFactory.java:356); at org.locationtech.jts.geom.GeometryFactory.createLinearRing(GeometryFactory.java:343); at org.locationtech.jts.geom.GeometryFactory.createPolygon(GeometryFactory.java:464); at qupath.lib.roi.GeometryTools$GeometryConverter.convertAreaToGeometry(GeometryTools.java:592); at qupath.lib.roi.GeometryTools$GeometryConverter.areaToGeometry(GeometryTools.java:492); at qupath.lib.roi.GeometryTools$GeometryConverter.areaToGeometry(GeometryTools.java:476); at qupath.lib.roi.GeometryTools$GeometryConverter.roiToGeometry(GeometryTools.java:440); at qupath.lib.roi.AbstractPathROI.getGeometry(AbstractPathROI.java:172); at qupath.lib.roi.AreaROI.getGeometry(AreaROI.java:355); at ...; ```. This makes it impossible to use anything depending on conversion to JTS geometry: from converting to GeoJSON (our main goal) to simply view the slide. For example, this fails:. ```python; GeometryTools.geometryToROI(roi.getGeometry(), roi.getImagePlane()); ```; I attach a serialized example of one such ROIs, and I would be h",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/429:529,error,error,529,https://qupath.github.io,https://github.com/qupath/qupath/issues/429,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"We can only apply one CSS stylesheet to WebViews - which is used by the `WebViews` class to bind to dark mode changes. Therefore we need to add any interesting custom formatting to those shared stylesheets. This PR then adds some provisional support for nicer blockquote formatting, so that this is available elsewhere if needed (note that it's subject to change when someone who is better at css looks at it).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1673:299,avail,available,299,https://qupath.github.io,https://github.com/qupath/qupath/pull/1673,1,['avail'],['available']
Availability,"We did end up getting self-contained binaries for all platforms built and hosted on SciJava Maven for the 4.0.0 OpenSlide release. Hopefully with the release of the Apple M1 GitHub runners in the next few months, we can contribute these changes into the upstream build cycle. The current status of OpenSlide in QuPath is that each platform contains a self-contained OpenSlide binary, which we hook into with JNA. This means the JNI-based OpenSlide-Java is no longer needed for us, which simplifies the build quite a bit. Users can override this by pointing QuPath to their own version of OpenSlide. These changes are available in the current v0.5.0 rc(1/2) and will be in the full 0.5.0 release of QuPath also. Closing this as all of the necessary changes now are in different repos unrelated to QuPath core.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1777323272:617,avail,available,617,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1777323272,1,['avail'],['available']
Availability,"We don't have a code signature step... release candidate must be available within the next couple of hours, ahead of a workshop next week, so won't have time to make any more changes ahead of that. The easiest way to explore would be to build for source with gradle: https://qupath.readthedocs.io/en/0.4/docs/reference/building.html. The PR should point towards the parts that needed to be reverted to get things working.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1250#issuecomment-1750335267:65,avail,available,65,https://qupath.github.io,https://github.com/qupath/qupath/issues/1250#issuecomment-1750335267,1,['avail'],['available']
Availability,"We'd need more information to be able to help, including:. * what errors do you see under *View -> Show log*?; * how precisely did the abnormal shutdown occur?; * can you give precise steps to replicate the issue?; * do the other images in the project work?. QuPath tries to offer the user some protection by creating a backup data file while writing the new one, in case this does not succeed - see https://github.com/qupath/qupath/blob/85700bbb026e1e72425e266ee3105b2f39c4f4fd/qupath-core/src/main/java/qupath/lib/projects/DefaultProject.java#L730-L779. Therefore I think that this bug report is not correct in general (i.e. any abnormal termination will cause data to be lost) - rather, the specific steps are essential to understand the problem. Note that you can right-click on the image under the 'Project' tab and go to the directory that contains the problematic `.qpdata` file. If your see a file ended with `.bkp` you could try renaming it to replace the corrupt/incomplete `.qpdata` and see if that restores the last saved data for you.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/512#issuecomment-639525487:66,error,errors,66,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-639525487,1,['error'],['errors']
Availability,"Weirdly I can't get it to open. MacOS says '""QuPath.app"" is damaged and can't be opened. You should move it to the bin'. Even when I go into the package and manually run the QuPath script from the terminal I get the same error. I'll maybe try installing Java JDK 17 x86 and see if I can compile it, unless you have another suggestion.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1184#issuecomment-1352058799:221,error,error,221,https://qupath.github.io,https://github.com/qupath/qupath/issues/1184#issuecomment-1352058799,1,['error'],['error']
Availability,"Well, clearly I didn't actually read the error message, sorry... looks like it's OpenCV and not OpenSlide that seems to be triggering the trouble.; Could you replace `openslide` with `opencv` in those last instructions...?. Or if you are feeling particularly bold you could also try switching to the `java9` branch on my fork, where I am trying out a different version of OpenCV - which might possibly avoid the problem entirely.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/150#issuecomment-368861735:41,error,error,41,https://qupath.github.io,https://github.com/qupath/qupath/issues/150#issuecomment-368861735,1,['error'],['error']
Availability,"Well, that definitely did something - I managed to crash QuPath. One thing - I am trying to run a 64 bit installation, perhaps that is causing some kind of conflict? I checked just to be sure and my python is 64 bit and the error message below discusses a 64-bit Open-JDK server, so this may not be the issue. I am going to paste the (very long) error message. I can trim this down and get rid of the OpenCV and OpenSlide parts if it's too long. . ```; [bl@QuPath]$ ./QuPath&; [1] 27357; [bl@QuPath]$ 02:39:33.387 [main] [INFO ] qupath.QuPath - Launching QuPath with args: ; 02:39:34.264 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Tile cache size: 624.00 MB; 02:39:37.713 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/bl/ip/QuPath/extensions; 02:39:37.715 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/bl/ip/QuPath/extensions/jep.jar; OpenJDK 64-Bit Server VM warning: You have loaded library /home/bl/ip/QuPath/app/libopencv_java310.so which might have disabled stack guard. The VM will try to fix the stack guard now.; It's highly recommended that you fix the library with 'execstack -c <libfile>', or link it with '-z noexecstack'.; 02:39:37.931 [JavaFX Application Thread] [ERROR] qupath.opencv.OpenCVExtension - Unable to load OpenCV libraries!; java.lang.UnsatisfiedLinkError: /home/bl/ip/QuPath/app/libopencv_java310.so: libavcodec-ffmpeg.so.56: cannot open shared object file: No such file or directory; 	at java.lang.ClassLoader$NativeLibrary.load(Native Method); 	at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941); 	at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857); 	at java.lang.Runtime.loadLibrary0(Runtime.java:870); 	at java.lang.System.loadLibrary(System.java:1122); 	at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:60); 	at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:73); 	at qupath.opencv.OpenCVExt",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262870405:224,error,error,224,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262870405,3,"['down', 'error']","['down', 'error']"
Availability,"What is really interesting with the interaction with Cellprofiler is that we could use already developed and validated pipelines without starting from scratch. We have delopped a few extra CP python modules to handle specific analytical problems. The new version of CP is entirely python based. They do not support ImageJ anymore (no need to deal with javabridge which was a headache for us for while) and very attractive to deploy on a cluster environment. But what you suggest is a good idea, i.e. add it as a new feature request and see how it goes from there. But to my opinion the really interesting aspect with CP and the underlying python+addition libraries (so far) is the computational one, i.e. memory consumption and parallelisation. It would be very efficient to handle a very granular analysis (down to cell/organelle level) in python. We are running with up to 1*10^6 #objects per slide and you quickly go up to 12GB of RAM consumption for a single process in QuPath. The tiling of the slide before analysis is something I'm exploring with QuPath. The streamlining of QuPath and python is an excellent idea. It would allow interaction with CellProfiler modules and other python packages. . Great work. It's being very helpful to us. The interface is great and the other technical problems you can always find a solutions in one way or another even if it is not optimal.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/122#issuecomment-350242806:808,down,down,808,https://qupath.github.io,https://github.com/qupath/qupath/issues/122#issuecomment-350242806,1,['down'],['down']
Availability,"When I build QuPath with `./gradlew jpackage` I'm only getting the *non-core* QuPath jars (`qupath-bioimageio-spec` and `qupath-fxtras`). I also don't see any javadocs if I call `./gradlew run`; it would be nice if they could be available, but it isn't crucial since the normal use will be via `jpackage` builds. Lastly, when I open the Javadoc viewer, I see this:; <img width=""659"" alt=""javadoc-screen"" src=""https://github.com/qupath/qupath/assets/4690904/062bcb1e-5604-41c5-b8a3-3901549cf8f2"">; It resolves if I click on the link: the expected page loads at that point. I'm not sure if these can/should be addressed within the current PR - happy to merge this one now if you like, so that we can switch to the new Javadoc viewer and resolve anything that remains at that point.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1513#issuecomment-2095553840:229,avail,available,229,https://qupath.github.io,https://github.com/qupath/qupath/pull/1513#issuecomment-2095553840,1,['avail'],['available']
Availability,"When I clicked the ""Watch"" link under TMA CD3 analysis page, it says ""Video unavailable. This video is private"". When will the videos for TMA analysis be available? Thanks.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/955:154,avail,available,154,https://qupath.github.io,https://github.com/qupath/qupath/issues/955,1,['avail'],['available']
Availability,"When I run in QuPath 0.1.2,error appeared:. print(getQuPath().getBuildString()). ERROR: Error at line 15: No signature of method: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getQuPath() is applicable for argument types: () values: []; Possible solutions: getAt(java.lang.String), getClass(). ERROR: Script error; at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.callGlobal(GroovyScriptEngineImpl.java:415); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.access$000(GroovyScriptEngineImpl.java:97); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl$2.invokeMethod(GroovyScriptEngineImpl.java:329); at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:69); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:158); at Script7.run(Script7.groovy:15); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:7",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/282#issuecomment-473503394:27,error,error,27,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473503394,5,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,When I run the following script:; ```groovy; try {; System.loadLibrary('jpen-2-3-64'); } catch (Throwable t) {; print t; }; ```; I get an error that it cannot find dependent libraries. However I see the same error in all versions of QuPath... possibly because I don't have a tablet. What do you see if you run this script in both working and non-working versions of QuPath?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-479816228:138,error,error,138,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479816228,2,['error'],['error']
Availability,"When i try to open a .tif file exported from a .mds file by a software, the error ""Java Heap Space"" occurs. Here is the log.; `; WARN: Unable to open C:\Users\QQ\Desktop\1.mds.tif with OpenSlide: C:\Users\QQ\Desktop\1.mds.tif: Not a file that OpenSlide can recognize; WARN: QuPath Bio-Formats extension is in beta! Be watchful for bugs...; INFO: Generating memoization file C:\Users\QQ\Desktop\.1.mds.tif.bfmemo (0.24 MB); WARN: Cannot open C:\Users\QQ\Desktop\1.mds.tif with qupath.lib.images.servers.BioFormatsServerBuilder@6bb485b6 - image size too large (2453.678853034973 MB); ERROR: QuPath exception; at ij.io.ImageReader.readCompressedChunkyRGB(ImageReader.java:443); at ij.io.ImageReader.readChunkyRGB(ImageReader.java:368); at ij.io.ImageReader.readPixels(ImageReader.java:808); at ij.io.FileOpener.readPixels(FileOpener.java:511); at ij.io.FileOpener.open(FileOpener.java:104); at ij.io.FileOpener.openImage(FileOpener.java:51); at ij.plugin.FileInfoVirtualStack.open(FileInfoVirtualStack.java:105); at ij.plugin.FileInfoVirtualStack.openVirtual(FileInfoVirtualStack.java:50); at ij.IJ.openVirtual(IJ.java:1672); at qupath.imagej.images.servers.ImageJServer.<init>(ImageJServer.java:90); at qupath.imagej.images.servers.ImageJServerBuilder.buildServer(ImageJServerBuilder.java:49); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2152); at qupath.lib.gui.commands.OpenCommand.run(OpenCommand.java:51); at qupath.lib.gui.QuPathGUI.lambda$createCommandAction$46(QuPathGUI.java:3122); at qupath.lib.gui.QuPathGUI$$Lambda$89/1768947243.accept(Unknown Source); at org.controlsfx.control.action.Action.handle(Action.java:419); at org.controlsfx.control.action.Action.handle(Action.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispa",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/195:76,error,error,76,https://qupath.github.io,https://github.com/qupath/qupath/issues/195,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,When is the error generated?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/301#issuecomment-514482912:12,error,error,12,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482912,1,['error'],['error']
Availability,"When reading an **empty** region (I'm not sure of the term, see the first screenshot of #1443) from a [SparseImageServer](https://github.com/qupath/qupath/blob/main/qupath-core/src/main/java/qupath/lib/images/servers/SparseImageServer.java):; * the [SparseImageServer.readTile()](https://github.com/qupath/qupath/blob/13bdeed047b4d05f35f47308b36b48c0f2bb3a24/qupath-core/src/main/java/qupath/lib/images/servers/SparseImageServer.java#L221) function returns an empty `BufferedImage`.; * but the [AbstractTileableImageServer.readRegion()](https://github.com/qupath/qupath/blob/13bdeed047b4d05f35f47308b36b48c0f2bb3a24/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L266) (which is extended by SparseImageServer) function returns `null`. This means that calling `SparseImageServer.readRegion()` on empty regions will return `null`, which can triggers errors (see #1443). This PR makes `AbstractTileableImageServer.readRegion()` return an empty tile (instead of `null`) when `AbstractTileableImageServer.readTile()` returns an empty tile. This should fix the first issue of #1443.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1465:886,error,errors,886,https://qupath.github.io,https://github.com/qupath/qupath/pull/1465,1,['error'],['errors']
Availability,"When running a script from the command line, extensions aren't loaded until much later, so we throw an error if you try to open an image with openslide. See https://forum.image.sc/t/running-qupath-through-command-line-unable-to-access-image-data/90746 for an example",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1447:103,error,error,103,https://qupath.github.io,https://github.com/qupath/qupath/pull/1447,1,['error'],['error']
Availability,"When splitting annotations by lines, my expectation is that the thickness will usually be 0. Supporting different units risks increasing the code complexity considerably, because the command must also be scriptable and then somehow the units need to incorporated into any script. Additionally, QuPath is moving towards greater generality. It is increasingly used for images where µm is an inappropriate unit, so I'm reluctant to add additional code that assumes µm as the only alternative to pixels. And a properly generic system will take a lot more effort to develop (not helped by the fact that Java has no built-in support for converting units... it's a recurring theme, e.g. [here](https://jcp.org/en/jsr/detail?id=385), but as far as I'm aware there are a multiple implementations and it's not clear which, if any, we should use). This also affects the sparse image server: at the point the dialog is shown, we don't know if the pixel size is available in µm for the regions that will be required to generate the server. Furthermore, the dialog itself is [auto-generated from a `ParameterList`](https://github.com/qupath/qupath/blob/main/qupath-extension-processing/src/main/java/qupath/process/gui/commands/CreateTrainingImageCommand.java#L90), which limits the ability to toggle between units. Added to that, I'm not terribly happy with the generation of 'dynamic' training images generally; the code is really complex (since the images can be quite heterogeneous), and performance can be poor whenever many images need to be accessed to create the final result. Therefore I wonder if creating a new command that defaults to writing the image as a new file would be preferable anyway. I'll leave this open for a while in case there are further comments, but my feeling is that the development-and-maintainence-time-to-benefit ratio isn't favorable enough to work on this in the core QuPath software; there are too many higher priorities, and if I'd rather focus efforts on simplicity, maintain",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1407#issuecomment-1783782932:949,avail,available,949,https://qupath.github.io,https://github.com/qupath/qupath/issues/1407#issuecomment-1783782932,1,['avail'],['available']
Availability,"When trying to run this I get; ```; qupath.fx.dialogs.Dialogs - QuPath exception: Exception in Application start method; java.lang.RuntimeException: Exception in Application start method; 	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:893); 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:195); 	at java.base/java.lang.Thread.run(Thread.java:833); Caused by: java.lang.NullPointerException: Cannot invoke ""qupath.lib.gui.viewer.QuPathViewer.downsampleFactor()"" because ""this.viewer"" is null; ```. But even if this is fixed, would it have any visible impact? The label text should already be updated. I agree that downsample factor should be exposed as a property, but I think it will require a cautious approach; if it's not a `ReadOnlyDoubleProperty` then the user should be able to assume that they can also *set* the downsample via the property, but I expect that would require a bigger refactoring of `QuPathViewer`. It's old-fashioned and suboptimal, but for now adding a [`QuPathViewerListener`](https://github.com/qupath/qupath/blob/007b18108b9f43954279403cb1f796d7ada4b521/qupath-gui-fx/src/main/java/qupath/lib/gui/viewer/QuPathViewerListener.java) is the expected way to identify any kind of viewer change. Definitely a move towards a more property-based approach would be welcome, but then so would a viewer that uses JavaFX more natively (rather than lots of legacy Graphics2D stuff)... so I think the question is whether to invest time in refactoring the current viewer, or take on the task of writing an entirely new viewer?. I definitely think a new viewer would be nice at some point - would be good to discuss what to do along the way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1279#issuecomment-1638638283:516,down,downsampleFactor,516,https://qupath.github.io,https://github.com/qupath/qupath/pull/1279#issuecomment-1638638283,3,['down'],"['downsample', 'downsampleFactor']"
Availability,"When typing in the script editor, the editor crashes when entering the double quote character "" if there are more than ~100 lines of text after the error. I can replicate this error by typing the following into script editor at the beginning of a script with more than 100 lines of code:. String test = "". Using Windows 10 and QuPath version 0.2.0-m2. The error window pops up with ""Java.lang.StackOverflowError"" and the log that appears when the editor crashes is: ; INFO: Bio-Formats version 6.0.1; INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: QuPath exception; at java.base/java.util.regex.Pattern$GroupTail.match(Pattern.java:4850); at java.base/java.util.regex.Pattern$BranchConn.match(Pattern.java:4700); at java.base/java.util.regex.Pattern$CharProperty.match(Pattern.java:3927); at java.base/java.util.regex.Pattern$Branch.match(Pattern.java:4736); at java.base/java.util.regex.Pattern$GroupHead.match(Pattern.java:4791); at java.base/java.util.regex.Pattern$Loop.match(Pattern.java:4928). Those 5 lines are then repeated about 100 times. ERROR: QuPath exception; at org.fxmisc.richtext.ParagraphText.checkWithinParagraph(ParagraphText.java:259); at org.fxmisc.richtext.ParagraphText.getCaretBounds(ParagraphText.java:198); at org.fxmisc.richtext.ParagraphBox.getCaretBounds(ParagraphBox.java:193); at org.fxmisc.richtext.GenericStyledArea.showCaretAtTop(GenericStyledArea.java:1289); at org.fxmisc.richtext.GenericStyledArea.nextPage(GenericStyledArea.java:1119); at org.fxmisc.richtext.GenericStyledAreaBehavior.lambda$static$10(GenericStyledAreaBehavior.java:86); at org.fxmisc.wellbehaved.event.template.InputMapTemplate.lambda$consume$0(InputMapTemplate.java:221); at org.fxmisc.wellbehaved.event.template.PatternActionTemplate.lambda$null$1(InputMapTemplate.java:425); at java.base/java.util.Optional.map(Optional.java:265); at org.fxmisc.wellbehaved.event.template.PatternActionTemplate.l",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/314:148,error,error,148,https://qupath.github.io,https://github.com/qupath/qupath/issues/314,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"When you run the *Estimate stain vectors*, it is good to have the smallest region selected that contains 'a bit of everything' (red staining, nuclei, background - although probably not the yellow pigment here). If the region selected is large, then QuPath will need to scale it down and then may give a less good estimate. You can also set individual stains manually by drawing very small rectangles around an area containing the stain, and then double-clicking the name of the stain under the *Image* tab. Ideally, a really good estimate would allow you to set a higher intensity threshold and still detect what you want - but not what you don't. However it is quite possible that no settings really achieve this. Since I understand you are looking at counts - and not intensity values - you *could* set the image type to be *Brightfield (other)* and then this activates the 'third' stain color. You could then set that based upon a small rectangle drawn in a yellow area. QuPath will then try to separate this as an extra stain. This will certainly negatively impact intensity measurements, and I'm not sure if it's a good idea. Nevertheless, the meaningfulness of intensity measurements in this kind of image is probably pretty limited anyway, so it is perhaps worth a try to see if it results in much better detection of what you can see by eye really should be detected. In the future, I'm wondering if it would be better to create a machine learning approach in QuPath for tasks like this, i.e. something more 'learn-by-example' (like with training the tumor/stroma cell distinction), rather than relying on color deconvolution. I think the current approach may be too simple, because there are always little anomalies or artefacts that can play havoc with trying to set a threshold for detection. What do you think? Are there any other changes/additions that would help here?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/146#issuecomment-368339801:278,down,down,278,https://qupath.github.io,https://github.com/qupath/qupath/issues/146#issuecomment-368339801,1,['down'],['down']
Availability,"When you save the classifier, QuPath really just saves what it needs to apply the classification - but it doesn't store all the information about where exactly the training information came from. That's why you aren't able to load the classifier again and update it... not enough information has been saved in the ```.qpclassifier``` file to make that possible. The ```.qpclassifier``` file should therefore be considered 'locked-down', since you can't really change that classifier again directly. Fortunately, so long as you've saved the data for each image as you went along (including your annotations), you can work around this. To do so, you start by creating a new detection classifier and starting to train it by adding annotations and setting their classifications on any image. Then if you open each of the images you previously annotated for training, QuPath will look for any annotated regions and (optionally) add them to the training as well. Using this approach, you end up with a whole new classifier - but it can be based on the old training, plus whatever you want to add. This is ok if you only used one or two images for training in the past, but it could be a bit annoying if you annotated lots of images in a project. In this case, there is a shortcut that you can use. Click on *Advanced options* in the *Create detection classifier* window and select the ```More...``` button on the right. If you choose *Rebuild training from project* QuPath will then loop through *all* the images in the project and use any annotations it finds to train the new classifier. For your other question, the classifier is applied across the entire slide that is currently open - so that means that the classification will be updated for all TMA cores that are on the current slide (but *not* TMA cores that are on a different slide!). When you train the classifier and open a new image, you have the option to retain your training (i.e. continue to build a classifier, using all the information f",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/57#issuecomment-288491139:430,down,down,430,https://qupath.github.io,https://github.com/qupath/qupath/issues/57#issuecomment-288491139,1,['down'],['down']
Availability,"While viewers are unsynced, this should get you started. Maybe Pete will have a way to sync based on the current center of one viewer, but this will temporarily lock them together. Use your own X Y coordinates for pixel location and your desired downsample. Just click into each one of the viewers in turn and run:. ```; def viewer = getQuPath().getViewer(); viewer.setCenterPixelLocation(10000, 10000);; viewer.setDownsampleFactor(2); ```; Then check the sync box.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/138#issuecomment-357477993:246,down,downsample,246,https://qupath.github.io,https://github.com/qupath/qupath/issues/138#issuecomment-357477993,1,['down'],['downsample']
Availability,Will try get to the legacy test file next week if I have some downtime. Some test names not hugely descriptive,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1570:62,downtime,downtime,62,https://qupath.github.io,https://github.com/qupath/qupath/pull/1570,1,['downtime'],['downtime']
Availability,"With QuPath-0.2.3, I ran a broken script like this:; ```; QuPath-0.2.3 script -i /path/to/image.tif brokenscript; ```; where `brokenscript` gave a Java exception. Unfortunately, QuPath then exited with status 0 (EXIT_SUCCESS), meaning that my calling script cannot easily test whether the script worked or not. It would be great if QuPath exited with an error status if the script exits with an error. Best wishes, Julian",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/654:354,error,error,354,https://qupath.github.io,https://github.com/qupath/qupath/issues/654,2,['error'],['error']
Availability,"With the *Point* tool selected, click on an existing point while holding down the ```Alt``` key, as described under [Tips for more effective counting](https://github.com/qupath/qupath/wiki/Counting-cells#tips-for-more-effective-counting).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/75#issuecomment-300553027:73,down,down,73,https://qupath.github.io,https://github.com/qupath/qupath/issues/75#issuecomment-300553027,1,['down'],['down']
Availability,"With the latest commit I also added an option in the CLI interface to run the script for the whole project without accessing the image files.; ```bash; ./gradlew run --args=""script -p '/home/castoldi/426FC/project.qpproj' -n -c 'import qupath.imagej.tools.IJTools; println IJTools.convertToImagePlus(getCurrentServer(), RegionRequest.createInstance(getCurrentServer(), 16))'""; ````; output:; ```; > Task :qupath-app:run; 14:08:12.506 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Setting default Locale to en_US; 14:08:12.507 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Setting Locale for FORMAT to en_US; 14:08:12.507 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Setting Locale for DISPLAY to en_US; 14:08:12.513 [main] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 31; 14:08:12.513 [main] [INFO ] qupath.ScriptCommand - Setting tile cache size to 8000.00 MB (25.0% max memory); 14:08:12.525 [main] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; Warning: Versions of org.bytedeco:javacpp:1.5.9 and org.bytedeco:opencv:4.6.0-1.5.8 do not match.; Warning: Versions of org.bytedeco:javacpp:1.5.9 and org.bytedeco:openblas:0.3.21-1.5.8 do not match.; 14:08:12.860 [main] [INFO ] qupath.ScriptCommand - Running script for SILVA_426.1 FC.czi - Scene #1 (0/48); 14:08:13.205 [main] [ERROR] qupath.ScriptCommand - The script tried to read pixels off an image while also requiring to run the script without accessing the image files.; [...]; 14:08:24.832 [main] [INFO ] qupath.ScriptCommand - Running script for SILVA_426.6 FC.czi - Scene #8 (48/48); 14:08:25.124 [main] [ERROR] qupath.ScriptCommand - The script tried to read pixels off an image while also requiring to run the script without accessing the image files. BUILD SUCCESSFUL in 18s; 34 actionable tasks: 10 executed, 24 up-to-date. ~/Projects/qupath light-script-runner* 19s; ❯ ; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1488#issuecomment-2022842385:1318,ERROR,ERROR,1318,https://qupath.github.io,https://github.com/qupath/qupath/pull/1488#issuecomment-2022842385,2,['ERROR'],['ERROR']
Availability,"Working like a charm now! ; Just for the sake of completeness. Openslide still reports some ""Errors"":; ERROR: Openslide: Property not available: openslide.level[0].tile-width; ERROR: Openslide: Property not available: openslide.level[0].tile-height. But they are the same across all versions of QuPath I've tested and don't hinder ; image analysis on MRXS slides. Thank again for fixing this issue so fast! ; Have a great day,; Mario",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/32#issuecomment-265674934:93,Error,Errors,93,https://qupath.github.io,https://github.com/qupath/qupath/issues/32#issuecomment-265674934,5,"['ERROR', 'Error', 'avail']","['ERROR', 'Errors', 'available']"
Availability,"Yeah, I was over-enthusiastic in converting `Collectors.toList()` to simply use `toList()` when updating to Java 17 - this problem has emerged a few times. See https://github.com/qupath/qupath/commit/1710f51e7846b9b85367da2a716a8b67c8805e92 for more info. The reason I didn't just undo it is that `Collectors.toList()` *also* seems to be wrong - at least inasmuch as it makes no guarantees of mutability: https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/stream/Collectors.html#toList(); So the fact it worked previously was kind of incidental or accidental. Therefore my thinking was that we could stick with `Stream.toList()` where that works, and then where mutability is required we use instead; ```java; stream.collect(Collectors.toCollection(ArrayList::new)); ```. I hadn't spotted this as a failure case, so we certainly should change it - but I think better to make the change that explicitly generates an `ArrayList` to avoid relying upon the happenstance of `Collectors.toList()` being mutable.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1282#issuecomment-1648260545:819,failure,failure,819,https://qupath.github.io,https://github.com/qupath/qupath/pull/1282#issuecomment-1648260545,1,['failure'],['failure']
Availability,"Yep, I was hoping that might narrow down the cause for Pete.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1065#issuecomment-1261176857:36,down,down,36,https://qupath.github.io,https://github.com/qupath/qupath/issues/1065#issuecomment-1261176857,1,['down'],['down']
Availability,"Yes - if QuPath was able to read the label from the file, it can display it. To find it:. * Select the *Image* tab on the left.; * Below the image properties, click on *Associated images* (or, if there aren't any associated images, you could try *Image list*).; * All other images from the file should be listed there, including the label if it is available. You can double-click on any image to view it. ![qupath_label](https://cloud.githubusercontent.com/assets/4690904/21422884/fa411414-c831-11e6-93b5-f05b1a81d99c.jpg)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/36#issuecomment-268772402:348,avail,available,348,https://qupath.github.io,https://github.com/qupath/qupath/issues/36#issuecomment-268772402,1,['avail'],['available']
Availability,Yes I originally thought that could be the reason then I moved all images to the hard drive and got similar behaviours... I realise this is not very helpful as I cannot reliably reproduce it myself 100% of the time.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/348#issuecomment-518040729:169,reliab,reliably,169,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518040729,1,['reliab'],['reliably']
Availability,"Yes and no... not in any publicly available way, and it remains on my todo list before the next release. This is taking longer than I'd hope as I find more and more to do, but some talks and workshops in March give me a pretty hard deadline.... However, amidst all the changes I'm making for the next release I've introduced an option to 'retain the display settings' when opening a new image. This means that if you have an image open with certain brightness/contrast settings (and color channels turned on/off), then if you open another image in the project it will (optionally) keep the settings constant:; https://github.com/petebankhead/qupath/commit/5750e42574cf34f9c868c9d2b133da3daaecf5e1. My hope is that it reduces the need to apply settings across all images in a project through a script, because the min/max settings (optionally) don't automatically change per image. How does that sounds to you?. Alongside that, I've added the ability to turn on/off multiple channels at once (by selecting them and right-clicking), and given a bit more control on what the 'Auto' button does when adjusting brightness/contrast per channel. I think these changes make the Brightness/Contrast dialog considerably easier to use; at least, I find it less annoying now than it previously was. (I still do need to revisit saving settings though, because it needs to be possible to set channel names if these are wrong or missing. And if it's possible to save channel names, it may as well be possible to save display settings per channel as well...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-453637134:34,avail,available,34,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-453637134,1,['avail'],['available']
Availability,"Yes, I did run into some of the same problems with the external measurements since the ImageJ macro runner takes squares, not the actual annotation. The advantage here is QuPath's heriarchy system, where everything ""outside"" of the annotation will show up separately (not underneath in the tree), and can be selected and deleted. Probably easier to do this after you go to the annotations tab, CTRL-A (or whatever to select all) and then go to the Objects menu and ""Merge annotations."" Then you get only one annotation and all of the external detections in the Hierarchy tab. This makes it easy to once again select all, deselect your annotation, and delete all of the ""outside"" detection areas. Downside, merging all of the tiles does NOT actually do what you might hope, and mesh them all into one contiguous annotation. It does add them all together, however, which lets you use the show annotation measurements to see the sum totals of all of your annotation tiles. You will see better after you do it once.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/56#issuecomment-286849866:696,Down,Downside,696,https://qupath.github.io,https://github.com/qupath/qupath/issues/56#issuecomment-286849866,1,['Down'],['Downside']
Availability,"Yes, I explicitly coded the startup message to respond to a double-click because it was so annoying to need to click more precisely. In any case, the link I posted suggests it should be fixed in JavaFX 13, which QuPath will switch to whenever it's available in September. I wouldn't _really_ fancy trying to track down all modal dialogs in QuPath to add shortcuts to close them if a fix is imminent anyway. In the meantime, I'd suggest trying v0.1.2. This might have other issues, but at least it uses JavaFX with JDK 8 and therefore may not suffer this specific problem.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/336#issuecomment-507274428:248,avail,available,248,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-507274428,2,"['avail', 'down']","['available', 'down']"
Availability,"Yes, I have been seeing the same thing with about the same frequency in .m2, but haven't found a way to make it happen consistently. It seems to happen more frequently with more objects but other than that... If this is the same error I am thinking about, the whole Viewer window becomes non-interactable (exceptions pop up constantly if you try to click in the window) after it happens, and only restarting QuPath resolves it. ** Nix that, this is a different error, though I did just run into the same thing.; `qupath.lib.plugins.objects.ShapeFeaturesPlugin {""area"": true, ""perimeter"": true, ""circularity"": true, ""useMicrons"": true}; INFO: Possible regularization value: 7.890585871004013; INFO: 490 tiles created (processing time: 3.07 seconds); INFO: Processing complete in 3.11 seconds; INFO: Completed!; INFO: ; qupath.imagej.superpixels.SLICSuperpixelsPlugin {""sigmaMicrons"": 1.0, ""spacingMicrons"": 5.0, ""maxIterations"": 20, ""regularization"": 0.9, ""adaptRegularization"": true}; INFO: Processing complete in 4.87 seconds; INFO: Completed!; ERROR: QuPath exception; at java.base/java.util.LinkedHashMap$LinkedHashIterator.nextNode(LinkedHashMap.java:719); at java.base/java.util.LinkedHashMap$LinkedKeyIterator.next(LinkedHashMap.java:741); at java.base/java.util.Collections$UnmodifiableCollection$1.next(Collections.java:1045); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:161); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:219); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1670); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/307#issuecomment-484610786:229,error,error,229,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484610786,2,['error'],['error']
Availability,"Yes, `ImageIO` can't write the images you need. You can try this, which will use ImageJ instead:; ```groovy; import ij.IJ; import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(server); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed; if (Thread.currentThread().isInterrupted()); break; // Request ImagePlus; def imp = server.readImagePlusRegion(RegionRequest.createInstance(path, downsample, core.getROI())).getImage(); IJ.save(imp, new File(dirOutput, core.getName() + '.tif').getAbsolutePath()); }; print('Done!'); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/202#issuecomment-411749897:275,down,downsample,275,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-411749897,2,['down'],['downsample']
Availability,"Yes, at the time the build scripts were written it seemed to be impossible to have a version number starting with 0.x on macOS - at least when building using `jpackage`. Attempting to do this would result in a ""first number in a CFBundleVersion cannot be zero or negative"" exception, as described at https://forum.image.sc/t/error-building-qupath-with-tensorflow-first-number-in-a-cfbundleversion-cannot-be-zero-or-negative/48713. The build script explicitly sets the wrong version number in an attempt to get builds working at all, see https://github.com/qupath/qupath/blob/v0.4.3/qupath-app/build.gradle#L40. I'll check if the situation has changed with more recent `jpackage` releases. If not, I'm afraid we're probably stuck with it until there's eventually a QuPath 1.x release, unless someone can come up with a solution that doesn't overly complicate the build/release process.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1250#issuecomment-1455033136:325,error,error-building-qupath-with-tensorflow-first-number-in-a-cfbundleversion-cannot-be-zero-or-negative,325,https://qupath.github.io,https://github.com/qupath/qupath/issues/1250#issuecomment-1455033136,1,['error'],['error-building-qupath-with-tensorflow-first-number-in-a-cfbundleversion-cannot-be-zero-or-negative']
Availability,"Yes, in a project, start from LuCa-7color_[17572,60173]_3x3component_data.tif, define two annotations with the Region class like this:; ![Screenshot from 2024-02-29 15-14-35](https://github.com/qupath/qupath/assets/60394504/b5c78607-282b-403f-9296-ace2af0a91ad). Then Classify, Training Images, Create Training images, default parameters, and it creates this image:; ![image](https://github.com/qupath/qupath/assets/60394504/1741642f-d89b-4790-bc4f-0fe5130a80c9). Then this script throws the error:. ```groovy; setImageType('FLUORESCENCE');; selectAnnotations();; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', '{""detectionImage"":""DAPI"",""requestedPixelSizeMicrons"":0.1,""backgroundRadiusMicrons"":4.0,""backgroundByReconstruction"":true,""medianRadiusMicrons"":1.0,""sigmaMicrons"":2.5,""minAreaMicrons"":11.0,""maxAreaMicrons"":400.0,""threshold"":1000.0,""watershedPostProcess"":true,""cellExpansionMicrons"":5.0,""includeNuclei"":true,""smoothBoundaries"":true,""makeMeasurements"":true}'); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1465#issuecomment-1971362682:492,error,error,492,https://qupath.github.io,https://github.com/qupath/qupath/pull/1465#issuecomment-1971362682,1,['error'],['error']
Availability,"Yes, it does cause a problem for me, but I have a feeling your response is going to be ""stop abusing the alignment function""... I'm trying to align images of the same slide taken with 2 different imaging modalities and with different resolutions. One is a normal slide scanner image with typical metadata; one is from an imaging mass spectrometer that gives an odd format that I convert to a png. I'm writing a script to do annotation-based alignment between the two images and I'm largely just copying and slightly modifying the source code from the ImageAlignmentPane. (I'm still working on the math to deal with the scaling issues, but I think/hope I can solve that). This converts the annotations to LabeledImages, and then downsamples the labeled images and aligns them. But, at the step where it's trying to downsample the images, it calls `getAveragedPixelSizeMicrons()` and gets a NaN. From there it just guesses at a reasonable downsample value, guesses incorrectly, and then fails to align because the ""result did not converge"". . This is likely to be an issue any time people are aligning images with missing or incorrect metadata, even through the interactive alignment pane. Also, I just tested this, and if you export a labeled .tiff using `writeImage` calling a `LabeledImageServer`, it writes the metadata of that tiff incorrectly (when doing this on a normal calibrated image, the correct pixel size is written). . In my case, I have a slightly scary work around. I can just code directly in my script that pixelSize=50 and hope that I remember to change that if I ever want to use this script in another project.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/591#issuecomment-673132914:728,down,downsamples,728,https://qupath.github.io,https://github.com/qupath/qupath/issues/591#issuecomment-673132914,3,['down'],"['downsample', 'downsamples']"
Availability,"Yes, it will try to select the object you already have created. If you want to draw within the annotation object (square) you have created, right click on it, drop down to Annotations, and select ""Lock."" Otherwise, it thinks you are trying to fill in the annotation you already have created. One way to see this is, with the annotation unlocked, hold down Alt and draw with the brush tool. You will see you are creating holes in your annotation now. One important thing to note when creating annotations within annotations, is that if your second brush tool annotation exits the first annotation, none of the detections within will be considered part of the brush tool annotation. This is probably most important when dealing with TMAs, because if the region you draw leaves the TMA circle, it is treated as being entirely outside!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/50#issuecomment-278506606:164,down,down,164,https://qupath.github.io,https://github.com/qupath/qupath/issues/50#issuecomment-278506606,2,['down'],['down']
Availability,"Yes, lots more things are package private now to try to trim things down and have fewer public things moving. The thinking with `ObjectMeasurements` is that it really should be tied to QuPath's built-in cell measurement command, since this is the only place it's currently used. But future cell detection commands deserve better measurements. Because the functionality is pretty limited, I'd suggest just copying the code into your own package if you want it. For similar functionality for other cell detection methods, I myself plan to use JTS - since this avoids ImageJ's need to rasterize things when making measurements. (Since this isn't a bug, I'd really rather use image.sc...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/466#issuecomment-622346953:68,down,down,68,https://qupath.github.io,https://github.com/qupath/qupath/issues/466#issuecomment-622346953,1,['down'],['down']
Availability,"Yes, that should certainly be possible. This could help give some ideas, both for exporting regions and then generating objects from binary images created elsewhere: https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html. I generally prefer to create contours with ImageJ (as in the script above), rather than OpenCV - the explanation why is at https://petebankhead.github.io/qupath/technical/2018/03/13/note-on-contours.html; But certainly the main processing can be done with OpenCV, with ImageJ only getting involved at the very final, contour-generating step.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/222#issuecomment-424737895:253,mask,masks,253,https://qupath.github.io,https://github.com/qupath/qupath/issues/222#issuecomment-424737895,1,['mask'],['masks']
Availability,"Yes, the i - method:. ```; import javax.imageio.ImageIO; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(""XXX/""); mkdirs(dirOutput). // Write the nuclei; def server = getCurrentImageData().getServer(); def path = server.getPath(); i = 0; for (Polygon in getDetectionObjects()){; roi = Polygon.getROI(); print(roi); area = roi.getArea(); print(area); CentroidX = roi.getCentroidX(); print(CentroidX); name = (""Polygon_"" + i); print(name); // Stop if Run -> Kill running script is pressed ; if (Thread.currentThread().isInterrupted()); break; // Write the image; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, Polygon.getROI())); ImageIO.write(img, 'PNG', new File(dirOutput, name + '.png')); i = i + 1; }; print('Done!'); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/118#issuecomment-346842870:149,down,downsample,149,https://qupath.github.io,https://github.com/qupath/qupath/issues/118#issuecomment-346842870,2,['down'],['downsample']
Availability,"Yes, the output from my previous post was already taken from the command line, no more info/error was available.; Unfortunately, today I can't seem to be able to reproduce this issue on MacOS, it just miraculously works as expected (??), and so do the pixel classifiers. Launching it again, resetting settings, getting a fresh install, etc.., nothing will get me the original density map exceptions. If someone else experienced the original issue, it would be great to have more details about it. Worth noticing though is that I sometimes get an Exception when moving the density radius slider left and right (in quite an unpredictable way, therefore not sure how to exactly reproduce this):; ```; [ERROR] qupath.lib.gui.dialogs.Dialogs - QuPath exception: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; java.lang.NullPointerException: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; 	at qupath.process.gui.commands.density.DensityMapDialog$ObservableColorModelBuilder.updateDisplayRanges(DensityMapDialog.java:589); 	at qupath.process.gui.commands.density.DensityMapDialog.lambda$new$3(DensityMapDialog.java:201); 	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:181); 	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); 	at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); 	at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); 	at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.updateDensityServer(DensityMapDialog.java:884); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.lambda$updateDensityServer$6(DensityMapDialog.java:863); 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); 	at java.base/ja",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/776#issuecomment-874035644:92,error,error,92,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874035644,3,"['ERROR', 'avail', 'error']","['ERROR', 'available', 'error']"
Availability,"Yes, there are a few ways to do that, depending on what exactly you want. https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d may help to give a starting point, since it shows how to do the export of a (very) downsampled version of the image as a single tile. But it still involves using a ```RegionRequest``` object to define the part of an image and downsampling factor to use, and then writing that out... so the idea is the same. Therefore you could use that to modify the original tiling script. After importing ```ImageWriterTools``` at the top, the main thing to do is to change the contents of the ```try``` block, e.g. something like the following:. ```groovy. ...; import qupath.lib.gui.ImageWriterTools. ...; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); File file = new File(dirOutput, name); ImageWriterTools.writeImageRegionWithOverlay(imageData, overlayOptions, request, file.getAbsolutePath()). // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; ...; ```; This should include all detections and annotations. If you need TMA cores to be displayed too, then some modification would be required... although then *File &rarr; Export TMA data* is usually a better choice in most cases. Note, here I set the output format to JPEG to get smaller file sizes. The original script wrote ImageJ TIFF images, which used lossless compression and had more image properties set (e.g. pixel sizes in microns) - at the cost of writing much larger files. If you want similar ImageJ TIFFs, but with the overlay drawn on top, then the changes are a bit more awkward and require going more into the details or how images are handled by Java and QuPath. The follo",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/44#issuecomment-273680833:227,down,downsampled,227,https://qupath.github.io,https://github.com/qupath/qupath/issues/44#issuecomment-273680833,2,['down'],"['downsampled', 'downsampling']"
Availability,"Yes, there may be an extra memory leak in there causing trouble... I've also seen some Bio-Formats readers be rather more 'heavyweight' than others, meaning that if the image reading is parallelized this can be much more memory-hungry (since a separate reader is required per thread). In one case, the size of a .bfmemo file for a Zeiss .czi image revealed each reader was taking 1GB... and multichannel fluorescence images also need potentially much more memory to cache tiles suitably. But whatever the cause, it shouldn't fail as badly as it does. How much memory is available to QuPath?. This may also be of some use: https://petebankhead.github.io/qupath/scripting/2018/03/06/script-memory-monitor.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-493950996:570,avail,available,570,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493950996,1,['avail'],['available']
Availability,"Yes, under the View → Zoom... → Zoom in/out is where I encountered the reverse behavior.; I am working on a Mac. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Monday, June 8, 2020 at 12:56 PM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). I understand the issue is with the specific commands under View → Zoom... → Zoom in/out (I've tested only on a Mac, but assume the unexpected behavior is common across platforms - it was also weird in m10, but not v0.1.2... I didn't check any others). —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-640781128&data=02%7C01%7Ckyee%40umc.edu%7C96af0114123c4ccd238f08d80bd54a7d%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272357990082394&sdata=2kWkyYCdApiRUWM942pRiwOnNoXy8SWGjV0e%2FyE0DuE%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNE5SPRUYX7RMNYZKOFTRVUQ5LANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7C96af0114123c4ccd238f08d80bd54a7d%7C78a0681ef0be47e280498616858818a5%7C0%7C0%7C637272357990082394&sdata=pU%2BYSYbllDKbPfdTG%2FD921yLOmUpYsg0rDDoywDA3bE%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/518#issuecomment-640783525:1546,error,error,1546,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640783525,1,['error'],['error']
Availability,"You are both correct. It’s a multi channel image, and some of the channels; are noisy. Secondly, in dev debug mode I can see that the initial threshold; fails. What should I do so that it just uses the red channel to find cores (I need; other colors downstream)?. On Mon, Aug 6, 2018 at 01:34 Pete <notifications@github.com> wrote:. > The Brightness/Contrast dialog shows there are 4 channels, but 3 are; > turned off; the TMA dearrayer won't be affected by which channels are; > turned on/off there though. For such images, it uses an average; > projection of all the channels; > <https://github.com/qupath/qupath/blob/v0.1.2/qupath-processing-ij/src/main/java/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.java#L237>; > .; >; > It will most likely have correctly auto-set the image type as; > 'Fluorescence', but it's always worth checking under the 'Image' tab (in; > case this was changed / the auto detection of image type was turned off).; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/196#issuecomment-410631215>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AAcFTCZOP0VOb--7eOugusLtmVZlM1HUks5uN_-xgaJpZM4VvdxT>; > .; >; -- ; Rishi Rawat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/196#issuecomment-410763976:250,down,downstream,250,https://qupath.github.io,https://github.com/qupath/qupath/issues/196#issuecomment-410763976,1,['down'],['downstream']
Availability,"You can also try this one, which aims to bring over the brightness/contrast settings and channel colors from the current image viewer:. ```groovy; import ij.CompositeImage; import ij.IJ; import ij.process.LUT; import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.lib.awt.color.ColorToolsAwt; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QPEx. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(server); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed; if (Thread.currentThread().isInterrupted()); break; // Request ImagePlus; def imp = server.readImagePlusRegion(RegionRequest.createInstance(path, downsample, core.getROI())).getImage(); if (!imp.isComposite()) {; def display = QPEx.getCurrentViewer().getImageDisplay(); def composite = new CompositeImage(imp, CompositeImage.COMPOSITE); for (int c = 0; c < server.nChannels(); c++) {; def channel = display.getAvailableChannels().get(c); def color = ColorToolsAwt.getCachedColor(channel.getColor()); composite.setChannelLut(; LUT.createLutFromColor(color), c+1); composite.setC(c+1); composite.setDisplayRange(channel.getMinDisplay(), channel.getMaxDisplay()); }; composite.setC(1); imp = composite; }; IJ.save(imp, new File(dirOutput, core.getName() + '.tiff').getAbsolutePath()); }; print('Done!'); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/202#issuecomment-415312268:439,down,downsample,439,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-415312268,2,['down'],['downsample']
Availability,"You can drag a .jar onto QuPath to add it to the extensions directory, and then it should be available on the classpath for any scripts. Although I'm curious about what syntax isn't supported?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/253#issuecomment-450835981:93,avail,available,93,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450835981,1,['avail'],['available']
Availability,"You can see the awkward way I do this on Windows via the link in my last post. Basically, as far as I can recall `System.loadLibrary` will check if a library is loaded, and if not then it will look on the Java library path for it. However if that library has a sub-dependency then the Java library path becomes irrelevant... and the search for sub-dependencies will be system dependent*. Therefore if you explicitly load the sub-dependencies first, they will already be available whenever `System.loadLibrary` is needed for the main library you wanted in the first place - and the less controllable, system-dependent search can be avoided. Somewhat inconveniently, in this case there are sub-dependencies and sub-dependencies of sub-dependencies... so figuring out the order in which they need to be loaded isn't entirely straightforward. It feels like there should be a far more elegant way to do this, but I haven't found it. *-This may mean searching in the directory from which QuPath was launched, so copying the library files there could be an easy workaround - I'm not entirely sure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/355#issuecomment-527729451:470,avail,available,470,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527729451,1,['avail'],['available']
Availability,You can try these. Just download and unzip. https://openslide.cs.cmu.edu/download/openslide-testdata/DICOM/,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1397#issuecomment-1772871935:24,down,download,24,https://qupath.github.io,https://github.com/qupath/qupath/issues/1397#issuecomment-1772871935,2,['down'],['download']
Availability,"You can try this to bring across the original colors from QuPath, and use them to set the lookup tables for each channel of the image in ImageJ. But I'm afraid it doesn't bring over any customizations you might have made with the Brightness/Contrast tool. ```groovy; import ij.CompositeImage; import ij.IJ; import ij.process.LUT; import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.lib.awt.color.ColorToolsAwt; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(server); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed; if (Thread.currentThread().isInterrupted()); break; // Request ImagePlus; def imp = server.readImagePlusRegion(RegionRequest.createInstance(path, downsample, core.getROI())).getImage(); if (!imp.isComposite()) {; def composite = new CompositeImage(imp, CompositeImage.COMPOSITE); for (int c = 0; c < server.nChannels(); c++); composite.setChannelLut(; LUT.createLutFromColor(; ColorToolsAwt.getCachedColor(server.getDefaultChannelColor(c))), c+1); imp = composite; }; IJ.save(imp, new File(dirOutput, core.getName() + '.tiff').getAbsolutePath()); }; print('Done!'); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/202#issuecomment-415310669:525,down,downsample,525,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-415310669,2,['down'],['downsample']
Availability,"You could try the first script here: https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html; (Or [here's](https://gist.githubusercontent.com/petebankhead/0b14beef131312042686c01056104b85/raw/8223a934f10761a885ef6cab20d71f786029bb84/QuPath-Export%20binary%20masks.groovy) a direct link to the script only.). It should export the annotated regions, along with a corresponding binary image... so if you're not interested in the binary image you can just delete it. It needs to be run inside a project, and the images are exported to a subdirectory inside the project called 'masks'.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/212#issuecomment-418987438:124,mask,masks,124,https://qupath.github.io,https://github.com/qupath/qupath/issues/212#issuecomment-418987438,2,['mask'],['masks']
Availability,"You could try this script as a starting point: https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d. Or the first script here: https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html. Both are written in Groovy, but I guess could be adapted for Jython. If these don't do what you need, the answer will depend on the details of what you want to export and for what purpose, e.g.; * a downsampled version of the whole image, a selected annotation, or all annotations in the image?; * an RGB or multichannel fluorescence image; if fluorescence, then just a snapshot (appearance) or the original pixel values?; * how should the image files for each region be named?; * do you need the overlay (objects) painted on top or not?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/200#issuecomment-411333092:231,mask,masks,231,https://qupath.github.io,https://github.com/qupath/qupath/issues/200#issuecomment-411333092,2,"['down', 'mask']","['downsampled', 'masks']"
Availability,"You might like to look at my fork https://github.com/juliangilbey/qupath/tree/main+tileexporterregion where I've addressed all of the above points when writing a new class `TileExporterRegion` (`TileExporterRegion.java`) that is based on TileExporter but allows a sub-region to be specified. You can therefore say:. ```groovy; new TileExporterRegion(imageData); .downsample(downsample) // Define export resolution; // .requestedPixelSize(requestedPixelSize) // Alternative for defining export resolution; .regionLimits(x, y, width, height) // Define region to be tiled; .imageExtension('.tif') // Define file extension for original pixels; // (often .tif, .jpg, '.png' or '.ome.tif'); .tileSize(512) // Define size of each tile, in pixels; .annotatedTilesOnly(false) // If true, only export tiles if there is a; // (classified) annotation present; .overlap(64) // Define overlap, in pixel units at the; // export resolution; .includePartialTiles(false) // don't include tiles that overlap the boundary; .writeTiles(pathOutput) // Write tiles to the specified directory; ```; It can be used as a drop-in replacement for the current `TileExporter.java` file (obviously replacing every `TileExporterRegion` with `TileExporter`), as the default behaviour is to tile the entire image. Note that the `regionLimits` method only specifies the x and y limits; it does not limit t or z. That could be performed with separate methods, say `tLimits` and `zLimits`, if desired.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/649#issuecomment-740703930:363,down,downsample,363,https://qupath.github.io,https://github.com/qupath/qupath/issues/649#issuecomment-740703930,2,['down'],['downsample']
Availability,"You need an instance of [`PathClass`](https://github.com/qupath/qupath/blob/v0.1.2/qupath-core/src/main/java/qupath/lib/objects/classes/PathClass.java). *But*, you should never call the construction for `PathClass` directly. There is some explanation [here](https://groups.google.com/d/msg/qupath-users/44HBd-5nbaQ/VHbENs9TBAAJ). Something like this should work:; ```groovy; def tumor = getPathClass('Tumor'); def stroma = getPathClass('Stroma'); getAnnotationObjects().eachWithIndex { annotation , i ->; if (i % 2 == 0); annotation.setPathClass(tumor); else; annotation.setPathClass(stroma); }; fireHierarchyUpdate(); ```; But you can change the text to be whatever you want, rather than `Tumor` and `Stroma` (although probably best to avoid colons`:` in any name, since these are typically used to separate *sub*-classifications). Regarding finding available methods, I've just added a [blog post](https://petebankhead.github.io/qupath/scripting/2018/03/16/script-print-methods-and-fields.html) with a bit more info. If you are happy to use IntelliJ, that's probably easiest.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/158#issuecomment-373683258:851,avail,available,851,https://qupath.github.io,https://github.com/qupath/qupath/issues/158#issuecomment-373683258,1,['avail'],['available']
Availability,You need to fill out the issue template for us to be able to diagnose the issue. You could also try to download a more recent version of qupath (eg v0.5.1) which may resolve your issue.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1691#issuecomment-2448565070:103,down,download,103,https://qupath.github.io,https://github.com/qupath/qupath/issues/1691#issuecomment-2448565070,1,['down'],['download']
Availability,"You probably already know this and maybe it's not even relevant any longer, but anyway: It appears the RichTextFX team has been replaced and is now actively maintained. Also, [this](https://www.mirkosertic.de/blog/2015/04/a-javafx-based-lua-editor/) might be a simple way to implement a robust script editor. I hope this is useful 😄",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/241#issuecomment-481208920:287,robust,robust,287,https://qupath.github.io,https://github.com/qupath/qupath/issues/241#issuecomment-481208920,1,['robust'],['robust']
Availability,"You should be able to double-click anywhere on the welcome message to close it (as it suggests... slightly non-obviously, as a reward for people who read it :). Apart from that, I agree that QuPath probably ought to have _File &rarr; Quit_ option as well but the main issue seems to be more JavaFX than QuPath - see https://github.com/javafxports/openjdk-jfx/issues/222. General availability of OpenJDK 13 is currently listed for 17 September. Current plans are to use this for v0.2.0 and hopefully the issue will be addressed then.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/336#issuecomment-507201659:379,avail,availability,379,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-507201659,1,['avail'],['availability']
Availability,You shouldn't have to do any of that just to run QuPath - download a release by following the links on the homepage at https://qupath.github.io/ or directly from https://github.com/qupath/qupath/releases,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/303#issuecomment-487908711:58,down,download,58,https://qupath.github.io,https://github.com/qupath/qupath/issues/303#issuecomment-487908711,1,['down'],['download']
Availability,"[openslide-winbuild](https://github.com/openslide/openslide-winbuild) now uses Meson to build a single unified DLL with all of its dependencies linked in. (Well, almost all: libssp and winpthreads are generated by the compiler toolchain and remain separate DLLs for now. One of them will go away eventually, and hopefully both.) There's still a `build.sh` wrapper script, but it's not strictly necessary anymore; it's mostly for building the source zip and binary zips for distribution. The substance of the build all happens in Meson, in the `meson` subdirectory. That code might be a good starting point for macOS and/or Linux builds. It'd surely need some adjustments, but I'd be willing to consider PRs to add support for those platforms. Feel free to take a look; feedback would be welcome!. @petebankhead Any maintenance help with OpenSlide Java would be welcome. I'd be happy to discuss further if you'd like.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1483719436:815,mainten,maintenance,815,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1483719436,1,['mainten'],['maintenance']
Availability,"\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; ...........Written tile 2 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; ...........Written tile 3 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; Y =1500.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 4 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 5 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; X =",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:8556,error,error,8556,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,"\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; ...........Written tile 3 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; Y =1500.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 4 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 5 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ; ...........Written tile 6 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ;",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:9072,error,error,9072,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,"] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /home/joelrv/Downloads/bftools/test_pyramid_fullsize.tif; 12:25:56.155 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - Estimating H-DAB staining; 12:25:56.537 [JavaFX Application Thread] [INFO ] qupath.lib.gui.viewer.QuPathViewer - Image data set to ImageData: Brightfield (H-DAB), test_pyramid_fullsize; ```; I not familiar enough with the code to understand what's happening, it's just so strange that it used to work",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472813709:1953,ERROR,ERROR,1953,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709,1,['ERROR'],['ERROR']
Availability,_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f7940f5a192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7940f5a5e3]; /lib64/libstdc++.so.6(+0x71555)[0x7f7940f5b555]; /lib64/libpthread.so.0(+0x620b)[0x7f822813720b]; /lib64/libstdc++.so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7f7866536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f82290579c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f822905c59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f822905bb8b]; /lib64/libdl.so.2(+0xfab)[0x7f8228e44fab]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/libdl.so.2(+0x15ad)[0x7f8228e455ad]; /lib64/libdl.so.2(dlopen+0x31)[0x7f8228e45041]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57924)[0x7f8227786924]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57a5a)[0x7f8227786a5a]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(JVM_LoadLibrary+0xbb)[0x7f822745bd6b]; /scratch3/downloads/QuPath/lib/runtime/lib/libjava.so(Java_jdk_internal_loader_NativeLibraries_load+0x17f)[0x7f822544627f]; [0x7f820e860bbb]; ======= Memory map: ========; 414cb000-414cd000 r-xs 00000000 00:04 20496117 /memfd:/.glXXXXXX (deleted); 41d6e000-41e1d000 rw-p 00000000 00:00 0 ; 80000000-80020000 rw-p 00000000 00:00 0 ; 80020000-80040000 rw-p 00000000 00:00 0 ; 80040000-800c0000 rw-p 00000000 00:00 0 ; 800c0000-80140000 rw-p 00000000 00:00 0 ; 80140000-801c0000 rw-p 00000000 00:00 0 ; 801c0000-80200000 rw-p 00000000 00:00 0 ; 80200000-80240000 rw-p 00000000 00:00 0 ; 80240000-80280000 rw-p 00000000 00:00 0 ; 80280000-80440000 rw-p 00000000 00:00 0 ; 80440000-80460000 rw-p 00000000 00:00 0 ; 80460000-80480000 ---p 00000,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:2998,down,downloads,2998,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,"`.ndpis` should work on Windows and Linux, and with an Intel build on Mac - but not the Apple Silicon build. But the extra files should have the extension `.ndpi` - if you downloaded them on a Mac, the OS might automatically have added `.tiff` to the name and this needs to be removed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1620#issuecomment-2328789141:172,down,downloaded,172,https://qupath.github.io,https://github.com/qupath/qupath/pull/1620#issuecomment-2328789141,1,['down'],['downloaded']
Availability,"`L:\biop\Image_Processing\User_Projects\Olivier\USERNAME_REDACTED\Sample images - metadata`. But in previous versions the memo files were in the same location as the original file. Is this new behavior intended?. And as it was the case in the other issue, this file fails to get deleted by BioFormats after considering it ""invalid"". This error message showed up in a script that I ran after reopening a project I created in QuPath 0.3.0-SNAPSHOT. ```; WARN: file deletion failed C:\Users\oburri\AppData\Local\Temp\qupath-memo-15327719930616011555\biop\Image_Processing\User_Projects\Olivier\USERNAME_REDACTED\Sample images - metadata\.MCF7_hPR_OVX_3rd_M6-10_Ki67.vsi.bfmemo; ERROR: temp file rename returned false: C:\Users\oburri\AppData\Local\Temp\qupath-memo-15327719930616011555\biop\Image_Processing\User_Projects\Olivier\valentina.scabia_UPBRI\Sample images - metadata\.MCF7_hPR_OVX_3rd_M6-10_Ki67.vsi.bfmemo5671337359207729134; ERROR: deleting invalid memo file: C:\Users\oburri\AppData\Local\Temp\qupath-memo-15327719930616011555\biop\Image_Processing\User_Projects\Olivier\valentina.scabia_UPBRI\Sample images - metadata\.MCF7_hPR_OVX_3rd_M6-10_Ki67.vsi.bfmemo; at loci.formats.in.JPEGReader$DefaultJPEGReaderConstructorAccess.newInstance(Unknown Source); at com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy$1.newInstance(Kryo.java:1275); at com.esotericsoftware.kryo.Kryo.newInstance(Kryo.java:1139); at com.esotericsoftware.kryo.serializers.FieldSerializer.create(FieldSerializer.java:562); at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:538); at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:731); at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:125); at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:543); at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:731); at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySer",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/717:1369,ERROR,ERROR,1369,https://qupath.github.io,https://github.com/qupath/qupath/issues/717,1,['ERROR'],['ERROR']
Availability,"```; [jalal@goku bin]$ chmod 777 QuPath; [jalal@goku bin]$ ./QuPath; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 4:51:53 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 16:51:53.531 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 16:51:53.823 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 16:51:53.824 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:14092): Gdk-WARNING **: 16:51:54.374: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 16:51:54.868 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007effa50f8c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f087c503329]; /lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7effa4e62192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7effa4e625e3]; /lib64/libstdc++.so.6(+0x71555)[0x7effa4e63555]; /lib64/libpthread.so.0(+0x620b)[0x7f087be4520b]; /lib64/libstdc++.so.6(+0x715a1)[0x7effa4e635a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7effa4e635e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7effa4e6043c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7efeb6536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f087cd659c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f087cd6a59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f087cd657d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f087cd69b8b]; /lib64/libdl.so.2(+0xfab)[0x7f087cb52fab]; /lib64/",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949:844,error,error,844,https://qupath.github.io,https://github.com/qupath/qupath/issues/949,2,"['Error', 'error']","['Error', 'error']"
Availability,"a lot of badly-classified data that you then need to remember to ignore later. However, it does then require being able to estimate in advance which cores should be classified together. 4. If you want to use a separate classifier for every core, you could try a more drastic approach of exporting every core as a separate image. To do this, first dearray your slide. Then, you can use [Extension &rarr; ImageJ &rarr; ImageJ macro runner](https://github.com/qupath/qupath/wiki/Working-with-ImageJ#running-macros) to export each image. You need a very simple macro, like the one below:; ```; saveAs(""tif"", ""/Users/peteb/Desktop/export/"" + getTitle()); ```; where you’ll need to change the path to be something more suitable for your computer. It takes advantage of the fact that the ‘title’ of the image sent to ImageJ is the same as the TMA core, so using this as the filename can help you identify the core afterwards. > This may give you individual core images that are a bit big... you can change ""tif” to “jpg” to decrease the file size, or you can set the ""Downsample factor” value to 2 to export a lower-resolution image. The advantage of using “tif” is that the micron information is preserved, while if you use “jpg” then this is lost. After doing this export you can then import all your core images into a new project. You’ll almost certainly want to use scripting for batch processing in this case, and there will be another couple of things to do (e.g. apply dearraying to detect a single core in each image, or use *Objects &rarr; Create full image annotation* to give you a region in which to detect cells). ---. Personally, I think Option 1 is the ‘cleanest’ solution, but may be very time-consuming. All the others would give some kind of data management headache - but maybe it is worth it. Of course, there may also be more creative solutions that I haven’t considered. I would be interested to know what you choose in the end. Good luck!. Pete. PS. Thanks for the positive feedback!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/57#issuecomment-288818401:3576,Down,Downsample,3576,https://qupath.github.io,https://github.com/qupath/qupath/issues/57#issuecomment-288818401,1,['Down'],['Downsample']
Availability,"a of parameters (particularly if `z` and `t` indices should be returned as well). However, often it just feels like unnecessary overhead, e.g. when writing simple scripts... or accessing from another language, like Python. It is pretty easy to retrofit support for; ```java; BufferedImage img = server.readBufferedImage(downsample, x, y, width, height, z, t);; BufferedImage img2 = server.readBufferedImage(downsample, x, y, width, height);; ```; by simply adding default methods to the interface. I don't think this should break anything. However this leads to another consideration... `readBufferedImage` isn't a great name, since the method really returns an instance of whatever the generic parameter `T` stands for in `ImageServer<T>`. It happens that this is pretty much always `BufferedImage` in QuPath, but the original idea was that an `ImageServer` could exists that returns something else that might be more convenient (e.g. something from ImgLib2, or an OpenCV `Mat`). So rather than doubling-down on `server.readBufferedImage` I would like to switch to `server.readRegion(RegionRequest)` instead. This feels to me more accurate and intuitive. The tricky bit is not breaking everything else... like parts of paquo or warpy, and all existing scripts that need pixels. The approach I've taken here is to mark `readBufferedImage` as deprecated (and planned for removal), while also providing a default implementation that calls `readRegion`. These means that new classes won't need to implement the deprecated method. Then - and here it gets awkward - I've tried to allow older `ImageServer` implementations to still work by *also* providing a default implementation of `readRegion`. It will throw an `UnsupportedOperationException` *unless* it is called from a subclass that overrides the `readBufferedImage` method... in which case it will fall back to using that. The first time that happens, a warning will be logged. You can see the code at https://github.com/petebankhead/qupath/blob/se",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072:1730,down,down,1730,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072,1,['down'],['down']
Availability,"a project entry containing an unclosed parenthesis (e.g. a left parenthesis `(` with no right parenthesis to follow) will throw an error, preventing the entry from being duplicated without renaming. Relatively minor issue, as a fix would be to simply rename the original entry before duplication. **To Reproduce**; Steps to reproduce the behavior:; 1. Create a project, loading an image named `OS-2.ndpi`; 2. Duplicate the project entry (via right click > Duplicate Image(s). No error will occur, duplicate image will be named `OS-2.ndpi (1)`; 3. Rename this duplicated image by removing the last parenthesis, to `OS-2.ndpi (1`; 4. Attempt to duplicate this image. Note the following error:; ![image](https://user-images.githubusercontent.com/52012166/161337956-5eabd4e7-0b3e-4a29-8b1b-914e3484cda7.png); See full log at the end. **Expected behavior**; Regex patterns should not be evaluated for when duplicating image names. I'd imagine there are a lot of other character combinations that can trigger regex-related errors during duplication, or perhaps other operations too. I wonder if there's any cool things that can be done with this, such as programmatically creating image names during image duplication... **Desktop (please complete the following information):**; - OS: Windows 10; - QuPath Version: 0.4.0-SNAPSHOT. **Additional context**; Full error log:; ```; ERROR: QuPath exception: Unclosed group near index 24; OS-2.ndpi (1 \(([\d]+)\); java.util.regex.PatternSyntaxException: Unclosed group near index 24; OS-2.ndpi (1 \(([\d]+)\); at java.base/java.util.regex.Pattern.error(Unknown Source); at java.base/java.util.regex.Pattern.accept(Unknown Source); at java.base/java.util.regex.Pattern.group0(Unknown Source); at java.base/java.util.regex.Pattern.sequence(Unknown Source); at java.base/java.util.regex.Pattern.expr(Unknown Source); at java.base/java.util.regex.Pattern.compile(Unknown Source); at java.base/java.util.regex.Pattern.<init>(Unknown Source); at java.base/java.util.reg",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/942:1063,error,errors,1063,https://qupath.github.io,https://github.com/qupath/qupath/issues/942,1,['error'],['errors']
Availability,"a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = serverOriginal.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309:2239,down,downsample,2239,https://qupath.github.io,https://github.com/qupath/qupath/issues/309,2,['down'],['downsample']
Availability,"a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = serverOriginal.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/85#issuecomment-315148862:2416,down,downsample,2416,https://qupath.github.io,https://github.com/qupath/qupath/issues/85#issuecomment-315148862,2,['down'],['downsample']
Availability,"a zoom-out whole slide with label in white light, and the server is Bioformats.; Then I try to open it in version 0.2.0. Under this version, I can see the fluorescence image now (alaso Bioformats). Then I run a script to split the image and export as tiles. ; When using QuPath 0.1.2: ; (1)if I run the script from menu, it works without problem.; (2) If I run feed in the script to QuPath via command line, the Bioformat extension cannot be loaded. When using QuPath 0.2.0:; (1) if I run the script from menu, error appeared:. ERROR: Error: startup failed:; Script1.groovy: 17: unable to resolve class qupath.imagej.images.servers.ImagePlusServer; @ line 17, column 1.; import qupath.imagej.images.servers.ImagePlusServer; ^. Script1.groovy: 18: unable to resolve class qupath.imagej.images.servers.ImagePlusServerBuilder; @ line 18, column 1.; import qupath.imagej.images.servers.ImagePlusServerBuilder; ^. 2 errors. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:596); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280:1168,Error,ErrorCollector,1168,https://qupath.github.io,https://github.com/qupath/qupath/issues/280,1,['Error'],['ErrorCollector']
Availability,a:151); at qupath.lib.gui.tools.PathObjectLabels$PathObjectListCell.updateItem(PathObjectLabels.java:138); at javafx.scene.control.ListCell.updateItem(ListCell.java:485); at javafx.scene.control.ListCell.lambda$new$2(ListCell.java:168); at javafx.collections.WeakListChangeListener.onChanged(WeakListChangeListener.java:88); at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329); at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239); at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211); at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:98); at qupath.lib.gui.panes.AnnotationPane.hierarchyChanged(AnnotationPane.java:436); at qupath.lib.gui.panes.AnnotationPane.lambda$hierarchyChanged$9(AnnotationPane.java:404); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:457); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:456); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184); at java.base/java.lang.Thread.run(Unknown Source); ```. **To Reproduce**; See https://forum.image.sc/t/error-from-roitools-subtract-in-qupath-v0-4-0/74837. **Expected behavior**; Updating the list cell shouldn't throw any exception. **Desktop (please complete the following information):**; - OS: All (presumably); - QuPath Version: 0.4.0. **Additional context**; I haven't replicated the problem yet.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1182:2532,error,error-from-roitools-subtract-in-qupath-,2532,https://qupath.github.io,https://github.com/qupath/qupath/issues/1182,1,['error'],['error-from-roitools-subtract-in-qupath-']
Availability,"able parameters; */; int tileWidthPixels =1500 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 70 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput =('D:/QUPATH 2 - AT8/Exported Images' ) // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!. int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = serverOriginal.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309:1654,error,error,1654,https://qupath.github.io,https://github.com/qupath/qupath/issues/309,1,['error'],['error']
Availability,"achFileMatch(ResourceGroovyMethods.java:1534); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1565); at org.codehaus.groovy.runtime.dgm$989.invoke(Unknown Source); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:244); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:135); at Script2.run(Script2.groovy:100); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:676); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1033); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834). ```. The error line was:; ```; // clear the folder; line 99: subdir.eachFileMatch(~/.*.*/) { file ->; line 100: file.delete(); line 101: }; ```. Here the error take place on the dir stuff, not related to server. But this runs OK in 0.1.2; I also found that the folder was not created at line 98:; `subdir.mkdir()`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472886695:4808,error,error,4808,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472886695,2,['error'],['error']
Availability,"adn't seen the problem where some lines require multiple corrections, but from your explanation I think I understand what has happened. The issue should be predictable and reproducible; here's the background:. * When a line is drawn, it is represented inside QuPath by the coordinates of its end points, ```(x1,y1)``` and ```(x2,y2)```; * When the line is saved, these coordinates are written (correctly) into the ```.qpdata``` file; * When the ```.qpdata``` file is loaded again later, the first thing QuPath does is read the coordinates and convert them into ```(x1, y1)``` and ```(x2-x1, y2-y1)```. This last step is a bug; there is no need to subtract the first coordinates from the second. It happens because, long ago (and before being released), QuPath stored its lines differently (with the first coordinate and then displacement).... and this bit of the code was not updated when it should have been, and lines were used rarely enough for it to go unnoticed. With that in mind, the error can be cumulative; if you open a ```.qpdata``` file and the lines display wrongly, and then you save it again, QuPath will now save the wrong coordinates... and, when reading them, make them even more wrong, i.e. ```(x2-x1-x1, y2-y1-y1)```. You'd have to run the script twice to fix such lines. Therefore it is important to have all your lines corrected before you save, and then run the script to fix them immediately after opening the image. This avoids having a combination of correct and incorrect lines on the image at the same time. The purpose of the script is to go through and fix the second coordinate for all your lines by adding the first coordinate. It does this for all lines, regardless of whether or not they are correct. If you want to change only some of the lines then @Svidro's idea is great - select the lines you want to change (e.g. in the list at the top of the *Annotations* tab on the left of the screen) and run this script instead:. ```groovy; getSelectedObjects().each {; roi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/71#issuecomment-299623260:994,error,error,994,https://qupath.github.io,https://github.com/qupath/qupath/issues/71#issuecomment-299623260,1,['error'],['error']
Availability,"age is:. ```; > ERROR: It looks like you have tried to import a class 'qupath.imagej.images.servers.ImagePlusServerBuilder' that doesn't exist!; > You should probably remove the broken import statement in your script (around line 17).; > Then you may want to check 'Run -> Include default imports' is selected, or alternatively add ; > import qupath.imagej.tools.IJTools; > at the start of the script. Full error message below.; > ; > ERROR: MultipleCompilationErrorsException at line 16: startup failed:; > Script1.groovy: 17: unable to resolve class qupath.imagej.images.servers.ImagePlusServerBuilder; > @ line 17, column 1.; > import qupath.imagej.images.servers.ImagePlusServerBuilder; > ^; > ; > Script1.groovy: 16: unable to resolve class qupath.imagej.images.servers.ImagePlusServer; > @ line 16, column 1.; > import qupath.imagej.images.servers.ImagePlusServer; > ^; > ; > 2 errors; > ; > ; > ERROR: Script error (MultipleCompilationErrorsException); > at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); > at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:975); > at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:637); > at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:586); > at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:401); > at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); > at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:341); > at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:338); > at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); > at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:336); > at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:320); > at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:262); > at org.codehaus.groovy.jsr223.GroovyScriptEngineIm",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/404:1504,Error,ErrorCollector,1504,https://qupath.github.io,https://github.com/qupath/qupath/issues/404,1,['Error'],['ErrorCollector']
Availability,"age. No black column, everything is normal.; 3. Click on File, Export images..., Original pixels, JPEG (or PNG) and downsample of 32.; 4. Check the right edge of the produced image. There is a black column of width 1. *Expected behavior*; No black column on any downsample. *Desktop:*; - OS: macOS and Linux, so probably not OS dependant.; - QuPath Version: 0.6.0-SNAPSHOT. *Additional context*; The problem occurs in the [AbstractTileableImageServer.readRegion()](https://github.com/qupath/qupath/blob/76415104d0653c674716d69a1ecb51e59dae0e83/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L266) function. When requesting an image with downsample 32:; * A black image of width 1432 (=`round(imageWidth/32)`) is created ([here](https://github.com/qupath/qupath/blob/76415104d0653c674716d69a1ecb51e59dae0e83/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L302C4-L302C17)).; * All tiles with downsample 16 (because it's the lowest resolution) are retrieved ([here](https://github.com/qupath/qupath/blob/76415104d0653c674716d69a1ecb51e59dae0e83/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L275C3-L275C13)).; * Images corresponding to the above tiles are drawn to the above black image ([here](https://github.com/qupath/qupath/blob/76415104d0653c674716d69a1ecb51e59dae0e83/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L328)). The problem is that the resulting image of downsample 32 is of width 1432, which corresponds to pixels 0 to **45824** (=`1432*32`) of the full resolution image on the x-axis, while the width of the image of downsample 16 is 2863, which corresponds to pixels 0 to **45808** (=`2863*16`) of the full resolution image. `45808 < 45824`, so the last pixel of each row of the resulting image of downsample 32 is not painted. The image of downsample 16 covers pixels 0 to 45808, because `imageWidth/16 = 2863.4375`, and its width",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1527:1296,down,downsample,1296,https://qupath.github.io,https://github.com/qupath/qupath/issues/1527,1,['down'],['downsample']
Availability,"ains targetStains, double[] scales = null) {; return new TransformedServerBuilder(imageData.getServer()); .stainNormalize(imageData.getColorDeconvolutionStains(), targetStains, scales); .build(); }. /**; * Get the default stains for an image type, or null if no default stains are defined; * @param imageType; * @return; */; ColorDeconvolutionStains getDefaultTargetStains(ImageData<?> imageData, boolean preferDefaultStains) {; if (preferDefaultStains) {; switch (imageData.getImageType()) {; case ImageData.ImageType.BRIGHTFIELD_H_E:; return ColorDeconvolutionStains.makeDefaultColorDeconvolutionStains(; ColorDeconvolutionStains.DefaultColorDeconvolutionStains.H_E); case ImageData.ImageType.BRIGHTFIELD_H_DAB:; return ColorDeconvolutionStains.makeDefaultColorDeconvolutionStains(; ColorDeconvolutionStains.DefaultColorDeconvolutionStains.H_DAB); default:; println ""WARN: No default stains defined for image type ${imageData.getImageType()}""; }; }; // The most we can do is 'whiten' the background; return imageData.getColorDeconvolutionStains().changeMaxValues(255, 255, 255); }; ```. ## Example; Here, I've applied the script to [CMU-1.ndpi (CC0, from OpenSlide test data)](https://openslide.cs.cmu.edu/download/openslide-testdata/Hamamatsu/CMU-1.ndpi). ### Original image; ![cmu-1-ndpi-orig](https://github.com/qupath/qupath/assets/4690904/84b18c6c-260e-47d7-acf2-9ee97d9c3c76). ### After running the script; ![cmu-1-ndpi-normalized-full](https://github.com/qupath/qupath/assets/4690904/ecd1d6a7-9b49-4a93-b635-2298d43abf09). ### With stain intensity adjustment. The script above effectively shifts the stain colors and sets the background to white. Updating the `scales` variable to; ```groovy; def scales = [1, 0.5, 0] as double[]; ```; effectively suppresses the residual value and weakens the eosin - demonstrating how intensity variations can also be compensated for. ![cmu-1-ndpi-normalized-less-eosin](https://github.com/qupath/qupath/assets/4690904/12d7060b-35bc-40ca-89a3-f837c5417dbf)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1554:4379,down,download,4379,https://qupath.github.io,https://github.com/qupath/qupath/pull/1554,1,['down'],['download']
Availability,"app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 10 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 11 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif ; ...........Written tile 12 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif ; Y =6000.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=6000, w=2000, h=338, z=0).tif ; ...........Written tile 13 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=6000, w=2000, h=338, z=0).ti",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:12730,error,error,12730,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,"arn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 15:23:37.065 [main] [ERROR] qupath.QuPath - Error running script! ; javax.script.ScriptException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:158) ; 	at qupath.QuPath.main(QuPath.java:161) ; Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311) ; 	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:151) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:121) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:133) ; 	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:325) ; 	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:224) ; 	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:190) ; 	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:226) ; 	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:196) ; 	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:965) ; 	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647) ; 	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623) ; 	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:600) ; 	at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390) ; 	at groovy.lang.GroovyClassLoa",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/286:3586,Error,ErrorCollector,3586,https://qupath.github.io,https://github.com/qupath/qupath/issues/286,1,['Error'],['ErrorCollector']
Availability,as(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:10684,ERROR,ERROR,10684,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['ERROR'],['ERROR']
Availability,"aseViewer, nor how exactly you've got it to display in QuPath, i.e. is it just the plane that OpenSlide can provide, or have you already got your tiles into QuPath some other way?. Nevertheless, two pieces of information that may be of use:; * The next release of Bio-Formats (already available as a milestone build) will have support for reading and writing image pyramids as OME-TIFF, which is also capable of handling z-stacks (and time series). Since Bio-Formats is compatible with QuPath, has exceptional metadata support, and can be used with MATLAB, it could be would trying to get your extracted tiles into OME-TIFF format: http://blog.openmicroscopy.org/file-formats/community/2018/11/29/ometiffpyramid/; * In the next release of QuPath (I very much hope later this month... at least in early form) I have revised the `ImageServer` interface considerably, which will impact how new file readers work. Specifically, it will reduce the effort involved in creating a reader to three main things:; * Parse metadata; * Declare what tiles are available; * Have the ability to read a tile. The hard work of merging, rescaling and caching tiles is abstracted away. This has been done partly to help make it possible to create `ImageServers` that wrap other `ImageServers`... for example if you have sparse tissue regions represented in multiple files that ought to be displayed as a single image, this combining can be performed automatically - allowing you to specify where the separate pieces ought to be position. In the case of overlaps there is no special blending performed (by default anyway), but it should at least be possible to specify the order to ensure one tile is always 'on top' of another. I'm not entirely sure if this helps, but in summary, building on the work you've done, it should be possible to get your z-stack into QuPath one way or another. I suspect it would be best to keep going with MATLAB and introduce Bio-Formats, but if you do need to get into the QuPath API direc",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/265#issuecomment-459976203:1448,avail,available,1448,https://qupath.github.io,https://github.com/qupath/qupath/issues/265#issuecomment-459976203,1,['avail'],['available']
Availability,"ask :qupath-gui-fx:processResources; > Task :qupath-gui-fx:classes; > Task :qupath-gui-fx:jar; > Task :generateLicenseReport; > Task :copyLicenses; > Task :extractNativeLibraries; > Task :jar; > Task :assemble; > Task :compileTestJava NO-SOURCE; > Task :processTestResources; > Task :testClasses; > Task :test NO-SOURCE; > Task :check UP-TO-DATE; > Task :copyLicenseReport; > Task :copyRuntimeLibs; > Task :build; > Task :qupath-core:assemble. > Task :qupath-core:compileTestJava; Note: Some input files use or override a deprecated API.; Note: Recompile with -Xlint:deprecation for details.; Note: /home/gordon/src/qupath/qupath-core/src/test/java/qupath/lib/io/TypeAdaptersCVTest.java uses unchecked or unsafe operations.; Note: Recompile with -Xlint:unchecked for details. > Task :qupath-core:processTestResources; > Task :qupath-core:testClasses. > Task :qupath-core:test FAILED. TypeAdaptersCVTest > testGetOpenCVTypeAdaptorFactory() FAILED; java.lang.ExceptionInInitializerError at TypeAdaptersCVTest.java:32; Caused by: java.lang.NullPointerException at TypeAdaptersCVTest.java:32. TypeAdaptersCVTest > testGetTypeAdaptor() FAILED; java.lang.NoClassDefFoundError at TypeAdaptersCVTest.java:99. 42 tests completed, 2 failed. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':qupath-core:test'.; > There were failing tests. See the report at: file:///home/gordon/src/qupath/qupath-core/build/reports/tests/test/index.html. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.; Use '--warning-mode all' to show the individual deprecation warnings.; See https://docs.gradle.org/6.4/userguide/command_line_interface.html#sec:command_line_warnings. BUILD FAILED in 8s; 59 actionable tasks: 58 executed, 1 up-to-date; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-630769356:6106,FAILURE,FAILURE,6106,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356,1,['FAILURE'],['FAILURE']
Availability,"ass to do the parsing, but doesn't necessarily require reader wrappers and reader pools at all. These seem to be where the main dangers lie, because Bio-Formats is complex to use in a multithreaded context. On the other hand, the parsing doesn't need to know anything about an `IFormatReader` - it just needs the minimal, immutable info required to convert bytes-to-BufferedImage. If you can extract the bytes-to-BufferedImage logic in an entirely threadsafe way, and leave as much as possible of `BioFormatsImageServer` as it is, then that could be the safest way to make a v0.5.0 update and help with the OMERO extension. In general, I am cautious about about extensive refactoring of `BioFormatsImageServer` because I've written so many subtly broken versions of it myself throughout in QuPath's history :) It's really hard to get 'right'; the previous version was messy, but the code seemed to work pretty reliably (well, except for [this...](https://forum.image.sc/t/qupath-stardist-extension-error-with-large-images/80221/19)). ---. I realise it's *incredibly hard* (/ impossible) to write this without failing examples, and most public examples *won't* fail because we get lucky with the different series types. My guess is that .czi is one of the more awkward formats. Based on that, I found another failing example here: https://zenodo.org/record/7149674. Specifically, check out the label and macro images with the PR vs. in QuPath v0.4.4. In this case, the problem is related to the 'interleaved' interpretation: there's no exception thrown, but the image obtained via the PR is incorrect. If you open the image in QuPath, this Groovy script shows that the `isInterleaved()` status changes for different series, which I think is the explanation:. ```groovy; def wrapper = getCurrentServer().readerPool.getDedicatedReaderWrapper(). println ""Original interleaved: "" + wrapper.isInterleaved(); wrapper.getReader().setSeries(0); println ""Series 0 interleaved: "" + wrapper.isInterleaved(); wrap",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547:4949,error,error-with-large-images,4949,https://qupath.github.io,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547,1,['error'],['error-with-large-images']
Availability,assViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449); at com.sun.glass.ui.View.handleMouseEvent(View.java:557); at com.sun.glass.ui.View.notifyMouse(View.java:943); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184); at java.base/java.lang.Thread.run(Unknown Source); Caused by: java.util.concurrent.ExecutionException: java.lang.RuntimeException: OpenCV(4.5.3) D:\a\javacpp-presets\javacpp-presets\opencv\cppbuild\windows-x86_64\opencv-4.5.3\modules\core\src\channels.cpp:141: error: (-215:Assertion failed) i1 >= 0 && j < ndsts && dst[j].depth() == depth in function 'cv::mixChannels'. at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:222); ... 58 common frames omitted; Caused by: java.lang.RuntimeException: OpenCV(4.5.3) D:\a\javacpp-presets\javacpp-presets\opencv\cppbuild\windows-x86_64\opencv-4.5.3\modules\core\src\channels.cpp:141: error: (-215:Assertion failed) i1 >= 0 && j < ndsts && dst[j].depth() == depth in function 'cv::mixChannels'. at org.bytedeco.opencv.global.opencv_core.mixChannels(Native Method); at qupath.opencv.tools.OpenCVTools.mergeChannels(OpenCVTools.java:413); at qupath.opencv.ops.ImageOps$Core$SplitMergeOp.transformPadded(ImageOps.java:2511); at qupath.opencv.ops.ImageOps$Core$SplitMergeOp.apply(ImageOps.java:2470); at qupath.opencv.ops.ImageOps$ChannelImageDataOp.apply(ImageOps.jav,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947:9946,error,error,9946,https://qupath.github.io,https://github.com/qupath/qupath/issues/947,1,['error'],['error']
Availability,"assed (BufferedImage@2f953efd: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 87 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0) ; 15:23:36.812 [main] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for D:\\QMDownload\\5\\~!@#$%^&( )_+=-0987654321`{}[%23];',\\single_neur~!@#$%^&( )_+=-0987654321`{}[%23];',on_40X_3.mrxs ; WARNING: An illegal reflective access operation has occurred ; WARNING: Illegal reflective access by org.codehaus.groovy.vmplugin.v7.Java7$1 (file:/C:/Program%20Files/QuPath-0.2.0-m1/app/groovy-2.5.6.jar) to constructor java.lang.invoke.MethodHandles$Lookup(java.lang.Class,int) ; WARNING: Please consider reporting this to the maintainers of org.codehaus.groovy.vmplugin.v7.Java7$1 ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 15:23:37.065 [main] [ERROR] qupath.QuPath - Error running script! ; javax.script.ScriptException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:158) ; 	at qupath.QuPath.main(QuPath.java:161) ; Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311) ; 	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:151) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:121) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:133) ; 	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.j",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/286:2759,ERROR,ERROR,2759,https://qupath.github.io,https://github.com/qupath/qupath/issues/286,1,['ERROR'],['ERROR']
Availability,"assify ; > <https://cloud.githubusercontent.com/assets/23145209/22407407/a1b3e02c-e61a-11e6-8ab8-8929d9b98c32.JPG>; >; > It may not be exactly what you wanted, but it is not too many steps ; > and should give similar results, I believe. Note that the Classify By ; > Specific Feature does not show up in the workflow at this time, but I ; > seem to remember it being scriptable manually.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub ; > <https://github.com/qupath/qupath/issues/46#issuecomment-275941788>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/APmGEcJu_dREsL0cqgibZHAb2Vy12MWjks5rXPDdgaJpZM4Lw1_o>.; >. -- ; Mit freundlichen Grüßen; Kind regards. Dipl. Biologe; David Haumann; CEO. Tel: +49 (0)7247 9342998-0; Mobil: +49 (0)171 9903171; E-Mail: david.haumann@hs-analysis.com; Webseite: www.hs-analysis.com. HS-Analysis GmbH; Steinbuch Centre for Computing (SCC), Geb. 441; Hermann-von-Helmholtz-Platz 1; 76344 Eggenstein-Leopoldshafen. Handelsregister: Amtsgericht Mannheim HRB 723920; UStIdNr: DE304551126; Geschäftsführer:; - David Haumann, Thomas Schenker, Sergey Biniaminov. _________________________________; Diese E-Mail und jeder übermittelte Anhang enthält gesetzlich geschützte; und vertrauliche Informationen. Wenn diese E-Mail nicht für Sie bestimmt ist,; bitten wir Sie, sie an uns zurückzusenden und anschließend von Ihrem Computersystem; zu löschen. Nicht für Sie bestimmte E-Mails und Anhänge dürfen Sie weder nutzen; noch verarbeiten oder Dritten zugänglich machen, gleich in welcher Form. This email including any attachments contains privileged and confidential; information. If you are not an intended recipient, please return the email; to us and then delete it from your computer system. You may neither use nor; edit any such emails including attachments received due to an error in; transmission, nor make them accessible to third parties in any manner whatsoever.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/46#issuecomment-276000050:2626,error,error,2626,https://qupath.github.io,https://github.com/qupath/qupath/issues/46#issuecomment-276000050,1,['error'],['error']
Availability,"ast = getProperty(ScriptAttributes.BATCH_LAST). // The file path for the script file (or null if not available); // (Note that the file contents may differ from the script if there are unsaved changes); String filePath = getProperty(ScriptAttributes.FILE_PATH); ```. The inspiration is from https://github.com/qupath/qupath/issues/1029. These changes make useful things possible, e.g.; * take action to notify the user at the end of long-running batch processing; * access other scripts or files relative to the script file itself. ## New `Timeit` class. The new `Timeit` class simplifies reporting the length of time it takes scripts (or parts of scripts) to run. Simple use involves starting a `Timeit` early, calling `start()`, and printing it whenever you want:; ```groovy; def timeit = new Timeit().start(); Thread.sleep(100); println timeit; Thread.sleep(200); println timeit; ```; Output:; ```; Time since start	106 ms; Time since start	314 ms; ```. It's also possible to have a bit more control, setting named checkpoints along the way:. ```groovy; var timeit = new Timeit(); .microseconds(); .start(""First checkpoint""); ; println 'Doing something now'; Thread.sleep(100). timeit.checkpoint(""Second checkpoint""). println 'Waiting for a bit'; Thread.sleep(200); ; timeit.stop(). println ""Doing something that isn't timed""; Thread.sleep(200). println timeit; ```. Output:; ```; Doing something now; Waiting for a bit; Doing something that isn't timed; First checkpoint	106323 µs; Second checkpoint	208185 µs; Total duration	314508 µs; ```. It can also be used to run the same code multiple times, reporting the individual and average times:. ```groovy; var timeit = new Timeit(); .summarizeCheckpoints(); .checkpointAndRun(""My calculation"", () -> mySlowCalculation(), 10); ; println timeit.stop() // Important to stop to get time for last checkpoint. void mySlowCalculation() {; def x = 2 + 2; Thread.sleep(50); }; ```. Output:; ```; My calculation (1)	56 ms; My calculation (2)	55 ms; My calcul",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1078:2529,checkpoint,checkpoints,2529,https://qupath.github.io,https://github.com/qupath/qupath/pull/1078,1,['checkpoint'],['checkpoints']
Availability,"atchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$MouseHandler.process(Scene.java:3856); at javafx.scene.Scene.processMouseEvent(Scene.java:1851); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2584); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.mac.MacView.notifyMouse(MacView.java:127); ```; The `Threshold` command works fine and seems to divide the annotation according to the slightly visible overlay, and so does the `Export map` command (so all good).; _________; ### If the value is >= 10; Clicking on `Find hotspot`, `Threshold` and `Export map` directly gives me the long open_cv error message copied above. It might be important to note that when the density radius value is switched back and forth between > and < 10, the density map overlay stops updating sometimes (not sure how to exactly reproduce this though).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/776#issuecomment-872890572:5562,error,error,5562,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-872890572,1,['error'],['error']
Availability,ath) instead); * [x] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [x] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; `QuPath convert-ome` returns exit code 0 despite failure. **To Reproduce**; Steps to reproduce the behavior:; ```; scale=2; tile=1024; comp=ZLIB; input=broken_image.tif; output=broke_omage.ome.tif; QuPath convert-ome $input $output \; --pyramid-scale=$scale \; --tile-size=$tile \; --compression=$comp \; --parallelize; ```; Output (truncated); ```; 20:39:42.582 [main] [INFO ] q.l.i.s.b.BioFormatsServerOptions - Setting max Bio-Formats readers to 2; 20:39:43.272 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.274 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.275 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; ...; 20:39:43.604 [main] [ERROR] q.l.i.writers.ome.ConvertCommand - Unable to open file:broken_image.tif; java.io.IOException: Unable to open file:broken_image.tif; at qupath.lib.images.servers.ImageServers.buildServer(ImageServers.java:306); at qupath.lib.images.writers.ome.ConvertCommand.run(ConvertCommand.java:147); at picocli.CommandLine.executeUserObject(CommandLine.java:2026); at picocli.CommandLine.access$1500(CommandLine.java:148); at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2461); at picocli.CommandLine$RunLast.handle(CommandLine.java:2453); at picocli.CommandLine$RunLast.handle(CommandLine.java:2415); at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2273); at picocli.CommandLine$RunLast.execute(CommandLine.java:2417); at picocli.CommandLine.execute(CommandLine.java:2170); at qupath.QuPath.main(,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1451:1482,Error,Error,1482,https://qupath.github.io,https://github.com/qupath/qupath/issues/1451,1,['Error'],['Error']
Availability,"ath, QuPath will test all potential file readers it has access to and check if they can handle the path. If you are only getting the thumbnails, then this implies that the OpenSlide check doesn't pass - which, because OpenSlide *can* certainly handle .svs, suggests that the OpenSlide native libraries are not properly accessible to QuPath, even if the jar is there. When QuPath shows 'ImageJ' as the reader, it does mean just this; ImageJ1 is being used, which can handle a range of small (non-whole-slide) images only, with a combination of its own TIFF reader and Java's ImageIO. It can also sometimes extract the thumbnail from a whole slide image, but only that. If you want to use Bio-Formats you can, but need to download and add it separately - see https://github.com/qupath/qupath-bioformats-extension. If you do install the Bio-Formats extension, then that postpones the immediate need to solve the problem of accessing native libraries; at least, you should be able to open the formats supported by Bio-Formats so long as QuPath can find the Bio-Formats jar file. Still, you won't be able to use OpenSlide or any commands reliant on OpenCV (including the Wand tool). The easiest way to get the native libraries to work is generally to copy them to the directory from which you run the application in the first place. You should be able to find the libraries by looking within an existing QuPath installation, or downloading the binaries for Windows from the OpenSlide/OpenCV websites. But for running from within an IDE, I have only set this up with Eclipse to date and don't know the specifics of getting it to work elsewhere. Finally, I've no doubt that the project could be structured in a way that makes it easier to use different IDEs. The combination of Java 8, JavaFX, Maven, Ant and native libraries makes it more difficult than a project using Java alone, and there wasn't previously a critical need. Still, the portability is something that I hope will be improved in the future.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/84#issuecomment-317351735:2903,down,downloading,2903,https://qupath.github.io,https://github.com/qupath/qupath/issues/84#issuecomment-317351735,1,['down'],['downloading']
Availability,ath-core-processing-awt-0.1.2.jar;qupath/qupath-extension-ij-0.1.2.jar;qupath/qupath-extension-input-0.1.2.jar;qupath/qupath-extension-opencv-0.1.2.jar;qupath/qupath-extension-openslide-0.1.2.jar;qupath/qupath-extension-pen-0.1.2.jar;qupath/qupath-extension-script-editor-0.1.2.jar;qupath/qupath-gui-fx-0.1.2.jar;qupath/qupath-processing-ij-0.1.2.jar;qupath/qupath-processing-opencv-0.1.2.jar;jars/commons-math3-3.6.1.jar;jars/controlsfx-8.40.12.jar;jars/flowless-0.4.5.jar;jars/groovy-2.4.7.jar;jars/groovy-jsr223-2.4.7.jar;jars/gson-2.8.0.jar;jars/ij-1.51g.jar;jars/jfxtras-common-8.0-r5.jar;jars/jfxtras-menu-8.0-r5.jar;jars/jinput-2.0.6.jar;jars/jpen-2-150301.jar;jars/jutils-1.0.0.jar;jars/logback-classic-1.1.7.jar;jars/logback-core-1.1.7.jar;jars/opencv-3.1.0.jar;jars/openslide-3.4.1_2.jar;jars/packager.jar;jars/reactfx-2.0-M4u1.jar;jars/richtextfx-0.6.10.jar;jars/slf4j-api-1.7.20.jar;jars/undofx-1.2.jar;jars/wellbehavedfx-0.1.1.jar ; 20:56:56.627 [main] [ERROR] qupath.QuPath - Error running script! ; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException ; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155) ; 	at qupath.QuPath.main(Unknown Source) ; Caused by: javax.script.ScriptException: java.lang.NullPointerException ; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:346) ; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152) ; 	... 1 common frames omitted ; Caused by: java.lang.NullPointerException: null ; 	at qupath.imagej.images.servers.BufferedImagePlusServer.getPath(BufferedImagePlusServer.java:71) ; 	at qupath.lib.images.servers.ImageServer$getPath.call(Unknown Source) ; 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48) ; 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113) ; 	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.c,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/260:3222,Error,Error,3222,https://qupath.github.io,https://github.com/qupath/qupath/issues/260,1,['Error'],['Error']
Availability,"ath-gui-fx/src/main/java/qupath/lib/gui/scripting/QPEx.java#L336).... but no absolute promises that won't be broken in the future either :). Ok, I will explain some more and hope it will be sufficient. QuPath is divided into modules. This modular design is a work-in-progress, but it is essential to keep the design coherent/improve it where possible. `ImageDisplay` requires JavaFX. That means that using it in *any* module will bring in a (quite huge) JavaFX dependency to that module. That means the core modules (which are currently completely ignorant of JavaFX) cannot use `ImageDisplay`... or they suddenly become dependent upon a whole host of other stuff. This is problematic if wanting to use some QuPath jars in other contexts in the future. Of course, `ImageData` exists in a core module. Currently, these means that if serializing the `ImageDisplay` inside the `ImageData`, the `ImageData` ends up storing a JSON version of something that it cannot possibly de-json-ify. This is tolerable, but not ideal. More critically, it also means that nothing in core modules can really work with the current display or channel settings. Perhaps they would like to, e.g. to export RGB image regions. Ideally this would not be restricted to modules that have JavaFX access. It also complicates things like the ImageJ macro runner... currently, this can either be free from JavaFX or capable of incorporating color transforms/channel info - but not both. There are good reasons to want both https://github.com/qupath/qupath/issues/68. Also, it means that changing the brightness and contrast ultimately requires deserializing/serializing the whole data file - which might be large. There are likely far better/more efficient/faster ways to store these settings in a project, not the data file. This would not only be arguably a a better design, but it would also make updating this information for 10,000 images almost instantaneous. I have made some progress in parts of this, because I needed a way",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-632668731:1144,toler,tolerable,1144,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-632668731,1,['toler'],['tolerable']
Availability,"ath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath /oamp/bio/QuPath/0.1.2/command/9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script 2.groovy; ----------------------------------------------------------------------------------------------------------------; **2.groovy**:; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; ------------------------------------------------------------------------------------------------------------------; **error**:; 21:52:15.344 [main] [INFO ] QuPath - Launching QuPath with args: /oamp/bio/QuPath/0.1.2/command/9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg, -script, 2.groovy; 21:52:15.600 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: groovy.lang.MissingMethodException: No signature of method: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.setImageType() is applicable for argument types: (java.lang.String) values: [BRIGHTFIELD_H_DAB]; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.main(QuPath.java:162); Caused by: javax.script.ScriptException: groovy.lang.MissingMethodException: No signature of method: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.setImageType() is applicable for argument types: (java.lang.String) values: [BRIGHTFIEL",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:4888,error,error,4888,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['error'],['error']
Availability,"ath/qupath; qupath/qupath; Cc : Author; Objet : RE: [qupath/qupath] Any way to add area measurement from several bruch tool areas ? (#179). Hi Pete,. That's very helpful, thanks a lot ! It will make my analysis way faster. Sincerely,. GOEPP Julie; Manager of the Primary Airway Cell Biobank (PACB); Cystic Fibrosis Translational Research Center (CFTRc)<http://mcgill.ca/cftrc/platforms/primary-airway-cell-biobank-pacb>; McGill University - Department of Physiology; McIntyre Building, Room 1012; 3655 Promenade Sir William Osler; Montreal – Qc – Canada – H3G 1Y6; (514) 398-4323 (ext #2 or 3); PACB Website<http://mcgill.ca/cftrc/platforms/primary-airway-cell-biobank-pacb>. ________________________________; De : Pete <notifications@github.com>; Envoyé : 21 juin 2018 11:23:17; À : qupath/qupath; Cc : Julie Goepp, Ms; Author; Objet : Re: [qupath/qupath] Any way to add area measurement from several bruch tool areas ? (#179). There are a few options:. * Get the measurements from Measure → Show annotation measurements, copy them into a spreadsheet and add them up there; * When you're drawing with the Brush tool (or the Wand might be nicer, if you have good contrast between the purple stain and surroundings), hold down Shift to append to an existing annotation - if you're pressing Shift, different regions can be discontinuous but still counted as one (similarly, you can hold down Alt to use the Brush or Wand and subtract regions); * Select all the annotations (either in the Annotations pane on the left, or by alt-clicking on them with the Move tool selected in the main image), right-click on the image and choose Annotations → Merge selected annotations. Hopefully one of those helps!. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/179#issuecomment-399142573>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AmmAR_KTr2VFQD77eEVrU9ppSThbe9tKks5t-7pkgaJpZM4UyRk4>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/179#issuecomment-399192393:2085,down,down,2085,https://qupath.github.io,https://github.com/qupath/qupath/issues/179#issuecomment-399192393,2,['down'],['down']
Availability,"ava.lang.invoke.MethodHandles$Lookup(java.lang.Class,int) ; WARNING: Please consider reporting this to the maintainers of org.codehaus.groovy.vmplugin.v7.Java7$1 ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 15:23:37.065 [main] [ERROR] qupath.QuPath - Error running script! ; javax.script.ScriptException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:158) ; 	at qupath.QuPath.main(QuPath.java:161) ; Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311) ; 	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:151) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:121) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:133) ; 	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:325) ; 	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:224) ; 	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:190) ; 	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:226) ; 	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:196) ; 	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:965) ; 	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647) ; 	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/286:3387,Error,ErrorCollector,3387,https://qupath.github.io,https://github.com/qupath/qupath/issues/286,1,['Error'],['ErrorCollector']
Availability,"avaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Tile cache size: 4096,00 MB; 12:25:43.922 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/joelrv/QuPath/extensions; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /home/joelrv/Downloads/bftools/test_pyramid_fullsize.tif; 12:25:56.155 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - Estimating H-DAB stainin",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472813709:1677,ERROR,ERROR,1677,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709,1,['ERROR'],['ERROR']
Availability,"b-Nak-ATPase""},{""channelName"":""Ir(193)_193Ir-NA2""}],""op"":{""type"":""op.core.split-merge"",""ops"":[{""type"":""op.filters.multiscale"",""features"":[""GAUSSIAN"",""LAPLACIAN"",""WEIGHTED_STD_DEV"",""GRADIENT_MAGNITUDE"",""STRUCTURE_TENSOR_EIGENVALUE_MAX"",""STRUCTURE_TENSOR_EIGENVALUE_MIN"",""STRUCTURE_TENSOR_COHERENCE"",""HESSIAN_DETERMINANT"",""HESSIAN_EIGENVALUE_MAX"",""HESSIAN_EIGENVALUE_MIN""],""sigmaX"":4.0,""sigmaY"":4.0},{""type"":""op.filters.multiscale"",""features"":[""GAUSSIAN"",""LAPLACIAN"",""WEIGHTED_STD_DEV"",""GRADIENT_MAGNITUDE"",""STRUCTURE_TENSOR_EIGENVALUE_MAX"",""STRUCTURE_TENSOR_EIGENVALUE_MIN"",""STRUCTURE_TENSOR_COHERENCE"",""HESSIAN_DETERMINANT"",""HESSIAN_EIGENVALUE_MAX"",""HESSIAN_EIGENVALUE_MIN""],""sigmaX"":8.0,""sigmaY"":8.0}]}}: x=0, y=0, w=800, h=848, z=0, t=0, downsample=4; java.io.IOException: java.util.concurrent.ExecutionException: java.lang.RuntimeException: OpenCV(4.5.3) D:\a\javacpp-presets\javacpp-presets\opencv\cppbuild\windows-x86_64\opencv-4.5.3\modules\core\src\channels.cpp:141: error: (-215:Assertion failed) i1 >= 0 && j < ndsts && dst[j].depth() == depth in function 'cv::mixChannels'. at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:226); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:287); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:60); at qupath.process.gui.commands.ml.PixelClassifierTraining$TileFeatures.ensureFeaturesCalculated(PixelClassifierTraining.java:440); at qupath.process.gui.commands.ml.PixelClassifierTraining$TileFeatures.<init>(PixelClassifierTraining.java:429); at qupath.process.gui.commands.ml.PixelClassifierTraining.getTileFeatures(PixelClassifierTraining.java:402); at qupath.process.gui.commands.ml.PixelClassifierTraining.updateTrainingData(PixelClassifierTraining.java:189); at qupath.process.gui.commands.ml.PixelClassifierTraining.createTrainingDataForLabelMap(PixelClassifierTraining.java:343)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947:4310,error,error,4310,https://qupath.github.io,https://github.com/qupath/qupath/issues/947,1,['error'],['error']
Availability,"bad. But the fix could result in more out-of-memory errors. I think it would be good to good to give some protection from these (or a more informative error if they occur), and aim for a more substantial fix. Two changes could help:; * Choose a pixel count threshold based upon both the maximum pixel count that ImageJ could conceivably support, i.e. 2<sup>31</sup>-1 (or a little more than 1) *and* also a memory threshold based on estimating the image size and memory available; * Add a scaling factor as a static field to control what proportion of the available memory is permitted for use. It could be something like this:; ```java; static double MEMORY_THRESHOLD = 0.5;; ...; long remainingMemory = ... // With the help of Runtime.getRuntime(), after request for garbage collection; long approxMemory = ... // Calculation based on pixel count, bit-depth & number of channels; if (approxPixelCount > 2147480000L || approxMemory > remainingMemory * MEMORY_THRESHOLD) {; // Show the size error; } else {; // Have a go at extracting the region; }; ```; By making the scaling factor a static field, there is at least the option of overriding it in a Groovy script if absolutely necessary. The details around the pixel count get a bit fiddly, considering that ImageJ1 will use a packed int array in a `ColorProcessor` for RGB images, while in other cases a new array will be allocated for every channel. Furthermore, it might be prudent to take parallelization into account, and the result returned by `PathPrefs.getNumCommandThreads()`. I'm dubious about sending the whole image if no selection exists, because it's really easy to accidentally run the command without an area selected... and then everything can grind to a halt while QuPath tries (and possibly fails) to extract a massive region. Currently you can use *Objects &rarr; Create full image annotation*, its shortcut `Ctrl + Shift + A` or the scripting command `createSelectAllObject(true);` to create an annotation representing the full ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/134#issuecomment-356714438:1036,error,error,1036,https://qupath.github.io,https://github.com/qupath/qupath/pull/134#issuecomment-356714438,1,['error'],['error']
Availability,"cessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:708); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.java:819); at qupath.lib.display.ImageDisplay.updateHistogramMap(ImageDisplay.java:554); at qupath.lib.display.ImageDisplay.setImageData(ImageDisplay.java:144); at qupath.lib.gui.viewer.QuPathViewer.setImageData(QuPathViewer.java:1385); at qupath.lib.gui.QuPathGUI.openImage(QuP",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:3612,Down,Downloads,3612,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['Down'],['Downloads']
Availability,"ch reader needs to be initialized. Generally this is fast, but sometimes (e.g. with certain files or file types) it is slow. In one particularly bad case (a very large .czi file) I've seen it take minutes. Memoization makes it possible to create `.bfmemo` files the first time a reader is created, so that subsequent readers can use these for faster initialization. ### Turning on memoization. Because memoization involves writing files to disk, users might not always want it. QuPath provides two preferences to control this:. * **Bio-Formats memoization time (ms)** If less than 0, don't use memoization. If >= 0, create a memoization file only if initialization of a reader takes longer than the specified milliseconds. If initialization is fast anyway, memoization is pretty pointless.; * **Bio-Formats memoization directory** If specified, store memoization files in here. Then they are persistent, and available when QuPath is reopened. *Otherwise*, store any memoization files in a temporary directory and delete the directory when QuPath is shut down. ### Default behavior. The default behavior (at least in v0.3.0 - v0.4.2) was to specify a memoization time of 500 ms, and not to specify a directory (i.e. only use temporary files). Upon inspection, it seems that this still creates temporary directories even if no `.bfmemo` files are ever written. Therefore the proposed default behavior for v0.4.3 onwards is to specify a memoization time of -1 (i.e. it's turned off by default). This errs on the side of not creating temp files, and is further justified by the fact that memoization was already missing in v0.4.0 - v0.4.2 anyway (due to the use of Bio-Formats 6.11 and Java 17). Therefore turning into a feature that explicitly requires opting-in doesn't represent a change of default behavior across the v0.4.x releases. ### Turning memoization off (known issue!). To turn off memoization, you'd ideally enter `-1` in **Bio-Formats memoization time (ms)**. Unfortunately, you can only ty",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1236:1717,down,down,1717,https://qupath.github.io,https://github.com/qupath/qupath/issues/1236,1,['down'],['down']
Availability,"ck trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.simplifyByDownsample(PathHierarchyPaintingHelper.java:542); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.getShape(PathHierarchyPaintingHelper.java:584); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintROI(PathHierarchyPaintingHelper.java:434); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintObject(PathHierarchyPaintingHelper.java:400); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:160); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:231); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1761); at qupath.lib.gui.viewer.QuPathVi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1732,ERROR,ERROR,1732,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027,1,['ERROR'],['ERROR']
Availability,cked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; `QuPath convert-ome` returns exit code 0 despite failure. **To Reproduce**; Steps to reproduce the behavior:; ```; scale=2; tile=1024; comp=ZLIB; input=broken_image.tif; output=broke_omage.ome.tif; QuPath convert-ome $input $output \; --pyramid-scale=$scale \; --tile-size=$tile \; --compression=$comp \; --parallelize; ```; Output (truncated); ```; 20:39:42.582 [main] [INFO ] q.l.i.s.b.BioFormatsServerOptions - Setting max Bio-Formats readers to 2; 20:39:43.272 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.274 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.275 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; ...; 20:39:43.604 [main] [ERROR] q.l.i.writers.ome.ConvertCommand - Unable to open file:broken_image.tif; java.io.IOException: Unable to open file:broken_image.tif; at qupath.lib.images.servers.ImageServers.buildServer(ImageServers.java:306); at qupath.lib.images.writers.ome.ConvertCommand.run(ConvertCommand.java:147); at picocli.CommandLine.executeUserObject(CommandLine.java:2026); at picocli.CommandLine.access$1500(CommandLine.java:148); at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2461); at picocli.CommandLine$RunLast.handle(CommandLine.java:2453); at picocli.CommandLine$RunLast.handle(CommandLine.java:2415); at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2273); at picocli.CommandLine$RunLast.execute(CommandLine.java:2417); at picocli.CommandLine.execute(CommandLine.java:2170); at qupath.QuPath.main(QuPath.java:202); Suppressed: java.io.IOException: Unable to build ImageServer for file:/scratch/a56/jr9959/tmp/xenium-images/unassi,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1451:1629,ERROR,ERROR,1629,https://qupath.github.io,https://github.com/qupath/qupath/issues/1451,1,['ERROR'],['ERROR']
Availability,"cluded by default); - ImageJ (included by default); - Bio-Formats (if it's installed). The _Server type_ entry in the table that appears under the _Image_ tab on the right of QuPath shows you which reader was used for whichever image is currently open - in the screenshot below, OpenSlide was used. ![mirax](https://cloud.githubusercontent.com/assets/4690904/19970686/a81eaf8a-a1d4-11e6-810e-491db8fb6612.jpg). Unfortunately, to the best of my knowledge Bio-Formats cannot handle MIRAX files - there is some information [here](http://blog.openmicroscopy.org/file-formats/community/2016/01/06/format-support/). Bio-Formats also cannot handle CZI files with JPEG-XR compression (which seems to be the default for whole slide scanners) - although the good news is that [this is being worked on](https://www.openmicroscopy.org/community/viewtopic.php?f=13&t=8138). OpenSlide also cannot handle CZI files (possibly for [license reasons](https://github.com/openslide/openslide/issues/144)), although this is discussed on the mailing list sometimes. However, OpenSlide should be able to handle [MIRAX](http://openslide.org/formats/mirax/) (at least 2D RGB images), and I've tried QuPath successfully with several MIRAX files that I [downloaded from the OpenSlide website](http://openslide.cs.cmu.edu/download/openslide-testdata/Mirax/). From the examples I've seen, the MIRAX images consist of two parts: a `*.mrxs` file and a separate directory containing a lot of other data files. These need to:; - have the same name (except the `*.mrxs` extension); - be located side-by-side in the same folder; - not be inside a compressed folder (e.g. a zipped folder). If any of these aren't true, then only the coarsest resolution will open. Could you check the files you have and see if any of these could explain the issue, or perhaps compare with the OpenSlide examples to see where any difference lies? I'm also happy to have a look here, if you can somehow transfer one of your images to me. Best wishes,. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/12#issuecomment-258165973:1708,down,downloaded,1708,https://qupath.github.io,https://github.com/qupath/qupath/issues/12#issuecomment-258165973,2,['down'],"['download', 'downloaded']"
Availability,"coKiaru @lacan @ap-- @sdvillal @finglis (sorry if I have missed anyone...). The background is that pixels are currently accessed in QuPath via something like; ```java; RegionRequest request = RegionRequest.createInstance(server.getPath(), downsample, x, y, width, height);; BufferedImage img = server.readBufferedImage(request);; ```. Creating a `RegionRequest` made sense in the early days, since it was used for caching. It remains useful for accessing corresponding regions in paired images, or for creating requests from ROIs, and for avoiding a plethora of parameters (particularly if `z` and `t` indices should be returned as well). However, often it just feels like unnecessary overhead, e.g. when writing simple scripts... or accessing from another language, like Python. It is pretty easy to retrofit support for; ```java; BufferedImage img = server.readBufferedImage(downsample, x, y, width, height, z, t);; BufferedImage img2 = server.readBufferedImage(downsample, x, y, width, height);; ```; by simply adding default methods to the interface. I don't think this should break anything. However this leads to another consideration... `readBufferedImage` isn't a great name, since the method really returns an instance of whatever the generic parameter `T` stands for in `ImageServer<T>`. It happens that this is pretty much always `BufferedImage` in QuPath, but the original idea was that an `ImageServer` could exists that returns something else that might be more convenient (e.g. something from ImgLib2, or an OpenCV `Mat`). So rather than doubling-down on `server.readBufferedImage` I would like to switch to `server.readRegion(RegionRequest)` instead. This feels to me more accurate and intuitive. The tricky bit is not breaking everything else... like parts of paquo or warpy, and all existing scripts that need pixels. The approach I've taken here is to mark `readBufferedImage` as deprecated (and planned for removal), while also providing a default implementation that calls `readR",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072:1132,down,downsample,1132,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072,1,['down'],['downsample']
Availability,"com/qupath/qupath/blob/v0.3.2/qupath-core/src/main/java/qupath/lib/awt/common/BufferedImageTools.java#L416); * [Type adaptors for Gson](https://github.com/qupath/qupath/blob/v0.3.2/qupath-core/src/main/java/qupath/lib/io/OpenCVTypeAdapters.java). ## Required change. I think (hope) type adaptors can be shifted to `qupath-core-processing` without too much trouble.; Although since the change was introduced in https://github.com/qupath/qupath/commit/0f0229fc1a6de6312bf3a2e914e9da79cf1f4bd9 the commit message hints that there was a reason to including it in `qupath-core` that might resurface in the future. I expect that the main effort would go into reimplementing image resizing. Ideally, we'd do this without introducing any new dependency (including ImageJ) to retain full control over the code and not have it subject to change with dependency updates. I expect that will be a very fiddly task, requiring some very good unit tests. ## Additional context. Resizing is performed whenever tiles are requested, e.g. https://github.com/qupath/qupath/blob/48dfb82400fb8289fa57242b08effe1977749a51/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L436-L442. In this case, it is almost always downsampling. We need to support both a 'smooth' and a 'nearest neighbor' implementation, to handle intensity and labeled/binary images at least - although we **might** want to introduce more interpolation options. See also https://github.com/qupath/2022-qupath-hackathon/discussions/2#discussioncomment-2634192. ## Significance. Having OpenCV as a dependency of `qupath-core` showed up when testing on a M1 Mac: it meant *nothing* would work until OpenCV had compatible binaries. It does now, but that flagged the issue of OpenCV being dragged into pretty much everything. Removing it would mean that the core module - and therefore most serializable datastructures - depend upon *only* Java code. This could help in making it accessible elsewhere, e.g. from Python or R.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/961:1657,down,downsampling,1657,https://qupath.github.io,https://github.com/qupath/qupath/issues/961,1,['down'],['downsampling']
Availability,com/qupath/qupath; cd qupath; ./gradlew clean jpackage -Pcuda-redist; ```; 2. Install either the 0.3.2 or 0.4.0 releases of the StarDist extension: https://github.com/qupath/qupath-extension-stardist/releases; 3. Download pretrained models in .pb format; 4. Draw an annotation on a brightfield image; 5. Download the following script: https://github.com/MarkZaidi/Universal-StarDist-for-QuPath/blob/main/GPU_Multimodal%20StarDist%20Segmentation.groovy; 6. Run the script; 7. Observe the following error message:; ```; INFO: Performing detection on Brightfield image using single-channel trained model; INFO: [Annotation]; ERROR: OpenCV(4.6.0) D:\a\javacpp-presets\javacpp-presets\opencv\cppbuild\windows-x86_64-gpu\opencv-4.6.0\modules\dnn\src\cuda4dnn\csl\memory.hpp:54: error: (-217:Gpu API call) the provided PTX was compiled with an unsupported toolchain. in function 'cv::dnn::cuda4dnn::csl::ManagedPtr<float>::ManagedPtr'; in GPU_Multimodal StarDist Segmentation.groovy at line number -2. ERROR: org.bytedeco.opencv.opencv_dnn.Net.forward(Native Method); qupath.opencv.dnn.OpenCVDnn$OpenCVNetFunction.predict(OpenCVDnn.java:718); qupath.opencv.dnn.OpenCVDnn$OpenCVNetFunction.predict(OpenCVDnn.java:732); qupath.opencv.dnn.DnnModel.convertAndPredict(DnnModel.java:100); qupath.ext.stardist.StarDist2D.detectObjectsForTile(StarDist2D.java:1249); qupath.ext.stardist.StarDist2D.lambda$detectObjects$7(StarDist2D.java:934); java.base/java.util.stream.ReferencePipeline$7$1.accept(Unknown Source); java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source); java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source); java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source); java.base/java.util.stream.ReduceOps$ReduceTask.doLeaf(Unknown Source); java.base/java.util.stream.ReduceOps$ReduceTask.doLeaf(Unknown Source); java.base/java.util.stream.AbstractTask.compute(Unknown Source); java.base/java.util.concurrent.CountedCompleter.exec(Unknow,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1180:2158,ERROR,ERROR,2158,https://qupath.github.io,https://github.com/qupath/qupath/issues/1180,1,['ERROR'],['ERROR']
Availability,"conds(); .start(""First checkpoint""); ; println 'Doing something now'; Thread.sleep(100). timeit.checkpoint(""Second checkpoint""). println 'Waiting for a bit'; Thread.sleep(200); ; timeit.stop(). println ""Doing something that isn't timed""; Thread.sleep(200). println timeit; ```. Output:; ```; Doing something now; Waiting for a bit; Doing something that isn't timed; First checkpoint	106323 µs; Second checkpoint	208185 µs; Total duration	314508 µs; ```. It can also be used to run the same code multiple times, reporting the individual and average times:. ```groovy; var timeit = new Timeit(); .summarizeCheckpoints(); .checkpointAndRun(""My calculation"", () -> mySlowCalculation(), 10); ; println timeit.stop() // Important to stop to get time for last checkpoint. void mySlowCalculation() {; def x = 2 + 2; Thread.sleep(50); }; ```. Output:; ```; My calculation (1)	56 ms; My calculation (2)	55 ms; My calculation (3)	54 ms; My calculation (4)	55 ms; My calculation (5)	61 ms; My calculation (6)	52 ms; My calculation (7)	55 ms; My calculation (8)	55 ms; My calculation (9)	53 ms; My calculation (10)	57 ms; Total duration	554 ms; Average per checkpoint: 55 ms; ```. ## Fix methods to get objects. Add missing `QP.getTileObjects()` method (https://github.com/qupath/qupath/issues/1065). Also ensure that `QP.getAllObjects()` returns a collection rather than array, for better consistency. ## Add version checking scripting methods. New methods to check the running QuPath version in scripts.; If the check fails, an exception will be thrown that will cause the script not to run. ```groovy; // Version v0.4.0 or newer; checkMinVersion('0.4.0'). // Version v0.4.x (but not earlier or later); checkVersionRange('0.4.0', '0.5.0'); ```. ## Code editor fixes. Syntax highlighting speeded up, scrolling follows caret when adding new lines. ## Change behavior for `QP.getCurrentImageData()` and `QP.getProject()`. The behavior of `getCurrentImageData()` and `getProject()` have been modified for cases wher",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1078:3747,checkpoint,checkpoint,3747,https://qupath.github.io,https://github.com/qupath/qupath/pull/1078,1,['checkpoint'],['checkpoint']
Availability,convert-ome returns 0 upon failure,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1451:27,failure,failure,27,https://qupath.github.io,https://github.com/qupath/qupath/issues/1451,1,['failure'],['failure']
Availability,"cs.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0); ```; and notably `/usr/local/opt/gettext/lib/libintl.8.dylib` stops him from using it on an x86-64 machine, though this doesn't seem to be a problem on CI machines. ## Linux. The below is out dated; when dynamically linking `glib`, our binaries are fine. > While it's easy enough to get a SO of openslide with minimal dependencies (`libpcre2-8` stubbornly remains dynamically > linked), issues arise when trying to load this alongside JavaFX. Specifically, we get a glib warning followed by an error:; > ```; > (java:71634): GLib-GObject-WARNING **: 14:32:40.458: cannot register existing type 'gchar'; > **; > GLib-GObject:ERROR:../../../meson/subprojects/glib-2.72.0/gobject/gvaluetypes.c:454:_g_value_types_init: assertion failed: (type == G_TYPE_CHAR); > ```; > This is less urgent, as we can just distribute QuPath as `deb`/`rpm` packages, and specify `openslide-tools` as a dependency, as we will no longer depend on `openslide-java`. ## Plan for 0.5.0 release. - Windows will use a JAR of the OpenSlide builds, which we can extract to temp files and then load.; - Linux releases will depend on `openslide-tools`; if this is installed, then `libopenslide.so` should be on the search path.; - Mac builds will require homebrew (or similar) installs of `openslide`. However, if we could resolve the issues with the mac and Linux binaries, then it'd be great to use the same (or at least similar) processes on all platforms. Would appreciate any feedback/advice from @bgilbert and @jcupitt on the best way forward, or if yous have run into some of these issues before.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:5898,ERROR,ERROR,5898,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495,1,['ERROR'],['ERROR']
Availability,"ctly you want. https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d may help to give a starting point, since it shows how to do the export of a (very) downsampled version of the image as a single tile. But it still involves using a ```RegionRequest``` object to define the part of an image and downsampling factor to use, and then writing that out... so the idea is the same. Therefore you could use that to modify the original tiling script. After importing ```ImageWriterTools``` at the top, the main thing to do is to change the contents of the ```try``` block, e.g. something like the following:. ```groovy. ...; import qupath.lib.gui.ImageWriterTools. ...; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); File file = new File(dirOutput, name); ImageWriterTools.writeImageRegionWithOverlay(imageData, overlayOptions, request, file.getAbsolutePath()). // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; ...; ```; This should include all detections and annotations. If you need TMA cores to be displayed too, then some modification would be required... although then *File &rarr; Export TMA data* is usually a better choice in most cases. Note, here I set the output format to JPEG to get smaller file sizes. The original script wrote ImageJ TIFF images, which used lossless compression and had more image properties set (e.g. pixel sizes in microns) - at the cost of writing much larger files. If you want similar ImageJ TIFFs, but with the overlay drawn on top, then the changes are a bit more awkward and require going more into the details or how images are handled by Java and QuPath. The following should work (at least for RGB images):. ```groovy; ..",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/44#issuecomment-273680833:1021,down,downsample,1021,https://qupath.github.io,https://github.com/qupath/qupath/issues/44#issuecomment-273680833,1,['down'],['downsample']
Availability,"cts(tumorAnnos,false); removeObjects(tumorCells,false); //Analyze->Spatial analysis->Detect centroid distances 2D. detectionCentroidDistances(true); //Add everything back, and make sure the hierarchy is resolved!; addObjects(tumorAnnos); addObjects(tumorCells); resolveHierarchy(); ```. The code works most of the time. Probably 70%? I lack my usual variety of computers to test out whether it is based on my computer - but I do have a project file hosted online I can make available to run the test. Errors include: Null pointer exception popup in the lower right,. INFO: Starting script at Sat Jun 05 20:54:28 CDT 2021; WARN: Resolving hierarchy that contains 3 annotations and 1236 detections - this may be slow!; ERROR: QuPath exception; WARN: Resolving hierarchy that contains 3 annotations and 1236 detections - this may be slow!; INFO: Script run time: 0.25 seconds; The log file is not hugely informative on that one. Alternatively, I sometimes see a TMA core error. ```; ERROR: QuPath exception: Cannot invoke ""qupath.lib.objects.PathObject.isTMACore()"" because ""child"" is null; at qupath.lib.gui.panes.PathObjectHierarchyView$PathObjectTreeItem.getChildren(PathObjectHierarchyView.java:516); at qupath.lib.gui.panes.PathObjectHierarchyView$PathObjectTreeItem.isLeaf(PathObjectHierarchyView.java:544); at javafx.controls/javafx.scene.control.skin.TreeCellSkin.updateDisclosureNode(Unknown Source); at javafx.controls/javafx.scene.control.skin.TreeCellSkin.updateChildren(Unknown Source); at javafx.controls/javafx.scene.control.skin.LabeledSkinBase.lambda$new$5(Unknown Source); at javafx.controls/com.sun.javafx.scene.control.LambdaMultiplePropertyChangeListenerHandler.lambda$new$1(Unknown Source); at javafx.base/javafx.beans.value.WeakChangeListener.changed(Unknown Source); at javafx.base/com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(Unknown Source); at javafx.base/com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(Unknown Source); at javafx.ba",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/744:1917,ERROR,ERROR,1917,https://qupath.github.io,https://github.com/qupath/qupath/issues/744,1,['ERROR'],['ERROR']
Availability,"d cap out the available memory that way, I tend to run into detection problems. However, as you say, this isn't a hardware memory limit problem, as I can lower the memory cap down to 2GB on a fairly large image (Annotation area 1.3x10^8 um^2) and have it run successfully, but slowly. If I fill up those 2 GB by looking around the image, though, it failed it's cell detection. Even on a comparatively small image (2.5x10^6 um^2) I ran into problems once the memory was filled. On the other hand, once I bumped the available memory up to 5GB, I stopped running into errors on the smaller image, though it was very difficult to fill the image buffer. On the larger image I could quite easily cap out the image buffer around 5GB and then sometimes ran into errors. Although sometimes the program would simply go over the 5GB limit and everything would be fine. I am afraid I wasn't able to find anything usefully consistent. . Anyway, the error, whenever I ran into it looks familiar:. > ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:163); at java.lang.Thread.run(Thread.java:745); Caused by Java heap space at java.util.ArrayDeque.allocateElements(ArrayDeque.java:142); at java.util.ArrayDeque.<init>(ArrayDeque.java:198). Edit:; Actually this part might be more useful:. > INFO: Processing complete in 55.47 seconds; INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""d",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343336690:1320,ERROR,ERROR,1320,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343336690,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"decent number of subcellular detections... and then trying to double click on a cell in the viewer to see values. After this happens, any interaction with the viewer results in the same Exception spam popup in the corner of the program. The popup itself says Stack Overflow. > ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > INFO: Processing complete in 34.46 seconds; > INFO: Completed!; > INFO: ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > ERROR: QuPath exception; > at javafx.scene.Node.access$100(Node.java:398); > at javafx.scene.Node$1.doMarkDirty(Node.java:424); > at com.sun.javafx.scene.NodeHelper.markDirtyImpl(NodeHelper.java:158); > at com.sun.javafx.scene.shape.ShapeHelper.markDirtyImpl(ShapeHelper.java:80); > at com.sun.javafx.scene.NodeHelper.markDirty(NodeHelper.java:98); > at javafx.scene.shape.Shape$2.invalidated(Shape.java:463); > at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); > at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); > at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); > at javafx.css.StyleableObjectProperty.applyStyle(StyleableObjectProperty.java:68); > at javafx.scene.shape.Path.<init>(Path.java:139); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.createButtonShape(BreadCrumbBarSkin.java:324); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.updateShape(BreadCrumbBarSkin.jav",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/307#issuecomment-484622516:1127,ERROR,ERROR,1127,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516,1,['ERROR'],['ERROR']
Availability,"def viewer = getCurrentViewer(); def imageData = getCurrentImageData(). def name = GeneralTools.getNameWithoutExtension(imageData.getServer().getMetadata().getName()); def pathOutput = <output_path>. double requestedPixelSize = 15; double downsample = requestedPixelSize / imageData.getServer().getPixelCalibration().getAveragedPixelSize(). def display = qupath.lib.display.ImageDisplay.create(imageData); def server = new RenderedImageServer.Builder(imageData); .display(display); .downsamples(downsample); .layers(new HierarchyOverlay(viewer.getImageRegionStore(), viewer.getOverlayOptions(), imageData)); .build(). ```. **Expected behavior**; The above script can run for the whole project without crashing. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: macOS (MacBook Air, M1); - QuPath Version: 0.5.1-arm64. **Additional context**. Stack trace; ```; ERROR: unable to create native thread: possibly out of memory or process/resource limits reached in thread_leak_repro.groovy at line number 25; java.base/java.lang.Thread.start0(Native Method); java.base/java.lang.Thread.start(Unknown Source); java.base/java.lang.System$2.start(Unknown Source); java.base/jdk.internal.vm.SharedThreadContainer.start(Unknown Source); java.base/java.util.concurrent.ThreadPoolExecutor.addWorker(Unknown Source); java.base/java.util.concurrent.ThreadPoolExecutor.execute(Unknown Source); qupath.lib.gui.images.stores.AbstractImageRegionStore.requestImageTile(AbstractImageRegionStore.java:374); qupath.lib.gui.images.stores.DefaultImageRegionStore.paintRegionCompletely(DefaultImageRegionStore.java:104); qupath.lib.gui.images.servers.RenderedImageServer.readTile(RenderedImageServer.java:363); qupath.lib.images.servers.AbstractTileableImageServer.lambda$prerequestTiles$2(AbstractTileableImageServer.java:462); java.base/java.util.concurrent.FutureTask.run(Unknown Source); qupath.lib.images.servers.AbstractTileableI",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1561:1958,ERROR,ERROR,1958,https://qupath.github.io,https://github.com/qupath/qupath/issues/1561,1,['ERROR'],['ERROR']
Availability,"detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:600); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:362); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath.imagej.detect.cells.WatershedCellDetection {""detectionImageFluorescence"": 1, ""requestedPixelSizeMicrons"": 0.1, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 0.9, ""minAreaMicrons"": 6.0, ""maxAreaMicrons"": 150.0, ""threshold"": 2000.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 3.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Training size: org.bytedeco.javacpp.opencv_core$Size[address=0x608000811620,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000811620,deallocatorAddress=0x13aaec9c0]]; INFO: Responses size: org.bytedeco.javacpp.opencv_core$Size[address=0x60800080d2a0,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x60800080d2a0,deallocatorAddress=0x13aaec9c0]]; INFO: RTrees classifier termination criteria: org.bytedeco.ja",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-493938867:3982,error,error,3982,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867,1,['error'],['error']
Availability,"dler.java:352); 	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:275); 	at java.security.AccessController.doPrivileged(Native Method); 	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$300(GlassViewEventHandler.java:388); 	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); 	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:387); 	at com.sun.glass.ui.View.handleMouseEvent(View.java:555); 	at com.sun.glass.ui.View.notifyMouse(View.java:937); 	at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); 	at com.sun.glass.ui.gtk.GtkApplication.lambda$null$450(GtkApplication.java:139); 	at java.lang.Thread.run(Thread.java:745); 09:32:08.265 [JavaFX Application Thread] [WARN ] q.l.i.servers.OpenslideServerBuilder - Unable to open /data/CAMELYON16/Train_Tumor/Tumor_005.tif with OpenSlide: null; 09:32:08.265 [JavaFX Application Thread] [ERROR] q.l.i.servers.ImageServerProvider - Unable to build whole slide server - check your classpath for a suitable library (e.g. OpenSlide, BioFormats); 	; 09:32:08.265 [JavaFX Application Thread] [ERROR] q.l.i.servers.ImageServerProvider - /home/vaibhav/QuPath/app/QuPathApp.jar:qupath/qupath-core-0.1.2.jar:qupath/qupath-core-awt-0.1.2.jar:qupath/qupath-core-processing-0.1.2.jar:qupath/qupath-core-processing-awt-0.1.2.jar:qupath/qupath-extension-ij-0.1.2.jar:qupath/qupath-extension-input-0.1.2.jar:qupath/qupath-extension-opencv-0.1.2.jar:qupath/qupath-extension-openslide-0.1.2.jar:qupath/qupath-extension-pen-0.1.2.jar:qupath/qupath-extension-script-editor-0.1.2.jar:qupath/qupath-gui-fx-0.1.2.jar:qupath/qupath-processing-ij-0.1.2.jar:qupath/qupath-processing-opencv-0.1.2.jar:jars/commons-math3-3.6.1.jar:jars/controlsfx-8.40.12.jar:jars/flowless-0.4.5.jar:jars/groovy-2.4.7.jar:jars/groovy-jsr223-2.4.7.jar:jars/gson-2.8.0.jar:jars/ij-1.51g.jar:jars/jfxtras-common-8.0-r5.jar:j",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/65:7178,ERROR,ERROR,7178,https://qupath.github.io,https://github.com/qupath/qupath/issues/65,1,['ERROR'],['ERROR']
Availability,"dthPixels =1500 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 70 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput = buildFilePath(PROJECT_BASE_DIR, 'something else') // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!; mkdirs(dirOutput). int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-486778605:1422,error,error,1422,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605,1,['error'],['error']
Availability,"dy noticed is that when I zip around an image and cap out the available memory that way, I tend to run into detection problems. However, as you say, this isn't a hardware memory limit problem, as I can lower the memory cap down to 2GB on a fairly large image (Annotation area 1.3x10^8 um^2) and have it run successfully, but slowly. If I fill up those 2 GB by looking around the image, though, it failed it's cell detection. Even on a comparatively small image (2.5x10^6 um^2) I ran into problems once the memory was filled. On the other hand, once I bumped the available memory up to 5GB, I stopped running into errors on the smaller image, though it was very difficult to fill the image buffer. On the larger image I could quite easily cap out the image buffer around 5GB and then sometimes ran into errors. Although sometimes the program would simply go over the 5GB limit and everything would be fine. I am afraid I wasn't able to find anything usefully consistent. . Anyway, the error, whenever I ran into it looks familiar:. > ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:163); at java.lang.Thread.run(Thread.java:745); Caused by Java heap space at java.util.ArrayDeque.allocateElements(ArrayDeque.java:142); at java.util.ArrayDeque.<init>(ArrayDeque.java:198). Edit:; Actually this part might be more useful:. > INFO: Processing complete in 55.47 seconds; INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343336690:1271,error,error,1271,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343336690,1,['error'],['error']
Availability,"e --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 15:23:37.065 [main] [ERROR] qupath.QuPath - Error running script! ; javax.script.ScriptException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:158) ; 	at qupath.QuPath.main(QuPath.java:161) ; Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311) ; 	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:151) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:121) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:133) ; 	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:325) ; 	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:224) ; 	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:190) ; 	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:226) ; 	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:196) ; 	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:965) ; 	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647) ; 	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623) ; 	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:600) ; 	at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390) ; 	at groovy.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/286:3562,Error,ErrorCollector,3562,https://qupath.github.io,https://github.com/qupath/qupath/issues/286,1,['Error'],['ErrorCollector']
Availability,"e diameter depending upon how widely you want QuPath to look around each tile for calculating textures. Press *Run* and then choose *Process all: Detections*.; * Train a classifier as described [in the Wiki](https://github.com/qupath/qupath/wiki/Classifying-objects). Check out [this issue](https://github.com/qupath/qupath/issues/50) if you find the *Brush tool* isn't working for you.; * Optionally run *Analyze &rarr; Region identification &rarr; Tiles & superpixels &rarr; Tile classifications to annotations*.... if you find it helpful. It's always best to save your data before doing this, since all the options have some kind of logic behind them... but it's often not entirely clear which are the options you want on a first go. There is no *Undo*, but if you save before running the command, *File &rarr; Revert* can get you back to where you were. The end result is a rather 'blocky' classification, where the size of the blocks depends upon how large the tiles are that you created. But if you need to downsample your image 8 times to get good enough performance with the Weka plugin, then using tiles that are 8x8 pixels gives you just as good a resolution in the end. Furthermore, with QuPath you can add some other kinds of features, particularly Haralick texture features on color-deconvolved images, which can be a better fit for pathology applications compared to some of the Weka features (which may be better for other applications). And you can do other things in QuPath to help with efficiency, such as create a script to find all pixels with high intensity values (background?) and remove them - thereby allowing you to avoid the memory and computational requirements of storing and classifying them. Therefore while there is some overhead involved in QuPath using objects rather than pixels in the way that *ilastik* and *Trainable Weka segmentation* do, QuPath's use of objects is sufficiently efficient and optimized that I think it offers a viable alternative in many cases.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/56#issuecomment-288506877:3021,down,downsample,3021,https://qupath.github.io,https://github.com/qupath/qupath/issues/56#issuecomment-288506877,1,['down'],['downsample']
Availability,"e error; ```; # A fatal error has been detected by the Java Runtime Environment:; #; # EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x0000000000cb5b26, pid=9416, tid=7376; #; # JRE version: OpenJDK Runtime Environment (13.0.1+9) (build 13.0.1+9); # Java VM: OpenJDK 64-Bit Server VM (13.0.1+9, mixed mode, tiered, compressed oops, g1 gc, windows-amd64); # Problematic frame:; # C 0x0000000000cb5b26; #; # No core dump will be written. Minidumps are not enabled by default on client versions of Windows; #; # If you would like to submit a bug report, please visit:; # https://github.com/AdoptOpenJDK/openjdk-build/issues; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #. --------------- S U M M A R Y ------------. Command Line: -Djava.library.path=C:\Users\ag5-35\Downloads\QuPath-0.2.0-m8-Windows\QuPath-0.2.0-m8\app;C:\Users\ag5-35\Downloads\QuPath-0.2.0-m8-Windows\QuPath-0.2.0-m8 -Djava.launcher.path=C:\Users\ag5-35\Downloads\QuPath-0.2.0-m8-Windows\QuPath-0.2.0-m8 -Xmx8192M -XX:MaxRAMPercentage=50 qupath.QuPath. Host: Intel(R) Core(TM) i5-9400 CPU @ 2.90GHz, 6 cores, 15G, Windows 10 , 64 bit Build 18362 (10.0.18362.329); Time: Tue Jan 28 18:35:40 2020 W. Europe Standard Time elapsed time: 148 seconds (0d 0h 2m 28s). --------------- T H R E A D ---------------. Current thread (0x000001d550e5e800): JavaThread ""classifier-overlay6"" daemon [_thread_in_native, id=7376, stack(0x0000002279b00000,0x0000002279c00000)]. Stack: [0x0000002279b00000,0x0000002279c00000], sp=0x0000002279bf9e20, free space=999k; Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code); C 0x0000000000cb5b26. Java frames: (J=compiled Java code, j=interpreted, Vv=VM code); j org.bytedeco.opencv.opencv_ml.LogisticRegression.predict(Lorg/bytedeco/opencv/opencv_core/Mat;Lorg/bytedeco/opencv/opencv_core/Mat;I)F+0; j qupath.opencv.ml.OpenCVClassifiers$AbstractOpenCVClassifierML.predictWithLock(Lorg/bytedeco/openc",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/394:1812,Down,Downloads,1812,https://qupath.github.io,https://github.com/qupath/qupath/issues/394,1,['Down'],['Downloads']
Availability,"e issue would be that how to let Bioformats extension usable when call QuPath from system command, but bot GUI. Any suggestions are welcome.; ================. 20:56:55.735 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, D:\\QMDownload\\6\\[failed_handOK]Leica_scn\\Leica-Fluorescence-1.scn, -script, D:\\QMDownload\\6\\Tiling_a_whole_slide_image.groovy ; 20:56:55.829 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!! ; Unsupported format or not found ; 20:56:55.876 [main] [WARN ] q.i.i.servers.ImageJServerBuilder - Error opening D:\\QMDownload\\6\\[failed_handOK]Leica_scn\\Leica-Fluorescence-1.scn with ImageJ: Could not open D:\\QMDownload\\6\\[failed_handOK]Leica_scn\\Leica-Fluorescence-1.scn with ImageJ ; 20:56:55.907 [main] [WARN ] q.l.i.servers.OpenslideServerBuilder - Unable to open D:\\QMDownload\\6\\[failed_handOK]Leica_scn\\Leica-Fluorescence-1.scn with OpenSlide: Can't find main image ; 20:56:55.907 [main] [ERROR] q.l.i.servers.ImageServerProvider - Unable to build whole slide server - check your classpath for a suitable library (e.g. OpenSlide, BioFormats); 	 ; 20:56:55.907 [main] [ERROR] q.l.i.servers.ImageServerProvider - C:\Program Files\QuPath\app\QuPathApp.jar;qupath/qupath-core-0.1.2.jar;qupath/qupath-core-awt-0.1.2.jar;qupath/qupath-core-processing-0.1.2.jar;qupath/qupath-core-processing-awt-0.1.2.jar;qupath/qupath-extension-ij-0.1.2.jar;qupath/qupath-extension-input-0.1.2.jar;qupath/qupath-extension-opencv-0.1.2.jar;qupath/qupath-extension-openslide-0.1.2.jar;qupath/qupath-extension-pen-0.1.2.jar;qupath/qupath-extension-script-editor-0.1.2.jar;qupath/qupath-gui-fx-0.1.2.jar;qupath/qupath-processing-ij-0.1.2.jar;qupath/qupath-processing-opencv-0.1.2.jar;jars/commons-math3-3.6.1.jar;jars/controlsfx-8.40.12.jar;jars/flowless-0.4.5.jar;jars/groovy-2.4.7.jar;jars/groovy-jsr223-2.4.7.jar;jars/gson-2.8.0.jar;jars/ij-1.51g.jar;jars/jfxtras-common-8.0-r5.jar;jars/jfxtras-menu-8.0-r5.jar;",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/260:1856,ERROR,ERROR,1856,https://qupath.github.io,https://github.com/qupath/qupath/issues/260,1,['ERROR'],['ERROR']
Availability,"e same results. - The software used to generate the OME-TIFF files was through a two-step process of converting MRXS files (written from 3DHISTECH software) into OME-TIFF files through the help of conversion tools from Glencoesoftware:. The first step used a tool called bioformats2raw (https://github.com/glencoesoftware/bioformats2raw) which converts MRXS files into Zarr file-type. . The second step used a tool called raw2ometiff (https://github.com/glencoesoftware/raw2ometiff) which converts the Zarr file into an OME-TIFF file type. - While viewing an image with QuPath-0.3.0 and checking _Show log_, these were the errors reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. For QuPath-0.3.2, the result was the same except it did not have the ""WARN"" error. For QuPath-0.3.1 (which also can not cache tiles or load the resolution properly when zooming in), this was reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Setting max Bio-Formats readers to 4; INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. ### Here is an example of my image while zoomed in using QuPath-0.3.0; <img width=""960"" alt=""QuPath_030_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751366-613ce0e7-1dc4-4e03-a0f4-8a055db1f3d7.PNG"">. ### Here is an example of my image while zoomed in using QuPath-0.3.2 (looks the same on QuPath-0.3.1); <img width=""960"" alt=""QuPath_032_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751374-6702bd00-8f17-4005-a56c-7b3a96f6c258.PNG"">. As well, here is a link to download two of my OME-TIFF images, if you would like to try viewing them on QuPath: http://gofile.me/6VSoS/CNJndmlCr",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/904#issuecomment-1064493475:2025,down,download,2025,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1064493475,1,['down'],['download']
Availability,"e the tumor annotations and their cells; removeObjects(tumorAnnos,false); removeObjects(tumorCells,false); //Analyze->Spatial analysis->Detect centroid distances 2D. detectionCentroidDistances(true); //Add everything back, and make sure the hierarchy is resolved!; addObjects(tumorAnnos); addObjects(tumorCells); resolveHierarchy(); ```. The code works most of the time. Probably 70%? I lack my usual variety of computers to test out whether it is based on my computer - but I do have a project file hosted online I can make available to run the test. Errors include: Null pointer exception popup in the lower right,. INFO: Starting script at Sat Jun 05 20:54:28 CDT 2021; WARN: Resolving hierarchy that contains 3 annotations and 1236 detections - this may be slow!; ERROR: QuPath exception; WARN: Resolving hierarchy that contains 3 annotations and 1236 detections - this may be slow!; INFO: Script run time: 0.25 seconds; The log file is not hugely informative on that one. Alternatively, I sometimes see a TMA core error. ```; ERROR: QuPath exception: Cannot invoke ""qupath.lib.objects.PathObject.isTMACore()"" because ""child"" is null; at qupath.lib.gui.panes.PathObjectHierarchyView$PathObjectTreeItem.getChildren(PathObjectHierarchyView.java:516); at qupath.lib.gui.panes.PathObjectHierarchyView$PathObjectTreeItem.isLeaf(PathObjectHierarchyView.java:544); at javafx.controls/javafx.scene.control.skin.TreeCellSkin.updateDisclosureNode(Unknown Source); at javafx.controls/javafx.scene.control.skin.TreeCellSkin.updateChildren(Unknown Source); at javafx.controls/javafx.scene.control.skin.LabeledSkinBase.lambda$new$5(Unknown Source); at javafx.controls/com.sun.javafx.scene.control.LambdaMultiplePropertyChangeListenerHandler.lambda$new$1(Unknown Source); at javafx.base/javafx.beans.value.WeakChangeListener.changed(Unknown Source); at javafx.base/com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(Unknown Source); at javafx.base/com.sun.javafx.binding.ExpressionHelper.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/744:1905,error,error,1905,https://qupath.github.io,https://github.com/qupath/qupath/issues/744,1,['error'],['error']
Availability,"e value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; INFO: Returning server: Bio-Formats for W:\Images\David\HW_5plex test\2018_02_02__4525.czi; INFO: ZeissCZIReader initializing W:\Images\David\HW_5plex test\2018_02_02__4525.czi; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; INFO: ZeissCZIReader initializing W:\Images\David\HW_5plex test\2018_02_02__4525.czi; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; ERROR: QuPath exception; at qupath.lib.display.ImageDisplay.setChannelSelected(ImageDisplay.java:313); at qupath.lib.gui.commands.BrightnessContrastCommand.updateDisplay(BrightnessContrastCommand.java:541); at qupath.lib.gui.commands.BrightnessContrastCommand.createDialog(BrightnessContrastCommand.java:446); at qupath.lib.gui.commands.BrightnessContrastCommand.run(BrightnessContrastCommand.java:586); at qupath.lib.gui.QuPathGUI.lambda$createCommandAction$46(QuPathGUI.java:3122); at org.controlsfx.control.action.Action.handle(Action.java:419); at org.controlsfx.control.action.Action.handle(Action.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.s",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/145:2744,ERROR,ERROR,2744,https://qupath.github.io,https://github.com/qupath/qupath/issues/145,1,['ERROR'],['ERROR']
Availability,"e!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-486778605:2364,down,downsample,2364,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605,1,['down'],['downsample']
Availability,e); at java.base/java.util.ArrayList.removeIf(Unknown Source); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:196); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1757); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:420); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:257); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:508); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source); ERROR: QuPath exception; at qupath.lib.gui.viewer.overlays.HierarchyOverlay.lambda$paintOverlay$0(HierarchyOverlay.java:196); at java.base/java.util.ArrayList.removeIf(Unknown Source); at java.base/java.util.ArrayList.removeIf(Unknown Source); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:196); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1757); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:420); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:257); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:508); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.win.WinApp,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/359:1773,ERROR,ERROR,1773,https://qupath.github.io,https://github.com/qupath/qupath/issues/359,1,['ERROR'],['ERROR']
Availability,"e, but could only see a zoom-out whole slide with label in white light, and the server is Bioformats.; Then I try to open it in version 0.2.0. Under this version, I can see the fluorescence image now (alaso Bioformats). Then I run a script to split the image and export as tiles. ; When using QuPath 0.1.2: ; (1)if I run the script from menu, it works without problem.; (2) If I run feed in the script to QuPath via command line, the Bioformat extension cannot be loaded. When using QuPath 0.2.0:; (1) if I run the script from menu, error appeared:. ERROR: Error: startup failed:; Script1.groovy: 17: unable to resolve class qupath.imagej.images.servers.ImagePlusServer; @ line 17, column 1.; import qupath.imagej.images.servers.ImagePlusServer; ^. Script1.groovy: 18: unable to resolve class qupath.imagej.images.servers.ImagePlusServerBuilder; @ line 18, column 1.; import qupath.imagej.images.servers.ImagePlusServerBuilder; ^. 2 errors. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:596); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(Groovy",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280:1140,Error,ErrorCollector,1140,https://qupath.github.io,https://github.com/qupath/qupath/issues/280,1,['Error'],['ErrorCollector']
Availability,e.sc/t/stardist-gpu-support-unknown-error/74779. **To Reproduce**; Steps to reproduce the behavior:; 1. Build QuPath from source using the following command:; ```; git clone https://github.com/qupath/qupath; cd qupath; ./gradlew clean jpackage -Pcuda-redist; ```; 2. Install either the 0.3.2 or 0.4.0 releases of the StarDist extension: https://github.com/qupath/qupath-extension-stardist/releases; 3. Download pretrained models in .pb format; 4. Draw an annotation on a brightfield image; 5. Download the following script: https://github.com/MarkZaidi/Universal-StarDist-for-QuPath/blob/main/GPU_Multimodal%20StarDist%20Segmentation.groovy; 6. Run the script; 7. Observe the following error message:; ```; INFO: Performing detection on Brightfield image using single-channel trained model; INFO: [Annotation]; ERROR: OpenCV(4.6.0) D:\a\javacpp-presets\javacpp-presets\opencv\cppbuild\windows-x86_64-gpu\opencv-4.6.0\modules\dnn\src\cuda4dnn\csl\memory.hpp:54: error: (-217:Gpu API call) the provided PTX was compiled with an unsupported toolchain. in function 'cv::dnn::cuda4dnn::csl::ManagedPtr<float>::ManagedPtr'; in GPU_Multimodal StarDist Segmentation.groovy at line number -2. ERROR: org.bytedeco.opencv.opencv_dnn.Net.forward(Native Method); qupath.opencv.dnn.OpenCVDnn$OpenCVNetFunction.predict(OpenCVDnn.java:718); qupath.opencv.dnn.OpenCVDnn$OpenCVNetFunction.predict(OpenCVDnn.java:732); qupath.opencv.dnn.DnnModel.convertAndPredict(DnnModel.java:100); qupath.ext.stardist.StarDist2D.detectObjectsForTile(StarDist2D.java:1249); qupath.ext.stardist.StarDist2D.lambda$detectObjects$7(StarDist2D.java:934); java.base/java.util.stream.ReferencePipeline$7$1.accept(Unknown Source); java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source); java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source); java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source); java.base/java.util.stream.ReduceOps$ReduceTask.doLeaf(Unknown Source); java.bas,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1180:1935,error,error,1935,https://qupath.github.io,https://github.com/qupath/qupath/issues/1180,1,['error'],['error']
Availability,"e; - [x] The description text would ideally be lighter in color (e.g. using opacity); - [x] The purpose of the 'remove' and 'update' buttons is unclear - especially for built-in extension that can't be changed. ; - [x] Does update 'Check for updates' or actually update?; - [x] I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. > I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start;. I'd be more inclined to even do ""version: 0.1.0"" rather than having column headers that would be largely redundant. > Does update 'Check for updates' or actually update?. It checks for updates; if one is available, it asks if you'd like to download it. If not, it pops up a notification saying it's up-to-date. > I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. Yes, similarly it asks if you want to download before going ahead. ![Screenshot from 2023-10-02 22-37-08](https://github.com/qupath/qupath/assets/10779688/b0404e3f-320d-4fbf-b990-3cad161dee24). Note that here the top list is focusable, the bottom isn't. The titles are obviously WIP (see below). Same with the extensions dir button not being full-width (although I don't truly love that personally, it's up to you). > Finally, I think splitting the lists at the top into different sections would make sense, if they have different purposes. Rather than 'servers' and 'extensions', they could be split between 'Built-in extensions' and 'Optional extensions'. That might help explain the differences in behavior. I don't think ""Server"" vs ""extension"" is useful yeah, it seems a bit technical for what this GUI component is. I'd have done core vs non-core, but is there a way of distinguishing between core and non-core extensions? The only distinction I could dig out was those that implement GitHubProject (or ImageServerProvider). I ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490:1800,down,download,1800,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490,1,['down'],['download']
Availability,"eDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191); at java.lang.Thread.run(Thread.java:745); ERROR: Unable to build whole slide server - check your classpath for a suitable library (e.g. OpenSlide, BioFormats); 	; ERROR: C:\ProgramData\App-V\46D140A1-54B6-42AA-A72A-99DBBA62CB07\6C3334CF-C8C7-49EA-9F90-47768DFB4373\Root\VFS\ProgramFilesX64\QuPath\app\QuPathApp.jar;qupath/qupath-core-0.1.2.jar;qupath/qupath-core-awt-0.1.2.jar;qupath/qupath-core-processing-0.1.2.jar;qupath/qupath-core-processing-awt-0.1.2.jar;qupath/qupath-extension-ij-0.1.2.jar;qupath/qupath-extension-input-0.1.2.jar;qupath/qupath-extension-opencv-0.1.2.jar;qupath/qupath-extension-openslide-0.1.2.jar;qupath/qupath-extension-pen-0.1.2.jar;qupath/qupath-extension-script-editor-0.1.2.jar;qupath/qupath-gui-fx-0.1.2.jar;qupath/qupath-processing-ij-0.1.2.jar;qupath/qupath-processing-opencv-0.1.2.jar;jars/commons-math3-3.6.1.jar;jars/controlsfx-8.40.12.jar;jars/flowless-0.4.5.jar;jars/groovy-2.4.7.jar;jars/groovy-jsr223-2.4.7.jar;jars/gson-2.8.0.jar;jars/ij-1.51g.jar;jars/jfxtras-common-8.0-r5.jar;jars/jfxtras-menu-8.0-r5.jar;jars/jinput-2.0.6.jar;jars/jpen-2-150301.jar;jars/jutils-1.0.0.jar;jars/logback-classic-1.1.7.jar;jars/logback-core-1.1.7.jar;jars/opencv-3.1.0.jar;jars/openslide-3.4.1_2.ja",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/351:4222,ERROR,ERROR,4222,https://qupath.github.io,https://github.com/qupath/qupath/issues/351,1,['ERROR'],['ERROR']
Availability,ease use [image.sc](https://forum.image.sc/tags/qupath) instead); * [x] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [x] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; `QuPath convert-ome` returns exit code 0 despite failure. **To Reproduce**; Steps to reproduce the behavior:; ```; scale=2; tile=1024; comp=ZLIB; input=broken_image.tif; output=broke_omage.ome.tif; QuPath convert-ome $input $output \; --pyramid-scale=$scale \; --tile-size=$tile \; --compression=$comp \; --parallelize; ```; Output (truncated); ```; 20:39:42.582 [main] [INFO ] q.l.i.s.b.BioFormatsServerOptions - Setting max Bio-Formats readers to 2; 20:39:43.272 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.274 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.275 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; ...; 20:39:43.604 [main] [ERROR] q.l.i.writers.ome.ConvertCommand - Unable to open file:broken_image.tif; java.io.IOException: Unable to open file:broken_image.tif; at qupath.lib.images.servers.ImageServers.buildServer(ImageServers.java:306); at qupath.lib.images.writers.ome.ConvertCommand.run(ConvertCommand.java:147); at picocli.CommandLine.executeUserObject(CommandLine.java:2026); at picocli.CommandLine.access$1500(CommandLine.java:148); at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2461); at picocli.CommandLine$RunLast.handle(CommandLine.java:2453); at picocli.CommandLine$RunLast.handle(CommandLine.java:2415); at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2273); at picocli.CommandLine$RunLast.execute(CommandLine.java:2417); at picocli.CommandLine.ex,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1451:1444,ERROR,ERROR,1444,https://qupath.github.io,https://github.com/qupath/qupath/issues/1451,1,['ERROR'],['ERROR']
Availability,"ed from `BioFormatsImageServer` for reuse.; 2. **Nice to have** The `BioFormatsImageServer` also has a reader pool concept, which *might* be beneficial for the OMERO image server as well.; ; Achieving 1. requires a class to do the parsing, but doesn't necessarily require reader wrappers and reader pools at all. These seem to be where the main dangers lie, because Bio-Formats is complex to use in a multithreaded context. On the other hand, the parsing doesn't need to know anything about an `IFormatReader` - it just needs the minimal, immutable info required to convert bytes-to-BufferedImage. If you can extract the bytes-to-BufferedImage logic in an entirely threadsafe way, and leave as much as possible of `BioFormatsImageServer` as it is, then that could be the safest way to make a v0.5.0 update and help with the OMERO extension. In general, I am cautious about about extensive refactoring of `BioFormatsImageServer` because I've written so many subtly broken versions of it myself throughout in QuPath's history :) It's really hard to get 'right'; the previous version was messy, but the code seemed to work pretty reliably (well, except for [this...](https://forum.image.sc/t/qupath-stardist-extension-error-with-large-images/80221/19)). ---. I realise it's *incredibly hard* (/ impossible) to write this without failing examples, and most public examples *won't* fail because we get lucky with the different series types. My guess is that .czi is one of the more awkward formats. Based on that, I found another failing example here: https://zenodo.org/record/7149674. Specifically, check out the label and macro images with the PR vs. in QuPath v0.4.4. In this case, the problem is related to the 'interleaved' interpretation: there's no exception thrown, but the image obtained via the PR is incorrect. If you open the image in QuPath, this Groovy script shows that the `isInterleaved()` status changes for different series, which I think is the explanation:. ```groovy; def wrapper = ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547:4861,reliab,reliably,4861,https://qupath.github.io,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547,1,['reliab'],['reliably']
Availability,"ed in a way ImageJ can access all in one go. > So, I want to use quPath for what it does very, very good and fast, cell identification, segmentation and classification, and not for anything else. Scripting in FIJI is more or less easy for me, so once I have the .roi files, I can do almost anything with them there. Just, for the ""QuPath part"", I dont even know how to script those simple steps, because there is not much documentation, no Qupath API, so its hard for me to even get started. I am not a professional programmer, but a biologist with some (Python, Java, ImageJ) programming background,. Ok, but please keep in mind that ImageJ has existed in some form for more than 30 years, and has had input from many fantastically knowledgeable people both in terms of development and documentation. There has been a huge amount of volunteer effort, alongside many components and plugins developed as part of larger, funded projects. On the other hand, QuPath was created and documented essentially by one person and has only been available for a couple of years. The same person also wrote all the wiki, the [blog](https://petebankhead.github.io), is the main person writing scripts to everyone who asks on GitHub and Google Groups, teaches workshops on it when invited and has got time, and wrote detailed instructions for setting it up with IntelliJ to script with auto-completion & access to the full source code (and internal javadocs) [here](https://github.com/qupath/qupath/wiki/Advanced-scripting-with-IntelliJ). At this time, all continued work and support is entirely unfunded and unpaid. I'm also not a professional programmer (nor a biologist). As described in the [Getting help](https://github.com/qupath/qupath/wiki/Getting-help) section of the Wiki, the [Google Group](https://groups.google.com/forum/#!forum/qupath-users) exists to answer questions and cover any gaps in the documentation. Therefore, please do try to be fair in your expectations :). > Overall, its very sad that th",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/182#issuecomment-401546472:1910,avail,available,1910,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401546472,1,['avail'],['available']
Availability,"ed* before the plugin was complete (and had fired any hierarchy updates / logged any workflow steps) then exceptions or unexpected behavior could occur. It might conceivably have happened previously when using multiple viewers, but I don't know of any cases where it did - because QuPath locks the UI when plugins run, and this seemed to be working ok. So this PR also includes a new design greatly simplifies `PluginRunner` to simple run tasks in parallel with progress notification - with some special logic for `PathTask` implementations. Alongside that,; ```java; PathPlugin.runPlugin(PluginRunner pluginRunner, String arg); ```; has been updated to; ```java; PathPlugin.runPlugin(PluginRunner pluginRunner, ImageData<T> imageData, String arg)`; ```; so that there's no need to request the `ImageData` from the plugin runner - and it's possible to ensure this remains unchanged while all the work of the plugin is completex, no matter what might go on in the UI. Early indications are that the code is just simpler and more robust. However, it's still a core change that *could* potentially have broken lots of things, so most analysis-related commands ought to be checked (e.g. cell detection, or anything else involving `PathPlugin`). ## ImageJ, macOS & menubars. The ImageJ macro runner was an implementation of `PathPlugin`. When exploring how this was affected, I dug into a longstanding bug since QuPath's beginning: basically, ImageJ and QuPath's menus don't play together nicely on macOS: https://github.com/qupath/qupath/issues/6. Shortcuts/accelerators are particularly badly affected: the QuPath ones either don't work, or would trigger both the accelerator within QuPath *and* within ImageJ. This PR attempts to finally fix this, by; 1. overriding any system menubar request from QuPath while ImageJ is running, so that QuPath's menu becomes 'demoted' to within the app; 2. blocking ImageJ's last menubar whenever it no longer has any focussed stage (i.e. whenever a JavaFX window is a",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1318:2337,robust,robust,2337,https://qupath.github.io,https://github.com/qupath/qupath/pull/1318,1,['robust'],['robust']
Availability,"elrv/QuPath/extensions; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /home/joelrv/Downloads/bftools/test_pyramid_fullsize.tif; 12:25:56.155 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - Estimating H-DAB staining; 12:25:56.537 [JavaFX Application Thread] [INFO ] qupath.lib.gui.viewer.QuPathViewer - Image data set to ImageData: Brightfield (H-DAB), test_pyramid_fullsize; ```; I not familiar enough with the code to",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472813709:1883,avail,available,1883,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709,1,['avail'],['available']
Availability,"ely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [x] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [x] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; `QuPath convert-ome` returns exit code 0 despite failure. **To Reproduce**; Steps to reproduce the behavior:; ```; scale=2; tile=1024; comp=ZLIB; input=broken_image.tif; output=broke_omage.ome.tif; QuPath convert-ome $input $output \; --pyramid-scale=$scale \; --tile-size=$tile \; --compression=$comp \; --parallelize; ```; Output (truncated); ```; 20:39:42.582 [main] [INFO ] q.l.i.s.b.BioFormatsServerOptions - Setting max Bio-Formats readers to 2; 20:39:43.272 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.274 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.275 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; ...; 20:39:43.604 [main] [ERROR] q.l.i.writers.ome.ConvertCommand - Unable to open file:broken_image.tif; java.io.IOException: Unable to open file:broken_image.tif; at qupath.lib.images.servers.ImageServers.buildServer(ImageServers.java:306); at qupath.lib.images.writers.ome.ConvertCommand.run(ConvertCommand.java:147); at picocli.CommandLine.executeUserObject(CommandLine.java:2026); at picocli.CommandLine.access$1500(CommandLine.java:148); at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2461); at picocli.CommandLine$RunLast.handle(CommandLine.java:2453); at picocli.CommandLine$RunLast.handle(CommandLine.java:2415); at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2273); at picocli.CommandLine$RunLast.execute(CommandLine",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1451:1392,Error,Error,1392,https://qupath.github.io,https://github.com/qupath/qupath/issues/1451,1,['Error'],['Error']
Availability,"ent version 12.2.0); 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1953.255.0); 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.30.112); 	/usr/lib/libresolv.9.dylib (compatibility version 1.0.0, current version 1.0.0); 	/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-x86-64/darwin-x86-64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-x86-64/darwin-x86-64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/local/opt/gettext/lib/libintl.8.dylib (compatibility version 12.0.0, current version 12.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.0.0); 	/usr/local/opt/fontconfig/lib/libfontconfig.1.dylib (compatibility version 14.0.0, current version 14.0.0); 	/usr/local/opt/freetype/lib/libfreetype.6.dylib (compatibility version 27.0.0, current version 27.1.0); 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1953.255.0); 	/usr/local/opt/xz/lib/liblzma.5.dylib (compatibility version 10.0.0, current version 10.4.0); 	/usr/lib/libiconv.2.dylib (compatibility version 7.0.0, current version 7.0.0); 	/usr/local/opt/pcre2/lib/libpcre2-8.0.dylib (compatibility version 12.0.0, current version 12.2.0); 	/System/Library/Frameworks/Foundation",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:3381,Down,Downloads,3381,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495,1,['Down'],['Downloads']
Availability,"enthesis, to `OS-2.ndpi (1`; 4. Attempt to duplicate this image. Note the following error:; ![image](https://user-images.githubusercontent.com/52012166/161337956-5eabd4e7-0b3e-4a29-8b1b-914e3484cda7.png); See full log at the end. **Expected behavior**; Regex patterns should not be evaluated for when duplicating image names. I'd imagine there are a lot of other character combinations that can trigger regex-related errors during duplication, or perhaps other operations too. I wonder if there's any cool things that can be done with this, such as programmatically creating image names during image duplication... **Desktop (please complete the following information):**; - OS: Windows 10; - QuPath Version: 0.4.0-SNAPSHOT. **Additional context**; Full error log:; ```; ERROR: QuPath exception: Unclosed group near index 24; OS-2.ndpi (1 \(([\d]+)\); java.util.regex.PatternSyntaxException: Unclosed group near index 24; OS-2.ndpi (1 \(([\d]+)\); at java.base/java.util.regex.Pattern.error(Unknown Source); at java.base/java.util.regex.Pattern.accept(Unknown Source); at java.base/java.util.regex.Pattern.group0(Unknown Source); at java.base/java.util.regex.Pattern.sequence(Unknown Source); at java.base/java.util.regex.Pattern.expr(Unknown Source); at java.base/java.util.regex.Pattern.compile(Unknown Source); at java.base/java.util.regex.Pattern.<init>(Unknown Source); at java.base/java.util.regex.Pattern.compile(Unknown Source); at qupath.lib.common.GeneralTools.generateDistinctName(GeneralTools.java:774); at qupath.lib.gui.panes.ProjectBrowser.lambda$getPopup$14(ProjectBrowser.java:456); at org.controlsfx.control.action.Action.handle(Action.java:423); at org.controlsfx.control.action.Action.handle(Action.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHand",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/942:1631,error,error,1631,https://qupath.github.io,https://github.com/qupath/qupath/issues/942,1,['error'],['error']
Availability,"er each. On Nov 9, 2017 9:23 AM, ""Eline8"" <notifications@github.com> wrote:. > Thank you both for answering! @Svidro <https://github.com/svidro> and; > @petebankhead <https://github.com/petebankhead>; > I started all over again, so I don't have the workflow anymore.; > Nevertheless, what I meant was that I used indeed the pointing tool. I had; > two populations, one negative and one positive. After I ran the positive; > cell detection, the negative population was gone. And unfortunately, there; > is no undo button.; >; > My goal was indeed compare the manual counting and the automated counting.; > For optimization.; >; > I don't know whether the error is the lack of RAM, I checked and i have; > 3,3GB available. And I only have 4 ROI's in one image. When I run the; > analysis, I make sure nothing is selected and choose the option 'all; > annotation'. It might be, but it might be not, because sometimes it also; > does not analyse only 1 ROI, but other times it does. However, the log it; > says 'memory error'. the programs that are running on my computer besides; > Qupaht are google chrome (1tab), one note with an excel file, and file; > explorer.; >; > [image: capture]; > <https://user-images.githubusercontent.com/33484227/32604466-0266ac66-c54e-11e7-9a9b-ede61554510b.PNG>; > [image: capture2]; > <https://user-images.githubusercontent.com/33484227/32604472-05d80ef8-c54e-11e7-97d1-b1540f6ee388.PNG>; > [image: capture3]; > <https://user-images.githubusercontent.com/33484227/32604473-07eafa66-c54e-11e7-9aca-94fae7d0e9da.PNG>; >; > I really don't know why sometimes it works or not, but i'll be more; > careful in what I'll do.; > Unfortunately, there was also no backup file in the folder after the; > failure of saving.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/112#issuecomment-343227944>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-a",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343229740:1386,error,error,1386,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343229740,1,['error'],['error']
Availability,"er.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:708); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.java:819); at qupath.lib.display.ImageDisplay.updateHistogramMap(ImageDisplay.java:554); at qupath.lib.display.ImageDisplay.setImageData(ImageDisplay.java:144); at qupath.lib.gui.viewer.QuPathViewer.setImageData(QuPathViewer.java:1385); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2459); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2368); at qupath.lib.gui.commands.OpenCommand.run(OpenCommand.java:51); at qupath.lib.gui.QuPathGUI.lambda$createCommandAction$50(",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:3868,Down,Downloads,3868,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['Down'],['Downloads']
Availability,"eral\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.images.servers.openslide.OpenslideServerBuilder; ERROR: Load ImageData; at; qupath.lib.images.servers.ImageServerBuilder$DefaultImageServerBuilder.buildOriginal(ImageServerBuilder.java:341); at; qupath.lib.images.servers.ImageServerBuilder$AbstractServerBuilder.build(ImageServerBuilder.java:152); at; qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:718); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2695); at; qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at; com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at; com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at; com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at; com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at; com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at; com.sun.j",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/396#issuecomment-827610434:2048,ERROR,ERROR,2048,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434,1,['ERROR'],['ERROR']
Availability,"ered some reproducible crashes on macOS (Macbook Air, M1) when running the below script for ~100 images within a project. The script will run fine at first. After ~100 images, an exception will be thrown. And after a few more executions, the app will crash. > ERROR: unable to create native thread: possibly out of memory or process/resource limits reached"". . **To Reproduce**. ```groovy; import qupath.lib.gui.viewer.overlays.HierarchyOverlay; import qupath.lib.gui.images.servers.RenderedImageServer. def viewer = getCurrentViewer(); def imageData = getCurrentImageData(). def name = GeneralTools.getNameWithoutExtension(imageData.getServer().getMetadata().getName()); def pathOutput = <output_path>. double requestedPixelSize = 15; double downsample = requestedPixelSize / imageData.getServer().getPixelCalibration().getAveragedPixelSize(). def display = qupath.lib.display.ImageDisplay.create(imageData); def server = new RenderedImageServer.Builder(imageData); .display(display); .downsamples(downsample); .layers(new HierarchyOverlay(viewer.getImageRegionStore(), viewer.getOverlayOptions(), imageData)); .build(). ```. **Expected behavior**; The above script can run for the whole project without crashing. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: macOS (MacBook Air, M1); - QuPath Version: 0.5.1-arm64. **Additional context**. Stack trace; ```; ERROR: unable to create native thread: possibly out of memory or process/resource limits reached in thread_leak_repro.groovy at line number 25; java.base/java.lang.Thread.start0(Native Method); java.base/java.lang.Thread.start(Unknown Source); java.base/java.lang.System$2.start(Unknown Source); java.base/jdk.internal.vm.SharedThreadContainer.start(Unknown Source); java.base/java.util.concurrent.ThreadPoolExecutor.addWorker(Unknown Source); java.base/java.util.concurrent.ThreadPoolExecutor.execute(Unknown Source); qupath.lib.gui.images.stor",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1561:1490,down,downsamples,1490,https://qupath.github.io,https://github.com/qupath/qupath/issues/1561,2,['down'],"['downsample', 'downsamples']"
Availability,"error showing; java.long.NullpointException; I tired Reset preferences, but did not work; could you help?",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/745:0,error,error,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/745,1,['error'],['error']
Availability,"es describing the same problem. ## Bug report. **Describe the bug**; Building QuPath from source as described below with CUDA GPU support will throw an error, meaning the official 0.4.0 release (built 2022-12-07) cannot run StarDist on GPUs. Tested with RTX 3090 and GTX 1660 Ti GPUs. I have a version of QuPath built on 2022-11-21 which has no problem running StarDist on the GPU, so it's likely tied to any commits between this period. Issue taken from forum post: https://forum.image.sc/t/stardist-gpu-support-unknown-error/74779. **To Reproduce**; Steps to reproduce the behavior:; 1. Build QuPath from source using the following command:; ```; git clone https://github.com/qupath/qupath; cd qupath; ./gradlew clean jpackage -Pcuda-redist; ```; 2. Install either the 0.3.2 or 0.4.0 releases of the StarDist extension: https://github.com/qupath/qupath-extension-stardist/releases; 3. Download pretrained models in .pb format; 4. Draw an annotation on a brightfield image; 5. Download the following script: https://github.com/MarkZaidi/Universal-StarDist-for-QuPath/blob/main/GPU_Multimodal%20StarDist%20Segmentation.groovy; 6. Run the script; 7. Observe the following error message:; ```; INFO: Performing detection on Brightfield image using single-channel trained model; INFO: [Annotation]; ERROR: OpenCV(4.6.0) D:\a\javacpp-presets\javacpp-presets\opencv\cppbuild\windows-x86_64-gpu\opencv-4.6.0\modules\dnn\src\cuda4dnn\csl\memory.hpp:54: error: (-217:Gpu API call) the provided PTX was compiled with an unsupported toolchain. in function 'cv::dnn::cuda4dnn::csl::ManagedPtr<float>::ManagedPtr'; in GPU_Multimodal StarDist Segmentation.groovy at line number -2. ERROR: org.bytedeco.opencv.opencv_dnn.Net.forward(Native Method); qupath.opencv.dnn.OpenCVDnn$OpenCVNetFunction.predict(OpenCVDnn.java:718); qupath.opencv.dnn.OpenCVDnn$OpenCVNetFunction.predict(OpenCVDnn.java:732); qupath.opencv.dnn.DnnModel.convertAndPredict(DnnModel.java:100); qupath.ext.stardist.StarDist2D.detectObjectsForTile",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1180:1467,Down,Download,1467,https://qupath.github.io,https://github.com/qupath/qupath/issues/1180,1,['Down'],['Download']
Availability,essMouseEvent(Scene.java:1762); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:380); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:294); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$354(GlassViewEventHandler.java:416); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:415); at com.sun.glass.ui.View.handleMouseEvent(View.java:555); at com.sun.glass.ui.View.notifyMouse(View.java:937); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191); at java.lang.Thread.run(Thread.java:745); ERROR: QuPath exception; at qupath.lib.gui.helpers.DisplayHelpers.estimateImageType(DisplayHelpers.java:125); at qupath.lib.gui.QuPathGUI.createNewImageData(QuPathGUI.java:2269); at qupath.lib.gui.QuPathGUI.createNewImageData(QuPathGUI.java:2258); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2236); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2152); at qupath.lib.gui.commands.OpenCommand.run(OpenCommand.java:51); at qupath.lib.gui.QuPathGUI.lambda$createCommandAction$46(QuPathGUI.java:3122); at org.controlsfx.control.action.Action.handle(Action.java:419); at org.controlsfx.control.action.Action.handle(Action.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatc,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/221:15075,ERROR,ERROR,15075,https://qupath.github.io,https://github.com/qupath/qupath/issues/221,1,['ERROR'],['ERROR']
Availability,essMouseEvent(Scene.java:1762); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:380); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:294); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$354(GlassViewEventHandler.java:416); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:415); at com.sun.glass.ui.View.handleMouseEvent(View.java:555); at com.sun.glass.ui.View.notifyMouse(View.java:937); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191); at java.lang.Thread.run(Thread.java:745); ERROR: QuPath exception; at qupath.lib.images.servers.OpenslideImageServer.<init>(OpenslideImageServer.java:91); at qupath.lib.images.servers.OpenslideServerBuilder.buildServer(OpenslideServerBuilder.java:47); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2227); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2151); at qupath.lib.gui.panels.PathImageDetailsPanel.tryToOpenSelectedEntry(PathImageDetailsPanel.java:293); at qupath.lib.gui.panels.PathImageDetailsPanel.lambda$2(PathImageDetailsPanel.java:261); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59),MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/35:10713,ERROR,ERROR,10713,https://qupath.github.io,https://github.com/qupath/qupath/issues/35,1,['ERROR'],['ERROR']
Availability,"esult in substantial lag. Ideally it shouldn't, but if it does I wouldn't say it's necessarily a bug... since QuPath is already needing to do a *lot* of stuff to get acceptable performance across a wide range of scenarios. Specifically here:; * For a downsample >= 1, repainting detections caches tiles and multiple resolution levels for performance - this is why QuPath can handle millions of objects.; * For downsample < 1, repainting happens for all detections in the field of view (like for annotations) for improved appearance without nasty bitmap-upsampling artefacts. This is inevitably laggier than using cached tiles, but caching itself has considerable overhead in terms of memory and worse appearance. I think this tradeoff makes sense, since details really matter when viewing the image at high magnification but the number of objects visible should be limited (possibly thousands, but not millions). However it does mean that if you have a large enough monitor, many detections, and a downsample value slightly less than 1, performance there certainly can be a noticeable lag... and object connections make this worse by meaning that thousands more lines need to be rendered. However, investigating this revealed that QuPath was painting all the connections twice, which certainly wasn't helping things :). So the PR fixes the double-painting bug. Along the way, it adds a spatial cache that enables QuPath to be a bit smarter about which connections it paints. The main reason for this change is to overcome an issue with long connections sometimes being broken at some resolutions:. ### Old behavior:; ![connection_bug-1](https://user-images.githubusercontent.com/4690904/194024037-795fceaa-e542-4c67-8fa2-84e6a8aca691.png). ### New behavior:; ![connection_fix-1](https://user-images.githubusercontent.com/4690904/194024122-00080b78-b59b-4b8f-bf0d-aa990683268c.png). Together, I'm not certain whether or not you'll see a substantial improvement in performance - but these changes addres",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1069#issuecomment-1268167189:1199,down,downsample,1199,https://qupath.github.io,https://github.com/qupath/qupath/issues/1069#issuecomment-1268167189,1,['down'],['downsample']
Availability,"exemple error message when trying multiplexed IF images with bioformats on ; (if disabled, just getting error message saying it can't open it for multiplexed IF). ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Basic",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409021767:8,error,error,8,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability,f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downlo,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16375,down,downloads,16375,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,"file:/home/joelrv/software/opt/QuPath/qupath_0.2.0-m1/app/groovy-2.5.6.jar) to constructor java.lang.invoke.MethodHandles$Lookup(java.lang.Class,int); WARNING: Please consider reporting this to the maintainers of org.codehaus.groovy.vmplugin.v7.Java7$1; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations; WARNING: All illegal access operations will be denied in a future release; 12:07:43.276 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1; 12:07:43.360 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: null; 12:07:43.360 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:07:43.365 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:08:18.669 [JavaFX Application Thread] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; 12:08:18.670 [JavaFX Application Thread] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; 12:08:18.670 [JavaFX Application Thread] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.objective-power' not available, will return default value NaN; 12:08:18.677 [JavaFX Application Thread] [WARN ] q.l.i.s.o.OpenslideServerBuilder - Unable to open file:/media/joelrv/SDB/Dropbox/PhD/ST_Thyroid/r_plotting/input_data/new_sample/ndpi_and_tifs/st1_d1_HE_final.tif with OpenSlide: Pixel width must be a finite number > 0, not NaN; 12:08:19.076 [JavaFX Application Thread] [INFO ] loci.formats.ImageReader - TiffDelegateReader initializing /media/joelrv/SDB/Dropbox/PhD/ST_Thyroid/r_plotting/input_data/new_sample/ndpi_and_tifs/st1_d1_HE_final.tif; 12:08:19.078 [JavaFX Application Thread] [INFO ] loci.formats.in.MinimalTiffReader - Reading IFDs; 12:08:19.172 [JavaFX Application Thread] [",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279:2495,avail,available,2495,https://qupath.github.io,https://github.com/qupath/qupath/issues/279,1,['avail'],['available']
Availability,"for related issues here to see if the issues has already been reported?**. If not, please do these things first. Otherwise, please fill in the template below with as much information as possible to help us reproduce the bug & fix it. ## Bug report. **Describe the bug**; A clear and concise description of what the bug is:; TMA tif files of magnification 0.25, 0.625, 1.25, 2.5, and 5x all load with a bright pink background. I don't know how to remove the pink color and the TMA dearrayer doesn't work properly. TMA tiff files larger than 5x will not load at all. 10, 20, and 40x fail to be added to the project. Error message, ""Failed to load one image."" is shown when trying to add one file at a time. **To Reproduce**; Steps to reproduce the behavior:; 1. Click on 'Create project' (make a new folder and name it); 2. Click on 'Add images'; 3. Click on 'choose files'; 4. Navigate to file and select it. ; 5. Click on 'Open'; 6. Click on 'Import'; 7. The result is either a pink thumbnail and pink image or an error message and no image added. **Expected behavior**; A clear and concise description of what you expected to happen:; All tif files should be added to the project and names and thumbnails should be visible on the left hand side of QuPath. Slide backgrounds should be white and not pink. (I know the background isn't actually pink because the files open correctly in ImageScope.). **Screenshots**; Pink background for TMA tiff files; ![2019-11-07_1304](https://user-images.githubusercontent.com/6699385/68389277-db8b8c80-0162-11ea-9a67-38f297589135.png). Failure to upload error message with the attempted upload file highlighted in the Windows window; ![2019-11-07_1334](https://user-images.githubusercontent.com/6699385/68389530-74baa300-0163-11ea-993d-a55b99b93934.png). **Desktop (please complete the following information):**; - OS: Windows 10 Enterprise version 1809; Intel i7; 64GB RAM (45 GB alotted for QuPath); - QuPath Version: 0.2.0-m5. **Additional context**; The accompa",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/374:1329,error,error,1329,https://qupath.github.io,https://github.com/qupath/qupath/issues/374,1,['error'],['error']
Availability,"from:[0+=1]a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]............bBottom is:6337a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]............bLeft is:0a Right break at idx from:[0+=1]a Right break at idx from:[0+=1]a Right break at idx from:[0+=1]a Right break at idx from:[0+=1]............bRight is:4736z =1 ; Y =0.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=0, w=2000, h=1500, z=0).tif ; ...........Written tile 1 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=0, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; ...........Written tile 2 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; ...........Written tile 3 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; Y =1500.0 ;",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:7517,error,error,7517,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,"g ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; 09:32:08.264 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; java.io.IOException: Premature end of JPEG file; 	at org.openslide.OpenSlide.checkError(OpenSlide.java:178); 	at org.openslide.OpenSlide.paintRegionARGB(OpenSlide.java:245); 	at qupath.lib.images.servers.OpenslideImageServer.readBufferedImage(OpenslideImageServer.java:203); 	at qupath.lib.images.servers.OpenslideImageServer.readBufferedImage(OpenslideImageServer.java:1); 	at qupath.lib.images.servers.AbstractImageServer.getBufferedThumbnail(AbstractImageServer.java:70); 	at qupath.lib.images.servers.OpenslideImageServer.<init>(OpenslideImageServer.java:147); 	at qupath.lib.images.servers.OpenslideServerBuilder.buildServer(OpenslideServerBuilder.java:51); 	at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); 	at qupath.li",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/65:1998,ERROR,ERROR,1998,https://qupath.github.io,https://github.com/qupath/qupath/issues/65,1,['ERROR'],['ERROR']
Availability,"galAccessException: class qupath.lib.gui.prefs.QuPathStyleManager cannot access class com.sun.javafx.css.StyleManager (in module javafx.graphics) because module javafx.graphics does not export com.sun.javafx.css to unnamed module @6150c3ec; at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:392); at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:674); at java.base/java.lang.reflect.Method.invoke(Method.java:560); at qupath.lib.gui.prefs.QuPathStyleManager.addStyleSheets(QuPathStyleManager.java:576); ```. These could be addressed by adding; ```gradle; application {; // ... other stuff. // Necessary when using ./gradlew run to support style manager to change themes; applicationDefaultJvmArgs << '--add-opens'; applicationDefaultJvmArgs << 'javafx.graphics/com.sun.javafx.css=ALL-UNNAMED'; }; ```; However this doesn't seem to be needed when using the `jpackage` output, since there the module path still is not actually used (verified using the above script again). Problems still persisted with variant-related issues when building `qupath-app` specifically, which I eventually tracked down to the use of https://github.com/jk1/Gradle-License-Report. The workaround is to incorporate `excludeGroups = ['org.openjfx']` into `licenseReport` - which is unfortunate, but the JavaFX licenses should still be bundled in QuPath via other means. ----. The requirement for `--add-opens` made this a slightly scary change to make shortly before release, in case it is also needed in other places - but as far as I can tell its importance is limited to when `./gradlew run` is used and not the final packages. The reason for doing this anyway is that it should resolve a longstanding problem whereby JavaFX dependencies with classifiers relating to the build platform are included in the pom. This can be seen [here](https://maven.scijava.org/content/repositories/releases/io/github/qupath/qupath-gui-fx/0.4.4/qupath-gui-fx-0.4.4.pom).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1364:2279,down,down,2279,https://qupath.github.io,https://github.com/qupath/qupath/pull/1364,1,['down'],['down']
Availability,"ge as .tif files; import ij.IJ; import ij.ImagePlus; import qupath.lib.gui.ImageWriterTools; import qupath.imagej.helpers.IJTools. def imp = IJTools.convertToImagePlus(server, request).getImage(). import qupath.lib.images.servers.ImageServer; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QP. import java.awt.image.BufferedImage. /*; * Adjustable parameters; */; int tileWidthPixels =1500 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 70 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput =('D:/QUPATH 2 - AT8/Exported Images' ) // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!. int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = serverOriginal.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsam",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309:1422,error,errors,1422,https://qupath.github.io,https://github.com/qupath/qupath/issues/309,1,['error'],['errors']
Availability,"gePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.NIOByteBufferProvider.allocate(NIOByteBufferProvider.java:112); at loci.common.NIOFileHandle.buffer(NIOFileHandle.java:647); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:133); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:151); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:165); at loci.common.Location.getHandle(Location.java:522); at loci.common.Location.getHandle(Location.java:462); at l",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-493938867:8447,ERROR,ERROR,8447,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867,1,['ERROR'],['ERROR']
Availability,"ger image may be via [Send region to ImageJ](https://github.com/qupath/qupath/wiki/Working-with-ImageJ#sending-image-regions-to-imagej) - from memory I think there's still a size limitation, but it should be bigger.; > ; > Otherwise, it is necessary to run a script. The closest matching script I can think of is [this one](https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d). By default, it will export the entire image at a very low resolution because of these lines; > ; > ```groovy; > // Aim for an output resolution of approx 20 µm/pixel; > double requestedPixelSize = 20; > ...; > // Calculate downsample factor depending on the requested pixel size; > double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); > def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()); > ```; > ; > You can switch it to export only the region corresponding to the selected object, at full resolution, as follows:; > ; > ```groovy; > // Calculate downsample factor depending on the requested pixel size; > double downsample = 1.0; > def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, getSelectedROI()); > ```; > ; > Let me know if that doesn't do what you need, and hopefully some other script change could help. Personally, I'd use the ImageJ method for exporting isolated regions occasionally, and a script if I wanted to export lots of regions in a single batch.; > ; > > Note: I've tagged this as _enhancement_ because I think it would make sense to increase the export size limit through the user interface to make this easier. I had forgotten the existing limit was so small... I have almost the same need as @nathan. I have some .tiff WSI want to convert them to ndarray. I downloaded the 0.1.2 version( 0.2.3 wouldn't work with the script above) and run the script. The script ""QuPath_export_images.groovy"" gave me downsampled image as it should. I followed your",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/127#issuecomment-853621895:1285,down,downsample,1285,https://qupath.github.io,https://github.com/qupath/qupath/issues/127#issuecomment-853621895,2,['down'],['downsample']
Availability,"get full insights.; ; * Get more help at https://help.gradle.org; ; BUILD FAILED in 721ms. The instructions that I am following are as follows:. $ git clone https://github.com/qupath/qupath; $ cd qupath; $ ./gradlew clean jpackage. I have:; ```; $ uname -a; Linux goku.bu.edu 3.10.0-1160.59.1.el7.x86_64 #1 SMP Wed Feb 23 16:47:03 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux. ```; and; ```; $ lsb_release -a; LSB Version:	:core-4.1-amd64:core-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.9.2009 (Core); Release:	7.9.2009; Codename:	Core; ```. also:; ```; $ java -version; openjdk version ""1.8.0_322""; OpenJDK Runtime Environment (build 1.8.0_322-b06); OpenJDK 64-Bit Server VM (build 25.322-b06, mixed mode); ```. I also don't understand why it is looking elsewhere than where I have zipped it and set the directory to it as in:; ```; [jalal@goku downloads]$ sudo vi /etc/profile.d/gradle.sh; [jalal@goku downloads]$ sudo chmod +x /etc/profile.d/gradle.sh; [jalal@goku downloads]$ source /etc/profile.d/gradle.sh; [jalal@goku downloads]$ gradle -v. ------------------------------------------------------------; Gradle 7.4.2; ------------------------------------------------------------. Build time: 2022-03-31 15:25:29 UTC; Revision: 540473b8118064efcc264694cbcaa4b677f61041. Kotlin: 1.5.31; Groovy: 3.0.9; Ant: Apache Ant(TM) version 1.10.11 compiled on July 10 2021; JVM: 1.8.0_322 (Red Hat, Inc. 25.322-b06); OS: Linux 3.10.0-1160.59.1.el7.x86_64 amd64. [jalal@goku downloads]$ cat /etc/profile.d/gradle.sh . export GRADLE_HOME=/opt/gradle/gradle-7.4.2; export PATH=${GRADLE_HOME}/bin:${PATH}. $ tail -1 ~/.bashrc; export PATH=$PATH:/opt/gradle/gradle-7.4.2/bin; $ source ~/.bashrc. ```. The plugin that is reported as missing in the error is in ; ```; [jalal@goku ~]$ find /opt/gradle -name ""gradle-plugins-7.4.2.jar""; /opt/gradle/gradle-7.4.2/lib/plugins/gradle-plugins-7.4.2.jar; ```. Full log of `./gradlew clean jpackage --stacktrace`: https://pastebin.com/raw/RuuJnuTe",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/950:1562,down,downloads,1562,https://qupath.github.io,https://github.com/qupath/qupath/issues/950,1,['down'],['downloads']
Availability,getting Failed to launch JVM error. Can open m8 without problems; Thanks. ![image](https://user-images.githubusercontent.com/62674450/80439704-1cc05600-88d5-11ea-95fe-ebbe661cc4ed.png),MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/458:29,error,error,29,https://qupath.github.io,https://github.com/qupath/qupath/issues/458,1,['error'],['error']
Availability,"github.com/qupath/qupath/files/3857086/data.zip); 3. Open project with m6. I don't recall the version that created this qpdata file, but it works with m5. It contains some non-hierarchical annotations. Stack trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.simplifyByDownsample(PathHierarchyPaintingHelper.java:542); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.getShape(PathHierarchyPaintingHelper.java:584); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintROI(PathHierarchyPaintingHelper.java:434); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintObject(PathHierarchyPaintingHelper.java:400); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1528,avail,available,1528,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027,1,['avail'],['available']
Availability,"gle image (not a pyramidal whole slide image), then it should certainly be possible. Image pyramids can't be written with QuPath currently.; > ; > One way to get a larger image may be via [Send region to ImageJ](https://github.com/qupath/qupath/wiki/Working-with-ImageJ#sending-image-regions-to-imagej) - from memory I think there's still a size limitation, but it should be bigger.; > ; > Otherwise, it is necessary to run a script. The closest matching script I can think of is [this one](https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d). By default, it will export the entire image at a very low resolution because of these lines; > ; > ```groovy; > // Aim for an output resolution of approx 20 µm/pixel; > double requestedPixelSize = 20; > ...; > // Calculate downsample factor depending on the requested pixel size; > double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); > def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()); > ```; > ; > You can switch it to export only the region corresponding to the selected object, at full resolution, as follows:; > ; > ```groovy; > // Calculate downsample factor depending on the requested pixel size; > double downsample = 1.0; > def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, getSelectedROI()); > ```; > ; > Let me know if that doesn't do what you need, and hopefully some other script change could help. Personally, I'd use the ImageJ method for exporting isolated regions occasionally, and a script if I wanted to export lots of regions in a single batch.; > ; > > Note: I've tagged this as _enhancement_ because I think it would make sense to increase the export size limit through the user interface to make this easier. I had forgotten the existing limit was so small... I have almost the same need as @nathan. I have some .tiff WSI want to convert them to ndarray. I downloaded the 0.1.2 ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/127#issuecomment-853621895:1067,down,downsample,1067,https://qupath.github.io,https://github.com/qupath/qupath/issues/127#issuecomment-853621895,1,['down'],['downsample']
Availability,"ground"" : "" 210 208 209 ""}');; Thread.sleep(100); runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; Thread.sleep(100); selectAnnotations();; Thread.sleep(100); runPlugin('qupath.imagej.detect.nuclei.WatershedCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 14.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.09, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; Thread.sleep(100). Error log:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:1985); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.clearSelection(TableView.java:2733); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2928); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItemsObserver(TableView.java:2907); at javafx.scene.cont",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424986075:1810,ERROR,ERROR,1810,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075,1,['ERROR'],['ERROR']
Availability,"h in case the server gives us trouble; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); File file = new File(dirOutput, name); ImageWriterTools.writeImageRegionWithOverlay(imageData, overlayOptions, request, file.getAbsolutePath()). // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; catch (Exception e) {; // Check if we have had a sufficient number of errors to just give up; nErrors++;; if (nErrors > maxErrors) {; println(""Maximum number of errors exceeded - aborting...""); return; }; e.printStackTrace(); }; }; }; }. ```. The error is on line 91 when I try to access the ImagePlusServer server, which obviously doesn't exist anymore. . ```; ERROR: Error at line 7: No such property: server for class: Script48. ERROR: Script error; at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.unwrap(ScriptBytecodeAdapter.java:65); at org.codehaus.groovy.runtime.callsite.PogoGetPropertySite.getProperty(PogoGetPropertySite.java:51); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callGroovyObjectGetProperty(AbstractCallSite.java:309); at Script48.run(Script48.groovy:8); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1034); at java.base/java.util.concurrent.Executors$Runna",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309:4428,ERROR,ERROR,4428,https://qupath.github.io,https://github.com/qupath/qupath/issues/309,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"h.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Smoothing using TMA cores; INFO: Processing complete in 0.18 seconds; INFO: Completed!; INFO: ; qupath.lib.plugins.objects.SmoothFeaturesPlugin {""fwhmMicrons"": 25.0, ""smoothWithinClasses"": false, ""useLegacyNames"": false}; INFO: Measurement mapper limits for Smoothed: 25 µm: Nucleus/Cell area ratio: 0.12291267514228821, 0.4222889840602875; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Stroma: 138; INFO: Tumor: 165; INFO: 303 objects available for classifier training from 1 images; INFO: Cell: DAB OD max Quartile 1: 0.2062; INFO: Cell: DAB OD max Median: 0.4188; INFO: Cell: DAB OD max Quartile 3: 0.5843; INFO: Cell: DAB OD max Mean: 0.4174; INFO: Cell: DAB OD max Std.Dev.: 0.2091; INFO: Cell: DAB OD mean Quartile 1: 0.0725; INFO: Cell: DAB OD mean Median: 0.1700; INFO: Cell: DAB OD mean Quartile 3: 0.2724; INFO: Cell: DAB OD mean Mean: 0.1814; INFO: Cell: DAB OD mean Std.Dev.: 0.1103; INFO: Feature selection: Classifier set to train using all 67 available features; INFO: Stroma: 138; INFO: Tumor: 165; INFO: 303 objects available for classifier training from 1 images; INFO: Training size: 67x303; INFO: Responses size: 1x303; INFO: RTrees classifier termination criteria: { type: 1, maxCount: 50, epsilon: 0.0}; INFO: Classifier trained with 303 samples; INFO: Classifier training time: 0.04 seco",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/210#issuecomment-418647572:5218,avail,available,5218,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572,1,['avail'],['available']
Availability,"h/issues/77>. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/249#issuecomment-442877107>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ArWoyy9fQqh1OZIfaIx3IN1LUJdlXAEKks5uz_51gaJpZM4Y5w90>. La presente comunicazione, che potrebbe contenere informazioni riservate e/o protette da segreto professionale, è indirizzata esclusivamente ai destinatari della medesima qui indicati. Ogni informazione qui contenuta, che non sia relativa alla nostra attività caratteristica, deve essere considerata come non inviata. Nel caso in cui abbiate ricevuto per errore la presente comunicazione, vogliate cortesemente darcene immediata notizia, rispondendo a questo stesso indirizzo di e-mail, e poi procedere alla cancellazione di questo messaggio dal Vostro sistema. E' strettamente proibito e potrebbe essere fonte di violazione di legge qualsiasi uso, comunicazione, copia o diffusione dei contenuti di questa comunicazione da parte di chi la abbia ricevuta per errore o in violazione degli scopi della presente. Ricordiamo che la tecnologia di trasmissione utilizzata non consente di garantire l’autenticità del mittente né l’integrità dei dati. This communication, which may contain confidential and/or legally privileged information, is intended solely for the use of the intended addressees. All information or advice contained in this communication is subject to the terms and conditions provided by the agreement governing each particular client engagement. If you have received this communication in error, please notify us immediately by responding to this email; then please delete it from your system. Any use, disclosure, copying or distribution of the contents of this communication by a not-intended recipient or in violation of the purposes of this communication is strictly prohibited and may be unlawful. The transmission technology used to send this mail can grant neithe",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/249#issuecomment-442919733:1766,error,errore,1766,https://qupath.github.io,https://github.com/qupath/qupath/issues/249#issuecomment-442919733,1,['error'],['errore']
Availability,"hed the QuPath project in 0.4.1, and the load time was nearly instantaneous. Which, while resolving the issue, also means that the issue exists outside of QuPath. So, for some reason, the thumbnail previews are lost after a period of time, and don't seem to coincide with closing the folder or restarting the computer. The first thing I attempted to preserve thumbnails was to ensure ""Always show icons, never thumbnails"" in the folder options was unchecked, however it already was by default:; ![image](https://user-images.githubusercontent.com/52012166/211071879-ac70ef62-925f-4fe5-8ec3-10763d391393.png); Toggling this field didn't seem to have any impact on project loading performance, since in either case, the thumbnails were already generated (just replaced with an icon if the box is checked).; Next, under Windows performance options, I noticed ""save taskbar thumbnail previews"" was unchecked by default. I've checked it, and so far, I don't seem to have trouble loading projects that already have thumbnails generated in explorer. ; ![image](https://user-images.githubusercontent.com/52012166/211072664-c211658b-7aa6-435d-8067-830b4e1620b1.png). I'll continue to test other projects and rebooting my computer, to confirm if this has resolved the issue. TL;DR: **Check ""save taskbar thumbnail previews"" under Windows performance options. Subsequent loads of the project should now be much faster**. EDIT: So far, this fix persists after rebooting the system. EDIT 2: I've opened the project again after a few hours, verifying that the thumbnails exist in Windows Explorer. I'm now getting a long project load time (although anecdotally, it feels a bit faster), which means the above fix might not work as it could be tied to something other than thumbnails generated in Explorer. Currently, the project is located on the OS-installed drive (NVMe SSD), but the images are located on a separate local NVMe SSD. I'll see if moving both the project and images onto the OS drive changes anything",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1154#issuecomment-1373971580:1711,reboot,rebooting,1711,https://qupath.github.io,https://github.com/qupath/qupath/issues/1154#issuecomment-1373971580,2,['reboot'],['rebooting']
Availability,"hello friendly qupath team, i wanted to let you all know that github actions now has an apple m1 runner. this might be useful to package qupath on arm macs -- though i see that qupath already has arm releases for apple. https://github.blog/changelog/2024-01-30-github-actions-introducing-the-new-m1-macos-runner-available-to-open-source/",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1458:312,avail,available-to-open-source,312,https://qupath.github.io,https://github.com/qupath/qupath/issues/1458,1,['avail'],['available-to-open-source']
Availability,"hen resizing an integer image, pixels with an output slightly below the 'correct' value can sometimes become rounded down to the value below. This is unlikely to make any obvious difference in most cases, but it can be a significant problem when exporting a labeled image. Specifically, @SalmaDammak spotted that this impacts the `TileExporter` when using labeled images with resizing, causing some pixels to have the wrong labels in some cases (see https://github.com/qupath/qupath/pull/964). This effect shouldn't be seen when using nearest neighbor interpolation with OpenCV, as controlled by the boolean parameter to the `BufferedImageTools.resize` method. However, the `TileExporter` requests smooth interpolation - even though it shouldn't for labeled images (see [here](https://github.com/qupath/qupath/blob/v0.3.2/qupath-core/src/main/java/qupath/lib/images/writers/TileExporter.java#L870)). Therefore, there are two related issues:; * the behavior of `resize` needs to be improved to avoid the flooring error; * the `TileExporter` should switch to nearest neighbor resizing for labeled images. **To Reproduce**; The resizing issue can be reproduced without relying on the `TileExporter` class by running the following script:. ```groovy; import java.awt.image.BufferedImage; import java.awt.Color. // Create an image with a constant value; def img = new BufferedImage(150, 150, BufferedImage.TYPE_BYTE_GRAY); def g2d = img.createGraphics(); g2d.setColor(new Color(5, 5, 5)); g2d.fillRect(0, 0, img.getWidth(), img.getHeight()); g2d.dispose(). // Resize the image; def imgResized = BufferedImageTools.resize(img, img.getWidth()-1, img.getHeight()-1, true). // Show using ImageJ; def imp = IJTools.convertToUncalibratedImagePlus(""Original"", img); def impResized = IJTools.convertToUncalibratedImagePlus(""Resized"", imgResized); imp.show(); impResized.show(); ```. **Expected behavior**; The script above should show two images, with the pixel value of 5 everywhere. What is actually seen is this",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/974:1654,error,error,1654,https://qupath.github.io,https://github.com/qupath/qupath/issues/974,1,['error'],['error']
Availability,however I do get the following error when starting qupath:. `; [JavaFX Application Thread] [ERROR] q.l.i.s.o.OpenslideServerBuilder - Could not load OpenSlide native libraries; java.lang.UnsatisfiedLinkError: no openslide-jni in java.library.path: /usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib; at java.base/java.lang.ClassLoader.loadLibrary(Unknown Source); at java.base/java.lang.Runtime.loadLibrary0(Unknown Source); at java.base/java.lang.System.loadLibrary(Unknown Source); at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); at qupath.lib.images.servers.openslide.OpenslideServerBuilder.<clinit>(OpenslideServerBuilder.java:88); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source); at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.get(Unknown Source); at java.base/java.util.ServiceLoader$3.next(Unknown Source); at qupath.lib.images.servers.ImageServerProvider.getInstalledImageServerBuilders(ImageServerProvider.java:104); at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1601); at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:1059); at qupath.lib.gui.QuPathApp.start(QuPathApp.java:60); at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.su,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/615#issuecomment-725509556:31,error,error,31,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-725509556,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"htMicrons); PixelWidthMicrons = 1.0; print(""PixelWidthMicrons:"" + PixelWidthMicrons); PixelZSpacingMicrons = 1.0; print(""PixelZSpacingMicrons:"" + PixelZSpacingMicrons); }; ```; The weird error take place at the line,which is a very common line:; `PixelWidthMicrons = server.getPixelWidthMicrons(); `; ```; 15:23:36.355 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, D:\\QMDownload\\5\\~!@#$%^&( )_+=-0987654321`{}[%23];',\\single_neur~!@#$%^&( )_+=-0987654321`{}[%23];',on_40X_3.mrxs, -script, D:\\QMDownload\\5\\~!@#$%^&( )_+=-0987654321`{}[%23];',\\tpce66e23b_cda9_4090_b04a_b5603607aba8.groovy ; 15:23:36.512 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1 ; 15:23:36.562 [main] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.level[0].tile-width' not available, will return default value 256.0 ; 15:23:36.562 [main] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.level[0].tile-height' not available, will return default value 256.0 ; 15:23:36.812 [main] [INFO ] q.l.i.s.o.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@2f953efd: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 87 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0) ; 15:23:36.812 [main] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for D:\\QMDownload\\5\\~!@#$%^&( )_+=-0987654321`{}[%23];',\\single_neur~!@#$%^&( )_+=-0987654321`{}[%23];',on_40X_3.mrxs ; WARNING: An illegal reflective access operation has occurred ; WARNING: Illegal reflective access by org.codehaus.groovy.vmplugin.v7.Java7$1 (file:/C:/Program%20Files/QuPath-0.2.0-m1/app/groovy-2.5.6.jar) to constructor java.lang.invoke.MethodHandles$Lookup(java.lang.Class,int) ; WARNING: Please consider reporting this to the maintainers of org.codehaus.groovy.vmplugin.v7.Java7$1 ; WARNING: Use --illegal-access=warn to enable warnings of further ill",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/286:1614,avail,available,1614,https://qupath.github.io,https://github.com/qupath/qupath/issues/286,1,['avail'],['available']
Availability,"https://secure-web.cisco.com/15zJZ1AC2HfUFv9L0mLItqMCfEQMcq1aVBJmggNtWQuQ1aMdkxQL4M8DQsziZIjbQclRsiUgnd4btBVr7WmNM9GAmb5IdGegWqzsNoLW7i0t8ZduDtcd418DQ9BIIDpRAJC02UjlE2keamNPfGPyTA13hxoJ6aI6fRjs8P6PPD3ag1gjsZJuHqXh28XIp9ClIy6uiD9WiE2a29pnEogefoBAUSjm8iBfMR0HcxqAtG_TdnAk0f4Y8BA4E5sVwzFhbDhm_alns-l7jx4c65825lN1brlaamgEFYOcr-bx0yB5-ONuFLKVRdD6nCGWcI1iPAsoohE7nnVhyPIYtURWpKQ/https%3A%2F%2Fgithub.com%2Fsuzeteguarda> you could try posting your question on the forum at https://forum.image.sc/tag/qupath<https://secure-web.cisco.com/13_E9lRMQxY8xtZmKYPnw2mmwaiElPiHzTIMUOwQH_-6FzgRz4LkCsf_cFjrfUWLwo9750a0MmRr_eXTVN0eusQkomn-qYLuoCcVIKhtD0lyGLisH8Fxc-WFZwGzOR3GcJ4WLvQ2nVTFF7JEFSGly69C9pq9zGxJ69U6IM5ck9ofp9vkUV14NNMWH0h1u9pMUi3qXwaLEHdnCfRaAU7pipTjdj7etnYxMl6fke2A03VF49uEY6P4XmHIM3ote076fSVZpQqVTzYq0orKjFBwoKIbptcmC4XxHSSCRt900YIULIVQAtzU62qtHv_TEqaLa9vgoz2qhsY9NbYDfMfFPtA/https%3A%2F%2Fforum.image.sc%2Ftag%2Fqupath>. The error is that there isn't enough memory, but without having the classifier and knowing how much memory you have, I can't really guess what could be responsible. (This topic is really about loading training data to create classifiers, not classifiers themselves, so I will hide these posts to avoid distraction). —; Reply to this email directly, view it on GitHub<https://secure-web.cisco.com/1S_KCvGqBkfLiU4jUNxk9Bycpt04YwO2EwOrgjo7gUjY2EmjAMNPYCK9KZ3g1BcPOjN1yFkyZLgJnmGWBrpfDiblAR5l3lwK7LfMcHNHJqtYoWGQYJ9WYQ6dCoewz0Xk9P5-ZDRFW4OknOTxChetxm4Bs7LEng-ebDLB6a6AAXrEy8mWNCALTRoJs81HHMcvnMhDSjonYiBRlurLnCnBJZ4a9YvcrT8TplefFlZKST3NVLHrWPL3RgIyoJsDosp8GVf6MH94rRAHuopZp9J5pOcqjQmwnlC51e34AFYd1-8yRTnj7X0qzcw7aHtnILPwFXQIqYdBTGMqf-iZSDUUexg/https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F493%23issuecomment-1791280813>, or unsubscribe<https://secure-web.cisco.com/16fbsI3bTg2IXBtZ19rtjLXO9mTw2FP1PcVHSk2XFBBZjPYBQWKvTLiqsGr7UCwdHhDGRsg9tR1qzmQGBIyUICyyRtVvGvh-eu_HtL8Iyt807-ztz3U-i887buKPXzn2O2YTuhy7Xwb13QKvs-TXcflZ21x0cz69j7BIZd4l-aFk4r0Kw89JYQAASuY7o5O0vLb801LbUikLbLtblZgM",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:2275,error,error,2275,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738,1,['error'],['error']
Availability,i am getting an error when i try to view teh .scn file.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/273:16,error,error,16,https://qupath.github.io,https://github.com/qupath/qupath/issues/273,1,['error'],['error']
Availability,"i've downloaded version 0.4.3 but when selecting it in the Finder it claims to be version 1 (in Quick Look, Column View and Get Info):; <img width=""253"" alt=""Screenshot 2023-03-04 at 21 43 05"" src=""https://user-images.githubusercontent.com/1261954/222927870-ef6175d8-5665-46f3-b300-b60ad2eedd7a.png"">; <img width=""243"" alt=""Screenshot 2023-03-04 at 21 43 10"" src=""https://user-images.githubusercontent.com/1261954/222927871-494add8b-cbda-45ca-aafd-2f6b31fe19ae.png"">. the CFBundleVersion and CFBundleShortVersionString entries in your Info.plist file are damaged",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1250:5,down,downloaded,5,https://qupath.github.io,https://github.com/qupath/qupath/issues/1250,1,['down'],['downloaded']
Availability,"ication.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:708); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.j",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:3354,Down,Downloads,3354,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['Down'],['Downloads']
Availability,"icult to fill the image buffer. On the larger image I could quite easily cap out the image buffer around 5GB and then sometimes ran into errors. Although sometimes the program would simply go over the 5GB limit and everything would be fine. I am afraid I wasn't able to find anything usefully consistent. . Anyway, the error, whenever I ran into it looks familiar:. > ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:163); at java.lang.Thread.run(Thread.java:745); Caused by Java heap space at java.util.ArrayDeque.allocateElements(ArrayDeque.java:142); at java.util.ArrayDeque.<init>(ArrayDeque.java:198). Edit:; Actually this part might be more useful:. > INFO: Processing complete in 55.47 seconds; INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.05, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; ERROR: Error reading image region; at loci.formats.tiff.IFD.getIFDLongArray(IFD.java:411); at loci.formats.tiff.IFD.getStripByteCounts(IFD.java:805); at loci.formats.tiff.TiffParser.getTile(TiffParser.java:682)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343336690:2223,error,error,2223,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343336690,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"if the bug has already been fixed in the next release; * [X] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; Building QuPath from source as described below with CUDA GPU support will throw an error, meaning the official 0.4.0 release (built 2022-12-07) cannot run StarDist on GPUs. Tested with RTX 3090 and GTX 1660 Ti GPUs. I have a version of QuPath built on 2022-11-21 which has no problem running StarDist on the GPU, so it's likely tied to any commits between this period. Issue taken from forum post: https://forum.image.sc/t/stardist-gpu-support-unknown-error/74779. **To Reproduce**; Steps to reproduce the behavior:; 1. Build QuPath from source using the following command:; ```; git clone https://github.com/qupath/qupath; cd qupath; ./gradlew clean jpackage -Pcuda-redist; ```; 2. Install either the 0.3.2 or 0.4.0 releases of the StarDist extension: https://github.com/qupath/qupath-extension-stardist/releases; 3. Download pretrained models in .pb format; 4. Draw an annotation on a brightfield image; 5. Download the following script: https://github.com/MarkZaidi/Universal-StarDist-for-QuPath/blob/main/GPU_Multimodal%20StarDist%20Segmentation.groovy; 6. Run the script; 7. Observe the following error message:; ```; INFO: Performing detection on Brightfield image using single-channel trained model; INFO: [Annotation]; ERROR: OpenCV(4.6.0) D:\a\javacpp-presets\javacpp-presets\opencv\cppbuild\windows-x86_64-gpu\opencv-4.6.0\modules\dnn\src\cuda4dnn\csl\memory.hpp:54: error: (-217:Gpu API call) the provided PTX was compiled with an unsupported toolchain. in function 'cv::dnn::cuda4dnn::csl::ManagedPtr<float>::ManagedPtr'; in GPU_Multimodal StarDist Segmentation.groovy at line number -2. ERROR: org.bytedeco.opencv.opencv_dnn.Net.forward(Native Method); qupath.opencv.dnn.OpenCVDnn$OpenCVNetFunction.predict(OpenCVDnn.java:718); qupath.opencv.dnn.OpenCVDnn$OpenCVNetFunction.predict(OpenCVDnn.java:732); qupath.opencv.dnn",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1180:1376,Down,Download,1376,https://qupath.github.io,https://github.com/qupath/qupath/issues/1180,1,['Down'],['Download']
Availability,"igDecimal` if not explicitly made something else) can be a bit troublesome, but more so when using most Groovy-specific features. Fortunately, it looks like the lambda situation will change with Groovy 3.0: http://groovy-lang.org/releasenotes/groovy-3.0.html. With implementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for different scripting languages. I'm tentatively considering a switch to use _GroovyShell_ instead, which looks like it makes it easier to access other classes. I haven't yet explored the implications, but I think that Option 1) having really good Groovy suppor",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/253#issuecomment-450918869:1251,ERROR,ERROR,1251,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,ijavacpp.so; 7f7941400000-7f7941c00000 rw-p 00000000 00:00 0 ; 7f7941d69000-7f7941e0e000 r--p 00000000 fd:03 721040939 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans-Bold.ttf; 7f7941e0e000-7f7941e12000 ---p 00000000 00:00 0 ; 7f7941e12000-7f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 ,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16135,down,downloads,16135,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,"ile got saved in ; `C:\Users\oburri\AppData\Local\Temp\qupath-memo-15327719930616011555\biop\Image_Processing\User_Projects\Olivier\USERNAME_REDACTED\Sample images - metadata`. This mimmics the architecture I have where the actual file is stored:; `L:\biop\Image_Processing\User_Projects\Olivier\USERNAME_REDACTED\Sample images - metadata`. But in previous versions the memo files were in the same location as the original file. Is this new behavior intended?. And as it was the case in the other issue, this file fails to get deleted by BioFormats after considering it ""invalid"". This error message showed up in a script that I ran after reopening a project I created in QuPath 0.3.0-SNAPSHOT. ```; WARN: file deletion failed C:\Users\oburri\AppData\Local\Temp\qupath-memo-15327719930616011555\biop\Image_Processing\User_Projects\Olivier\USERNAME_REDACTED\Sample images - metadata\.MCF7_hPR_OVX_3rd_M6-10_Ki67.vsi.bfmemo; ERROR: temp file rename returned false: C:\Users\oburri\AppData\Local\Temp\qupath-memo-15327719930616011555\biop\Image_Processing\User_Projects\Olivier\valentina.scabia_UPBRI\Sample images - metadata\.MCF7_hPR_OVX_3rd_M6-10_Ki67.vsi.bfmemo5671337359207729134; ERROR: deleting invalid memo file: C:\Users\oburri\AppData\Local\Temp\qupath-memo-15327719930616011555\biop\Image_Processing\User_Projects\Olivier\valentina.scabia_UPBRI\Sample images - metadata\.MCF7_hPR_OVX_3rd_M6-10_Ki67.vsi.bfmemo; at loci.formats.in.JPEGReader$DefaultJPEGReaderConstructorAccess.newInstance(Unknown Source); at com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy$1.newInstance(Kryo.java:1275); at com.esotericsoftware.kryo.Kryo.newInstance(Kryo.java:1139); at com.esotericsoftware.kryo.serializers.FieldSerializer.create(FieldSerializer.java:562); at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:538); at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:731); at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:125); at com.es",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/717:1109,ERROR,ERROR,1109,https://qupath.github.io,https://github.com/qupath/qupath/issues/717,1,['ERROR'],['ERROR']
Availability,"ile:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ; ...........Written tile 6 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ; Y =3000.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 7 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 8 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ; ...........Written tile 9 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ;",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:10639,error,error,10639,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,"iling days for cell detection, or maybe SLICs and subcellular detections on large images? And yes, I'm probably not typical :) Never used CZI images, so I have no idea about the effect of those. Anyway, giving a few things a shot. One thing I already noticed is that when I zip around an image and cap out the available memory that way, I tend to run into detection problems. However, as you say, this isn't a hardware memory limit problem, as I can lower the memory cap down to 2GB on a fairly large image (Annotation area 1.3x10^8 um^2) and have it run successfully, but slowly. If I fill up those 2 GB by looking around the image, though, it failed it's cell detection. Even on a comparatively small image (2.5x10^6 um^2) I ran into problems once the memory was filled. On the other hand, once I bumped the available memory up to 5GB, I stopped running into errors on the smaller image, though it was very difficult to fill the image buffer. On the larger image I could quite easily cap out the image buffer around 5GB and then sometimes ran into errors. Although sometimes the program would simply go over the 5GB limit and everything would be fine. I am afraid I wasn't able to find anything usefully consistent. . Anyway, the error, whenever I ran into it looks familiar:. > ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:163); at java.lang.Thread.run(Thread.java:745); Caused by Java heap space at java.util.ArrayDeque.allocateElements(ArrayDeq",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343336690:1089,error,errors,1089,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343336690,1,['error'],['errors']
Availability,"image tab is stored. . **To Reproduce**; Steps to reproduce the behavior:; 1. Load any png or jpg; 2. Change the pixel size in the image tab to a number; 3. Run this code: . ```; import qupath.lib.images.servers.ImageServer; import qupath.lib.objects.classes.PathClassFactory. import java.awt.image.BufferedImage. import static qupath.lib.gui.scripting.QPEx.*. def imageData=getCurrentImageData(); Map<PathClass, Integer> labels = new LinkedHashMap<>();; int label = 1; labels.put(PathClassFactory.getPathClassUnclassified(), label++);; for (def annotation : imageData.getHierarchy().getAnnotationObjects()) {; def pathClass = annotation.getPathClass();; if (pathClass != null && !labels.containsKey(pathClass)); labels.put(pathClass, label++);; }. for (def annotation : imageData.getHierarchy().getAnnotationObjects()) {; def pathClass = annotation.getPathClass();; if (pathClass != null && !labels.containsKey(pathClass)); labels.put(pathClass, label++);; }. double downsample=1; ImageServer<BufferedImage> server = new LabeledImageServer.Builder(imageData); .backgroundLabel(0); .addLabels(labels); .downsample(downsample); .build();. print('Original Image Server'); print(imageData.getServer().getPixelCalibration().getAveragedPixelSize()); print(imageData.getServer().getPixelCalibration().getPixelWidthUnit()); print(imageData.getServer().getPixelCalibration().getAveragedPixelSizeMicrons()). print('Labeled Image Server'); print(server.getPixelCalibration().getAveragedPixelSize()); print(server.getPixelCalibration().getPixelWidthUnit()); print(server.getPixelCalibration().getAveragedPixelSizeMicrons()); ```. **Expected behavior**; The labeled image server should know the pixel calibration input in the image tab. . **Screenshots**; If applicable, add screenshots to help explain your problem.; ![image](https://user-images.githubusercontent.com/29264310/90062797-16e05c00-dc9d-11ea-978b-4c321ce7dffb.png). **Desktop (please complete the following information):**; - Windows 10; - QuPath 0.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/591:1659,down,downsample,1659,https://qupath.github.io,https://github.com/qupath/qupath/issues/591,1,['down'],['downsample']
Availability,"in 0.18 seconds; INFO: Completed!; INFO: ; qupath.lib.plugins.objects.SmoothFeaturesPlugin {""fwhmMicrons"": 25.0, ""smoothWithinClasses"": false, ""useLegacyNames"": false}; INFO: Measurement mapper limits for Smoothed: 25 µm: Nucleus/Cell area ratio: 0.12291267514228821, 0.4222889840602875; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Stroma: 138; INFO: Tumor: 165; INFO: 303 objects available for classifier training from 1 images; INFO: Cell: DAB OD max Quartile 1: 0.2062; INFO: Cell: DAB OD max Median: 0.4188; INFO: Cell: DAB OD max Quartile 3: 0.5843; INFO: Cell: DAB OD max Mean: 0.4174; INFO: Cell: DAB OD max Std.Dev.: 0.2091; INFO: Cell: DAB OD mean Quartile 1: 0.0725; INFO: Cell: DAB OD mean Median: 0.1700; INFO: Cell: DAB OD mean Quartile 3: 0.2724; INFO: Cell: DAB OD mean Mean: 0.1814; INFO: Cell: DAB OD mean Std.Dev.: 0.1103; INFO: Feature selection: Classifier set to train using all 67 available features; INFO: Stroma: 138; INFO: Tumor: 165; INFO: 303 objects available for classifier training from 1 images; INFO: Training size: 67x303; INFO: Responses size: 1x303; INFO: RTrees classifier termination criteria: { type: 1, maxCount: 50, epsilon: 0.0}; INFO: Classifier trained with 303 samples; INFO: Classifier training time: 0.04 seconds; INFO: Classification time: 0.08 seconds; INFO: Percentage of correctly classified objects in TRAINING set: 0.00% (n=303); WARN: It is *strongly* advised not to report accuracies based on testing using the training set!; INFO: Number of unclassified objects in the test set: 303 (100.00%); INFO: Confusion matrix; 	Stroma	 Tumor; Stroma	 0	 0; Tumor	 0	 0. INFO: Number of reclassified objects: 4375 of 4375. Please let me know if you have any suggestions on how I can run the classifier succesfully. Best,; Sanne",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/210#issuecomment-418647572:5740,avail,available,5740,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572,2,['avail'],['available']
Availability,"in that space. For the kind of staining I see in your image, I would also recommend the _Analyze->Cell analysis->Subcellular detection_ command, as it can generate a much more exact value for the ""amount of stain above a threshold"" within a given cell, without being diluted by empty space. This command will only work, though, if your image has Pixel width and height included in the metadata. Once you have the data you need on a cell to cell basis, it's as simple as creating a classifier, either with a training set and the classifier command, or creating your own, exact value, classifier. The slower way of doing this is creating your own classifier through the menu system, which Pete shows:; https://github.com/qupath/qupath/wiki/Object-classifications; about half way down the page. Using that setup, you can generate positive cells for each channel and a set of dual positive cells. My preferred method is using a script to classify. The following script is a toned down version of one Pete has posted elsewhere, but it generally gets the job done. Plus you can expand it out as much as you want using the code that is currently there. Want to classify based on two features? Add a ""def myNewFeature"" and a new ""double val2"" line inside the for loop. You can make the if statments as convoluted as you have the time or desire for, and it is much easier than changing things through the menu classification system.; ```. import qupath.lib.objects.classes.PathClass; import qupath.lib.objects.classes.PathClassFactory. def Positive = PathClassFactory.getPathClass(""Positive""); def Negative = PathClassFactory.getPathClass(""Negative""). //I honestly forget the exact text for the given fluorescence features; //but feature would be one of those; def feature = ""Channel 2: Mean intensity""; def threshold = 0.1; def threshold2 = 1.5. // Loop through all detections *** Change this to getCellObjects() or getTileObjects() if you have a mix of both and only want to classify one type; resetDetection",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/126#issuecomment-351212559:1576,down,down,1576,https://qupath.github.io,https://github.com/qupath/qupath/issues/126#issuecomment-351212559,1,['down'],['down']
Availability,"in the *Hierarchy* tab. Basically, JavaFX’s ```TreeView``` is forced to do a rather slow check along all expanded nodes to look for objects... and if you have a single expanded node containing >~ 10 000 objects expanded within the ```TreeView``` then this can be *extremely slow*. It likely hasn't actually crashed… but it would take an unrealistically long time to become responsive again. The problem is intermittent because expanded nodes with only a few thousand objects in them (e.g. TMA cores) can be handled quite quickly. Additionally, large numbers of objects can be handled so long as the parent objects within the tree aren't expanded, or the objects are contained within multiple smaller annotations rather than a single, very large region. As such, TMA slides and core biopsies likely work (given that the objects are stored within smaller regions), while some whole face sections may be problematic depending on what processing is performed and how. Since the issue appears to be isolated to the display of large numbers of detections within a ```TreeView```, a straightforward fix in a future QuPath release may be to simply exclude detections from the ```TreeView``` by default, showing instead only TMA cores and annotations. In the meantime, hopefully this description of the issue might help anyone encountering it to know the cause, and look for workarounds for their uses. For example, if it is still required to analyze a single large region containing a large number of detections, then *Analyze &rarr; Region identification &rarr; Tiles & superpixels &rarr; Create tiles* has recently received an update to enable the creation of 'annotation tiles'. Using this, the larger annotation can be partitioned into smaller ones, which can then be processed separately. Some additional care is needed to ensure that the correct annotations are selected at the appropriate time using this method, but it can be used to avoid the performance issue before a longer term fix is available.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/41:2734,avail,available,2734,https://qupath.github.io,https://github.com/qupath/qupath/issues/41,1,['avail'],['available']
Availability,"ing into an image with multiple OME-TIFF files and have gotten the same results. - The software used to generate the OME-TIFF files was through a two-step process of converting MRXS files (written from 3DHISTECH software) into OME-TIFF files through the help of conversion tools from Glencoesoftware:. The first step used a tool called bioformats2raw (https://github.com/glencoesoftware/bioformats2raw) which converts MRXS files into Zarr file-type. . The second step used a tool called raw2ometiff (https://github.com/glencoesoftware/raw2ometiff) which converts the Zarr file into an OME-TIFF file type. - While viewing an image with QuPath-0.3.0 and checking _Show log_, these were the errors reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. For QuPath-0.3.2, the result was the same except it did not have the ""WARN"" error. For QuPath-0.3.1 (which also can not cache tiles or load the resolution properly when zooming in), this was reported:. WARN: Unable to obtain full image format info for file:/C:/Users/aj_si/Desktop/poh_mrxs/OME-TIFF/C001110926E04.ome.tiff (class java.util.NoSuchElementException); INFO: Setting max Bio-Formats readers to 4; INFO: Image data set to ImageData: Not set, C001110926E04.ome.tiff - C001110926E04. ### Here is an example of my image while zoomed in using QuPath-0.3.0; <img width=""960"" alt=""QuPath_030_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751366-613ce0e7-1dc4-4e03-a0f4-8a055db1f3d7.PNG"">. ### Here is an example of my image while zoomed in using QuPath-0.3.2 (looks the same on QuPath-0.3.1); <img width=""960"" alt=""QuPath_032_zoomed"" src=""https://user-images.githubusercontent.com/98191884/157751374-6702bd00-8f17-4005-a56c-7b3a96f6c258.PNG"">. As well, here is a link to download two of my OME-TIFF images, if you would like",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/904#issuecomment-1064493475:1105,error,error,1105,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1064493475,1,['error'],['error']
Availability,"ing/GITHUB/qupath/qupath-extension-pen/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-script-editor/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-osx.jar into build/qupath; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-osx.jar into build/qupath; LICENSE PATH: /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/license-unknown.txt; Task :createPackage FAILED. Please specify where I can find a suitable packager! Something like this:; gradlew createPackage -Ppackager=/full/path/to/jpackage; Current value of -Ppackager is /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/jdk-13/bin/jpackage; Note: You can also specify this in a gradle.properties file; FAILURE: Build failed with an exception. Where:; Build file '/Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/build.gradle' line: 622. What went wrong:; Execution failed for task ':createPackage'. Please specify where I can find a suitable jpackage!. Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. Get more help at https://help.gradle.org. Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.; Use '--warning-mode all' to show the individual deprecation warnings.; See https://docs.gradle.org/6.0/userguide/command_line_interface.html#sec:command_line_warnings. BUILD FAILED in 9s; 41 actionable tasks: 16 executed, 25 up-to-date. Looking forward fro your response; Brijeshwar,",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/426:2208,FAILURE,FAILURE,2208,https://qupath.github.io,https://github.com/qupath/qupath/issues/426,1,['FAILURE'],['FAILURE']
Availability,"installed then you shouldn't need this.; * OpenSlide and OpenCV require native libraries... which opens a new area of effort for configuring everything properly. I suspect this final point is critical for the 'opening only thumbnails' issue. When opening a new image from a given path, QuPath will test all potential file readers it has access to and check if they can handle the path. If you are only getting the thumbnails, then this implies that the OpenSlide check doesn't pass - which, because OpenSlide *can* certainly handle .svs, suggests that the OpenSlide native libraries are not properly accessible to QuPath, even if the jar is there. When QuPath shows 'ImageJ' as the reader, it does mean just this; ImageJ1 is being used, which can handle a range of small (non-whole-slide) images only, with a combination of its own TIFF reader and Java's ImageIO. It can also sometimes extract the thumbnail from a whole slide image, but only that. If you want to use Bio-Formats you can, but need to download and add it separately - see https://github.com/qupath/qupath-bioformats-extension. If you do install the Bio-Formats extension, then that postpones the immediate need to solve the problem of accessing native libraries; at least, you should be able to open the formats supported by Bio-Formats so long as QuPath can find the Bio-Formats jar file. Still, you won't be able to use OpenSlide or any commands reliant on OpenCV (including the Wand tool). The easiest way to get the native libraries to work is generally to copy them to the directory from which you run the application in the first place. You should be able to find the libraries by looking within an existing QuPath installation, or downloading the binaries for Windows from the OpenSlide/OpenCV websites. But for running from within an IDE, I have only set this up with Eclipse to date and don't know the specifics of getting it to work elsewhere. Finally, I've no doubt that the project could be structured in a way that makes i",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/84#issuecomment-317351735:2200,down,download,2200,https://qupath.github.io,https://github.com/qupath/qupath/issues/84#issuecomment-317351735,1,['down'],['download']
Availability,"intainers of org.codehaus.groovy.vmplugin.v7.Java7$1 ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 15:23:37.065 [main] [ERROR] qupath.QuPath - Error running script! ; javax.script.ScriptException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:158) ; 	at qupath.QuPath.main(QuPath.java:161) ; Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311) ; 	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:151) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:121) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:133) ; 	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:325) ; 	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:224) ; 	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:190) ; 	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:226) ; 	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:196) ; 	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:965) ; 	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647) ; 	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623) ; 	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:600) ; 	at groovy.lang.Groovy",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/286:3503,Error,ErrorCollector,3503,https://qupath.github.io,https://github.com/qupath/qupath/issues/286,1,['Error'],['ErrorCollector']
Availability,"interface, which I'd like to discuss (and sanity-check) with the people most affected. @iwbh15 @NicoKiaru @lacan @ap-- @sdvillal @finglis (sorry if I have missed anyone...). The background is that pixels are currently accessed in QuPath via something like; ```java; RegionRequest request = RegionRequest.createInstance(server.getPath(), downsample, x, y, width, height);; BufferedImage img = server.readBufferedImage(request);; ```. Creating a `RegionRequest` made sense in the early days, since it was used for caching. It remains useful for accessing corresponding regions in paired images, or for creating requests from ROIs, and for avoiding a plethora of parameters (particularly if `z` and `t` indices should be returned as well). However, often it just feels like unnecessary overhead, e.g. when writing simple scripts... or accessing from another language, like Python. It is pretty easy to retrofit support for; ```java; BufferedImage img = server.readBufferedImage(downsample, x, y, width, height, z, t);; BufferedImage img2 = server.readBufferedImage(downsample, x, y, width, height);; ```; by simply adding default methods to the interface. I don't think this should break anything. However this leads to another consideration... `readBufferedImage` isn't a great name, since the method really returns an instance of whatever the generic parameter `T` stands for in `ImageServer<T>`. It happens that this is pretty much always `BufferedImage` in QuPath, but the original idea was that an `ImageServer` could exists that returns something else that might be more convenient (e.g. something from ImgLib2, or an OpenCV `Mat`). So rather than doubling-down on `server.readBufferedImage` I would like to switch to `server.readRegion(RegionRequest)` instead. This feels to me more accurate and intuitive. The tricky bit is not breaking everything else... like parts of paquo or warpy, and all existing scripts that need pixels. The approach I've taken here is to mark `readBufferedImage` as depr",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072:1045,down,downsample,1045,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072,1,['down'],['downsample']
Availability,"into using it; def classList = new ClassList<>(IFormatReader.class); classList.addClass(LeicaSCNReaderRGB); def reader2 = new ImageReader(classList); reader2.setFlattenedResolutions(false); def factory = new ServiceFactory(); def service = factory.getInstance(OMEXMLService.class); def meta = service.createOMEXMLMetadata(); reader2.setMetadataStore(meta); reader2.setId(server.filePath); server.manager.mapPrimary.put(server.filePath, BufferedImageReader.makeBufferedImageReader(reader2)). // Clear the tile cache; def viewer = QPEx.getCurrentViewer(); def imageData = viewer.getImageData(); Platform.runLater {; viewer.setImageData(null); viewer.getImageRegionStore().clearCacheForServer(server); viewer.setImageData(imageData); }. // See https://github.com/openmicroscopy/bioformats/blob/master/components/formats-bsd/src/loci/formats/in/MinimalTiffReader.java; class LeicaSCNReaderRGB extends LeicaSCNReader {. /** Reinitialize the underlying TiffParser. */; protected void initTiffParser() {; QuPathGUI.getInstance().logger.info('INITIALIZING TIFF PARSER'); if (this.in == null) {; try {; this.in = new RandomAccessInputStream(getCurrentFile(), 16);; }; catch (IOException e) {; LOGGER.error(""Could not initialize stream"", e);; }; }; tiffParser = new TiffParserRGB(this.in);; tiffParser.setDoCaching(false);; tiffParser.setUse64BitOffsets(use64Bit);; }. }. class TiffParserRGB extends TiffParser {. public TiffParserRGB(RandomAccessInputStream stream) {; super(stream); }. public byte[] getTile(IFD ifd, byte[] buf, int row, int col) throws FormatException, IOException {; ifd.putIFDValue(IFD.PHOTOMETRIC_INTERPRETATION, PhotoInterp.RGB.code); return super.getTile(ifd, buf, row, col); }. public byte[] getSamples(IFD ifd, byte[] buf, int x, int y,; long width, long height, int overlapX, int overlapY); throws FormatException, IOException; {; ifd.putIFDValue(IFD.PHOTOMETRIC_INTERPRETATION, PhotoInterp.RGB.code); return super.getSamples(ifd, buf, x, y, width, height, overlapX, overlapY). }. }",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-435208389:3002,error,error,3002,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-435208389,1,['error'],['error']
Availability,"inue to investigate, and add an update here when I learn more.; >; > In the meantime, I have been told that the Zeiss ZEN software is able ; > to export the different scenes as separate images, which can then be ; > read into a QuPath project ; > <https://github.com/qupath/qupath/wiki/Projects>. Therefore this may ; > be a workaround that enables you to work with the images in QuPath.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub ; > <https://github.com/qupath/qupath/issues/45#issuecomment-274611030>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/APmGEV0UakHZI556HGXSHym-5fglXkHwks5rVREZgaJpZM4Lrcx8>.; >. -- ; Mit freundlichen Grüßen; Kind regards. Dipl. Biologe; David Haumann; CEO. Tel: +49 (0)7247 9342998-0; Mobil: +49 (0)171 9903171; E-Mail: david.haumann@hs-analysis.com; Webseite: www.hs-analysis.com. HS-Analysis GmbH; Steinbuch Centre for Computing (SCC), Geb. 441; Hermann-von-Helmholtz-Platz 1; 76344 Eggenstein-Leopoldshafen. Handelsregister: Amtsgericht Mannheim HRB 723920; UStIdNr: DE304551126; Geschäftsführer:; - David Haumann, Thomas Schenker, Sergey Biniaminov. _________________________________; Diese E-Mail und jeder übermittelte Anhang enthält gesetzlich geschützte; und vertrauliche Informationen. Wenn diese E-Mail nicht für Sie bestimmt ist,; bitten wir Sie, sie an uns zurückzusenden und anschließend von Ihrem Computersystem; zu löschen. Nicht für Sie bestimmte E-Mails und Anhänge dürfen Sie weder nutzen; noch verarbeiten oder Dritten zugänglich machen, gleich in welcher Form. This email including any attachments contains privileged and confidential; information. If you are not an intended recipient, please return the email; to us and then delete it from your computer system. You may neither use nor; edit any such emails including attachments received due to an error in; transmission, nor make them accessible to third parties in any manner whatsoever.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/45#issuecomment-274930919:2788,error,error,2788,https://qupath.github.io,https://github.com/qupath/qupath/issues/45#issuecomment-274930919,1,['error'],['error']
Availability,"ion (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.images.servers.openslide.OpenslideServerBuilder; ERROR: Load ImageData; at; qupath.lib.images.servers.ImageServerBuilder$DefaultImageServerBuilder.buildOriginal(ImageServerBuilder.java:341); at; qupath.lib.images.servers.ImageServerBuilder$AbstractServerBuilder.build(ImageServerBuilder.java:152); at; qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:718); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2695); at; qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at; com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at; com.sun.jav",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/396#issuecomment-827610434:1649,ERROR,ERROR,1649,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434,1,['ERROR'],['ERROR']
Availability,"ion.getROI(). tw = (int) roi.getBoundsWidth(); th = (int) roi.getBoundsHeight(). if( (tw>400) && (tw>400) && (roi.getScaledArea(pixelWidth, pixelHeight)>9500) && (counter<10)){; //if( (tw>400) && (tw>400) && (roi.getScaledArea(pixelWidth, pixelHeight)>9500)){; //print result; RegionRequest request = RegionRequest.createInstance(path, 4, (int) roi.getBoundsX(), (int) roi.getBoundsY(),(int) roi.getBoundsWidth(), (int) roi.getBoundsHeight(), 0, 0); ; ; // Read the image region; ImagePlus imp = serverIJ.readImagePlusRegion(request).getImage(true); IJ.run(imp, ""8-bit"", """");; IJ.run(imp, ""Median..."", ""radius=3"");; //IJ.run(imp, ""Median..."", ""radius=5"");; IJ.run(imp, ""Statistical Region Merging"", ""q=10 showaverages"");; IJ.run(imp, ""Invert"", """");; // python code for normalisation and structure convolution; IJ.run(imp, ""Make Binary"", """");; IJ.run(imp, ""Set Measurements..."", ""area mean standard modal min centroid center bounding fit shape feret's integrated median skewness kurtosis add redirect=None decimal=3"");; IJ.run(imp, ""Make Binary"", """");; IJ.run(imp, ""Erode"", """");; IJ.run(imp, ""Erode"", """");; //getHistogram(values, counts, 256); IJ.run(imp, ""Analyze Particles..."", ""size=20-Infinity circularity=0.40-1.00 display clear summarize add in_situ"");; ; rm = RoiManager;; rm = RoiManager.getInstance(); ; ; if((rm==null) || (rm.getCount()<1)){; print(""No objects found""); }else{; //print rm.getCount(); //RoiManager.roiManager(""count""); //rm.runCommand(imp,""Measure"");; //rm.runCommand(imp,""Update"");; IJ.run(imp, ""Send Overlay to QuPath"", ""choose_object_type=Detection include_measurements"");. // Get a suitable file name; //String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); // Create an output file; //File file = new File(dirOutput, name); // Save the image; //IJ.save(imp, file.getAbsolutePath()); // Print progress; //imp.show() ; rm.reset() ; ; }; ; //counter++; imp2 = IJ.getImage();; imp2.close();; }; ; }. ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/136#issuecomment-357429324:2484,down,downsample,2484,https://qupath.github.io,https://github.com/qupath/qupath/issues/136#issuecomment-357429324,1,['down'],['downsample']
Availability,"irs(dirOutput). int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-486778605:1866,down,downsample,1866,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605,2,['down'],['downsample']
Availability,"is makes sense, but are there use cases where it would not be appropriate?. I can't think of any myself... however, if you run a command like; ```; selectAnnotations(); ```; then if there is more than 1 annotation available, the one that will become the 'primary' selected annotation is (from the user's perspectively) essentially random. Randomness doesn't feel good in this scenario, but neither does seemingly not having a selected object when you can plainly see that you definitely have selected object**s** (as is currently the case). > Or at least to me, this does not make sense. Not only does it quickly become more complex, but I personally don't believe a larger ROI is any more important than a smaller one. Perhaps it depends on the context. Good! Inasmuch as I don't like the idea much either. Its only benefit really is that it makes the choice non-random. I think sometimes it would 'feel' like the right choice, e.g. imagine if you have one large tissue annotation and two little annotations inside. I think making the large one the primary selection would feel somehow intuitive. But if, on the other hand, you have three annotations of similar size and importance I agree it doesn't make much sense. And it's probably better not to introduce too much predictable-but-dubious behavior, lest *someone* make it a key part of their workflow... So yeah, I think the size-based idea can be discarded. > I am not sure about null, but if having a primary selected object is important, not having one could throw a meaningful error rather than returning null. Hmmm, that sounds like it could work for code internal to QuPath, as long as it always checks both for `getSelectedObject()` and `getSelectedObjects()`. Although if calling either method in a script, the ambiguity and potential for confusion remains. Although then the question resurfaces, is it better to just leave things as they are?. In any case, the proposed change is implemented at https://github.com/qupath/qupath/pull/759",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/758#issuecomment-869217737:1571,error,error,1571,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869217737,1,['error'],['error']
Availability,"is there a solution for batch processing with qupath script?; below code partly work and export the original picture with detected cells overlay but it does not export the created density map overlay (which is showing in the content view). import qupath.imagej.tools.IJTools; import qupath.lib.gui.images.servers.RenderedImageServer; import qupath.lib.gui.viewer.overlays.HierarchyOverlay; import qupath.lib.regions.RegionRequest; import qupath.lib.analysis.heatmaps.ColorModels; import qupath.lib.analysis.heatmaps.ColorModels.DisplayBand; import qupath.lib.analysis.heatmaps.DensityMaps; import qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder; import qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters ; import qupath.lib.analysis.heatmaps.DensityMaps;; import qupath.lib.objects.classes.PathClass;; import qupath.lib.analysis.heatmaps.ColorModels.ColorModelBuilder; import static qupath.lib.gui.scripting.QPEx.*. double downsample = 1; String path = buildFilePath(PROJECT_BASE_DIR, 'rendered', getProjectEntry().getImageName() +'-smc'+ '.png'); def viewer = getCurrentViewer(); def imageData = getCurrentImageData(); def options = viewer.getOverlayOptions(). def display = new qupath.lib.display.ImageDisplay(imageData); def params = new DensityMaps.DensityMapParameters(); def map = new DensityMaps.DensityMapBuilder(params); def server = new RenderedImageServer.Builder(imageData); .display(display); .downsamples(downsample); .layers(); .build(); ; // Write or display the rendered image; if (path != null) {; mkdirs(new File(path).getParent()); writeImage(server, path); } else; IJTools.convertToImagePlus(server, RegionRequest.createInstance(server)).getImage().show()",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1272#issuecomment-1636869774:945,down,downsample,945,https://qupath.github.io,https://github.com/qupath/qupath/issues/1272#issuecomment-1636869774,3,['down'],"['downsample', 'downsamples']"
Availability,"ith consolidating the last portion of the code into a parallel stream, but it is not much faster than the original code for one parentROI. In my case, I want to calculate the intersections for multiple ROIs with the tile, so it was easier for me to write the code similar to the snippet below:. ```; //		have to make all these ""final"" temp variables.... probably a better way; 		double finalYMin = yMin;; 		double finalXMin = xMin;; 		boolean finalByColumn = byColumn;; 		Map<Integer, Geometry> finalColumnParents = columnParents;; 		boolean finalByRow = byRow;; 		Map<Integer, Geometry> finalRowParents = rowParents;; 		List<ROI> tileROIs = Collections.synchronizedList(new ArrayList<>());; 		var plane = parentROI.getImagePlane();; 		AtomicInteger nullInterExcepetions = new AtomicInteger(0);; 		IntStream.range(0, nx).parallel().forEach(xi -> {; 			double x = finalXMin + xi * w - overlap;; //			A very hacky way to consolidate the code into 1 loop.; //			Atomic Reference doesn't behave when getting hit by multiple streams setting potentially different values for each stream...; 			Geometry outerGeometryLocal = finalByColumn ? finalColumnParents.getOrDefault(xi, geometry) : geometry;; 			IntStream.range(0, ny).parallel().forEach(yi -> {; 				double y = finalYMin + yi * h - overlap;; 				Geometry geometryLocal = finalByRow ? finalRowParents.getOrDefault(yi, geometry) : outerGeometryLocal;. 				// Create the tile; 				var rect = GeometryTools.createRectangle(x, y, w + overlap * 2, h + overlap * 2);; 				Geometry inter = intersect(rect, geometryLocal);; 				if(inter==null) {; 					nullInterExcepetions.incrementAndGet();; 					return;; 				}; 				ROI roi = GeometryTools.geometryToROI(inter, plane);; 				tileROIs.add(roi);; 			});; 		});. 		if (nullInterExcepetions.get() > 0) {; 			logger.warn(""Tiles lost during tiling: {}"", nullInterExcepetions.get());; 			logger.warn(""You may be able to avoid tiling errors by calling 'Simplify shape' on any complex annotations first."");; 		}; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1043#issuecomment-1219923298:1986,error,errors,1986,https://qupath.github.io,https://github.com/qupath/qupath/pull/1043#issuecomment-1219923298,1,['error'],['errors']
Availability,"ithout a problem and in a rapid fashion. Yet, when using the newest build, the window freezes and pushes my 12 threads without changing for minutes making me force quit. Here is a command line dump:; ```; ./QuPath-0.2.0-m1 ; 12:07:40.563 [main] [INFO ] qupath.QuPath - Launching QuPath with args: ; 12:07:41.084 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 12:07:41.086 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 12:07:41.115 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Tile cache size: 4096.00 MB; 12:07:41.218 [JavaFX Application Thread] [WARN ] qupath.lib.gui.QuPathGUI - No directory set for log files! None will be written.; 12:07:41.225 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.2.0-m1; Build time: 2019-03-08, 17:51; Latest commit tag: v0.0.1-beta-561-gfb062c1. (QuPath-0.2.0-m1:8210): Gdk-WARNING **: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 12:07:42.748 [JavaFX Application Thread] [INFO ] q.l.i.s.b.BioFormatsOptionsExtension - Bio-Formats version 6.0.0; WARNING: An illegal reflective access operation has occurred; WARNING: Illegal reflective access by org.codehaus.groovy.vmplugin.v7.Java7$1 (file:/home/joelrv/software/opt/QuPath/qupath_0.2.0-m1/app/groovy-2.5.6.jar) to constructor java.lang.invoke.MethodHandles$Lookup(java.lang.Class,int); WARNING: Please consider reporting this to the maintainers of org.codehaus.groovy.vmplugin.v7.Java7$1; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations; WARNING: All illegal access operations will be denied in a future release; 12:07:43.276 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1; 12:07:43.360 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: null; 12:07:43.360 [JavaFX Application Thread] [INFO ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279:1224,error,error,1224,https://qupath.github.io,https://github.com/qupath/qupath/issues/279,1,['error'],['error']
Availability,"jar (No such file or directory); ; * Try:; > Run with --stacktrace option to get the stack trace.; > Run with --info or --debug option to get more log output.; > Run with --scan to get full insights.; ; * Get more help at https://help.gradle.org; ; BUILD FAILED in 721ms. The instructions that I am following are as follows:. $ git clone https://github.com/qupath/qupath; $ cd qupath; $ ./gradlew clean jpackage. I have:; ```; $ uname -a; Linux goku.bu.edu 3.10.0-1160.59.1.el7.x86_64 #1 SMP Wed Feb 23 16:47:03 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux. ```; and; ```; $ lsb_release -a; LSB Version:	:core-4.1-amd64:core-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.9.2009 (Core); Release:	7.9.2009; Codename:	Core; ```. also:; ```; $ java -version; openjdk version ""1.8.0_322""; OpenJDK Runtime Environment (build 1.8.0_322-b06); OpenJDK 64-Bit Server VM (build 25.322-b06, mixed mode); ```. I also don't understand why it is looking elsewhere than where I have zipped it and set the directory to it as in:; ```; [jalal@goku downloads]$ sudo vi /etc/profile.d/gradle.sh; [jalal@goku downloads]$ sudo chmod +x /etc/profile.d/gradle.sh; [jalal@goku downloads]$ source /etc/profile.d/gradle.sh; [jalal@goku downloads]$ gradle -v. ------------------------------------------------------------; Gradle 7.4.2; ------------------------------------------------------------. Build time: 2022-03-31 15:25:29 UTC; Revision: 540473b8118064efcc264694cbcaa4b677f61041. Kotlin: 1.5.31; Groovy: 3.0.9; Ant: Apache Ant(TM) version 1.10.11 compiled on July 10 2021; JVM: 1.8.0_322 (Red Hat, Inc. 25.322-b06); OS: Linux 3.10.0-1160.59.1.el7.x86_64 amd64. [jalal@goku downloads]$ cat /etc/profile.d/gradle.sh . export GRADLE_HOME=/opt/gradle/gradle-7.4.2; export PATH=${GRADLE_HOME}/bin:${PATH}. $ tail -1 ~/.bashrc; export PATH=$PATH:/opt/gradle/gradle-7.4.2/bin; $ source ~/.bashrc. ```. The plugin that is reported as missing in the error is in ; ```; [jalal@goku ~]$ find /opt/gradle -name ""g",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/950:1440,down,downloads,1440,https://qupath.github.io,https://github.com/qupath/qupath/issues/950,1,['down'],['downloads']
Availability,"ject in m5, import an image; 2. Copy this qpdata to the project entry: [data.zip](https://github.com/qupath/qupath/files/3857086/data.zip); 3. Open project with m6. I don't recall the version that created this qpdata file, but it works with m5. It contains some non-hierarchical annotations. Stack trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.simplifyByDownsample(PathHierarchyPaintingHelper.java:542); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.getShape(PathHierarchyPaintingHelper.java:584); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintROI(PathHierarchyPaintingHelper.java:434); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintObject(PathHierarchyPaintingHelper.java:400); at qupath.lib.gui.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1438,avail,available,1438,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027,1,['avail'],['available']
Availability,"l, ImageRegion region);; ```; where the `level` is a specific level of the pyramid (0 for full-resolution). Currently, if I want to get a rectangle of pixels from level 2, I need to figure out the coordinates in the full-resolution image (i.e. multiply by the downsample value). Then QuPath should find them again after dividing by the downsample. However, the coordinates need to be integers - which makes me uneasy about what happens if the downsample is something like 4.23452345.; Should I be rounding or flooring when I scale up the coordinates?; And can I be sure that QuPath will do the right thing when it scales them back down, so that I get the original coordinates I wanted again...?. If not, then it seems I might get off-by-one errors and slightly unexpected results. If I want a 256 x 256 pixel region, I might end up with a 255 x 256 pixel region... which would be annoying. It seems that I can round or floor when scaling up, and then round or floor when scaling down, but I wasn't completely sure which I should be doing so I created a quick Python simulation to test what happens: https://gist.github.com/petebankhead/2d4a21cb69f3b68c8f8fa14475723647. Based on this, it seems I need to round in both directions... which was maybe a predictable conclusion for the more mathematically confident, but I wasn't sure of it's what QuPath does internally* and we can't count on users necessarily knowing that. (*However*, note that if the downsample is < 1 then all the methods fail...). I think it would be nice to resolve the ambiguity somehow, although adding an extra method; ```java; public T readLevel(int level, int x, int y, int width, int height, int z, int t);; ```; looks like a horrible explosion of ints. A possibly-simpler alternative might be to support something like this:; ```java; public T readScaledRegion(double downsample, int outputX, int outputY, int outputWidth, int outputHeight, int z, int t);; ```; where the coordinates are defined according to the output image",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072#issuecomment-1278540089:1159,down,down,1159,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072#issuecomment-1278540089,1,['down'],['down']
Availability,"l.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under View → Show log when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the step by step instructions <https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide> right to the end, it should result in a QuPath.exe file that work if you double-click it without any further effort. The other option is to install the latest QuPath Bio-Formats extension <https://github.com/qupath/qupath-bioformats-extension> ... but it shouldn't be necessary for standard .svs files. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on Gi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-411621646:2230,error,errors,2230,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646,1,['error'],['errors']
Availability,"le:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ; ...........Written tile 9 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ; Y =4500.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 10 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 11 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif ; ...........Written tile 12 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:12207,error,error,12207,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,"led_handOK]Leica_scn\Leica-Fluorescence-1.scn"" -script ""D:\\QMDownload\\6\\Tiling_a_whole_slide_image.groovy"". If the image was originally openable in QuPath using OpenSlide server, then the command could run. If the image was originally openable( and only Bioformats can handle it because without this extension then QuPath cannot open it) in QuPath using BioFormats Extension, such as .vsi/.scn format, then the command raise error:. However, the image Leica-Fluorescence-1.scn could be hand-opened in QuPath, and after openning, I can run the same script by clicking inside QuPath without problem. So the issue would be that how to let Bioformats extension usable when call QuPath from system command, but bot GUI. Any suggestions are welcome.; ================. 20:56:55.735 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, D:\\QMDownload\\6\\[failed_handOK]Leica_scn\\Leica-Fluorescence-1.scn, -script, D:\\QMDownload\\6\\Tiling_a_whole_slide_image.groovy ; 20:56:55.829 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!! ; Unsupported format or not found ; 20:56:55.876 [main] [WARN ] q.i.i.servers.ImageJServerBuilder - Error opening D:\\QMDownload\\6\\[failed_handOK]Leica_scn\\Leica-Fluorescence-1.scn with ImageJ: Could not open D:\\QMDownload\\6\\[failed_handOK]Leica_scn\\Leica-Fluorescence-1.scn with ImageJ ; 20:56:55.907 [main] [WARN ] q.l.i.servers.OpenslideServerBuilder - Unable to open D:\\QMDownload\\6\\[failed_handOK]Leica_scn\\Leica-Fluorescence-1.scn with OpenSlide: Can't find main image ; 20:56:55.907 [main] [ERROR] q.l.i.servers.ImageServerProvider - Unable to build whole slide server - check your classpath for a suitable library (e.g. OpenSlide, BioFormats); 	 ; 20:56:55.907 [main] [ERROR] q.l.i.servers.ImageServerProvider - C:\Program Files\QuPath\app\QuPathApp.jar;qupath/qupath-core-0.1.2.jar;qupath/qupath-core-awt-0.1.2.jar;qupath/qupath-core-processing-0.1.2.jar;qupath/qupath-core-processi",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/260:1250,ERROR,ERROR,1250,https://qupath.github.io,https://github.com/qupath/qupath/issues/260,1,['ERROR'],['ERROR']
Availability,"lementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for different scripting languages. I'm tentatively considering a switch to use _GroovyShell_ instead, which looks like it makes it easier to access other classes. I haven't yet explored the implications, but I think that Option 1) having really good Groovy support (only) would be more worthwhile than Option 2) trying to support multiple languages/syntaxes (but none of them quite as well). If you've any thoughts on that please let me know, I'd be interested in other opinions before getting too embroiled in making the changes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/253#issuecomment-450918869:1914,down,down,1914,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869,1,['down'],['down']
Availability,lib/server/libjvm.so(+0xc57924)[0x7f8227786924]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57a5a)[0x7f8227786a5a]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(JVM_LoadLibrary+0xbb)[0x7f822745bd6b]; /scratch3/downloads/QuPath/lib/runtime/lib/libjava.so(Java_jdk_internal_loader_NativeLibraries_load+0x17f)[0x7f822544627f]; [0x7f820e860bbb]; ======= Memory map: ========; 414cb000-414cd000 r-xs 00000000 00:04 20496117 /memfd:/.glXXXXXX (deleted); 41d6e000-41e1d000 rw-p 00000000 00:00 0 ; 80000000-80020000 rw-p 00000000 00:00 0 ; 80020000-80040000 rw-p 00000000 00:00 0 ; 80040000-800c0000 rw-p 00000000 00:00 0 ; 800c0000-80140000 rw-p 00000000 00:00 0 ; 80140000-801c0000 rw-p 00000000 00:00 0 ; 801c0000-80200000 rw-p 00000000 00:00 0 ; 80200000-80240000 rw-p 00000000 00:00 0 ; 80240000-80280000 rw-p 00000000 00:00 0 ; 80280000-80440000 rw-p 00000000 00:00 0 ; 80440000-80460000 rw-p 00000000 00:00 0 ; 80460000-80480000 ---p 00000000 00:00 0 ; 80480000-805d0000 rw-p 00000000 00:00 0 ; 805d0000-c0000000 ---p 00000000 00:00 0 ; 55d91efa2000-55d91f0b0000 r-xp 00000000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b0000-55d91f2b8000 r--p 0010e000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b8000-55d91f2b9000 rw-p 00116000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b9000-55d91f2bc000 rw-p 00000000 00:00 0 ; 55d91ffd0000-55d920002000 rw-p 00000000 00:00 0 [heap]; 7f78664d2000-7f78668e6000 r-xp 00000000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f78668e6000-7f7866ae5000 ---p 00414000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5; 7f7866ae5000-7f7866af3000 r--p 00413000 00:2f 2318694349 /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:4164,down,downloads,4164,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,3,['down'],['downloads']
Availability,"libvips in QuPath: I'd be very flattered, of course! The difficulty might be in how to integrate it. The simplest way would be to bundle the binary and just shell out to it. As you say, things like deepzoom and TIFF pyramid build might benefit, but of course you'd need a test case and some benchmarks to try to quantify any possible improvement. There are Java bindings for libvips, but I've not been involved with them and I don't how complete they are, or if they are tough enough for a demanding program like QuPath. That would need a chunk of work. I did pyvips and it should be complete and reliable. Do you use much Python inside QuPath? That might be the simplest way to experiment with more integration, such as using openslide via libvips.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/627#issuecomment-715899157:597,reliab,reliable,597,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715899157,1,['reliab'],['reliable']
Availability,"lication.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under View → Show log when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the step by step instructions <https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide> right to the end, it should result in a QuPath.exe file that work if you double-click it without any further effort. The other option is to install the",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-411621646:2037,down,down,2037,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646,1,['down'],['down']
Availability,"licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin/jpackage; /public/home/yangzhzh/tools/jdk-14/bin/jpackage --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/tools/qupath-master/build/dist --main-jar qupath-0.2.0-m4.jar --name QuPath-0.2.0-m4 --java-options -XX:MaxRAMPercentage=50 --app-version 0.2.0-m4 --icon /public/home/yangzhzh/tools/qupath-master/build/resources/main/package/linux/QuPath.png --runtime-image /public/home/yangzhzh/tools/qupath-master/build/jre; /public/home/yangzhzh/tools/jdk-14/bin/jpackage: symbol lookup error: /public/home/yangzhzh/tools/jdk-14/bin/jpackage: undefined symbol: JLI_InitArgProcessing. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':createPackage'.; > Process 'command '/public/home/yangzhzh/tools/jdk-14/bin/jpackage'' finished with non-zero exit value 127. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. BUILD FAILED in 8s; 41 actionable tasks: 5 executed, 36 up-to-date",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-534115250:2344,error,error,2344,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534115250,2,"['FAILURE', 'error']","['FAILURE', 'error']"
Availability,"ll illegal access operations will be denied in a future release ; 15:23:37.065 [main] [ERROR] qupath.QuPath - Error running script! ; javax.script.ScriptException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:158) ; 	at qupath.QuPath.main(QuPath.java:161) ; Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311) ; 	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:151) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:121) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:133) ; 	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:325) ; 	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:224) ; 	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:190) ; 	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:226) ; 	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:196) ; 	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:965) ; 	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647) ; 	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623) ; 	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:600) ; 	at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390) ; 	at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89) ; 	at groovy.lang.GroovyClassLoader$5.pro",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/286:3669,Error,ErrorCollector,3669,https://qupath.github.io,https://github.com/qupath/qupath/issues/286,1,['Error'],['ErrorCollector']
Availability,"llExpansionMicrons"": 3.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Training size: org.bytedeco.javacpp.opencv_core$Size[address=0x608000811620,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000811620,deallocatorAddress=0x13aaec9c0]]; INFO: Responses size: org.bytedeco.javacpp.opencv_core$Size[address=0x60800080d2a0,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x60800080d2a0,deallocatorAddress=0x13aaec9c0]]; INFO: RTrees classifier termination criteria: org.bytedeco.javacpp.opencv_core$TermCriteria[address=0x608000816130,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000816130,deallocatorAddress=0x13aae1520]]; ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.NIOByteBufferProvider.allocate(NIOByteBufferProvider.java:112); at loci.common.NIOFileHandle.buffer(NIOFileHandle.java:647); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:133); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:151); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:165); at loci.common.Location.getHandle(Location.java:522); at loci.common.Location.getHandle(Location.java:462); at loci.common.Location.getHandle(Location.java:443); at loci.common.Location.getHandle(Location.java:426); at loci.co",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-493938867:5355,down,downsample,5355,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867,1,['down'],['downsample']
Availability,loading classifier error,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/160:19,error,error,19,https://qupath.github.io,https://github.com/qupath/qupath/issues/160,1,['error'],['error']
Availability,"ls are child objects of their annotations!; tumorAnnos = getAnnotationObjects().findAll{it.getPathClass() == getPathClass(""Tumor"")}; tumorCells = getCellObjects().findAll{it.getParent().getPathClass() == getPathClass(""Tumor"")}. //Remove the tumor annotations and their cells; removeObjects(tumorAnnos,false); removeObjects(tumorCells,false); //Analyze->Spatial analysis->Detect centroid distances 2D. detectionCentroidDistances(true); //Add everything back, and make sure the hierarchy is resolved!; addObjects(tumorAnnos); addObjects(tumorCells); resolveHierarchy(); ```. The code works most of the time. Probably 70%? I lack my usual variety of computers to test out whether it is based on my computer - but I do have a project file hosted online I can make available to run the test. Errors include: Null pointer exception popup in the lower right,. INFO: Starting script at Sat Jun 05 20:54:28 CDT 2021; WARN: Resolving hierarchy that contains 3 annotations and 1236 detections - this may be slow!; ERROR: QuPath exception; WARN: Resolving hierarchy that contains 3 annotations and 1236 detections - this may be slow!; INFO: Script run time: 0.25 seconds; The log file is not hugely informative on that one. Alternatively, I sometimes see a TMA core error. ```; ERROR: QuPath exception: Cannot invoke ""qupath.lib.objects.PathObject.isTMACore()"" because ""child"" is null; at qupath.lib.gui.panes.PathObjectHierarchyView$PathObjectTreeItem.getChildren(PathObjectHierarchyView.java:516); at qupath.lib.gui.panes.PathObjectHierarchyView$PathObjectTreeItem.isLeaf(PathObjectHierarchyView.java:544); at javafx.controls/javafx.scene.control.skin.TreeCellSkin.updateDisclosureNode(Unknown Source); at javafx.controls/javafx.scene.control.skin.TreeCellSkin.updateChildren(Unknown Source); at javafx.controls/javafx.scene.control.skin.LabeledSkinBase.lambda$new$5(Unknown Source); at javafx.controls/com.sun.javafx.scene.control.LambdaMultiplePropertyChangeListenerHandler.lambda$new$1(Unknown Source); at j",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/744:1654,ERROR,ERROR,1654,https://qupath.github.io,https://github.com/qupath/qupath/issues/744,1,['ERROR'],['ERROR']
Availability,m12 - Error dialog(s) appear when closing QuPath after work with pixel classifiers,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/503:6,Error,Error,6,https://qupath.github.io,https://github.com/qupath/qupath/issues/503,1,['Error'],['Error']
Availability,made in error,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/619#issuecomment-713631209:8,error,error,8,https://qupath.github.io,https://github.com/qupath/qupath/pull/619#issuecomment-713631209,1,['error'],['error']
Availability,"mage. /*; * Adjustable parameters; */; int tileWidthPixels = 5000 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 10 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput = ""G:\\Image Dump"" // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!. int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 1000 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = serverOriginal.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/85#issuecomment-315148862:1831,error,error,1831,https://qupath.github.io,https://github.com/qupath/qupath/issues/85#issuecomment-315148862,1,['error'],['error']
Availability,"mension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); File file = new File(dirOutput, name); ImageWriterTools.writeImageRegionWithOverlay(imageData, overlayOptions, request, file.getAbsolutePath()). // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; catch (Exception e) {; // Check if we have had a sufficient number of errors to just give up; nErrors++;; if (nErrors > maxErrors) {; println(""Maximum number of errors exceeded - aborting...""); return; }; e.printStackTrace(); }; }; }; }. ```. The error is on line 91 when I try to access the ImagePlusServer server, which obviously doesn't exist anymore. . ```; ERROR: Error at line 7: No such property: server for class: Script48. ERROR: Script error; at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.unwrap(ScriptBytecodeAdapter.java:65); at org.codehaus.groovy.runtime.callsite.PogoGetPropertySite.getProperty(PogoGetPropertySite.java:51); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callGroovyObjectGetProperty(AbstractCallSite.java:309); at Script48.run(Script48.groovy:8); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScri",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309:4313,error,error,4313,https://qupath.github.io,https://github.com/qupath/qupath/issues/309,1,['error'],['error']
Availability,"n + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); File file = new File(dirOutput, name); ImageWriterTools.writeImageRegionWithOverlay(imageData, overlayOptions, request, file.getAbsolutePath()). // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; catch (Exception e) {; // Check if we have had a sufficient number of errors to just give up; nErrors++;; if (nErrors > maxErrors) {; println(""Maximum number of errors exceeded - aborting...""); return; }; e.printStackTrace(); }; }; }; }. ```. The error is on line 91 when I try to access the ImagePlusServer server, which obviously doesn't exist anymore. . ```; ERROR: Error at line 7: No such property: server for class: Script48. ERROR: Script error; at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.unwrap(ScriptBytecodeAdapter.java:65); at org.codehaus.groovy.runtime.callsite.PogoGetPropertySite.getProperty(PogoGetPropertySite.java:51); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callGroovyObjectGetProperty(AbstractCallSite.java",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309:3781,down,downsample,3781,https://qupath.github.io,https://github.com/qupath/qupath/issues/309,1,['down'],['downsample']
Availability,"n 7.0.0, current version 7.0.0); 	/opt/homebrew/opt/pcre2/lib/libpcre2-8.0.dylib (compatibility version 12.0.0, current version 12.2.0); 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1953.255.0); 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.30.112); 	/usr/lib/libresolv.9.dylib (compatibility version 1.0.0, current version 1.0.0); 	/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-x86-64/darwin-x86-64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-x86-64/darwin-x86-64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/local/opt/gettext/lib/libintl.8.dylib (compatibility version 12.0.0, current version 12.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.0.0); 	/usr/local/opt/fontconfig/lib/libfontconfig.1.dylib (compatibility version 14.0.0, current version 14.0.0); 	/usr/local/opt/freetype/lib/libfreetype.6.dylib (compatibility version 27.0.0, current version 27.1.0); 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1953.255.0); 	/usr/local/opt/xz/lib/liblzma.5.dylib (compatibility version 10.0.0, current version 10.4.0); 	/usr/lib/libiconv.2.dylib (compatibility version 7.0.0, current version 7.0.0); 	/usr/local/opt/pcre2/li",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:3267,Down,Downloads,3267,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495,1,['Down'],['Downloads']
Availability,"n in QuPath than when using [vizarr](https://hms-dbmi.github.io/vizarr/?source=https://uk1s3.embassy.ebi.ac.uk/idr/zarr/v0.4/idr0073A/9798462.zarr). Zarr images are divided into chunks, where each chunk contains pixel values in a dedicated file. When using [HTTP Toolkit](https://httptoolkit.com/) when opening a remote Zarr image in QuPath, we see that the underlying BioFormats readers make several web requests to the same chunk. With the example image mentioned above, QuPath downloads each chunk around 8 times, which is useless. This means that when opening the image through QuPath, around 320 web requests are made, while there should only be around 40 requests. The reason is because of the tile size. The tile size should correspond to the chunk size, but it's not always the case. Before this PR, the tile size corresponded to the chunk size of the lowest resolution. For example with the image above, the tile size was 164 * 128 pixels (which corresponds to the chunk size of the lowest resolution image), but the chunk size of the full resolution image is 1024 * 1024 pixels. This means that to read one chunk of the full resolution image, QuPath will make several readings, and each reading will download the entire chunk of 1024*1024 pixels, thus the same file will be downloaded several times. Therefore, to fix the issue, we must fix the tile size. The tile size is determined from the BioFormats reader's `getOptimalTileWidth()` and `getOptimalTileHeight()` functions. By default, they return the chunk size of the lowest resolution image. I found a workaround to get the chunk size of the full resolution image: we must set the resolution to 0 (full resolution) with the Zarr reader. After that, `getOptimalTileWidth()` and `getOptimalTileHeight()` return the chunk size of the full resolution image. This PR is only implementing this. To see that it works, you can start HTTP Toolkit, open the sample image with QuPath, and compare the number of requests with and without this PR.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1645:1532,down,download,1532,https://qupath.github.io,https://github.com/qupath/qupath/pull/1645,2,['down'],"['download', 'downloaded']"
Availability,n(Script30.groovy:10); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: Error running plugin: java.lang.NullPointerException; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:266); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:286); at qupath.lib.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214); at Script30.run(Script30.groovy:12); at or,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424986075:8924,ERROR,ERROR,8924,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"n.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(Unknown Source); at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(Unknown Source); at javafx.base/javafx.collections.ObservableListBase.fireChange(Unknown Source); at javafx.base/javafx.collections.ListChangeBuilder.commit(Unknown Source); at javafx.base/javafx.collections.ListChangeBuilder.endChange(Unknown Source); at javafx.base/javafx.collections.ObservableListBase.endChange(Unknown Source); at javafx.base/javafx.collections.ModifiableObservableListBase.setAll(Unknown Source); at qupath.lib.gui.panes.AnnotationPane.hierarchyChanged(AnnotationPane.java:382); at qupath.lib.gui.panes.AnnotationPane.lambda$hierarchyChanged$7(AnnotationPane.java:352); at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(Unknown Source); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(Unknown Source); at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(Unknown Source); at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); ```; I am at a loss. The script never seems to actual fail, despite the errors. No objects end up missing, the measurements are created in the correct cells. Sometimes it will run 7 times in a row. Sometimes it will fail 3 times in a row with the same error.; The region itself is small and shouldn’t cause any problems for my computer.; image; Just the upper left corner of the LuCa FoV image. I have tried adding fireHierarchyUpdates() everywhere I can think or, and tried Thread.sleep(1000) along with setting the number of CPU cores to 1, as well, with no change to the behavior. As recommended on the forum, `guiscript=true` is a viable workaround for the issue.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/744:7529,error,errors,7529,https://qupath.github.io,https://github.com/qupath/qupath/issues/744,2,['error'],"['error', 'errors']"
Availability,"n.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); WARN: Error opening /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with ImageJ: Could not open /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with ImageJ; WARN: Unable to open /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with OpenSlide: /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif: Not a file that OpenSlide can recognize; ERROR: Unable to build whole slide server - check your classpath for a suitable library (e.g. OpenSlide, BioFormats); 	; ERROR: /Applications/QuPath.app/Contents/Java/QuPathApp.jar:qupath/qupath-core-0.1.2.jar:qupath/qupath-core-awt-0.1.2.jar:qupath/qupath-core-processing-0.1.2.jar:qupath/qupath-core-processing-awt-0.1.2.jar:qupath/qupath-extension-ij-0.1.2.jar:qupath/qupath-extension-input-0.1.2.jar:qupath/qupath-extension-opencv-0.1.2.jar:qupath/qupath-extension-openslide-0.1.2.jar:qupath/qupath-extension-pen-0.1.2.jar:qupath/qupath-extension-script-editor-0.1.2.jar:qupath/qupath-gui-fx-0.1.2.jar:qupath/qupath-processing-ij-0.1.2.jar:qupath/qupath-processing-opencv-0.1.2.jar:jars/commons-math3-3.6.1.jar:jars/controlsfx-8.40.12.jar:jars/flowless-0.4.5.jar:jars/groovy-2.4.7.jar:jars/groovy-jsr223-2.4.7.jar:jars/gson-2.8.0.jar:jars/ij-1.51g.jar:jars/jfxtras-common-8.0-r5.jar:jars/jfxtras-menu-8.0-r5.jar:jars/jinput-2.0.6.jar:jars/jpen-2-150301.jar:jars/jutils-1.0.0.jar:jars/logback-classic-1.1.7.jar:jars/logb",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371771791:9702,ERROR,ERROR,9702,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371771791,1,['ERROR'],['ERROR']
Availability,"nce I have tif images that are twice as big that can be opened without problem. . I have tested both on Windows 10 and Ubuntu 18. Here is the log from a Windows machine:; INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (22 ms); INFO: Loaded extension Experimental commands (18 ms); INFO: Loaded extension ImageJ extension (58 ms); INFO: Loaded extension JPen extension (22 ms); INFO: Loaded extension OpenCV extensions (3 ms); INFO: Loaded extension Rich script editor extension (373 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; WARN: Unable to obtain full image format info for file:/D:/pDST/eHE-PDS18-015016-leica.tif (class java.util.NoSuchElementException); WARN: Temp memoization directory created at C:\Users\DanielH\AppData\Local\Temp\qupath-memo-13737650391880953912; WARN: If you want to avoid this warning, either disable Bio-Formats memoization in the preferences or specify a directory to use; ERROR: *** One or more readers is misbehaving. See the debug output for more information. e.g.:; loci.formats.in.APLReader@578b4451 -> java.lang.NullPointerException('null') ***; WARN: Removing alpha channel; WARN: Removing alpha channel; ERROR: QuPath exception: Java heap space; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(Unknown Source); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:539); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:707); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.java:902); at qupath.lib.display.ImageDisplay.updateHistogramMap(ImageDisplay.java:573); at qupath.lib.display.ImageDisplay.setImageData(ImageDisplay.java:144); at qupath.lib.gui.viewer.QuPathViewer.setImageData(QuPathViewer.java",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/382:1293,ERROR,ERROR,1293,https://qupath.github.io,https://github.com/qupath/qupath/issues/382,1,['ERROR'],['ERROR']
Availability,"nd see what the variable importance is of each feature and channel. **To Reproduce**; Steps to reproduce the behavior:; 1. Create a project with ~143 IMC images; 2. Annotate structures within ~38 images with 5 different classifications of annotations; 3. Open a non-annotated image; 4. Attempt to train a pixel classifier using all channels, scales, and features, loading training from other annotated images in the project.; 5. Click ""Live Preview"", note the error at the end of the post. **Expected behavior**; A pixel classifier should be trained, and a preview should be applied to the currently loaded image. **Desktop (please complete the following information):**; - OS: Windows 10, 32-thread processor, 127/128 Gb RAM allocated for QuPath, ~500 Gb SSD storage for tile cache; - QuPath Version 0.3.2. **Additional context**; Error log:; ```; 12:10:44.040 [JavaFX Application Thread] [INFO ] q.p.g.c.ml.PixelClassifierPane - Creating training data from 38 images; 12:10:44.953 [JavaFX Application Thread] [ERROR] q.p.g.c.ml.PixelClassifierTraining - Error requesting features for ImageOp server: ImageData: Other, xxxx___ROI8_ROI_008.ome.tiff - ROI8_ROI_008.ome {""colorTransforms"":[{""channelName"":""Pr(141)_141-SMA""},{""channelName"":""Nd(142)_142Nd-CD19""},{""channelName"":""Nd(143)_143Nd-Vimentin""},{""channelName"":""Nd(144)_144Nd-cd14""},{""channelName"":""Nd(146)_146NdCD16""},{""channelName"":""Nd(148)_148-Pan-Ker""},{""channelName"":""Sm(149)_149Sm-CD11b""},{""channelName"":""Sm(152)_152Sm-CD45""},{""channelName"":""Sm(154)_154Sm-CD11c""},{""channelName"":""Gd(155)_155Gd-FoxP3""},{""channelName"":""Gd(156)_156Gd-CD4""},{""channelName"":""Gd(158)_158Gd-E_Cadherin""},{""channelName"":""Tb(159)_159Tb-CD68""},{""channelName"":""Gd(160)_160Gd-Vista""},{""channelName"":""Dy(161)_161Dy-CD20""},{""channelName"":""Dy(162)_162Dy-CD8a""},{""channelName"":""Er(166)_166Er-CD45RA""},{""channelName"":""Er(167)_167Er-GranzymeB""},{""channelName"":""Er(168)_168Er-Ki67""},{""channelName"":""Tm(169)_169Tmp-CollagenI""},{""channelName"":""Er(170)_170Er-CD3""},{""channelName",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947:2174,ERROR,ERROR,2174,https://qupath.github.io,https://github.com/qupath/qupath/issues/947,1,['ERROR'],['ERROR']
Availability,"nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f7940f5a192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7940f5a5e3]; /lib64/libstdc++.so.6(+0x71555)[0x7f7940f5b555]; /lib64/libpthread.so.0(+0x620b)[0x7f822813720b]; /lib64/libstdc++.so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7f7866536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f82290579c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f822905c59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f822905bb8b]; /lib64/libdl.so.2(+0xf",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:1834,Error,Error,1834,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['Error'],['Error']
Availability,"nt(""PixelWidthMicrons:"" + PixelWidthMicrons); PixelZSpacingMicrons = 1.0; print(""PixelZSpacingMicrons:"" + PixelZSpacingMicrons); }. String imgpath = server.getPath(); print(imgpath); int dotNich = imgpath.lastIndexOf("".""); int slashNich = imgpath.lastIndexOf(""\\""). // make output folder; String dirOutput = (imgpath[0..dotNich-1] + ""_tif""); print(""dirOutput="" + dirOutput); def subdir = new File(dirOutput); subdir.mkdir(); // clear the folder; subdir.eachFileMatch(~/.*.*/) { file ->; file.delete(); }; ```. The ourput was:. ```; INFO: Height:6338; INFO: Width:4737; INFO: ZSlices:1; INFO: nChannels:3; INFO: nTimepoints:1; INFO: TimeUnit:SECONDS; INFO: Magnification:20; INFO: HasPixelSizeMicrons:true; INFO: PixelHeightMicrons:0.5; INFO: PixelWidthMicrons:0.5; INFO: PixelZSpacingMicrons:NaN; INFO: file:/D:/QMDownload/5/%5Bfailed_handOK%5DLeica_scn/Leica-Fluorescence-1.scn#2; INFO: dirOutput=file:/D:/QMDownload/5/%5Bfailed_handOK%5DLeica_scn/Leica-Fluorescence-1_tif. ERROR: Error at line 99: C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\%5Bfailed_handOK%5DLeica_scn\Leica-Fluorescence-1_tif. ERROR: Script error; at org.codehaus.groovy.runtime.ResourceGroovyMethods.checkDir(ResourceGroovyMethods.java:1160); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1534); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1565); at org.codehaus.groovy.runtime.dgm$989.invoke(Unknown Source); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:244); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:135); at Script2",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472886695:2802,ERROR,ERROR,2802,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472886695,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"nt(Scene.java:2494); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:380); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:294); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$354(GlassViewEventHandler.java:416); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:415); at com.sun.glass.ui.View.handleMouseEvent(View.java:555); at com.sun.glass.ui.View.notifyMouse(View.java:937); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191); at java.lang.Thread.run(Thread.java:745); ERROR: Error reading image region C:\Users\617\Desktop\1800164.tif: x=0, y=0, w=23422, h=30978, z=0, t=0, downsample=140.81 for image size 23422 x 30978; at qupath.lib.images.servers.BioFormatsImageServer.resize(BioFormatsImageServer.java:864); at qupath.lib.images.servers.BioFormatsImageServer.readBufferedImage(BioFormatsImageServer.java:689); at qupath.lib.images.servers.BioFormatsImageServer.readBufferedImage(BioFormatsImageServer.java:95); at qupath.lib.images.servers.AbstractImageServer.getBufferedThumbnail(AbstractImageServer.java:70); at qupath.lib.gui.helpers.DisplayHelpers.estimateImageType(DisplayHelpers.java:117); at qupath.lib.gui.QuPathGUI.createNewImageData(QuPathGUI.java:2269); at qupath.lib.gui.QuPathGUI.createNewImageData(QuPathGUI.java:2258); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2236); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2152); at qupath.lib.gui.commands.OpenCommand.run(OpenCommand.java:51); at qupath.lib.gui.QuPathGUI.lambda$createCommandAction$46(QuPathGUI.java:3122); at org.controlsfx.control.action.Action.handle(Action.ja",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/221:10463,down,downsample,10463,https://qupath.github.io,https://github.com/qupath/qupath/issues/221,1,['down'],['downsample']
Availability,"ntHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); WARN: Error opening /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with ImageJ: Could not open /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with ImageJ; WARN: Unable to open /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif with OpenSlide: /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif: Not a file that OpenSlide can recognize; ERROR: Unable to build whole slide server - check your classpath for a suitable library (e.g. OpenSlide, BioFormats); 	; ERROR: /Applications/QuPath.app/Contents/Java/QuPathApp.jar:qupath/qupath-core-0.1.2.jar:qupath/qupath-core-awt-0.1.2.jar:qupath/qupath-core-processing-0.1.2.jar:qupath/qupath-core-processing-awt-0.1.2.jar:qupath/qupath-extension-ij-0.1.2.jar:qupath/qupath-extension-input-0.1.2.jar:qupath/qupath-extension-opencv-0.1.2.jar:qupath/qupath-extension-openslide-0.1.2.jar:qupath/qupath-extension-pen-0.1.2.jar:qupath/qupath-extension-script-editor-0.1.2.jar:qupath/qupath-gui-fx-0.1.2.jar:qupath/qupath-processing-ij-0.1.2.jar:qupath/qupath-processing-opencv-0.1.2.jar:jars/commons-math3-3.6.1.jar:jars/controlsfx-8.40.12.jar:jars/flowless-0.4.5.jar:jars/groovy-2.4.7.jar:jars/groovy-jsr223-2.4.7.jar:jars/gson-2.8.0.jar:jars/ij-1.51g.jar:jars/jfxtras-common-8.0-r5.jar:jars/jfxtras-menu-8.0-r5.jar:jars/jinput-2.0.6.jar:jars/jpen-2-150301.jar:jars/jutils-1.0.0.jar:jars/logback-classic-1.1.7.jar:jars/logback-core-1.1.7.jar:jars/opencv-3.1.0.jar:jars/openslide-3.4.1_2.jar:jars/packager.jar:jars/reactfx-2.0-M4u1.jar:jars/richtextfx-0.6.10.jar:jars/slf4j-api-1.7.20.jar:jars/undofx-1.2.jar:jars/wellbehavedfx-0.1.1.jar:QuPathApp.jar; ERROR: Open image: Sorry, I can't open /Users/dzf/camelyon16-grand-challenge/data/TrainingData/Train_Tumor/Tumor_005.tif. Thank you for your help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371771791:10954,ERROR,ERROR,10954,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371771791,1,['ERROR'],['ERROR']
Availability,"ntum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191); at java.lang.Thread.run(Thread.java:745); ERROR: Unable to build whole slide server - check your classpath for a suitable library (e.g. OpenSlide, BioFormats); 	; ERROR: C:\ProgramData\App-V\46D140A1-54B6-42AA-A72A-99DBBA62CB07\6C3334CF-C8C7-49EA-9F90-47768DFB4373\Root\VFS\ProgramFilesX64\QuPath\app\QuPathApp.jar;qupath/qupath-core-0.1.2.jar;qupath/qupath-core-awt-0.1.2.jar;qupath/qupath-core-processing-0.1.2.jar;qupath/qupath-core-processing-awt-0.1.2.jar;qupath/qupath-extension-ij-0.1.2.jar;qupath/qupath-extension-input-0.1.2.jar;qupath/qupath-extension-opencv-0.1.2.jar;qupath/qupath-extension-openslide-0.1.2.jar;qupath/qupath-extension-pen-0.1.2.jar;qupath/qupath-extension-script-editor-0.1.2.jar;qupath/qupath-gui-fx-0.1.2.jar;qupath/qupath-processing-ij-0.1.2.jar;qupath/qupath-processing-opencv-0.1.2.jar;jars/commons-math3-3.6.1.jar;jars/controlsfx-8.40.12.jar;jars/flowless-0.4.5.jar;jars/groovy-2.4.7.jar;jars/groovy-jsr223-2.4.7.jar;jars/gson-2.8.0.jar;jars/ij-1.51g.jar;jars/jfxtras-common-8.0-r5.jar;jars/jfxtras-menu-8.0-r5.jar;jars/jinput-2.0.6.jar;jars/jpen-2-150301.jar;jars/jutils-1.0.0.jar;jars/logback-classic-1.1.7.jar;jars/logback-core-1.1.7.jar;jars/opencv-3.1.0.jar;jars/openslide-3.4.1_2.jar;jars/packager.jar;jars/reactfx-2.0-M4u1.jar;jars/richtextfx-0.6.10.jar;jars/slf4j-api-1.7.20.jar;jars/undofx-1.2.jar;jars/wellbehavedfx-0.1.1.jar; ERROR: Open image: Sorry, I can't open D:\Rivka\nanozoomer\Scans RL 2\Exp 5 (LI)\A3 LI 03.ndpi",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/351:5431,ERROR,ERROR,5431,https://qupath.github.io,https://github.com/qupath/qupath/issues/351,1,['ERROR'],['ERROR']
Availability,"null$117(PlatformImpl.java:295); 	at java.security.AccessController.doPrivileged(Native Method); 	at com.sun.javafx.application.PlatformImpl.lambda$runLater$118(PlatformImpl.java:294); 	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95); 	at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); 	at com.sun.glass.ui.gtk.GtkApplication.lambda$null$450(GtkApplication.java:139); 	at java.lang.Thread.run(Thread.java:745); 02:39:38.754 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Dark; 02:39:38.757 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 02:39:38.781 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 02:39:38.837 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - QuPath Notice: This is a pre-release version of QuPath; Version: 0.0.6; Build time: 2016-11-16, 15:54; 02:40:13.093 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideServerBuilder - Could not load OpenSlide native library; java.lang.UnsatisfiedLinkError: /home/bl/ip/QuPath/app/libopenslide-jni.so: libopenslide.so.0: cannot open shared object file: No such file or directory; 	at java.lang.ClassLoader$NativeLibrary.load(Native Method); 	at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941); 	at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857); 	at java.lang.Runtime.loadLibrary0(Runtime.java:870); 	at java.lang.System.loadLibrary(System.java:1122); 	at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); 	at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); 	at qupath.lib.images.servers.OpenslideImageServer.<init>(OpenslideImageServer.java:91); 	at qupath.lib.images.servers.OpenslideServerBuilder.buildServer(OpenslideServerBuilder.java:47); 	at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); 	at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262870405:3541,ERROR,ERROR,3541,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262870405,1,['ERROR'],['ERROR']
Availability,"oad\\5\\Leica_scn\\Leica-Fluorescence-1.scn ; Height:6338Width:4737ZSlices:1nChannels:3nTimepoints:1TimeUnit:SECONDSMagnification:20HasPixelSizeMicrons:truePixelHeightMicrons:0.5PixelWidthMicrons:0.5PixelZSpacingMicrons:NaNfile:/D:/QMDownload/5/Leica_scn/Leica-Fluorescence-1.scn#2dirOutput=file:/D:/QMDownload/5/Leica_scn/Leica-Fluorescence-1_tifa Top break at idx from:[0+=1]a Top break at idx from:[0+=1]a Top break at idx from:[0+=1]a Top break at idx from:[0+=1]............bTop is:0a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]............bBottom is:6337a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]............bLeft is:0a Right break at idx from:[0+=1]a Right break at idx from:[0+=1]a Right break at idx from:[0+=1]a Right break at idx from:[0+=1]............bRight is:4736z =1 ; Y =0.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=0, w=2000, h=1500, z=0).tif ; ...........Written tile 1 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=0, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; ...........Written tile 2 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; X =4000.0 ; Fil",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:7007,error,error,7007,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['error'],['error']
Availability,"of JavaFX, this will fail! Probably at the 'test' stage.; Requesting TensorFlow (CPU) subproject; Copying license directories:; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-bioformats\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-openslide\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-pen\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-script-editor\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-svg\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-gui-fx\src\main\resources\licenses. FAILURE: Build failed with an exception. * Where:; Build file 'C:\Users\IT-bruker\Documents\GitHub\qupath\build.gradle' line: 569. * What went wrong:; A problem occurred evaluating root project 'qupath'.; > Could not resolve all files for configuration ':runtimeClasspath'.; > Could not find tensorflow-1.15.2-1.5.3-windows-x86.jar (org.bytedeco:tensorflow:1.15.2-1.5.3).; Searched in the following locations:; https://repo.maven.apache.org/maven2/org/bytedeco/tensorflow/1.15.2-1.5.3/tensorflow-1.15.2-1.5.3-windows-x86.jar; > Could not find mkl-dnn-0.21.4-1.5.3-windows-x86.jar (org.bytedeco:mkl-dnn:0.21.4-1.5.3).; Searched in the following locations:; https://repo.maven.apache.org/maven2/org/bytedeco/mkl-dnn/0.21.4-1.5.3/mkl-dnn-0.21.4-1.5.3-windows-x86.jar. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. BUILD FAILED in 7s. C:\Users\IT-bruker\Documents\GitHu",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630948935:1966,FAILURE,FAILURE,1966,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630948935,1,['FAILURE'],['FAILURE']
Availability,olorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:10467,Down,Downloads,10467,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['Down'],['Downloads']
Availability,olorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; ERROR: java.lang.OutOfMemoryError: Java heap space; WARN: Fallback to requesting thumbnail directly...; ERROR: QuPath exception; WARN: Tile request exception; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:8879,Down,Downloads,8879,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['Down'],['Downloads']
Availability,"om/alanocallaghan/openslide-crossplatform-builds), as most of it is unlikely to be useful upstream (though I'm of course happy to contribute it if so). ## Windows. The self-contained builds provided by OpenSlide work well here, as do binaries from my forked repo, with the proviso that we need to load them from a path rather than a JAR, as the JNA library loading code will not find `winpthreads` or `ssp` if we try to load from a jar on the classpath. ## Mac. x86 and M1 builds using the same meson wrap system as Windows seem to work fairly well at first glance (see [x86](https://github.com/alanocallaghan/openslide-jna/actions/runs/6175143420/job/16761349958) and [m1](https://app.circleci.com/pipelines/github/alanocallaghan/openslide-jna/26/workflows/aafe7473-6e23-4897-91bd-b66d8456e2ce/jobs/26) build test runs). However, as Pete has pointed out, they have a number of weird dependencies, some of which are homebrew directories:. ```; otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.0.0); 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1953.255.0); 	/opt/homebrew/opt/xz/lib/liblzma.5.dylib (compatibility version 10.0.0, current version 10.4.0); 	/usr/lib/libiconv.2.dylib (compatibility version 7.0.0, current version 7.0.0); 	/opt/homebrew/opt/pcre2/lib/libpcre2-8.0.dylib (compatibility version 12.0.0, current version 12.2.0); 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1953.255.0); 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0,",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:1630,Down,Downloads,1630,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495,1,['Down'],['Downloads']
Availability,"om> wrote:. > Thank you both for answering! @Svidro <https://github.com/svidro> and; > @petebankhead <https://github.com/petebankhead>; > I started all over again, so I don't have the workflow anymore.; > Nevertheless, what I meant was that I used indeed the pointing tool. I had; > two populations, one negative and one positive. After I ran the positive; > cell detection, the negative population was gone. And unfortunately, there; > is no undo button.; >; > My goal was indeed compare the manual counting and the automated counting.; > For optimization.; >; > I don't know whether the error is the lack of RAM, I checked and i have; > 3,3GB available. And I only have 4 ROI's in one image. When I run the; > analysis, I make sure nothing is selected and choose the option 'all; > annotation'. It might be, but it might be not, because sometimes it also; > does not analyse only 1 ROI, but other times it does. However, the log it; > says 'memory error'. the programs that are running on my computer besides; > Qupaht are google chrome (1tab), one note with an excel file, and file; > explorer.; >; > [image: capture]; > <https://user-images.githubusercontent.com/33484227/32604466-0266ac66-c54e-11e7-9a9b-ede61554510b.PNG>; > [image: capture2]; > <https://user-images.githubusercontent.com/33484227/32604472-05d80ef8-c54e-11e7-97d1-b1540f6ee388.PNG>; > [image: capture3]; > <https://user-images.githubusercontent.com/33484227/32604473-07eafa66-c54e-11e7-9aca-94fae7d0e9da.PNG>; >; > I really don't know why sometimes it works or not, but i'll be more; > careful in what I'll do.; > Unfortunately, there was also no backup file in the folder after the; > failure of saving.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/112#issuecomment-343227944>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AWEq-ZA0lAraRRrf3AumFsqB5fJAaSl1ks5s0zUngaJpZM4QWPEm>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343229740:2094,failure,failure,2094,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343229740,1,['failure'],['failure']
Availability,ome/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79411ff000-7f79413fe000 ---p 0000d000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79413fe000-7f79413ff000 r--p 0000c000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f79413ff000-7f7941400000 rw-p 0000d000 00:2f 2325151014 /home/grad3/jalal/.javacpp/cache/javacpp-1.5.6-linux-x86_64.jar/org/bytedeco/javacpp/linux-x86_64/libjnijavacpp.so; 7f7941400000-7f7941c00000 rw-p 00000000 00:00 0 ; 7f7941d69000-7f7941e0e000 r--p 00000000 fd:03 721040939 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans-Bold.ttf; 7f7941e0e000-7f7941e12000 ---p 00000000 00:00 0 ; 7f7941e12000-7f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/download,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:15667,down,downloads,15667,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,"on-pen/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-script-editor/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-osx.jar into build/qupath; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-osx.jar into build/qupath; LICENSE PATH: /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/license-unknown.txt; > Task :createPackage FAILED; -------; Please specify where I can find a suitable packager! Something like this:; gradlew createPackage -Ppackager=/full/path/to/jpackage; Current value of -Ppackager is /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/jdk-13/bin/jpackage; Note: You can also specify this in a gradle.properties file; -------. FAILURE: Build failed with an exception. * Where:; Build file '/Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/build.gradle' line: 622. * What went wrong:; Execution failed for task ':createPackage'.; > Please specify where I can find a suitable jpackage!. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.; Use '--warning-mode all' to show the individual deprecation warnings.; See https://docs.gradle.org/6.0/userguide/command_line_interface.html#sec:command_line_warnings. BUILD FAILED in 9s; 41 actionable tasks: 16 executed, 25 up-to-date. Looking forward fro your response ; Brijeshwar,",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-606369334:2229,FAILURE,FAILURE,2229,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-606369334,1,['FAILURE'],['FAILURE']
Availability,"on: null; at java.base/java.util.ArrayList$Itr.checkForComodification(Unknown Source); at java.base/java.util.ArrayList$Itr.next(Unknown Source); at java.base/java.util.Collections$UnmodifiableCollection$1.next(Unknown Source); at java.base/java.util.AbstractCollection.addAll(Unknown Source); at qupath.lib.objects.PathObjectTools.getAvailableFeatures(PathObjectTools.java:2026); at org.codehaus.groovy.vmplugin.v8.IndyInterface.fromCache(IndyInterface.java:321); at QuPathScript$_run_closure1.doCall(QuPathScript:11); at QuPathScript$_run_closure1.doCall(QuPathScript); at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source); at java.base/java.lang.reflect.Method.invoke(Unknown Source); at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343); at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328); at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:279); at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008); at groovy.lang.Closure.call(Closure.java:433); at groovy.lang.Closure.call(Closure.java:412); at groovy.lang.Closure.run(Closure.java:505); at java.base/java.lang.Thread.run(Unknown Source); ```. **Expected behavior**; The code runs without any exception. **Desktop (please complete the following information):**; - OS: macOS (but probably all); - QuPath Version: v0.5.1. **Additional context**; This seems to only occur with detections. The underlying issue in this specific case seems to be that these can return an unmodifiable list of measurement names, but when this is used by `PathObjectTools.getAvailableFeatures(Collection)` the underlying list is being modified. A fix may require revising `MeasurementList` more thoroughly to improve its robustness. > Edit: The original 'failing' script I posted here was failing because `pathObjects` was being modified... the version after I ended the issue fails in the 'right' place to show the issue I was trying to report.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1591:2918,robust,robustness,2918,https://qupath.github.io,https://github.com/qupath/qupath/issues/1591,1,['robust'],['robustness']
Availability,"ons = server.getZSpacingMicrons(); print(""PixelZSpacingMicrons:"" + PixelZSpacingMicrons); }else{; PixelHeightMicrons = 1.0; print(""PixelHeightMicrons:"" + PixelHeightMicrons); PixelWidthMicrons = 1.0; print(""PixelWidthMicrons:"" + PixelWidthMicrons); PixelZSpacingMicrons = 1.0; print(""PixelZSpacingMicrons:"" + PixelZSpacingMicrons); }; ```; The weird error take place at the line,which is a very common line:; `PixelWidthMicrons = server.getPixelWidthMicrons(); `; ```; 15:23:36.355 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, D:\\QMDownload\\5\\~!@#$%^&( )_+=-0987654321`{}[%23];',\\single_neur~!@#$%^&( )_+=-0987654321`{}[%23];',on_40X_3.mrxs, -script, D:\\QMDownload\\5\\~!@#$%^&( )_+=-0987654321`{}[%23];',\\tpce66e23b_cda9_4090_b04a_b5603607aba8.groovy ; 15:23:36.512 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1 ; 15:23:36.562 [main] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.level[0].tile-width' not available, will return default value 256.0 ; 15:23:36.562 [main] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.level[0].tile-height' not available, will return default value 256.0 ; 15:23:36.812 [main] [INFO ] q.l.i.s.o.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@2f953efd: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 87 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0) ; 15:23:36.812 [main] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for D:\\QMDownload\\5\\~!@#$%^&( )_+=-0987654321`{}[%23];',\\single_neur~!@#$%^&( )_+=-0987654321`{}[%23];',on_40X_3.mrxs ; WARNING: An illegal reflective access operation has occurred ; WARNING: Illegal reflective access by org.codehaus.groovy.vmplugin.v7.Java7$1 (file:/C:/Program%20Files/QuPath-0.2.0-m1/app/groovy-2.5.6.jar) to constructor java.lang.invoke.MethodHandles$Lookup(java.lang.Class,int) ; WARNING: P",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/286:1451,avail,available,1451,https://qupath.github.io,https://github.com/qupath/qupath/issues/286,1,['avail'],['available']
Availability,"ons.; image. The purpose of the script is to remove the cells in one area, run an analysis that adds measurements based only on the cells in the second area, and then restore the cells that were removed. ```; //Load the LuCa object data before running!; resolveHierarchy() //let's make sure all of the cells are child objects of their annotations!; tumorAnnos = getAnnotationObjects().findAll{it.getPathClass() == getPathClass(""Tumor"")}; tumorCells = getCellObjects().findAll{it.getParent().getPathClass() == getPathClass(""Tumor"")}. //Remove the tumor annotations and their cells; removeObjects(tumorAnnos,false); removeObjects(tumorCells,false); //Analyze->Spatial analysis->Detect centroid distances 2D. detectionCentroidDistances(true); //Add everything back, and make sure the hierarchy is resolved!; addObjects(tumorAnnos); addObjects(tumorCells); resolveHierarchy(); ```. The code works most of the time. Probably 70%? I lack my usual variety of computers to test out whether it is based on my computer - but I do have a project file hosted online I can make available to run the test. Errors include: Null pointer exception popup in the lower right,. INFO: Starting script at Sat Jun 05 20:54:28 CDT 2021; WARN: Resolving hierarchy that contains 3 annotations and 1236 detections - this may be slow!; ERROR: QuPath exception; WARN: Resolving hierarchy that contains 3 annotations and 1236 detections - this may be slow!; INFO: Script run time: 0.25 seconds; The log file is not hugely informative on that one. Alternatively, I sometimes see a TMA core error. ```; ERROR: QuPath exception: Cannot invoke ""qupath.lib.objects.PathObject.isTMACore()"" because ""child"" is null; at qupath.lib.gui.panes.PathObjectHierarchyView$PathObjectTreeItem.getChildren(PathObjectHierarchyView.java:516); at qupath.lib.gui.panes.PathObjectHierarchyView$PathObjectTreeItem.isLeaf(PathObjectHierarchyView.java:544); at javafx.controls/javafx.scene.control.skin.TreeCellSkin.updateDisclosureNode(Unknown Source); at ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/744:1411,avail,available,1411,https://qupath.github.io,https://github.com/qupath/qupath/issues/744,1,['avail'],['available']
Availability,"oop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); File file = new File(dirOutput, name); ImageWriterTools.writeImageRegionWithOverlay(imageData, overlayOptions, request, file.getAbsolutePath()). // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; catch (Exception e) {; // Check if we have had a sufficient number of errors to just give up; nErrors++;; if (nErrors > maxErrors) {; println(""Maximum number of errors exceeded - aborting...""); return; }; e.printStackTrace(); }; }; }; }. ```",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309:3244,down,downsample,3244,https://qupath.github.io,https://github.com/qupath/qupath/issues/309,1,['down'],['downsample']
Availability,"oop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); File file = new File(dirOutput, name); ImageWriterTools.writeImageRegionWithOverlay(imageData, overlayOptions, request, file.getAbsolutePath()). // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; catch (Exception e) {; // Check if we have had a sufficient number of errors to just give up; nErrors++;; if (nErrors > maxErrors) {; println(""Maximum number of errors exceeded - aborting...""); return; }; e.printStackTrace(); }; }; }; }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-486778605:2871,down,downsample,2871,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605,1,['down'],['downsample']
Availability,"opic is really about loading training data to create classifiers, not classifiers themselves, so I will hide these posts to avoid distraction). —; Reply to this email directly, view it on GitHub<https://secure-web.cisco.com/1S_KCvGqBkfLiU4jUNxk9Bycpt04YwO2EwOrgjo7gUjY2EmjAMNPYCK9KZ3g1BcPOjN1yFkyZLgJnmGWBrpfDiblAR5l3lwK7LfMcHNHJqtYoWGQYJ9WYQ6dCoewz0Xk9P5-ZDRFW4OknOTxChetxm4Bs7LEng-ebDLB6a6AAXrEy8mWNCALTRoJs81HHMcvnMhDSjonYiBRlurLnCnBJZ4a9YvcrT8TplefFlZKST3NVLHrWPL3RgIyoJsDosp8GVf6MH94rRAHuopZp9J5pOcqjQmwnlC51e34AFYd1-8yRTnj7X0qzcw7aHtnILPwFXQIqYdBTGMqf-iZSDUUexg/https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F493%23issuecomment-1791280813>, or unsubscribe<https://secure-web.cisco.com/16fbsI3bTg2IXBtZ19rtjLXO9mTw2FP1PcVHSk2XFBBZjPYBQWKvTLiqsGr7UCwdHhDGRsg9tR1qzmQGBIyUICyyRtVvGvh-eu_HtL8Iyt807-ztz3U-i887buKPXzn2O2YTuhy7Xwb13QKvs-TXcflZ21x0cz69j7BIZd4l-aFk4r0Kw89JYQAASuY7o5O0vLb801LbUikLbLtblZgMPHiBe_SrbHoAccvQxrwkY0sMyvxdP_sq89PM0YloMPcUZfoeyvQt8mkLvXp5q2fymfiSTMaZDZDyzknBIzrUh60kAx4knbh5x28AHq2RAZ6YnA3Au7RGuJTZ8YYt7B4VE6g/https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FA5G6YB3KO5IO3F2PMFLETCDYCPOOXAVCNFSM4NF3XJJKU5DIOJSWCZC7NNSXTN2JONZXKZKDN5WW2ZLOOQ5TCNZZGEZDQMBYGEZQ>.; You are receiving this because you were mentioned.Message ID: ***@***.******@***.***>>; The information in this e-mail is intended only for the person to whom it is addressed. If you believe this e-mail was sent to you in error and the e-mail contains patient information, please contact the Mass General Brigham Compliance HelpLine at https://www.massgeneralbrigham.org/complianceline <https://www.massgeneralbrigham.org/complianceline> .; Please note that this e-mail is not secure (encrypted). If you do not wish to continue communication over unencrypted e-mail, please notify the sender of this message immediately. Continuing to send or respond to e-mail after receiving this message means you understand and accept this risk and wish to continue to communicate over unencrypted e-mail.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:3873,error,error,3873,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738,1,['error'],['error']
Availability,"ory requirements for 2D images because the original has not yet been closed. When investigating this, three other issues were noticed:. 1. The performance impact of using virtual stacks is *much* worse than I had expected, particularly for large 2D images that will frequently be cropped/duplicated. Extracting a region - even for a 2D plane - causes the data to be read from disk again.; 2. [`readBufferedImage(request)`](https://github.com/qupath/qupath/blob/75ec9cebe5e3bc5843fc60b07b455ce1215e1fb9/qupath-core-processing/src/main/java/qupath/imagej/images/servers/ImageJServer.java#L298) is synchronized - but the entire method does not need to be. This prevents calls to resize the extracted image being parallelized, even though this should be safe.; 3. Resizing is called once per channel, including for RGB images. However, in ImageJ's world the RGB image is treated as a single channel - and so any resizing is actually performed 3x rather than 1x. The last two operations seem to be entirely unnecessary. **To Reproduce**; The problem should occur when trying to open any large TIFF that has been written by ImageJ. If it is at the bounds of the available memory, this is likely to fail. If enough memory is available, it should succeed but perform badly. **Expected behavior**; `ImageJServer` should fully read 2D images - since using a virtual stack brings no benefits - and most multidimensional images, as long as they are small enough to fit comfortably in memory. Synchronization should be reduced, and resizing limited. It will sometimes still not be possible to open a non-pyramidal image via ImageJ directly. In this case, running `convert-ome` should be able to efficiently generate an OME-TIFF image. **Desktop (please complete the following information):**; - OS: All; - QuPath Version 0.3.0 (and earlier). **Additional context**; It may be preferable to extend `AbstractTileableImageServer` rather than `AbstractImageServer` to take advantage of the tile caching in the former.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/860:1925,avail,available,1925,https://qupath.github.io,https://github.com/qupath/qupath/issues/860,2,['avail'],['available']
Availability,"ory: Warning, Unknown field with tag 34677 (0x8775) encountered.`. I have specifically instructed QuPath to open the image using the BioFormats library, which knows how to handle this tag. Here is the script:. ```groovy; import qupath.lib.scripting.QP. // We want to specify the image server so that we get replicable results; // https://forum.image.sc/t/specifying-the-imageserver-image-provider-server-type>. // Get the URI of the image under consideration; we need to pass this; // to the new server. The image is specified as a commandline parameter; // in the QuPath call.; def currentServer = getCurrentServer(); def uri = currentServer.getURIs()[0]. def server = new qupath.lib.images.servers.bioformats.BioFormatsServerBuilder().buildServer(uri). // Get the current image and image name; def imageData = new ImageData(server); def name = server.getMetadata().getName(). def save_path = ""thumbnail_dir/"" + name + "".png"". def scale_factor = 8.0. // Save the entire image downsampled by a factor of scale_factor; def requestFull = RegionRequest.createInstance(server, scale_factor); writeImageRegion(server, requestFull, save_path); ```. I run it using the command line: . ```; qupath script -i ""31629 HE.bif"" image_thumbnail.groovy; ```. and the output is as follows:. ```; 11:36:08.817 [main] [INFO ] qupath.ScriptCommand - Setting tile cache size to 8030.00 MB (25.0% max memory); 11:36:09.171 [main] [WARN ] q.l.i.s.b.BioFormatsImageServer - Temp memoization directory created at /tmp/qupath-memo-14642445523855977691; 11:36:09.172 [main] [WARN ] q.l.i.s.b.BioFormatsImageServer - If you want to avoid this warning, either disable Bio-Formats memoization in the preferences or specify a directory to use; 11:36:09.363 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1; TIFFReadDirectory: Warning, Unknown field with tag 34677 (0x8775) encountered.; 11:36:09.429 [main] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.level[0].tile-width' not av",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/658:1084,down,downsampled,1084,https://qupath.github.io,https://github.com/qupath/qupath/issues/658,1,['down'],['downsampled']
Availability,"ot breaking everything else... like parts of paquo or warpy, and all existing scripts that need pixels. The approach I've taken here is to mark `readBufferedImage` as deprecated (and planned for removal), while also providing a default implementation that calls `readRegion`. These means that new classes won't need to implement the deprecated method. Then - and here it gets awkward - I've tried to allow older `ImageServer` implementations to still work by *also* providing a default implementation of `readRegion`. It will throw an `UnsupportedOperationException` *unless* it is called from a subclass that overrides the `readBufferedImage` method... in which case it will fall back to using that. The first time that happens, a warning will be logged. You can see the code at https://github.com/petebankhead/qupath/blob/server/qupath-core/src/main/java/qupath/lib/images/servers/ImageServer.java#L213. The outcome is that, with the current PR, *all* of these should work in a Groovy script:; ```groovy; def server = getCurrentServer(); double downsample = 100.0; def request = RegionRequest.createInstance(server, downsample); println server.readBufferedImage(request); println server.readRegion(request); println server.readRegion(downsample, 0, 0, server.getWidth(), server.getHeight()); println server.readRegion(downsample, 0, 0, server.getWidth(), server.getHeight(), 0, 0); ```; where the `readBufferedImage` call logs a warning *once* (for each `ImageServer` class) and the rest don't. My tentative plan would be to; * include this in QuPath v0.4.0 (hopefully later this month); * remove the default implementation of `readRegion` in v0.5.0, forcing any subclass of `ImageServer` to be updated to work... but still allowing scripts to use `readBufferedImage`, with the deprecation message logged; * remove `readBufferedImage` later, e.g. in v0.6.0. As far as I can tell, everything still works in QuPath itself - but I don't know how your projects might be affected. What do you all think?",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072:3018,down,downsample,3018,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072,3,['down'],['downsample']
Availability,"out uselessly reading the image files.; This last change alone allowed, on my projects, to improve the time when creating an object classifier from ~10/15minutes to ~5seconds.; I feel like this change is useful when a laboratory works with large projects with image locations being on a remote server. This is also possible thanks to QuPath's amazing design choice to never directly modify images.; If the scripts being run wants to access the images' pixels, it gracefully halts the execution of the all the following project entries too. _example_:; ```groovy; import qupath.imagej.tools.IJTools; import qupath.lib.images.PathImage; import ij.ImagePlus. var server = getCurrentServer(); var downsample = server.getDownsampleForResolution(Math.min(server.nResolutions()-1, 4)); PathImage<ImagePlus> pathImage = IJTools.convertToImagePlus(server, RegionRequest.createInstance(server, downsample)); ```; ""_Run for project (without saving and opening)_"":; ```; INFO: Starting script at Tue Mar 26 15:20:37 CET 2024; ERROR: The script tried to read pixels off an image while also requiring to run the script without accessing the image files.; WARN: Script cancelled with 53 image(s) remaining; INFO: Processed 54 images; INFO: Total processing time: 280 milliseconds; ```. ## HOW; Essentially this works by creating a `ImageServerStub` that extends `AbstractImageServer`. It retrieves metadata from the ProjectImageEntry itself (which in turn, i think, it gets them from the `.qpproj` file) and fails when `readRegion()` is being called. Additionally, it does not provide a server builder. This way, if the resulting image data are to be saved, the original ImageServer won't be overwritten/lost.; You can now pass a `openImage` boolean to `ProjectImageEntry.readImageData()` that, when false, just avoids getting the default image server, but just uses an instance of `ImageServerStub`. When running a `ProjectTask`, it will catch whether the script tried to access the image file. If it did, it stops",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1488:1145,down,downsample,1145,https://qupath.github.io,https://github.com/qupath/qupath/pull/1488,2,"['ERROR', 'down']","['ERROR', 'downsample']"
Availability,"output may be an issue with a gtk module?. Pasting Terminal Output from `sudo ./QuPath-0.2.0-m4` command:. ```; 10:11:46.562 [main] [INFO ] qupath.QuPath - Launching QuPath with args: ; Gtk-Message: 10:11:46.750: Failed to load module ""appmenu-gtk-module""; 10:11:46.955 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 10:11:46.956 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 10:11:47.045 [JavaFX Application Thread] [WARN ] qupath.lib.gui.QuPathGUI - No directory set for log files! None will be written.; 10:11:47.048 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.2.0-m4; Build time: 2019-08-20, 20:38; Latest commit tag: 'e9b60579'; 10:11:47.051 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Setting tile cache size to 1996.50 MB (25.0% max memory). (QuPath-0.2.0-m4:17581): Gdk-WARNING **: 10:11:47.691: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 10:11:48.207 [JavaFX Application Thread] [INFO ] q.l.i.s.b.BioFormatsOptionsExtension - Bio-Formats version 6.2.0; 10:11:48.216 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Bio-Formats server options (Bio-Formats 6.2.0) (20 ms); 10:11:48.235 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (19 ms); 10:11:48.278 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (42 ms); 10:11:48.290 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (12 ms); 10:11:48.294 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension OpenCV extensions (3 ms); Oct 13, 2019 10:11:48 AM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; Oct 13, 2019 10:11:48 AM jpen.provider.NativeLibraryLoader$4 run; INFO: jpen-2-4-x",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/369:1746,error,error,1746,https://qupath.github.io,https://github.com/qupath/qupath/issues/369,1,['error'],['error']
Availability,"p.gradle.org; ; BUILD FAILED in 721ms. The instructions that I am following are as follows:. $ git clone https://github.com/qupath/qupath; $ cd qupath; $ ./gradlew clean jpackage. I have:; ```; $ uname -a; Linux goku.bu.edu 3.10.0-1160.59.1.el7.x86_64 #1 SMP Wed Feb 23 16:47:03 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux. ```; and; ```; $ lsb_release -a; LSB Version:	:core-4.1-amd64:core-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.9.2009 (Core); Release:	7.9.2009; Codename:	Core; ```. also:; ```; $ java -version; openjdk version ""1.8.0_322""; OpenJDK Runtime Environment (build 1.8.0_322-b06); OpenJDK 64-Bit Server VM (build 25.322-b06, mixed mode); ```. I also don't understand why it is looking elsewhere than where I have zipped it and set the directory to it as in:; ```; [jalal@goku downloads]$ sudo vi /etc/profile.d/gradle.sh; [jalal@goku downloads]$ sudo chmod +x /etc/profile.d/gradle.sh; [jalal@goku downloads]$ source /etc/profile.d/gradle.sh; [jalal@goku downloads]$ gradle -v. ------------------------------------------------------------; Gradle 7.4.2; ------------------------------------------------------------. Build time: 2022-03-31 15:25:29 UTC; Revision: 540473b8118064efcc264694cbcaa4b677f61041. Kotlin: 1.5.31; Groovy: 3.0.9; Ant: Apache Ant(TM) version 1.10.11 compiled on July 10 2021; JVM: 1.8.0_322 (Red Hat, Inc. 25.322-b06); OS: Linux 3.10.0-1160.59.1.el7.x86_64 amd64. [jalal@goku downloads]$ cat /etc/profile.d/gradle.sh . export GRADLE_HOME=/opt/gradle/gradle-7.4.2; export PATH=${GRADLE_HOME}/bin:${PATH}. $ tail -1 ~/.bashrc; export PATH=$PATH:/opt/gradle/gradle-7.4.2/bin; $ source ~/.bashrc. ```. The plugin that is reported as missing in the error is in ; ```; [jalal@goku ~]$ find /opt/gradle -name ""gradle-plugins-7.4.2.jar""; /opt/gradle/gradle-7.4.2/lib/plugins/gradle-plugins-7.4.2.jar; ```. Full log of `./gradlew clean jpackage --stacktrace`: https://pastebin.com/raw/RuuJnuTe. Full log of `./gradlew clean jpackage --debug`:; h",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/950:1619,down,downloads,1619,https://qupath.github.io,https://github.com/qupath/qupath/issues/950,1,['down'],['downloads']
Availability,"p\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif ; ...........Written tile 12 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif ; Y =6000.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=6000, w=2000, h=338, z=0).tif ; ...........Written tile 13 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=6000, w=2000, h=338, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=6000, w=2000, h=338, z=0).tif ; ...........Written tile 14 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=6000, w=2000, h=338, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=6000, w=737, h=338, z=0).tif ; ...........Written tile 15 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=6000, w=737, h=338, z=0).tif",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:13775,error,error,13775,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,2,['error'],['error']
Availability,"path-core/src/main/java/qupath/lib/roi/GeometryTools.java#L723) isn't exactly informative, e.g. ```; NullPointerException at line 6: Cannot invoke ""org.locationtech.jts.geom.Geometry.getNumGeometries()"" because ""geometry"" is null; qupath.lib.roi.GeometryTools.flatten(GeometryTools.java:453); qupath.lib.roi.GeometryTools.removeInteriorRings(GeometryTools.java:487); qupath.lib.roi.GeometryTools.refineAreas(GeometryTools.java:736); org.codehaus.groovy.vmplugin.v8.IndyInterface.fromCache(IndyInterface.java:318); Script21.run(Script21.groovy:7); ```. **To Reproduce**; Code to reproduce the behavior:. ```groovy; // Create a Line ROI; var roi = ROIs.createLineROI(0, 0, 100, 100, ImagePlane.getDefaultPlane()); // Alternative to create a Point ROI (also fails in a similar way); // var roi = ROIs.createPointsROI(0, 10, ImagePlane.getDefaultPlane()); var geom = roi.getGeometry(); GeometryTools.refineAreas(geom, 1000, 1000); ```. **Expected behavior**; The faulty input should be caught earlier and an `IllegalArgumentException` thrown with a more informative message. This is what happens with the closest method from [`RoiTools`](https://github.com/qupath/qupath/blob/v0.3.2/qupath-core/src/main/java/qupath/lib/roi/RoiTools.java#L268), i.e. calling; ```groovy; var roi = ROIs.createLineROI(0, 0, 100, 100, ImagePlane.getDefaultPlane()); RoiTools.removeSmallPieces(roi, 1000, 1000); ```; results in; ```; IllegalArgumentException at line 3: Only area ROIs supported!; qupath.lib.roi.RoiTools.removeSmallPieces(RoiTools.java:382); org.codehaus.groovy.vmplugin.v8.IndyInterface.fromCache(IndyInterface.java:318); Script23.run(Script23.groovy:4); ```. However there are at least two problems with the javadoc for the `RoiTools` method:; * the `IllegalArgumentException` isn't mentioned; * it isn't obvious that the method returns null if the entire ROI is removed (rather than an empty ROI) - so this should be documented. **Desktop (please complete the following information):**; - OS: All; - QuPath",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1060:1204,fault,faulty,1204,https://qupath.github.io,https://github.com/qupath/qupath/issues/1060,1,['fault'],['faulty']
Availability,"path.opencv.dnn.OpenCVDnn$OpenCVNetFunction.predict(OpenCVDnn.java:732); qupath.opencv.dnn.DnnModel.convertAndPredict(DnnModel.java:100); qupath.ext.stardist.StarDist2D.detectObjectsForTile(StarDist2D.java:1249); qupath.ext.stardist.StarDist2D.lambda$detectObjects$7(StarDist2D.java:934); java.base/java.util.stream.ReferencePipeline$7$1.accept(Unknown Source); java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source); java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source); java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source); java.base/java.util.stream.ReduceOps$ReduceTask.doLeaf(Unknown Source); java.base/java.util.stream.ReduceOps$ReduceTask.doLeaf(Unknown Source); java.base/java.util.stream.AbstractTask.compute(Unknown Source); java.base/java.util.concurrent.CountedCompleter.exec(Unknown Source); java.base/java.util.concurrent.ForkJoinTask.doExec(Unknown Source); java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(Unknown Source); java.base/java.util.concurrent.ForkJoinPool.scan(Unknown Source); java.base/java.util.concurrent.ForkJoinPool.runWorker(Unknown Source); java.base/java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source). ```. **Expected behavior**; The script should run without any error, yielding cell detections within the annotation. **Desktop (please complete the following information):**; - OS: Windows 10; - QuPath Version: 0.4.0, built from source on 2022-12-07; - StarDist Extension Version: 0.4.0 (reproducible with 0.3.2 as well). **Additional context**; The changelog of 0.4.0 points to two separate issues that were marked as resolved, which could be linked to this issue:; https://github.com/qupath/qupath/issues/841; https://github.com/qupath/qupath-extension-stardist/issues/11. Given that issue #841 was marked as resolved 5 days ago, it could be linked to that. Perhaps there were some changes to the API such that closing of the model should be scripted differently?",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1180:3598,error,error,3598,https://qupath.github.io,https://github.com/qupath/qupath/issues/1180,1,['error'],['error']
Availability,"pe"": ""annotation"",; ""measurements"": {; ""Area µm^2"": 3.5567575437333584E7,; ""Length µm"": 62782.89619349399,; ""Solidity"": 0.5638625874807928,; ""Max diameter µm"": 12192.853113808404,; ""Min diameter µm"": 7673.144125811996; }; }; }; ```. The following script creates a mask the 'QuPath' way:; ```groovy; def roi = getSelectedROI(); def mask = BufferedImageTools.createROIMask(roi, 10); new ij.ImagePlus(""Mask"", mask).show(); ```. You can generate an 'ImageJ' mask using _Extensions → ImageJ → Send region to ImageJ_ and then _Edit > Selection > Create Mask_. ### Expected behavior; When sending a QuPath ROI to ImageJ, any masks generated in either application should be identical - or at least very similar. This might be achieved by converting complicated `PolygonROI` instances into `GeometryROIs`. ### Screenshots; #### In QuPath; <img width=""903"" alt=""QuPath mask"" src=""https://github.com/user-attachments/assets/5ebd2fc7-12ef-4cec-8928-115fece9fe4e"">. #### In ImageJ; <img width=""903"" alt=""ImageJ mask"" src=""https://github.com/user-attachments/assets/0af83a44-d1d0-4cc9-b706-0d337eec2769"">. ### Desktop (please complete the following information):; - OS: All; - QuPath Version: 0.5.1 (presumably earlier versions too). ### Additional context; ImageJ's choice of winding rule may well be more sensible - but it is not something we should change in QuPath too quickly. This clearly *could* be a serious problem for some workflows, but I struggle to think of a time when it is likely to have been a problem in reality. It is only likely to impact `PolygonROIs` with self-intersections. While these can be drawn in the viewer, internally QuPath will typically convert these to be `GeometryROIs` - and these seem to behave ok. Note that ImageJ's mask generation is in general a bit more sophisticated than QuPaths (see [here](https://github.com/imagej/ImageJ/blob/7d8d18b0dd78582cbc7ebf3cde745d5a8ac32007/ij/gui/ShapeRoi.java#L1024)), which is something that warrants investigation in the future as well.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1674:7929,mask,mask,7929,https://qupath.github.io,https://github.com/qupath/qupath/issues/1674,1,['mask'],['mask']
Availability,"pixels, JPEG (or PNG) and downsample of 32.; 4. Check the right edge of the produced image. There is a black column of width 1. *Expected behavior*; No black column on any downsample. *Desktop:*; - OS: macOS and Linux, so probably not OS dependant.; - QuPath Version: 0.6.0-SNAPSHOT. *Additional context*; The problem occurs in the [AbstractTileableImageServer.readRegion()](https://github.com/qupath/qupath/blob/76415104d0653c674716d69a1ecb51e59dae0e83/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L266) function. When requesting an image with downsample 32:; * A black image of width 1432 (=`round(imageWidth/32)`) is created ([here](https://github.com/qupath/qupath/blob/76415104d0653c674716d69a1ecb51e59dae0e83/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L302C4-L302C17)).; * All tiles with downsample 16 (because it's the lowest resolution) are retrieved ([here](https://github.com/qupath/qupath/blob/76415104d0653c674716d69a1ecb51e59dae0e83/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L275C3-L275C13)).; * Images corresponding to the above tiles are drawn to the above black image ([here](https://github.com/qupath/qupath/blob/76415104d0653c674716d69a1ecb51e59dae0e83/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L328)). The problem is that the resulting image of downsample 32 is of width 1432, which corresponds to pixels 0 to **45824** (=`1432*32`) of the full resolution image on the x-axis, while the width of the image of downsample 16 is 2863, which corresponds to pixels 0 to **45808** (=`2863*16`) of the full resolution image. `45808 < 45824`, so the last pixel of each row of the resulting image of downsample 32 is not painted. The image of downsample 16 covers pixels 0 to 45808, because `imageWidth/16 = 2863.4375`, and its width is `round(imageWidth/16) = 2863`, so some pixel values are lost when rounding 2863.4375.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1527:1852,down,downsample,1852,https://qupath.github.io,https://github.com/qupath/qupath/issues/1527,4,['down'],['downsample']
Availability,"pl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:708); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.java:819); at qupath.lib.display.ImageDisplay.updateHistogramMap(ImageDisplay.java:554); at qupath.lib.display.ImageDisplay.setImageData(ImageDisplay",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:3537,Down,Downloads,3537,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['Down'],['Downloads']
Availability,"porting this to the maintainers of org.codehaus.groovy.vmplugin.v7.Java7$1 ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 15:23:37.065 [main] [ERROR] qupath.QuPath - Error running script! ; javax.script.ScriptException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:158) ; 	at qupath.QuPath.main(QuPath.java:161) ; Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311) ; 	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:151) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:121) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:133) ; 	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:325) ; 	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:224) ; 	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:190) ; 	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:226) ; 	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:196) ; 	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:965) ; 	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647) ; 	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623) ; 	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:600) ; ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/286:3474,Error,ErrorCollector,3474,https://qupath.github.io,https://github.com/qupath/qupath/issues/286,1,['Error'],['ErrorCollector']
Availability,"proceed(DaemonCommandExecution.java:104); at org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:55); at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104); at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:63); at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37); at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104); at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:82); at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37); at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104); at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:52); at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:297); at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64); at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630); at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56); at java.base/java.lang.Thread.run(Thread.java:832). FAILURE: Build failed with an exception. * What went wrong:; Could not initialize class org.codehaus.groovy.reflection.ReflectionCache. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. BUILD FAILED in 5s. looking forward for you response ; Brijeshwar,",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/427:14367,FAILURE,FAILURE,14367,https://qupath.github.io,https://github.com/qupath/qupath/issues/427,1,['FAILURE'],['FAILURE']
Availability,"ps to reproduce the behavior:; ```bash; cd qupath-0.4.3; gradle clean jpackage -Porg.gradle.java.home=/usr/lib/jvm/default; ```. **Expected behavior**; success to build qupath 0.4.3. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: ArchLinux; - QuPath Version: 0.4.3; - java: jdk-openjdk 20.0.1.u9-3; - gradle: 8.1.1. **Additional context**; logs:; ```text; > Configure project :qupath-app; Unable to determine Java version from toolchain: No matching toolchains found for requested specification: {languageVersion=17, vendor=any, implementation=vendor-specific}.; Unable to determine Java version from toolchain: No matching toolchains found for requested specification: {languageVersion=17, vendor=any, implementation=vendor-specific}. FAILURE: Build failed with an exception. * Where:; Build file '/build/qupath/src/qupath-0.4.3/qupath-app/build.gradle' line: 540. * What went wrong:; A problem occurred configuring project ':qupath-app'.; > Failed to calculate the value of task ':qupath-app:compileJava' property 'javaCompiler'.; > No matching toolchains found for requested specification: {languageVersion=17, vendor=any, implementation=vendor-specific}.; > No locally installed toolchains match (see https://docs.gradle.org/8.1.1/userguide/toolchains.html#sec:auto_detection) and toolchain download repositories have not been configured (see https://docs.gradle.org/8.1.1/userguide/toolchains.html#sub:download_repositories).; ```; It seems related to how we specify the toolchain, https://github.com/qupath/qupath/blob/1368912885c1a191beaea32c28d85a3707f657f8/qupath-app/build.gradle#L535-L548; Maybe, we could follow this: https://github.com/Project-MONAI/MONAILabel/blob/0332f42643015046055a3410b770d1e8a0e1bd57/plugins/qupath/build.gradle#L39-L51; Just add a project property `toolchain` with a default value, so user could specify it with `-Ptoolchain=20` or simply use the default one (eg. 17).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1262:1496,down,download,1496,https://qupath.github.io,https://github.com/qupath/qupath/issues/1262,1,['down'],['download']
Availability,"ps://forum.image.sc/tags/qupath). This helps us keep things organized. ## Before we begin... Before submitting your bug report, please check the following:. * [ X ] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [ X ] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [ X ] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [ X ] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; A clear and concise description of what the bug is. Installing QuPath under two different users in the same computer allows for the second installation to access the directory of the first user that installed the software. These seems to be a security bug. This doesn't occur when installing the zip version. **To Reproduce**; Steps to reproduce the behavior:; 1. Download the "".msi"" QuPath installation file ; 2. Install in a first user -> admin rights require for installation; 3. Complete installation and start the program; 4. Sign out of the first session ; 5. Sign in into the next user; 6. Download the "".msi"" file ; 7. Install QuPath -> admin rights require for installation.; 8. Here you will notice that the setup steps are skip; 9. If you go to the extensions folder through the extension tab in QuPath you will notice that the paths are associated to the first user. **Expected behavior**; A clear and concise description of what you expected to happen. No access to the file system of other users since that rises a security concern. . **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Windows, macOS, Ubuntu...] Windows; - QuPath Version: [e.g. 0.2.2] v0.3.2. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108:1253,Down,Download,1253,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108,2,['Down'],['Download']
Availability,"ps://github.com/qupath/qupath/commit/7e7e95. But when I run it (without tensorflow) it either hangs:. ```; 11:55:44.676 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (143 ms); 11:55:44.708 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (32 ms); Jun 11, 2020 11:55:44 AM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; ```. Or segfaults:. ```; 12:20:05.035 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1; Unhandled exception; Type=Segmentation error vmState=0x00000000; J9Generic_Signal_Number=00000018 Signal_Number=0000000b Error_Value=00000000 Signal_Code=00000001; Handler1=00007F6CE64C99B0 Handler2=00007F6CE5DBD9F0 InaccessibleAddress=0000000000000000; RDI=00007F6CE8D56C03 RSI=0000000000000000 RAX=0000000000000000 RBX=00007F6CE8F580E0; RCX=000000000000000E RDX=0000000000000000 R8=0000000000000000 R9=0000000000000073; R10=0000000000000000 R11=0000000000000073 R12=00007F6ACBE8D7B0 R13=00007F6CE6C01340; R14=00007F6ACBE8D7B0 R15=00007F6A6C019B08; RIP=00007F6CE8D56622 GS=0000 FS=0000 RSP=00007F6ACBE8D710; EFlags=0000000000010213 CS=0033 RBP=00007F6CE877A0F2 ERR=0000000000000004; TRAPNO=000000000000000E OLDMASK=0000000000000000 CR2=0000000000000000; xmm0 61622f656d6f682f (f: 1836017664.000000, d: 1.278334e+161); xmm1 2e302d6874615075 (f: 1952534656.000000, d: 3.252889e-86); xmm2 4e203a296c6c756e (f: 1819047296.000000, d: 2.187422e+68); xmm3 642f62696c2f656d (f: 1815045504.000000, d: 3.881161e+174); xmm4 7369646572206e61 (f: 1914728064.000000, d: 8.877002e+247); xmm5 6f6d2e6362696c2f (f: 1651076096.000000, d: 5.530316e+228); xmm6 5f434c2f6e652f65 (f: 1852125056.000000, d: 7.896072e+150); xmm7 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm8 6e75007325203a73 (f: 622869120.000000, d: 1.214654e+224); xmm9 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm10 3f8eb851eb851eb9 ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-642557843:737,error,error,737,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-642557843,1,['error'],['error']
Availability,qupath version 0.0.2-alpha; After I install OpenSlide native libraries. `09:47:53.189 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!!; 09:47:53.200 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.0; 09:47:53.640 [main] [ERROR] q.l.i.s.b.BioFormatsServerBuilder - Unable to open file:/app/101.0.img.tif: {}; java.lang.NullPointerException: null; at loci.formats.in.APLReader.isThisType(APLReader.java:98); at loci.formats.ImageReader.getReader(ImageReader.java:188); at loci.formats.ImageReader.setId(ImageReader.java:839); at loci.formats.ReaderWrapper.setId(ReaderWrapper.java:650); at loci.formats.Memoizer.setId(Memoizer.java:690); at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.createReader(BioFormatsImageServer.java:1148); at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.createReader(BioFormatsImageServer.java:1082); at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.getPrimaryReader(BioFormatsImageServer.java:996); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.<init>(BioFormatsImageServer.java:215); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.<init>(BioFormatsImageServer.java:179); at qupath.lib.images.servers.bioformats.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:53); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:166); at qupath.lib.GenowisAPI.cellSegmentation(GenowisAPI.java:69)`,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/389#issuecomment-567863564:94,ERROR,ERROR,94,https://qupath.github.io,https://github.com/qupath/qupath/issues/389#issuecomment-567863564,2,['ERROR'],['ERROR']
Availability,"qupath-master/qupath-extension-bioformats/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-openslide/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin; /public/home/yangzhzh/tools/jdk-14/bin --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/tools/qupath-master/build/dist --main-jar qupath-0.2.0-m4.jar --name QuPath-0.2.0-m4 --java-options -XX:MaxRAMPercentage=50 --app-version 0.2.0-m4 --icon /public/home/yangzhzh/tools/qupath-master/build/resources/main/package/linux/QuPath.png --runtime-image /public/home/yangzhzh/tools/qupath-master/build/jre. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':createPackage'.; > A problem occurred starting process 'command '/public/home/yangzhzh/tools/jdk-14/bin''. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. BUILD FAILED in 11s; 41 actionable tasks: 3 executed, 38 up-to-date. Any idea of why?; Thanks,; Zhenzhen",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-534106040:2311,FAILURE,FAILURE,2311,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534106040,1,['FAILURE'],['FAILURE']
Availability,"r you want:; ```groovy; def timeit = new Timeit().start(); Thread.sleep(100); println timeit; Thread.sleep(200); println timeit; ```; Output:; ```; Time since start	106 ms; Time since start	314 ms; ```. It's also possible to have a bit more control, setting named checkpoints along the way:. ```groovy; var timeit = new Timeit(); .microseconds(); .start(""First checkpoint""); ; println 'Doing something now'; Thread.sleep(100). timeit.checkpoint(""Second checkpoint""). println 'Waiting for a bit'; Thread.sleep(200); ; timeit.stop(). println ""Doing something that isn't timed""; Thread.sleep(200). println timeit; ```. Output:; ```; Doing something now; Waiting for a bit; Doing something that isn't timed; First checkpoint	106323 µs; Second checkpoint	208185 µs; Total duration	314508 µs; ```. It can also be used to run the same code multiple times, reporting the individual and average times:. ```groovy; var timeit = new Timeit(); .summarizeCheckpoints(); .checkpointAndRun(""My calculation"", () -> mySlowCalculation(), 10); ; println timeit.stop() // Important to stop to get time for last checkpoint. void mySlowCalculation() {; def x = 2 + 2; Thread.sleep(50); }; ```. Output:; ```; My calculation (1)	56 ms; My calculation (2)	55 ms; My calculation (3)	54 ms; My calculation (4)	55 ms; My calculation (5)	61 ms; My calculation (6)	52 ms; My calculation (7)	55 ms; My calculation (8)	55 ms; My calculation (9)	53 ms; My calculation (10)	57 ms; Total duration	554 ms; Average per checkpoint: 55 ms; ```. ## Fix methods to get objects. Add missing `QP.getTileObjects()` method (https://github.com/qupath/qupath/issues/1065). Also ensure that `QP.getAllObjects()` returns a collection rather than array, for better consistency. ## Add version checking scripting methods. New methods to check the running QuPath version in scripts.; If the check fails, an exception will be thrown that will cause the script not to run. ```groovy; // Version v0.4.0 or newer; checkMinVersion('0.4.0'). // Version v0.4.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1078:3223,checkpoint,checkpointAndRun,3223,https://qupath.github.io,https://github.com/qupath/qupath/pull/1078,1,['checkpoint'],['checkpointAndRun']
Availability,"rage of additional metadata, i.e. pixel sizes and coordinates.; */. import ij.IJ; import ij.ImagePlus; import qupath.imagej.images.servers.ImagePlusServer; import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.lib.images.servers.ImageServer; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QP. import java.awt.image.BufferedImage. /*; * Adjustable parameters; */; int tileWidthPixels = 5000 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 10 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput = ""G:\\Image Dump"" // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!. int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 1000 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = serverOriginal.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsa",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/85#issuecomment-315148862:1599,error,errors,1599,https://qupath.github.io,https://github.com/qupath/qupath/issues/85#issuecomment-315148862,1,['error'],['errors']
Availability,"rash happens when I try to change the settings above, while 'Live prediction' runs. 4. See error; ```; # A fatal error has been detected by the Java Runtime Environment:; #; # EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x0000000000cb5b26, pid=9416, tid=7376; #; # JRE version: OpenJDK Runtime Environment (13.0.1+9) (build 13.0.1+9); # Java VM: OpenJDK 64-Bit Server VM (13.0.1+9, mixed mode, tiered, compressed oops, g1 gc, windows-amd64); # Problematic frame:; # C 0x0000000000cb5b26; #; # No core dump will be written. Minidumps are not enabled by default on client versions of Windows; #; # If you would like to submit a bug report, please visit:; # https://github.com/AdoptOpenJDK/openjdk-build/issues; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #. --------------- S U M M A R Y ------------. Command Line: -Djava.library.path=C:\Users\ag5-35\Downloads\QuPath-0.2.0-m8-Windows\QuPath-0.2.0-m8\app;C:\Users\ag5-35\Downloads\QuPath-0.2.0-m8-Windows\QuPath-0.2.0-m8 -Djava.launcher.path=C:\Users\ag5-35\Downloads\QuPath-0.2.0-m8-Windows\QuPath-0.2.0-m8 -Xmx8192M -XX:MaxRAMPercentage=50 qupath.QuPath. Host: Intel(R) Core(TM) i5-9400 CPU @ 2.90GHz, 6 cores, 15G, Windows 10 , 64 bit Build 18362 (10.0.18362.329); Time: Tue Jan 28 18:35:40 2020 W. Europe Standard Time elapsed time: 148 seconds (0d 0h 2m 28s). --------------- T H R E A D ---------------. Current thread (0x000001d550e5e800): JavaThread ""classifier-overlay6"" daemon [_thread_in_native, id=7376, stack(0x0000002279b00000,0x0000002279c00000)]. Stack: [0x0000002279b00000,0x0000002279c00000], sp=0x0000002279bf9e20, free space=999k; Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code); C 0x0000000000cb5b26. Java frames: (J=compiled Java code, j=interpreted, Vv=VM code); j org.bytedeco.opencv.opencv_ml.LogisticRegression.predict(Lorg/bytedeco/opencv/opencv_core/Mat;Lorg/bytedeco/opencv/opencv_core/Mat;I)F+0; j qupath.o",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/394:1725,Down,Downloads,1725,https://qupath.github.io,https://github.com/qupath/qupath/issues/394,1,['Down'],['Downloads']
Availability,"rations ; WARNING: All illegal access operations will be denied in a future release ; 15:23:37.065 [main] [ERROR] qupath.QuPath - Error running script! ; javax.script.ScriptException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:158) ; 	at qupath.QuPath.main(QuPath.java:161) ; Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311) ; 	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:151) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:121) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:133) ; 	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:325) ; 	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:224) ; 	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:190) ; 	at org.codehaus.groovy.control.SourceUnit.parse(SourceUnit.java:226) ; 	at org.codehaus.groovy.control.CompilationUnit$1.call(CompilationUnit.java:196) ; 	at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:965) ; 	at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647) ; 	at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623) ; 	at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:600) ; 	at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390) ; 	at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89) ; 	at groovy.lang.Groo",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/286:3645,Error,ErrorCollector,3645,https://qupath.github.io,https://github.com/qupath/qupath/issues/286,1,['Error'],['ErrorCollector']
Availability,rce); at javafx.base/javafx.beans.property.ObjectPropertyBase.set(Unknown Source); at javafx.controls/javafx.scene.control.TreeView.setRoot(Unknown Source); at qupath.lib.gui.panes.PathObjectHierarchyView.hierarchyChanged(PathObjectHierarchyView.java:563); at qupath.lib.gui.panes.PathObjectHierarchyView.lambda$hierarchyChanged$11(PathObjectHierarchyView.java:559); at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(Unknown Source); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(Unknown Source); at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(Unknown Source); at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); ```; Still other times I see another error:. ```; ERROR: QuPath exception; at java.base/java.util.LinkedHashMap$LinkedHashIterator.nextNode(Unknown Source); at java.base/java.util.LinkedHashMap$LinkedKeyIterator.next(Unknown Source); at qupath.lib.objects.PathObject.nDescendants(PathObject.java:475); at qupath.lib.objects.PathObjectTools.countDescendants(PathObjectTools.java:200); at qupath.lib.objects.PathObject.objectCountPostfix(PathObject.java:190); at qupath.lib.objects.PathObject.toString(PathObject.java:224); at qupath.lib.gui.panes.PathObjectListCell.updateItem(PathObjectListCell.java:66); at qupath.lib.gui.panes.PathObjectListCell.updateItem(PathObjectListCell.java:36); at javafx.controls/javafx.scene.control.ListCell.updateItem(Unknown Source); at javafx.controls/javafx.scene.control.ListCell.lambda$new$2(Unknown Source); at javafx.base/javafx.collections.WeakListChangeListener.onChanged(Unknown Source); at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(Unknown Source); at javafx.base/com.sun.javaf,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/744:5225,ERROR,ERROR,5225,https://qupath.github.io,https://github.com/qupath/qupath/issues/744,1,['ERROR'],['ERROR']
Availability,"read] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: ImageJ server for /home/bl/Documents/IMG_5_11_sq.png; 02:40:14.153 [JavaFX Application Thread] [INFO ] qupath.lib.gui.viewer.QuPathViewer - Image data set to ImageData: Fluorescence, IMG_5_11_sq; 02:40:22.852 [JavaFX Application Thread] [INFO ] q.lib.scripting.DefaultScriptEditor - Loading script file /home/bl/ip/QuPath/app/TestJep.groovy; 02:40:28.109 [richscripteditor-1] [INFO ] q.lib.scripting.DefaultScriptEditor - Mean red (from Java): 86.81525; 02:40:28.121 [richscripteditor-1] [INFO ] q.lib.scripting.DefaultScriptEditor - Mean green (from Java): 72.492275; 02:40:28.124 [richscripteditor-1] [INFO ] q.lib.scripting.DefaultScriptEditor - Mean blue (from Java): 68.141675; 02:40:28.624 [richscripteditor-1] [INFO ] q.lib.scripting.DefaultScriptEditor - Started JEP: jep.Jep@6bc4b2e2; ImportError: numpy.core.multiarray failed to import; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00007f930536d03f, pid=27357, tid=0x00007f932091e700; #; # JRE version: OpenJDK Runtime Environment (8.0_111-b14) (build 1.8.0_111-8u111-b14-2ubuntu0.16.04.2-b14); # Java VM: OpenJDK 64-Bit Server VM (25.111-b14 mixed mode linux-amd64 compressed oops); # Problematic frame:; # C [jep.so+0x1a03f] convert_jndarray_pyndarray+0x5bf; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /home/bl/ip/QuPath/app/hs_err_pid27357.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #. [1]+ Aborted (core dumped) ./QuPath; ```. I am thinking that this might be worth bringing up with the JEP developers. I am going to spend a little more time playing with J",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262870405:9412,error,error,9412,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262870405,1,['error'],['error']
Availability,recreated - unrotated. Same error again: ; ![grafik](https://user-images.githubusercontent.com/16352785/51772368-1ea4d380-20ec-11e9-9bea-87a6acf1fdd6.png),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/259#issuecomment-457725262:28,error,error,28,https://qupath.github.io,https://github.com/qupath/qupath/issues/259#issuecomment-457725262,1,['error'],['error']
Availability,"red me at times & required adjusting the code, although it's not too tricky: http://groovy-lang.org/differences.html#_lambdas; Other differences (e.g. with `equals` or numbers becoming `BigDecimal` if not explicitly made something else) can be a bit troublesome, but more so when using most Groovy-specific features. Fortunately, it looks like the lambda situation will change with Groovy 3.0: http://groovy-lang.org/releasenotes/groovy-3.0.html. With implementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for different scripting languages. I'm tentatively considering a switch to u",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/253#issuecomment-450918869:1123,error,errors,1123,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869,1,['error'],['errors']
Availability,"rentImageData().getServer(). // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = serverOriginal.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309:2737,down,downsample,2737,https://qupath.github.io,https://github.com/qupath/qupath/issues/309,1,['down'],['downsample']
Availability,"rentImageData().getServer(). // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = serverOriginal.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Read the image region; ImagePlus imp = server.readImagePlusRegion(request).getImage(false); // Get a suitable file name; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); // Create ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/85#issuecomment-315148862:2914,down,downsample,2914,https://qupath.github.io,https://github.com/qupath/qupath/issues/85#issuecomment-315148862,1,['down'],['downsample']
Availability,"riginally openable( and only Bioformats can handle it because without this extension then QuPath cannot open it) in QuPath using BioFormats Extension, such as .vsi/.scn format, then the command raise error:. However, the image Leica-Fluorescence-1.scn could be hand-opened in QuPath, and after openning, I can run the same script by clicking inside QuPath without problem. So the issue would be that how to let Bioformats extension usable when call QuPath from system command, but bot GUI. Any suggestions are welcome.; ================. 20:56:55.735 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, D:\\QMDownload\\6\\[failed_handOK]Leica_scn\\Leica-Fluorescence-1.scn, -script, D:\\QMDownload\\6\\Tiling_a_whole_slide_image.groovy ; 20:56:55.829 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!! ; Unsupported format or not found ; 20:56:55.876 [main] [WARN ] q.i.i.servers.ImageJServerBuilder - Error opening D:\\QMDownload\\6\\[failed_handOK]Leica_scn\\Leica-Fluorescence-1.scn with ImageJ: Could not open D:\\QMDownload\\6\\[failed_handOK]Leica_scn\\Leica-Fluorescence-1.scn with ImageJ ; 20:56:55.907 [main] [WARN ] q.l.i.servers.OpenslideServerBuilder - Unable to open D:\\QMDownload\\6\\[failed_handOK]Leica_scn\\Leica-Fluorescence-1.scn with OpenSlide: Can't find main image ; 20:56:55.907 [main] [ERROR] q.l.i.servers.ImageServerProvider - Unable to build whole slide server - check your classpath for a suitable library (e.g. OpenSlide, BioFormats); 	 ; 20:56:55.907 [main] [ERROR] q.l.i.servers.ImageServerProvider - C:\Program Files\QuPath\app\QuPathApp.jar;qupath/qupath-core-0.1.2.jar;qupath/qupath-core-awt-0.1.2.jar;qupath/qupath-core-processing-0.1.2.jar;qupath/qupath-core-processing-awt-0.1.2.jar;qupath/qupath-extension-ij-0.1.2.jar;qupath/qupath-extension-input-0.1.2.jar;qupath/qupath-extension-opencv-0.1.2.jar;qupath/qupath-extension-openslide-0.1.2.jar;qupath/qupath-extension-pen-0.1.2.jar;qupath/qup",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/260:1447,Error,Error,1447,https://qupath.github.io,https://github.com/qupath/qupath/issues/260,1,['Error'],['Error']
Availability,"riptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by null at qupath.lib.images.servers.BioFormatsImageServer.getTimePoint(BioFormatsImageServer.java:930); at qupath.imagej.images.servers.BufferedImagePlusServer.getTimePoint(BufferedImagePlusServer.java:173); at qupath.imagej.helpers.IJTools.calibrateImagePlus(IJTools.java:220); at qupath.imagej.images.servers.BufferedImagePlusServer.readImagePlusRegion(BufferedImagePlusServer.java:241); at qupath.imagej.detect.tissue.SimpleTissueDetection2$GlobalThresholder.runDetection(SimpleTissueDetection2.java:158); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:120); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); INFO: Processing complete in 4,20 seconds; INFO: Completed with error java.lang.NullPointerException; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424986075:12059,error,error,12059,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075,1,['error'],['error']
Availability,"rocess(Scene.java:3903); at javafx.scene.Scene.processMouseEvent(Scene.java:1887); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2620); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449); at com.sun.glass.ui.View.handleMouseEvent(View.java:551); at com.sun.glass.ui.View.notifyMouse(View.java:937); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:316); at java.base/java.lang.Thread.run(Unknown Source); INFO: Image data set to ImageData: Brightfield (other), Training Img (Classifier); ERROR: Bidirectional binding failed, setting to the previous value (see full stack trace above, or use 'debug' log level); ERROR: Bidirectional binding failed, setting to the previous value (see full stack trace above, or use 'debug' log level)`. When I run it on QuPath 0.4.0, I don't have this issue. **To Reproduce**; Steps to reproduce the behavior:; 1. Go to 'Click to add points'; 2. Click on 'Set Class'. **Expected behavior**; Unable to set Class to points. **Screenshots**; ![Screenshot from 2023-01-09 10-00-42](https://user-images.githubusercontent.com/32599059/211272175-1182c24d-c859-4345-a939-1ef4fb295ecd.png). **Desktop (please complete the following information):**; - OS: Ubuntu 22.04; - QuPath Version: 0.4.1. **Additional context**; It is a version of QuPath build on source to be compatible with Cuda for Gpu acceleration (for CellPose).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1202:15901,ERROR,ERROR,15901,https://qupath.github.io,https://github.com/qupath/qupath/issues/1202,2,['ERROR'],['ERROR']
Availability,"rt, please check the following:. * [x] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [x] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [x] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; `QuPath convert-ome` returns exit code 0 despite failure. **To Reproduce**; Steps to reproduce the behavior:; ```; scale=2; tile=1024; comp=ZLIB; input=broken_image.tif; output=broke_omage.ome.tif; QuPath convert-ome $input $output \; --pyramid-scale=$scale \; --tile-size=$tile \; --compression=$comp \; --parallelize; ```; Output (truncated); ```; 20:39:42.582 [main] [INFO ] q.l.i.s.b.BioFormatsServerOptions - Setting max Bio-Formats readers to 2; 20:39:43.272 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.274 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.275 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; ...; 20:39:43.604 [main] [ERROR] q.l.i.writers.ome.ConvertCommand - Unable to open file:broken_image.tif; java.io.IOException: Unable to open file:broken_image.tif; at qupath.lib.images.servers.ImageServers.buildServer(ImageServers.java:306); at qupath.lib.images.writers.ome.ConvertCommand.run(ConvertCommand.java:147); at picocli.CommandLine.executeUserObject(CommandLine.java:2026); at picocli.CommandLine.access$1500(CommandLine.java:148); at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2461); at picocli.CommandLine$RunLast.handle(CommandLine.java:2453); at picocli.CommandLine$RunLast.handle(CommandLine.java:2415); at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2273)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1451:1354,ERROR,ERROR,1354,https://qupath.github.io,https://github.com/qupath/qupath/issues/1451,1,['ERROR'],['ERROR']
Availability,rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bcf000-7f7942bd0000 r--p 0009d000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bd0000-7f7942bdb000 rw-p 0009e000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f7942bdb000-7f7942d00000 rw-p 00000000 00:00 0 ; 7f7942d00000-7f7942e00000 rw-p 00000000 00:00 0 ; 7f7942e00000-7f7943100000 rw-p 00000000 00:00 0 ; 7f7943100000-7f79431f0000 rw-p 00000000 00:00 0 ; 7f79431f0000-7f7943200000 ---p 00000000 00:00 0 ; 7f7943200000-7f7943400000 rw-p 00000000 00:00 0 ; 7f794343c000-7f79434ec000 r--p 00000000 fd:03 721040943 /scratch/usr-shr/share/fonts/dejavu/DejaVuSans.ttf; 7f79434ec000-7f79434f0000 r-xp 00000000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79434f0000-7f79436ef000 ---p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436ef000-7f79436f0000 r--p 00003000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f0000-7f79436f1000 rw-p 00004000 00:2f 2306019409 /home/grad3/jalal/.openjfx/cache/17.0.1/libjavafx_font_pango.so; 7f79436f1000-7f79436f6000 r-xp 00000000 00:2,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:17469,down,downloads,17469,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,"ry strategy: Classify as Stroma, Boundary thickness: 2 pixels. The crash happens when I try to change the settings above, while 'Live prediction' runs. 4. See error; ```; # A fatal error has been detected by the Java Runtime Environment:; #; # EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x0000000000cb5b26, pid=9416, tid=7376; #; # JRE version: OpenJDK Runtime Environment (13.0.1+9) (build 13.0.1+9); # Java VM: OpenJDK 64-Bit Server VM (13.0.1+9, mixed mode, tiered, compressed oops, g1 gc, windows-amd64); # Problematic frame:; # C 0x0000000000cb5b26; #; # No core dump will be written. Minidumps are not enabled by default on client versions of Windows; #; # If you would like to submit a bug report, please visit:; # https://github.com/AdoptOpenJDK/openjdk-build/issues; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #. --------------- S U M M A R Y ------------. Command Line: -Djava.library.path=C:\Users\ag5-35\Downloads\QuPath-0.2.0-m8-Windows\QuPath-0.2.0-m8\app;C:\Users\ag5-35\Downloads\QuPath-0.2.0-m8-Windows\QuPath-0.2.0-m8 -Djava.launcher.path=C:\Users\ag5-35\Downloads\QuPath-0.2.0-m8-Windows\QuPath-0.2.0-m8 -Xmx8192M -XX:MaxRAMPercentage=50 qupath.QuPath. Host: Intel(R) Core(TM) i5-9400 CPU @ 2.90GHz, 6 cores, 15G, Windows 10 , 64 bit Build 18362 (10.0.18362.329); Time: Tue Jan 28 18:35:40 2020 W. Europe Standard Time elapsed time: 148 seconds (0d 0h 2m 28s). --------------- T H R E A D ---------------. Current thread (0x000001d550e5e800): JavaThread ""classifier-overlay6"" daemon [_thread_in_native, id=7376, stack(0x0000002279b00000,0x0000002279c00000)]. Stack: [0x0000002279b00000,0x0000002279c00000], sp=0x0000002279bf9e20, free space=999k; Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code); C 0x0000000000cb5b26. Java frames: (J=compiled Java code, j=interpreted, Vv=VM code); j org.bytedeco.opencv.opencv_ml.LogisticRegression.predict(Lorg/bytedeco/opencv/op",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/394:1655,Down,Downloads,1655,https://qupath.github.io,https://github.com/qupath/qupath/issues/394,1,['Down'],['Downloads']
Availability,"s only to provide a way to assign classes to annotations manually. It's very possible to have objects with other classes in the image; this happens often (e.g. with 'Positive cell detection' you can get cells with 'Positive' and 'Negative' classes - but these don't need to appear in the class list for it to work). ### The uniqueness of classes; If you create a new class in the class list and it has _exactly_ the same name as a previous one, then it should refer to _exactly_ the same class. If the class doesn't exist, it will be created. But if it exists anywhere in the image, then the existing class with that name will be used. This is important for how QuPath does things. Unfortunately, the rule is _very_ strict. Any difference in class name (e.g. different capitalization, spaces) results in a different class. So it is necessary to be very careful when doing this. > I _think_ the color for the class is random. I may have changed that for the next version to make the color pseudo-random, but consistently the same if the same name is typed (making it easier to identify discrepancies). I'll have to check the code to make sure if I made this change or only thought about it... ### What to do in the short term; There are three main options in the short term:; * Add the classes you need manually (and looking out for any problems/tiny discrepancies) if/when they are lost; * Create a script to set the contents of the class list more easily (this is possible, but needs caution as well... if the class list is corrupt in v0.1.2, QuPath won't start); * [Follow the instructions to build my test version](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide) that already has some of these changes available, ahead of them being actually packed up into a full QuPath release. If a script to set the class list would save you a lot of time, let me know I can help create one; otherwise, I hope one of the other two options and this explanation can help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/243#issuecomment-437784159:2647,avail,available,2647,https://qupath.github.io,https://github.com/qupath/qupath/issues/243#issuecomment-437784159,1,['avail'],['available']
Availability,"s); 12:35:12.234 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (34 ms); Warning: Could not load Loader: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; 12:35:12.248 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (13 ms); May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; May 26, 2020 12:35:12 PM jpen.provider.NativeLibraryLoader$4 run; INFO: jpen-2-4-x86_64 loaded; Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: no jnijavacpp in java.library.path: [/home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/lib/app, /home/gordon/src/qupath/build/dist/QuPath-0.2.0-m12/bin]; #; # A fatal error has been detected by the Java Runtime Environment:; [thread 50032 also had an error]; #; # SIGSEGV (0xb) at pc=0x00007f6271c2df1e, pid=49988, tid=50030; #; # JRE version: OpenJDK Runtime Environment AdoptOpenJDK (14.0.1+7) (build 14.0.1+7); # Java VM: OpenJDK 64-Bit Server VM AdoptOpenJDK (14.0.1+7, mixed mode, tiered, compressed oops, g1 gc, linux-amd64); # Problematic frame:; # C [libc.so.6+0x8af1e] __libc_malloc+0x11e; #; # Core dump will be written. Default location: Core dumps may be processed with ""/usr/lib/systemd/systemd-coredump %P %u %g %s %t %c %h"" (or dumping to /home/gordon/src/qupath/core.49988); #; # An error report file with more information is saved as:; # /home/gordon/src/qupath/hs_err_pid49988.log; [thread 50020 also had an error]; #; # If you would like to submit a bug report, please visit:; # https://github.com/AdoptOpenJDK/openjdk-support/issues; #; [1] 49988 abort (core dumped) ./build/dist/QuPath-0.2.0-m12/bin/QuPath-0.2.0-m12; ```. The build I currently have with `-Ptensorflow-cpu=true` is working, including the wand tool and stardist.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-634101819:2442,error,error,2442,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-634101819,4,['error'],['error']
Availability,"s, each one a TMA. I analyzed all of them about 6 months ago, exported the data I needed to excel, and analyzed it there. However, I wanted to add another variable to analyze the data by, and opened the QuPath project to add a variable to the TMA data grid.;  ; After doing this with the first five images, I saved one and clicked to open the next one, and went to the bathroom while it loaded. When I returned, it was telling me to select an image type, and I realized it had deleted all the annotations and detections. Upon further inspection, it had deleted all the detections and annotations on all of the images except the one I had just been editing, and showed the rest as new and unopened images. ;  ; I closed without saving and reopened, and then two had the detections and annotations restored. I've continued closing and reopening the project, and a different number of images have annotations each time. I have tried downloading the newest version of QuPath, after which there were 5 images with annotations and detections restored and one with only annotations restored. Since updating, the same data is the same every time I reopen it. I have also tried updating and restarting my computer. I have no idea how or why this happened or how to get my data back. This is many hours of work, and I'm scared to start my new project, if this is a possible outcome.;  ; **To Reproduce**; I'm sorry, but I have no idea.;  ; **Expected behavior**; Normally, when I go from one image to another, I save one and then the next one opens the old annotations and detections.;  ; **Screenshots**; <img width=""1264"" alt=""Screenshot 2023-09-04 at 6 43 43 PM"" src=""https://github.com/qupath/qupath/assets/79068467/16ab2d72-a5ad-4910-b1eb-c1fc0a9c8842"">; This is a list of images, you can see that it shows five on this view as opened and the rest as new. ;  ; **Desktop (please complete the following information):**;  - OS:  macOS Ventura Version 13.5.1 (22G90);  - QuPath Version: currently Version: 0.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1313:1012,down,downloading,1012,https://qupath.github.io,https://github.com/qupath/qupath/issues/1313,1,['down'],['downloading']
Availability,"sb_release -a; LSB Version:	:core-4.1-amd64:core-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.9.2009 (Core); Release:	7.9.2009; Codename:	Core; ```. also:; ```; $ java -version; openjdk version ""1.8.0_322""; OpenJDK Runtime Environment (build 1.8.0_322-b06); OpenJDK 64-Bit Server VM (build 25.322-b06, mixed mode); ```. I also don't understand why it is looking elsewhere than where I have zipped it and set the directory to it as in:; ```; [jalal@goku downloads]$ sudo vi /etc/profile.d/gradle.sh; [jalal@goku downloads]$ sudo chmod +x /etc/profile.d/gradle.sh; [jalal@goku downloads]$ source /etc/profile.d/gradle.sh; [jalal@goku downloads]$ gradle -v. ------------------------------------------------------------; Gradle 7.4.2; ------------------------------------------------------------. Build time: 2022-03-31 15:25:29 UTC; Revision: 540473b8118064efcc264694cbcaa4b677f61041. Kotlin: 1.5.31; Groovy: 3.0.9; Ant: Apache Ant(TM) version 1.10.11 compiled on July 10 2021; JVM: 1.8.0_322 (Red Hat, Inc. 25.322-b06); OS: Linux 3.10.0-1160.59.1.el7.x86_64 amd64. [jalal@goku downloads]$ cat /etc/profile.d/gradle.sh . export GRADLE_HOME=/opt/gradle/gradle-7.4.2; export PATH=${GRADLE_HOME}/bin:${PATH}. $ tail -1 ~/.bashrc; export PATH=$PATH:/opt/gradle/gradle-7.4.2/bin; $ source ~/.bashrc. ```. The plugin that is reported as missing in the error is in ; ```; [jalal@goku ~]$ find /opt/gradle -name ""gradle-plugins-7.4.2.jar""; /opt/gradle/gradle-7.4.2/lib/plugins/gradle-plugins-7.4.2.jar; ```. Full log of `./gradlew clean jpackage --stacktrace`: https://pastebin.com/raw/RuuJnuTe. Full log of `./gradlew clean jpackage --debug`:; https://pastebin.com/raw/EPJs2jRR. Full log of `./gradlew clean jpackage --scan`:; https://pastebin.com/raw/TUGSM73K. [1]: https://qupath.readthedocs.io/en/latest/docs/reference/building.html. @saudet I decided to create a separate issue for the Stackoverflow post since building QuPath on CentOS 7 also fails (not just running its binary)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/950:2062,down,downloads,2062,https://qupath.github.io,https://github.com/qupath/qupath/issues/950,2,"['down', 'error']","['downloads', 'error']"
Availability,scratch/usr-shr/share/fonts/dejavu/DejaVuSans-Bold.ttf; 7f7941e0e000-7f7941e12000 ---p 00000000 00:00 0 ; 7f7941e12000-7f7941f0f000 rw-p 00000000 00:00 0 ; 7f7941f0f000-7f7941f13000 ---p 00000000 00:00 0 ; 7f7941f13000-7f7942010000 rw-p 00000000 00:00 0 ; 7f7942010000-7f7942014000 ---p 00000000 00:00 0 ; 7f7942014000-7f7942111000 rw-p 00000000 00:00 0 ; 7f7942111000-7f79422c2000 r-xp 00000000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79422c2000-7f79424c1000 ---p 001b1000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c1000-7f79424c3000 r--p 001b0000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c3000-7f79424c4000 rw-p 001b2000 fd:02 10819064504 /scratch3/downloads/QuPath/lib/runtime/lib/libharfbuzz.so; 7f79424c4000-7f79424d1000 r-xp 00000000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79424d1000-7f79426d1000 ---p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d1000-7f79426d2000 r--p 0000d000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d2000-7f79426d3000 rw-p 0000e000 fd:02 10819064503 /scratch3/downloads/QuPath/lib/runtime/lib/libfontmanager.so; 7f79426d3000-7f794272d000 r-xp 00000000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794272d000-7f794292d000 ---p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292d000-7f794292e000 r--p 0005a000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f794292e000-7f7942930000 rw-p 0005b000 fd:02 10819064502 /scratch3/downloads/QuPath/lib/runtime/lib/libawt_xawt.so; 7f7942930000-7f7942932000 rw-p 00000000 00:00 0 ; 7f7942932000-7f79429cf000 r-xp 00000000 fd:02 10819064500 /scratch3/downloads/QuPath/lib/runtime/lib/libawt.so; 7f79429cf000-7f7942bcf000 ---p 0009d000 fd:02 10819064500 /scratch,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:16255,down,downloads,16255,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,"script compile error: runs via GUI OK, but failed via command line",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/286:15,error,error,15,https://qupath.github.io,https://github.com/qupath/qupath/issues/286,1,['error'],['error']
Availability,"serverName = serverOriginal.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); File file = new File(dirOutput, name); ImageWriterTools.writeImageRegionWithOverlay(imageData, overlayOptions, request, file.getAbsolutePath()). // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; catch (Exception e) {; // Check if we have had a sufficient number of errors to just gi",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309:3146,down,downsample,3146,https://qupath.github.io,https://github.com/qupath/qupath/issues/309,1,['down'],['downsample']
Availability,"serverName = serverOriginal.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Read the image region; ImagePlus imp = server.readImagePlusRegion(request).getImage(false); // Get a suitable file name; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); // Create an output file; File file = new File(dirOutput, name); // Save the image; IJ.save(imp, file.getAbsolutePath()); // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); } catch (Exception e) {; // Check if we have had a sufficient number of errors to just give up; nErrors++;; if (nErrors > maxErrors) {; println(""Maximum number of errors exceede",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/85#issuecomment-315148862:3323,down,downsample,3323,https://qupath.github.io,https://github.com/qupath/qupath/issues/85#issuecomment-315148862,1,['down'],['downsample']
Availability,"servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:184); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:238); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:56); at qupath.lib.gui.viewer.overlays.PixelClassificationOverlay.lambda$requestTile$5(PixelClassificationOverlay.java:547); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); ```. **To Reproduce**; Steps to reproduce the behavior:; 1. Open OS-1.ndpi on an M1 Mac, set to have a maximum of 4GB RAM for QuPath; 2. Start training a pixel classifier (default resolution and settings); 3. Zoom out to force preview classification across the full image; 4. Open the log & await the error; * If no error appears, adjust training annotations if needed to create a new classifier (it usually doesn't take long); 5. Check Activity Monitor to confirm that QuPath does not seem to be using a particularly large amount of memory. **Expected behavior**; Pixel classification continues without error for as long as its real memory use remains reasonable. **Desktop (please complete the following information):**; - OS: macOS, ARM; - QuPath Version 0.3.0. **Additional context**; Following the suggestion in https://github.com/bytedeco/javacpp/issues/516 a workaround is to add the line ; ```; java-options=-Dorg.bytedeco.javacpp.maxPhysicalBytes=0; ```; at the end of the *QuPath.app/Contents/app/QuPath.cfg* file. This turns off the check that reports the error, but could be risky to introduce as a default - so this Issue was created to document the problem for now, and a workaround where needed.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856:3709,error,error,3709,https://qupath.github.io,https://github.com/qupath/qupath/issues/856,4,['error'],['error']
Availability,severe cell detection error - hard to reproduce,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/153:22,error,error,22,https://qupath.github.io,https://github.com/qupath/qupath/issues/153,1,['error'],['error']
Availability,"situation will change with Groovy 3.0: http://groovy-lang.org/releasenotes/groovy-3.0.html. With implementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for different scripting languages. I'm tentatively considering a switch to use _GroovyShell_ instead, which looks like it makes it easier to access other classes. I haven't yet explored the implications, but I think that Option 1) having really good Groovy support (only) would be more worthwhile than Option 2) trying to support multiple languages/syntaxes (but none of them quite as well). If you've any thoughts on that please ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/253#issuecomment-450918869:1421,error,error,1421,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869,1,['error'],['error']
Availability,so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7f7866536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f82290579c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f822905c59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f822905bb8b]; /lib64/libdl.so.2(+0xfab)[0x7f8228e44fab]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/libdl.so.2(+0x15ad)[0x7f8228e455ad]; /lib64/libdl.so.2(dlopen+0x31)[0x7f8228e45041]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57924)[0x7f8227786924]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57a5a)[0x7f8227786a5a]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(JVM_LoadLibrary+0xbb)[0x7f822745bd6b]; /scratch3/downloads/QuPath/lib/runtime/lib/libjava.so(Java_jdk_internal_loader_NativeLibraries_load+0x17f)[0x7f822544627f]; [0x7f820e860bbb]; ======= Memory map: ========; 414cb000-414cd000 r-xs 00000000 00:04 20496117 /memfd:/.glXXXXXX (deleted); 41d6e000-41e1d000 rw-p 00000000 00:00 0 ; 80000000-80020000 rw-p 00000000 00:00 0 ; 80020000-80040000 rw-p 00000000 00:00 0 ; 80040000-800c0000 rw-p 00000000 00:00 0 ; 800c0000-80140000 rw-p 00000000 00:00 0 ; 80140000-801c0000 rw-p 00000000 00:00 0 ; 801c0000-80200000 rw-p 00000000 00:00 0 ; 80200000-80240000 rw-p 00000000 00:00 0 ; 80240000-80280000 rw-p 00000000 00:00 0 ; 80280000-80440000 rw-p 00000000 00:00 0 ; 80440000-80460000 rw-p 00000000 00:00 0 ; 80460000-80480000 ---p 00000000 00:00 0 ; 80480000-805d0000 rw-p 00000000 00:00 0 ; 805d0000-c0000000 ---p 00000000 00:00 0 ; 55d91efa2000-55d91f0b0000 r-xp 00000000 fd:02 35868047 /scratch3/downloads/QuPath/bin/QuPath; 55d91f2b0000-55d91f2b8000 r--p 0010e000 fd:02 35868047 /scratch3/downloads/,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:3273,down,downloads,3273,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['down'],['downloads']
Availability,"something like 4.23452345.; Should I be rounding or flooring when I scale up the coordinates?; And can I be sure that QuPath will do the right thing when it scales them back down, so that I get the original coordinates I wanted again...?. If not, then it seems I might get off-by-one errors and slightly unexpected results. If I want a 256 x 256 pixel region, I might end up with a 255 x 256 pixel region... which would be annoying. It seems that I can round or floor when scaling up, and then round or floor when scaling down, but I wasn't completely sure which I should be doing so I created a quick Python simulation to test what happens: https://gist.github.com/petebankhead/2d4a21cb69f3b68c8f8fa14475723647. Based on this, it seems I need to round in both directions... which was maybe a predictable conclusion for the more mathematically confident, but I wasn't sure of it's what QuPath does internally* and we can't count on users necessarily knowing that. (*However*, note that if the downsample is < 1 then all the methods fail...). I think it would be nice to resolve the ambiguity somehow, although adding an extra method; ```java; public T readLevel(int level, int x, int y, int width, int height, int z, int t);; ```; looks like a horrible explosion of ints. A possibly-simpler alternative might be to support something like this:; ```java; public T readScaledRegion(double downsample, int outputX, int outputY, int outputWidth, int outputHeight, int z, int t);; ```; where the coordinates are defined according to the output image, but the downsample isn't fixed to *have* to be a pyramidal level. Thinking about it, that could potentially be implemented more simply with another default method added to the interface that ultimately just called `readRegion`. The main trouble is that I don't know what to call the method. I'll keep thinking and try to add something to this PR.... *- I think that QuPath is doing the right thing in most places (based on [this](https://github.com/qupat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072#issuecomment-1278540089:1630,down,downsample,1630,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072#issuecomment-1278540089,1,['down'],['downsample']
Availability,"spatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3597); at javafx.scene.Scene$MouseHandler.process(Scene.java:3899); at javafx.scene.Scene.processMouseEvent(Scene.java:1885); at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2618); at; com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:409); at; com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:299); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at; com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:447); at; com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:412); at; com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:446); at com.sun.glass.ui.View.handleMouseEvent(View.java:556); at com.sun.glass.ui.View.notifyMouse(View.java:942); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at; com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source). On Mon, Apr 26, 2021 at 1:07 AM Pete ***@***.***> wrote:. > @subanookala <https://github.com/subanookala> Please post questions on; > the forum at http://forum.image.sc/tag/qupath and provide more detail; > (you may find a more complete error message under *View → Show log*).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/396#issuecomment-826532977>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ATAT3NBZJC2UITEIJLWE66DTKT7LRANCNFSM4KPPDA2Q>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/396#issuecomment-827610434:6217,error,error,6217,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434,1,['error'],['error']
Availability,ssKeyEvent(Scene.java:2121); at javafx.scene.Scene$ScenePeerListener.keyEvent(Scene.java:2595); at com.sun.javafx.tk.quantum.GlassViewEventHandler$KeyEventNotification.run(GlassViewEventHandler.java:217); at com.sun.javafx.tk.quantum.GlassViewEventHandler$KeyEventNotification.run(GlassViewEventHandler.java:149); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleKeyEvent$1(GlassViewEventHandler.java:248); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:390); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleKeyEvent(GlassViewEventHandler.java:247); at com.sun.glass.ui.View.handleKeyEvent(View.java:547); at com.sun.glass.ui.View.notifyKey(View.java:971); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: QuPath exception; at org.fxmisc.richtext.ParagraphText.checkWithinParagraph(ParagraphText.java:259); at org.fxmisc.richtext.ParagraphText.getCaretBounds(ParagraphText.java:198); at org.fxmisc.richtext.ParagraphBox.getCaretBounds(ParagraphBox.java:193); at org.fxmisc.richtext.GenericStyledArea.showCaretAtBottom(GenericStyledArea.java:1281); at org.fxmisc.richtext.GenericStyledArea.prevPage(GenericStyledArea.java:1112); at org.fxmisc.richtext.GenericStyledAreaBehavior.lambda$static$9(GenericStyledAreaBehavior.java:85); at org.fxmisc.wellbehaved.event.template.InputMapTemplate.lambda$consume$0(InputMapTemplate.java:221); at org.fxmisc.wellbehaved.event.template.PatternActionTemplate.lambda$null$1(InputMapTemplate.java:425); at java.base/java.util.Optional.map(Optional.java:265); at org.fxmisc.wellbehaved.event.template.PatternActionTemplate.lambda$getInputHandlerTemplateMap$2(InputMapTemplate.java:425); at org.fxmisc.wellbehaved.event.template.InputHandlerTemplateMap.lambda$sequence$0(InputHa,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/314:11003,ERROR,ERROR,11003,https://qupath.github.io,https://github.com/qupath/qupath/issues/314,1,['ERROR'],['ERROR']
Availability,ssKeyEvent(Scene.java:2121); at javafx.scene.Scene$ScenePeerListener.keyEvent(Scene.java:2595); at com.sun.javafx.tk.quantum.GlassViewEventHandler$KeyEventNotification.run(GlassViewEventHandler.java:217); at com.sun.javafx.tk.quantum.GlassViewEventHandler$KeyEventNotification.run(GlassViewEventHandler.java:149); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleKeyEvent$1(GlassViewEventHandler.java:248); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:390); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleKeyEvent(GlassViewEventHandler.java:247); at com.sun.glass.ui.View.handleKeyEvent(View.java:547); at com.sun.glass.ui.View.notifyKey(View.java:971); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: QuPath exception; at org.fxmisc.richtext.ParagraphText.checkWithinParagraph(ParagraphText.java:259); at org.fxmisc.richtext.ParagraphText.getCaretBounds(ParagraphText.java:198); at org.fxmisc.richtext.ParagraphBox.getCaretBounds(ParagraphBox.java:193); at org.fxmisc.richtext.GenericStyledArea.showCaretAtTop(GenericStyledArea.java:1289); at org.fxmisc.richtext.GenericStyledArea.nextPage(GenericStyledArea.java:1119); at org.fxmisc.richtext.GenericStyledAreaBehavior.lambda$static$10(GenericStyledAreaBehavior.java:86); at org.fxmisc.wellbehaved.event.template.InputMapTemplate.lambda$consume$0(InputMapTemplate.java:221); at org.fxmisc.wellbehaved.event.template.PatternActionTemplate.lambda$null$1(InputMapTemplate.java:425); at java.base/java.util.Optional.map(Optional.java:265); at org.fxmisc.wellbehaved.event.template.PatternActionTemplate.lambda$getInputHandlerTemplateMap$2(InputMapTemplate.java:425); at org.fxmisc.wellbehaved.event.template.InputHandlerTemplateMap.lambda$sequence$0(InputHand,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/314:6074,ERROR,ERROR,6074,https://qupath.github.io,https://github.com/qupath/qupath/issues/314,1,['ERROR'],['ERROR']
Availability,"ssage, ""Failed to load one image."" is shown when trying to add one file at a time. **To Reproduce**; Steps to reproduce the behavior:; 1. Click on 'Create project' (make a new folder and name it); 2. Click on 'Add images'; 3. Click on 'choose files'; 4. Navigate to file and select it. ; 5. Click on 'Open'; 6. Click on 'Import'; 7. The result is either a pink thumbnail and pink image or an error message and no image added. **Expected behavior**; A clear and concise description of what you expected to happen:; All tif files should be added to the project and names and thumbnails should be visible on the left hand side of QuPath. Slide backgrounds should be white and not pink. (I know the background isn't actually pink because the files open correctly in ImageScope.). **Screenshots**; Pink background for TMA tiff files; ![2019-11-07_1304](https://user-images.githubusercontent.com/6699385/68389277-db8b8c80-0162-11ea-9a67-38f297589135.png). Failure to upload error message with the attempted upload file highlighted in the Windows window; ![2019-11-07_1334](https://user-images.githubusercontent.com/6699385/68389530-74baa300-0163-11ea-993d-a55b99b93934.png). **Desktop (please complete the following information):**; - OS: Windows 10 Enterprise version 1809; Intel i7; 64GB RAM (45 GB alotted for QuPath); - QuPath Version: 0.2.0-m5. **Additional context**; The accompanying .ndpi files for this data set load without issue. This problem was noticed because I tried to load png files for another data set that loaded in the previous version (Version: 0.1.2) but not the new version of QuPath. We realized the png files needed to be higher quality so they need to be rescanned at 40x and saved as tif files. Here I was testing to see if 40x tifs could successfully be analyzed using QuPath. The pink smaller tif files that do load appear to load and zoom correctly. The problem is the pink background and the inability to load the high resolution files that are needed for cell segmentation.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/374:1887,Failure,Failure,1887,https://qupath.github.io,https://github.com/qupath/qupath/issues/374,2,"['Failure', 'error']","['Failure', 'error']"
Availability,"ssing; * access other scripts or files relative to the script file itself. ## New `Timeit` class. The new `Timeit` class simplifies reporting the length of time it takes scripts (or parts of scripts) to run. Simple use involves starting a `Timeit` early, calling `start()`, and printing it whenever you want:; ```groovy; def timeit = new Timeit().start(); Thread.sleep(100); println timeit; Thread.sleep(200); println timeit; ```; Output:; ```; Time since start	106 ms; Time since start	314 ms; ```. It's also possible to have a bit more control, setting named checkpoints along the way:. ```groovy; var timeit = new Timeit(); .microseconds(); .start(""First checkpoint""); ; println 'Doing something now'; Thread.sleep(100). timeit.checkpoint(""Second checkpoint""). println 'Waiting for a bit'; Thread.sleep(200); ; timeit.stop(). println ""Doing something that isn't timed""; Thread.sleep(200). println timeit; ```. Output:; ```; Doing something now; Waiting for a bit; Doing something that isn't timed; First checkpoint	106323 µs; Second checkpoint	208185 µs; Total duration	314508 µs; ```. It can also be used to run the same code multiple times, reporting the individual and average times:. ```groovy; var timeit = new Timeit(); .summarizeCheckpoints(); .checkpointAndRun(""My calculation"", () -> mySlowCalculation(), 10); ; println timeit.stop() // Important to stop to get time for last checkpoint. void mySlowCalculation() {; def x = 2 + 2; Thread.sleep(50); }; ```. Output:; ```; My calculation (1)	56 ms; My calculation (2)	55 ms; My calculation (3)	54 ms; My calculation (4)	55 ms; My calculation (5)	61 ms; My calculation (6)	52 ms; My calculation (7)	55 ms; My calculation (8)	55 ms; My calculation (9)	53 ms; My calculation (10)	57 ms; Total duration	554 ms; Average per checkpoint: 55 ms; ```. ## Fix methods to get objects. Add missing `QP.getTileObjects()` method (https://github.com/qupath/qupath/issues/1065). Also ensure that `QP.getAllObjects()` returns a collection rather than array,",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1078:2975,checkpoint,checkpoint,2975,https://qupath.github.io,https://github.com/qupath/qupath/pull/1078,2,['checkpoint'],['checkpoint']
Availability,"st intuitive thing that should happen, and is not a bug. If this didn’t happen, then you if ran the cell detection command twice with the same parent selected, you would end up having every cell counted twice - not to mention the strange things that might happen with overlapping objects if you were to run other tiling/superpixel commands. It's not clear to me what was the purpose of doing manual counts followed by automated counts within the exact same region, but (as you've found) it is something that is not supported. You *could* do it the opposite way (i.e. automated counts followed by manual counts). However, if it was my goal to compare manual and automated cell counting then I would do the automatic counts in duplicate project and keep the data separated. Furthermore, you can do automated counts and then select 'Convert detections to points' within the 'Points tool' to initialize the (manually-editable) points that can subsequently be modified to generate 'semi-automated counts'. With regard to being unable to reopen a data file, this is something that has been reported some months ago (e.g. #58), but I'm not aware of it being an ongoing problem - or at least not one I have ever been able to reproduce. If QuPath fails to write a complete data file, then you should find that a '.qpdata.backup' file exits somewhere inside your project/data folder. If you strip the '.backup' data part from the file name, then it should be possible to recover the last saved version. > *-Information about the object hierarchy is at https://github.com/qupath/qupath/wiki/Object-hierarchies But from a quick look it seems that 'point' objects do not behave in the way you might expect, in that it appears that a point object is the child of a region if the *first* point is inside that region - and adding subsequent points (inside or outside the region) doesn't change this relationship. This is potentially a bug... or at least unintuitive behavior that may well change in a future release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-342941759:1895,recover,recover,1895,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-342941759,1,['recover'],['recover']
Availability,"st on GPUs. Tested with RTX 3090 and GTX 1660 Ti GPUs. I have a version of QuPath built on 2022-11-21 which has no problem running StarDist on the GPU, so it's likely tied to any commits between this period. Issue taken from forum post: https://forum.image.sc/t/stardist-gpu-support-unknown-error/74779. **To Reproduce**; Steps to reproduce the behavior:; 1. Build QuPath from source using the following command:; ```; git clone https://github.com/qupath/qupath; cd qupath; ./gradlew clean jpackage -Pcuda-redist; ```; 2. Install either the 0.3.2 or 0.4.0 releases of the StarDist extension: https://github.com/qupath/qupath-extension-stardist/releases; 3. Download pretrained models in .pb format; 4. Draw an annotation on a brightfield image; 5. Download the following script: https://github.com/MarkZaidi/Universal-StarDist-for-QuPath/blob/main/GPU_Multimodal%20StarDist%20Segmentation.groovy; 6. Run the script; 7. Observe the following error message:; ```; INFO: Performing detection on Brightfield image using single-channel trained model; INFO: [Annotation]; ERROR: OpenCV(4.6.0) D:\a\javacpp-presets\javacpp-presets\opencv\cppbuild\windows-x86_64-gpu\opencv-4.6.0\modules\dnn\src\cuda4dnn\csl\memory.hpp:54: error: (-217:Gpu API call) the provided PTX was compiled with an unsupported toolchain. in function 'cv::dnn::cuda4dnn::csl::ManagedPtr<float>::ManagedPtr'; in GPU_Multimodal StarDist Segmentation.groovy at line number -2. ERROR: org.bytedeco.opencv.opencv_dnn.Net.forward(Native Method); qupath.opencv.dnn.OpenCVDnn$OpenCVNetFunction.predict(OpenCVDnn.java:718); qupath.opencv.dnn.OpenCVDnn$OpenCVNetFunction.predict(OpenCVDnn.java:732); qupath.opencv.dnn.DnnModel.convertAndPredict(DnnModel.java:100); qupath.ext.stardist.StarDist2D.detectObjectsForTile(StarDist2D.java:1249); qupath.ext.stardist.StarDist2D.lambda$detectObjects$7(StarDist2D.java:934); java.base/java.util.stream.ReferencePipeline$7$1.accept(Unknown Source); java.base/java.util.ArrayList$ArrayListSpliterator.forEa",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1180:1660,error,error,1660,https://qupath.github.io,https://github.com/qupath/qupath/issues/1180,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"stency. ## Add version checking scripting methods. New methods to check the running QuPath version in scripts.; If the check fails, an exception will be thrown that will cause the script not to run. ```groovy; // Version v0.4.0 or newer; checkMinVersion('0.4.0'). // Version v0.4.x (but not earlier or later); checkVersionRange('0.4.0', '0.5.0'); ```. ## Code editor fixes. Syntax highlighting speeded up, scrolling follows caret when adding new lines. ## Change behavior for `QP.getCurrentImageData()` and `QP.getProject()`. The behavior of `getCurrentImageData()` and `getProject()` have been modified for cases where a script has run to completion, but it may still be 'doing stuff' (e.g. because it launched a UI, or started a task to run later). Previously, `getCurrentImageData()` and `getProject()` would return null. This would mean that all other related commands (e.g. `getAnnotationObjects()` would not return anything useful as well. Now, both methods will fall back to using the image data and project from the current QuPath UI, if available. This could potentially be confusing sometimes, e.g. if the following script was used with 'Run for project' it might print different image datas each time:; ```groovy; println ""Now: ${getCurrentImageData()}""; // runLater will be called in the application thread after the script has completed; Platform.runLater {; // This runs after the current image has been reset!; // Previously returned null, now returns current image in the viewer ; // (or null if there is no image open); println ""Later: ${getCurrentImageData()}""; }; ```. If you want to access the original image data later, you need to keep a reference to it, e.g.:; ```groovy; def imageData = getCurrentImageData(); println ""Now: $imageData""; Platform.runLater {; // This shows the same image data as original; // because the reference has been retained; println ""Later: $imageData""; }; ```. This still requires some caution, because if you retain a reference you need to access ever",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1078:5031,avail,available,5031,https://qupath.github.io,https://github.com/qupath/qupath/pull/1078,1,['avail'],['available']
Availability,"still has the basic form of 'make measurements at the same time as detection'. I think we need to decouple these two things, or at least ensure that it's possible to add cell measurements *after* detection. **Describe the solution you'd like**; A new, scriptable command to add cell measurements. **Describe alternatives you've considered**; Build upon the existing *'Add intensity features'* command. I can think of a few relevant considerations:. * We want shape measurements as well, not just intensity measurements (although perhaps the command could be generalized to include shapes too); * *'Add intensity features'* can simultaneously give too many and too few measurements. We probably don't need the Haralick features generally, but do need the possibility of membrane measurements (possibly with control over thickness?).; * *'Add intensity features'* tries to handle the tricky problem of arbitrarily large ROIs, by tiling. It is easier to code more imaginative feature measurements if we can assume that all pixels and binary mask can fit easily into RAM.; * *'Add intensity features'* does *not* handle the different cell compartments currently (i.e. nucleus, cytoplasm, cell, membrane). **Additional context**; In writing this, it's not clear to me if we should replace *'Add intensity features'* and *'Add shape features'* with a single, better command at the same time as trying to solve this issue. A few extra considerations and complexities:; * We need to be able to handle color transforms (e.g. color deconvolution); * We need to consider the resolution at which the measurements are calculated; * We need to think a lot about the measurement names; specifically, these need to be unique (since they are effectively stored in a map), and efficiently encode the key info (e.g. compartment, resolution, measurement type). An occasional complaint is that QuPath's cell detection and the StarDist extension use different naming conventions. This was a conscious decision, because the ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1551:1763,mask,mask,1763,https://qupath.github.io,https://github.com/qupath/qupath/issues/1551,1,['mask'],['mask']
Availability,t already have fixed the issue; * [x] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; `QuPath convert-ome` returns exit code 0 despite failure. **To Reproduce**; Steps to reproduce the behavior:; ```; scale=2; tile=1024; comp=ZLIB; input=broken_image.tif; output=broke_omage.ome.tif; QuPath convert-ome $input $output \; --pyramid-scale=$scale \; --tile-size=$tile \; --compression=$comp \; --parallelize; ```; Output (truncated); ```; 20:39:42.582 [main] [INFO ] q.l.i.s.b.BioFormatsServerOptions - Setting max Bio-Formats readers to 2; 20:39:43.272 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.274 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.275 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; ...; 20:39:43.604 [main] [ERROR] q.l.i.writers.ome.ConvertCommand - Unable to open file:broken_image.tif; java.io.IOException: Unable to open file:broken_image.tif; at qupath.lib.images.servers.ImageServers.buildServer(ImageServers.java:306); at qupath.lib.images.writers.ome.ConvertCommand.run(ConvertCommand.java:147); at picocli.CommandLine.executeUserObject(CommandLine.java:2026); at picocli.CommandLine.access$1500(CommandLine.java:148); at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2461); at picocli.CommandLine$RunLast.handle(CommandLine.java:2453); at picocli.CommandLine$RunLast.handle(CommandLine.java:2415); at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2273); at picocli.CommandLine$RunLast.execute(CommandLine.java:2417); at picocli.CommandLine.execute(CommandLine.java:2170); at qupath.QuPath.main(QuPath.java:202); Suppressed: java.io.IOException: Unable to build ImageServer for fil,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1451:1572,Error,Error,1572,https://qupath.github.io,https://github.com/qupath/qupath/issues/1451,1,['Error'],['Error']
Availability,"t created this qpdata file, but it works with m5. It contains some non-hierarchical annotations. Stack trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.simplifyByDownsample(PathHierarchyPaintingHelper.java:542); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.getShape(PathHierarchyPaintingHelper.java:584); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintROI(PathHierarchyPaintingHelper.java:434); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintObject(PathHierarchyPaintingHelper.java:400); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:160); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:231); at qupa",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1628,avail,available,1628,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027,1,['avail'],['available']
Availability,"t qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.NIOByteBufferProvider.allocate(NIOByteBufferProvider.java:112); at loci.common.NIOFileHandle.buffer(NIOFileHandle.java:647); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:133); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:151); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:165); at loci.common.Location.getHandle(Location.java:522); at loci.common.Location.getHandle(Location.java:462); at loci.common.Location.getHandle(Location.java:443); at loci.common.Location.getHandle(Location.java:426); at loci.co",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-493938867:8625,down,downsample,8625,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867,1,['down'],['downsample']
Availability,"t succeed, and threw the following error (see end of post). Reducing either the number of channels, features, or scales would allow the pixel classifier to be trained. Images were non-pyramided, ~1000x1000 pixel, 32 bit floating point IMC data with a total of 37 channels (27 of which to be used in the pixel classifier). Unfortunately, I can't share the exact images that caused this error to occur. My guess is that this is actually an issue with OpenCV , given the exception `OpenCV(4.5.3) D:\a\javacpp-presets\javacpp-presets\opencv\cppbuild\windows-x86_64\opencv-4.5.3\modules\core\src\channels.cpp:141: error: (-215:Assertion failed) i1 >= 0 && j < ndsts && dst[j].depth() == depth in function 'cv::mixChannels'`. OpenCV's mixChannels: https://docs.opencv.org/3.4/d2/de8/group__core__array.html#ga51d768c270a1cdd3497255017c4504be. For now, I've been reducing the number of channels passed, which gives me a training accuracy of ~88%. But it would be great to train on all available data, and see what the variable importance is of each feature and channel. **To Reproduce**; Steps to reproduce the behavior:; 1. Create a project with ~143 IMC images; 2. Annotate structures within ~38 images with 5 different classifications of annotations; 3. Open a non-annotated image; 4. Attempt to train a pixel classifier using all channels, scales, and features, loading training from other annotated images in the project.; 5. Click ""Live Preview"", note the error at the end of the post. **Expected behavior**; A pixel classifier should be trained, and a preview should be applied to the currently loaded image. **Desktop (please complete the following information):**; - OS: Windows 10, 32-thread processor, 127/128 Gb RAM allocated for QuPath, ~500 Gb SSD storage for tile cache; - QuPath Version 0.3.2. **Additional context**; Error log:; ```; 12:10:44.040 [JavaFX Application Thread] [INFO ] q.p.g.c.ml.PixelClassifierPane - Creating training data from 38 images; 12:10:44.953 [JavaFX Application Thr",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947:1145,avail,available,1145,https://qupath.github.io,https://github.com/qupath/qupath/issues/947,1,['avail'],['available']
Availability,"t to smaller ones. **To Reproduce**; Steps to reproduce the behavior:; 1. Open a script; 2. Add the following block comment ; ```; /**; * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, ; * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. ; * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, ; * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; ; * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ; * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ; * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; */; ```; 3. Save the script.; 5. Close the script (Ctrl+w); 6. Open the same script ==> no error; 7. Add the following block comment. ```; /**; * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, ; * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. ; * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, ; * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; ; * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ; * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ; * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, ; * BUT NOT LIMITED TO, TH",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1176:1737,error,error,1737,https://qupath.github.io,https://github.com/qupath/qupath/issues/1176,1,['error'],['error']
Availability,"t. The closest matching script I can think of is [this one](https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d). By default, it will export the entire image at a very low resolution because of these lines; > ; > ```groovy; > // Aim for an output resolution of approx 20 µm/pixel; > double requestedPixelSize = 20; > ...; > // Calculate downsample factor depending on the requested pixel size; > double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); > def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()); > ```; > ; > You can switch it to export only the region corresponding to the selected object, at full resolution, as follows:; > ; > ```groovy; > // Calculate downsample factor depending on the requested pixel size; > double downsample = 1.0; > def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, getSelectedROI()); > ```; > ; > Let me know if that doesn't do what you need, and hopefully some other script change could help. Personally, I'd use the ImageJ method for exporting isolated regions occasionally, and a script if I wanted to export lots of regions in a single batch.; > ; > > Note: I've tagged this as _enhancement_ because I think it would make sense to increase the export size limit through the user interface to make this easier. I had forgotten the existing limit was so small... I have almost the same need as @nathan. I have some .tiff WSI want to convert them to ndarray. I downloaded the 0.1.2 version( 0.2.3 wouldn't work with the script above) and run the script. The script ""QuPath_export_images.groovy"" gave me downsampled image as it should. I followed your answer here adjust the script and it gave me sort of a blank image with some lines in it(I was doing regular image before just starting to deal with bioimage recently). Can you give me some instructions about how to export the whole image as jpg, png, or regular ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/127#issuecomment-853621895:1441,down,downsample,1441,https://qupath.github.io,https://github.com/qupath/qupath/issues/127#issuecomment-853621895,1,['down'],['downsample']
Availability,"tImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath()); ----------------------------------------------------------------------; WARN: Invalid requested downsample 1.0 - will use 1.057 instead; INFO: 1 region detected (processing time: 2.97 seconds); INFO: Processing complete in 3.06 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420287639:1619,down,downsample,1619,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420287639,2,['down'],['downsample']
Availability,teSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.b,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:7773,ERROR,ERROR,7773,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['ERROR'],['ERROR']
Availability,"ted cipher suite: TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 for TLS10; javax.net.ssl|DEBUG|29|Thread-9|2020-04-13 21:28:52.304 NOVT|null:-1|Ignore unsupported cipher suite: TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 for TLS10; javax.net.ssl|DEBUG|29|Thread-9|2020-04-13 21:28:52.304 NOVT|null:-1|Ignore unsupported cipher suite: TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 for TLS10; javax.net.ssl|DEBUG|29|Thread-9|2020-04-13 21:28:52.304 NOVT|null:-1|Ignore unsupported cipher suite: TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 for TLS10; javax.net.ssl|DEBUG|29|Thread-9|2020-04-13 21:28:52.304 NOVT|null:-1|Ignore unsupported cipher suite: TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 for TLS10; javax.net.ssl|DEBUG|29|Thread-9|2020-04-13 21:28:52.304 NOVT|null:-1|Ignore unsupported cipher suite: TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 for TLS10; javax.net.ssl|ALL|29|Thread-9|2020-04-13 21:28:52.313 NOVT|null:-1|Ignore disabled signature scheme: rsa_md5; javax.net.ssl|INFO|29|Thread-9|2020-04-13 21:28:52.313 NOVT|null:-1|No available application protocols; javax.net.ssl|DEBUG|29|Thread-9|2020-04-13 21:28:52.313 NOVT|null:-1|Ignore, context unavailable extension: application_layer_protocol_negotiation; javax.net.ssl|DEBUG|29|Thread-9|2020-04-13 21:28:52.314 NOVT|null:-1|Stateless resumption not supported; javax.net.ssl|DEBUG|29|Thread-9|2020-04-13 21:28:52.314 NOVT|null:-1|Ignore, context unavailable extension: session_ticket; javax.net.ssl|DEBUG|29|Thread-9|2020-04-13 21:28:52.314 NOVT|null:-1|Ignore, context unavailable extension: cookie; javax.net.ssl|DEBUG|29|Thread-9|2020-04-13 21:28:52.339 NOVT|null:-1|Ignore, context unavailable extension: renegotiation_info; javax.net.ssl|DEBUG|29|Thread-9|2020-04-13 21:28:52.340 NOVT|null:-1|No session to resume.; javax.net.ssl|DEBUG|29|Thread-9|2020-04-13 21:28:52.340 NOVT|null:-1|Ignore, context unavailable extension: pre_shared_key; javax.net.ssl|DEBUG|29|Thread-9|2020-04-13 21:28:52.344 NOVT|null:-1|Produced ClientHello handshake message (; ""ClientHello"": {; ""client ver",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/436:6111,avail,available,6111,https://qupath.github.io,https://github.com/qupath/qupath/issues/436,1,['avail'],['available']
Availability,tem.java:465); at com.sun.javafx.scene.control.ContextMenuContent$MenuItemContainer.doSelect(ContextMenuContent.java:1380); at com.sun.javafx.scene.control.ContextMenuContent$MenuItemContainer.lambda$createChildren$12(ContextMenuContent.java:1333); at com.sun.javafx.scene.control.ContextMenuContent$MenuItemContainer$$Lambda$1392/0x0000000840654440.handle(Unknown Source); at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.ba,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:6718,ERROR,ERROR,6718,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['ERROR'],['ERROR']
Availability,"th forum at https://forum.image.sc/tags/qupath. If in doubt, use [image.sc](https://forum.image.sc/tags/qupath). This helps us keep things organized. ## Before we begin... Before submitting your bug report, please check the following:. * [x] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [x] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [x] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; Trying to get tile objects using `getTileObjects()` will result in an error:; ```; ERROR: MissingMethodException at line 19: No signature of method: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getTileObjects() is applicable for argument types: () values: []. ERROR: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.callGlobal(GroovyScriptEngineImpl.java:404); org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.access$100(GroovyScriptEngineImpl.java:90); org.codehaus.groovy.jsr223.GroovyScriptEngineImpl$3.invokeMethod(GroovyScriptEngineImpl.java:303); org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:73); org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51); org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171); org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:176); Script8.run(Script8.groovy:20); org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:982); qupath.lib.gui.scripting.DefaultS",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1065:1146,ERROR,ERROR,1146,https://qupath.github.io,https://github.com/qupath/qupath/issues/1065,1,['ERROR'],['ERROR']
Availability,th.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLo,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:10656,Down,Downloads,10656,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['Down'],['Downloads']
Availability,th.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; ERROR: java.lang.OutOfMemoryError: Java heap space; WARN: Fallback to requesting thumbnail directly...; ERROR: QuPath exception; WARN: Tile request exception; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.securi,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:9068,Down,Downloads,9068,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['Down'],['Downloads']
Availability,"the focus, but nothing else.; - [x] I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start; I think centred vertical alignment for the version and buttons would look bette; - [x] The description text would ideally be lighter in color (e.g. using opacity); - [x] The purpose of the 'remove' and 'update' buttons is unclear - especially for built-in extension that can't be changed. ; - [x] Does update 'Check for updates' or actually update?; - [x] I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. > I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start;. I'd be more inclined to even do ""version: 0.1.0"" rather than having column headers that would be largely redundant. > Does update 'Check for updates' or actually update?. It checks for updates; if one is available, it asks if you'd like to download it. If not, it pops up a notification saying it's up-to-date. > I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. Yes, similarly it asks if you want to download before going ahead. ![Screenshot from 2023-10-02 22-37-08](https://github.com/qupath/qupath/assets/10779688/b0404e3f-320d-4fbf-b990-3cad161dee24). Note that here the top list is focusable, the bottom isn't. The titles are obviously WIP (see below). Same with the extensions dir button not being full-width (although I don't truly love that personally, it's up to you). > Finally, I think splitting the lists at the top into different sections would make sense, if they have different purposes. Rather than 'servers' and 'extensions', they could be split between 'Built-in extensions' and 'Optional extensions'. That might help explain the differences in behavior. I don't think ""Server"" vs ""extension"" is useful yeah, it seems a bit ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490:1535,avail,available,1535,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490,2,"['avail', 'down']","['available', 'download']"
Availability,"the output images; *; * The significance of using ImageJ to write TIFF images (rather than, say, ImageIO to write PNGs or JPEGs); * is that this enables the storage of additional metadata, i.e. pixel sizes and coordinates.; */. import ij.IJ; import ij.ImagePlus; import qupath.imagej.images.servers.ImagePlusServer; import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.lib.images.servers.ImageServer; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QP. import java.awt.image.BufferedImage. /*; * Adjustable parameters; */; int tileWidthPixels = 5000 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 10 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput = ""G:\\Image Dump"" // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!. int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 1000 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.ge",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/85#issuecomment-315148862:1330,error,errors,1330,https://qupath.github.io,https://github.com/qupath/qupath/issues/85#issuecomment-315148862,1,['error'],['errors']
Availability,"tion.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:708); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.java:819); at qupath.lib.display.ImageDisplay.updateHistogramMap(ImageDisplay.java:554); at qupath.lib.display.ImageDisplay.setImageData(ImageDisplay.java:144); at qupath.lib.gui.viewer.QuPathViewer.setImageData(QuPathViewer.java:1385); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2459); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2368); at qupath.lib.gui.commands.OpenCommand.run(OpenCommand.java:51); at qupath.lib.gui.QuPathGUI.lambda$createCommandAction$50(QuPathGUI.java:3409); at qupath.lib.gui.QuPathGUI$$Lambda$144/0x00000008401ef440.accept(Unknown Source); at org",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:3890,ERROR,ERROR,3890,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['ERROR'],['ERROR']
Availability,touch gestures: zooms when moving up/down,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188:37,down,down,37,https://qupath.github.io,https://github.com/qupath/qupath/issues/188,1,['down'],['down']
Availability,"tps://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d). By default, it will export the entire image at a very low resolution because of these lines; > ; > ```groovy; > // Aim for an output resolution of approx 20 µm/pixel; > double requestedPixelSize = 20; > ...; > // Calculate downsample factor depending on the requested pixel size; > double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); > def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()); > ```; > ; > You can switch it to export only the region corresponding to the selected object, at full resolution, as follows:; > ; > ```groovy; > // Calculate downsample factor depending on the requested pixel size; > double downsample = 1.0; > def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, getSelectedROI()); > ```; > ; > Let me know if that doesn't do what you need, and hopefully some other script change could help. Personally, I'd use the ImageJ method for exporting isolated regions occasionally, and a script if I wanted to export lots of regions in a single batch.; > ; > > Note: I've tagged this as _enhancement_ because I think it would make sense to increase the export size limit through the user interface to make this easier. I had forgotten the existing limit was so small... I have almost the same need as @nathan. I have some .tiff WSI want to convert them to ndarray. I downloaded the 0.1.2 version( 0.2.3 wouldn't work with the script above) and run the script. The script ""QuPath_export_images.groovy"" gave me downsampled image as it should. I followed your answer here adjust the script and it gave me sort of a blank image with some lines in it(I was doing regular image before just starting to deal with bioimage recently). Can you give me some instructions about how to export the whole image as jpg, png, or regular tif, so I can convert them to ndarray. Thank you in advance!!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/127#issuecomment-853621895:2050,down,downloaded,2050,https://qupath.github.io,https://github.com/qupath/qupath/issues/127#issuecomment-853621895,2,['down'],"['downloaded', 'downsampled']"
Availability,"tring filePath = getProperty(ScriptAttributes.FILE_PATH); ```. The inspiration is from https://github.com/qupath/qupath/issues/1029. These changes make useful things possible, e.g.; * take action to notify the user at the end of long-running batch processing; * access other scripts or files relative to the script file itself. ## New `Timeit` class. The new `Timeit` class simplifies reporting the length of time it takes scripts (or parts of scripts) to run. Simple use involves starting a `Timeit` early, calling `start()`, and printing it whenever you want:; ```groovy; def timeit = new Timeit().start(); Thread.sleep(100); println timeit; Thread.sleep(200); println timeit; ```; Output:; ```; Time since start	106 ms; Time since start	314 ms; ```. It's also possible to have a bit more control, setting named checkpoints along the way:. ```groovy; var timeit = new Timeit(); .microseconds(); .start(""First checkpoint""); ; println 'Doing something now'; Thread.sleep(100). timeit.checkpoint(""Second checkpoint""). println 'Waiting for a bit'; Thread.sleep(200); ; timeit.stop(). println ""Doing something that isn't timed""; Thread.sleep(200). println timeit; ```. Output:; ```; Doing something now; Waiting for a bit; Doing something that isn't timed; First checkpoint	106323 µs; Second checkpoint	208185 µs; Total duration	314508 µs; ```. It can also be used to run the same code multiple times, reporting the individual and average times:. ```groovy; var timeit = new Timeit(); .summarizeCheckpoints(); .checkpointAndRun(""My calculation"", () -> mySlowCalculation(), 10); ; println timeit.stop() // Important to stop to get time for last checkpoint. void mySlowCalculation() {; def x = 2 + 2; Thread.sleep(50); }; ```. Output:; ```; My calculation (1)	56 ms; My calculation (2)	55 ms; My calculation (3)	54 ms; My calculation (4)	55 ms; My calculation (5)	61 ms; My calculation (6)	52 ms; My calculation (7)	55 ms; My calculation (8)	55 ms; My calculation (9)	53 ms; My calculation (10)	57 ms; Tot",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1078:2699,checkpoint,checkpoint,2699,https://qupath.github.io,https://github.com/qupath/qupath/pull/1078,2,['checkpoint'],['checkpoint']
Availability,"tu 18.04 LTS; - QuPath Version v.0.1.2 and v.0.2.0-m9. **Additional context**; Error massage is:. ```; > ERROR: It looks like you have tried to import a class 'qupath.imagej.images.servers.ImagePlusServerBuilder' that doesn't exist!; > You should probably remove the broken import statement in your script (around line 17).; > Then you may want to check 'Run -> Include default imports' is selected, or alternatively add ; > import qupath.imagej.tools.IJTools; > at the start of the script. Full error message below.; > ; > ERROR: MultipleCompilationErrorsException at line 16: startup failed:; > Script1.groovy: 17: unable to resolve class qupath.imagej.images.servers.ImagePlusServerBuilder; > @ line 17, column 1.; > import qupath.imagej.images.servers.ImagePlusServerBuilder; > ^; > ; > Script1.groovy: 16: unable to resolve class qupath.imagej.images.servers.ImagePlusServer; > @ line 16, column 1.; > import qupath.imagej.images.servers.ImagePlusServer; > ^; > ; > 2 errors; > ; > ; > ERROR: Script error (MultipleCompilationErrorsException); > at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); > at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:975); > at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:637); > at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:586); > at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:401); > at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); > at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:341); > at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:338); > at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); > at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:336); > at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:320); > at groovy.lang.GroovyClassLoader.par",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/404:1395,error,errors,1395,https://qupath.github.io,https://github.com/qupath/qupath/issues/404,3,"['ERROR', 'error']","['ERROR', 'error', 'errors']"
Availability,uPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; ERROR: java.lang.OutOfMemoryError: Java heap space; WARN: Fallback to requesting thumbnail directly...; ERROR: QuPath exception; WARN: Tile request exception; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLa,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:9177,ERROR,ERROR,9177,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,2,['ERROR'],['ERROR']
Availability,"ug**; The behavior of *Analyze → Spatial analysis → Delaunay cluster features 2D* is not well-defined when applying the command to annotations that are nested (in the hierarchy) or overlapping. For 'flat' annotation arrangements the behavior is *mostly ok*, except that it does rely on *hierarchy relationships* rather than *spatial relationships*.; Which is to say, it hasn't really changed since v0.1.2. **To Reproduce**; Create an arrangement of objects similar to that shown below:. ![0-orig](https://github.com/user-attachments/assets/cf1a87fc-c73a-4ac6-be24-d830f0014604). 1. If I run *Delaunay cluster features 2D* with **_all_ annotations selected**, I see triangulation lines which *do not cross the boundary between the annotations containing cells*. ![1-all selected](https://github.com/user-attachments/assets/3309e1e3-76ca-4ec7-bf5c-e0c76b8f2d96). But I **also** get a `ConcurrentModificationException`:; ```; 15:47:01.829	[Plugin thread]	ERROR	qupath.lib.plugins.AbstractTaskRunner	Error running plugin: java.util.ConcurrentModificationException	java.util.concurrent.ExecutionException: java.util.ConcurrentModificationException; 	at java.base/java.util.concurrent.FutureTask.report(Unknown Source); 	at java.base/java.util.concurrent.FutureTask.get(Unknown Source); 	at qupath.lib.plugins.AbstractTaskRunner.awaitCompletion(AbstractTaskRunner.java:147); 	at qupath.lib.plugins.AbstractTaskRunner.runTasks(AbstractTaskRunner.java:117); 	at qupath.lib.gui.TaskRunnerFX.runTasks(TaskRunnerFX.java:106); 	at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:147); 	at qupath.lib.gui.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:177); 	at java.base/java.lang.Thread.run(Unknown Source); Caused by: java.util.ConcurrentModificationException; 	at java.base/java.util.ArrayList$Itr.checkForComodification(Unknown Source); 	at java.base/java.util.ArrayList$Itr.next(Unknown Source); 	at java.base/java.util.Collections$UnmodifiableCollection$1.next(Unknown Source); 	a",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1590:1027,Error,Error,1027,https://qupath.github.io,https://github.com/qupath/qupath/issues/1590,1,['Error'],['Error']
Availability,"ugh I'm not certain. Hopefully the log can help. I plan to write a better script to help explore memory issues soon, but in the meantime you could try this very basic one:. // Print the current memory situation. def runtime = Runtime.getRuntime(). double scale = 1.0/1024.0/1024.0. print 'Max memory (MB): ' + (runtime.maxMemory() * scale). print 'Total memory (MB): ' + (runtime.totalMemory() * scale). print 'Used memory (MB): ' + ((runtime.totalMemory() - runtime.freeMemory()) * scale). // Try to reclaim whatever memory we can, including emptying the tile cache. javafx.application.Platform.runLater {. getCurrentViewer().getImageRegionStore().cache.clear(). System.gc(). }. The top bit gives some numbers on current memory usage. Roughly, the 'max' is what QuPath/Java is allowed to use, the 'total' is what it is currently claiming the right to access (which might change over time, potentially increasing towards the 'max' as required), and the 'used' value is what is currently needed. The second bit of the script then tries to bring down the 'used' value by clearing out the cache of image tiles and reclaiming whatever memory if can. So if you run the script twice in a row, the 'used' memory value should generally be lower the second time, assuming you had previously been browsing around the image (and therefore filling up the tile cache). Running this script before running the cell detection might increase the chances of it ending successfully. If it still sometimes fails, but it looks like a memory problem, then either increasing the memory limit or decreasing the number of parallel threads could help - see https://github.com/qupath/qupath/wiki/Troubleshooting for more info. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/130#issuecomment-355845333>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AhgDyN_FkkG6m9PVrCtutL6J2PYQHVfHks5tIRihgaJpZM4RUCsS>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/130#issuecomment-355877016:1816,down,down,1816,https://qupath.github.io,https://github.com/qupath/qupath/issues/130#issuecomment-355877016,1,['down'],['down']
Availability,ui.commands.ProjectImportImagesCommand$1.lambda$call$1(ProjectImportImagesCommand.java:278); at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source); at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source); at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source); at java.base/java.util.stream.ForEachOps$ForEachTask.compute(Unknown Source); at java.base/java.util.concurrent.CountedCompleter.exec(Unknown Source); at java.base/java.util.concurrent.ForkJoinTask.doExec(Unknown Source); at java.base/java.util.concurrent.ForkJoinTask.doInvoke(Unknown Source); at java.base/java.util.concurrent.ForkJoinTask.invoke(Unknown Source); at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateParallel(Unknown Source); at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateParallel(Unknown Source); at java.base/java.util.stream.AbstractPipeline.evaluate(Unknown Source); at java.base/java.util.stream.ReferencePipeline.forEach(Unknown Source); at java.base/java.util.stream.ReferencePipeline$Head.forEach(Unknown Source); at qupath.lib.gui.commands.ProjectImportImagesCommand$1.call(ProjectImportImagesCommand.java:276); at qupath.lib.gui.commands.ProjectImportImagesCommand$1.call(ProjectImportImagesCommand.java:236); at javafx.concurrent.Task$TaskCallable.call(Task.java:1425); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); 14:59:04.778 [JavaFX Application Thread] [ERROR] qupath.lib.gui.dialogs.Dialogs - Import images: Failed to load one image.; 14:59:04.806 [JavaFX Application Thread] [INFO ] q.l.g.c.ProjectImportImagesCommand -; ```,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/396:3299,ERROR,ERROR,3299,https://qupath.github.io,https://github.com/qupath/qupath/issues/396,1,['ERROR'],['ERROR']
Availability,un(Script30.groovy:10); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2930); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItemsObserver(TableView.java:2907); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.access$2000(TableView.java:2028); at javafx.scene.control.TableView$TableViewArrayListSelectionModel$1.invalidated(TableView.java:2052); at com.sun.javafx.binding.Exp,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424986075:5462,ERROR,ERROR,5462,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075,1,['ERROR'],['ERROR']
Availability,"un.glass.ui.View.handleMouseEvent(View.java:555); 	at com.sun.glass.ui.View.notifyMouse(View.java:937); 	at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); 	at com.sun.glass.ui.gtk.GtkApplication.lambda$null$450(GtkApplication.java:139); 	at java.lang.Thread.run(Thread.java:745); 09:32:08.265 [JavaFX Application Thread] [WARN ] q.l.i.servers.OpenslideServerBuilder - Unable to open /data/CAMELYON16/Train_Tumor/Tumor_005.tif with OpenSlide: null; 09:32:08.265 [JavaFX Application Thread] [ERROR] q.l.i.servers.ImageServerProvider - Unable to build whole slide server - check your classpath for a suitable library (e.g. OpenSlide, BioFormats); 	; 09:32:08.265 [JavaFX Application Thread] [ERROR] q.l.i.servers.ImageServerProvider - /home/vaibhav/QuPath/app/QuPathApp.jar:qupath/qupath-core-0.1.2.jar:qupath/qupath-core-awt-0.1.2.jar:qupath/qupath-core-processing-0.1.2.jar:qupath/qupath-core-processing-awt-0.1.2.jar:qupath/qupath-extension-ij-0.1.2.jar:qupath/qupath-extension-input-0.1.2.jar:qupath/qupath-extension-opencv-0.1.2.jar:qupath/qupath-extension-openslide-0.1.2.jar:qupath/qupath-extension-pen-0.1.2.jar:qupath/qupath-extension-script-editor-0.1.2.jar:qupath/qupath-gui-fx-0.1.2.jar:qupath/qupath-processing-ij-0.1.2.jar:qupath/qupath-processing-opencv-0.1.2.jar:jars/commons-math3-3.6.1.jar:jars/controlsfx-8.40.12.jar:jars/flowless-0.4.5.jar:jars/groovy-2.4.7.jar:jars/groovy-jsr223-2.4.7.jar:jars/gson-2.8.0.jar:jars/ij-1.51g.jar:jars/jfxtras-common-8.0-r5.jar:jars/jfxtras-menu-8.0-r5.jar:jars/jinput-2.0.6.jar:jars/jpen-2-150301.jar:jars/jutils-1.0.0.jar:jars/logback-classic-1.1.7.jar:jars/logback-core-1.1.7.jar:jars/opencv-3.1.0.jar:jars/openslide-3.4.1_2.jar:jars/packager.jar:jars/reactfx-2.0-M4u1.jar:jars/richtextfx-0.6.10.jar:jars/slf4j-api-1.7.20.jar:jars/undofx-1.2.jar:jars/wellbehavedfx-0.1.1.jar; 09:32:08.266 [JavaFX Application Thread] [ERROR] q.lib.gui.helpers.DisplayHelpers - Open image: Sorry, I can't open /data/CAMELYON16/Train_Tumor/Tumor_005.tif",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/65:8558,ERROR,ERROR,8558,https://qupath.github.io,https://github.com/qupath/qupath/issues/65,1,['ERROR'],['ERROR']
Availability,unLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; ERROR: java.lang.OutOfMemoryError: Java heap space; WARN: Fallback to requesting thumbnail directly...; ERROR: QuPath exception; WARN: Tile request exception; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplicati,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:9306,ERROR,ERROR,9306,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,2,['ERROR'],['ERROR']
Availability,"use you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/249#issuecomment-442877107>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ArWoyy9fQqh1OZIfaIx3IN1LUJdlXAEKks5uz_51gaJpZM4Y5w90>. La presente comunicazione, che potrebbe contenere informazioni riservate e/o protette da segreto professionale, è indirizzata esclusivamente ai destinatari della medesima qui indicati. Ogni informazione qui contenuta, che non sia relativa alla nostra attività caratteristica, deve essere considerata come non inviata. Nel caso in cui abbiate ricevuto per errore la presente comunicazione, vogliate cortesemente darcene immediata notizia, rispondendo a questo stesso indirizzo di e-mail, e poi procedere alla cancellazione di questo messaggio dal Vostro sistema. E' strettamente proibito e potrebbe essere fonte di violazione di legge qualsiasi uso, comunicazione, copia o diffusione dei contenuti di questa comunicazione da parte di chi la abbia ricevuta per errore o in violazione degli scopi della presente. Ricordiamo che la tecnologia di trasmissione utilizzata non consente di garantire l’autenticità del mittente né l’integrità dei dati. This communication, which may contain confidential and/or legally privileged information, is intended solely for the use of the intended addressees. All information or advice contained in this communication is subject to the terms and conditions provided by the agreement governing each particular client engagement. If you have received this communication in error, please notify us immediately by responding to this email; then please delete it from your system. Any use, disclosure, copying or distribution of the contents of this communication by a not-intended recipient or in violation of the purposes of this communication is strictly prohibited and may be unlawful. The transmission technology used to send this mail can grant neither the sender identity nor the data integrity",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/249#issuecomment-442919733:2311,error,error,2311,https://qupath.github.io,https://github.com/qupath/qupath/issues/249#issuecomment-442919733,1,['error'],['error']
Availability,"using MSYS2 building openslide is simply calling ./configure && make &&; make install avoiding winbuild.sh/cross compilation. Did you rebuild pixman; or other openslide dependencies from source on Linux?. Am So., 17. Jan. 2021 um 18:52 Uhr schrieb Pete <notifications@github.com>:. > @kwiechen <https://github.com/kwiechen> thanks for the suggestion, I; > haven't looked into this - what would it involve and what would it solve?; > Currently, 'official' Windows builds are available for OpenSlide and seem; > to work fine. It is portability on Mac/Linux that poses the biggest problem; > (especially since pixman included in the last LTS Ubuntu release causes; > trouble).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/629#issuecomment-761851656>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZGYDJUF6JH7JKL7LHRDS2MPVPANCNFSM4S6NHNUA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-761857622:474,avail,available,474,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-761857622,1,['avail'],['available']
Availability,"using it; def classList = new ClassList<>(IFormatReader.class); classList.addClass(LeicaSCNReaderRGB); def reader2 = new ImageReader(classList); reader2.setFlattenedResolutions(false); def factory = new ServiceFactory(); def service = factory.getInstance(OMEXMLService.class); def meta = service.createOMEXMLMetadata(); reader2.setMetadataStore(meta); reader2.setId(server.filePath); server.manager.mapPrimary.put(server.filePath, BufferedImageReader.makeBufferedImageReader(reader2)). // Clear the tile cache; def viewer = QPEx.getCurrentViewer(); def imageData = viewer.getImageData(); Platform.runLater {; viewer.setImageData(null); viewer.getImageRegionStore().clearCacheForServer(server); viewer.setImageData(imageData); }. // See https://github.com/openmicroscopy/bioformats/blob/master/components/formats-bsd/src/loci/formats/in/MinimalTiffReader.java; class LeicaSCNReaderRGB extends LeicaSCNReader {. /** Reinitialize the underlying TiffParser. */; protected void initTiffParser() {; QuPathGUI.getInstance().logger.info('INITIALIZING TIFF PARSER'); if (this.in == null) {; try {; this.in = new RandomAccessInputStream(getCurrentFile(), 16);; }; catch (IOException e) {; LOGGER.error(""Could not initialize stream"", e);; }; }; tiffParser = new TiffParserRGB(this.in);; tiffParser.setDoCaching(false);; tiffParser.setUse64BitOffsets(use64Bit);; }. }. class TiffParserRGB extends TiffParser {. public TiffParserRGB(RandomAccessInputStream stream) {; super(stream); }. public byte[] getTile(IFD ifd, byte[] buf, int row, int col) throws FormatException, IOException {; ifd.putIFDValue(IFD.PHOTOMETRIC_INTERPRETATION, PhotoInterp.RGB.code); return super.getTile(ifd, buf, row, col); }. public byte[] getSamples(IFD ifd, byte[] buf, int x, int y,; long width, long height, int overlapX, int overlapY); throws FormatException, IOException; {; ifd.putIFDValue(IFD.PHOTOMETRIC_INTERPRETATION, PhotoInterp.RGB.code); return super.getSamples(ifd, buf, x, y, width, height, overlapX, overlapY). }. }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-358985847:2708,error,error,2708,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-358985847,1,['error'],['error']
Availability,"ut the same frequency in .m2, but haven't found a way to make it happen consistently. It seems to happen more frequently with more objects but other than that... If this is the same error I am thinking about, the whole Viewer window becomes non-interactable (exceptions pop up constantly if you try to click in the window) after it happens, and only restarting QuPath resolves it. ** Nix that, this is a different error, though I did just run into the same thing.; `qupath.lib.plugins.objects.ShapeFeaturesPlugin {""area"": true, ""perimeter"": true, ""circularity"": true, ""useMicrons"": true}; INFO: Possible regularization value: 7.890585871004013; INFO: 490 tiles created (processing time: 3.07 seconds); INFO: Processing complete in 3.11 seconds; INFO: Completed!; INFO: ; qupath.imagej.superpixels.SLICSuperpixelsPlugin {""sigmaMicrons"": 1.0, ""spacingMicrons"": 5.0, ""maxIterations"": 20, ""regularization"": 0.9, ""adaptRegularization"": true}; INFO: Processing complete in 4.87 seconds; INFO: Completed!; ERROR: QuPath exception; at java.base/java.util.LinkedHashMap$LinkedHashIterator.nextNode(LinkedHashMap.java:719); at java.base/java.util.LinkedHashMap$LinkedKeyIterator.next(LinkedHashMap.java:741); at java.base/java.util.Collections$UnmodifiableCollection$1.next(Collections.java:1045); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:161); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:219); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1670); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.Platform",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/307#issuecomment-484610786:1046,ERROR,ERROR,1046,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484610786,1,['ERROR'],['ERROR']
Availability,"v0.0.7 of the [QuPath Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension) is available now... doesn't solve this, but gives a meaningful error if `bioformats_package.jar` is missing - and has a lot of other improvements. Regarding the label, here's an inelegant script that works for me with your images:; ```groovy; /**; * Extract the label from an .scn image.; * Assumes it matches with the specified IFD (6) - I've no idea if this is always the case!; * ; * Shows the extracted label using ImageJ.; */. import ij.ImagePlus; import loci.formats.gui.AWTImageTools; import loci.formats.in.LeicaSCNReader; import qupath.lib.scripting.QPEx. def path = QPEx.getCurrentImageData().getServerPath(); if (path.contains('::')); path = path.substring(0, path.lastIndexOf('::')). def reader = new LeicaSCNReader(); try {; reader.setId(path); def ifd = reader.getIFDs().get(6); int h = ifd.getImageLength(); int w = ifd.getImageWidth(); def samples = new byte[w * h * 3]; samples = reader.tiffParser.getSamples(ifd, samples, 0, 0, w, h); def img = AWTImageTools.openImage(samples, reader, w, h); new ImagePlus(""Label"", img).show(); } finally {; reader.close(); }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409938514:103,avail,available,103,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409938514,2,"['avail', 'error']","['available', 'error']"
Availability,"v0.2.0-m10 is now available, which contains an updated version of OpenCV that I think/hope should have fixed the issue. But since I couldn't reproduce it in the first place, I'm not certain. I'll close this issue, but if you find the problem remains - or you can confirm it's resolved in m10 - please do let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/394#issuecomment-617734172:18,avail,available,18,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-617734172,1,['avail'],['available']
Availability,"v0.2.0-m10 is now available. Please let me know if is has the same problem, or if the issue can be closed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/436#issuecomment-617733292:18,avail,available,18,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-617733292,1,['avail'],['available']
Availability,"v0.2.0-m11 now tries to recover more gracefully when this happens. It can't resolve the problematic overlap, but at least it doesn't lose the other cells. I'll close this issue because I think it is now as fixed as it is going to be (the whole overlapping code may be revised before v1.0.0), but feel free to reopen if you find it reoccurs.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/459#issuecomment-621609187:24,recover,recover,24,https://qupath.github.io,https://github.com/qupath/qupath/issues/459#issuecomment-621609187,1,['recover'],['recover']
Availability,v0.4.2 is now available so I'll close this,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1202#issuecomment-1397430434:14,avail,available,14,https://qupath.github.io,https://github.com/qupath/qupath/issues/1202#issuecomment-1397430434,1,['avail'],['available']
Availability,"va:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191); at java.lang.Thread.run(Thread.java:745); ERROR: Unable to build whole slide server - check your classpath for a suitable library (e.g. OpenSlide, BioFormats); 	; ERROR: C:\ProgramData\App-V\46D140A1-54B6-42AA-A72A-99DBBA62CB07\6C3334CF-C8C7-49EA-9F90-47768DFB4373\Root\VFS\ProgramFilesX64\QuPath\app\QuPathApp.jar;qupath/qupath-core-0.1.2.jar;qupath/qupath-core-awt-0.1.2.jar;qupath/qupath-core-processing-0.1.2.jar;qupath/qupath-core-processing-awt-0.1.2.jar;qupath/qupath-extension-ij-0.1.2.jar;qupath/qupath-extension-input-0.1.2.jar;qupath/qupath-extension-opencv-0.1.2.jar;qupath/qupath-extension-openslide-0.1.2.jar;qupath/qupath-extension-pen-0.1.2.jar;qupath/qupath-extension-script-editor-0.1.2.jar;qupath/qupath-gui-fx-0.1.2.jar;qupath/qupath-processing-ij-0.1.2.jar;qupath/qupath-processing-opencv-0.1.2.jar;jars/commons-math3-3.6.1.jar;jars/controlsfx-8.40.12.jar;jars/flowless-0.4.5.jar;jars/groovy-2.4.7.jar;jars/groovy-jsr223-2.4.7.jar;jars/gson-2.8.0.jar;jars/ij-1.51g.jar;jars/jfxtras-common-8.0-r5.jar;jars/jfxtras-menu-8.0-r5.jar;jars/jinput-2.0.6.jar;jars/jpen-",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/351:4101,ERROR,ERROR,4101,https://qupath.github.io,https://github.com/qupath/qupath/issues/351,1,['ERROR'],['ERROR']
Availability,"ver(uri). // Get the current image and image name; def imageData = new ImageData(server); def name = server.getMetadata().getName(). def save_path = ""thumbnail_dir/"" + name + "".png"". def scale_factor = 8.0. // Save the entire image downsampled by a factor of scale_factor; def requestFull = RegionRequest.createInstance(server, scale_factor); writeImageRegion(server, requestFull, save_path); ```. I run it using the command line: . ```; qupath script -i ""31629 HE.bif"" image_thumbnail.groovy; ```. and the output is as follows:. ```; 11:36:08.817 [main] [INFO ] qupath.ScriptCommand - Setting tile cache size to 8030.00 MB (25.0% max memory); 11:36:09.171 [main] [WARN ] q.l.i.s.b.BioFormatsImageServer - Temp memoization directory created at /tmp/qupath-memo-14642445523855977691; 11:36:09.172 [main] [WARN ] q.l.i.s.b.BioFormatsImageServer - If you want to avoid this warning, either disable Bio-Formats memoization in the preferences or specify a directory to use; 11:36:09.363 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1; TIFFReadDirectory: Warning, Unknown field with tag 34677 (0x8775) encountered.; 11:36:09.429 [main] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.level[0].tile-width' not available, will return default value 256.0; 11:36:09.429 [main] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.level[0].tile-height' not available, will return default value 256.0; 11:36:09.999 [main] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; ```. Note the `TIFFReadDirectory` warning message in the middle of this. This strongly suggests that the OpenslideServer is actually being used rather than the BioFormats server, despite the explicit commands in the script to use BioFormats. **Expected behavior**; The BioFormats server should be used to open and read the image, as instructed. **Desktop (please complete the following information):**; - OS: Debian GNU/Linux; - QuPath Version 0.2.3. Thanks!",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/658:2106,avail,available,2106,https://qupath.github.io,https://github.com/qupath/qupath/issues/658,2,['avail'],['available']
Availability,"ver: ImageJ server for /home/bl/Documents/IMG_5_11_sq.png; 02:40:14.153 [JavaFX Application Thread] [INFO ] qupath.lib.gui.viewer.QuPathViewer - Image data set to ImageData: Fluorescence, IMG_5_11_sq; 02:40:22.852 [JavaFX Application Thread] [INFO ] q.lib.scripting.DefaultScriptEditor - Loading script file /home/bl/ip/QuPath/app/TestJep.groovy; 02:40:28.109 [richscripteditor-1] [INFO ] q.lib.scripting.DefaultScriptEditor - Mean red (from Java): 86.81525; 02:40:28.121 [richscripteditor-1] [INFO ] q.lib.scripting.DefaultScriptEditor - Mean green (from Java): 72.492275; 02:40:28.124 [richscripteditor-1] [INFO ] q.lib.scripting.DefaultScriptEditor - Mean blue (from Java): 68.141675; 02:40:28.624 [richscripteditor-1] [INFO ] q.lib.scripting.DefaultScriptEditor - Started JEP: jep.Jep@6bc4b2e2; ImportError: numpy.core.multiarray failed to import; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00007f930536d03f, pid=27357, tid=0x00007f932091e700; #; # JRE version: OpenJDK Runtime Environment (8.0_111-b14) (build 1.8.0_111-8u111-b14-2ubuntu0.16.04.2-b14); # Java VM: OpenJDK 64-Bit Server VM (25.111-b14 mixed mode linux-amd64 compressed oops); # Problematic frame:; # C [jep.so+0x1a03f] convert_jndarray_pyndarray+0x5bf; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /home/bl/ip/QuPath/app/hs_err_pid27357.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #. [1]+ Aborted (core dumped) ./QuPath; ```. I am thinking that this might be worth bringing up with the JEP developers. I am going to spend a little more time playing with JEP by itself in order to see if I run into any similar issues.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262870405:9975,error,error,9975,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262870405,1,['error'],['error']
Availability,"verProvider - Returning server: OpenSlide for D:\\QMDownload\\5\\~!@#$%^&( )_+=-0987654321`{}[%23];',\\single_neur~!@#$%^&( )_+=-0987654321`{}[%23];',on_40X_3.mrxs ; WARNING: An illegal reflective access operation has occurred ; WARNING: Illegal reflective access by org.codehaus.groovy.vmplugin.v7.Java7$1 (file:/C:/Program%20Files/QuPath-0.2.0-m1/app/groovy-2.5.6.jar) to constructor java.lang.invoke.MethodHandles$Lookup(java.lang.Class,int) ; WARNING: Please consider reporting this to the maintainers of org.codehaus.groovy.vmplugin.v7.Java7$1 ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 15:23:37.065 [main] [ERROR] qupath.QuPath - Error running script! ; javax.script.ScriptException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:158) ; 	at qupath.QuPath.main(QuPath.java:161) ; Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311) ; 	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:151) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:121) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:133) ; 	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:325) ; 	at org.codehaus.groovy.antlr.AntlrParserPlugin.transformCSTIntoAST(AntlrParserPlugin.java:224) ; 	at org.codehaus.groovy.antlr.AntlrParserPlugin.parseCST(AntlrParserPlugin.java:190) ; 	at org.codehaus.groovy.control.SourceUnit.parse(Sou",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/286:3012,error,error,3012,https://qupath.github.io,https://github.com/qupath/qupath/issues/286,1,['error'],['error']
Availability,"when i try to open a qdata ; ![图片1](https://user-images.githubusercontent.com/25858179/74319399-d4a39400-4db9-11ea-8989-d610f792d22a.png). ## IMPORTANT!. **This is only for bug reports - for questions or discussions, please use the forum at [image.sc](https://forum.image.sc/tags/qupath) instead**. ## Before we begin... **You've checked https://qupath.github.io for a new release that might already have fixed the issue, right?**. **And you've searched for related issues here to see if the issues has already been reported?**. If not, please do these things first. Otherwise, please fill in the template below with as much information as possible to help us reproduce the bug & fix it. ## Bug report. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps to reproduce the behavior:; 1. Go to '...'; 2. Click on '....'; 3. Scroll down to '....'; 4. See error. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Windows, macOS, Ubuntu...]; - QuPath Version [e.g. 0.1.2]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/399:875,down,down,875,https://qupath.github.io,https://github.com/qupath/qupath/issues/399,2,"['down', 'error']","['down', 'error']"
Availability,"with Bio-Formats, QuPath uses multiple Bio-Formats readers to access pixels in parallel. Each reader needs to be initialized. Generally this is fast, but sometimes (e.g. with certain files or file types) it is slow. In one particularly bad case (a very large .czi file) I've seen it take minutes. Memoization makes it possible to create `.bfmemo` files the first time a reader is created, so that subsequent readers can use these for faster initialization. ### Turning on memoization. Because memoization involves writing files to disk, users might not always want it. QuPath provides two preferences to control this:. * **Bio-Formats memoization time (ms)** If less than 0, don't use memoization. If >= 0, create a memoization file only if initialization of a reader takes longer than the specified milliseconds. If initialization is fast anyway, memoization is pretty pointless.; * **Bio-Formats memoization directory** If specified, store memoization files in here. Then they are persistent, and available when QuPath is reopened. *Otherwise*, store any memoization files in a temporary directory and delete the directory when QuPath is shut down. ### Default behavior. The default behavior (at least in v0.3.0 - v0.4.2) was to specify a memoization time of 500 ms, and not to specify a directory (i.e. only use temporary files). Upon inspection, it seems that this still creates temporary directories even if no `.bfmemo` files are ever written. Therefore the proposed default behavior for v0.4.3 onwards is to specify a memoization time of -1 (i.e. it's turned off by default). This errs on the side of not creating temp files, and is further justified by the fact that memoization was already missing in v0.4.0 - v0.4.2 anyway (due to the use of Bio-Formats 6.11 and Java 17). Therefore turning into a feature that explicitly requires opting-in doesn't represent a change of default behavior across the v0.4.x releases. ### Turning memoization off (known issue!). To turn off memoization, you'd ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1236:1571,avail,available,1571,https://qupath.github.io,https://github.com/qupath/qupath/issues/1236,1,['avail'],['available']
Availability,"wnsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); File file = new File(dirOutput, name); ImageWriterTools.writeImageRegionWithOverlay(imageData, overlayOptions, request, file.getAbsolutePath()). // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; catch (Exception e) {; // Check if we have had a sufficient number of errors to just give up; nErrors++;; if (nErrors > maxErrors) {; println(""Maximum number of errors exceeded - aborting...""); return; }; e.printStackTrace(); }; }; }; }. ```. The error is on line 91 when I try to access the ImagePlusServer server, which obviously doesn't exist anymore. . ```; ERROR: Error at line 7: No such property: server for class: Script48. ERROR: Script error; at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.unwrap(ScriptBytecodeAdapter.java:65); at org.codehaus.groovy.runtime.callsite.PogoGetPropertySite.getProperty(PogoGetPropertySite.java:51); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callGroovyObjectGetProperty(AbstractCallSite.java:309); at Script48.run(Script48.groovy:8); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309:4136,error,errors,4136,https://qupath.github.io,https://github.com/qupath/qupath/issues/309,2,['error'],['errors']
Availability,"writing a new pyramidal OME-TIFF file... but that rather increases the amount of data involved, and requires knowing the coordinates where each core comes from. A practical issue here is that I have seen a .czi TMA (I believe yours, @arnmayer :) ) that Bio-Formats has several problems with. This thwarts any plan we might develop to resolve this independently of Zeiss or the Bio-Formats team. Specifically:; * Sometimes the co-ordinates defining the TMA core locations accessed through Bio-Formats appears simply to be wrong, so it's not possible to figure out where they _should_ be; * The size of the Bio-Formats reader is astronomically large (> 1 GB), which makes opening files slow. You can see this in the size of the .bfmemo files if they are created. This also means that it's not possible to create multiple readers (which QuPath normally does for performance).; * The low resolution 'overview' image seems to be corrupt. It is somehow interpreted by Bio-Formats as a single-channel non-pyramidal image yet throws an error when one tries to open it directly. However the image itself must be ok, as it looks fine in the Zeiss software. If this image can be shared with the Bio-Formats team, they may be able to address these issues. Finally, one of the delays to m3 is I've been doing the groundwork to make image servers smarter. The relevance here is that it means that an image server is able to dynamically crop and/or reposition parts of an image to generate 'pseudo' whole slide images in QuPath, which might be composed of different pieces. They can also do extra fancy things like apply color transforms or concatenate channels. It will take some time to make this to become a fully-usable part of the software, but it relates to the problem as follows:; * if your cores are as separate images, QuPath should be able to merge them together to _act_ like they are in the same image; * if you have multiple TMA slides, QuPath could dynamically crop out the cores and assemble pseudo-s",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/337#issuecomment-509982536:1784,error,error,1784,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-509982536,1,['error'],['error']
Availability,"x highlighting; * Autocomplete with built-in macro functions when pressing `Ctrl+space`; * Better control over which objects are sent for processing; * Better control over resolution, with 3 different methods to control the size of images sent to ImageJ (not just downsample); * Better control over parallelization; * Option to select channels to send; * Built-in examples of potentially-useful macros; * Support for `Roi` groups, which map to QuPath classifications; * Scriptability; macros can be stored in the command history and run later through Groovy scripts; * Ability to run Groovy scripts instead of macros; * These are different from Groovy scripts run through the script editor; they are specifically written to work on an `ImagePlus` obtained from ImageJ via a call to `IJ.getImage()`; * New `IJProcessing` and `IJFilters` classes make it easier to process images obtained this way; * Properties are set in the `ImagePlus` based on the QuPath image type so it's possible to determine a sensible value of `darkBackground` or `lightBackground` in macros or scripts; * Better maintainability through the use of fxml and externalised strings; * Available by the 'ImageJ' toolbar button, not only the menus. This required a *lot* of changes, so there is a reasonable chance things have broken elsewhere... including with the regular script editor (which needed changed to make it possible to generate a script editor control elsewhere). But I think it remains functional... Some limitations:; * It's not possible to control via a script which objects or Rois are sent to ImageJ with an `OverlayOptions` object; * The previous macro runner didn't do this perfectly either - see https://github.com/qupath/qupath/issues/1522 ); * It's not currently possible to send back measurements with objects added to an overlay; * Only 'original' channels can be sent through the user interface, not color deconvolved channels (although scripting gives more options); * The scripting language can't be set e",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1682:1412,Avail,Available,1412,https://qupath.github.io,https://github.com/qupath/qupath/pull/1682,1,['Avail'],['Available']
Availability,"x. // Aim for an output resolution of approx 20 µm/pixel; double requestedPixelSize = 20. // Create the output directory, if required; def path = ""./out/t6result"" //QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""export""); QPEx.mkdirs(path). // Get the imageData & server; def imageData = QPEx.getCurrentImageData(); def server = imageData.getServer(); setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 127, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = 5 //requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); println(overlayOptions); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath())",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:6919,avail,available,6919,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,"['avail', 'down']","['available', 'downsample']"
Availability,"xception` can be thrown when working with measurement lists in parallel threads. A related issue is reported at https://github.com/qupath/qupath/pull/1466 but the proposed fix does not solve the problem here. **To Reproduce**; Try running the script below:; ```groovy; // A growing list of objects; def pathObjects = Collections.synchronizedList([]). // Number of iterations; int n = 1000. // Create a thread to continually request all measurement names; def t = new Thread( {; while (pathObjects.size() < n) {; def list = PathObjectTools.getAvailableFeatures(new ArrayList<>(pathObjects)); }; }); t.start(). // Create a parallel stream to add new objects; java.util.stream.IntStream.range(0, n); .parallel(); .forEach(i -> {; // This happens only with detections!; def pathObject = PathObjects.createDetectionObject(ROIs.createEmptyROI()); pathObjects << pathObject; for (int k = 0; k <= i; k++); pathObject.measurementList.put(""M_$k"", i); }); t.join(); ; println ""Done!""; ```. I see an exception; ```; ERROR: null; java.util.ConcurrentModificationException: null; at java.base/java.util.ArrayList$Itr.checkForComodification(Unknown Source); at java.base/java.util.ArrayList$Itr.next(Unknown Source); at java.base/java.util.Collections$UnmodifiableCollection$1.next(Unknown Source); at java.base/java.util.AbstractCollection.addAll(Unknown Source); at qupath.lib.objects.PathObjectTools.getAvailableFeatures(PathObjectTools.java:2026); at org.codehaus.groovy.vmplugin.v8.IndyInterface.fromCache(IndyInterface.java:321); at QuPathScript$_run_closure1.doCall(QuPathScript:11); at QuPathScript$_run_closure1.doCall(QuPathScript); at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source); at java.base/java.lang.reflect.Method.invoke(Unknown Source); at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343); at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328); at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaCl",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1591:1090,ERROR,ERROR,1090,https://qupath.github.io,https://github.com/qupath/qupath/issues/1591,1,['ERROR'],['ERROR']
Availability,yes it is a Fluorescence image. . I am getting **Error at line 51: Width (0) and height (0) cannot be <= 0**. I checked the width and height with getWidth() and getHeight() functions and its not 0.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/200#issuecomment-411347394:49,Error,Error,49,https://qupath.github.io,https://github.com/qupath/qupath/issues/200#issuecomment-411347394,1,['Error'],['Error']
Availability,"yes, the wand tool in the download works fine",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-630736057:26,down,download,26,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630736057,1,['down'],['download']
Availability,"you have successfully saved the; file at least once. It isn't an autosave feature. Regarding the memory, 3.3 GB is quite low. For small scale testing I; usually got away with 16GB, and for larger projects 64+. I am not sure,; but you may be able to circumvent this somewhat by running each of your 4; ROIs in turn, and saving after each. On Nov 9, 2017 9:23 AM, ""Eline8"" <notifications@github.com> wrote:. > Thank you both for answering! @Svidro <https://github.com/svidro> and; > @petebankhead <https://github.com/petebankhead>; > I started all over again, so I don't have the workflow anymore.; > Nevertheless, what I meant was that I used indeed the pointing tool. I had; > two populations, one negative and one positive. After I ran the positive; > cell detection, the negative population was gone. And unfortunately, there; > is no undo button.; >; > My goal was indeed compare the manual counting and the automated counting.; > For optimization.; >; > I don't know whether the error is the lack of RAM, I checked and i have; > 3,3GB available. And I only have 4 ROI's in one image. When I run the; > analysis, I make sure nothing is selected and choose the option 'all; > annotation'. It might be, but it might be not, because sometimes it also; > does not analyse only 1 ROI, but other times it does. However, the log it; > says 'memory error'. the programs that are running on my computer besides; > Qupaht are google chrome (1tab), one note with an excel file, and file; > explorer.; >; > [image: capture]; > <https://user-images.githubusercontent.com/33484227/32604466-0266ac66-c54e-11e7-9a9b-ede61554510b.PNG>; > [image: capture2]; > <https://user-images.githubusercontent.com/33484227/32604472-05d80ef8-c54e-11e7-97d1-b1540f6ee388.PNG>; > [image: capture3]; > <https://user-images.githubusercontent.com/33484227/32604473-07eafa66-c54e-11e7-9aca-94fae7d0e9da.PNG>; >; > I really don't know why sometimes it works or not, but i'll be more; > careful in what I'll do.; > Unfortunately, there",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343229740:1025,error,error,1025,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343229740,2,"['avail', 'error']","['available', 'error']"
Availability,"ype = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 87 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0) ; 15:23:36.812 [main] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for D:\\QMDownload\\5\\~!@#$%^&( )_+=-0987654321`{}[%23];',\\single_neur~!@#$%^&( )_+=-0987654321`{}[%23];',on_40X_3.mrxs ; WARNING: An illegal reflective access operation has occurred ; WARNING: Illegal reflective access by org.codehaus.groovy.vmplugin.v7.Java7$1 (file:/C:/Program%20Files/QuPath-0.2.0-m1/app/groovy-2.5.6.jar) to constructor java.lang.invoke.MethodHandles$Lookup(java.lang.Class,int) ; WARNING: Please consider reporting this to the maintainers of org.codehaus.groovy.vmplugin.v7.Java7$1 ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 15:23:37.065 [main] [ERROR] qupath.QuPath - Error running script! ; javax.script.ScriptException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:158) ; 	at qupath.QuPath.main(QuPath.java:161) ; Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311) ; 	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:151) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:121) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:133) ; 	at org.codehaus.groovy.control.SourceUnit.addError(SourceUnit.java:325) ; 	at org.codehaus.groov",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/286:2782,Error,Error,2782,https://qupath.github.io,https://github.com/qupath/qupath/issues/286,1,['Error'],['Error']
Availability,"{; ""objectType"": ""annotation"",; ""measurements"": {; ""Area µm^2"": 3.5567575437333584E7,; ""Length µm"": 62782.89619349399,; ""Solidity"": 0.5638625874807928,; ""Max diameter µm"": 12192.853113808404,; ""Min diameter µm"": 7673.144125811996; }; }; }; ```. The following script creates a mask the 'QuPath' way:; ```groovy; def roi = getSelectedROI(); def mask = BufferedImageTools.createROIMask(roi, 10); new ij.ImagePlus(""Mask"", mask).show(); ```. You can generate an 'ImageJ' mask using _Extensions → ImageJ → Send region to ImageJ_ and then _Edit > Selection > Create Mask_. ### Expected behavior; When sending a QuPath ROI to ImageJ, any masks generated in either application should be identical - or at least very similar. This might be achieved by converting complicated `PolygonROI` instances into `GeometryROIs`. ### Screenshots; #### In QuPath; <img width=""903"" alt=""QuPath mask"" src=""https://github.com/user-attachments/assets/5ebd2fc7-12ef-4cec-8928-115fece9fe4e"">. #### In ImageJ; <img width=""903"" alt=""ImageJ mask"" src=""https://github.com/user-attachments/assets/0af83a44-d1d0-4cc9-b706-0d337eec2769"">. ### Desktop (please complete the following information):; - OS: All; - QuPath Version: 0.5.1 (presumably earlier versions too). ### Additional context; ImageJ's choice of winding rule may well be more sensible - but it is not something we should change in QuPath too quickly. This clearly *could* be a serious problem for some workflows, but I struggle to think of a time when it is likely to have been a problem in reality. It is only likely to impact `PolygonROIs` with self-intersections. While these can be drawn in the viewer, internally QuPath will typically convert these to be `GeometryROIs` - and these seem to behave ok. Note that ImageJ's mask generation is in general a bit more sophisticated than QuPaths (see [here](https://github.com/imagej/ImageJ/blob/7d8d18b0dd78582cbc7ebf3cde745d5a8ac32007/ij/gui/ShapeRoi.java#L1024)), which is something that warrants investigation in the fut",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1674:7185,mask,mask,7185,https://qupath.github.io,https://github.com/qupath/qupath/issues/1674,1,['mask'],['mask']
Deployability," 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:418); 	at qupath.lib.gui.QuPathApp.start(QuPathApp.java:59); 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$106(LauncherImpl.java:863); 	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$119(PlatformImpl.java:326); 	at com.sun.javafx.application.PlatformImpl.lambda$null$117(PlatformImpl.java:295); 	at java.security.AccessController.doPrivileged(Native Method); 	at com.sun.javafx.application.PlatformImpl.lambda$runLater$118(PlatformImpl.java:294); 	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95); 	at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); 	at com.sun.glass.ui.gtk.GtkApplication.lambda$null$450(GtkApplication.java:139); 	at java.lang.Thread.run(Thread.java:745); 02:39:38.754 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Dark; 02:39:38.757 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 02:39:38.781 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 02:39:38.837 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - QuPath Notice: This is a pre-release version of QuPath; Version: 0.0.6; Build time: 2016-11-16, 15:54; 02:40:13.093 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideServerBuilder - Could not load OpenSlide native library; java.lang.UnsatisfiedLinkError: /home/bl/ip/QuPath/app/libopenslide-jni.so: libopenslide.so.0: cannot open shared object file: No such file or directory; 	at java.lang.ClassLoader$NativeLibrary.load(Native Method); 	at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941); 	at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857); 	at java.lang.Runtime.loadLibrary0(Runtime.java:870); 	at java.lang.System.loadLibrary(System.java:1122); 	at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); 	at org.openslide.OpenSlide.<clinit>(Ope",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262870405:3182,update,update,3182,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262870405,1,['update'],['update']
Deployability," - this is nevertheless still drawn on screen; * When removing with the brush tool, a sanity check is applied to see if the resulting ROI has no area - and if so, the object is removed (e.g. [see here](https://github.com/qupath/qupath/blob/61a382e1e345e671b3fde32da08e03f08f4f7bcf/qupath-gui-fx/src/main/java/qupath/lib/gui/viewer/tools/AbstractPathDraggingROITool.java#L100)); * This sanity check isn't applied with the *Subtract selected annotations* command... so the 'empty' ROI does not result in the object being automatically removed; * Sometimes the sanity check can be triggered later... but it entirely clear when and why. I've flagged this as a bug, since something here is definitely not right and should be fixed. I do think that there is a broader issue with the usefulness of the commands for combining annotations; these can and should behave more predictably. It may not be helped by the fact that for a long time (before release) QuPath didn't support multiple objects being selected simultaneously, and much of the original code was written back in those days; as you can imagine, this was quite limiting. You're completely right about support for subtracting multiple annotations being tricky from a how-to-present-this-to-the-user point of view. I will give this some more thought. My preference would be to replace the existing commands to combine annotations with entirely new ones that have more clearly defined purposes and limitations. In the meantime, since you're already coding, it might be helpful to create your own script/extension to handle your specific needs. To do this, I'd suggest looking into [PathROIToolsAwt.java](https://github.com/qupath/qupath/blob/a3e9246640f9819701d57c513bb21a0546cff130/qupath-core-awt/src/main/java/qupath/lib/roi/PathROIToolsAwt.java) - specifically ```getArea(ROI roi)``` and ```getShapeROI(...)```. The first of these can convert a QuPath ROI into a [```java.awt.geom.Area```](https://docs.oracle.com/javase/8/docs/api/java/awt/geom",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/78#issuecomment-302926092:1658,release,release,1658,https://qupath.github.io,https://github.com/qupath/qupath/issues/78#issuecomment-302926092,1,['release'],['release']
Deployability, 2; 20:39:43.272 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.274 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.275 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; ...; 20:39:43.604 [main] [ERROR] q.l.i.writers.ome.ConvertCommand - Unable to open file:broken_image.tif; java.io.IOException: Unable to open file:broken_image.tif; at qupath.lib.images.servers.ImageServers.buildServer(ImageServers.java:306); at qupath.lib.images.writers.ome.ConvertCommand.run(ConvertCommand.java:147); at picocli.CommandLine.executeUserObject(CommandLine.java:2026); at picocli.CommandLine.access$1500(CommandLine.java:148); at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2461); at picocli.CommandLine$RunLast.handle(CommandLine.java:2453); at picocli.CommandLine$RunLast.handle(CommandLine.java:2415); at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2273); at picocli.CommandLine$RunLast.execute(CommandLine.java:2417); at picocli.CommandLine.execute(CommandLine.java:2170); at qupath.QuPath.main(QuPath.java:202); Suppressed: java.io.IOException: Unable to build ImageServer for file:/scratch/a56/jr9959/tmp/xenium-images/unassigned/230629_Xenium_ID4369_Primary_3962_LA-Spots/230629_Xenium_ID4369_Primary_3962_LA-Spot000001.tif with requested provider qupath.imagej.images.servers.ImageJServerBuilder; at qupath.lib.images.servers.ImageServerBuilder$DefaultImageServerBuilder.buildOriginal(ImageServerBuilder.java:369); at qupath.lib.images.servers.ImageServerBuilder$AbstractServerBuilder.build(ImageServerBuilder.java:174); at qupath.lib.images.servers.ImageServers.buildServer(ImageServers.java:299); ... 10 common frames omitted; ```; Checkout exit code:; ```; echo $?; 0; ```. **Expected behavior**; Expected a non-zero return code. **Desktop (HPC):**; - OS: Rocky Linux release 8.8 (Green Obsidian); - QuPath Version: 0.5.0,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1451:3276,release,release,3276,https://qupath.github.io,https://github.com/qupath/qupath/issues/1451,1,['release'],['release']
Deployability," GUI:; We can see that the path was a combination of two paths, this is the problem. >> RMD_slide2ims_Entry; 23:18:18.288 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, D:\\QMDownload\\5\\Leica_scn\\Leica-Fluorescence-1.scn, -script, D:\\QMDownload\\5\\tpc9321172_2c3b_4e82_b55c_7ae4380fda4b.groovy ; 23:18:18.368 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!! ; 23:18:18.428 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1 ; WARNING: An illegal reflective access operation has occurred ; WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/C:/Program%20Files/QuPath-0.2.0-m1/app/kryo-2.24.0.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object) ; WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 23:18:19.436 [main] [WARN ] loci.formats.Memoizer - deleting invalid memo file: D:\QMDownload\5\Leica_scn\.Leica-Fluorescence-1.scn.bfmemo ; com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 458; Serialization trace:; service (loci.formats.in.OperettaReader); readers (loci.formats.ImageReader); reader (loci.formats.DimensionSwapper); reader (loci.formats.FileStitcher); helper (loci.formats.in.FilePatternReader); readers (loci.formats.ImageReader) ; 	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:119) ; 	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:641) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:375) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:289) ; 	at com.es",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/280#issuecomment-472915452:1152,release,release,1152,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452,1,['release'],['release']
Deployability, INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:708); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.java:819); at qupath.lib.display.ImageDisplay.updateHistogramMap(ImageDisplay.java:554); at qupath.lib.display.ImageDisplay.setImageData(ImageDisplay.java:144); at qupath.lib.gui.viewer.QuPathViewer.setImageData(QuPathViewer.java:1385); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2459); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2368); at qupath.lib.gui.commands.OpenCommand.run(OpenCommand.java:51); at qupath.lib.gui.QuPathGUI.lambda$createCommandAction$50(QuPathGUI.java:3409); at qupath.lib.gui.QuPathGUI$$Lambda$144/0x00000008401ef440.accept(Unknown Source); at org.controlsfx.control.action.Action.handle(Action.java:419); at org.controlsfx.control.action.Action.handle(Action.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.BasicEventDispatcher.dispatchE,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:4359,update,updateHistogramMap,4359,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['update'],['updateHistogramMap']
Deployability," Launching it again, resetting settings, getting a fresh install, etc.., nothing will get me the original density map exceptions. If someone else experienced the original issue, it would be great to have more details about it. Worth noticing though is that I sometimes get an Exception when moving the density radius slider left and right (in quite an unpredictable way, therefore not sure how to exactly reproduce this):; ```; [ERROR] qupath.lib.gui.dialogs.Dialogs - QuPath exception: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; java.lang.NullPointerException: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; 	at qupath.process.gui.commands.density.DensityMapDialog$ObservableColorModelBuilder.updateDisplayRanges(DensityMapDialog.java:589); 	at qupath.process.gui.commands.density.DensityMapDialog.lambda$new$3(DensityMapDialog.java:201); 	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:181); 	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); 	at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); 	at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); 	at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.updateDensityServer(DensityMapDialog.java:884); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.lambda$updateDensityServer$6(DensityMapDialog.java:863); 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); 	at java.base/java.util.concurrent.FutureTask.run(Unknown Source); 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); 	at java.base/java.lang.Thread.run(Unknown Source); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/776#issuecomment-874035644:1706,update,updateDensityServer,1706,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874035644,2,['update'],['updateDensityServer']
Deployability," Zoom from MicroDimensions is Windows-only, I suspect it may be using the Windows-only software libraries provided by [Zeiss](http://www.zeiss.com/microscopy/int/products/microscope-software/zen/czi.html) and [3D Histech](http://www.3dhistech.com/downloads). Since these are not open source (as far as I am aware), they [wouldn't be compatible with QuPath's GPL license](https://www.gnu.org/licenses/gpl-faq.html#GPLAndPlugins). Therefore including them would require a change to QuPath's license, and result in extra functionality being available on Windows but not on other platforms... and for these reasons it would really be a last resort. Nevertheless, if you or anyone at your place of work would like to give it a try, creating such an extension may be a [reasonable solution for internal use](https://www.gnu.org/licenses/gpl-faq.html#GPLRequireSourcePostedPublic). The biggest effort required is likely to be in being able to access the pixels from the native libraries within Java, but if that problem is solved then I could certainly help with the relatively small final step of integrating the result with QuPath. Still, hopefully Bio-Formats will be able to provide a solution for `*.czi` files in the near future - I'll post an update here and [Google Groups](https://groups.google.com/d/forum/qupath-users) whenever I see it. If so, that only leaves non-RGB `*.mrxs`. There may be a way to merge separated monochrome TIFFs into a single multi-channel TIFF using [Bio-Formats](http://www.openmicroscopy.org/site/support/bio-formats5.2/supported-formats.html)... although I'm not sure. Alternatively, [Pannoramic Viewer](http://www.3dhistech.com/pannoramic_viewer) may have alternative export options not present in CaseViewer. If neither of these approaches are suitable, I can imagine a new custom image reader within QuPath that is able to automatically concatenate the multiple channels of a TIFF, assuming that they are stored in the same directory with a standard naming scheme (e",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/12#issuecomment-258467053:1222,integrat,integrating,1222,https://qupath.github.io,https://github.com/qupath/qupath/issues/12#issuecomment-258467053,1,['integrat'],['integrating']
Deployability," ```; ./QuPath-0.2.0 -i=myimage.svs script myscript.groovy; ```; 3. See error:; imageData == Null; NullPointerException at line 11: Cannot invoke method getServer() on null object. **Expected behavior**; I would expect that if the command line arguments were changed to the new format the script processing would work the same as 0.2.0-m9 and earlier. The script editor seems to work just fine. Example working output from 0.2.0-m9 is shown below: . 10:23:10.593 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, myimage.svs, -script, myscript.groovy; 10:23:11.387 [main] [WARN ] q.l.i.s.b.BioFormatsImageServer - Temp memoization directory created at /var/folders/9_/b0xrdp2d1bsbzlmwp3xff2g00000gn/T/qupath-memo-8955966830564346412; 10:23:11.388 [main] [WARN ] q.l.i.s.b.BioFormatsImageServer - If you want to avoid this warning, either disable Bio-Formats memoization in the preferences or specify a directory to use; 10:23:11.563 [main] [WARN ] q.l.i.s.ImageServerMetadata$ImageResolutionLevel - Calculated downsample values differ for x & y for level 4: x=70.0 and y=70.10548523206751 - will use value 70.05274261603375; 10:23:11.573 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1; WARNING: An illegal reflective access operation has occurred; WARNING: Illegal reflective access by org.codehaus.groovy.vmplugin.v7.Java7$1 (file:/Applications/QuPath-0.2.0-m9.app/Contents/app/groovy-2.5.9.jar) to constructor java.lang.invoke.MethodHandles$Lookup(java.lang.Class,int); WARNING: Please consider reporting this to the maintainers of org.codehaus.groovy.vmplugin.v7.Java7$1; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations; WARNING: All illegal access operations will be denied in a future release; imageData != Null. **Desktop (please complete the following information):**; - OS: [macOS]; - QuPath Version [0.2.0-m10 and greater]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/511:3197,release,release,3197,https://qupath.github.io,https://github.com/qupath/qupath/issues/511,1,['release'],['release']
Deployability," agree this interface may not be the best one as it could easily just be a checkbox option in the ScriptEditor. For now, though, i think it is enough to enjoy the benefits that this PR brings. > > This last change alone allowed, on my projects, to improve the time when creating an object classifier from ~10/15minutes to ~5seconds. > Can you explain why it takes so long? Huge numbers of images? Slow file format, or is it where the images are stored?. Basically All you the above. It accesses ~50 `.czi` images, weighting ~10GiB each. Leaving the the big size aside, it's also known that BioFormats themselves (required by `.czi`) are slow to work with.; Adding up to this scenario, images are often stored on a remote server (be it OMERO or just a sftp/samba server). This is due to the fact that it is hard for every member of a laboratory to have them stored on their own computer, as they all need to collaborate and, even if they wanted, they would soon fill up their local storage. in this scenario, the fact that QuPath offer an highly-scriptable interface is many laboratories' luck. It means that a pipeline of scripts can be applied one after the other, resulting in a full analysis of the whole project. Sometimes, you may even want to tweak some parameters, and for this you have to re-run the whole pipeline in batch again. In the end, I really get you are wary of quickly merging this. I'm sure reducing code is a top priority in order to offer the best bug-free experience to QuPath's wide user-base. A base experience that can be extended by plug-ins and scripts _outside_ of QuPath's code/responsibility. However, I feel like the ability to run scripts in QuPath is at the **core** of its streghts. It allows to offer an extensible basis on which downstream developers can then build upon.; For this reason I ask you to please also consider future scenarios that this small PR opens up in batch script execution, and not only its implications with the object classifier. Thank you!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1488#issuecomment-2022463076:2946,pipeline,pipeline,2946,https://qupath.github.io,https://github.com/qupath/qupath/pull/1488#issuecomment-2022463076,2,['pipeline'],['pipeline']
Deployability," at the start; I think centred vertical alignment for the version and buttons would look bette; - [x] The description text would ideally be lighter in color (e.g. using opacity); - [x] The purpose of the 'remove' and 'update' buttons is unclear - especially for built-in extension that can't be changed. ; - [x] Does update 'Check for updates' or actually update?; - [x] I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. > I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start;. I'd be more inclined to even do ""version: 0.1.0"" rather than having column headers that would be largely redundant. > Does update 'Check for updates' or actually update?. It checks for updates; if one is available, it asks if you'd like to download it. If not, it pops up a notification saying it's up-to-date. > I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. Yes, similarly it asks if you want to download before going ahead. ![Screenshot from 2023-10-02 22-37-08](https://github.com/qupath/qupath/assets/10779688/b0404e3f-320d-4fbf-b990-3cad161dee24). Note that here the top list is focusable, the bottom isn't. The titles are obviously WIP (see below). Same with the extensions dir button not being full-width (although I don't truly love that personally, it's up to you). > Finally, I think splitting the lists at the top into different sections would make sense, if they have different purposes. Rather than 'servers' and 'extensions', they could be split between 'Built-in extensions' and 'Optional extensions'. That might help explain the differences in behavior. I don't think ""Server"" vs ""extension"" is useful yeah, it seems a bit technical for what this GUI component is. I'd have done core vs non-core, but is there a way of distinguishing between core and non-core extensions? The only d",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490:1751,install,install,1751,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490,1,['install'],['install']
Deployability," be breaking... and when a path needs to be found through the pain (e.g. the ability to import images from v0.1.2 projects to v0.2.0). When it's in the public API, we have no idea how it is used or the implications of our changes. Because the scripting approach I proposed only uses `ImageDisplay` internally, so long as any improved approach is capable of supporting a method that does the same thing then we're free to change the method in `QPEx` without worrying about breaking things for anyone else. We can even move it up into `QP` so that it works without knowing anything about the viewer at all. I think that as a compromise this is more than fair. It means you get the outcome you want, and we did not have to compromise to do something that I strongly believe will end up wasting a lot of time in the future (be that mine or someone else's). QuPath remains a 0.x.x release and so the API shouldn't be interpreted as stable. I don't encourage writing extensions for that reason. But I do recognise that extensions are important, and so if someone wants to do it (aware of the risks) then it is supported. I hope that more clearly explains my logic. Since it feels like we've discussed this subject many times, I thought I should be thorough in this answer. Now I've no time to shorten it.... I hope it is useful. v0.2.0 has been a rather... intense experience. Pretty much the entire software has been rewritten, while still trying to keep it basically functional and respond to the ever-increasing questions and requests from users. Sometimes it gets exhausting. QuPath is by no means finished, but I do think it is substantially better and more coherent than it previously was. The goal of v0.2.0 was to get decent foundations as quickly as possible - but the task turned out to be huge. The importance of many of the new features will only become clear in future releases. v0.3.0 won't have so many milestones, and I hope will mark the start of a more sustainable development approach...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-632668731:6611,release,releases,6611,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-632668731,1,['release'],['releases']
Deployability," is based on my computer - but I do have a project file hosted online I can make available to run the test. Errors include: Null pointer exception popup in the lower right,. INFO: Starting script at Sat Jun 05 20:54:28 CDT 2021; WARN: Resolving hierarchy that contains 3 annotations and 1236 detections - this may be slow!; ERROR: QuPath exception; WARN: Resolving hierarchy that contains 3 annotations and 1236 detections - this may be slow!; INFO: Script run time: 0.25 seconds; The log file is not hugely informative on that one. Alternatively, I sometimes see a TMA core error. ```; ERROR: QuPath exception: Cannot invoke ""qupath.lib.objects.PathObject.isTMACore()"" because ""child"" is null; at qupath.lib.gui.panes.PathObjectHierarchyView$PathObjectTreeItem.getChildren(PathObjectHierarchyView.java:516); at qupath.lib.gui.panes.PathObjectHierarchyView$PathObjectTreeItem.isLeaf(PathObjectHierarchyView.java:544); at javafx.controls/javafx.scene.control.skin.TreeCellSkin.updateDisclosureNode(Unknown Source); at javafx.controls/javafx.scene.control.skin.TreeCellSkin.updateChildren(Unknown Source); at javafx.controls/javafx.scene.control.skin.LabeledSkinBase.lambda$new$5(Unknown Source); at javafx.controls/com.sun.javafx.scene.control.LambdaMultiplePropertyChangeListenerHandler.lambda$new$1(Unknown Source); at javafx.base/javafx.beans.value.WeakChangeListener.changed(Unknown Source); at javafx.base/com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(Unknown Source); at javafx.base/com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.markInvalid(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.set(Unknown Source); at javafx.graphics/javafx.css.StyleableObjectProperty.set(Unknown Source); at javafx.base/javafx.beans.property.ObjectProperty.setValue(Unknown Sou",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/744:2306,update,updateDisclosureNode,2306,https://qupath.github.io,https://github.com/qupath/qupath/issues/744,1,['update'],['updateDisclosureNode']
Deployability," match the declared main qupath.QuPath. > :jfxNative=-> 98% EXECUTING [18s]a main class groovy.ui.GroovyMain that does not match the declared main qupath.QuPath. The jar jars\openslide-3.4.1_2.jar has a main class org.openslide.gui.Demo that does not match the declared main qupath. BUILD SUCCESSFUL in 27sCUTING [18s]. 41 actionable tasks: 3 executed, 38 up-to-date181\jre\bin\java, -version]. C:\Users\marsh\Documents\GitHub\qupath>. . > :jfxNative=-> 98% EXECUTING [18s]al\Temp\iconswap1913588824785848432.exe, C:\Users\marsh\AppData\Local\Temp\fxbundler5. 936450042917729024\windows\QuPath.ico, C:\Users\marsh\Documents\GitHub\qupath\build\jfx\native\QuPath\QuPath.exe]. > :jfxNative=-> 98% EXECUTING [18s]ata\Local\Temp\fxbundler5936450042917729024\windows\QuPath.ico. Executable File Name: C:\Users\marsh\Documents\GitHub\qupath\build\jfx\native\QuPath\QuPath.exe. > :jfxNative=-> 98% EXECUTING [18s]. > :jfxNative. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Donnerstag, 9. August 2018 00:57; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . Strange... it suggests the cause is the one that I expected (not being able to load native libraries), but I'm not sure why it's happening here. You should be able to just delete the directory containing everything downloaded from GitHub; if you want to check where it is, inside GitHub Desktop you can choose Repository → Show in Explorer. Then you can start again with https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#building-qupath. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-411636630> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t735brx4t4Ayw9u_bSbXvNoYf3AKks5uO8EcgaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t1sYPUju1CKEzlZQaC88wVg1AcDuks5uO8EcgaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-414648451:3834,update,updates,3834,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414648451,1,['update'],['updates']
Deployability, run an exception when running groovy scripts in linux.; ----------------------------------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/depl,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1037,deploy,deploy,1037,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,1,['deploy'],['deploy']
Deployability," run the test. Errors include: Null pointer exception popup in the lower right,. INFO: Starting script at Sat Jun 05 20:54:28 CDT 2021; WARN: Resolving hierarchy that contains 3 annotations and 1236 detections - this may be slow!; ERROR: QuPath exception; WARN: Resolving hierarchy that contains 3 annotations and 1236 detections - this may be slow!; INFO: Script run time: 0.25 seconds; The log file is not hugely informative on that one. Alternatively, I sometimes see a TMA core error. ```; ERROR: QuPath exception: Cannot invoke ""qupath.lib.objects.PathObject.isTMACore()"" because ""child"" is null; at qupath.lib.gui.panes.PathObjectHierarchyView$PathObjectTreeItem.getChildren(PathObjectHierarchyView.java:516); at qupath.lib.gui.panes.PathObjectHierarchyView$PathObjectTreeItem.isLeaf(PathObjectHierarchyView.java:544); at javafx.controls/javafx.scene.control.skin.TreeCellSkin.updateDisclosureNode(Unknown Source); at javafx.controls/javafx.scene.control.skin.TreeCellSkin.updateChildren(Unknown Source); at javafx.controls/javafx.scene.control.skin.LabeledSkinBase.lambda$new$5(Unknown Source); at javafx.controls/com.sun.javafx.scene.control.LambdaMultiplePropertyChangeListenerHandler.lambda$new$1(Unknown Source); at javafx.base/javafx.beans.value.WeakChangeListener.changed(Unknown Source); at javafx.base/com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(Unknown Source); at javafx.base/com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.markInvalid(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.set(Unknown Source); at javafx.graphics/javafx.css.StyleableObjectProperty.set(Unknown Source); at javafx.base/javafx.beans.property.ObjectProperty.setValue(Unknown Source); at javafx.controls/javafx.scene.control.Labeled.setGraphic(Unknown Source); at qupath.l",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/744:2402,update,updateChildren,2402,https://qupath.github.io,https://github.com/qupath/qupath/issues/744,1,['update'],['updateChildren']
Deployability," server & cells; def server = getCurrentServer(); def cells = getCellObjects(). // Reset our classifications; cells.each { cell -> cell.resetPathClass() }. // Loop through channels; for (def channel in server.getMetadata().getChannels()) {; // Extract the channel name; def channelName = channel.name; ; // Skip some channels; if ('DAPI' in channelName || 'Autofluorescence' in channelName); continue; ; // Create a classification name from the channel; // Here, I take the first bit up until any whitespace; def classificationName = channelName.split()[0]. // Define the measurement we want; def measurementName = ""Cell: $channelName mean""; ; // Calculate some threshold from the measurement; // Here, just the mean; double threshold = cells.measurements[measurementName].average(); ; // Append a classification to all the cells above the threshold; cells.each { cell ->; if (cell.measurements[measurementName] > threshold); cell.classifications += [classificationName]; }; }. // Figure update (could do this automatically...); fireHierarchyUpdate(); ```. Closer inspection reveals a few Groovy tricks at work:. * `List.each { }` as a shorter alternative to for loops; * Avoid explicitly calling getters (e.g. `channel.name` rather than `channel.getName()`, `cell.measurements` rather than `cell.getMeasurements()` or - previously in QuPath - `cell.getMeasurementList()`; * Getting from a map using `map[key]` syntax (rather than `map.get(key)`; * Calling a method on a list to get it applied to all elements... so `cells.measurements[measurementName].average()` first extracts all the measurements, then averages them; * Sneakily applying a `setClassifications()` again by accessing it like a property - and using collection concatenation with `=+` to join the old classifications to the new ones; * this works in the opposite direction, with `-=` to remove one or more classifications. The changes have been made without introducing any changes to QuPath's data files, since `PathClass` and `Measur",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1094#issuecomment-1289456235:1718,update,update,1718,https://qupath.github.io,https://github.com/qupath/qupath/pull/1094#issuecomment-1289456235,1,['update'],['update']
Deployability," that 'Repository' could have; - [x] There should be some separation between the owner text field and repository label; - [x] After clicking 'Add extension' once, the other options appear - but then clicking it again has no effect. So it's not clear what exactly is the purpose of the button, or if it has the right text on it.; - [x] It's confusing that there's a list, but nothing can be selected. If I click on the list, the top item can take the focus, but nothing else.; - [x] I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start; I think centred vertical alignment for the version and buttons would look bette; - [x] The description text would ideally be lighter in color (e.g. using opacity); - [x] The purpose of the 'remove' and 'update' buttons is unclear - especially for built-in extension that can't be changed. ; - [x] Does update 'Check for updates' or actually update?; - [x] I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. > I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start;. I'd be more inclined to even do ""version: 0.1.0"" rather than having column headers that would be largely redundant. > Does update 'Check for updates' or actually update?. It checks for updates; if one is available, it asks if you'd like to download it. If not, it pops up a notification saying it's up-to-date. > I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. Yes, similarly it asks if you want to download before going ahead. ![Screenshot from 2023-10-02 22-37-08](https://github.com/qupath/qupath/assets/10779688/b0404e3f-320d-4fbf-b990-3cad161dee24). Note that here the top list is focusable, the bottom isn't. The titles are obviously WIP (see below). Same with the extensions dir button not",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490:1018,update,update,1018,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490,4,"['install', 'update']","['install', 'update', 'updates']"
Deployability," the tools to do all kinds of things, but some are easier than others. Distinct commands (e.g. cell detection) can be combined with others (e.g. classifying cells as positive or negative, interactive machine learning) for particular applications (e.g. scoring Ki-67). But these or other commands could be combined in different ways for different applications. QuPath doesn't have a 'Ki-67 scoring' algorithm in particular, but it has the pieces that can be used to create and customize one. _However_... there are a lot of things that I _wouldn't_ try with QuPath's built in commands only, and mitosis detection in H&E is one of them. I'd say the detection task is too difficult and specialized for QuPath's generic cell detection currently. Solving that is a substantial research project in itself (and the subject of some [grand challenges](https://mitos-atypia-14.grand-challenge.org)). That's one of the reasons why QuPath supports scripts and extensions: it's possible to create highly specialist algorithms elsewhere, and either integrate them into QuPath or at least visualize the results through QuPath. Therefore some of the ways in which QuPath can help are:; * for manual counting; * for exporting manual counts as 'ground truth' into a format that can be used to help create a new algorithm, using whatever image processing / machine learning / deep learning libraries and tools you like; * for visualizing the results of an algorithm directly in the context of a whole slide image (using QuPath's objects, classifications & visualization tools to help); * as the platform for running and sharing any algorithm you might create (if it's implemented as a QuPath script or extension). The first of these is pretty laborious, while the last three will take some effort and knowledge on the image analysis side. That's the side I come from... I created QuPath because I needed the tools myself to write new algorithms, and then to share them with pathologists and other researchers. For me, i",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/205#issuecomment-414438828:1047,integrat,integrate,1047,https://qupath.github.io,https://github.com/qupath/qupath/issues/205#issuecomment-414438828,1,['integrat'],['integrate']
Deployability, this will fail! Probably at the 'test' stage.; Requesting TensorFlow (CPU) subproject; Copying license directories:; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-bioformats\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-openslide\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-pen\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-script-editor\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-svg\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-gui-fx\src\main\resources\licenses. FAILURE: Build failed with an exception. * Where:; Build file 'C:\Users\IT-bruker\Documents\GitHub\qupath\build.gradle' line: 569. * What went wrong:; A problem occurred evaluating root project 'qupath'.; > Could not resolve all files for configuration ':runtimeClasspath'.; > Could not find tensorflow-1.15.2-1.5.3-windows-x86.jar (org.bytedeco:tensorflow:1.15.2-1.5.3).; Searched in the following locations:; https://repo.maven.apache.org/maven2/org/bytedeco/tensorflow/1.15.2-1.5.3/tensorflow-1.15.2-1.5.3-windows-x86.jar; > Could not find mkl-dnn-0.21.4-1.5.3-windows-x86.jar (org.bytedeco:mkl-dnn:0.21.4-1.5.3).; Searched in the following locations:; https://repo.maven.apache.org/maven2/org/bytedeco/mkl-dnn/0.21.4-1.5.3/mkl-dnn-0.21.4-1.5.3-windows-x86.jar. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. BUILD FAILED in 7s. C:\Users\IT-bruker\Documents\GitHub\qupath>,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630948935:2205,configurat,configuration,2205,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630948935,1,['configurat'],['configuration']
Deployability," to https://github.com/openmicroscopy/bioformats/issues/2811. I don't see any way to resolve it within QuPath, and it requires a fix on the Bio-Formats side. If you just need to check what the label shows, you could try the script I posted at https://github.com/qupath/qupath/issues/141#issuecomment-358951720 - but it really is a terrible hack, which at best shows an image that looks a bit more plausible. As @rleigh-codelibre points out at https://github.com/openmicroscopy/bioformats/issues/2811#issuecomment-359474813 it doesn't restore the _right_ pixels, merely ones that are less obviously wrong. At best, it might be enough to see more or less what the image should contain without needing to open a new application... but it isn't a proper solution. When I look at the images you posted above with `tiffinfo`, it's clear that the _Photometric Interpretation_ stored in the file really is _YCbCr_ and my hack-y script overrides this. ---. For setting the color, you could try this:; ```groovy; // Set the LUT color for the first channel & repaint; def viewer = getCurrentViewer(); def channels = viewer.getImageDisplay().getAvailableChannels(). channels[0].setLUTColor(50, 200, 250). viewer.repaintEntireImage(); ```; where the three numbers are red, green & blue values (0-255). On a related note, `tiffinfo` also shows the file contains this for the main image:; ```; <channelSettings>; <channel index=""0"" name=""DAPI"" rgb=""#0000ff"" counterstain=""true"" spacingZ=""1000"" />; <channel index=""1"" name=""DsRED"" rgb=""#ffffff"" spacingZ=""1000"" />; <channel index=""2"" name=""Spectrum Green"" rgb=""#00ff00"" spacingZ=""1000"" />; <channel index=""3"" name=""Spectrum Far Red"" rgb=""#ff0000"" spacingZ=""1000"" />; </channelSettings>; ```; I can't see anywhere that Bio-Formats has parsed the channel names and colors, and this isn't currently accessible to QuPath. If the `LeicaSCNReader` were to be updated, and it was possible to get that information included, it could be handy in improving the default colors.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409882684:1931,update,updated,1931,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409882684,1,['update'],['updated']
Deployability," to status (e.g. if an image or project is opened); * Help text available for most commands via the 'Command list'; * Lots more javadocs and a (somewhat) more logical arrangement; * All-new command line interface; * Customize QuPath's launch, call scripts; * Convert images to OME-TIFF; * Scripting improvements; * Updated to Groovy 3 - scripts now support more recent Java syntax (e.g. lambdas, try-with-resources); * Pasting files results in them being converted to absolute paths; * New 'Paste & escape' command to automatically escape characters for Java Strings; * Set logging level with LogManager class; * New 'Measure -> Export measurements' command to export measurements for multiple images within a project; * Scriptable 'Select objects by classification' command; * Optionally show/hide annotation names in the viewer (shortcut key 'N'); * Updated methods to save/load points within the counting tool; * Use TSV files to improve portability; * Support including classifications and other annotation properties; * Optionally sort project entries by URI (e.g. to group images read from the same file); * Improved support for profiling with VisualVM; * Improved support for large, non-pyramidal images; * 'Simplify shape' command can now be applied to all selected annotations; * Bug fixes, including:; * Gap between tiles when calculating superpixels for large regions (https://github.com/qupath/qupath/issues/345); * Cannot create objects when loading simple thresholding classifier (https://github.com/qupath/qupath/issues/403); * Consistency in Measurement Map display (https://github.com/qupath/qupath/issues/295); * Poor performance when working with many annotations (regression in m9); * Freeze when launching ImageJ from Mac under some circumstances; * Use default channel names if Bio-Formats returns an empty String; * Log meaningful warning if pixel classifier uses duplicated channel names; * Update dependencies: JavaFX, OpenCV, Bio-Formats, JFreeSVG, ImageJ, Guava, RichTextFX",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/449:2189,Update,Update,2189,https://qupath.github.io,https://github.com/qupath/qupath/pull/449,1,['Update'],['Update']
Deployability,"## Background; A goal of this PR is to further reduce the requirement to refer to specific Java subclasses of `PathObject`, e.g. `PathDetectionObject`, `PathAnnotationObject`. This process started several releases back, e.g.; * `pathObject.isAnnotation()` should be used in preference of `pathObject instanceof PathAnnotationObject`; * `PathObjects.createAnnotationObject(ROI)` should be used instead of `new PathAnnotationObject(ROI)`. Eventually the specific subclasses may be removed entirely, in favor of using a single `PathObject` class. Along the way, the API should become easier to understand and to use. ## What has changed. One of the main times when the specific Java class remains relevant is when querying objects from `PathObjectHierarchy` using one of the following methods:; ```java; public Collection<PathObject> getObjectsForROI(Class<? extends PathObject> cls, ROI roi). public Collection<PathObject> getObjectsForRegion(Class<? extends PathObject> cls, ImageRegion region, Collection<PathObject> pathObjects). public boolean hasObjectsForRegion(Class<? extends PathObject> cls, ImageRegion region). public synchronized Collection<PathObject> getPointObjects(Class<? extends PathObject> cls); ```. This PR deprecates these methods, and provides alternatives that do not require Java classes to be specified. ### Accessing objects for a `ROI`; This provides a way to access objects within (in some sense!) a specified ROI:; ```java; // Old method, discouraged (but not yet deprecated); public Collection<PathObject> getObjectsForROI(Class<? extends PathObject> cls, ROI roi). // New methods; public Collection<PathObject> getAllObjectsForROI(ROI roi); public Collection<PathObject> getAnnotationsForROI(ROI roi); public Collection<PathObject> getTilesForROI(ROI roi); public Collection<PathObject> getCellsForROI(ROI roi); public Collection<PathObject> getAllDetectionsForROI(ROI roi); ```. **There is an important (and possibly-unexpected) subtlety here!**. The new methods follow ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1563:205,release,releases,205,https://qupath.github.io,https://github.com/qupath/qupath/pull/1563,1,['release'],['releases']
Deployability,"## Before we begin... Before submitting your bug report, please check the following:. * [x] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [x] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [x] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; When using Jet (legacy), the ColorMap returns the first RGB map value for all values if max < min. Reported here first: https://forum.image.sc/t/qupath-lut-change-in-measurmernts-maps/92030/4. **To Reproduce**; Steps to reproduce the behavior:; 1. Create detections; 2. Open measurement maps; 3. Select jet color scheme; 4. Move max above min. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**. Regular:; ![Screenshot from 2024-02-19 12-12-14](https://github.com/qupath/qupath/assets/10779688/eadbae26-a73b-4f47-997c-51ff574fbdcc). Inverted:; ![Screenshot from 2024-02-19 12-12-22](https://github.com/qupath/qupath/assets/10779688/8571c9fa-e4ce-4971-b5fc-0bcefe2933c0). **Desktop:**. - OS: Linux (any though); - QuPath Version: [e.g. 0.5.0]. **Additional context**; PR incoming, this is just to document the behaviour",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1470:263,release,release,263,https://qupath.github.io,https://github.com/qupath/qupath/issues/1470,2,['release'],['release']
Deployability,"## Bug report. ### Describe the bug; Because of some [JavaFX WebView awkwardness](https://github.com/qupath/qupath/issues/1497), we stop merging all the QuPath javadocs into a single jar, in favor of trying to bundle all the relevant jars with the app. Unfortunately, for v0.6.0-rc1 and v0.6.0-rc2 lots of jars are missing. ### To Reproduce; Steps to reproduce the behavior:; 1. Go to your QuPath installation; 2. Look inside `app/docs`; 3. Ask yourself ""Is that all there is?""; 4. Answer yourself ""Yes, but there really should be others"". ### Expected behavior; Javadoc jars for all the main QuPath classes are included. ### Desktop (please complete the following information):; - OS: All (presumably; confirmed on macOS and Windows); - QuPath Version: v0.6.0-rc1, v0.6.0-rc2",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1652:397,install,installation,397,https://qupath.github.io,https://github.com/qupath/qupath/issues/1652,1,['install'],['installation']
Deployability,"## Bug report. ### Describe the bug; Reported with videos at https://forum.image.sc/t/an-issue-with-the-polygon-annotation-tool/100797. ### To Reproduce. #### The easy way; Run this script and then try interacting with a viewer; ```groovy; getCurrentViewer().setSpaceDown(false); ```. #### The more realistic way; 1. Create a viewer grid containing at least two viewers with open images; 2. Click within one viewer, and hold down spacebar; 3. Click within another viewer, and only *then* release the spacebar; 4. Return to the first viewer, and try using drawing tools (e.g. polygon, rectangle). ### Expected behavior; Using the spacebar to temporarily activate the `Move` tool works across multiple viewers.; The spacebar status properly supports. ### Screenshots; See the linked forum post. ### Desktop (please complete the following information):; - OS: All; - QuPath Version: v0.5.1 (and earlier)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1610:488,release,release,488,https://qupath.github.io,https://github.com/qupath/qupath/issues/1610,1,['release'],['release']
Deployability,"## Bug report. ### Describe the bug; Somewhere between a bug report and enhancement request... The ability to view classifications and names in the grid view is very handy https://github.com/qupath/qupath/pull/1588. The trouble is that, for TMA cores, sorting by name gives `A-1`, `A-10`, `A-11`, `A-2`... which is kinda right, but not what the user likely wants. ### To Reproduce; Steps to reproduce the behavior:; 1. Create a TMA grid with 10 or more columns; 2. Run _Measure → Grid views... → Show TMA core grid view_. ### Expected behavior; Cores are ordered using numbers in a 'smarter' way. ### Desktop (please complete the following information):; - OS: All; - QuPath Version: 0.6.0-SNAPSHOT. ### Additional context; `GeneralTools` has a method that is sort of relevant [here](https://github.com/qupath/qupath/blob/e15df73ff60ef167eac82237586caf1f2e81ceab/qupath-core/src/main/java/qupath/lib/common/GeneralTools.java#L910). It feels like something an existing dependency library might have, but I haven't found it yet. > *Extra thing: when setting the classification of a TMA core *after* the grid is shown, the color doesn't update in the thumbnail image.*",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1657:1134,update,update,1134,https://qupath.github.io,https://github.com/qupath/qupath/issues/1657,1,['update'],['update']
Deployability,"## Bug report. **Describe the bug**; .qpdata files corresponding to OMERO images cannot be opened directly, but rather *only* via a project. **To Reproduce**; Steps to reproduce the behavior:; 1. Open an image hosted via OMERO (e.g. through IDR) *without* using a QuPath project; 2. Draw an annotation and save a .qpdata file; 3. Restart QuPath (or open another image) and then try opening the .qpdata file... this gives a NPE. **Expected behavior**; Images can be reloaded from .qpdata files, without necessarily occurring inside projects. **Desktop (please complete the following information):**; - QuPath v0.2.2 and earlier. **Additional context**; This happens because; 1. .qpdata files store only the basic file path / URI (since that's what they did in v0.1.2), and *not* the full information needed to build the server; 2. the path alone isn't parsed [here](https://github.com/qupath/qupath/blob/master/qupath-extension-omero/src/main/java/qupath/lib/images/servers/omero/OmeroWebImageServerBuilder.java#L264). I think the 'best' solution is to store the JSON representation of the `ServerBuilder` inside the `.qpdata` file. Although this is redundant when inside a project, it is needed elsewhere. However, backwards compatibility should be maintained so that older .qpdata files can be read. For the same reasons, other more complex servers cannot be reconstructed from `.qpdata` files alone, e.g. rotated servers. This makes it *essential* to use a project in many cases. An alternative (short-term) approach *to resolve the OMERO problem only* would be to update the `getURIs(URI, String...)` method to parse the path. That would work around issues in v0.2 for OMERO, but doesn't resolve the bigger problem.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/598:1567,update,update,1567,https://qupath.github.io,https://github.com/qupath/qupath/issues/598,1,['update'],['update']
Deployability,## Bug report. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps to reproduce the behavior:; 1. Download release 0.2.3 on Ubuntu 20.04; 2. Extract archive; 3. Run qupath from bin directory; 4. Open project and import mirax slide. **Expected behavior**; Slide without weird artifacts. **Screenshots**; ![Screenshot from 2020-10-25 15-29-30](https://user-images.githubusercontent.com/6561496/97109997-e96d5100-16d6-11eb-9c68-d20863276593.png). **Desktop (please complete the following information):**; - OS: Ubuntu 20.04; - QuPath Version 0.2.3 (also doesn't work on 0.2.1),MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/628:153,release,release,153,https://qupath.github.io,https://github.com/qupath/qupath/issues/628,1,['release'],['release']
Deployability,## Bug report. **Describe the bug**; Adding/removing points is slow whenever many objects are present on an image. There can be a brief-but-disturbing delay of a second or so when making adjustments. This relates to the work involved in processing hierarchy update events when interactively annotating with the counting tool. **To Reproduce**; Steps to reproduce the behavior:; 1. Open an image & create thousands of detections; 2. Create a Point annotation and add/remove points. **Expected behavior**; Adding points is almost instantaneous. **Desktop (please complete the following information):**; - OS: All; - QuPath Version v0.2.0-m9 (and probably some earlier ones),MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/412:258,update,update,258,https://qupath.github.io,https://github.com/qupath/qupath/issues/412,1,['update'],['update']
Deployability,"## Bug report. **Describe the bug**; After installing QuPath x64 on an M1 mac, everything works as intended. It is in the Applications folder and can be found using `CMD+Space`; However, it does not show up on the Launchpad. We tried ; https://www.quora.com/Why-are-the-apps-I-download-on-my-Mac-not-showing-up-on-launchpad-They-re-accessible-via-finder-only-in-the-applications-folder; but the command line that was suggested did not change the behaviour. **To Reproduce**; Steps to reproduce the behavior:; 1. Have QuPath 0.4.3 installed; 2. Notice how it can be found in the Launchpad; 3. Download and install QuPath 0.5.0-x64 for MacOS; 4. Notice QuPath 0.5.0-x64 in the Applications folder; 5. Try to find QuPath 0.5.0 in the Launchpa. **Expected behavior**; With previous versions of QuPath, it would automatically show up on the Launchpad. **Desktop**; - OS: MacOS Sonoma 14.2.1; - QuPath Version: 0.5.0. While definitely not a dealbreaker, it was an interesting behaviour to notice. It might be linked to there being two QuPath versions existing, however the user said that this had not been an issue in the past.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1448:43,install,installing,43,https://qupath.github.io,https://github.com/qupath/qupath/issues/1448,3,['install'],"['install', 'installed', 'installing']"
Deployability,"## Bug report. **Describe the bug**; At the hackathon (I think) it came up that the channel viewer is much too busy for RGB images... making it less useful that it might otherwise be. The problem is that it shows *all* available channel transforms, rather than just the ones that are likely to be relevant or interesting. > Sidenote: in generating the screenshot here, it looks like the viewer panes aren't all the same size... as they ought to be. **To Reproduce**; Steps to reproduce the behavior:; 1. Open an RGB image; 2. Choose *View &rarr; Mini viewers... &rarr; Show channel viewer*. **Expected behavior**; Show fewer channels by default. If stains are available, this could be the color deconvolve channels; otherwise, it could be the split RGB information. Furthermore, we should either:; * Make it possible to show all channels using a preference; * Make it possible to turn individual channels on or off. Realistically, the first option is likely to be more achievable before the next release. **Screenshots**. ![channel viewer rgb](https://user-images.githubusercontent.com/4690904/171357206-38bfa499-012a-46c4-adb1-e566d31004e5.jpg). **Desktop (please complete the following information):**; - OS: All; - QuPath Version: All up to v0.3.2",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/980:996,release,release,996,https://qupath.github.io,https://github.com/qupath/qupath/issues/980,1,['release'],['release']
Deployability,"## Bug report. **Describe the bug**; Attempting to add images via a past list fails sometimes when it should not... specifically, when it can't construct a URI. This might be because of a space or other unescaped character. See https://forum.image.sc/t/qupath-update-urls-issue/38613/6. Second issue: if no valid path is provided, an error dialog is shown but without a proper parent window set - which causes some extra confusion. **Expected behavior**; * Absolute file paths can be used for import (with or without spaces); * Error dialogs don't cause trouble. **Additional context**; This may also be relevant: https://forum.image.sc/t/qupath-update-urls-issue/38613",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/521:260,update,update-urls-issue,260,https://qupath.github.io,https://github.com/qupath/qupath/issues/521,2,['update'],['update-urls-issue']
Deployability,## Bug report. **Describe the bug**; Changing the image while the slide label is open does not update the slide label to represent the open image. . **To Reproduce**; Steps to reproduce the behavior:; 1. Open an image and the slide label image; 2. Change to another image; 3. Note the original slide image remains and doesn't update. **Expected behavior**; Slide label image updates to the corresponding image open. **Screenshots**. **Desktop (please complete the following information):**; - OS: Windows; - QuPath Version: 0.4.3. **Additional context**,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1246:95,update,update,95,https://qupath.github.io,https://github.com/qupath/qupath/issues/1246,3,['update'],"['update', 'updates']"
Deployability,## Bug report. **Describe the bug**; Concurrent modification exception has been spotted with the stack trace:. ```; ERROR: QuPath exception; java.util.ConcurrentModificationException: null; at java.base/java.util.LinkedHashMap$LinkedHashIterator.nextNode(Unknown Source); at java.base/java.util.LinkedHashMap$LinkedKeyIterator.next(Unknown Source); at qupath.lib.objects.PathObject.nDescendants(PathObject.java:528); at qupath.lib.objects.PathObjectTools.countDescendants(PathObjectTools.java:204); at qupath.lib.objects.PathObject.objectCountPostfix(PathObject.java:238); at qupath.lib.objects.PathObject.toString(PathObject.java:276); at qupath.lib.gui.tools.PathObjectLabels$PathObjectMiniPane.setPathObject(PathObjectLabels.java:247); at qupath.lib.gui.tools.PathObjectLabels$PathObjectListCell.updateItem(PathObjectLabels.java:151); at qupath.lib.gui.tools.PathObjectLabels$PathObjectListCell.updateItem(PathObjectLabels.java:138); at javafx.scene.control.ListCell.updateItem(ListCell.java:485); at javafx.scene.control.ListCell.lambda$new$2(ListCell.java:168); at javafx.collections.WeakListChangeListener.onChanged(WeakListChangeListener.java:88); at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329); at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239); at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211); at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:98); at qupath.lib.gui.panes.AnnotationPane.hierarchyChanged(AnnotationPane.java:436); at qupath.lib.gui.panes.AnnotationPane.lambda$hierarchyChanged$9(AnnotationPane.java:404); at com.sun.javafx.application.PlatformImpl.lambda,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1182:799,update,updateItem,799,https://qupath.github.io,https://github.com/qupath/qupath/issues/1182,3,['update'],['updateItem']
Deployability,"## Bug report. **Describe the bug**; GPU memory isn't released when using a `DnnModel` repeatedly. This can be seen when using StarDist. **To Reproduce**; See https://github.com/qupath/qupath-extension-stardist/issues/11; Copied here because the fix may need to be implemented within the core, rather than the StarDist extension. **Expected behavior**; GPU memory released after processing is complete. **Desktop (please complete the following information):**; - OS: Likely any with CUDA (Windows, Linux); - QuPath v0.3.0. **Additional context**; I guess a blob may need to be reset... or something. Although that may be tricky to achieve if allowing multithreading and trying not to unduly harm performance (or perhaps it won't be).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/841:54,release,released,54,https://qupath.github.io,https://github.com/qupath/qupath/issues/841,2,['release'],['released']
Deployability,## Bug report. **Describe the bug**; I installed the last version of QuPath (0.2.0-m3) and tried creating a project and feed images to the project. Unfortunately the images do not seem to add to the project and the project remains empty. This was not happening before so I assume it's just a bug... I work with .scn fluorescent images in this case. **Desktop (please complete the following information):**; - OS: macOS and windows ; - QuPath Version 0.2.0-m3,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/348:39,install,installed,39,https://qupath.github.io,https://github.com/qupath/qupath/issues/348,1,['install'],['installed']
Deployability,"## Bug report. **Describe the bug**; I tried to run EP.Zindy's script for importing NDPA annotations for Hamamatsu's NDPI image files; (https://forum.image.sc/t/importing-ndpa-annotation-files-into-qupath-code-attached/33721); and the interpreter cannot find the XmlSlurper Groovy class.; `ERROR: It looks like you have tried to import a class 'XmlSlurper' that doesn't exist!`. However, modifying the build.gradle file to include groovy-all, like this:; `	groovy ""org.codehaus.groovy:groovy-all:${groovyVersion}""`; fixed this, at least for the -M10-SNAPSHOT code from last friday. :-). **To Reproduce**; Steps to reproduce the behavior:; 1. Install -M10; 2. open NDPI file; 3. try running something like this:; `def list = new XmlSlurper().parseText(text)`. **Expected behavior**; Script running smoothly. **Desktop (please complete the following information):**; - OS: Windows 10, OpenJDK 14.0.1; - QuPath Version 0.2.0-m10. Thank you!",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/455:642,Install,Install,642,https://qupath.github.io,https://github.com/qupath/qupath/issues/455,1,['Install'],['Install']
Deployability,"## Bug report. **Describe the bug**; If a `TransformedServerBuilder` is used to apply an affine transform to an image, the pixel size is not automatically updated. **To Reproduce**; See https://gist.github.com/petebankhead/6d3a220074a1cb99caf6dc92ab71bfed. **Expected behavior**; The pixel size incorporates the affine transform information if possible. If the pixel size has not been set, this is not changed. **Additional context**; This might potentially cause confusion when concatenating images along the channel dimension - but it remains the case that the metadata from the 'main' image will be used. The issue is most evident if using a script to write a single transformed image.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/528:155,update,updated,155,https://qupath.github.io,https://github.com/qupath/qupath/issues/528,1,['update'],['updated']
Deployability,"## Bug report. **Describe the bug**; If the stable release folder *QuPath-0.2.3/* is placed behind a *bin* folder, QuPath will not run. **To Reproduce**; Steps to reproduce the behavior:; 1. `wget https://github.com/qupath/qupath/releases/download/v0.2.3/QuPath-0.2.3-Linux.tar.xz`; 2. `tar -xvf QuPath-0.2.3-Linux.tar.xz`; 3. `cd QuPath-0.2.3/bin/`; 4. `./QuPath-0.2.3`. **Behavior**. If QuPath runs, is dependent under which path it is installed. + `/home/elmar/QuPath-0.2.3/bin` this works; + `/home/elmar/abc/QuPath-0.2.3/bin` this works; + `/home/elmar/bin/QuPath-0.2.3/bin` this will **not** work!. This is the error I receive: ; ```; elmar@computer ~/bin/QuPath-0.2.3/bin $ ./QuPath-0.2.3; Error: could not find libjava.so; Error: Could not find Java SE Runtime Environment.; ``` . **Desktop (please complete the following information):**; - OS: Ubuntu; - QuPath Version 0.2.3 stable release",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/614:51,release,release,51,https://qupath.github.io,https://github.com/qupath/qupath/issues/614,4,"['install', 'release']","['installed', 'release', 'releases']"
Deployability,"## Bug report. **Describe the bug**; QuPath v0.3.2 hangs when attempting to open certain images with Bio-Formats, outside of a project. The problem occurs when:; * Bio-Formats is the reader; * There are multiple series (non-thumbnail) in the file; * A project is *not* used to open the image. See https://forum.image.sc/t/problem-about-opening-ndpis-files-in-qupath-v0-3-1/62184/4. > **Update: Sometimes QuPath doesn't hang, but the image only opens at a low resolution**; > * #1023. **To Reproduce**; Steps to reproduce the behavior:; 1. Launch QuPath but do *not* open a project; 2. Try to open an image containing multiple (non-thumbnail) series using Bio-Formats; * e.g. see https://downloads.openmicroscopy.org/images/Hamamatsu-NDPI/manuel/; 3. Select any series from the *Open image* dialog; 4. Wait... and wait.... and wait... then force quit. **Expected behavior**; Image opens properly, both inside and outside a project. **Desktop (please complete the following information):**; - OS: All; - QuPath v0.3.1 and v0.3.2. **Additional context**; Problem was introduced in https://github.com/qupath/qupath/pull/867 so should not affect any older versions. **Solution / Workaround**; [Create a a project](https://qupath.readthedocs.io/en/0.3/docs/tutorials/projects.html) first, then open the image. This avoids showing the 'Open image' dialog, and so should work.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/894:386,Update,Update,386,https://qupath.github.io,https://github.com/qupath/qupath/issues/894,1,['Update'],['Update']
Deployability,"## Bug report. **Describe the bug**; Really this bug so specific it may be too much effort to fix in the meantime, but I thought I'd better document it and what I've discovered about it. When I open a project, QuPath fails to show the project entries in the sidebar (under specific circumstances - see below) until I somehow update the UI state: resize the window, click one of the toolbar buttons or (weirdly) move my mouse from within the viewer slowly over the red viewer border. **To Reproduce**; Steps to reproduce the behavior:; 1. Have enough extensions (or whatever) that enough buttons have been added to the toolbar to cause it to overflow (show the two little expansion arrows) when QuPath is first opened. In my case, I had added a button with ""Convert"" on it.; 2. Open QuPath; 3. **Don't** resize the window; 4. Open a project; 5. The project entries don't show up unless you perform one of the actions mentioned above. **Expected behavior**; Entreis should appear immediately. **Desktop (please complete the following information):**; - OS: macOS (Apple Silicon); - QuPath Version: 0.4.0. **Additional context**; * Git bisect shows that the bug was introduced by commit 56243921831ca8d2db2507ec3604735dd4b4a608, but only because it added a ""Show names"" button to the toolbar.; * v0.3.2 doesn't seem to have the issue, even if I add a ""Show names"" button. **However**, (and probably the cause of the problem) I can't compile 0.3.2 for ARM, so it's running on x86. I also can't compile the previously mentioned commit on x86, only ARM, so I can't test if it was simply this difference. Also, my x86 SDK is temurin 16 and my ARM SDK is temurin 17.; * If I go to qupath-gui-fx/src/main/java/qupath/lib/gui/panes/ProjectBrowser.java, the root TreeItem appears to be added but the rest of the items aren't, until I cause a state change.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1184:325,update,update,325,https://qupath.github.io,https://github.com/qupath/qupath/issues/1184,1,['update'],['update']
Deployability,"## Bug report. **Describe the bug**; Repeated calls to ""Create thresholder"" results in a larger dialog box each time, and progressively slower startup. **Expected behavior**; Dialog opens at the same size each time. **Additional context**; The slower startup likely comes from repeatedly adding listeners to the same UI components, and because the measurement updates are fired without the `isChanging` property. It may be possible to avoid reinitializing the Stage and not firing the measurement change event at all.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/517:360,update,updates,360,https://qupath.github.io,https://github.com/qupath/qupath/issues/517,1,['update'],['updates']
Deployability,"## Bug report. **Describe the bug**; See https://forum.image.sc/t/brightness-contrast-settings-issue/60054 and especially https://forum.image.sc/t/brightness-contrast-settings-issue/60054/5. **To Reproduce**; Steps to reproduce the behavior:; 1. Create a new project, ensuring that the image type is not set (but 'Auto-set' is used for the image type); 2. Add two multichannel images with the same channel names (e.g. LuCa 1x1 and 3x3); 3. Open one image, and change the color of a channel in the Brightness/Contrast dialog - ensuring that 'Keep settings' is selected; 4. Open the other image - and see that the channel color has been lost. **Expected behavior**; Channel colors are retained if 'Keep settings' is selected. **Desktop (please complete the following information):**; - QuPath v0.3.0. **Additional context**; It appears the colors are set correctly... then overridden when the image type is updated.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/843:905,update,updated,905,https://qupath.github.io,https://github.com/qupath/qupath/issues/843,1,['update'],['updated']
Deployability,"## Bug report. **Describe the bug**; See https://forum.image.sc/t/brush-tool-becomes-slow-after-increasing-ram-from-9-to-22gb/39979/12. **To Reproduce**; Start drawing a polygon with an enthusiastic swipe, but do not (intentionally) press and drag the mouse to activate freehand mode. You may (sometimes) find that that clicking a single point results in the polygon being ended early, rather than adding a single point, which matches what would happen if the mouse is released in freehand mode. **Expected behavior**; If freehand is not initiated by clicking and dragging the mouse from the beginning of drawing the polygon, releasing the mouse button should result only in a clicked point being added - not the completion of the annotation.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/553:469,release,released,469,https://qupath.github.io,https://github.com/qupath/qupath/issues/553,1,['release'],['released']
Deployability,## Bug report. **Describe the bug**; See https://forum.image.sc/t/calculate-more-shape-descriptors-using-qupath/38900/3; Very reproducible... when doing the specified action of clicking/double-clicking on a list cell. **Expected behavior**; No NPE. **Additional context**; Seems to be a known controlsfx bug. Need to find a workaround (or wait for a controlsfx update).,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/522:361,update,update,361,https://qupath.github.io,https://github.com/qupath/qupath/issues/522,1,['update'],['update']
Deployability,## Bug report. **Describe the bug**; See https://forum.image.sc/t/qupath-extensions-folder-does-not-allow-for-sub-folders-anymore/89752. **To Reproduce**; Steps to reproduce the behavior:; 1. Try to install an extension in a subdirectory of the extensions directory; 2. Find that it isn't installed. **Expected behavior**; It should be possible to add extensions within subdirectories (at least one or two layers deep). **Desktop (please complete the following information):**; - OS: All; - QuPath Version: v0.5.0. **Additional context**; Introduced unintentionally. May be fixable simply by increasing the `depth` value at https://github.com/qupath/qupath/blame/864ac71893a8749ff226c99e51642a5e10ea89ea/qupath-gui-fx/src/main/java/qupath/lib/gui/ExtensionClassLoader.java#L115,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1439:199,install,install,199,https://qupath.github.io,https://github.com/qupath/qupath/issues/1439,2,['install'],"['install', 'installed']"
Deployability,"## Bug report. **Describe the bug**; See https://forum.image.sc/t/stardist-error-message-topologyexception/67708/15. I haven't yet replicated it, but it's important to check it out before the next release. **Desktop (please complete the following information):**; - OS: All (presumably); - QuPath Version: Possibly none yet... but if `org.locationtech.jts.geom.GeometryOverlay.isOverlayNG = true` is added by default then it may appear. **Additional context**; This is the first report I've seen of new problems being introduced after adding `isOverlayNG=true` - so definitely needs investigated before making the change.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/996:197,release,release,197,https://qupath.github.io,https://github.com/qupath/qupath/issues/996,1,['release'],['release']
Deployability,"## Bug report. **Describe the bug**; See https://forum.image.sc/t/subcellular-spot-detection-problem/69403/12. **To Reproduce**; Steps to reproduce the behavior:; 1. Open any RGB image; 2. Set the image type to *Fluorescence*; 3. Try toggling channels with `1`, `2` or `3`; 4. Observe that channels don't toggle as expected; 6. Check the *Brightness/Contrast* dialog to see what's going on. **Expected behavior**; Pressing `1` should toggle red, `2` should toggle green and `3` should toggle blue. **Desktop (please complete the following information):**; - OS: All; - QuPath v0.3 (and probably before)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1006:305,toggle,toggle,305,https://qupath.github.io,https://github.com/qupath/qupath/issues/1006,4,['toggle'],['toggle']
Deployability,"## Bug report. **Describe the bug**; The Intel build of v0.5.0-rc2 fails on many (or all?) Apple Silicon Macs when using OpenCV's DNN, e.g. via the StarDist extension. This *may* be related to an OpenCV bug, since fixed: https://github.com/opencv/opencv/issues/23183; There's no final JavaCPP release containing the fix though. **To Reproduce**; Steps to reproduce the behavior:; 1. Download the intel (x64) build of v0.5.0-rc2 (or likely v0.5.0-rc1); 2. Run [the StarDist extension](https://github.com/qupath/qupath-extension-stardist), e.g. using CMU-1.svs and the H&E model. This is likely to either throw an exception, or shut down QuPath immediately. This problem does not occur when using the arm64 build. **Expected behavior**; The x64 build should work through Rosetta2 (just a bit slower). **Desktop (please complete the following information):**; - OS: macOS 14; - QuPath Version: v0.5.0-rc2 (and also rc1). **Additional context**; This matters to some users because Bio-Formats doesn't support Apple Silicon:; * https://github.com/ome/bioformats/issues/3756; * https://github.com/glencoesoftware/jxrlib/issues/30. Consequently, some users (particularly those with Axioscan .czi images) are forced to run the x64 builds of QuPath. This can *probably* be addressed by reverting to OpenCV 4.6.0, but that would be unfortunate since OpenCV's DNN's performance should be much improved - at least for Apple Silicon - in v4.7.0 (although that may be the source of the problem...). Timings (in minutes) for one largish region of CMU-2.svs on Apple Silicon are given below:. * v0.5.0-rc2 arm64 - 1:38; * v0.4.4 arm64 - 2:47; * v0.4.4 intel64 - 3:54. So it's a shame to penalize more users by sticking with an older OpenCV because of this bug, which should only affect a *relatively* small number of people for whom the following is true:; * Using Apple Silicon; * Using .czi files; * Using the StarDist extension. Before deciding, one thing to check is whether or not TensorFlow can work via Rosetta",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1406:293,release,release,293,https://qupath.github.io,https://github.com/qupath/qupath/issues/1406,1,['release'],['release']
Deployability,"## Bug report. **Describe the bug**; There have been reports of excessive memory use during pixel classification, most recently https://forum.image.sc/t/qupath-not-adhering-to-maxium-memory-use/54265. These can be hard to reproduce, since they tend to occur when pushing QuPath to its limits - but problems certainly seem to be more frequent than they should be. My guess is that at least part of the issue lies in [OpenCVPixelClassifier.java](https://github.com/qupath/qupath/blob/88c7cc45648c1d5b09a840bd1e497ea9a46453aa/qupath-core-processing/src/main/java/qupath/opencv/ml/pixel/OpenCVPixelClassifier.java#L93). Specifically, the classification should be wrapped in a `try (var scope = PointerScope) {...}` block to ensure cleanup. Furthermore, it looks like `mat.close()` should be called rather than `mat.release()`. There may well be other examples of this in the code that should be checked. **To Reproduce**; Steps to reproduce the behavior:; 1. Set `-Xmx2G` and `-Xms2G` when starting QuPath; 2. Open OS-2.ndpi and create several training annotations; 3. Train a pixel classifier at a high resolution (I used a pixel size of ~1.8µm). When I did this, QuPath would fail to complete the classification. A thread dump suggested it was stuck in `Pointer.deallocate()` when trying to initialize a new `Mat`. If I switched to use `PointerScope` the problem went away. (Note that I had some cells on the image too that might have been pushing my memory requirements harder; other memory settings/resolutions could be needed to reproduce the problem). **Expected behavior**; Pixel classification succeeds (or fails) consistently. **Desktop (please complete the following information):**; - OS: testing on macOS, user reports for Windows; - QuPath v0.2.3 (probably all v0.2). **Additional context**; Memory use seems to go beyond `-Xmx` by design with JavaCPP. The following startup options warrant some exploration:; ```; -Dorg.bytedeco.javacpp.maxbytes=5G; -Dorg.bytedeco.javacpp.maxphysicalbytes=5",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/753:811,release,release,811,https://qupath.github.io,https://github.com/qupath/qupath/issues/753,1,['release'],['release']
Deployability,"## Bug report. **Describe the bug**; When QuPath is first launched, a few key options are presented to the user - which are currently the memory settings, locale and whether to check for updates. Except that these are no longer really key. The memory setting was important in early releases, when memory was specified in absolute terms (e.g. 4GB). Most users would want to increase it depending upon what is available. However, now memory defaults to 50% of the available system memory, which means it's less likely to require adjustment. What's more, the memory can't even be adjusted on macOS anyway due to permissions limitations. Changing the locale is also strongly discouraged, since it can cause confusion - especially when inputting numbers (using a comma or decimal separator). Therefore space is give to a dialog that is no longer fully functional on all platforms, and isn't really needed. **To Reproduce**; Check the current display via *Help &rarr; Show setup options*. **Expected behavior**; Three main things:; * Show a more informative and useful startup dialog, e.g. to introduce the user interface, forum or documentation.; * Relegate non-essential options to the preferences.; * Retain a checkbox to specify whether to check for updates or not. **Screenshots**. Current dialog, as it appears on a Mac.; ![Screenshot 2022-06-02 at 09 37 51](https://user-images.githubusercontent.com/4690904/171590676-2b69b837-681f-4838-9d9e-1fcf6ed5ab5d.png). **Desktop (please complete the following information):**; - OS: All; - QuPath v0.3.2. **Additional context**; The locale settings have already been moved to the preferences in https://github.com/qupath/qupath/pull/971; This issue really exists to track the progress of the other required changes for v0.4.0.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/986:187,update,updates,187,https://qupath.github.io,https://github.com/qupath/qupath/issues/986,3,"['release', 'update']","['releases', 'updates']"
Deployability,"## Bug report. **Describe the bug**; When comparing intensity features computed with square and circular masks using *Show measurement map*, I noticed that there seemed to be a slight shift. Digging into code, the relevant bit is [starts here](https://github.com/qupath/qupath/blob/bb3cdab740836e5f39b6d306ee2ccd5b2740a52d/qupath-core-processing/src/main/java/qupath/lib/algorithms/IntensityFeaturesPlugin.java#L612). Adding a line; ```java; new ImagePlus(""Something"", new FloatProcessor(w, h, pixelImage.getArray(false))).show();; ```; makes it possible to visualize the image in ImageJ. The screenshot suggests there could be an issue of shifting, at least if the width and height of the region is an even number. <img width=""610"" alt=""Screenshot 2023-02-22 at 17 25 32"" src=""https://user-images.githubusercontent.com/4690904/220707461-a26ec296-fc85-48fe-b5a3-caf3c62472ab.png"">. If there is an odd number of pixels, the result looks ok:. <img width=""666"" alt=""Screenshot 2023-02-22 at 17 27 29"" src=""https://user-images.githubusercontent.com/4690904/220707864-6c3a5ffc-7d65-44be-ac48-e74d0c9491c2.png"">. (The contrast was changed differently in each case, to highlight the excluded pixels with NaN values). **Expected behavior**; No apparent shift, regardless of whether there is an even or odd number of pixels in the image. **Desktop (please complete the following information):**; - OS: All; - QuPath Version: Probably all up to v0.4.x. **Additional context**; This shouldn't be addressed in an 0.0.x release, since it would change results. But the circular tiles calculation should be revisited for a major release, since 1 pixel could be a substantial shift if the region is small (e.g. a low-resolution tile).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1239:1507,release,release,1507,https://qupath.github.io,https://github.com/qupath/qupath/issues/1239,2,['release'],['release']
Deployability,"## Bug report. **Describe the bug**; When moving a folder (under Windows) that includes a project folder and an image to a different hard drive, QuPath does not find a suitable Replacement URI for the image when opening the project. **To Reproduce**; Steps to reproduce the behavior:; 1. Create a QuPath project and include an optical image in the same folder structure, e.g.:; ```; G:\QPB; │ testdata.svs; │; └───Annotations; │ project.qpproj; │ project.qpproj.backup; │; ```. 2. Move the parent folder to a different hard drive. E.g. to E:\QPB. 3. Open the project in the new location.; 4. The Update URI dialog doesn't show a suggested replacement URI, although the relative path of the image to the project hasn't changed. **Expected behavior**; The replacement URI field should be pre-populated with the path to the image at its new location. **Screenshots**; After folder is moved to different drive:; ![screenshot_project_moved_to different_folder](https://user-images.githubusercontent.com/44832494/85672373-1c6ced00-b6c3-11ea-9795-5078d0b595e4.png). **Desktop (please complete the following information):**; - OS: Windows 10; - QuPath Version 0.2.1. **Additional context**; The problem only occurs if moving the folder to a different hard drive. Moving the folder to a different location on the same hard drive shows the expected behavior of suggesting the correct replacement URI.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/543:596,Update,Update,596,https://qupath.github.io,https://github.com/qupath/qupath/issues/543,1,['Update'],['Update']
Deployability,"## Bug report. **Describe the bug**; When optimising perameters for a project by creating a sparse composite image from different image entries. When running cell detection using script editor, errors are generated for the final tiles **IF** the entire shape is not a perfect rectangle. If using stardist script for cell detection, errors are generated before any detections. **Can avoid both by manual annotation** with a polygon tool to follow image boundaries -> so not sure if a crucial bug. Carried over from last release to v5. **To Reproduce**; Steps to reproduce the behavior:; 1. Ctl+Shift+A; 2. Run cell detection as a script:; ```; setImageType('FLUORESCENCE');; selectAnnotations();; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', '{""detectionImage"":""DAPI"",""requestedPixelSizeMicrons"":0.1,""backgroundRadiusMicrons"":4.0,""backgroundByReconstruction"":true,""medianRadiusMicrons"":1.0,""sigmaMicrons"":2.5,""minAreaMicrons"":11.0,""maxAreaMicrons"":400.0,""threshold"":1000.0,""watershedPostProcess"":true,""cellExpansionMicrons"":5.0,""includeNuclei"":true,""smoothBoundaries"":true,""makeMeasurements"":true}'); ```; 4. Error:; ```; ERROR: Error running plugin: java.lang.NullPointerException: Cannot invoke ""java.awt.image.BufferedImage.getSampleModel()"" because ""img"" is null; java.util.concurrent.ExecutionException: java.lang.NullPointerException: Cannot invoke ""java.awt.image.BufferedImage.getSampleModel()"" because ""img"" is null; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractTaskRunner.awaitCompletion(AbstractTaskRunner.java:147); at qupath.lib.plugins.AbstractTaskRunner.runTasks(AbstractTaskRunner.java:117); at qupath.lib.gui.TaskRunnerFX.runTasks(TaskRunnerFX.java:106); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:147); at qupath.lib.gui.QuPathGUI.runPlugin(QuPathGUI.java:2245); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:248); ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1443:519,release,release,519,https://qupath.github.io,https://github.com/qupath/qupath/issues/1443,1,['release'],['release']
Deployability,"## Bug report. **Describe the bug**; When right clicking the drop down box to toggle channel selection for pixel classifier (see below), the channel options and the intended options show at the same time causing overlap. Note: using a macbook and a trackpad. . **To Reproduce**; Steps to reproduce the behavior:; 1. Go to ""train pixel classifier""; 2. Click on ""edit"" next to ""features""; 3. Right click on channels ; 4. Both the channels and the Select all/none options appear; <img width=""820"" alt=""image"" src=""https://github.com/qupath/qupath/assets/42358257/dd15195c-ebfb-4118-948a-202b7c2ff5b2"">. **Expected behavior**; <img width=""824"" alt=""image"" src=""https://github.com/qupath/qupath/assets/42358257/3d10e366-524c-42cb-a438-8741abeb7434"">. **Screenshots**. **Desktop (please complete the following information):**; - OS: macOS; - QuPath Version: 0.5.1. **Additional context** ; Unsure if it's specific to mac and/or the trackpad",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1498:78,toggle,toggle,78,https://qupath.github.io,https://github.com/qupath/qupath/issues/1498,1,['toggle'],['toggle']
Deployability,"## Bug report. **Describe the bug**; When running subcellular detection, the `Num spots` and `Num clusters` measurements are incorrect; the spots contain both spots and clusters, while the count of clusters is 0. **To Reproduce**; See https://forum.image.sc/t/about-num-cluster-column-of-subcellular-detection/55585. **Expected behavior**; Num spots and Num clusters measurements match what is visible in the viewer, at least at the time of creation (they don't automatically update). **Desktop (please complete the following information):**; - QuPath Version: v0.2.3, v0.3.0-rc1. **Additional context**; See; https://github.com/qupath/qupath/blob/75ec9cebe5e3bc5843fc60b07b455ce1215e1fb9/qupath-core-processing/src/main/java/qupath/imagej/detect/cells/SubcellularDetection.java#L360-L373. It might be fixed with a change to:; ```java; if (isCluster); clusterObjects.add(cluster);; else; spotObjects.add(cluster);; ```",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/788:476,update,update,476,https://qupath.github.io,https://github.com/qupath/qupath/issues/788,1,['update'],['update']
Deployability,"## Bug report. **Describe the bug**; When switching between images with similar channels with the Brightness/Contrast window open, the histogram doesn't automatically update as it should. Rather, the user sometimes need to select a different channel and then return to the one they wanted to look at. **To Reproduce**; Steps to reproduce the behavior:; 1. Create a project with some similar images (same channels, names); 2. Open Brightness/Contrast; 3. Open the first image, see the histogram displayed; 4. Open the second image; the histogram from the first probably still lingers. **Expected behavior**; The histogram updates when the image updates. **Desktop (please complete the following information):**; - OS: macOS (but presumably all); - QuPath Version: 0.5.0. **Additional context**; The 'Apply to similar images' setting doesn't seem to make any difference to this behavior. The issue isn't evident if the images have different channels.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1459:167,update,update,167,https://qupath.github.io,https://github.com/qupath/qupath/issues/1459,3,['update'],"['update', 'updates']"
Deployability,"## Bug report. **Describe the bug**; When using *Add intensity features*, the parameters are determined by the *first* image that is opened.; They are not reset when later opening other images. **To Reproduce**; Steps to reproduce the behavior:; 1. Create a project with two different types of image (or fluorescence images with different channel names); 2. Open one image, then choose *Add intensity features*, check the channel options, and close the dialog again; 3. Open another image, then check options under *Add intensity features*; 4. See that the channel names are unchanged. **Expected behavior**; Channels (and any other relevant parameters) are updated for the current image. **Desktop (please complete the following information):**; - OS: All; - QuPath Version v0.3.0 (and probably earlier). **Additional context**; See https://forum.image.sc/t/add-intensity-feature-error/59602. Simply removing `parametersInitialized` [here](https://github.com/qupath/qupath/blob/88c7cc45648c1d5b09a840bd1e497ea9a46453aa/qupath-core-processing/src/main/java/qupath/lib/algorithms/IntensityFeaturesPlugin.java#L655) might be sufficient, but this needs a bit more exploration.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/836:658,update,updated,658,https://qupath.github.io,https://github.com/qupath/qupath/issues/836,1,['update'],['updated']
Deployability,"## Bug report. **Describe the bug**; When using *Export measurements*, the image name from the server metadata is used - not from the project.; This is unexpected from a user perspective, and can make measurements harder to decipher. See https://forum.image.sc/t/pyramindal-scn-files-disarranged-when-opened/41613. **To Reproduce**; Steps to reproduce the behavior:; 1. Change the name of an image in a project; 2. Use *Export measurements* to export measurements; 3. Check the output file... the first column contains the original image name, not the one changed in the project. **Expected behavior**; Image names are consistent, and it is possible for users to control which image name is export in measurement tables. **Desktop (please complete the following information):**; - QuPath v0.2.x. **Additional context**; I've written a gist as a potential (temporary) workaround: https://gist.github.com/petebankhead/d5a2ed5e6b40ffbe9817db19300eca5d. At this point, it's not 100% clear to me whether the server metadata should always be updated to match the project image name, or if rather the export should be updated to get the name from the entry. But in any case, the current behavior should change in a future version.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/593:1036,update,updated,1036,https://qupath.github.io,https://github.com/qupath/qupath/issues/593,2,['update'],['updated']
Deployability,"## Bug report. **Describe the bug**; While jumping between different TMA cores using arrows - the core name (e.g A1) does not change unless you make an additional gesture, such as move the picture, go over with a mouse cursor. **To Reproduce**; Steps to reproduce the behavior:; 1. Use disarrayed TMA; 2. Use right and left keys on the keyboard to move between cores (zoom on any core first); 3. Check the core name at the low right corner - it does not change!; 4. Move the cursor and then the core name updates. **Expected behavior**; Core name is correct when a core appears after using the keyboard only. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: Win10; - QuPath 0.3. **Additional context**; One can jump through many cores with arrows with the core name staying the same.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/819:505,update,updates,505,https://qupath.github.io,https://github.com/qupath/qupath/issues/819,1,['update'],['updates']
Deployability,"## Bug report. **Describe the bug**; `ProjectCommands.promptToImportImages` claims to return a list of imported images, but it appears that it does not. **To Reproduce**; Steps to reproduce the behavior:; 1. Run in an IDE using debug mode, with a breakpoint around https://github.com/qupath/qupath/blob/f2a1f9c002726f1ee14c5685bf1ea67f4051f8d7/qupath-gui-fx/src/main/java/qupath/lib/gui/QuPathGUI.java#L3170; 2. Open a project; 3. Drag a new image onto the project and agree to import it; 4. Check the list contains the image (spoiler: it doesn't). **Expected behavior**; A list is returned, as the docs suggest it should. Or, if not possible (because the import is delayed), the method signature should be updated or there should be an async version explicitly provided. **Desktop (please complete the following information):**; - OS: All, presumably; - QuPath Version: v0.4.3 (and likely before). **Additional context**; Reported by @Rdornier at at https://forum.image.sc/t/prompttoimportimages-returns-empty-list-of-images/78112",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1251:707,update,updated,707,https://qupath.github.io,https://github.com/qupath/qupath/issues/1251,1,['update'],['updated']
Deployability,"## Bug report. > **TLDR:** There's a bug in how QuPath v0.4.0 - v0.4.3 saved/reloads (derived) classifications that *could* impact analysis results based upon counting classified objects.; > ; > In most cases, it shouldn't matter and won't affect results; in fact, at the time of writing I'm not aware of any real-world examples where it has negatively impacted QuPath's analysis. But because it *could* matter, particularly for complicated / non-standard workflows, we plan to include a fix in the next QuPath release.; > ; > In the spirit of openness, the following (somewhat technical) description attempts to explain the issue as clearly as possible. **Describe the bug**; There is a subtle bug in QuPath v0.4.0 - v0.4.3 that strikes when reading ['derived' `PathClass` objects](https://qupath.readthedocs.io/en/0.4/docs/concepts/classifications.html#classifications-derived-classifications) from data files or (some) JSON representations. Earlier QuPath versions are not affected. Derived classifications include examples such as `Tumor: Positive` and `Tumor: Negative` - where both come from a base `Tumor` classification (represented by a `PathClass` object). QuPath aims to ensure that every classification and derived classification is a singleton, i.e. it exists only once. This means that requesting the parent class for `Tumor: Positive` and `Tumor: Negative` should always return the exact same classification object, and that should be identical to what is returned by `QP.getPathClass('Tumor')`. The issue is that whenever a derived classification is *reloaded* in QuPath v0.4.x, a necessary check is missed and this makes it possible for the parent classification of `Tumor: Positive` and `Tumor: Negative` to *not* be identical to the result of `QP.getPathClass('Tumor')`. This could potentially cause confusion when attempting to count objects that share the same classification. **To Reproduce**; The bug is hard to reproduce, and I don't know of any way to reproduce it within a si",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1306:511,release,release,511,https://qupath.github.io,https://github.com/qupath/qupath/issues/1306,1,['release'],['release']
Deployability,"## Bug report; I am processing TMA images in QuPath.; I had already created some "".qpmap"" files to record the unique ID of each sample hole in QuPath 0.2.3 and they worked well by drag and drop in Qupath viewer.; Recently, I had updated 0.3.0, and the old "".qpmap"" file can't drag and drop at the viewer, but give an ""Import images to project"" window.; I have checked the same "".qpmap"" file and the same project in 0.2.3. **To Reproduce**; Drag the qpmap file and drop in viewer of QuPath 0.3.0. **Expected behavior**; Unique ID of TMA in qpmap will import into qupath project. **Screenshots**; If applicable, add screenshots to help explain your problem.; ![Snipaste_2021-10-03_19-41-49](https://user-images.githubusercontent.com/24513381/135752248-62825d4b-4e51-484d-8d75-544a06dd7df1.jpg). **Desktop (please complete the following information):**; - OS: Windows 10 21H1; - QuPath Version 0.3.0",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/829:229,update,updated,229,https://qupath.github.io,https://github.com/qupath/qupath/issues/829,1,['update'],['updated']
Deployability,"## Bug report; QuPath 0.3 will not open on a CentOS 7 machine. Qupath 0.2.3 works fine in the same machine. I attach the full log. Steps to reproduce the behavior:; Execute the .sh file from the terminal. **Expected behavior**; To open the graphical interface. **Log**; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Sep 22, 2021 2:59:18 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @37052337'; *** Error in `/home/xxx/QuPath-0.3/bin/QuPath': free(): invalid pointer: 0x00007f726889bbc0 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81679)[0x7fa4aa191679]; /usr/lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f7268605ed2]; /usr/lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7268606323]; /usr/lib64/libstdc++.so.6(+0x71295)[0x7f7268607295]; /lib64/libpthread.so.0(+0x61cb)[0x7fa4a9ad31cb]; /usr/lib64/libstdc++.so.6(+0x712e1)[0x7f72686072e1]; /usr/lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7268607323]; /usr/lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f726860417c]; /usr/lib64/dri/swrast_dri.so(+0x85930)[0x7f726bbe8930]; /lib64/ld-linux-x86-64.so.2(+0xf973)[0x7fa4aa9f3973]; /lib64/ld-linux-x86-64.so.2(+0x1454e)[0x7fa4aa9f854e]; /lib64/ld-linux-x86-64.so.2(+0xf784)[0x7fa4aa9f3784]; /lib64/ld-linux-x86-64.so.2(+0x13b3b)[0x7fa4aa9f7b3b]; /lib64/libdl.so.2(+0xeeb)[0x7fa4aa7e0eeb]; /lib64/ld-linux-x86-64.so.2(+0xf784)[0x7fa4aa9f3784]; /lib64/libdl.so.2(+0x14ed)[0x7fa4aa7e14ed]; /lib64/libdl.so.2(dlopen+0x31)[0x7fa4aa7e0f81]; /lib64/libGLX_system.so.0(+0x4444c)[0x7f726ecdd44c]; /lib64/libGLX_system.so.0(+0x4374a)[0x7f726ecdc74a]; /lib64/libGLX_system.so.0(+0x1f138)[0x7f726ecb8138]; /lib64/libGLX_system.so.0(+0x1a9d2)[0x7f726ecb39d2]; /lib64/libGLX_system.so.0(+0x1b7c6)[0x7f726ecb47c6]; /lib64/libGLX.so.0(glXChooseFBConfig+0x31)[0x7f726f5df6b1]; /home/xxx/.op",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/825:374,release,release,374,https://qupath.github.io,https://github.com/qupath/qupath/issues/825,2,"['configurat', 'release']","['configuration', 'release']"
Deployability,"## Enhancement request. The Java Topology Suite option `isOverlayNG` is reported to help overcome some exceptions when manipulating complex geometries. I had intended to turn it on by default in v0.4.0, but it seems not to have happened. The workarounds described here are still required:; https://forum.image.sc/t/stardist-error-message-topologyexception/67708/6. The next QuPath release should ensure that it's really turned on. See https://forum.image.sc/t/error-when-merging-annotations/76738/6",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1244:381,release,release,381,https://qupath.github.io,https://github.com/qupath/qupath/issues/1244,1,['release'],['release']
Deployability,"## Feature request. **Is your feature request related to a problem? Please describe.**; After using the TMA dearrayer, viewing the cores within the TMA grid view wont show cores unless the ""show measurements"" is toggled on or an order is selected. . **Describe the solution you'd like**; Would be good if this additional step is removed and the cores are visible within the TMA grid view on opening. **Describe alternatives you've considered**. **Additional context**",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1472:212,toggle,toggled,212,https://qupath.github.io,https://github.com/qupath/qupath/issues/1472,1,['toggle'],['toggled']
Deployability,"## Feature request. **Is your feature request related to a problem? Please describe.**; Project sorting is not persistent across QuPath instances, and does not update based on updated metadata values.; Nice-to-have would be to add metadata values when images are dragged and dropped, but I feel that's going to be a stretch goal. **Describe the solution you'd like**; In order of priority/feasibility:. 1. Project sorting persists; 2. Sorting is updated when metadata values change; 3. Dragging & dropping a file into a project sorted by metadata value sets the corresponding value. **Describe alternatives you've considered**; Manually re-sorting on project opening and when values change, and manually setting metadata values. **Additional context**. ImageSC posts:. - https://forum.image.sc/t/qupath-feature-request-persist-image-sorting-per-metadata/91406/4; - https://forum.image.sc/t/qupath-sort-by/85398",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1537:160,update,update,160,https://qupath.github.io,https://github.com/qupath/qupath/issues/1537,3,['update'],"['update', 'updated']"
Deployability,"## Feature request. **Is your feature request related to a problem? Please describe.**; QuPath currently requires the extension path to be set explicitly - even if the default path already exists. This can sometimes be annoying. See https://forum.image.sc/t/default-extension-location-unset-by-default-problem-for-pre-installing-extensions/79594. **Describe the solution you'd like**. Proposed solution:. On startup, QuPath should check if there is an extension path set. If there is not, then it should check if a directory corresponding to the default path exists.; * If yes, ask the user whether to use this path; * If no, continue silently. Note that if the user does not want to use the path, there should be an option to select another path or to not ask again - otherwise the prompt will appear every time the software is started. **Describe alternatives you've considered**; 1. The default path could always be used if the directory exists, even if the path hasn't been specified.; * This could be troublesome, because it means that extensions might be installed unintentionally. In the worst cases, if an extension is causing the problems that resulted in the QuPath reinstallation, then startup might fail.; 2. There could be an option to set the extension path (including to the default) from the command line, which could be applied post-install.; * This is already somewhat possible with a one-line script, see https://forum.image.sc/t/qupath-extension-folder-on-distant-server/78190/2?u=petebankhead. **Additional context**; An idea from the forum post was to set the extension path during installation, but I don't think there's a way to modify the installer sufficiently to get that to work.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1260:318,install,installing-extensions,318,https://qupath.github.io,https://github.com/qupath/qupath/issues/1260,5,['install'],"['install', 'installation', 'installed', 'installer', 'installing-extensions']"
Deployability,## Feature request. **Is your feature request related to a problem? Please describe.**; Qupath Version label on macOS. Currently QuPath will display as version 1 if you inspect the App in Finder. As an Apple admin managing Apple devices in an instituion it is not possible to discover which versions of QuPath are installed on our devices. All installations of QuPath will be on version 1 and not 0.4.3 / 0.4.4 etc. Ensuring all users are running the latest version is not possible. **Describe the solution you'd like**; In future updates of QuPath for macOS it would be great if the **info.plist** file has the correct version added to the Key **CFBundleShortVersionString**; The following command could be run prior to packaging updated installers:; `defaults write /Applications/QuPath.app/Contents/Info.plist CFBundleShortVersionString 0.4.4`. **Describe alternatives you've considered**; After deploying the PKG installer I have considered running a script to run; `defaults write /Applications/QuPath.app/Contents/Info.plist CFBundleShortVersionString 0.4.4`. Edit: you will need to change the permissions of the file after running above command as it will be 600 and should be 664; `sudo chmod 664 /Applications/QuPath.app/Contents/Info.plist`. **Additional context**; Currently:; ![Current versioning](https://github.com/qupath/qupath/assets/47144936/6cb3af89-451d-4a0d-bbd0-7b82707d61df); Desired outcome:; ![Correct versioning](https://github.com/qupath/qupath/assets/47144936/5ea74946-5b54-4b87-93b2-2cf94ed99b22),MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337:314,install,installed,314,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337,7,"['deploy', 'install', 'update']","['deploying', 'installations', 'installed', 'installer', 'installers', 'updated', 'updates']"
Deployability,"## Feature request. **Is your feature request related to a problem? Please describe.**; ROIs are immutable and associated with a specific `ImagePlane` (generally z and t index).; This means that transferring a ROI to a different plane is tricky. **Describe the solution you'd like**; Add a `public ROI updatePlane(ImagePlane plane)` method to the `ROI` interface, and ensure it is implemented in all relevant ROI classes. **Describe alternatives you've considered**; Currently, a hack like this needs to be used:; ```groovy; def roi = GeometryTools.geometryToROI(pathObject.getROI().getGeometry(), ImagePlane.getPlane(z, t)); ```; for example [here](https://gist.github.com/petebankhead/6116f921cf8c3223c74b0346c54f532d#file-qupath-copy-annotations-across-stacks-groovy-L54). This is awkward, and can lose information - particularly with ellipses, which would be polygonized. **Additional context**; There are already `ROI.translate(x, y)` and `ROI.scale(x, y)` methods. This will simplify copying ROIs to other planes of a z-stack, which could be useful for annotation.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1052:302,update,updatePlane,302,https://qupath.github.io,https://github.com/qupath/qupath/issues/1052,1,['update'],['updatePlane']
Deployability,"## Feature request. Previous QuPath releases could use Bio-Formats' memoization to help with creating new file readers, at least when the initialization time was slow: https://bio-formats.readthedocs.io/en/latest/developers/matlab-dev.html#improving-reading-performance. This wasn't available in QuPath v0.4.0-v0.4.2 because we switched to Java 17, and [memoization was broken there](https://github.com/ome/bioformats/issues/3659#issuecomment-805134072). This is fixed in Bio-Formats 6.12.0, so we can reinstate it again. ### Effects of memoization. When opening an image with Bio-Formats, QuPath uses multiple Bio-Formats readers to access pixels in parallel. Each reader needs to be initialized. Generally this is fast, but sometimes (e.g. with certain files or file types) it is slow. In one particularly bad case (a very large .czi file) I've seen it take minutes. Memoization makes it possible to create `.bfmemo` files the first time a reader is created, so that subsequent readers can use these for faster initialization. ### Turning on memoization. Because memoization involves writing files to disk, users might not always want it. QuPath provides two preferences to control this:. * **Bio-Formats memoization time (ms)** If less than 0, don't use memoization. If >= 0, create a memoization file only if initialization of a reader takes longer than the specified milliseconds. If initialization is fast anyway, memoization is pretty pointless.; * **Bio-Formats memoization directory** If specified, store memoization files in here. Then they are persistent, and available when QuPath is reopened. *Otherwise*, store any memoization files in a temporary directory and delete the directory when QuPath is shut down. ### Default behavior. The default behavior (at least in v0.3.0 - v0.4.2) was to specify a memoization time of 500 ms, and not to specify a directory (i.e. only use temporary files). Upon inspection, it seems that this still creates temporary directories even if no `.bfmemo` fil",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1236:36,release,releases,36,https://qupath.github.io,https://github.com/qupath/qupath/issues/1236,1,['release'],['releases']
Deployability,"## IMPORTANT!. ## Before we begin... Before submitting your bug report, please check the following:. * [ ] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [ ] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [ ] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [ ] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**. When exporting the following image ( https://matthews.sites.wfu.edu/misc/graphics/formats/uncompr.tif) using the OME Tiff option the resulting file has the wrong color format causing it to be unreadable by other applications and viewers. . I'm not sure if it is all images but it happened with every one I tried. **To Reproduce**; Steps to reproduce the behavior:; 1. Open an image (eg https://matthews.sites.wfu.edu/misc/graphics/formats/uncompr.tif); 2. Go to File Export -> OME Tiff and use default options (JPEG (lossy) downsample, 4.0, 256) ; 3. Attempt to open exported file in another image viewer (eg Kirta); 4. See error. **Expected behavior**. The image should be readable by other viewers that support tifs. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu; - QuPath Version: 0.4.3. **Additional context**. As discussed here https://github.com/libvips/libvips/issues/3397 changing the PhotometricInterpretation to YCrCb causes images to be displayed properly.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1254:278,release,release,278,https://qupath.github.io,https://github.com/qupath/qupath/issues/1254,2,['release'],['release']
Deployability,"## IMPORTANT!. * [X] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [X] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [X] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [X] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; Object connections cause moderate viewer lag when downsample factor is less than 1, evident when panning. Very minor and niche issue, but I figured I'd open a ticket anyways. **To Reproduce**; Steps to reproduce the behavior:; 1. Run cell detection across a whole-slide annotation; 2. Generate object connections via ""Delaunay cluster features 2D""; 3. Set viewer downsample factor to 0.99 or less; 4. Observe lag when panning. Unchecking ""show object connections"" or setting a downsample factor greater than or equal to 1 will resolve this issue. **Expected behavior**; Visualizing objects overlaid onto images shouldn't result in substantial lag. **Screenshots**; Video recording: https://www.youtube.com/watch?v=qOBp2X6HVUc. **Desktop (please complete the following information):**; - OS: Windows 10; - QuPath Version: Version: 0.4.0-SNAPSHOT; Build time: 2022-01-24, 13:48. **Additional context**; A 24-class composite classifier, annotation-generating pixel classifier, and several other spatial analyses were also performed.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1069:192,release,release,192,https://qupath.github.io,https://github.com/qupath/qupath/issues/1069,2,['release'],['release']
Deployability,"## IMPORTANT!. **This is only for bug reports - for questions or discussions, please use the forum at [image.sc](https://forum.image.sc/tags/qupath) instead**. ## Before we begin... **You've checked https://qupath.github.io for a new release that might already have fixed the issue, right?**. **And you've searched for related issues here to see if the issues has already been reported?**. If not, please do these things first. Otherwise, please fill in the template below with as much information as possible to help us reproduce the bug & fix it. ## Bug report. **Describe the bug**. There seem to be ghost co-ordinates that are only visible when zooming in and alter the annotations. The zoom level therefore determines the shape of the annotation. In a similar way editing an annotation is causing the co-ordinates to move. We have exported the annotations and jsons and reimported them and there was a bug in our own code that created these lines across the annotations. . We are wondering whether, the co-ordinates of an original annotation are stored in some way even after editing, rather than being deleted. For example, if a circle was drawn and then a chunk removed from the edge - would the original circumference details still be retained. **To Reproduce**. See examples here:. https://www.youtube.com/watch?v=pQmyZTKsUTU - milestone 9. https://www.youtube.com/watch?v=0i0mODbj7Zc - on milestone 7; https://www.youtube.com/watch?v=MQONdCIs4Os - on milestone 7. **Expected behavior**; There would be one set of co-ordinates visible all the time. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Windows, macOS, Ubuntu...]. MacOS 10.14.6; - QuPath Version [e.g. 0.1.2]. Originally discovered problem in QuPath 0.2.0 milestone 7 but have replicated it in milestone 9. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/416:234,release,release,234,https://qupath.github.io,https://github.com/qupath/qupath/issues/416,1,['release'],['release']
Deployability,"## IMPORTANT!. **This is only for bug reports - for questions or discussions, please use the forum at [image.sc](https://forum.image.sc/tags/qupath) instead**. ## Before we begin... **You've checked https://qupath.github.io for a new release that might already have fixed the issue, right?**. **And you've searched for related issues here to see if the issues has already been reported?**. If not, please do these things first. Otherwise, please fill in the template below with as much information as possible to help us reproduce the bug & fix it. ## Bug report. **Describe the bug**; A clear and concise description of what the bug is:; TMA tif files of magnification 0.25, 0.625, 1.25, 2.5, and 5x all load with a bright pink background. I don't know how to remove the pink color and the TMA dearrayer doesn't work properly. TMA tiff files larger than 5x will not load at all. 10, 20, and 40x fail to be added to the project. Error message, ""Failed to load one image."" is shown when trying to add one file at a time. **To Reproduce**; Steps to reproduce the behavior:; 1. Click on 'Create project' (make a new folder and name it); 2. Click on 'Add images'; 3. Click on 'choose files'; 4. Navigate to file and select it. ; 5. Click on 'Open'; 6. Click on 'Import'; 7. The result is either a pink thumbnail and pink image or an error message and no image added. **Expected behavior**; A clear and concise description of what you expected to happen:; All tif files should be added to the project and names and thumbnails should be visible on the left hand side of QuPath. Slide backgrounds should be white and not pink. (I know the background isn't actually pink because the files open correctly in ImageScope.). **Screenshots**; Pink background for TMA tiff files; ![2019-11-07_1304](https://user-images.githubusercontent.com/6699385/68389277-db8b8c80-0162-11ea-9a67-38f297589135.png). Failure to upload error message with the attempted upload file highlighted in the Windows window; ![2019-11-07_133",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/374:234,release,release,234,https://qupath.github.io,https://github.com/qupath/qupath/issues/374,1,['release'],['release']
Deployability,"## IMPORTANT!. **This is only for bug reports - for questions or discussions, please use the forum at [image.sc](https://forum.image.sc/tags/qupath) instead**. ## Before we begin... **You've checked https://qupath.github.io for a new release that might already have fixed the issue, right?**. **And you've searched for related issues here to see if the issues has already been reported?**. If not, please do these things first. Otherwise, please fill in the template below with as much information as possible to help us reproduce the bug & fix it. ## Bug report. **Describe the bug**; Black/White squares are appearing in the WSIs when viewed under QuPath 0.2.0-m4 Linux (also happen on older versions). QuPath 0.1.2 does not have this issue, I think it started with QuPath 0.2.0+. See below for a resolution. **To Reproduce**; Steps to reproduce the behavior:; 1. Select a WSI of any type (Mirax, SVS, Tiff...); 2. Notice the display bug. **Expected behavior**; No display bug. **Screenshots**; ![2019-09-02_09-24](https://user-images.githubusercontent.com/4030626/64131323-864a8d80-cd63-11e9-8e66-e4a9201d409c.png). **Desktop (please complete the following information):**; - OS: Linux; - QuPath Version 0.2.0-m4. **Additional context**; This issue is caused by the Pixman library used as a dependency of Openslide. As QuPath ships with a bunch of precompiled shared libraries on Linux (and not using those from the system), it also carries with it this bug. Have a look at [this thread](https://github.com/libvips/libvips/issues/1401) for more information.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/355:234,release,release,234,https://qupath.github.io,https://github.com/qupath/qupath/issues/355,1,['release'],['release']
Deployability,"## IMPORTANT!. This section is **only** for bug reports, which **must** follow the template below. Please post any other questions to the official QuPath forum at https://forum.image.sc/tags/qupath. If in doubt, use [image.sc](https://forum.image.sc/tags/qupath). This helps us keep things organized. ## Before we begin... Before submitting your bug report, please check the following:. * [ X ] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [ X ] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [ X ] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [ X ] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; A clear and concise description of what the bug is. Installing QuPath under two different users in the same computer allows for the second installation to access the directory of the first user that installed the software. These seems to be a security bug. This doesn't occur when installing the zip version. **To Reproduce**; Steps to reproduce the behavior:; 1. Download the "".msi"" QuPath installation file ; 2. Install in a first user -> admin rights require for installation; 3. Complete installation and start the program; 4. Sign out of the first session ; 5. Sign in into the next user; 6. Download the "".msi"" file ; 7. Install QuPath -> admin rights require for installation.; 8. Here you will notice that the setup steps are skip; 9. If you go to the extensions folder through the extension tab in QuPath you will notice that the paths are associated to the first user. **Expected behavior**; A clear and concise description of what you expected to happen. No access to the file system of other users since that rises a security concern. . **Screenshots**; If applicable, add screenshots to help explain",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108:568,release,release,568,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108,2,['release'],['release']
Deployability,"## IMPORTANT!. This section is **only** for bug reports, which **must** follow the template below. Please post any other questions to the official QuPath forum at https://forum.image.sc/tags/qupath. If in doubt, use [image.sc](https://forum.image.sc/tags/qupath). This helps us keep things organized. ## Before we begin... Before submitting your bug report, please check the following:. * [ ] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [ ] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [ ] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [ ] I've checked for existing GitHub issues describing the same problem. ## Bug report. ### Describe the bug; A clear and concise description of what the bug is. ### To Reproduce; Steps to reproduce the behavior:; 1. Go to '...'; 2. Click on '....'; 3. Scroll down to '....'; 4. See error. ### Expected behavior; A clear and concise description of what you expected to happen. ### Screenshots; If applicable, add screenshots to help explain your problem. ### Desktop (please complete the following information):; - OS: [e.g. Windows, macOS, Ubuntu...]; - QuPath Version: [e.g. 0.2.2]. ### Additional context; Add any other context about the problem here.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1691:564,release,release,564,https://qupath.github.io,https://github.com/qupath/qupath/issues/1691,2,['release'],['release']
Deployability,"## IMPORTANT!. This section is **only** for bug reports, which **must** follow the template below. Please post any other questions to the official QuPath forum at https://forum.image.sc/tags/qupath. If in doubt, use [image.sc](https://forum.image.sc/tags/qupath). This helps us keep things organized. ## Before we begin... Before submitting your bug report, please check the following:. * [ ] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [ ] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [ ] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [ ] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps to reproduce the behavior:; 1. Go to '...'; 2. Click on '....'; 3. Scroll down to '....'; 4. See error. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Windows, macOS, Ubuntu...]; - QuPath Version: [e.g. 0.2.2]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1148:564,release,release,564,https://qupath.github.io,https://github.com/qupath/qupath/issues/1148,4,['release'],['release']
Deployability,"## IMPORTANT!. This section is **only** for bug reports, which **must** follow the template below. Please post any other questions to the official QuPath forum at https://forum.image.sc/tags/qupath. If in doubt, use [image.sc](https://forum.image.sc/tags/qupath). This helps us keep things organized. ## Before we begin... Before submitting your bug report, please check the following:. * [ x] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [ x] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [x ] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [ x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; The slide label does not show when selecting View > Slide Label: the image is empty. **To Reproduce**; Steps to reproduce the behavior:; 1. Go to 'View'; 2. Click on 'Show Slide Label'; 3. See error. **Expected behavior**; A window opens displaying the slide label. It worked find in 0.1.2 using the same SVS file, but for some reason no longer shows the slide label image in 0.2.3. . **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: MacOS 10.15.7; - QuPath Version 0.2.3. **Additional context**; images as in SVS format and I know the slide labelled was scanned as it is visible in version 0.1.2",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/643:566,release,release,566,https://qupath.github.io,https://github.com/qupath/qupath/issues/643,2,['release'],['release']
Deployability,"## IMPORTANT!. This section is **only** for bug reports, which **must** follow the template below. Please post any other questions to the official QuPath forum at https://forum.image.sc/tags/qupath. If in doubt, use [image.sc](https://forum.image.sc/tags/qupath). This helps us keep things organized. ## Before we begin... Before submitting your bug report, please check the following:. * [X ] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [X ] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [X] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [X] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; Unable to turn off Input Display. Selecting it a second time adds a second version to the screen. Both versions show keypresses. Selecting again adds a third one...and so on. **To Reproduce**; Turn on Input Display (View > Show Input Display); Notice it shows in lower left of screen.; Try to turn it off by going back to View > Show Input Display. Note: There is no checkmark showing that it is already active.; Selecting it again adds another one to the screen.; Each additional Input Display can be moved from the lower left corner, and all will show the last key pressed (as long as QuPath was the active application). **Expected behavior**; The View menu should show a checkmark when the Input Display has been turned on.; Once the Input Display is active, selecting ""Show Input Display"" will turn off the Input Display and clear the checkmark. **Screenshots**; ![image](https://user-images.githubusercontent.com/27331078/128438550-e734058a-d040-403f-9f5c-507419f24822.png). I realize these are created as ""new"" QuPath windows which can be closed from the task bar. However this fix still seems useful, as the Inp",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/799:566,release,release,566,https://qupath.github.io,https://github.com/qupath/qupath/issues/799,2,['release'],['release']
Deployability,"## IMPORTANT!. This section is **only** for bug reports, which **must** follow the template below. Please post any other questions to the official QuPath forum at https://forum.image.sc/tags/qupath. If in doubt, use [image.sc](https://forum.image.sc/tags/qupath). This helps us keep things organized. ## Before we begin... Before submitting your bug report, please check the following:. * [X] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [X] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [X] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [X] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; Whenever I try to use QuPath, the application crashes on me. I have uninstalled and reinstalled x2 and am fully up to date (QuPath-v0.5.1-Mac-arm64). I can open the application and open my project, but when I try to view an image it crashes on me. . It also causes my computer system wide issues and Ive had to restart twice. I am on a Mac with . **To Reproduce**; Steps to reproduce the behavior:; Unsure. **Expected behavior**; It should open the image for H&E (20x) for an scn file from Versa; <img width=""1498"" alt=""Screenshot 2024-08-08 at 3 24 02 PM"" src=""https://github.com/user-attachments/assets/c69bcc7f-14ca-450b-ac7c-6981ca2903c1"">. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: macOS 14.4.1.; - QuPath Version: v0.5.1. **Additional context**; This is happening for all my QuPath projects, not just a specific one.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1580:564,release,release,564,https://qupath.github.io,https://github.com/qupath/qupath/issues/1580,2,['release'],['release']
Deployability,"## IMPORTANT!. This section is **only** for bug reports, which **must** follow the template below. Please post any other questions to the official QuPath forum at https://forum.image.sc/tags/qupath. If in doubt, use [image.sc](https://forum.image.sc/tags/qupath). This helps us keep things organized. ## Before we begin... Before submitting your bug report, please check the following:. * [x ] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [ x] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [ x] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x ] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; A clear and concise description of what the bug is.; After running clearDetections() TMA grid object isEditable property remains false (i.e. TMA grid circles cannot be rearranged etc). **To Reproduce**; Steps to reproduce the behavior:. setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049"", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759"", ""Background"" : "" 255 255 255""}');. //De-array TMA; runPlugin('qupath.imagej.detect.dearray.TMADearrayerPluginIJ', '{""coreDiameterMM"": 1.2, ""labelsHorizontal"": ""1-16"", ""labelsVertical"": ""A-J"", ""labelOrder"": ""Row first"", ""densityThreshold"": 5, ""boundsScale"": 105}');; selectTMACores();. //Detect cells using some method such as DAB; runPlugin('qupath.imagej.detect.cells.PositiveCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.0, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostP",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1021:566,release,release,566,https://qupath.github.io,https://github.com/qupath/qupath/issues/1021,2,['release'],['release']
Deployability,"## IMPORTANT!. This section is **only** for bug reports, which **must** follow the template below. Please post any other questions to the official QuPath forum at https://forum.image.sc/tags/qupath. If in doubt, use [image.sc](https://forum.image.sc/tags/qupath). This helps us keep things organized. ## Before we begin... Before submitting your bug report, please check the following:. * [x ] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [x ] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [x ] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x ] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; QuPath uses Apache commons-text version 1.9, which exposes a known critical vulnerability ( see https://nvd.nist.gov/vuln/detail/CVE-2022-42889 ). **Expected behavior**; Should use commons-text 1.10, which has fixed the issue. **Additional context**; Users in enterprises may be forced to remove QuPath from their computers, even if the vulnerability is not exploitable.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1141:566,release,release,566,https://qupath.github.io,https://github.com/qupath/qupath/issues/1141,2,['release'],['release']
Deployability,"## IMPORTANT!. This section is **only** for bug reports, which **must** follow the template below. Please post any other questions to the official QuPath forum at https://forum.image.sc/tags/qupath. If in doubt, use [image.sc](https://forum.image.sc/tags/qupath). This helps us keep things organized. ## Before we begin... Before submitting your bug report, please check the following:. * [x] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [x] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [x] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; ""Custom color"" window closes when trying use a custom color either by typing in a box, clicking on a slider, or clicking on the color picker. . **To Reproduce**; Steps to reproduce the behavior:; 1. Go to ""Brightness and Contrast""; 2. Click on the color next to a channel and click ""Custom color...""; 3. Try to adjust a slider, use color picker, or type in one of the text boxes; 4. See error (window immediately closes). **Expected behavior**; It is expected that the window remain open while dragging a slider, moving the color picker, or typing in one of the boxes such that a color can actually be customized and adjusted. . **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: Windows 10 Pro; - QuPath Version: 0.5.1. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1539:564,release,release,564,https://qupath.github.io,https://github.com/qupath/qupath/issues/1539,2,['release'],['release']
Deployability,"## IMPORTANT!. This section is **only** for bug reports, which **must** follow the template below. Please post any other questions to the official QuPath forum at https://forum.image.sc/tags/qupath. If in doubt, use [image.sc](https://forum.image.sc/tags/qupath). This helps us keep things organized. ## Before we begin... Before submitting your bug report, please check the following:. * [x] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [x] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [x] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; If a TMA grid has been assigned using the TMA dearrayer and the TMA grid is removed later, it will remove all regions along with it, regardless of whether they have been placed n the hierachy or not. **To Reproduce**; Steps to reproduce the behavior:; 1. Open a TMA image; 2. Draw some regions in the TMA cores; 3. Run the TMA de-arrayer; 4. Delete the TMA-grid; 5. All manually drawn regions are gone. **Expected behavior**; The TMA grid should be removed and the other regions should be kept. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: Windows; - QuPath Version 0.2.3. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/646:564,release,release,564,https://qupath.github.io,https://github.com/qupath/qupath/issues/646,2,['release'],['release']
Deployability,"## IMPORTANT!. This section is **only** for bug reports, which **must** follow the template below. Please post any other questions to the official QuPath forum at https://forum.image.sc/tags/qupath. If in doubt, use [image.sc](https://forum.image.sc/tags/qupath). This helps us keep things organized. ## Before we begin... Before submitting your bug report, please check the following:. * [x] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [x] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [x] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; Trying to get tile objects using `getTileObjects()` will result in an error:; ```; ERROR: MissingMethodException at line 19: No signature of method: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getTileObjects() is applicable for argument types: () values: []. ERROR: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.callGlobal(GroovyScriptEngineImpl.java:404); org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.access$100(GroovyScriptEngineImpl.java:90); org.codehaus.groovy.jsr223.GroovyScriptEngineImpl$3.invokeMethod(GroovyScriptEngineImpl.java:303); org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:73); org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51); org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171); org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:176); Script8.run(Script8.groovy:20); org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyS",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1065:564,release,release,564,https://qupath.github.io,https://github.com/qupath/qupath/issues/1065,2,['release'],['release']
Deployability,"## IMPORTANT!. This section is **only** for bug reports, which **must** follow the template below. Please post any other questions to the official QuPath forum at https://forum.image.sc/tags/qupath. If in doubt, use [image.sc](https://forum.image.sc/tags/qupath). This helps us keep things organized. ## Before we begin... Before submitting your bug report, please check the following:. * [x] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [x] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [x] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; `QuPath convert-ome` returns exit code 0 despite failure. **To Reproduce**; Steps to reproduce the behavior:; ```; scale=2; tile=1024; comp=ZLIB; input=broken_image.tif; output=broke_omage.ome.tif; QuPath convert-ome $input $output \; --pyramid-scale=$scale \; --tile-size=$tile \; --compression=$comp \; --parallelize; ```; Output (truncated); ```; 20:39:42.582 [main] [INFO ] q.l.i.s.b.BioFormatsServerOptions - Setting max Bio-Formats readers to 2; 20:39:43.272 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.274 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.275 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; ...; 20:39:43.604 [main] [ERROR] q.l.i.writers.ome.ConvertCommand - Unable to open file:broken_image.tif; java.io.IOException: Unable to open file:broken_image.tif; at qupath.lib.images.servers.ImageServers.buildServer(ImageServers.java:306); at qupath.lib.images.writers.ome.ConvertCommand.run(ConvertCommand.java:147); at picocli.CommandLine.executeUserObject(CommandLine.java:2026); at picocli.C",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1451:564,release,release,564,https://qupath.github.io,https://github.com/qupath/qupath/issues/1451,2,['release'],['release']
Deployability,"## Version 0.2.0-m10. This is a *milestone* (i.e. still in development) version made available to try out new features early. * Updated to use Java 14; * Easier to build from source; * Code *extensively* revised and cleaned up; * Commands are activated/deactivated according to status (e.g. if an image or project is opened); * Help text available for most commands via the 'Command list'; * Lots more javadocs and a (somewhat) more logical arrangement; * All-new command line interface; * Customize QuPath's launch, call scripts; * Convert images to OME-TIFF; * Scripting improvements; * Updated to Groovy 3 - scripts now support more recent Java syntax (e.g. lambdas, try-with-resources); * Pasting files results in them being converted to absolute paths; * New 'Paste & escape' command to automatically escape characters for Java Strings; * Set logging level with LogManager class; * New 'Measure -> Export measurements' command to export measurements for multiple images within a project; * Scriptable 'Select objects by classification' command; * Optionally show/hide annotation names in the viewer (shortcut key 'N'); * Updated methods to save/load points within the counting tool; * Use TSV files to improve portability; * Support including classifications and other annotation properties; * Optionally sort project entries by URI (e.g. to group images read from the same file); * Improved support for profiling with VisualVM; * Improved support for large, non-pyramidal images; * 'Simplify shape' command can now be applied to all selected annotations; * Bug fixes, including:; * Gap between tiles when calculating superpixels for large regions (https://github.com/qupath/qupath/issues/345); * Cannot create objects when loading simple thresholding classifier (https://github.com/qupath/qupath/issues/403); * Consistency in Measurement Map display (https://github.com/qupath/qupath/issues/295); * Poor performance when working with many annotations (regression in m9); * Freeze when launching ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/449:128,Update,Updated,128,https://qupath.github.io,https://github.com/qupath/qupath/pull/449,3,['Update'],['Updated']
Deployability,"## Version 0.2.0-m6; This is a *milestone* (i.e. still in development) version made available to try out new features early.; ### Important bug fix!; * Positive per mm^2 measurement fixed; this could be wrong in v0.2.0-m5 (other versions not affected); ### Important behavior change!; * Parent-child relationships are no longer automatically calculated between objects!; For an explanation of the reasons behind this change & what it means, see the blog.; ### Other changes:; * Pixel classifier shows live area measurements with 'Classification' output (in m5 this worked only with 'Probability' output); * New 'Detection centroid distances 2D' command (e.g. to find distances to cells with different classifications); * Smoother drawing, faster viewer repainting; * Point annotation improvements; * Faster repainting; * Converting detections to points now uses nucleus ROIs when applied to cells, no longer requires deleting the detections; * More shortcuts, e.g. Ctrl+Alt+A to select annotations, Ctrl+Alt+D to select detections; * GeometryROI now replaces AreaROI and AWTAreaROI for improved performance and consistency; * Fixed bug when converting ROIs with nested holes to JTS Geometries; * Undo/Redo and tile cache size information added to Memory Monitor; * Added support for ImageWriters to write to output streams; * Updated build script to Gradle 6.0; * Use bioformats_package.jar rather than separate dependences (easier to upgrade/downgrade if needed)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/375:1326,Update,Updated,1326,https://qupath.github.io,https://github.com/qupath/qupath/pull/375,2,"['Update', 'upgrade']","['Updated', 'upgrade']"
Deployability,"## Version 0.2.0-m7; This is a *milestone* (i.e. still in development) version made available to try out new features early.; * Fixed bug that could cause QuPath to freeze when selecting objects with a mini-viewer active, see https://github.com/qupath/qupath/issues/377; * Improved performance converting shapes to geometries, see https://github.com/qupath/qupath/issues/378; * Improved robustness when drawing complex shapes, see https://github.com/qupath/qupath/issues/376; * Improved stability when script directories cannot be found, see https://github.com/qupath/qupath/issues/373; * Prompt to save each image when closing a project with multiple viewers active; * Updated 'Rotate annotation' command to use JTS",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/379:670,Update,Updated,670,https://qupath.github.io,https://github.com/qupath/qupath/pull/379,1,['Update'],['Updated']
Deployability,"'If you do press undo, have you tried doing so multiple times? I mean, if the shape is being modified then a 'valid' version might be 'several undos back'.'; Yep, that's exactly what I hoped for but it seems as if the geometry below is somehow corrupted. The shape of the annotation is still visible on the slide an can still be moved around on the slide. However, no modification whatsoever is possible any more if this bug appears. . I'll just try installing the M7 version. Didn't even know, M7 has already beeen released until Svidro mentioned that in his post 7 minutes ago. I deleted the annotation just after taking the screenshot. Sorry for that. If it happens again, I will follow your instructions :). Very pleased about your fast answer. Thanks a lot, folks! :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/381#issuecomment-561275095:450,install,installing,450,https://qupath.github.io,https://github.com/qupath/qupath/issues/381#issuecomment-561275095,2,"['install', 'release']","['installing', 'released']"
Deployability,"); * Wand tool improvements; * Change wand color modes in Edit -> Preferences; * Press Ctrl (Cmd) while using Wand to select identical pixel values (useful with classification overlays); * Renamed & improved 'Create simple thresholder', support image smoothing; * New 'Memory monitor' and 'Show input display' commands in 'View' menu; * Summary measurements are displayed for the full image when no objects are selected; * Added 'saveImageMeasurement' scripting command; * Revised how images are written; * Moved 'ImageWriterTools' to core module, updated 'ImageWriter' interface; * Changed 'File -> Export regions...' commands to separate between raw pixels & rendered RGB images; * Export multidimensional images as OME-TIFF when no region is selected; * Support labelled/indexed color images with OME-TIFF and PNG; * Improved image type support; * Show under the 'Image' tab; * Include support for uint8, uint16, int16, int32, float32 and float64 types; * Pixel & object classifiers now better separated in the 'Classify' menu; * Added Svidro2 colormap to better highlight extreme values; * More informative PathObject.toString() and ROI.toString() methods; * Improved Brightness/Contrast dialog; * Toggle channels on/off by pressing the 'spacebar' or 'Enter'; * Toggle channels on or off by clicking anywhere in 'selected' column (not only the checkbox); * Dependency updates; * AdoptOpenJDK 13, JavaFX, Groovy, Guava, Bio-Formats, RichTextFX, ImageJ, jpackage; * Bug fixes:; * Fixed size estimate for large images (previously caused some images not to open); * Fixed bug that meant the file chooser forgot the last directory; * Fixed DoG superpixel tiling bug (https://github.com/qupath/qupath/issues/345); * Converting tile classifications to annotations (https://github.com/qupath/qupath/issues/359); * Calculating intensity features for RGB fluorescence (https://github.com/qupath/qupath/issues/365); * Setting stroke thickness, thanks to @jballanc (https://github.com/qupath/qupath/pull/362)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/370:2943,Toggle,Toggle,2943,https://qupath.github.io,https://github.com/qupath/qupath/pull/370,3,"['Toggle', 'update']","['Toggle', 'updates']"
Deployability,"* Add `LocaleListener` class to make it possible to update text properties automatically when the locale is changed; * Externalize strings for preference pane; * Introduce annotations to use when adding new preferences; * Update dependencies, including Bio-Formats 6.12.0",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1230:52,update,update,52,https://qupath.github.io,https://github.com/qupath/qupath/pull/1230,2,"['Update', 'update']","['Update', 'update']"
Deployability,"* Add fill/unfill annotations toolbar button; * Reduce update check fail to a warning (rather than an error); * Show a more informative message is (probably) unable to connect to the internet; * Add 'Training data' title to object/pixel classifier training pie charts; * Remove confusion about whether the pie charts refer to the training or predictions; * Support log histograms with 'single measurement classifier' and 'set cell intensity classification' commands; * Fix the extensions directory path (use 'extensions' subdirectory, not the user path)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1391:55,update,update,55,https://qupath.github.io,https://github.com/qupath/qupath/pull/1391,1,['update'],['update']
Deployability,"* Add gzip support for geojson import/export; * Prompt to update duplicate ids when importing objects; * This includes import via the menu & via drag & drop; * Add copy & paste to objects, via system clipboard and geojson; * Extract `FeatureCollection` into its own class; * Introduce max objects to copy preference; * Avoid shortcut+c because it intercepts other copying efforts (e.g. measurements from the 'Analysis pane'; * Make `PreferencePane` code easier to follow",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1103:58,update,update,58,https://qupath.github.io,https://github.com/qupath/qupath/pull/1103,1,['update'],['update']
Deployability,"* Added icons & toolbar buttons for script editor and log viewer; * Fixed bug that meant menuitem graphics didn't update their color when the style changed; * Created new preference to control if the system menubar is used for all windows, the main window only, or no windows",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1315:114,update,update,114,https://qupath.github.io,https://github.com/qupath/qupath/pull/1315,1,['update'],['update']
Deployability,* Autocomplete options update while typing; * Pressing 'tab' or 'enter' applies the focused completion (probably the first) if none are selected; * Pressing 'Escape' removes the completion popup; * A newly-created script editor now opens with the editor in focus,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1357:23,update,update,23,https://qupath.github.io,https://github.com/qupath/qupath/pull/1357,1,['update'],['update']
Deployability,"* Enable new `DnnModel` implementations to be added via extensions (using a `ServiceLoader`); * Make all DeepJavaLibrary engines available when building via gradle properties; * Handle single-channel probability predictions as if they are multichannel when creating objects; * Without this, the 'softmax' assumption would mean that everything was treated as 'detected' since there was no higher channel available; * Store all actions added with `installActions`, so they can be found again via `QuPathGUI.lookupActionByText(String)`; * Add title to startup message (because otherwise drop shadow missing on Windows)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1160:446,install,installActions,446,https://qupath.github.io,https://github.com/qupath/qupath/pull/1160,1,['install'],['installActions']
Deployability,* Include PyTorch/TensorFlow DJL engines by default in builds; * Fix out-of-date javadoc links; * Update changelog; * Reduce caching of `ServiceLoader`; * Improve logic when trying to create a `DnnModel` in `BioimageIoTools`; * Search for weights that are more likely to be supported first,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1165:98,Update,Update,98,https://qupath.github.io,https://github.com/qupath/qupath/pull/1165,1,['Update'],['Update']
Deployability,* JavaFX 16; * Include updates from main (readme); * Update license display; * Change readFromString methods to use UTF-8,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/681:23,update,updates,23,https://qupath.github.io,https://github.com/qupath/qupath/pull/681,2,"['Update', 'update']","['Update', 'updates']"
Deployability,"* Make extensions available to classloader when running command line scripts; * Support update checking for GitHub-hosted extensions; * Adjust wording of memory/thread-related settings and preferences; * Move 'Show installed extensions' to 'Extensions' menu ; * Add 'Open extensions directory' button, when available",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/791:88,update,update,88,https://qupath.github.io,https://github.com/qupath/qupath/pull/791,2,"['install', 'update']","['installed', 'update']"
Deployability,"* My display is the M1 Macbook Pro 16"", so 3456x2234. However, after your suggestion I switched my main display to a 24"" 1920x1080 display I have and was still able to replicate the problem (after adding the appropriate number of buttons).; * Yes, there needs to be precisely one too many buttons. If the buttons only just fit in the toolbar, no problem. If I have two buttons in the overflow, also no problem.; * Yes, nothing should be done to update the state before opening the project. If, before opening the project, I (slowly) mouse over the red border it will then work, likewise clicking a toolbar button or resizing the window (actually, just clicking when the resize cursor appears is enough - I don't actually have to change the size).; * Yes, it happens on every project.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1184#issuecomment-1353187206:445,update,update,445,https://qupath.github.io,https://github.com/qupath/qupath/issues/1184#issuecomment-1353187206,1,['update'],['update']
Deployability,* Removing 'action' class from ToggleButton seems to help toolbar behave properly; * Ensure weak listeners for PathObjectImageManagers; * Fixes problem when changing the image after creating a measurement table; * Fix default colors for derived PathClasses (don't retain the parent class color); * Reset preferences earlier in initialization if requested; * Avoid sorting exceptions in PathHierarchyImageServer,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1144:31,Toggle,ToggleButton,31,https://qupath.github.io,https://github.com/qupath/qupath/pull/1144,1,['Toggle'],['ToggleButton']
Deployability,"* Setting max memory shifted to preferences, and only appears when possible - but needs checked.; * Update checks need tested. ![welcome](https://user-images.githubusercontent.com/4690904/200657796-f8f83bd3-8b3f-42fb-ad62-30621905826c.jpg)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1124:100,Update,Update,100,https://qupath.github.io,https://github.com/qupath/qupath/pull/1124,1,['Update'],['Update']
Deployability,* Support `.qpdata` files in the project import dialog; * This simplifies bringing over data from an existing project if the project file itself is missing or corrupt (assuming the images are available); * Fix bug in the update URIs command that affected the file dialog when setting a single URI; * Show a context warning if no channels are visible,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1403:221,update,update,221,https://qupath.github.io,https://github.com/qupath/qupath/pull/1403,1,['update'],['update']
Deployability,"* Support better serialization/deserialization of objects to Strings via PathPrefs - including with JSON.; * Add PathPrefs.dumpPreferences() and PathPreds.importPreferences(String) methods; * Move locale to preferences & away from startup dialog (aim being to replace startup dialog entirely); * Support setting different locale categories, and try to automatically update the UI (lists, tables) accordingly; * Better protect QuPathGUI.getAvailablePathClasses() from invalid modifications (via a ChangeListener that removes duplicates/nulls quickly)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/971:366,update,update,366,https://qupath.github.io,https://github.com/qupath/qupath/pull/971,1,['update'],['update']
Deployability,"* Update JavaCPP/OpenCV. This includes Apple Silicon support if built with a compatible JDK (but OpenSlide/Bio-Formats still won't work).; * Update Picocli; * Remove `SecurityManager` reference in `ThreadTools`, because it is deprecated for removal in Java 17",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/913:2,Update,Update,2,https://qupath.github.io,https://github.com/qupath/qupath/pull/913,2,['Update'],['Update']
Deployability,* Update check uses GitHub API to query the latest release; * New preference to control whether a startup script is executed; * New methods in QuPathGUI to simplify adding commands (which can also be called from the startup script),MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/442:2,Update,Update,2,https://qupath.github.io,https://github.com/qupath/qupath/pull/442,2,"['Update', 'release']","['Update', 'release']"
Deployability,"* Update to Bio-Formats 6.9.1; * Fix https://github.com/qupath/qupath/issues/956; * Work around https://github.com/qupath/qupath/issues/957. Memoization will need to be revisited in the future. Here, it is disabled when using using Java 17+ because it doesn't work and logs many errors (somehow related to JEP 403). This behavior can be overridden by adding; ```; java-options=-Dqupath.bioformats.allow.memoization=true; ```; to the QuPath.cfg file (i.e. set the system property), but it likely won't help until there is a new Bio-Formats release. Relatedly, the qupath-app build.gradle now only adds `--illegal-access=permit` for Java 16, since it's the only version where it makes a difference. The easiest way to get QuPath with memoization is therefore to use; ```; gradlew jpackage -Ptoolchain=16; ```",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/958:2,Update,Update,2,https://qupath.github.io,https://github.com/qupath/qupath/pull/958,2,"['Update', 'release']","['Update', 'release']"
Deployability,"* [x ] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [x] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [ x] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x ] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; In QuPath 0.2.3 *.czi files (produced from Zeiss Axioscan) open in full resolution. In QuPath 0.3.2 the same file opens in low resolution (highly pixelated) and can not be viewed at higher resolution. . **To Reproduce**; Steps to reproduce the behavior:; 1. Open QuPath 0.3.2; 2. Drag and drop *.czi file; 3. *.czi file shows in low resolution. **Expected behavior**; The file should open at appropriate resolution as it does in QuPath 0.2.3. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: [Windows 10]; - QuPath Version [0.3.2]. **Additional context**; Add any other context about the problem here.; ![Screen snapshot Qupath 0 2 3](https://user-images.githubusercontent.com/109750856/180259298-960d5dd7-2abc-4ea6-8688-3421e453a4e7.png); ![Screen snapshot Qupath 0 3 2](https://user-images.githubusercontent.com/109750856/180259377-d308150d-c89c-4bba-a715-f080f5fb5f80.png)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1023:178,release,release,178,https://qupath.github.io,https://github.com/qupath/qupath/issues/1023,2,['release'],['release']
Deployability,"* [x] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [ ] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [ ] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [ ] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**. Redundancy in if-else condition to throw IOException in [ImageWriteTools.java](https://github.com/qupath/qupath/blob/6b8bafc566356fe9b97770fb88227e9e768f14da/qupath-core/src/main/java/qupath/lib/images/writers/ImageWriterTools.java#L176). `		; ```; if (firstException == null && firstException == null); 			throw new IOException(""Unable to write "" + path + ""! No compatible writer found."");; 		else; 			throw new IOException(""Unable to write "" + path + ""!"", firstException);; 	}; ```; `. **Expected behavior**; A",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/816:177,release,release,177,https://qupath.github.io,https://github.com/qupath/qupath/issues/816,2,['release'],['release']
Deployability,"* [x] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [x] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [x] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**. On macOS 10.15.4, QuPath 0.2.3, compressed, tiled tiff images do not load correctly: only the top-left corner tile appears, the rest of the image is black. macOS Preview shows the same incorrect behaviour. Perhaps QuPath on macOS is using the platform libtiff rather than bundling its own?. **To Reproduce**. Download this image: . http://www.rollthepotato.net/~john/tiled-jpeg-tiff-pyramid.tif. Start QuPath 0.2.3 on macOS Catalina. Select File / Open .... Select the image and press OK. Only a small white tile in the top-left appears. I tried a few more things:. - If you use homebrew's tiffcp to transform the image to uncompressed tiled, it works (`tiffcp -c none x.tif y.tif`, then open `y.tif` in QuPath); - macOS Preview shows the same behaviour (just displays one tile); - the same image loads fine into `eog` on Ubuntu 20.04, image preview on win10, gimp on ubuntu. **Desktop (please complete the following information):**; - macOS 10.15.7; - QuPath 0.2.3. **Additional context**. Some more notes in this issue:. https://github.com/libvips/libvips/issues/1862",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/627:177,release,release,177,https://qupath.github.io,https://github.com/qupath/qupath/issues/627,2,['release'],['release']
Deployability,"* [x] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [x] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [x] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; I encountered some reproducible crashes on macOS (Macbook Air, M1) when running the below script for ~100 images within a project. The script will run fine at first. After ~100 images, an exception will be thrown. And after a few more executions, the app will crash. > ERROR: unable to create native thread: possibly out of memory or process/resource limits reached"". . **To Reproduce**. ```groovy; import qupath.lib.gui.viewer.overlays.HierarchyOverlay; import qupath.lib.gui.images.servers.RenderedImageServer. def viewer = getCurrentViewer(); def imageData = getCurrentImageData(). def name = GeneralTools.getNameWithoutExtension(imageData.getServer().getMetadata().getName()); def pathOutput = <output_path>. double requestedPixelSize = 15; double downsample = requestedPixelSize / imageData.getServer().getPixelCalibration().getAveragedPixelSize(). def display = qupath.lib.display.ImageDisplay.create(imageData); def server = new RenderedImageServer.Builder(imageData); .display(display); .downsamples(downsample); .layers(new HierarchyOverlay(viewer.getImageRegionStore(), viewer.getOverlayOptions(), imageData)); .build(). ```. **Expected behavior**; The above script can run for the whole project without crashing. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: macOS (MacBook Air, M1); - QuPath Version: 0.5.1-arm64. **Additional context**. Stack trace; ```; ERROR: unable to create native thread: poss",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1561:177,release,release,177,https://qupath.github.io,https://github.com/qupath/qupath/issues/1561,2,['release'],['release']
Deployability,"* convenience as I don't scroll the image side to side (I use the move tool) and prefer using the mouse wheel for zooming. > I think (but haven't thoroughly checked) that the middle button should be less troublesome, partly because Mac mice don't have middle buttons. Of the two proposed changes (side to side tool selection, middle button to come back to the previously selected tool), the middle button is the one I would say is the more useful one. > But I remain a bit apprehensive about needing a debounce delay, and worry about adding even more complexity to the various event filters and handlers that are active when interacting with the viewer. I agree that debounce should really be part of the OS. QuPath shouldn't be blamed for not working quite right with a broken mouse. > Can you say a bit more about how useful you've found this, and when?. * First the one I found most useful: For me, this feature really shines when I need to draw lots of small regions for a pixel classifier. I draw either rectangles or use the polygon tool and yes, I could just try and remember that ""m"" is for move, ""r"" is for rectangle and ""p"" is for polygon. From my testing, I just find using the middle button more practical.; * Side-to-side selection: That came as an afterthought after implementing the middle button. I then use it because it's there, but honestly, the keyboard shortcuts *do* make sense.; * Debounce: Like I said, it helps with worn out buttons, but this isn't normally something anyone will have issues with. I'll keep it at the back of my mind and let you know if there is a real test case for including it in QuPath. > The option remains to add the functionality through an extension or startup script, to give it a bit more time before possibly integrating it into the core software later. I'm all for this. What I can do now is scale back the PR to ""middle button functionality"" (no side-to-side or debounce), and also remove any logging that isn't strictly necessary. Cheers,; Egor",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1312815565:2664,integrat,integrating,2664,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1312815565,1,['integrat'],['integrating']
Deployability,"**Describe the bug**; Building the newly released QuPath failed for me, I think because I had previously built an unreleased version of QuPath. ```; $ ./gradlew createPackage -Ppackager=/path/to/jpackage. FAILURE: Build failed with an exception. * What went wrong:; Could not open settings remapped class cache for excpwkpjzwio43djg1qkbjnq0 (~/.gradle/caches/5.0/scripts-remapped/settings_e1p4q7yyg2efzivqbknt4uiri/excpwkpjzwio43djg1qkbjnq0/settingsa9190c3ddc71e1450eb3f3e7bc6a334f).; > Could not open settings generic class cache for settings file '~/.../qupath/settings.gradle' (~/.gradle/caches/5.0/scripts/excpwkpjzwio43djg1qkbjnq0/settings/settingsa9190c3ddc71e1450eb3f3e7bc6a334f).; > BUG! exception in phase 'semantic analysis' in source unit '_BuildScript_' Unsupported class file major version 57. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. BUILD FAILED in 0s; ```. **To Reproduce**; Not sure. . **Expected behavior**; Build to succeed. **Desktop (please complete the following information):**; - OS: macOS; - QuPath Version v0.2.0-m1",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/281:41,release,released,41,https://qupath.github.io,https://github.com/qupath/qupath/issues/281,1,['release'],['released']
Deployability,"**Describe the bug**; Create a box annotation of the entire slide and run positive cell detection. Some slides work fine, others seem to just stop with no error. . **To Reproduce**; Steps to reproduce the behavior:; 1. Go to 'Analyze' -> Cell Detection ->Positive Cell Detection; 2. Accept defaults.; 3. Runs with no errors. . **Expected behavior**; A full slide with every cell detected and classified. . **Screenshots**; ![image](https://user-images.githubusercontent.com/14006401/135633690-717d4fc9-6010-4de6-b235-54bd3dc98ea6.png). **Desktop (please complete the following information):**; - OS: Windows, 64GB RAM, 32 core processor, Nvidia GTX1060 with CUDA 11.1 installed.; - QuPath Version 3.0. **Additional context**; RAM usage at around 60%, ; No plugins loaded after initial install.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/828:668,install,installed,668,https://qupath.github.io,https://github.com/qupath/qupath/issues/828,2,['install'],"['install', 'installed']"
Deployability,"**Describe the bug**; In QuPath 0.2.2, the maximum memory setting (Help > Show Setup Options > Maximum Memory) does not save/recall my input. It goes back to half my ram every time, no matter what I type. It loses it after a restart, or even if I open that menu again immediately after hitting Apply. . **Desktop (please complete the following information):**; - OS: Windows 10; - QuPath Version 0.2.2, tested on both the .zip and the .msi install",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/582:440,install,install,440,https://qupath.github.io,https://github.com/qupath/qupath/issues/582,1,['install'],['install']
