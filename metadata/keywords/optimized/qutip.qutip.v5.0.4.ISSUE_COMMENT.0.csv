quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Availability," 50-branch `if/elif` (in the bad cases) based on the name. `QubitCircuit` shouldn't need the million `_gate_resolved` functions - if there's a `Gate` class, instances of that (whether done by subclass or composition) should be supplying it (though the lookup table is a good choice under the circumstances). Given how `circuit.py` currently organises its data, it feels like you have to introduce some seemingly arbitrary splits to keep CodeClimate happy, but I'd argue the problem is the data structure, and CodeClimate is right to complain about the complexity. In stuff like compilers, there's a reason code compilers do parsing->verification->optimisation, with several passes in the last one, and transform things internally into a very strict intermediate representation at every step. `Qobj._repr_latex_` was like this - the `master` version is claimed to be like ""78"" complexity, but I'd be prepared to bet CodeClimate would have the `dev.major` version less than 10 and I think the output is near byte-for-byte identical. The change is that the `master` version basically reimplements the same algorithm 4 times with complex, split up for loops (not to mention that for some reason the alignment and new-line characters are considered part of formatting a number?). The `dev.major` version first decides if it's going to truncate the rows and/or columns, then it just calls a formatter on each row it decided it wants rendering with a special value to say when it should output a truncation character, and then joins the rows together. Obviously it's not _always_ the data structure - e.g. in `propagator` the branching to choose an evaluation method is fine, but once it's chosen, it should delegate to specialised methods. That way, the maintainer can verify the branching paths with a nice top-down overview without 50 lines of specialised logic inbetween each one, then you can verify each specialised path independently. If you did that, I'm sure the ""complexity"" would drop to like 10.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1447#issuecomment-782249555:3256,down,down,3256,https://qutip.org,https://github.com/qutip/qutip/pull/1447#issuecomment-782249555,1,['down'],['down']
Availability," > 'open', open)(__file__);code=f.read().replace('\r\n',; > '\n');f.close();exec(compile(code, __file__, 'exec'))"" install; > --record /tmp/pip-lnsaamvm-record/install-record.txt; > --single-version-externally-managed --compile"" failed with error code; > 1 in /tmp/pip-build-n7ekqm4y/qutip/|; >; > Then I tried easy_install, which gave me:; >; > |Processing qutip Writing /home/jakeargent/qutip/setup.cfg Running; > setup.py -q bdist_egg --dist-dir; > /home/jakeargent/qutip/egg-dist-tmp-9_egnp34 Installing without the; > fortran mcsolver. In file included from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; > from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; > from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11, from; > qutip/cy/spmatfuncs.c:27:; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61:; > fatal error: limits.h: No such file or directory #include_next; > <limits.h> /* recurse down to the real one */ ^ compilation; > terminated. In file included from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; > from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; > from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11, from; > qutip/cy/spmatfuncs.c:27:; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61:; > fatal error: limits.h: No such file or directory #include_next; > <limits.h> /* recurse down to the real one */ ^ compilation; > terminated. error: Setup script exited with error: Command ""gcc; > -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes; > -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC; > -Wformat -Wformat-security -fno-omit-frame-pointer; > -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions; > -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error; > -Wp,-D_REENTRANT -fPIC; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639#issuecomment-275734243:1510,down,down,1510,https://qutip.org,https://github.com/qutip/qutip/issues/639#issuecomment-275734243,1,['down'],['down']
Availability," AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_brmesolve_td.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_brtools.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________ ERROR collecting qutip/tests/test_control_pulseoptim.py ____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_correlation.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:2554,ERROR,ERROR,2554,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_dimensions.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_eigenstates.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________ ERROR collecting qutip/tests/test_enr_state_operator.py ____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_entropy.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:5865,ERROR,ERROR,5865,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_operators.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_parallel.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________ ERROR collecting qutip/tests/test_partial_transpose.py ____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_piqs.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:13907,ERROR,ERROR,13907,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; ___________ ERROR collecting qutip/tests/test_control_pulseoptim.py ____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_correlation.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_countstat.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_cqed.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:3505,ERROR,ERROR,3505,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; ____________ ERROR collecting qutip/tests/test_partial_transpose.py ____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_piqs.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_propagator.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_ptrace.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:14856,ERROR,ERROR,14856,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_stochastic_me.py ______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_stochastic_se.py ______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_subsys_apply.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_superop_reps.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:25261,ERROR,ERROR,25261,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_stochastic_se.py ______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_subsys_apply.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_superop_reps.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_superoper.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:25734,ERROR,ERROR,25734,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_subsys_apply.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_superop_reps.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_superoper.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_td_formats.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:26209,ERROR,ERROR,26209,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_superop_reps.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_superoper.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_td_formats.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_tensor.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:26681,ERROR,ERROR,26681,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_cy_structs.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_dimensions.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_eigenstates.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________ ERROR collecting qutip/tests/test_enr_state_operator.py ____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:5396,ERROR,ERROR,5396,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_td_formats.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_tensor.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_three_level.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_utilities.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:27627,ERROR,ERROR,27627,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_countstat.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_cqed.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_cy_structs.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_dimensions.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:4450,ERROR,ERROR,4450,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_brtools.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________ ERROR collecting qutip/tests/test_control_pulseoptim.py ____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_correlation.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_countstat.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:3031,ERROR,ERROR,3031,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_entropy.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_expect.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_fastsparse.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_fileio.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:7288,ERROR,ERROR,7288,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_random.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_rhs_reuse.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_scattering.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sesolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:20532,ERROR,ERROR,20532,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sp_eigs.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sparse.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_spinchain.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_spmath.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:22425,ERROR,ERROR,22425,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_spmath.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_states.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_steadystate.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_stochastic_me.py ______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:23843,ERROR,ERROR,23843,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_tensor.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_three_level.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_utilities.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_wigner.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; !!!!!!!!!!!!!!!!!!! Interrupted: 60 errors du",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:28101,ERROR,ERROR,28101,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_cqed.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_cy_structs.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_dimensions.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_eigenstates.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________ ERROR collecting qutip/tests/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:4923,ERROR,ERROR,4923,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_gates.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_graph.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_heom_solver.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_interpolate.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:9653,ERROR,ERROR,9653,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_graph.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_heom_solver.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_interpolate.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_mcsolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:10126,ERROR,ERROR,10126,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_rand.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_random.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_rhs_reuse.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_scattering.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:20060,ERROR,ERROR,20060,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_mkl.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_openmp.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_operators.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_parallel.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________ ERROR collecting qutip/tests/tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:12965,ERROR,ERROR,12965,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_qpt.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________ ERROR collecting qutip/tests/test_qubit_evolution.py _____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_qubitcircuit.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_qubits.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:18166,ERROR,ERROR,18166,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," `/qutip/tests` (I originally didn't like it, but I now see more and more benefits of the `/src` (or `/lib`) convention in Python projects).; - the current `qutip/tests` should entirely become `/test/qutip`; - a new `/src/qutip/test` becomes a fully-supported _public_ module, including base classes (such as the data-layer mixins) and things like that. We'd need to be careful, because reducing your possibilities for flexibility in testing generally sounds like a bad idea to me, but if we take care to be very limited, it could work. I suspect you won't be able to import the test suite from inside `qutip.core.data` because of cyclical dependencies, which is probably a good thing - it'll force us to put the structure the right way round immediately. For an idea pretty far out of left field:; - the data layer tests should really _discover_ the specialisations rather than us needing to specify them (this is true regardless of this PR); - if so, in the new form, we _could_ directly export this part of the test suite from `qutip.test` (our test suite would import this as well), and add a little bit of logic to allow filtering of which tests need to be run (class decorators, probably); - downstream packages could then test just by importing our classes and disabling any specialisations that are only on internal data-layer objects. I'm not 100% sure how I feel about this, but it's plausible - we'd still be able to add extra methods in our own test suite if we wanted them, because we could just derive from the classes, rather than defining the names into the test suite in those cases. ---. About us breaking downstream CI: having been a maintainer of QuTiP and now Qiskit, I have a deep-rooted hatred for any upstream package that forces CI failures on its dependents, because it _requires_ the lower packages to move ""fix CI"" way up to the top of their priority list; you can't merge _anything_ until CI is running again, which is very frustrating. It messes with all your workflows.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1723#issuecomment-979917075:1458,down,downstream,1458,https://qutip.org,https://github.com/qutip/qutip/pull/1723#issuecomment-979917075,3,"['down', 'failure']","['downstream', 'failures']"
Availability," a while. Again, this certainly isn't an unsolvable problem: having versioning in the interface API is one solution to some of these problems. ---. For greater discussion, here's an alternate approach: instead of objects defining `__qutip_qobj__`, instead we expose an entry-point `qutip.Qobj.register_conversion_function(converter, type, priority, version=None)`, and downstream libraries register functions rather than defining methods on their classes. The logic inside the `Qobj` constructor remains approximately the same as what you suggest. I think TensorFlow does something a little more similar to this? (I'm not very familiar with it at all.). Advantages of this over a `__qutip_qobj__` magic method:; - Users aren't limited to what libraries define for them, but can add their own conversions or override library ones if they don't like them. I actually see this as being closer to Julia's dispatch, or Rust's `impl for`.; - It doesn't involve weird namespacing, or anything like that, and doesn't require downstream classes to carry around additional slots. It's less an issue for classes that define `__slots__` since those are frozen methods, but extra methods adds a minor amount vtable weight for most libraries, and makes their class definitions more complex.; - Control between different versions is perhaps a little easier (though a minor point): this _feels_ easier to separate out different versions, and detect what to register as the conversion function with QuTiP. This is a particular advantage for Python classes compiled as C-extensions (like from C or Cython), which typically don't allow assigning methods dynamically.; - A library could even register multiple versions of the conversion function with us, and let QuTiP handle API versioning centrally, rather than requiring downstream libraries to roll their own checks.; - We're basically already set up to do this in `dev.major` already. We'd have to modify our procedures a little bit (we're mostly concerned with cons",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691:5890,down,downstream,5890,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691,1,['down'],['downstream']
Availability, attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53190,ERROR,ERROR,53190,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability, attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53272,ERROR,ERROR,53272,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability, attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53928,ERROR,ERROR,53928,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability, attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54748,ERROR,ERROR,54748,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability," conference may help you get an overview (; > > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > > Github Project page for a collection of related issues and ongoing Pull; > > Requests.; > > Expected outcomes; > >; > > - More devices defined in the qutip.qip.device module. At the moment,; > > we have two models: spin chain and cavity QED. We would like to include; > > some other commonly used planform such as Superconducting system, Ion; > trap; > > system or silicon system. Each model will need a new set of control; > > hamiltonian and a compiler that find the control pulse of a quantum gate.; > > This part is gonna involve some physics and study of commonly used; > hardware; > > platforms. The related code can be found in qutip.qip.device and; > > qutip.qip.compiler; > > - Refactoring the circuit compiler to allow simple pulse scheduling,; > > e.g. Restriction one pulses that can be turned on at the same time.; > > - Features to perform error mitigation techniques in QuTiP, such as; > > zero-error extrapolation.; > > - APIs to allow import quantum circuits from other software packages; > > or commonly used language e.g. through quantum assembly language (qasm); > >; > > ------------------------------; > >; > > Also, the last outcomes have some overlap with the last project. Although; > > I also find this circuit importation very important, I guess two projects; > > should not have overlap if they are both selected.; > >; > > —; > > You are receiving this because you are subscribed to this thread.; > > Reply to this email directly, view it on GitHub; > > <; > https://github.com/qutip/qutip/issues/1184?email_source=notifications&email_token=ADPF67A5MSYZVSDKCZD73LTREGE2LA5CNFSM4KZUPCQ2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IPQGYLA; > >,; > > or unsubscribe; > > <; > https://github.com/notifications/unsubscribe-auth/ADPF67EWECDUIOQMTKK2N2DREGE2LANCNFSM4KZUPCQQ; > >; > > .; > >; >; >; > —; > You are receiving this because you authored t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:6433,error,error,6433,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553,2,['error'],['error']
Availability," current test of superoperator representations uses `choi_to_kraus` which also calls `scipy.linalg.eig`. Here is a file `kraus.py` that can reproduce these segfaults semi-reliably (may need to run it a few times to get it to trigger):. ```python; import qutip. s = qutip.rand_super(); c = qutip.to_choi(s); k = qutip.to_kraus(c); ```. For example, here's a similar command on this file:. ```; Debug memory block at address p=0x7f98cc467db0: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7f98cc476def are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7f98c9d018e0). Current thread 0x0000000109fe85c0 (most recent call first):; <no Python frame>; Abort trap: 6; ```. So these both use `scipy.linalg.eig`, which is suspicious. ## Valgrind checks. To see if I could track it down, I had a go with valgrind. This isn't guaranteed to find everything, because I'm not using a debug build of Python, and Python also typically optimises small allocations by using a custom allocator into some pre-allocated space it manages itself - invalid writes that still fall within this may not get detected by valgrind. Here is the output of `valgrind` running on the `kraus.py` file I wrote in the previous section: [kraus_valgrind.txt](https://github.com/qutip/qutip/files/6370180/kraus_valgrind.txt) (note I filtered out like 30,000 errors that stem from Python's internal memory management - they're nothing to worry about, they're just what happens when you have your own allocator). The important part is. ```; ==54133== Invali",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:4695,error,error,4695,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,1,['error'],['error']
Availability," factor 2 and 30 in speedup from last time I ran them, which was consistent with times obtained by @Ericgig and saved in the folder. . I am on Python 3.7.3, I recently updated OS from High Sierra to Mojave, plus some other updates in scipy and numpy, and reinstalled conda, so I am curious to see if these speedups are machine independent, which would be great. My specs; ```; Software	Version; QuTiP	4.4.0.dev0+e1639f73; Numpy	1.16.4; SciPy	1.2.1; matplotlib	3.1.0; Cython	0.29.8; Number of CPUs	2; BLAS Info	INTEL MKL; IPython	7.5.0; Python	3.7.3 (default, Mar 27 2019, 16:54:48) [Clang 4.0.1 (tags/RELEASE_401/final)]; OS	posix [darwin]; Mon Jun 10 21:16:02 2019 JST; ```; Some details:; In cell 6 of development-ssesolver-new-methods, the running time went from over 160 seconds to 6 seconds (x25 speedup). Total run time in cell 21 is now down to 14.22s from 79.46s, cell 24/25 of is now 1.4 seconds down from 14.22s in `smesolve`. `ssesolve` in cell 4 is down from 164.50s to 11.06s. Cell 6 is down to 11.48s from 250s. The next cell checking all solver methods in `ssesolve` is down from 80s to 24s. In the notebook with new smesolve methods, cell 11 with multiple time dependence in sc_ops now runs in 69s instead of 171s. . Also, the benchmarking of the different methods now reads; ```; {'solver': 'euler-maruyama'}; Total run time: 0.21s; Total run time: 0.25s; Total run time: 0.30s; Total run time: 0.38s; Total run time: 0.45s; Total run time: 0.55s; Total run time: 0.67s; Total run time: 0.81s; {'solver': 'platen'}; Total run time: 0.70s; Total run time: 0.90s; Total run time: 1.13s; Total run time: 1.15s; Total run time: 1.41s; Total run time: 1.66s; Total run time: 2.03s; Total run time: 2.47s; {'solver': 'pc-euler'}; Total run time: 0.38s; Total run time: 0.46s; Total run time: 0.58s; Total run time: 0.70s; Total run time: 0.84s; Total run time: 1.00s; Total run time: 1.26s; Total run time: 1.49s; {'solver': 'milstein'}; Total run time: 0.31s; Total run time: 0.39s; Total",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/990#issuecomment-500396003:1441,down,down,1441,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003,1,['down'],['down']
Availability, has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51960,ERROR,ERROR,51960,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability," has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_wigner.py - AttributeError: module 'qutip' has no attribu...; !!!!!!!!!!!!!!!!!!! Interrupted: 65 errors during collection !!!!!!!!!!!!!!!!!!!; ======================== 2 warnings, 65 errors in 2.53s ========================; The command ""pytest",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:55240,ERROR,ERROR,55240,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability," in the previous section: [kraus_valgrind.txt](https://github.com/qutip/qutip/files/6370180/kraus_valgrind.txt) (note I filtered out like 30,000 errors that stem from Python's internal memory management - they're nothing to worry about, they're just what happens when you have your own allocator). The important part is. ```; ==54133== Invalid write of size 8; ==54133== at 0x10AFAFA8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54133== by 0xFFFFFFFF: ???; ==54133== by 0x1162E4DEF: ???; ==54133== by 0x1162E3A5F: ???; ==54133== by 0x10550EB3F: ???; ==54133== by 0x3FEFFFFFFFFFFFFF: ???; ```. Obviously I don't have the debugging symbols for MKL, so it's pretty hard to say where exactly it's coming from, but it is at least clearly inside that library. I ran `valgrind` on the `Malloc.py` file above, and get the exact same invalid write, which is promising. So the most likely public Python call is `scipy.linalg.eig`. ## Minimal reproducer. Ok, so now let me cut it down to a minimum `eig.py`:. ```python; import numpy as np; import scipy.linalg. x = np.random.rand(25, 25) + 1j*np.random.rand(25, 25); scipy.linalg.eig(x); ```. Note that this file does not even use `qutip`. You can run `PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py`, and it will occasionally trigger a segfault (it happens to me about 1 in 5 times). It's not always the same message as above, e.g.:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py; python(54517,0x10a5505c0) malloc: Incorrect checksum for freed object 0x7fe6cb4150e0: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(54517,0x10a5505c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ```. However if I run it within valgrind:; ```; jake@tauros$ valgrind --suppressions=valgrind-python.supp python -Xfaulthandler eig.py; ==54530== Memcheck, a memory error detector; ==54530== Copyright (C) 2002-2017, and GNU",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:6392,down,down,6392,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,1,['down'],['down']
Availability," it changed.; Compiling qutip/cy/stochastic.pyx because it changed.; Compiling qutip/cy/sparse_utils.pyx because it changed.; Compiling qutip/cy/graph_utils.pyx because it changed.; Compiling qutip/cy/interpolate.pyx because it changed.; Compiling qutip/cy/spmath.pyx because it changed.; Compiling qutip/cy/heom.pyx because it changed.; Compiling qutip/cy/math.pyx because it changed.; Compiling qutip/cy/spconvert.pyx because it changed.; Compiling qutip/cy/ptrace.pyx because it changed.; Compiling qutip/cy/testing.pyx because it changed.; Compiling qutip/cy/brtools.pyx because it changed.; Compiling qutip/cy/brtools_testing.pyx because it changed.; [ 1/13] Cythonizing qutip/cy/brtools.pyx. Error compiling Cython file:; ------------------------------------------------------------; ... DTYPE = np.float64; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:2:10: cimported module has no attribute 'float64'. Error compiling Cython file:; ------------------------------------------------------------; ... DTYPE = np.float64; ctypedef np.float64_t DTYPE_t. ITYPE = np.int32; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:5:10: cimported module has no attribute 'int32'. Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.float64_t DTYPE_t. ITYPE = np.int32; ctypedef np.int32_t ITYPE_t. CTYPE = np.complex128; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:8:10: cimported module has no attribute 'complex128'. Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.int32_t ITYPE_t. CTYPE = np.complex128; ctypedef np.complex128_t CTYPE_t. CTYPE = np.int64; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:11:10: cimported module has no attribute 'int64'; Traceback (most recent call last):; File ""./setup.py"", line 23",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-317495769:1194,Error,Error,1194,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-317495769,1,['Error'],['Error']
Availability," it is in the scope of qutip to try and make that easier, or guide users to do that. The philosophy here is, if the user can get the `mpi4py.futures.MPIPoolExecutor` to work, then they can also use `mpi_pmap` in qutip. However, I did show in the tutorial notebook explicitly as an example how it works on the RIKEN cluster, and I refer to the mpi4py users guide. That being said, we do want to set up an automated test for this, and we do want to understand what went wrong in our initial attempts to set up those tests. The two main problems we encountered were (a) if mpi4py is installed with pip, all mpi_pmap calls hang; (b) if it is installed with conda, test_map_pass_error hangs sometimes.; The difference between pip and conda comes from the fact that mpi4py requires an MPI implementation. If we use mpi4py's GH workflow to install it with pip, it installs MPICH, and with conda, it installs OpenMPI by default. I noticed that in both cases where mpi_pmap hangs, there *are* error messages, but they are captured by pytest and then never printed because the program hangs... Regarding problem (a), in short, it looks like an MPICH bug to me. I thus decided to use OpenMPI instead, and added `conda install ""openmpi<5"" mpi4py` to just one of our test runs (the python 3.12 one). Regarding problem (b), the problem was that we requested more processes than the default number of slots available. With OpenMPI, the default number of slots available is the number of physical cpu cores (which seems to be 2 on the machine running our tests, leaving only one slot for a worker process). In the `parallel` module, if num_cpus is not provided, it defaults to `available_cpu_count()` (which is 4 on this machine, since there are 4 logical cpus). We could try to find a better default value for num_cpus for mpi_pmap, but I feel like writing that well would require deeper MPI knowledge than I have. What I did instead is, I tried to make it clear in the documentation that the default value might be ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296#issuecomment-1923102432:1177,error,error,1177,https://qutip.org,https://github.com/qutip/qutip/pull/2296#issuecomment-1923102432,1,['error'],['error']
Availability, no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54256,ERROR,ERROR,54256,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability," pytest tests/test_superop_reps.py; =========================================================================================== test session starts ============================================================================================; platform darwin -- Python 3.8.8, pytest-6.2.3, py-1.10.0, pluggy-0.13.1; rootdir: /Users/jake/code/qutip/qutip/qutip/tests, configfile: pytest.ini; plugins: rerunfailures-9.1.1; collected 15 items. tests/test_superop_reps.py ..F............ [100%]. ================================================================================================= FAILURES =================================================================================================; ____________________________________________________________________________________ TestSuperopReps.test_ChoiKrausChoi ____________________________________________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x11f1140d0>. Fatal Python error: Segmentation fault. Current thread 0x000000010c77b5c0 (most recent call first):; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 312 in _optimize_charset; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 120 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 607 in _code; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 768 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 304 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 252 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pygments/lexer.py"", line 424 in _process_regex; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pygments/lexer.py"", line 495 in _process_state; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pygments/lexer.py"", line 479 in _proce",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:1297,error,error,1297,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502,2,"['error', 'fault']","['error', 'fault']"
Availability," the markdown source code per email like this, but I’m not sure if it works as I expected. The following is the markdown source code:. -----------------------------------; ## 1. Error mitigation in QuTiP; From the QuTiP 4.5 release, the qutip.qip module now contains the noisy quantum circuit simulator (which was a GSoC project) providing enhanced features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `qutip.qip.device` and `qutip.qip.compiler`; - Refactoring the circuit compiler to allow simple pulse scheduling, e.g. Restriction one pulses that can",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940:1161,error,error,1161,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940,1,['error'],['error']
Availability," to install the latest release of QuTip on Ubuntu system. Since; > our workstation hasn't been connected to internet, I; > downloaded Anaconda3-2019.03-Linux-x86_64 and qutip-4.3.1.tar, and attempt; > to install from source code.; >; > Firstly I successfully installed Anaconda with the command:; > bash ~/Downloads/Anaconda3-2019.03-Linux-x86_64.sh; >; > Then in the conda environment I typed the command:; > python setup.py install; >; > I get the following error message:; >; > gcc -pthread -B /home/pz/anaconda3/compiler_compat -Wl,--sysroot=/; > -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -Iqutip/cy; > -I/home/pz/anaconda3/lib/python3.7/site-packages/numpy/core/include; > -I/home/pz/anaconda3/lib/python3.7/site-packages/numpy/core/include; > -I/home/pz/anaconda3/include/python3.7m -c qutip/cy/spmatfuncs.cpp -o; > build/temp.linux-x86_64-3.7/qutip/cy/spmatfuncs.o -w -O3 -march=native; > -funroll-loops; > gcc: error trying to exec 'cc1plus': execvp: No such file or directory; > error: command 'gcc' failed with exit status 1; >; > It seems the gcc compiler isn't correctly located? Or what else problem.; >; > I checked the gcc version on the workstation:; > gcc --version; > gcc (Ubuntu 8.3.0-6ubuntu1~18.10) 8.3.0; > Copyright (C) 2018 Free Software Foundation, Inc.; > This is free software; see the source for copying conditions. There is NO; > warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; >; > whereis gcc; > gcc: /usr/bin/gcc /usr/lib/gcc /usr/share/man/man1/gcc.1.gz; >; > How can I direct the installer to find the gcc compiler?; >; > Thanks!; > Best regards, Pu Zhang; > --; > Faculty at School of Physics, Huazhong University of Science and Technology; > Room 819 (N.), Yifu Science and Technology Building; > 1037 Luoyu Road, Wuhan, China; > E-mail: puzhang0702@hust.edu.cn <puzha@fotonik.dtu.dk>; > Homepage: www.researchgate.net/profile/Pu_Zhang4; > Phone: +86 18871860394; >; > —; > You are receiving this because you were mentioned.; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/946#issuecomment-501609220:1325,error,error,1325,https://qutip.org,https://github.com/qutip/qutip/issues/946#issuecomment-501609220,2,['error'],['error']
Availability," trying to work towards a PR. Indeed. I was just trying to play around with this. . > If we're going to do this (and we haven't decided if we will yet), we're going to need to get a lot of wide-ranging input from many different libraries. I completely agree with your approach. I’m simply trying to push for this to be something that will come out in a reasonable timeframe and not be something forgotten. > We've got to be concerned with backwards and forwards compatibility; what if a user wants to install and use QuTiP and a different library in the same environment without using them together, but can't even have them coexist because of version incompatibilities in optional conversion features?. I do understand your point, and I see how you want to be backward and forward compatible, however I don’t think that my proposal would break different tools in the same environment. What I propose would simply prevent `qutip.Qobj(otherlibraryobject)` from working (with an explicative error message) if `otherlibrary` does not support the same qobj interface version. Everything else would work the same. You can still import and use the two libraries independently without issues. It’s indeed possible to design around this and supporting at the same time different versions of the interface, however, and there’s value in doing so. > To me, this is absolutely one of the mistakes that Numpy made in their implementation, and we shouldn't be copying it. I don't know enough of the history behind numpy current api, but I see your point. however I'd like to reiterate that this is not what I am proposing. ; I think there is considerable difference between supporting arbitrary operations `new_obj = Qobj + netket_operator*5` (though if you are going to export dispatch hooks in `5.0`, this would be possible in a consistent way, I think) and `qutip.mesolve(netket_operator, ...)`. ; In the first, I do agree with your point that the nature python's `__add__/__radd__` is not commutative, leading",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830113742:1963,error,error,1963,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830113742,1,['error'],['error']
Availability," we missed your last comment, but Nathan just notified us. We will get it all sorted out by wednesday at most. I leave a todolist to keep track of everything that @Ericgig mentioned. To-do. * [x] Include some tests like test_sesolve.py --> **Included tests with random Hamiltonian, ising transverse field and SHO. Both for states and expectation values. Lacking a testing example for callable e_ops**. * [x] Why <code>krylov_dim=30?</code> ? --> **There was a subtle physical reason, but we conclude its better to leave it as a free input without a predefined variable.**. * [x] <code>tolerance</code>, <code>store_states</code> and <code>store_final_state</code> --> **Changed as an Options qutip class, now tolerance is <code>Options.atol</code> property**. * [x] <code>e_ops</code> should also take a callable or list of mixed function and <code>Qobj</code> --> **Added support**. * [x] Remove support for <code>np.ndarray</code> --> **Removed for qutip cleanliness**. * [x] Assertion errors to specififc errors --> **Modified.**. * [x] Check that psi0 is a ket --> **Added**. * [x] If both <code>store_states</code> and <code>store_final_state</code> are True there is a small bug --> **Fixed the store twice problem**. * [x] Infinite loop at stagnant =0 --> **Added a raise ValueError if its <0.**. * [x] __all__ should be defined to filter functions seen by the user --> **set to =<code>krylovsolve</code> and <code>lanczos_algorithm</code>**. * [x] Why not call <code>_make_partitions</code> directly instead of having this method --> **Removed when deprecating <code>KSolve</code> class**. * [x] tlist is already stored, are those needed? (lines 152-155) --> **Removed when deprecating <code>KSolve</code> class**; * [x] The Result has a tag to the solver that created it --> **Added**; * [x] If tlist is empty, you can just return the empty results. --> **Now it returns an empty <code>Results()</code> instance.**; * [x] Can you use the <code>eigh</code> in <code>qutip.sparse</code> . There",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1739#issuecomment-1039192650:1005,error,errors,1005,https://qutip.org,https://github.com/qutip/qutip/pull/1739#issuecomment-1039192650,2,['error'],['errors']
Availability," x = np.random.rand(25, 25) + 1j*np.random.rand(25, 25); scipy.linalg.eig(x); ```. Note that this file does not even use `qutip`. You can run `PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py`, and it will occasionally trigger a segfault (it happens to me about 1 in 5 times). It's not always the same message as above, e.g.:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py; python(54517,0x10a5505c0) malloc: Incorrect checksum for freed object 0x7fe6cb4150e0: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(54517,0x10a5505c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ```. However if I run it within valgrind:; ```; jake@tauros$ valgrind --suppressions=valgrind-python.supp python -Xfaulthandler eig.py; ==54530== Memcheck, a memory error detector; ==54530== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==54530== Using Valgrind-3.17.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info; ==54530== Command: python -Xfaulthandler eig.py; ==54530==; ==54530== Invalid write of size 8; ==54530== at 0x10ABF7A8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54530== by 0xFFFFFFFF: ???; ==54530== by 0x103124AFF: ???; ==54530== by 0x10312376F: ???; ==54530== by 0x10550F0BF: ???; ==54530== by 0x3FEFFFFFFFFFFFFF: ???; ```; the exact same. ## Further steps. I'm now reasonably convinced that this isn't directly an issue with QuTiP. I suspect it isn't an issue with `scipy` either, but I'm not sure - it looks like a slight overwrite in MKL on macOS, though it's also possible that `scipy` passes some invalid pointers when dropping down to BLAS/LAPACK. I get the impression that the next steps involve dropping down a level of abstraction, down to Cython to directly call scipy's wrappers, or even fully down to C and link directly against MKL. I _may_ have a look in the future, but I've had enough of it today for sure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:8183,down,down,8183,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,4,['down'],['down']
Availability,"""""""; .................................................................................................................................../Users/nathanshammah/github/qutip/qutip/control/optimizer.py:1070: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working; elif not isinstance(self.pulse_generator, collections.Iterable):; ..............................................................................................................................................................SSSSSS.......................................................................................................................Segmentation fault: 11. kills nosetests, which do not even start doing QuTiP's tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-496380658:714,fault,fault,714,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-496380658,1,['fault'],['fault']
Availability,"# Projects. Another option is to use the Projects section on GitHub, which I am testing for a couple of ongoing projects. The downside of this option is that only organization members / owners can add or edit projects. https://github.com/qutip/qutip/projects",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1132#issuecomment-563696592:126,down,downside,126,https://qutip.org,https://github.com/qutip/qutip/issues/1132#issuecomment-563696592,1,['down'],['downside']
Availability,"#1874, which was an alternative implementation to #1727 has been merged in dev.major. If someone here could try out the new feature (available in the dev.major branch) that would be greatly appreciated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/850#issuecomment-1134879355:133,avail,available,133,https://qutip.org,https://github.com/qutip/qutip/issues/850#issuecomment-1134879355,1,['avail'],['available']
Availability,"**Summary of what was done:**. - Changes in floquet_master_equation_rates to make it faster.; - Corrected transposition errors in _floquet_master_equation_tensor_ and changes to make it faster. I also removed a line so that the ME is solved in the interaction picture, this implies a different basis change in the _floquet_markov_mesolve_ function.; - Correction in _floquet_markov_mesolve_. As explained in the point above, the Floquet-Markov ME was not being solved in the interaction picture, therefore I modified _floquet_master_equation_tensor_ and modified the basis change in _floquet_markov_mesolve_. This modification requires an additional variable in the entry of _floquet_markov_mesolve_ which can not be chosen by default. For the moment, if this variable is not given and _floquet_basis=False_, then the density matrix or expectation values are returned in the interaction picture, in the computational basis, and a warning message is sent. ; - Added integration options in: _floquet_modes, floquet_modes_t, floquet_modes_table, floquet_states_t, floquet_modes_t, floquet_wavefunction_t, fsesolve, floquet_master_equation_rates, fmmesolve_; - Added test functions to verify the dissipative dynamics:; a) Compare _fmmesolve_ and _mesolve_ for the cases: (NO drive but dissipation) and (Drive but NO dissipation); b) Compare numerical and analytical matrix elements for a driven-dissipative TLS with RWA. There are some places where the code could be modified to optimize the running time, especially in the basis change in _floquet_markov_mesolve_.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1248#issuecomment-740126949:120,error,errors,120,https://qutip.org,https://github.com/qutip/qutip/pull/1248#issuecomment-740126949,1,['error'],['errors']
Availability,"**Update - Ignore this. This problem was because I called the file ""pyqtgraph"" which conflicted with the library name.**. > As I understand it, the new Mac M1 chips have an ARM-based architecture so there shouldn't be any compatible binary releases on conda yet for macos - I'm surprised conda even claimed to have solved the system. Maybe they've not updated to take the new chips into account either.; > ; > If you can, you might want to try building from source - you'll also need the Python package Cython, but this way should build all the binary components for your architecture. We know (#1395) that there's a minor problem with some hardware detection on the M1 macs at the moment, but you can comment out lines 48 and 49 of `qutip/hardware_info.py` to work around it.; > ; > None of us have one of the new macs, and I think we'll need a new release to get conda-forge updated. It might be a little while before we get that done, sorry. I have the same error on an Intel Mac (11.2.1) having installed pyqtgraph within PyCharm. ```; Connected to pydev debugger (build 203.7148.72); Traceback (most recent call last):; File ""<frozen importlib._bootstrap>"", line 991, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 975, in _find_and_load_unlocked; File ""<frozen importlib._bootstrap>"", line 671, in _load_unlocked; File ""<frozen importlib._bootstrap_external>"", line 783, in exec_module; File ""<frozen importlib._bootstrap>"", line 219, in _call_with_frames_removed; File ""/Users/ben/Library/Application Support/JetBrains/PyCharm2020.3/scratches/pyqtgraph.py"", line 3, in <module>; pg.mkQApp(); AttributeError: partially initialized module 'pyqtgraph' has no attribute 'mkQApp' (most likely due to a circular import). ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-776702708:961,error,error,961,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-776702708,1,['error'],['error']
Availability,"+1 for removing ineffective compiler flags. Neutral about implied/express ARM support (fine if there is no additional maintenance burden, probably not worth it otherwise).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/311#issuecomment-72574232:118,mainten,maintenance,118,https://qutip.org,https://github.com/qutip/qutip/pull/311#issuecomment-72574232,1,['mainten'],['maintenance']
Availability,", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Nonsymmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 89, in test_sparse_nonsymmetric_reverse_permute; > B=sparse_reverse_permute(x,rperm,cperm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Bandwidth; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 144, in test_sparse_bandwidth; > out2=sparse_bandwidth(B); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 603, in sparse_bandwidth; > return /sparse/bandwidth(A.indices, A.indptr, nrows); > File ""sparse_utils.pyx"", line 42, in ; > qutip.cy.sparse_utils./sparse/bandwidth (qutip/cy/sparse_utils.c:1458); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > —; > Reply to this email directly or view it on GitHub ; > https://github.com/qutip/qutip/issues/73.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/73#issuecomment-35583331:2106,ERROR,ERROR,2106,https://qutip.org,https://github.com/qutip/qutip/issues/73#issuecomment-35583331,1,['ERROR'],['ERROR']
Availability,"- 1, 2: Solvers expect list, not tuple. In a few places, we do not explicitly test for list but only extract the elements, so tuple should behave the same, but it's untested. In my tries with `mesolve` they seems to behave the same or raise error. - 3: `c_ops=[C_0, C_1, [(\hat{a}, f(t)), (\hat{b}, c(t))]]` should work in `mesolve` with `[(\hat{a}, f(t)), (\hat{b}, c(t))]` as the third collapse operator.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2065#issuecomment-1408604158:241,error,error,241,https://qutip.org,https://github.com/qutip/qutip/issues/2065#issuecomment-1408604158,1,['error'],['error']
Availability,- All builds fail a test regarding optimal control in `` fails with `AttributeError: 'TestPulseOptim' object has no attribute 'tmp_dirs'`.; - The MacOs build still exits with an error once it encounters `ptrace`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/972#issuecomment-484364190:178,error,error,178,https://qutip.org,https://github.com/qutip/qutip/pull/972#issuecomment-484364190,1,['error'],['error']
Availability,"- I agree that renaming the _inner_point_color variable is a good idea. - The case you mention of black point_color with style 'l' also occurs in V4 and is solved by defining the variable as a list, e.g., ['black'] (which also works with the changes I proposed). So basically I assumed it was an expected use case. - I asked this question about style 's' plotting two colors in issue #1974, since we are given the same colors for style 's' and 'm', and Neil suggested leaving it as is. The docstring in the add_points function already tells you to give a single color for style 's' and a list of colors for style 'm'. - The error you get using style 'm' with two colors is that you need to specify a color for each point (you have to pass to the function a list of colors of the same length as the length of the points). In view of this, I don't know which approach you prefer to apply, as it depends on the expected use case. Given that the code works, perhaps the priority would be to specify the expected use while defining as part of issue #1913 the modifications you consider appropriate (although maybe someone will catch it earlier if you define it as a new issue).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2308#issuecomment-1916739672:624,error,error,624,https://qutip.org,https://github.com/qutip/qutip/pull/2308#issuecomment-1916739672,1,['error'],['error']
Availability,- QuTiP already has some interpolation functions that can be compiled down into Cython. Is there some reason we need new ones? Does the new solver support the current interp functions?. - I don't see any changes / additions to unit tests. Are these still coming?. - The new `td_qobj` objects should be able to be passed to all the solvers. This is most easily done by just looking for a `td_qobj` instance and then grabbing the `Q_object` from it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/774#issuecomment-344648478:70,down,down,70,https://qutip.org,https://github.com/qutip/qutip/pull/774#issuecomment-344648478,1,['down'],['down']
Availability,----------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51550,ERROR,ERROR,51550,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51632,ERROR,ERROR,51632,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/cy/pyxbuilder.py 18 11 39%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/hardware_info.py 72 32 56%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/settings.py 24 2 92%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/utilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/tes,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:50812,ERROR,ERROR,50812,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,-py3.6-linux-x86_64.egg/qutip/settings.py 24 2 92%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/utilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51140,ERROR,ERROR,51140,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,". s = qutip.rand_super(); c = qutip.to_choi(s); k = qutip.to_kraus(c); ```. For example, here's a similar command on this file:. ```; Debug memory block at address p=0x7f98cc467db0: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7f98cc476def are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7f98c9d018e0). Current thread 0x0000000109fe85c0 (most recent call first):; <no Python frame>; Abort trap: 6; ```. So these both use `scipy.linalg.eig`, which is suspicious. ## Valgrind checks. To see if I could track it down, I had a go with valgrind. This isn't guaranteed to find everything, because I'm not using a debug build of Python, and Python also typically optimises small allocations by using a custom allocator into some pre-allocated space it manages itself - invalid writes that still fall within this may not get detected by valgrind. Here is the output of `valgrind` running on the `kraus.py` file I wrote in the previous section: [kraus_valgrind.txt](https://github.com/qutip/qutip/files/6370180/kraus_valgrind.txt) (note I filtered out like 30,000 errors that stem from Python's internal memory management - they're nothing to worry about, they're just what happens when you have your own allocator). The important part is. ```; ==54133== Invalid write of size 8; ==54133== at 0x10AFAFA8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54133== by 0xFFFFFFFF: ???; ==54133== by 0x1162E4DEF: ???; ==54133== by 0x1162E3A5F: ???; ==54133== by 0x10550EB3F: ???; ==54133== by 0x3FE",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:4989,down,down,4989,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,1,['down'],['down']
Availability,".36s; Total run time: 5.51s; Total run time: 6.58s; Total run time: 9.64s; Total run time: 10.74s; Total run time: 12.29s; {'solver': 'pc-euler-2'}; Total run time: 1.54s; Total run time: 1.86s; Total run time: 2.50s; Total run time: 2.79s; Total run time: 3.36s; Total run time: 4.03s; Total run time: 4.98s; Total run time: 6.56s; {'solver': 'explicit1.5'}; Total run time: 5.28s; Total run time: 6.35s; Total run time: 7.74s; Total run time: 8.99s; Total run time: 10.34s; Total run time: 12.41s; Total run time: 15.40s; Total run time: 21.40s; {'solver': 'taylor1.5'}; Total run time: 3.30s; Total run time: 3.85s; Total run time: 4.52s; Total run time: 5.63s; Total run time: 7.22s; Total run time: 8.72s; Total run time: 9.51s; Total run time: 11.84s; {'solver': 'taylor1.5-imp'}; Total run time: 5.43s; Total run time: 6.81s; Total run time: 7.60s; Total run time: 10.05s; Total run time: 11.88s; Total run time: 12.88s; Total run time: 15.63s; Total run time: 22.31s. ```; ; **Minor issue: plots breaking notebook rendering**; Jupyter Notebooks have a broken rendering when cells with plots are run; refreshing the notebook sometimes works fine. This is sometimes fixed in the first place by adding; ```; plt.show(); plt.close(); ```; but not always. Maybe we can have a look at this minor issue in the development notebooks. . **Documentation**; It would really increase the adoption rate if the API doc and User Guide could be updated to highlight the stochastic solvers and new methods. The development notebooks are so well written that drawing from their examples should be simple. . Congratulations @Ericgig for this refurbishment, improvement, optimization and thorough benchmarking investigations of the stochastic solvers, which I hope will be widely tested by @nwlambert @ajgpitch @quantshah (and @fminga) for robustness once merged in the development master branch. I am merging this and the montecarlo split PR, hoping there are no incompatibility issues (#990 --> #991 --> #969).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/990#issuecomment-500396003:6410,robust,robustness,6410,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003,1,['robust'],['robustness']
Availability,"00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7f98c9d018e0). Current thread 0x0000000109fe85c0 (most recent call first):; <no Python frame>; Abort trap: 6; ```. So these both use `scipy.linalg.eig`, which is suspicious. ## Valgrind checks. To see if I could track it down, I had a go with valgrind. This isn't guaranteed to find everything, because I'm not using a debug build of Python, and Python also typically optimises small allocations by using a custom allocator into some pre-allocated space it manages itself - invalid writes that still fall within this may not get detected by valgrind. Here is the output of `valgrind` running on the `kraus.py` file I wrote in the previous section: [kraus_valgrind.txt](https://github.com/qutip/qutip/files/6370180/kraus_valgrind.txt) (note I filtered out like 30,000 errors that stem from Python's internal memory management - they're nothing to worry about, they're just what happens when you have your own allocator). The important part is. ```; ==54133== Invalid write of size 8; ==54133== at 0x10AFAFA8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54133== by 0xFFFFFFFF: ???; ==54133== by 0x1162E4DEF: ???; ==54133== by 0x1162E3A5F: ???; ==54133== by 0x10550EB3F: ???; ==54133== by 0x3FEFFFFFFFFFFFFF: ???; ```. Obviously I don't have the debugging symbols for MKL, so it's pretty hard to say where exactly it's coming from, but it is at least clearly inside that library. I ran `valgrind` on the `Malloc.py` file above, and get the exact same invalid write, which is promising. So the most likely public Python call is `scipy.linalg.eig`. ## Minimal reproducer. Ok, so now let me cut it down to a minimum `eig.py`:. ```python; import numpy as np; import scipy.linalg. x = np.random.rand(25, 25) + 1j*np.random.rand(25, 25); scipy.linalg.eig(x); ```. Note that this file does not even use",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:5535,error,errors,5535,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,1,['error'],['errors']
Availability,1+0ffec37-py3.6-linux-x86_64.egg/qutip/hardware_info.py 72 32 56%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/settings.py 24 2 92%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/utilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:50976,ERROR,ERROR,50976,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"1. You would not get the correct jump statistics.; 2. If you dont jump at the correct time, then you introduce another source of error. Then the next jump time will be affected and so on.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/503#issuecomment-232399813:129,error,error,129,https://qutip.org,https://github.com/qutip/qutip/issues/503#issuecomment-232399813,1,['error'],['error']
Availability,"1. inside the ""Actions"" tab at the top of the GitHub page, you will only see workflows that are present in the code in the default git branch. `dev.major` isn't QuTiP's default branch, so the workflows won't appear immediately after this is merged, only when the `.github/workflows/build.yml` file also exists in `master`. 2. nothing prevents you from running the workflow on a fork, and there's no way and no reason to prevent this - it's also how I tested it. If you did run it on a fork, you'd be using your own GitHub Actions credits (it doesn't cost us anything because we're an open-source project). Only qutip/qutip knows the secret to publish to PyPI, so no fork can succeed on that. The branch check here serves two purposes: the first is that I needed some ""tickbox"" to let the admin decide at runtime whether they needed to publish the package or just build the wheels for personal download; the second is that we release off release branches, not master, so there needed to be an input to say _which_ branch should be built. 3. it's not 100% necessary, but it's the right thing to do. It decouples the project data from the setup code, which makes it much easier to modify both, and allows other tools to access the data. There are other PEPs in the works as well that will move all this data into `pyproject.toml`, rather than just `setup.cfg`. 4. oh, that's useful. I didn't really know or look into it, because it was only a temporary thing anyway. I might actually retire this PR and make it against `master` instead. It's functionally the same as this one, and most of the diff is the same, except that its `setup.py` is better organised, like Simon suggested.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429#issuecomment-801289045:893,down,download,893,https://qutip.org,https://github.com/qutip/qutip/pull/1429#issuecomment-801289045,1,['down'],['download']
Availability,"14798043-0.36381018j, 0.19057482+0.j ]],. [[ 0.74030166+0.j , -0.42252924+0.11715014j],; [-0.42252924-0.11715014j, 0.25969834+0.j ]],; [[ 0.76627252+0.j , 0.14479804+0.39765874j],; [ 0.14479804-0.39765874j, 0.23372748+0.j ]],; [[ 0.69965345+0.j , 0.4260361 -0.16920917j],; [ 0.4260361 +0.16920917j, 0.30034655+0.j ]],; [[ 0.80355468+0.j , 0.36706718-0.15204028j],; [ 0.36706718+0.15204028j, 0.19644532+0.j ]]]) . predictions=[mesolve(H,; Qobj(estados_val[i]),; time,list_Jump_op,options=Options(nsteps=1000000000)) for i in range(len(estados_val))]`. ```; `---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-26-ef5799d8412d> in <module>; 26 [ 0.36706718+0.15204028j, 0.19644532+0.j ]]]) ; 27 ; ---> 28 predictions=[mesolve(H,; 29 Qobj(estados_val[i]),; 30 time,list_Jump_op,options=Options(nsteps=1000000000)) for i in range(len(estados_val))]. <ipython-input-26-ef5799d8412d> in <listcomp>(.0); 26 [ 0.36706718+0.15204028j, 0.19644532+0.j ]]]) ; 27 ; ---> 28 predictions=[mesolve(H,; 29 Qobj(estados_val[i]),; 30 time,list_Jump_op,options=Options(nsteps=1000000000)) for i in range(len(estados_val))]. ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 270 func(0., v, *ode_args) + v; 271 ; --> 272 res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, options,; 273 progress_bar, dims=rho0.dims); 274 res.num_collapse = len(c_ops). ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, opt, progress_bar, dims); 515 ; 516 if not r.successful():; --> 517 raise Exception(""ODE integration error: Try to increase ""; 518 ""the allowed number of substeps by increasing ""; 519 ""the nsteps parameter in the Options class.""). Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605#issuecomment-879127553:2129,error,error,2129,https://qutip.org,https://github.com/qutip/qutip/issues/1605#issuecomment-879127553,2,['error'],['error']
Availability,"2dd4680 and b6dcc28 fix the occasional segfaults I was getting, I believe. The error in `reshape_csr` was probably the randomly appearing one - I assume that for it to cause a segfault, either the output CSR needed to have been allocated on the edge of allocated memory (and then I probably would have seen it in the stack trace with `faulthandler`), or it needed to be called on a sufficiently small matrix that `mem.PyMem_Malloc` allocated into Python stack memory such that the next byte after `out.row_index` pointed into freed Python memory, causing a checksum error on the next `PyMem_Malloc` that hit it, or `PyMem_Free` on a previously created object. I was able to track down where these were coming from by judicious use of `gcc -fsanitize`, although had we been using Cython's `typedmemoryview`, setting `boundscheck=True` would also have caught it. Likewise, the error in `permute.dimensions_csr` would have been caught by setting `cdivision=False`, but I just didn't think to try that. It's probably not worth swapping to memory views just because of this, though - I was able to find it easily enough with `AddressSanitizer`, and memory views have a very non-trivial overhead on initialisation for our use case.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1332#issuecomment-668847474:79,error,error,79,https://qutip.org,https://github.com/qutip/qutip/pull/1332#issuecomment-668847474,5,"['down', 'error', 'fault']","['down', 'error', 'faulthandler']"
Availability,"4.0.2 is now the latest release on PyPI. ; I can't see why anyone would be installing 4.0.1 now, except from some old package they had downloaded.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/616#issuecomment-270816096:135,down,downloaded,135,https://qutip.org,https://github.com/qutip/qutip/issues/616#issuecomment-270816096,1,['down'],['downloaded']
Availability,"5 seems also fine for me. We default to the dense solver when all the eigenvalues are required, even if `sparse=True` and we then raise a Warning explaining why we do this and how to stop the warning. IIf I understood it correctly, 3 would be raising an Error instead of a warning, which may be a little bit more annoying for someone that just wants the code to work (?). I am fine with both though and I think they could be suitable issues for a ""medium"" level ""good_first_issue"" (if that makes sense 😅 ). 1 and 4 seem indeed too much work right now (but perhaps they can be tackled in the future). 2 may actually be separate an enhacement, that could be useful for some specific scenarios (?). But maybe it is best to wait for when this scenario is present to actually motivate the enhancement (?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1998#issuecomment-1472647858:254,Error,Error,254,https://qutip.org,https://github.com/qutip/qutip/issues/1998#issuecomment-1472647858,1,['Error'],['Error']
Availability,"5, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278052 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: Steady state: Driven cavity - power-gmres solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_steadystate.py"", line 490, in test_driven_cavity_power_gmres; use_precond=1); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\steadystate.py"", line 306, in steadystate; return _steadystate_power(A, ss_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\steadystate.py"", line 938, in _steadystate_power; check)); Exception: power-gmres failed to find solution in 1000 iterations. ----------------------------------------------------------------------; Ran 564 tests in 898.617s. FAILED (SKIP=9, errors=57)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:29634,ERROR,ERROR,29634,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,2,"['ERROR', 'error']","['ERROR', 'errors']"
Availability,6_64.egg/qutip/utilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51304,ERROR,ERROR,51304,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278046 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: rhs_reuse : pyx filenames match for rhs_reus= True; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_bu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:2390,error,errors,2390,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['error'],['errors']
Availability,"985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278047 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: state with td list str H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:6819,error,errors,6819,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['error'],['errors']
Availability,"985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278048 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: unitary operator with td list str H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ex",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:11321,error,errors,11321,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['error'],['errors']
Availability,"985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278049 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: state with td interp H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 1",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:15868,error,errors,15868,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['error'],['errors']
Availability,"985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278050 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: unitary operator with td interp H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:20366,error,errors,20366,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['error'],['errors']
Availability,"985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278051 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: compare state and unitary operator evo - list str td; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:24908,error,errors,24908,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['error'],['errors']
Availability,"985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278052 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: Steady state: Driven cavity - power-gmres solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_steadystate.py"", line 490, in test_driven_cavity_power_gmres; use_precond=1); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\steadystate.py"", line 306, in steadystate; return _steadystate_power(A, ss_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\steadystate.py"", line 938, in _steadystate_power; check)); Exception: power-gmres failed to find solution in 1000 iterations. ----------------------------------------------------------------------; Ran 564 tests in 898.617s. FAILED (SKIP=9, errors=57",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:29497,error,errors,29497,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['error'],['errors']
Availability,":digits > numeric_limits<_IntT>::digits),; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:642:60: error: no template named 'numeric_limits'; bool _FloatBigger = (numeric_limits<_FloatT>::digits > numeric_limits<_IntT>::digits),; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:643:18: error: no template named 'numeric_limits'; int _Bits = (numeric_limits<_IntT>::digits - numeric_limits<_FloatT>::digits)>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:643:50: error: no template named 'numeric_limits'; int _Bits = (numeric_limits<_IntT>::digits - numeric_limits<_FloatT>::digits)>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:648:17: error: no template named 'numeric_limits'; static_assert(numeric_limits<_FloatT>::radix == 2, ""FloatT has incorrect radix"");; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:25: error: no template named 'numeric_limits'; return _FloatBigger ? numeric_limits<_IntT>::max() : (numeric_limits<_IntT>::max() >> _Bits << _Bits);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:58: error: no template named 'numeric_limits'; return _FloatBigger ? numeric_limits<_IntT>::max() : (numeric_limits<_IntT>::max() >> _Bits << _Bits);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:661:16: error: no template named 'numeric_limits'; using _Lim = numeric_limits<_IntT>;; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:664:12: error: use of undeclared identif",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583:1411,error,error,1411,https://qutip.org,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583,1,['error'],['error']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; ___________ ERROR collecting qutip/tests/test_enr_state_operator.py ____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_entropy.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_expect.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_fastsparse.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:6817,ERROR,ERROR,6817,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _____________ ERROR collecting qutip/tests/test_qubit_evolution.py _____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_qubitcircuit.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_qubits.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_rand.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:18642,ERROR,ERROR,18642,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_eigenstates.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________ ERROR collecting qutip/tests/test_enr_state_operator.py ____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_entropy.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_expect.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:6344,ERROR,ERROR,6344,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_fastsparse.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_fileio.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_floquet.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_gates.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:8236,ERROR,ERROR,8236,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_heom_solver.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_interpolate.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_mcsolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_mesolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:10601,ERROR,ERROR,10601,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_interpolate.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_mcsolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_mesolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_metrics.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:11074,ERROR,ERROR,11074,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_scattering.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sesolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sp_eigs.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sparse.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:21480,ERROR,ERROR,21480,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_three_level.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_utilities.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_wigner.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; !!!!!!!!!!!!!!!!!!! Interrupted: 60 errors during collection !!!!!!!!!!!!!!!!!!!; =========================== 60 error in 1.85 seconds ===========================; (base) cln-232-18:qutip nathanshammah$; ```; this on the 4.4.0 release version. ; On the dev version, ; ```; (qdev) cln-232-18:qutip nathanshammah$ pytest; ============================= test session starts ==============================; platform darwin -- Python 3.7.3, pytest-5.0.1, py-1.8.0, pluggy-0.12.0; rootdir: /Users/nathanshammah/github/qutip;",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:28575,ERROR,ERROR,28575,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_rhs_reuse.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_scattering.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sesolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sp_eigs.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:21007,ERROR,ERROR,21007,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_spinchain.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_spmath.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_states.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_steadystate.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:23372,ERROR,ERROR,23372,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_superoper.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_td_formats.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_tensor.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_three_level.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:27156,ERROR,ERROR,27156,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_expect.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_fastsparse.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_fileio.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_floquet.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:7763,ERROR,ERROR,7763,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_fileio.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_floquet.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_gates.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_graph.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:8710,ERROR,ERROR,8710,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_floquet.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_gates.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_graph.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_heom_solver.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:9183,ERROR,ERROR,9183,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_mcsolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_mesolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_metrics.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_mkl.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:11547,ERROR,ERROR,11547,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_metrics.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_mkl.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_openmp.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_operators.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:12493,ERROR,ERROR,12493,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_openmp.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_operators.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_parallel.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________ ERROR collecting qutip/tests/test_partial_transpose.py ____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:13438,ERROR,ERROR,13438,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_qubits.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_rand.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_random.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_rhs_reuse.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:19588,ERROR,ERROR,19588,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sesolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sp_eigs.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sparse.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_spinchain.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:21953,ERROR,ERROR,21953,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sparse.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_spinchain.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_spmath.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_states.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:22899,ERROR,ERROR,22899,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_piqs.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_propagator.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_ptrace.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_qft.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:15331,ERROR,ERROR,15331,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_qft.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_qobj.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_qobjevo.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_qpt.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________ ERROR collecting qutip/tests/te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:16750,ERROR,ERROR,16750,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"> * We have added a Users Guide for the new solver, as a new subsection of the ""Monte Carlo Solver"" guide. On my machine, I can build the documentation without problems (there are some warnings, but unrelated to this pull request). However, the check here failed and I do not see a useful error message. Does someone have an idea what is going on?. The error in the documentation (HTTP Error 403) is unrelated the the actual build. It happen from time to time randomly... you can ignore it.; However the documentation build will fail on warnings. > * We have two example notebooks to add to qutip-notebooks. How to proceed in practice: do we open a separate pull request in qutip-notebooks?; ; qutip-notebook is no longer used, we migrated to qutip-tutorial. Please open a new PR there. > * The _run_one_traj function now exists 3 times, with practically identical code:; > https://github.com/qutip/qutip/blob/master/qutip/solver/multitraj.py#L197; > https://github.com/qutip/qutip/blob/master/qutip/solver/mcsolve.py#L427; > https://github.com/pmenczel/qutip/blob/nonmarkovian-mcsolve/qutip/solver/nm_mcsolve.py#L160; > Maybe it would be a good idea to make the type of `Result` that is used for single trajectories generic in multi-trajectory solvers (just like the `resultclass` is already generic in solvers in general)? I have implemented that [here](https://github.com/pmenczel/qutip/commit/4a25709f90ed7c6dc2153011ee5a8110f3957c95) and could merge that commit into this PR if you think that's a good idea. There is a fourth `_run_one_traj` coming for the stochastic solver with also almost the same code...; Yes, some cleaning is needed and having a swap-able trajectory result class would be nice.; I looked at your implementation and it look fine.; I would just rename `trajectoryclass` to `trajectory_result_class` or something similar, otherwise it make me think it refer to the removed `TrajectorySolver`. > I've noticed a small bug that has gone unnoticed because of this: ""step"" [here](h",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2070#issuecomment-1446867702:289,error,error,289,https://qutip.org,https://github.com/qutip/qutip/pull/2070#issuecomment-1446867702,3,"['Error', 'error']","['Error', 'error']"
Availability,"> * What is the reason that the time-dependent weights are still part of the trajectory result? That seems a bit inconsistent to me and I wonder if the `TrajectoryResult` class could perhaps just be removed?. The time-dependent weights are available as the `trace` attribute for each trajectories, so I though them as an (indirectly?) physical property of each trajectories. Since they are per trajectories, if feels normal to belong to the single trajectory result. But moving the logic to `NmmcResult` would simplify `MultiTrajResult` a lot and allow to remove `TrajectoryResult`. I will look into it this week.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2502#issuecomment-2296372851:240,avail,available,240,https://qutip.org,https://github.com/qutip/qutip/pull/2502#issuecomment-2296372851,1,['avail'],['available']
Availability,"> ; > ; > I have been trying out pytest for the last couple of days and we can start by using it for the testing as it is now. We need to replace installation [lines](https://github.com/qutip/qutip/blob/master/.travis.yml#L23) like this in the .travis.yml file to install pytest:; > ; > ```; > conda install mkl blas=*=mkl numpy scipy pytest cython coveralls pytest-cov; > ```; > ; > and then change the runner script to use pytest instead of `nose` by changing:; > ; > ```; > nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; > ```; > ; > to; > ; > ```; > pytest --verbosity=1 --cov=qutip qutip; > ```. I have submitted a pull request with these changes. Travis build fails with error ""file not found: qutip"". I suspect it is a problem with pytest, and I am investigating.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/958#issuecomment-481026053:699,error,error,699,https://qutip.org,https://github.com/qutip/qutip/issues/958#issuecomment-481026053,1,['error'],['error']
Availability,> ; > ; > Seems interesting but tests are failing... Hi Ericgig!. Thank you very much for looking into this! I haven't been able to figure out why the build is failing; the error messages quote parts of the code that I didn't even modify. Could you assist me in finding out why?. Thanks a bunch!; Nithin,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/912#issuecomment-466180105:173,error,error,173,https://qutip.org,https://github.com/qutip/qutip/pull/912#issuecomment-466180105,1,['error'],['error']
Availability,"> > I am not sure why it is only failing in the Python 3.8 case.; > ; > Well, it's a statistical average, so it can deviate. I don't think it has anything to do with Python 3.8. But probably it can be avoided? I guess its the same question as #1268; > ; > I'm thinking, what about adding a `targets` parameters to `QubitCircuit.run_statistics`. Usually, people don't interested in the full output state of the circuit because many of them are ancillary qubits. They can use `targets` to specify what is the qubits they want to look at. In the function, we can use `ptrace(state, targets)` to trace out the ancilla. Seems like a good idea, maybe we can add it as optional parameter to both `QubitCircuit.run_statistics` and `QubitCircuit.run`. Also, regarding Python 3.8, I was saying because both times it only failed in that test run, also never failed in any of my runs. Should I make tolerance higher ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-640006594:887,toler,tolerance,887,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-640006594,1,['toler'],['tolerance']
Availability,"> @arnelg What if we add a variable `shape` also to the `_super_tofrom_choi`, `choi_to_kraus`, and `kraus_to_choi` functions?; > In that way, if `shape=None` the function uses the old code, while if `shape=""rectangular""` it implements the new version of the code. I don't think this is a good idea. The ""square"" case is really just a special case of ""rectangular"", and there is no reason the user should need to specify that it is square or not through an additional argument; this information is already there by looking at the `Qobj` in question. The code as submitted already correctly handles a square input (as before), so why create a separate code path? Also by sticking to one code path we ensure that if there is an error, it only needs to be fixed once. > Moreover, for the sake of completeness, I think this option should be implemented also in the Stinespring and $\chi$ representation.; > Commenting the docstring on this issue could help the user, even if these are private functions.; > I have been reviewing this with @nathanshammah. Yeah good point. I will have a look at this together with @joshcombes. (It is fine to accept the current pull request, and we can open another one for further improvements, however.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1098#issuecomment-565329722:725,error,error,725,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-565329722,1,['error'],['error']
Availability,"> @cgranade I'm really liking the overall look of the Instrument class -- it's a much easier way to deal with measurements than calling the measurement operations all the time & of combine measurement operations with other operations on Qobjs. Thank you for the kind words!. > I'm keen to hear feedback from others too, but in the mean time I'm going to note some thoughts here for when I come back to this:; > ; > * It would be good to think about how all the operations on Qobj match up with QuTiP version 5 (since this draft is based on v4 currently).; > * We should decide whether to target QuTiP 4.7 or 4.7 and 5 for this. Target just v5 means not having to worry about making it nice in both, but will mean it'll be a bit more of a delay before release).; > . I'll admit I've not kept up as much with the 5.0 changes as I should have, but I'm happy either way; I can definitely see the benefit to targeting 5.0 and keeping code maintenance down, or to getting the feature out for folks to use sooner at the cost of more development work. > * I'd like to think about removing `Seq` and `Par` and replacing them with some simple rules for sequences, strings and numbers. Honestly, agreed; I tried a few different designs to try and get rid of those two classes, but they all felt a bit awkward and special-cased. Happy to revise, though, to lower the barrier to using the new feature. > This would match, e.g., `qutip.ket(""01"")` and `qutip.basis([2, 2], [0, 1])`. `Seq` and `Par` do however make it really clear that in one case measurements follow each other on the same subspaces and in the other they are performed simultaneously on different subspaces, so I'm not quite sure. Maybe there is some middle ground. My initial thought was to do something like use tuples instead of `Seq` and lists instead of `Par`, but that then ran into a couple issues. Namely, it wasn't as obvious what each kind of container meant, and it was harder to automatically flatten (e.g.: `Seq(1, Seq(2, 3), 4)` is id",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1687#issuecomment-951352562:934,mainten,maintenance,934,https://qutip.org,https://github.com/qutip/qutip/pull/1687#issuecomment-951352562,2,"['down', 'mainten']","['down', 'maintenance']"
Availability,"> @hodgestar shall we attempt to sort out the caching now, or get things moved over ahead of Unitary Hack and sort it out later? I don't think it's particularly a blocking issue - the tests still all run fine, after all. Definitely leave for later. > There's an argument against using `pip wheel` caching for us - we've historically used our tests to try and catch errors when using new versions of packages, which we'd lose if we start pinning versions to one particular thing. I don't think we need to pin to a particular version to benefit from the pip caching, but let's see later.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1551#issuecomment-839773306:365,error,errors,365,https://qutip.org,https://github.com/qutip/qutip/pull/1551#issuecomment-839773306,1,['error'],['errors']
Availability,"> @hodgestar since yesterday our tests are failing for python3.9 ubuntu, but I can't reproduce the error locally... I you have time could you take a look. I haven't managed to reproduce locally either yet and the test failures are odd. There was an update to `ubuntu-latest` on `11 October 2021` so maybe that is related somehow? See https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md. I've also clicked ""rerun"" in case there was some transient error with the roll out of the Ubuntu update to GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1689#issuecomment-944354143:99,error,error,99,https://qutip.org,https://github.com/qutip/qutip/pull/1689#issuecomment-944354143,3,"['error', 'failure']","['error', 'failures']"
Availability,"> According to the error message; > ; > ```; > WARNING: invalid signature for automodule ('qutip.core.gates\n :members:\n :show-inheritance:\n :imported-members:'); > WARNING: don't know which module to import for autodocumenting 'qutip.core.gates\n :members:\n :show-inheritance:\n :imported-members:' (try placing a ""module"" or ""currentmodule"" directive in the document, or giving an explicit module name); > ```; > ; > That should be the error source. Lets use; > ; > ```; > .. automodule:: qutip.core.gates; > :members: ...; > ```; > ; > first and see if it works. Thank you, lets try that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2441#issuecomment-2148458661:19,error,error,19,https://qutip.org,https://github.com/qutip/qutip/pull/2441#issuecomment-2148458661,2,['error'],['error']
Availability,"> Also, regarding Python 3.8, I was saying because both times it only failed in that test run, also never failed in any of my runs. Should I make tolerance higher ?. Ok.... Let me try restart the CI test once",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-640007551:146,toler,tolerance,146,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-640007551,1,['toler'],['tolerance']
Availability,"> As I understand it, the only way to avoid needing to touch `MANIFEST.in` is to not have files distributed with the test suite (or to have the temporary files by `*.py`, since `setup.py` automatically recognises them). That's not really a pytest thing, it's a `setuptools` one.; > ; > I don't think there's a problem distributing files as part of the tests. You can add a line which says; > ; > ```; > recursive-include qutip/tests/qasm_files *.qasm; > ```; > ; > to `MANIFEST.in`, and that should hopefully fix the problem. You won't have the problem locally, because you'll be running `./setup.py develop`, which ""installs"" in-place, so you don't notice the fact that you've missed files from the manifest. In the tests, it runs `./setup.py install`, which does the copy, missing files which aren't in the manifest.; > ; > Boxi: I'm not certain what more you'd like to do with fixtures here. Fixtures are good for setup and tear down, parametrisation and sharing resources (like network connections), but I'm not certain what further benefit you get for a test function which is testing whether it can open a known file, read it, and construct the expected output. I think Sidhant is already doing some nice parametrisation of his tests, from what I see.; > ; > Sidhant: I added a comment on the exception test, since pytest gives us an easier-to-read context manager you can use. It's also typically better practice to handle file paths like I did in that (using the overloaded `/` operator with `pathlib.Path`, or `os.path.join`) rather than manually putting in slashes. Windows _usually_ will do the right thing now with slashes, but it's better to let Python handle it for us. Thanks for this information, it seems to work ! I was wondering if the following statement is still needed (at all) in `PACKAGE_DATA` in setup.py? ; `'qutip/tests/qasm_files': ['*.qasm'],`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1291#issuecomment-656450639:932,down,down,932,https://qutip.org,https://github.com/qutip/qutip/pull/1291#issuecomment-656450639,1,['down'],['down']
Availability,"> Assuming Simon's point isn't just a complete answer to your question: in the general case, this is an impossible question to answer - it touches on many parts of numerical integration, such as tolerance limits and adaptive step-size methods. When you're dealing with completely arbitrary time-dependence, there's not really any one-size-fits-all approach that'll work (despite how RK45 is often taught as a magic bullet in physics courses).; > ; > Here, you will likely find that your RK45 results depend strongly on how many intermediate timesteps you use, whereas QuTiP's results will be (marginally) more stable. This is because QuTiP will internally subdivide the timesteps more to achieve internal precision goals, but then only returns the results at the time points you ask for. You can increase the maximum number of allowed subdivisions by increasing the `nsteps` parameter in a `qutip.Options` object, and with the `options` keyword argument. I addressed Simon's question. Also, I tried different solver options in mesolve including solver type, nsteps, relative and absolute tolerence, etc ... Also for RK45 I tried to change the parameters in order to see if the solutions coincide. They didn't. I don't know if there exists an analytically solvable problem in which both Hamiltonian and dissipation operators are time dependent, but if there is such a problem, then I can use it as a benchmark in order to compare QuTiP and RK45.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733#issuecomment-986665248:195,toler,tolerance,195,https://qutip.org,https://github.com/qutip/qutip/issues/1733#issuecomment-986665248,2,['toler'],"['tolerance', 'tolerence']"
Availability,"> Consider what you're doing from a statistical sense here. If everything works correctly, then you're effectively trying a two-tail hypothesis test that your test binomial distribution has a probability of 0.25, given you made `n` observations of it. The analytic success rate of your test is then; > ; > ```python; > import scipy.stats; > def success(n, p, tol):; > dist = scipy.stats.binom(n, p); > return dist.cdf(n * (p+tol)) - dist.cdf(n * (p-tol)); > ```; > ; > where `success(4096, 0.25, 0.02)` is 99.67%. Since there are 5 independent runs on Travis, that's equivalent to a failure rate of 1.6% on every single CI run, which is several orders of magnitude too high. It's probably just luck that it was Python 3.8 on both occasions - it's a one-in-five chance that in two failing CI runs, it was the same setup both times.; > ; > You have to consider what is most appropriate to fix the test, and what you can reasonably test in ~1 second of runtime. You don't want to increase the tolerance too much, because then you can get a lot of false positives even if something is broken.; > ; > If you can bump the number of runs up to 100,000 and set the tolerance at 0.01, you'll have a per-test failure rate of ~3e-13, which is more like what we'd want. If you keep it at 4096, the tolerance should be more like 0.05 (which is pretty big tbh). Thanks for the excellent analysis. I don't think it's feasible to do 100,000 given the current. efficiency. It did give me incentive to make it somewhat faster. What is a good guideline for the maximum time a test can take. It seems like I can maybe do 150 runs in ~ 1s. In any case, it doesnt seem feasible to do even 4096 claims without taking quite a bit of time. Any ideas on how to structure the test differently ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-640087689:583,failure,failure,583,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-640087689,5,"['failure', 'toler']","['failure', 'tolerance']"
Availability,"> Don't put a link on a word if it doesn't specifically refer to the object you're linking to. Yeah, I was worried if linking words like ket, bra were needed or not. I'll remove them. . > The ""Raises"" section should only be for very non-obvious errors; > Don't put the error message in the description of a ""Raises"" section. No problem. I will remove errors created due to incorrect parameters and other obvious errors + error messages. I will add a parameters section if needed to clarify over ValueError. . > I saw a few places where changes in the formatting accidentally deleted a word, or hid some extra meaning. I think the accidental deletes might have been due to getting caught in some cut/copy/paste flow. . > Do you have the docs building correctly?. Yes, I do. I was a bit confused about how to try to format to functions not in API doc. So, I still tried to link a `ref` to them so that they are formatted similar to hyperlinks. I think a couple of these appear as italics.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1499#issuecomment-832138853:245,error,errors,245,https://qutip.org,https://github.com/qutip/qutip/pull/1499#issuecomment-832138853,5,['error'],"['error', 'errors']"
Availability,"> From what I understand, on intel, brmesolve seems to work correctly, but not on M1. This look like an issue with the eigensolver. Exactly. > Could you run the test suite to see if it fails the eigen and bloch redfield related tests: `pytest path_to_qutip/qutip/tests`. (Tests can take >30min). Yes it is failing these (and some others), but in particular it does fail everything in test_brmesolve.py and test_brmesolve_td.py. All failures I find seem to be related to the `Exception: ODE integration error` as mentioned in the original post.; On an emulated Intel terminal, the tests are all passing as expected.; This is strange, since I seem to find way more tests failing than reported in #1755.; Perhaps this is an issue with my installation, rather than qutip itself. I installed it in the standard way using conda (using the Apple Silicon version at 4.13). > Also could you look at the tensor directly:; > ; > ```; > R, H_eigenvector = bloch_redfield_tensor(sigmax(), a_ops=[[sigmax(), psd]]); > ```; > ; > If the tensor is wrong on M1, this would explain the error. Actually, that looks fine surprisingly enough (agrees with the Intel version). Thanks for the quick response. If I figure anything out, i'll let you know.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965#issuecomment-1203341063:432,failure,failures,432,https://qutip.org,https://github.com/qutip/qutip/issues/1965#issuecomment-1203341063,3,"['error', 'failure']","['error', 'failures']"
Availability,"> Given that this PR is to fix a particular bug in `correlation`, please could you also add a reproduction for the bug in #1460 in order to ensure that it truly is fixed (I see no reason it shouldn't be from this), and to make sure that we catch any possible regressions in the future?. I modified test_correlation.py to catch this error. It was previously using a non-Hermitian expectation operator which is why it did not raise an error. I changed it to use an Hermitian operator. This means it would fail the test without the fix in mesolve. . However, I wonder now if the test should check for both Hermitian and non-Hermitian expectation operators. I did not add both tests because I did not want to make it slower. Should I make it to cover both cases?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1478#issuecomment-812849410:332,error,error,332,https://qutip.org,https://github.com/qutip/qutip/pull/1478#issuecomment-812849410,2,['error'],['error']
Availability,"> Hi @AGaliciaMartinez . Good to hear from you again ;). Hi! :smile: . > It seems that the hermitian check for the operator op evaluates as True. Yes, this is definitely the source of the error. Nice catch! I will try to compare the 4.7.1 version of qutip with the new pre lease of version 5.0.0 and see if we can provide a quick fix for it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1998#issuecomment-1423168374:188,error,error,188,https://qutip.org,https://github.com/qutip/qutip/issues/1998#issuecomment-1423168374,1,['error'],['error']
Availability,"> Hi @Canoming, thanks for spotting this error and fixing it. I'm surprised that this error is hidden here for so long.; > ; > There is still a flaw in the option for `remove=""all""`. When you remove the first element in a list, the rest elements will move forward and eventually leads to an index out of range error.; > For example, if you have a list `gates = [a, b, c]` and use `gates.pop(0)`.; > The list will become; > ; > ```; > >>> gates; > [b, c]; > ```; > ; > if you now iterate to `i=1`, you skip element `b`; > This can be solved by iterating in the inverse order.; > ; > ```; > elif name is not None and remove == ""all"":; > for i in reverse(range(len(self.gates))):; > ```. Ah, sure. Thanks to point it out. It's fixed now. I actually used the reversed order but then deleted it as I forgot why I did that. LOL",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1242#issuecomment-622099083:41,error,error,41,https://qutip.org,https://github.com/qutip/qutip/pull/1242#issuecomment-622099083,3,['error'],['error']
Availability,"> Hi, could you please tell us how you installed QuTiP and which python are you using? Just type the following in the terminal; > ; > ```; > which python; > ```; > ; > To check how QuTiP was installed (if on Linux or Mac):; > ; > ```; > pip freeze | grep ""qutip""; > ```; > ; > If on windows, download Anaconda and install QuTiP from conda-forge with; > ; > ```; > conda install -c conda-forge qutip; > ```; I created an environment for qutip and then used the following code ; conda install -c conda-forge qutip. I'm still seeing this error ModuleNotFoundError: No module named 'qutip'",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-647267470:292,down,download,292,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-647267470,2,"['down', 'error']","['download', 'error']"
Availability,"> Hi,; > ; > I installed qutip on my windows system and tried the testing codes and faced the problem (as the figure shows):; > ; > TypeError: Cannot convert _UnitedFuncCaller to qutip.cy.cqobjevo_factor.CoeffFunc; > ; > ![image](https://user-images.githubusercontent.com/13745165/60830800-9a9e5e00-a1ea-11e9-99d7-2ec24390083e.png); > ; > Here is the about() information:; > ; > QuTiP: Quantum Toolbox in Python; > Copyright (c) 2011 and later.; > A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade; > ; > QuTiP Version: 4.4.0.dev0; > Numpy Version: 1.16.4; > Scipy Version: 1.2.1; > Cython Version: 0.29.11; > Matplotlib Version: 3.1.0; > Python Version: 3.7.3; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: True; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Anaconda\envs\qutip\lib\site-packages\qutip-4.4.0.dev0-py3.7-win-amd64.egg\qutip; > ; > I would appreciate it if you can give me some advice to help me pass the testing codes!. Hi,; Has this problem been solved? I met this same error when installing qutip-4.4.0.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-519833092:1067,error,error,1067,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-519833092,1,['error'],['error']
Availability,"> However if `default_dtype` can be seen as _running in that mode_, it certainly could cause confusion. It's not clear how it is understood in some places. In `eigenstates`, if we run in `CSR` mode, then does that mean that we use the sparse eigen solver? It's a lot worst than the dense one. Or should only the returned ket be in CSR format?; > ; > In my tries, the dense steadystate was faster that the sparse one. Could it be an issue that some matrices where too big to fit in RAM forcing to use swap space? We could have a warning when matrices over a certain size are allocated. I guess this was mostly because I wasn't explicitly calling steadystate with sparse=False so it was getting converted back to CSR anyway, and slowing things down. Largely I see similar performance between CSR and dense (using sparse=False), unless I use very small systems (16x16 Liouvillians), though this seemed a bit scipy/method dependent. I guess as you said this also raises the question about whether stuff like eigenstates and steadystate() should default to using methods based on the data layer of the object, instead of kwargs? My feeling is not, since eigenstates+sparse can be bad and steadystate+largesystem+dense could be bad, so its worth having some default conversion cost in place. But I still like the idea of what gets returned to the user following default_dtype. but maybe we can see if this turns out to be an issue that people have in using data layers, could just be me!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2328#issuecomment-1953388192:742,down,down,742,https://qutip.org,https://github.com/qutip/qutip/issues/2328#issuecomment-1953388192,1,['down'],['down']
Availability,"> I added a test that compares `correlation_2op_1t` to its analytical solution. I was trying to match the `c_ops` of this new test to the ones appearing in `test_correlation_solver_equivalence`, which are:; > ` c_ops = [np.sqrt(G1 * (n_th+1)) * a, np.sqrt(G1 * n_th) * a.dag()]`; > However, the analytical solution I obtained for this case did not work unless I used a very small value for `n_th = 0.1`. I was wondering whether the analytical solution I got was wrong or whether this actually makes sense. I was thinking that the difference probably comes from the cut we use for the number of states (`N = 20`). I did a quick test and it seemed ok upto about n_th = 1 for N=20 and an atol of 2e-5. ; as an aside, I guess some minimal condition here is that the thermal occupation of the cut-off state should be smaller than the tolerance, which i guess you can get out of the analytic expression for the thermal state. maybe.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1478#issuecomment-813959317:829,toler,tolerance,829,https://qutip.org,https://github.com/qutip/qutip/pull/1478#issuecomment-813959317,1,['toler'],['tolerance']
Availability,"> I addressed all your comments in my new commit, but when I try to run the tests with pytest I get a strange error:. This is likely because qutip is not correctly installed. Could you try uninstalling qutip and reinstalling again?. > Also, to avoid the circular import problem with tensor, would it be better if I created a new py file (qutip.core.fermionic_operators.py) for these new operators? . A new file for this seems too much for me... I think `operators.py` is the best choice but it includes indeed mostly basic operators not using `tensor`. Maybe there is a better place for this @Ericgig ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2166#issuecomment-1565683451:110,error,error,110,https://qutip.org,https://github.com/qutip/qutip/pull/2166#issuecomment-1565683451,1,['error'],['error']
Availability,"> I did the pycodestyle on my code, but it is highlighting errors that were there in the original code. It returned lines that have >linespace errors and more, should I edit them too?. I am going to leave this up to you. It is not required as long as the lines you modified follow PEP8. Although, fixing the output of pycodestyle in the same file would be very much welcome :smile:. > The issue was to add __repr__ function to QobjEvo class. Do I need to add a test? If so, can someone help me with it?. We will indeed need a test for repr. It does not need to be very complicated and in fact, something similar to what you show in the description of this pr should work. In this case, we would create a few different `QobjEvo` that cover most of the cases and we would check that `qobjevo.__rerp__()` returns the expected string. This test should go in `qutip/tests/core/test_qobjevo.py`. You can take a look there to see example of how the tests are written. If this is your first time writing tests you may want to take a look at [our documentation](https://qutip.readthedocs.io/en/master/development/contributing.html#testing) and also at pytests documentation. > If the behavior of the code has changed or new feature has been added, please also update the documentation in the doc folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure. This will not be necessary this time. > Include the changelog in a file named: doc/changes/<PR number>.<type> 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information). `feature` should work here.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2111#issuecomment-1455087838:59,error,errors,59,https://qutip.org,https://github.com/qutip/qutip/pull/2111#issuecomment-1455087838,2,['error'],['errors']
Availability,"> I don’t know. It worked for me when I tried to install QuTiP from source —with-openmp. The error was a different and I am on a different MacOS (I also tried a conda install llvm, but what worked was gcc for me, with openmp). I understand that you trying to install QuTiP? If so, how? conda / source / pip? Consider doing it via conda if you are interested in the stable version release (4.3), by activating the conda-forge channel as detailed in the documentation. If QuTiP is installed and you receive this error while doing a specific task, can you copy paste the message of qutip.about() here?; > […](#); > On Sat, 9 Mar 2019 at 14:37, Xiao ***@***.***> wrote: Try conda install gcc. Does that mean I should use gcc from the Anaconda directory? — You are receiving this because you commented. Reply to this email directly, view it on GitHub <[#965 (comment)](https://github.com/qutip/qutip/issues/965#issuecomment-471148065)>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AN5ffFcanH6qaCezLIKtW4SflaVsZ63Aks5vU0iCgaJpZM4bmfhd> . I am installing QuTip from compiling the source code, because I want to use MKL. I didn't use the --with-openmp option as MKL is already openmp threaded. . After ""conda install gcc"" the compilation is passed and QuTip can be so far used without problems. Thanks for your help.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/965#issuecomment-471155651:93,error,error,93,https://qutip.org,https://github.com/qutip/qutip/issues/965#issuecomment-471155651,2,['error'],['error']
Availability,"> I ran some comparisons to the old version, and everything looks good. There seems to be some speedup both to the RHS construction and the ODE solver for most cases. Thanks! I've now streamlined things a little more, so they might be slightly faster still. > Since each individual ADO is naturally a Qobj, having HierarchyADOsState store them an array or list of Qobjs makes sense I guess. I've put this down in the v5 TODO list (just to draw a line under this PR). > 2. How should the ado_state be stored on a results object? In particular, how should the change in e_ops signature be handled (for the HEOM solver the e_ops callables also take the full ADO state). I ended up always calling `e_ops` functions with `f(t, ado_state)`. This is a bit different to other solvers, but makes what the HEOMSolver considers the evolution state consistent. The density matrix part of the state is available as `ado_state.rho` so it's not a big hardship to retrieve just the system state. >> 3. Recheck the time dependent case.; > ; > From what I can see it looks good! Seems like basically you treat the entire RHS as an effective qobjevo? I ran through various > examples, and couldn't find any issues!. I simplified things a bit further. In the time-dependent case the RHS matrix is calculated without adding the Liouvillian to the diagonal and then the kron of the Liouvillian is added to the RHS at the end, resulting in a simpler QobjEvo. >> 4. The HEOM can't really take new QObjEvo arguments each time run is called because calculating the RHS again is quite expensive. Maybe something can be done?. Arguments are supported now because the full RHS is a QobjEvo!. >> 5. Compare performance to the HEOM in 4.7.; > ; > On the fermionic examples, with very-large system Hilbert space, there was a little slowdown in the RHS construction. Maybe the slowdown has gone away now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1869#issuecomment-1145125739:405,down,down,405,https://qutip.org,https://github.com/qutip/qutip/pull/1869#issuecomment-1145125739,2,"['avail', 'down']","['available', 'down']"
Availability,"> I think that the rendering is executed through the Visual Studio extension called ""[Jupyter Notebook Renderers](https://marketplace.visualstudio.com/items?itemName=ms-toolsai.jupyter-renderers)"".; > ; > I apparently solved this issue by simply downgrading the version of this extension, since I read in the changelog of the latest version ""Removed rendering of text/latex in favor of built-in support."". Thus the problem was in the Visual Studio part, however it still remain opened in the case one decide to install the latest version of this extension.; > ; > Thank you. Thank you so much for sharing this!. The cell outputs that included Qobj with Latex code wasn't rendering properly for me just like your issue (although Latex code in the Markdown cells was rendering correctly). I spent hours and tried countless online suggestions to fix the issue with no success, until I re-installed the the 'Jupyter Notebook 'Renderers' extension to the old version (v1.0.4) before it removed the latex support. Now I have the option to 'change presentation' of the output cells so it uses the old version of the extension, and now it finally displays the output with the Latex rendered correctly!. Thank you again for suggesting the only solution that worked for me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1809#issuecomment-1633135302:246,down,downgrading,246,https://qutip.org,https://github.com/qutip/qutip/issues/1809#issuecomment-1633135302,1,['down'],['downgrading']
Availability,"> I think this is a good addition. Whether it's accepted comes down to how much complexity it adds to the Bloch sphere class, I suspect. Perhaps open the PR and let's see what the code changes look like?. Thank you so much :D ; I will open a PR soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1683#issuecomment-933426001:63,down,down,63,https://qutip.org,https://github.com/qutip/qutip/issues/1683#issuecomment-933426001,1,['down'],['down']
Availability,"> I tried it locally and `show` print the figure twice, whether you provide a figure or not. `render` itself print the picture so having it in `show` make `display` redundant. Otherwise, it work fine. Where were you running your example? Python console, IPython console, Jupyter notebook? I'm guessing the IPython console because of the reference to `display`, but I wanted to double check.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1619#issuecomment-988089216:165,redundant,redundant,165,https://qutip.org,https://github.com/qutip/qutip/pull/1619#issuecomment-988089216,1,['redundant'],['redundant']
Availability,"> I'm not sure the `Qobj permute` failing test is related, by the way. Yeah we actually figured this one out. It's a numerical round off error. `Qobj permute` uses `tidyup`, with the same numerical tolerance as is used when the equality of two `Qobj`s are compared in the test. Kind of lucky that it didn't fail before. We either have to change the test to use a larger tolerance in the comparison, or give an argument to `Qobj permute` to not use `tidyup`. This is not really related to this PR but I'll implement the change once we decide on the best solution. Does anyone have thoughts on why `Qobj permute` uses `tidyup` by default in the first place? I don't know how `permute` actually implements the permutation, but naively I would have thought that a permutation could be done without any numerical error",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1098#issuecomment-571353111:137,error,error,137,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-571353111,4,"['error', 'toler']","['error', 'tolerance']"
Availability,"> I've just spotted a bug in `isherm` on the new data layer, which is my fault for not getting the tests for that written yet. That may also be having some impact on the test fragility. Actually, I _didn't_ introduce a bug in `isherm`! It's just also present in the release version of QuTiP, but _masked_ by the `auto_tidyup`. In ""unrelated"" news: I discovered a dumb bug in `tidyup_dense`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1348#issuecomment-680059767:73,fault,fault,73,https://qutip.org,https://github.com/qutip/qutip/pull/1348#issuecomment-680059767,1,['fault'],['fault']
Availability,"> If I understand correctly it refers to line 300 in test_metrics, which has a new hellinger metric test by @wrzadkow . Could it be that using ""for _ in range(10):"" is a problem?. The following observations:; - `for _ in range(10)` is already in [line 128](https://github.com/qutip/qutip/blob/master/qutip/tests/test_metrics.py#L128) in `test_metrics.py` ; - [line 300](https://github.com/qutip/qutip/blob/master/qutip/tests/test_metrics.py#L300) is the end of docstring of `test_hellinger_monotonicity()` ; - the presence of `invalid escape sequence \o` in the error message; - this thread https://stackoverflow.com/questions/52335970/how-to-fix-string-deprecationwarning-invalid-escape-sequence-in-python. make me think that the issue may be caused by `\otimes` that I used in the docstring explanations. Don't have a Mac to reproduce and check whether removing this will help, though.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-496497028:562,error,error,562,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-496497028,1,['error'],['error']
Availability,"> If it's a known issue, let's leave it for when we switch CI to GitHub Actions (assuming that's the choice we end up making). It's very very difficult to tell, because Travis seem to be aggressively winding down the processing power available to us on Macs - I can't tell if there's a problem in this code, if Travis are over-stuffing their Xcode 12 machines with too many VMs, or even if it's some weird emulation (I think Azure _emulates_ PPC architectures if you ask for them!).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465#issuecomment-801795088:208,down,down,208,https://qutip.org,https://github.com/qutip/qutip/pull/1465#issuecomment-801795088,2,"['avail', 'down']","['available', 'down']"
Availability,"> If this is supposed to be displayed in the Sphinx-rendered HTML instead of markdown. I think you need double backticks for the monospace font? E.g. `` ``Qobj`` ``. Yes, I do. Fixed.; ; > Does this also serve as a `guide on migrating from v4 to v5` or do we plan to have it separately somewhere else? It would be nice if we could summarize some common Error messages that one may see along with the solution/possible reasons. The error messages are what people usually type into Google search. This does serve as an initial guideline of what to expect, but I think we do also need a proper porting document like the one you mention.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2076#issuecomment-1419933633:353,Error,Error,353,https://qutip.org,https://github.com/qutip/qutip/pull/2076#issuecomment-1419933633,2,"['Error', 'error']","['Error', 'error']"
Availability,"> If you run it locally it won't appear as a ""failure"" it'll be a warning, but now on the CI server we've fixed every warning, and turned new warnings into errors. You can get the same behaviour on your computer by running the command as `pytest -We [...]` instead. If you look at the CI it ran OK and there was a `todense` call in there. Maybe there is something silencing the warning elsewhere preventing it from being caught.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-828002553:46,failure,failure,46,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-828002553,2,"['error', 'failure']","['errors', 'failure']"
Availability,"> It doesn't look robust enough to be user facing as it is, but as a private function, if you get a 3.5x, I'd say we want it. I'll rename it to `_from_csr_blocks` and add some more checks on the ordering and shape of the ops if those aren't too expensive and add some tests. We can expose it publicly if that's ever useful. > Technically, just give a type to `i` and it's all running in c code. Thanks! Adding the type to `i` did make it a little faster.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2128#issuecomment-1477071388:18,robust,robust,18,https://qutip.org,https://github.com/qutip/qutip/pull/2128#issuecomment-1477071388,1,['robust'],['robust']
Availability,"> It would just be a matter of transforming the spherical coordinates into cartesian coordinates to be used by `add_points`. The following code would work:; > ; > ```python; > b = qutip.Bloch(); > ; > # Range of theta and phi; > th = np.linspace(0, np.pi/2, 20); > phi = np.linspace(0, np.pi/4, 20); > r = 1; > ; > xp = r*np.sin(th)*np.cos(phi); > yp = r*np.sin(th)*np.sin(phi); > zp = r*np.cos(th); > ; > pnts = [xp, yp, zp]; > b.add_points(pnts, meth='l'); > b.render(); > ```. There is a slight problem with this type of code:; 1. By using linspace for theta and phi as you have suggested, the values of theta and phi will not let the arc follow the shortest path and it will be a curve. For example, even in your plot, you'll see the arc is curved, whereas we are trying to plot an arc on the longitude.; 2. Another issue here is if I give you two random points, say (1/sqrt(3),1/sqrt(3),1/sqrt(3)) and (-1/sqrt(3),1/sqrt(3),-1/sqrt(3)), then using `add_points` to draw a curve is very cumbersome at the user-end and thus, prone to errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1685#issuecomment-934344538:1036,error,errors,1036,https://qutip.org,https://github.com/qutip/qutip/pull/1685#issuecomment-934344538,1,['error'],['errors']
Availability,"> Just an 'out there' question... what about superoperators?. I'm still reading, but I imagine superoperator measurements will correspond to partial measurements on systems where only part of the system is available for measurement (e.g. quantum channels), so perhaps lets do partial measurements next and then superoperator measurements after that?. Edit: We'll need superoperators to describe POVMs (i.e. more general measurements on density matrices).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1090#issuecomment-538153627:206,avail,available,206,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-538153627,1,['avail'],['available']
Availability,"> Knowing the tensor structure is still necessary for enforcing the Hilbert spaces are of the correct dimensions, even if the resulting state can't be written as a product of states on individual spaces. I think there's a lot more design to do to work out a sensible data structure which can really take advantage of this lazy representation, but my morning-after reaction to this is that it's very non-trivial without a lot of code duplication.; > ; > It's easy enough to imagine how it will work for operators of structure `[scalar, oper, scalar] * [scalar, scalar, oper] -> [scalar, oper, oper]` - in this case the final result is fully expanded in the last two states, and not in the first. It's much trickier dealing with `[oper, scalar, scalar] * [scalar, oper, oper] -> [oper, scalar, oper]`. In this case, since there's a subspace in between them, you need a specifically ""lazy"" Kronecker product. I suspect that this would have to be supported via either a completely separate `tensor` mechanism, or the mechanisms which currently underpin the data-layer `kron` would have to be revisited.; > ; > At least at first, I think that's a very large undertaking, and it would really need a lot of careful design to ensure that we don't slow anything down, or balloon the amount of code to be maintained. Both your and Boxi's comments point to the fact that this probably needs to be something on top of Qobj as a QIP-state object rather than part of Qobj itself! Once the details on these changes are fleshed out, I shall certainly look into this. It could potentially be very useful to have a slightly more customized/optimized QIP state layer on top of Qobj.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1320#issuecomment-658138964:1253,down,down,1253,https://qutip.org,https://github.com/qutip/qutip/issues/1320#issuecomment-658138964,1,['down'],['down']
Availability,"> Looks great. I suggested some changes, mainly to docstring. I wonder what is the meaning of the filename qelib1.inc? Could we find a more explicit name if relevant? Should it be added to the Manifest file? It looks fine to me, looking forward to test it and having a section in the documentation would certainly help, under QIP. Ping for review of the notebook when ready and re-request this PR review. Regarding ""qelib1.inc"", it is a ""header"" file that contains some QASM gate definitions. It is available in the OpenQASM repository (as a standard file) and I think it's always included in QASM exports (atleast by QISKIT). It's useful because we don't need to write our own definitions and can just define QuTiP gates by mapping them to ""qelib1.inc"" gates.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1318#issuecomment-663824413:331,Ping,Ping,331,https://qutip.org,https://github.com/qutip/qutip/pull/1318#issuecomment-663824413,2,"['Ping', 'avail']","['Ping', 'available']"
Availability,"> My biggest concern is with the addition of `**_` to some of the functions, I would argue that it is best to raise an error if the function does not have arguments. this may lead to code that works on jax being incompatible with code that works on just qutip though, so it is something to think about. We pass unused arguments when we mix different types of coefficients in solver and `QobjEvo`. So we cannot raise an error. > I could be an interesting idea for the future to consider adding a similar context manager that removes other dtypes (`CSR` and `Dense`) so that it is clear what the code is doing?. I don't understand what you mean by this... A context manager that remove dtype from those known to the dispatcher?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2015#issuecomment-1438679479:119,error,error,119,https://qutip.org,https://github.com/qutip/qutip/pull/2015#issuecomment-1438679479,2,['error'],['error']
Availability,> Not a huge amount to be done about that CodeClimate failure to be honest. These complexity checking tools were all written with business software application logic in mind and don't cater well to cases where a single conceptual unit can be quite complex. Perhaps when we move to GitHub actions we can run our own linting tools directly there and get rid of CodeClimate.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506#issuecomment-824625785:54,failure,failure,54,https://qutip.org,https://github.com/qutip/qutip/pull/1506#issuecomment-824625785,1,['failure'],['failure']
Availability,"> Not sure how to make a test for this. The file name is random and it's not always reliable when the `__del__` is called which is where the file is erased. You could create a coefficient and check that the last entry of `coeff_files.file_list` looks correct and exists. The wouldn't check the deletion but would check that the filename is correct. You can do `del qutip.qobjevo.coeff_files` to trigger the clean-up of the object, but that is a bit GC dependent and implementing it properly would require calling `gc.collect()`. Not sure if that is worth the hassle.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2251#issuecomment-1781948773:84,reliab,reliable,84,https://qutip.org,https://github.com/qutip/qutip/pull/2251#issuecomment-1781948773,1,['reliab'],['reliable']
Availability,"> Not sure why, but I have trouble downloading opening HTML documentation from the artifact... I will re-run the doc build to see if it change anything. The download worked for me and the HTML and PDF docs look okay.; ; > Is it needed to fix all version up the the micro release?. This PR doesn't change that. We fix the version to micro releases to ensure that the documentation builds don't fail or do odd things without us noticing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2149#issuecomment-1495028797:35,down,downloading,35,https://qutip.org,https://github.com/qutip/qutip/pull/2149#issuecomment-1495028797,2,['down'],"['download', 'downloading']"
Availability,"> Overall, it look good as a way to make HEOM solvers work on v5. Woot. > But the use of data layer seems not ideal, why is the rhs fixed to `csr`. With it's size, it's probably not ideal as a Dense, but I don't think we should raise an error for other type... It doesn't actually restrict the RHS to CSR -- it only *constructs* the RHS as a CSR initially. The base solver will convert the RHS to the correct format for the integrator if needed. It might be possible one day to avoid constructing the RHS as a CSR but it might be tricky to make it not horribly slow, so I'd like to leave this as potential enhancement rather than work on it right now. > There is no `heomsolve` to go with `HEOMSolver`. I've added `heomsolve`. It has more parameters than `sesolve` or `mesolve`, which is not great, but I'm not sure how to avoid it. The bath and the max_depth are not really optional for the HEOM, and there aren't reasonably default values. > With other solvers, they accept `H` as a `Qobj` or `QobjEvo` only, list format is accepted by the __solve function. I changed HEOMSolver to only support `Qobj` or `QobjEvo`. I allowed `HSolverDL` to continue to support other objects since `HSolverDL` exists only for backwards compatibility. Perhaps we should remove it at some point, but the amount of code in it is also tiny. > `bofin_*.py` does not have a `__all__`, even if they are not supposed to be imported directly, it would be better if they had. I've added `__all__`.; ; > The test coverage does not include time-dependent Hamiltonian. Are those too slow to include in automated tests?. The tests don't include a truly time-dependent case because it's hard to solve one analytically. Previously I tested the time-dependent logic by supplying `[H]` as the system (i.e. fooling the code into using the time-dependent path) but that broke when I switched to using `QobjEvo.isconstant`. I fixed it by using `[H, lambda t: 1.0]` instead, which would be very hard to determine as constant. Thank for pi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1869#issuecomment-1165701845:237,error,error,237,https://qutip.org,https://github.com/qutip/qutip/pull/1869#issuecomment-1165701845,1,['error'],['error']
Availability,"> Overly specific build-system.requires can also cause failures with conda-forges build system. Conda-forge does not and cannot use `build-system.requires`; those are PyPI packages and they might not even have the same name in Conda. Conda always sets PIP_NO_BUILD_ISOLATION to avoid this. This (the linked log) is tripping up on setup_requires, which is deprecated and I don't think you have it set up correctly anyway; if you ask for `Cython` but don't `install_requires` Cython, Cython will not be installed before running the setup.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1735#issuecomment-989955502:55,failure,failures,55,https://qutip.org,https://github.com/qutip/qutip/pull/1735#issuecomment-989955502,1,['failure'],['failures']
Availability,> Perhaps it is related to the new specializations for dense that were merged on Friday? Previously some operations that went via the sparse data layer may have been tidied up and now they are not. That could be the reason. I posted this just in case there are some undesired changes that got merged accidentally. It is not difficult to fix it on the side of `qutip-qip`. Just add a filter to the probabilities and states. I agree that we could use the `atol` from core options by default and perhaps add a tolerance parameter to some measurement functions.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2029#issuecomment-1336432722:507,toler,tolerance,507,https://qutip.org,https://github.com/qutip/qutip/issues/2029#issuecomment-1336432722,1,['toler'],['tolerance']
Availability,"> Please just use a single pyproject.toml with oldest-supported-numpy. You don't need to copy them around, the build you get is fine for docs & users. You can disable build isolation if you need to have a special newer NumPy for the compile (which is very rare). Thank you for taking a look here. As I explained before, we can't just use oldest-supported-numpy directly because we also require numpy >= 1.16.6 for our own code. The pypi-pyproject.toml file contains a copy of oldest-supported-numpy but with everything less that 1.16.6 replaced with 1.16.6. Overly specific build-system.requires can also cause failures with conda-forges build system -- e.g. this one for building this project with Python 3.10 on Windows 64 -- https://dev.azure.com/conda-forge/feedstock-builds/_build/results?buildId=407213&view=logs&jobId=00f5923e-fdef-5026-5091-0d5a0b3d5a2c&j=00f5923e-fdef-5026-5091-0d5a0b3d5a2c&t=3cc4a9ed-60e1-5810-6eb3-5f9cd4a26dba (maybe there is some separate way around that).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1735#issuecomment-989950888:611,failure,failures,611,https://qutip.org,https://github.com/qutip/qutip/pull/1735#issuecomment-989950888,1,['failure'],['failures']
Availability,"> So my guess here is that pyximport keeps appending args like -O2 -fPIC etc to the call to gcc until it breaks. Not sure if it is a qutip thing or Cython. Why theory needs to be validated as a first step. I don't understand the point ""Why theory needs to validated as a first step"" in relation to your hypothesis on the issue. Otherwise, I will take a closer look at the qutip and Cython source codes to see if I can track something down.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/966#issuecomment-511643800:434,down,down,434,https://qutip.org,https://github.com/qutip/qutip/issues/966#issuecomment-511643800,1,['down'],['down']
Availability,"> String format coefficients (`'sin(w * t)' ` in H) which use cython for compilation often fails on windows. Using functions instead work better.; > ; > ```; > def f(t,args):; > return sin(args[""w""]*t); > H = [H0, [H1, f]]; > ```; > ; > Here there is also an error in the error message, we will fix that bug soon. Thanks this worked. > import numpy as np; > from qutip import *; > import matplotlib.pyplot as plt; > ; > delta = 0.2 * 2*np.pi; eps0 = 1.0 * 2*np.pi; A = 2.5 * 2*np.pi; omega = 1.0 * 2*np.pi; > H0 = - delta/2.0 * sigmax() - eps0/2.0 * sigmaz(); > H1 = A/2.0 * sigmaz(); > args = {'w': omega}; > H = [H0, [H1, 'sin(w * t)']]; > T = 2*np.pi / omega; > f_modes_0, f_energies = floquet_modes(H, T, args); > f_energies. This didnt' work for me. I'm also running it on a Mac",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1207#issuecomment-603977040:259,error,error,259,https://qutip.org,https://github.com/qutip/qutip/issues/1207#issuecomment-603977040,2,['error'],['error']
Availability,"> Thank you for looking at this.; > ; > `store_state` should still be the final factor whether states are stored or not. It's the one available everywhere and for v4. `mesolve` with `store_state` will have `result.states` being the output density matrix. `mcsolve` with the same `store_state` and default options should return a similar result.; > ; > So it would be better to have the new option be `precompute_average_states` and have it only control if the average is compute when all trajectories is stored. The if the `average_states` property it use, it could compute the average then, but never do so if not used.; > ; > Please keep `result.states` and `result.final_states` as is. They have the same behaviour as in v4 and we want to keep them for backward compatibility.; > ; > `runs_...` and `average_...` are new to v5 and could be renamed, but it's not clear that `density_matricies` is the average while `final_states` are for each trajectories. `smesolve` and sometime for `mcsolve` individual trajectories states are already density matrices. Thus `smesolve`'s result density_matricies could work as well for all states from all trajectories, causing confusion.; > ; > You implemented the `density_matricies` property twice.; > ; > Having the options to keep only the final states without keeping all the trajectories is a good idea. Be careful that the trajectory result have the final state stored. So I'm not entirely sure what you want the behaviour to be for each set of options. I think it is confusing to return a density matrix if you request store_states - the density matrix is not the same as the state of the system, and surely v5 is the perfect time to clear up issues like this. Personally I found this behaviour very surprising when updating to V5. I do agree that `density_matricies` should maybe be `average_density_matricies`. I am happy to change `mesolve` as part of this for consistency. If you want to keep it backwards compatible would it be possible to send a li",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2303#issuecomment-1906570023:134,avail,available,134,https://qutip.org,https://github.com/qutip/qutip/pull/2303#issuecomment-1906570023,1,['avail'],['available']
Availability,"> Thanks @jakobjakobson13. A few modules' tests fail, on all operating systems, https://travis-ci.org/github/qutip/qutip/jobs/746708587. I wonder why.; > ; I think I went a bit to far. Perhaps I will close this pull request and cut it down into smaller chunks. > By the way, what software did you use, `autoflake`?; >; No, `deepcode.ai` but I don't know really know how good or bad it performs in contrast to other static code checkers.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1394#issuecomment-735719114:235,down,down,235,https://qutip.org,https://github.com/qutip/qutip/pull/1394#issuecomment-735719114,1,['down'],['down']
Availability,"> The bug in the 3.9 tests seems a real bug with the new tests, it should be fixed. If it's numpy version specific, we can officially drop that version. (1.20). Yes, I need to fix that. > I see no mention of tidyup, some of the tested operation use it, should it not be turned off for these tests? Otherwise it will cause random fails eventually. Disabling tidyup during the tests is a good idea. > What is the plan for other functions? Most of the common function are tested, but some often used are missing (`kron`, `l2`, `isherm`, `expect`). For this PR I just covered all the functions that are methods of the `Data` class. Some of these call out to dispatch functions, but I included those anyway since they're part of the `Data` class API. > I am also curious about some of the more complex functions (`inv`, `expm`, `pow`) would fare, but I don't expect them to play nice with this kind of test. I suspect those will be a bit tricky, but I think we can still find a way to assert that they give the right answer even if it requires restricting a bit what examples hypothesis generates. > I disagree with making our code worst for common use case just to handle junk the same way others do. I don't think I did this anywhere now? In some cases what QuTiP was doing was just wrong. E.g. `inf * CSR-zeros` is just `NaNs` everywhere. The previous QuTiP answer was wrong. We also don't have to handle junk the same way, but we do have to handle junk in a way that is sensible and avoids silently propagating or swallowing errors. People are going to make mistakes, that set of people includes us as core QuTiP developers.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1957#issuecomment-1507141695:1524,error,errors,1524,https://qutip.org,https://github.com/qutip/qutip/pull/1957#issuecomment-1507141695,1,['error'],['errors']
Availability,"> The time-dependent weights are available as the `trace` attribute for each trajectories, so I though them as an (indirectly?) physical property of each trajectories. Since they are per trajectories, if feels normal to belong to the single trajectory result. But moving the logic to `NmmcResult` would simplify `MultiTrajResult` a lot and allow to remove `TrajectoryResult`. I do think it would be good to keep the `trace` property on the trajectories, but for the purpose of calculating the weighted averages, it could perhaps be treated like the other types of weights that we have.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2502#issuecomment-2297864958:33,avail,available,33,https://qutip.org,https://github.com/qutip/qutip/pull/2502#issuecomment-2297864958,1,['avail'],['available']
Availability,"> This bug is only in 4.4.0, the patch has not been released yet.; > Don't use parallel_map in windows for mcsolve and stochastic solvers to go around it.; > Or if you can install from source, the working version is in #1040. I download the version 4.4.1 from https://github.com/Ericgig/qutip/tree/4.4.1/qutip but still met this ; problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-519951711:228,down,download,228,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-519951711,1,['down'],['download']
Availability,"> This error message suggests to me that one of the things you're trying to add might be a numpy array:; > ; > ```; > TypeError: operand 'Qobj' does not support ufuncs (__array_ufunc__=None); > ```. Yes, you are right, sorry. I am closing the issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2326#issuecomment-1961079240:7,error,error,7,https://qutip.org,https://github.com/qutip/qutip/issues/2326#issuecomment-1961079240,1,['error'],['error']
Availability,"> This issue is a duplicate of #999, #1008 and #1018. It has been addressed by PR 1000.; > ; > #1000. Se discussion in #1018. Yep, I know that this is caused by the newest version of Siipy. But is there any possibilities to upgrade the qutip. It seems that it is difficult to ask the scipy team to ""downgrade"" the scipy, isn't it/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1019#issuecomment-502356360:299,down,downgrade,299,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-502356360,1,['down'],['downgrade']
Availability,"> This randomly failing test appears again. It is really getting annoying. I copied the error message from Travis bellow:; > ; > ```; > =================================== FAILURES ===================================; > ___________________________ test_MCSimpleConstStates ___________________________; > @pytest.mark.slow; > def test_MCSimpleConstStates():; > ""Monte-carlo: Constant H with constant collapse (states)""; > N = 10 # number of basis states to consider; > a = destroy(N); > H = a.dag() * a; > psi0 = basis(N, 9) # initial state; > kappa = 0.2 # coupling to oscillator; > c_op_list = [np.sqrt(kappa) * a]; > tlist = np.linspace(0, 10, 100); > mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; > options=Options(average_states=True)); > assert_(len(mcdata.states) == len(tlist)); > assert_(isinstance(mcdata.states[0], Qobj)); > expt = expect(a.dag() * a, mcdata.states); > actual_answer = 9.0 * np.exp(-kappa * tlist); > avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > > assert_equal(avg_diff < mc_error, True); > E AssertionError: ; > E Items are not equal:; > E ACTUAL: False; > E DESIRED: True; > ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; > ----------------------------- Captured stdout call -----------------------------; > 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; > 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; > 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; > 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; > 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; > 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; > 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; > 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; > 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; > 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; > Total run time: 20.34s; > ---------- covera",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1209#issuecomment-607478896:88,error,error,88,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607478896,2,"['FAILURE', 'error']","['FAILURES', 'error']"
Availability,"> This was reported on the help group; > https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU; > ; > (copying from there); > the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well.; > ; > If using mkl(2019.0), there will MKL read problems, like:; > ; > ```; > File ""C:\Users\ym24chen\Anaconda3\; > x = lu.solve(b, verbose=verbose); > File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve; > np_x, np_error); > OSError: exception: access violation reading 0x0000000000000008; > envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve; > ```; > ; > Env info:; > ; > ```; > QuTiP Version: 4.3.1; > Numpy Version: 1.15.4; > Scipy Version: 1.1.0; > Cython Version: 0.29.6; > Matplotlib Version: 3.0.3; > Python Version: 3.7.2; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: False; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip; > ==============================================================================; > ```. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975#issuecomment-536162505:214,rollback,rollback,214,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536162505,3,"['error', 'rollback']","['errors', 'rollback']"
Availability,"> What is the main difference between `expect` and `measure`? That's the main thing that comes up ; > to my mind. What different question are you answering? I also wonder if `expect` could be called. . `expect` returns the expectation value (i.e. probability weighted average of the measurements). `measure` returns a *single* measurement (i.e. an eigenvalue and an eigenstate, selected randomly with weighted probabilities). > The description of the `measure` function is a bit general maybe with this regard. But I might have ; > missed the point completely (my bad). Open to suggestions. I will also re-read it and see if I can think of something clearer.; ; > Somehow `smesolve` tests fail with Travis CI, not sure how this PR could have affected it. I'll dig a bit and see if the failure is related somehow.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1090#issuecomment-536753408:785,failure,failure,785,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-536753408,1,['failure'],['failure']
Availability,"> Which qutip-tensorflow tests are affected? All of them?. Yes, as this warning is raised when qutip is imported. > Do you know why qutip's own tests are not affected?. To be honest, I am not sure. I think at this moment the tests in `dev.major` do not treat warnings as errors (see [this commit](https://github.com/qutip/qutip/commit/c446e4acd0e4b87a7993a9861440debe5436023b)). Although I am not sure if prior to this commit qutip's own tests were affected. However, I have just realised that this is not the first time the deprecation warning from `pyximport` is silenced. In particular, in PR #1506 @jakelishman also silenced this warning in the master branch: ; https://github.com/qutip/qutip/blob/3432bfeb19ba14f1ef51e9e775588e33db17349c/qutip/cy/pyxbuilder.py#L39-L47; I can add the same comment and the `module=pyximport`. Was there any reason to not merge this change in dev.major?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1582#issuecomment-864919889:271,error,errors,271,https://qutip.org,https://github.com/qutip/qutip/pull/1582#issuecomment-864919889,1,['error'],['errors']
Availability,"> Why is scipy 1.8 only used by the py3.10? I expected python3.9 defaults to use the latest scipy. Because only the 3.10 build uses conda-forge (i.e. SciPy 1.8 isn't available in the base anaconda repositories yet). > Doing it like this, the deprecation warning will be visible to the users, so we may have issues complaining about it but since 4.7 is coming soon, I think it's fine. Python runs with deprecation warnings ignored by default unless one specifies `-X dev` or similar. They only show up here because we run pytest with `-W error`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1797#issuecomment-1031669297:166,avail,available,166,https://qutip.org,https://github.com/qutip/qutip/pull/1797#issuecomment-1031669297,2,"['avail', 'error']","['available', 'error']"
Availability,> With what errors?. The ones from https://github.com/qutip/qutip/issues/723#issuecomment-317495769,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-317825979:12,error,errors,12,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-317825979,1,['error'],['errors']
Availability,"> You see, the gate Gate(RY, targets=[0, 1], controls=None) is clearly wrong because RY acts only on one qubits. Yep ! That's what I thought as well..for all the single qubit gate outputs with two targets. I knew I was getting an error but was not sure why it was not the same error as both of you. It was because I was using the released version (like you predicted). . I was trying to put off installing from source for as long as I could because I would have to install conda and other dependencies manually. Now, I did get `ValuError`. Thanks !",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1330#issuecomment-810592555:230,error,error,230,https://qutip.org,https://github.com/qutip/qutip/issues/1330#issuecomment-810592555,2,['error'],['error']
Availability,"> `result.measurement` is not the same as `result.expect`, the measurement is an expectation value, but not of the `e_ops` but `m_ops` which are usually automatically generated from the `c_ops` and noise is added to the computed expectation value of the state of the trajectory. The noise is usually larger than the signal and makes it hard to see, but it should converge to mesolve's solution eventually.; > ; > `smesolve`'s `expect` are just the expectation value of the state of each trajectories (averaged or not depending on options) and should average to the master equation solutions with enough trajectories. Plot in cell 8 show the match is quite good. Even with enough trajectories, the numerical error from `smesolve` will be visible.; > ; > The equation solved are those written in the notebook. Various stochastic integration method are provided, the default is the taylor expansion of order 1.5. Thank you very much for your reply, but I still don't quite understand `smesolve`'s `expect` are just the expectation value of the state of each trajectories”. In my understanding, solving for 'smesolve' gives the corresponding 'ρ(t)' and then 'expect'. But 'smesolve' provides **[ntraj [int] number of trajectors]**, which means that there are _ntraj_ 'ρ(t)' (`expect`). If I want to show all _ntraj_ ‘s 'expect', how can I do it?. Can I understand `result.measurement` as measuring(POVM) the `smesolve.result` (where ρ(t) was given by solving the stochastic master equation) .$\hat{\rho}_{f}=\frac{\hat{\Omega}_{m}\hat{\rho}\hat{\Omega}_{m}^{\dagger}}{\mathrm{Tr}[\hat{\Omega}_{m}\hat{\rho}\hat{\Omega}_{m}^{\dagger}]}$。If this is the case, I don't understand the point of doing the measurement again here, because the stochastic master equation itself has a continuous measurement. What I want to do is simply solve the stochastic master equation to get enough trajectories **ρ(t)** and solve the relevant expected value **Tr[ρ(t)A]**. On the one hand, I want to see the expectations of a",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2194#issuecomment-1635364206:707,error,error,707,https://qutip.org,https://github.com/qutip/qutip/issues/2194#issuecomment-1635364206,1,['error'],['error']
Availability,"> `solver_options` contains all available options. I don't think we want to breaks this pattern for this. Maybe fixing MCSolver to use `options.get(""improved_sampling"", False)` instead of `options[""improved_sampling""]` would be enough for now. Okay, I have fixed it like this for now. > But it shows that our solver class structure is to be reworked or we need an equivalent to `improved_sampling` for `nm_mcsolve`. I could try implementing `improved_sampling` for `nm_mcsolve`, but that would need a bit more time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2234#issuecomment-1754376221:32,avail,available,32,https://qutip.org,https://github.com/qutip/qutip/pull/2234#issuecomment-1754376221,1,['avail'],['available']
Availability,"> pytest has this bad habit of loading all available plugins whether or not they're actually used by the tests being run. It's quite annoying actually. It would be better if it only loaded plugins specified in conftest.py. Absolutely agree with this. > But it can be useful if the test code itself can be made robust with respect to the problem. Also yes - if I understand right, it's just the testing code that's a problem here, right, not the actual internal code? We can't swap to `pyplot.close('all')` in the library code (for obvious side-effect-y reasons), but if it's in the tests, then it shouldn't be an issue to change. I wonder why it caused a problem in the first place, though - if we could track it down (does `xvfb` do similar things to inline backends with respect to ""capturing"" images during construction/return?) it would be nice to use something slightly more targetted than `pyplot.close('all')`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639#issuecomment-909159005:43,avail,available,43,https://qutip.org,https://github.com/qutip/qutip/issues/1639#issuecomment-909159005,3,"['avail', 'down', 'robust']","['available', 'down', 'robust']"
Availability,"> you can see that when it runs conda uninstall cython, it downgrades numpy to 1.14.2. This is really strange. > This would not be a problem in a conda-forge release build, because the numpy API dependency is pinned in the feedstock, but it is a potential problem on pip source builds. I was setting up a GitHub Action test for `qutip_qip` https://github.com/qutip/qutip-qip/pull/6. `pip installation` works well there, but it could be that I don't use any run-time compiling.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1448#issuecomment-782174452:59,down,downgrades,59,https://qutip.org,https://github.com/qutip/qutip/pull/1448#issuecomment-782174452,1,['down'],['downgrades']
Availability,"@AFvanloo Could you explain a little more what you are doing? The error appears to have been generated by an attempt to recompile `qutip.cy.openmp.parfuncs` without openmp installed, which is unlikely to have happened unless something is attempting to rebuild every cython or cpp file and ignoring qutip's `setup.py`. I also see `pyrex` in your path. The last stable release of `pyrex` was in 2010 and as far as I know it is still inactive. I am not sure what advice to give yet, but I am curious about what is going on. :)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1810#issuecomment-1043525004:66,error,error,66,https://qutip.org,https://github.com/qutip/qutip/issues/1810#issuecomment-1043525004,1,['error'],['error']
Availability,"@Akhikar I know the error message is the same, but could you open a new issue for this and follow the issue template? This bug was addressed awhile ago, and if you open a new issue we'll know what versions of all the installed software you're using. Usually this issue arises when something went wrong while installing QuTiP, or because you have a script whose name conflicts with an existing package name.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-1220411689:20,error,error,20,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-1220411689,1,['error'],['error']
Availability,"@ArchieB151 The output is very strange. No new version of QuTiP was released in the last month. The ODE integration error you received would only appear if the problem being solved changed somehow. The initial state in your plot doesn't match the psi0 defined in the code (i.e. both expectation values are zero). Could you try do everything from scratch again? Start with a completely fresh download of the notebook, restart the Jupyter kernel entirely run everything from the top?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1987#issuecomment-1229018060:116,error,error,116,https://qutip.org,https://github.com/qutip/qutip/issues/1987#issuecomment-1229018060,2,"['down', 'error']","['download', 'error']"
Availability,"@BoxiLi #1179 is possibly not a suitable solution, because it would remove support for IM6. I implemented an alternative at #1194 which should be a bit more resilient. Both would be easy to merge in with this one.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1187#issuecomment-602907441:157,resilien,resilient,157,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-602907441,1,['resilien'],['resilient']
Availability,"@BoxiLi . Thanks, I've commented this error check out of circuit.py, and am able to run my program now!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1803#issuecomment-1040626038:38,error,error,38,https://qutip.org,https://github.com/qutip/qutip/issues/1803#issuecomment-1040626038,1,['error'],['error']
Availability,"@BoxiLi I am a bit confused with the wording of this issue. Is the goal to find what other gates might be creating `ValueError` when `resolve_gates` acts on them ? Then once these gates are identified, figure out the source of error in code of `resolve_gates` ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1330#issuecomment-794673938:227,error,error,227,https://qutip.org,https://github.com/qutip/qutip/issues/1330#issuecomment-794673938,1,['error'],['error']
Availability,"@BoxiLi I am happy with the code in this PR now. Great work.; Can you resolve the merge conflicts? I am guessing this is why we don't see the Travis test results. I am not concerned about the CodeClimate test failures. Might be worth commenting on this:; 'Function adjacent_gates has a Cognitive Complexity of 142 (exceeds 5 allowed).' ; though, as it's an order of magnitude beyond the rest :-). Thanks, Alex.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1065#issuecomment-537843702:209,failure,failures,209,https://qutip.org,https://github.com/qutip/qutip/pull/1065#issuecomment-537843702,1,['failure'],['failures']
Availability,"@BoxiLi I have the latest version installed. . I do not get any gates after applying `resolve_gates()`. My issue is I fail to get the same error type i.e. `ValueError`. When I ran the code as it is, I do not get any gates besides an indicator that the code ran successfully. So, I used `print(A.resolve_gates())` which gave me `qutip.qip.circuit.QubitCircuit object at 0x7fb64044eaf0`. This is most definitely not the expected output of `resolve_gates()` as specified [here](https://github.com/qutip/qutip/blob/8681e995c09986a4355ba16d586dd2d2f1f49657/qutip/qip/circuit.py#L1205)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1330#issuecomment-810442694:139,error,error,139,https://qutip.org,https://github.com/qutip/qutip/issues/1330#issuecomment-810442694,1,['error'],['error']
Availability,"@BoxiLi Sure, the tests looks not too complex. I'm working on it. I'm grouping the gates for better error handling. @jakelishman Thanks. Sorry, I was just too lazy to set up the tests on my machine, LOL. I simply create the pull request and see if the code pass. That's why there are always one or two minor fixes here.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1269#issuecomment-629843104:100,error,error,100,https://qutip.org,https://github.com/qutip/qutip/pull/1269#issuecomment-629843104,1,['error'],['error']
Availability,"@BoxiLi Thank you, that was the root of the problem. I'd made an error while defining the list of coefficients. It's working fine now.; That last coefficient was not supposed to be that large.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1623#issuecomment-886178364:65,error,error,65,https://qutip.org,https://github.com/qutip/qutip/issues/1623#issuecomment-886178364,1,['error'],['error']
Availability,"@BoxiLi thank you so much for the comments! . I addressed all your comments in my new commit, but when I try to run the tests with `pytest` I get a strange error:. <img width=""570"" alt=""Screen Shot 2023-05-27 at 1 01 17 PM"" src=""https://github.com/qutip/qutip/assets/74874354/1b34ab67-a5c0-4223-863d-d7b64109f153"">. This seems to be an issue with a circular import in `qutip.core.data.__init__.py` file, but I haven't touched anything in that file, or for that matter, any file besides `qutip.core.operators.py` and `qutip.tests.core.test_operators.py`. I wanted to reach out and ask if this problem has been resolved somewhere else. Also, to avoid the circular import problem with `tensor`, would it be better if I created a new py file (`qutip.core.fermionic_operators.py`) for these new operators? happy to do this if it would be helpful. Thank you so much, and please let me know if you have any insight on the `pytest` error :)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2166#issuecomment-1565664898:156,error,error,156,https://qutip.org,https://github.com/qutip/qutip/pull/2166#issuecomment-1565664898,2,['error'],['error']
Availability,"@ChesterCamm @jakelishman I've attempted to clean up the figure state tracking in Bloch.render() to make it more robust. As a bonus, I can no longer crash .render() in my own Python console by closing a figure and calling .render() now updates any existing figure that is already shown. @ChesterCamm Feedback on whether my change helps your case would be appreciated. The new code also works with all sort of combinations of .show() and .render() in a Jupyter notebook for me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1616#issuecomment-884790771:113,robust,robust,113,https://qutip.org,https://github.com/qutip/qutip/issues/1616#issuecomment-884790771,1,['robust'],['robust']
Availability,"@Ericgig @nwlambert @jakelishman I'm hoping one of you has a chance to review. This makes the Bloch sphere plotting significantly more robust for me, so it would be nice to merge it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1619#issuecomment-892545572:135,robust,robust,135,https://qutip.org,https://github.com/qutip/qutip/pull/1619#issuecomment-892545572,1,['robust'],['robust']
Availability,@Ericgig Could we check whether tlist is monotonic when `_safe_mode` is true? It might make the error clearer.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605#issuecomment-879184807:96,error,error,96,https://qutip.org,https://github.com/qutip/qutip/issues/1605#issuecomment-879184807,1,['error'],['error']
Availability,"@Ericgig Hey Eric, I fixed the test script issues last week, but wasn't sure if you wanted me to ping you again. I'm pinging you again now, but if this isn't what you would like, please let me know!. That is, I'm _pretty sure_ everything should be working now. The test_flimesolve.py script, flimesolve (with your changes made - without the fixing of the step method yet), and correlation.py (where I added options for FLiMESolve to be used) should all be working now. Let me know if there's anything else that needs fixed. Thank you!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-2082770693:97,ping,ping,97,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-2082770693,2,['ping'],"['ping', 'pinging']"
Availability,"@Ericgig Hey Eric, added your changes to the test, fixed the documentation error as well. I also added a steady state solver, would you want me to make a test for that?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-2094417518:75,error,error,75,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-2094417518,1,['error'],['error']
Availability,"@Ericgig Hey again Eric, sorry for the double ping. Small issue where I forgot to turn the returned Floquet states (when desired) as quantum objects instead of just numpy arrays. This caused one of the example scripts to mess up again. I fixed this and it looks like the script runs on my end.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-2083263942:46,ping,ping,46,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-2083263942,1,['ping'],['ping']
Availability,@Ericgig Hi. Do you have any advice on plot_wigner_sphere and matrix_histogram? I will fix the documentation error tomorrow.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2193#issuecomment-1632461619:109,error,error,109,https://qutip.org,https://github.com/qutip/qutip/pull/2193#issuecomment-1632461619,1,['error'],['error']
Availability,"@Ericgig Hi. I tried to fix the documentation error, but I do not know how to fix the following errors. Could you help me?; ```; /home/runner/work/qutip/qutip/qutip/visualization.py:docstring of qutip.visualization.hinton:10: WARNING: Bullet list ends without a blank line; unexpected unindent.; looking for now-outdated files... none found; /home/runner/work/qutip/qutip/qutip/visualization.py:docstring of qutip.visualization.hinton:7: WARNING: Bullet list ends without a blank line; unexpected unindent.; /home/runner/work/qutip/qutip/qutip/visualization.py:docstring of qutip.visualization.hinton:23: WARNING: Bullet list ends without a blank line; unexpected unindent.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2193#issuecomment-1634245514:46,error,error,46,https://qutip.org,https://github.com/qutip/qutip/pull/2193#issuecomment-1634245514,2,['error'],"['error', 'errors']"
Availability,"@Ericgig I am now trying to use pytest's parametrize feature which allows us to parametrize input to test functions variable by variable. I was able to successfully rewrite some tests which use `yield`, but this one (`test_trunc_neg`) in particular throws an error. Could you please run the following self sufficient snippet locally and inform me if there is anything wrong with the values in this example?? Thanks for the tip about yield, that might indeed be what is wrong. ```; from qutip import *; import numpy as np; import pytest; from numpy.testing import (assert_equal, assert_, assert_almost_equal,; run_module_suite). @pytest.mark.parametrize(""method"", ['clip', 'sgs']); @pytest.mark.parametrize(""qobj"", [rand_dm(5), Qobj(np.diag([1.1, -0.1])),; rand_unitary(3)*Qobj(np.diag([1.1, 0, -0.1]))*rand_unitary(3).dag()]); @pytest.mark.parametrize(""expected"", [None, Qobj(np.diag([1.0, 0.0])),; rand_unitary(3)*Qobj(np.diag([1.0, 0.0, 0.0]))*rand_unitary(3).dag()]); def test_trunc_neg(method, qobj, expected):; ""Checks trunc_neg in several different cases.""; pos_qobj = qobj.trunc_neg(method=method); assert(all([energy > -1e-8 for energy in pos_qobj.eigenenergies()])); assert_almost_equal(pos_qobj.tr(), 1); if expected is not None:; assert_almost_equal(pos_qobj.data.todense(), expected.data.todense()); ```. Also, I would like to rewrite all the tests which use `yield` in this format, would that be okay?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131#issuecomment-571008013:259,error,error,259,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-571008013,1,['error'],['error']
Availability,"@Ericgig I am wondering whether in v5.1 we should add a way for users to specify the timescale of a QobjEvo. At the moment if one knows the timescale when calling the solver one can just set max step, but in code like Boxi's where one is handling QobjEvos or pulses that were created somewhere else, it can be a lot of extra work to determine what the max_step should be, and it would be good if the QobjEvo already had that information. The downside is that one might have to specify the time step when creating the QobjEvo, and that might be too annoying or too easy to forget to do.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2040#issuecomment-1344175267:442,down,downside,442,https://qutip.org,https://github.com/qutip/qutip/pull/2040#issuecomment-1344175267,1,['down'],['downside']
Availability,"@Ericgig I have made the changes upto best of my knowledge, I am not able to figure out how to apply phase fixing to the new operator type. . Also after a few iterations my local build seems to give cython errors, is there a wiki on how to sort that out?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2351#issuecomment-2001914855:206,error,errors,206,https://qutip.org,https://github.com/qutip/qutip/pull/2351#issuecomment-2001914855,1,['error'],['errors']
Availability,@Ericgig I marked your remarks as resolved and made some new changes. If anything more required don't hesitate to ping me.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/917#issuecomment-472813749:114,ping,ping,114,https://qutip.org,https://github.com/qutip/qutip/pull/917#issuecomment-472813749,1,['ping'],['ping']
Availability,"@Ericgig I was indeed a few commits behind, but after I merged the current mater to my branch, I cannot import `mcsolve `any more. `from qutip import mcsolve` gives the following error; ```; <ipython-input-1-58732ae050c2> in <module>; ----> 1 from qutip import mcsolve. c:\users\boxi\onedrive\studium\qutip-project\qutip\qutip\__init__.py in <module>; 205 from qutip.mesolve import *; 206 from qutip.sesolve import *; --> 207 from qutip.mcsolve import *; 208 from qutip.stochastic import *; 209 from qutip.essolve import *. c:\users\boxi\onedrive\studium\qutip-project\qutip\qutip\mcsolve.py in <module>; 46 from qutip.qobjevo import QobjEvo; 47 from qutip.parallel import parfor, parallel_map, serial_map; ---> 48 from qutip.cy.mcsolve import CyMcOde, CyMcOdeDiag; 49 # cy_mc_run_ode = None; 50 from qutip.sesolve import sesolve. ModuleNotFoundError: No module named 'qutip.cy.mcsolve'; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1016#issuecomment-501759471:179,error,error,179,https://qutip.org,https://github.com/qutip/qutip/issues/1016#issuecomment-501759471,1,['error'],['error']
Availability,@Ericgig I've started this branch specifically to tackle the strange steadystate (and other) test failures.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1694#issuecomment-948435607:98,failure,failures,98,https://qutip.org,https://github.com/qutip/qutip/pull/1694#issuecomment-948435607,1,['failure'],['failures']
Availability,"@Ericgig Not sure if it's directly related to this PR, but the Travis build failed on `test_diag_liou_mult` with the following tolerance error:; ```; > np.testing.assert_allclose(target, calculated, atol=1e-12); E AssertionError: ; E Not equal to tolerance rtol=1e-07, atol=1e-12; E ; E Mismatched elements: 2 / 6724 (0.0297%); E Max absolute difference: 3.36667153e-12; E Max relative difference: 1.85567862e-08; ```; Not sure if we should relax the tolerance slightly now (maybe 1e-11?), or in a separate PR later, or if there is something real to fix.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1420#issuecomment-853030860:127,toler,tolerance,127,https://qutip.org,https://github.com/qutip/qutip/pull/1420#issuecomment-853030860,4,"['error', 'toler']","['error', 'tolerance']"
Availability,"@Ericgig Should we just raise an error if `offset != 0` is passed with `method=""operator""`?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1469#issuecomment-991004427:33,error,error,33,https://qutip.org,https://github.com/qutip/qutip/pull/1469#issuecomment-991004427,1,['error'],['error']
Availability,"@Ericgig Thanks for finding that -- I obviously missed a last round of testing in Jupyter notebooks. I've added a special case for the inline backed in Jupyter notebook and even more comments. The downside is that the whole situation with matplotlib is crazy and the current Bloch implementation is not making things any more sane. The upside is that things now seem to work fairly nicely for me in practice. Holding thumbs that they work nicely for you too. P.S. As a bonus, `b.show()` now works for displaying the colormap and the `b.fig` special case is no longer needed (although it still works too).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1619#issuecomment-989293761:197,down,downside,197,https://qutip.org,https://github.com/qutip/qutip/pull/1619#issuecomment-989293761,1,['down'],['downside']
Availability,"@Ericgig Thanks for finding this. I don't think we should add a setting for this though -- it's too obscure. The point of returning `None` when `p == 0` seems to be to avoid division by zero, not to round down small probabilities. I think we should either 1) update the test or 2) if we lots some precision in a recent change, try to get that precision back. Do you know which change caused the loss of precision?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1656#issuecomment-917036156:205,down,down,205,https://qutip.org,https://github.com/qutip/qutip/pull/1656#issuecomment-917036156,1,['down'],['down']
Availability,@Ericgig Will you ping me when you'd like another round of review? Thanks for making the changes so far.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2210#issuecomment-1789395152:18,ping,ping,18,https://qutip.org,https://github.com/qutip/qutip/pull/2210#issuecomment-1789395152,1,['ping'],['ping']
Availability,"@Ericgig `b=Bloch()` QuTiP 4.3.1 and 4.4.0.dev0+5af8c1c5 on python 3.7.3 works on Mac, both from shell and Jupyter notebook. Also plotting is fine. Simply running `Bloch()` in Jupyter notebook gives the error; ```; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); /miniconda3/lib/python3.7/site-packages/IPython/core/formatters.py in __call__(self, obj); 343 method = get_real_method(obj, self.print_method); 344 if method is not None:; --> 345 return method(); 346 return None; 347 else:. /miniconda3/lib/python3.7/site-packages/qutip/bloch.py in _repr_svg_(self); 298 from IPython.core.pylabtools import print_figure; 299 self.render(); --> 300 fig_data = print_figure(self.fig, 'svg').decode('utf-8'); 301 plt.close(self.fig); 302 return fig_data. AttributeError: 'str' object has no attribute 'decode'; ```; but then plots the Bloch sphere, I don't know if it's a problem though or the correct functioning of the class. In shell it gives the object reference.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1011#issuecomment-502906115:203,error,error,203,https://qutip.org,https://github.com/qutip/qutip/issues/1011#issuecomment-502906115,1,['error'],['error']
Availability,"@Ericgig and I had a brief discussion about how to handle `inf` and `nan` generally. One option is forbid them entirely from the data layer -- i.e. to check and raise an error whenever a new data layer is created. A potential downside to this is we'd have to check often to be sure, since any operation can potentially create `nan` and `inf`, even simple addition:; ```python; >>> 1e308 + 1e308; inf; >>> (1e308 + 1e308) - (1e308 + 1e308); nan; ```; an alternative is to try propagate `nan` and `inf` only as correctly as, e.g., `BLAS`. What happens with `BLAS` is that `nan` and `inf` propagate reasonably correctly, but are considered fairly interchangeable -- i.e. `nan`, `inf`, and `-inf` are all just bad values.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1957#issuecomment-1208234717:170,error,error,170,https://qutip.org,https://github.com/qutip/qutip/pull/1957#issuecomment-1208234717,2,"['down', 'error']","['downside', 'error']"
Availability,"@Ericgig good idea about the tests, I'll implement them in this way. now there seems to be some problem with continuous integration, it fails on. ```; ERROR: Failure: ImportError (libgfortran.so.1: cannot open shared object file: No such file or directory); ```. I attempted to fix it by installing `libgfortran` using `conda`, however it didn't fix the issue. https://github.com/travis-ci/travis-ci/issues/4816#issuecomment-148789525; https://github.com/menpo/landmarkerio-server/issues/23#issuecomment-278361601. I don't want to mess up too much with continous integration as it takes long time to rebuild it, any suggestions on that?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/917#issuecomment-427726780:151,ERROR,ERROR,151,https://qutip.org,https://github.com/qutip/qutip/pull/917#issuecomment-427726780,2,"['ERROR', 'Failure']","['ERROR', 'Failure']"
Availability,"@Ericgig sure I will be happy to fix the linting errors, I seem to have missed your previous message about codeclimate, sorry about that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1655#issuecomment-926628157:49,error,errors,49,https://qutip.org,https://github.com/qutip/qutip/pull/1655#issuecomment-926628157,1,['error'],['errors']
Availability,"@Ericgig thanks! found the keywords. I am having some issue with the state being returned though and I am unsure how to work around them. I basically want to calculate expect(Oper, args[""state""]) which gives me a dimension mismatch, if I try doing (Oper*args[""state""]).tr() to find the expectation value, it tells me there is a shape mismatch. I initially start with Oper and psi0 shape as (8,8) but the args[""state""] returns a shape of (64,1). Any idea how to get around this issue? states in the 1d vector or the 2d matrix form also doesn't help leading to similar dimension mismatch errors. I was trying to look into the source code but couldn't figure out how to unflatten the Qobj state",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1538#issuecomment-786988728:586,error,errors,586,https://qutip.org,https://github.com/qutip/qutip/issues/1538#issuecomment-786988728,1,['error'],['errors']
Availability,"@Ericgig tracked this issue down to only occuring on numpy 1.21.X (and not 1.20.X) on CI workers with certain Intel CPUs (8171 and 8272). There are a number of changes in numpy 1.21 which could have caused this, but it might take awhile to track down. The plan from here is to make a small PR for some of the tiny clean-ups from here that seem good to have anyway, and then to create a new PR off of master to try get us back onto 1.21.X somehow (probably this will require a numpy fix, but maybe there is another work around).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1694#issuecomment-949937189:28,down,down,28,https://qutip.org,https://github.com/qutip/qutip/pull/1694#issuecomment-949937189,2,['down'],['down']
Availability,"@Ericgig: #1337 broke `mcsolve` seed reuse - it seems to be deliberate, since all the seed code has been explicitly cut. Is this something that `mcsolve` will no longer support? If so, we need to remove the tests of seeding, because they're failing the build, and if not we need to reinstate it quickly so we can have passing tests. Also options classes should probably throw an error when given an unknown key.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1338#issuecomment-675463113:379,error,error,379,https://qutip.org,https://github.com/qutip/qutip/pull/1338#issuecomment-675463113,1,['error'],['error']
Availability,@Ericgig: another random failure in the CI here (errored test is unchanged in this PR).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249#issuecomment-623953963:25,failure,failure,25,https://qutip.org,https://github.com/qutip/qutip/pull/1249#issuecomment-623953963,2,"['error', 'failure']","['errored', 'failure']"
Availability,"@Erotemic Thank you for documenting this. I will merge it shortly & have marked if for inclusion in QuTiP 4.6.3. Note that qutip-qip has also been split out into it's own package (https://github.com/qutip/qutip-qip) in preparation for QuTiP 5 so we should update it there too. `reverse_states` seems to reverse the order of the array of quantum and classical bits. It is a bit odd, so I'm happy to leave it undocumented. The original commit just read:. ```; commit dcf8d363718b6ee5a8a17ec9af00df4bc8aea166; Author: Robert Johansson; Date: Mon May 26 19:11:44 2014 +0900. allow reversing the circuit represenation. added support for multigate symbol; ```. @BoxiLi Just pinging you so you know I merged this and can comment if you like.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1652#issuecomment-914132388:668,ping,pinging,668,https://qutip.org,https://github.com/qutip/qutip/pull/1652#issuecomment-914132388,1,['ping'],['pinging']
Availability,"@Gerb0ise The `no attribute 'blas_opt_info'` error is from a change in numpy 1.22 the broke qutip. After you found it it was also reported in #1753 and fixed in #1752. It will be released in 4.6.3 but that will likely only be next week, so for now reverting to numpy 1.20.3 might be the correct solution. BLAS is OPENBLAS now because of the `nomkl` used previously. You can switch blas implementations back to MKL with `conda install ""libblas=*=*mkl""` (see https://conda-forge.org/docs/maintainer/knowledge_base.html#switching-blas-implementation).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750#issuecomment-1006031950:45,error,error,45,https://qutip.org,https://github.com/qutip/qutip/issues/1750#issuecomment-1006031950,1,['error'],['error']
Availability,"@HarshBabla99 I'm guessing based on the error message that you are running QuTiP on Windows. Do you have a C compiler installed? The compiler is needed to compile the strings. The Windows installation instructions are outlined at https://qutip.org/docs/latest/installation.html#installation-on-windows. I would recommend installing everything using conda if you can (see higher up on the install documentation page). If the compiler is installed, perhaps it is an issue with the compiler not being present in the `PATH`. Either way, this appears to be not an issue with QuTiP itself, but let's keep this issue open for a bit so that we can help you resolve things as best we can. I would also recommend upgrading your Python, QuTiP and numpy to more recent versions if possible. If you use conda, you should get the latest versions unless you explicitly request otherwise.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1914#issuecomment-1143281384:40,error,error,40,https://qutip.org,https://github.com/qutip/qutip/issues/1914#issuecomment-1143281384,1,['error'],['error']
Availability,@KosukeMizuno Thank you very much again for finding and reporting this error. We've addressed the issue in #1588. This fix will be included in the [4.6.3](https://github.com/qutip/qutip/milestone/19) release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1585#issuecomment-870513900:71,error,error,71,https://qutip.org,https://github.com/qutip/qutip/issues/1585#issuecomment-870513900,1,['error'],['error']
Availability,"@MartinSandeCosta, free feel to complete the tests in the way you want. However, maybe it is good to discuss a bit with @jakelishman? Since there is a refactoring of `qutip/tests/test_gates.py` in #1181. A lot of change in this test might make it hard to resolve two PRs later. Besides, it is better to leave a more detailed description in the PR. As the template indicated:; ```; **Description**; Describe here the proposed change. **Related issues or PRs**; Please mention the related issues or PRs here. If the PR fixes an issue, use the keyword fix/fixes/fixed followed by the issue id, e.g. fix #1184. **Changelog**; Give a short description of the PR in a few words. This will be shown in the QuTiP change log after the PR gets merged.; For example: ; Fixed error checking for null matrix in essolve.; Added option for specifying resolution in Bloch.save function.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1224#issuecomment-607803156:764,error,error,764,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607803156,1,['error'],['error']
Availability,"@Zac-HD Any suggestions for ways we could use hypothesis better? It all looks quite clean right now. Is there a way we can change what hypothesis prints when an example is found? E.g. we don't want the data layer object repr to include the contents of the array, but it would be nice to see that in the test failure output.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1957#issuecomment-1186229765:308,failure,failure,308,https://qutip.org,https://github.com/qutip/qutip/pull/1957#issuecomment-1186229765,1,['failure'],['failure']
Availability,"@ajgpitch I am trying to fix this will Pull #660. I do not see this on any other compiler, so it is hard to peg down. Hopefully, switching to a vector from a pointer does the trick. The strange thing is that Apple's own clang compiler does not abort with this error, but somehow XCODE does.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/649#issuecomment-286179882:112,down,down,112,https://qutip.org,https://github.com/qutip/qutip/issues/649#issuecomment-286179882,2,"['down', 'error']","['down', 'error']"
Availability,@ajgpitch I believe I fixed the pep8 issues. . There was also a cython issue where I was compiling tensor.pyx each time qutip starts (aka dev mode) rather than leaving it pre-compiled. I think this might be related to the travis test failures. We are about to find out.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/883#issuecomment-403663024:234,failure,failures,234,https://qutip.org,https://github.com/qutip/qutip/pull/883#issuecomment-403663024,1,['failure'],['failures']
Availability,"@ajgpitch I looked into the changes that Daniel mentioned. But, I would like to close this without merging with QuTiP as I feel that the QubitCircuit class needs some new features to make this addition interesting (Eg., allowing special ancillas, controlled measurement and tracking of the Pauli measurement errors etc.). This was almost 3 years back where I brute forced all of that as Gates. I am not happy to release this code as it is which can be buggy. So, I am closing this. If there is more interest later, we could open it again.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/603#issuecomment-466346440:308,error,errors,308,https://qutip.org,https://github.com/qutip/qutip/pull/603#issuecomment-466346440,1,['error'],['errors']
Availability,@ajgpitch Re-pinging (in case life got busy).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1090#issuecomment-541419814:13,ping,pinging,13,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-541419814,1,['ping'],['pinging']
Availability,"@ajgpitch yes, the solver does raise an error... but not always. I was able to get it to integrate a few times but it was very inconsistent. The other error it sometimes raises is ""too much accuracy was requested for the precision of the machine"". When I realized the issue, I was very surprised it even got that far and I still don't know how it could ever run the calculation with a bad `rho0`. @nonhermitian yes, I see the point in the code where `mesolve` digs down into various types of `H` input. I'll work on something for the easy Qobj cases first, and think about how to handle the function case. Should be able to test the size of what the function returns.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/479#issuecomment-221595850:40,error,error,40,https://qutip.org,https://github.com/qutip/qutip/issues/479#issuecomment-221595850,3,"['down', 'error']","['down', 'error']"
Availability,"@ajgpitch: i apologise. my mistake. i forgot about the review.; @sahmed95: downloaded your code. i get an error ""ModuleNotFoundError: No module named 'qutip.qip.icm'. where do I find this module?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/603#issuecomment-315327458:75,down,downloaded,75,https://qutip.org,https://github.com/qutip/qutip/pull/603#issuecomment-315327458,2,"['down', 'error']","['downloaded', 'error']"
Availability,"@albertomercurio Do you know if there is documentation of how the built-in support works somewhere? Perhaps the ""built-in"" support is only available in some newer version of Visual Studio? Or it has a bug? Or just works a bit differently?. Thank you for filing this issue -- I'm sure other Visual Studio users will encounter it too and hopefully this discussion will help even if the fix ends up being elsewhere.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1809#issuecomment-1043051695:139,avail,available,139,https://qutip.org,https://github.com/qutip/qutip/issues/1809#issuecomment-1043051695,1,['avail'],['available']
Availability,"@alexandrupaler Thank you for looking into this. You will have to download this branch and install it in order to find qutip.qip.icm. I think the following set of steps should do it. These are from this [stack overflow question](https://stackoverflow.com/questions/1911109/how-to-clone-a-specific-git-branch). 1. Clone my version of QuTiP using ; ```; git clone https://github.com/sahmed95/qutip.git; ```. 2. Checkout the icm branch in the cloned folder; ```; git checkout icm; ```; 3. Install QuTiP from that branch by going to cloned QuTiP folder; ```; python setup.py install; ```; Alternate way to do this is just copy paste the `qutip/qip/icm.py`, `qutip/qip/circuit.py` and `qutip/tests/test_qubitcircuit.py` files into your local installation of QuTiP. . There are examples in [`qutip/qip/tests/test_icm.py`](https://github.com/qutip/qutip/pull/603/files#diff-93808767f70729e7e757566e9a32b430) which may be useful to see how the code works. @ajgpitch @nonhermitian Suggestions on the recommended way of doing this ? There is this tool called [""hub""](https://hub.github.com) which allows you to directly checkout pull requests using `hub checkout https://github.com/qutip/qutip/pull/603`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/603#issuecomment-315378380:66,down,download,66,https://qutip.org,https://github.com/qutip/qutip/pull/603#issuecomment-315378380,1,['down'],['download']
Availability,"@andriusdc The easiest would be if you supplied a short snippet of Python code that when runs, reproduces this error.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605#issuecomment-879105295:111,error,error,111,https://qutip.org,https://github.com/qutip/qutip/issues/1605#issuecomment-879105295,1,['error'],['error']
Availability,@awkwardPotato812 Hi. Your error is similar to the problem on this [website ](https://iq.opengenus.org/module-compiled-against-api-version-0x10-but-this-version-of-numpy-is-0xe/). You may have to upgrade your numpy.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2098#issuecomment-1463557721:27,error,error,27,https://qutip.org,https://github.com/qutip/qutip/issues/2098#issuecomment-1463557721,1,['error'],['error']
Availability,"@bencbartlett Ah, yes. Well spotted. I have experience a similar problem when I tried to use MP with the control modules. Because there are back references to objects in the hierarchy it copied the whole object tree into memory for each process, which was hopelessly memory inefficient. It is one of the main reasons I am (slowly) work on a new implementation of the control modules. I did play around a bit and got something to work, but *I did not try Python 2*. Maybe we should consider dropping Python 2.x support in QuTiP v5? It's possible that new versions of Python 2.7 have resolved the instance method pickling issue. The 'hacky workarounds' post was from 2014. @sahmed95 I think we should accept Ben's option 3 proposal. We need to demonstrate we have a robust and elegant solution for multiprocessing before we move things to processor classes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/848#issuecomment-386245008:764,robust,robust,764,https://qutip.org,https://github.com/qutip/qutip/pull/848#issuecomment-386245008,1,['robust'],['robust']
Availability,@cgranade did you test your PR #362 against dick-t example? If so what were the results?; It would seem that dick-t is comparing a method that works with states in general (mixed or pure) with one that assumes states are pure. Do we have some method in qutip that gives the fidelity when states are assumed pure? It would seem more efficient (and less numerical error risk) to compute the fidelity without the sqrtm (as dick-t did in the comparison) if we knew the states were pure.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/361#issuecomment-134927300:362,error,error,362,https://qutip.org,https://github.com/qutip/qutip/issues/361#issuecomment-134927300,1,['error'],['error']
Availability,"@drew-parsons If fixing this will help packaging for Debian, we will definitely fix it!. This appears to be considered an `Xvfb` bug (or at least the discussion in https://github.com/The-Compiler/pytest-xvfb/issues/11 suggests that), but having tests close their windows does seem polite anyway. Installing `xvfb` and `pytest-xvfb` reproduces the error for me and adding `plt.close(""all"")` to the end of `testPlot` removes the error again. After that the rest of the test suite passes, although there have been some reports in the pytest-xvfb of timing or test order sensitive results, so there may be more problems to be found later. For now I'll open a PR that adds the `plt.close(""all"")`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639#issuecomment-909191682:347,error,error,347,https://qutip.org,https://github.com/qutip/qutip/issues/1639#issuecomment-909191682,2,['error'],['error']
Availability,"@fminga Thank you for catching the slow down, It should be better now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/991#issuecomment-498380704:40,down,down,40,https://qutip.org,https://github.com/qutip/qutip/pull/991#issuecomment-498380704,1,['down'],['down']
Availability,@gabbence95 ; Thank you for catching the error.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2331#issuecomment-1964255367:41,error,error,41,https://qutip.org,https://github.com/qutip/qutip/issues/2331#issuecomment-1964255367,1,['error'],['error']
Availability,@gadhvirushiraj Ping me when you'd like a re-review.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2110#issuecomment-1461774279:16,Ping,Ping,16,https://qutip.org,https://github.com/qutip/qutip/pull/2110#issuecomment-1461774279,1,['Ping'],['Ping']
Availability,"@gaurav-iiser Would you mind also merging the master branch into this one? We recently merged some changes that fixed regular failures in test runs after the new version of numpy broke some tests, and it would be good to have those included in here so that test runs pass.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1690#issuecomment-950320006:126,failure,failures,126,https://qutip.org,https://github.com/qutip/qutip/pull/1690#issuecomment-950320006,1,['failure'],['failures']
Availability,@gautierronan Apologies for the long delay in further review of this. Could you perhaps update this branch from master and then ping me to review it again? I can them hopefully review and merge this and mark it for inclusion in QuTiP 4.7.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1369#issuecomment-893433268:128,ping,ping,128,https://qutip.org,https://github.com/qutip/qutip/pull/1369#issuecomment-893433268,1,['ping'],['ping']
Availability,"@haoyudoingthings It looks from your error messages that they are caused not by the import cells, but by later cells, and are the result of having modified the notebook. For example, `H = qt.qobj_list_evaluate(h_t, tau, args)` is a modified line from cell 13 of the original notebook. I would suggest starting again from the original notebook and continuing from there. Some of the notebooks are out of date. We're setting up automated tests to correct that as part of this year's Google Summer of Code, but that has only just started so it might be a few months before we have everything set up. I'm closing this for now, but please feel free to update the issue if you encounter more problems.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1930#issuecomment-1153919964:37,error,error,37,https://qutip.org,https://github.com/qutip/qutip/issues/1930#issuecomment-1153919964,1,['error'],['error']
Availability,"@hodgestar , I think I responded to all your comments.; The tests for core/blochredfield.py are present, I think it has a 100% coverage.; I did little cut and paste, but stayed close to the original cython code when possible. The question I still have is about the `a_ops` format: I made breaking changes from v4, so I want to be sure the new way is clear. I think `matmul_var_data` should be available in `core/data` not implemented here, but I don't want to touch that part in this PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1651#issuecomment-1010222890:393,avail,available,393,https://qutip.org,https://github.com/qutip/qutip/pull/1651#issuecomment-1010222890,1,['avail'],['available']
Availability,"@hodgestar ; It's ready for another look.; I made it so the feedback can be set at `QobjEvo` creation, with `QobjEvo.add_feedback` method and with a method of the solver. `QobjEvo` with feedback can be used outside solver with a default value for the argument passed at creation. This default value is needed when creating the coefficient. When used in a solver an error will be raised if the solver cannot provide the feedback. The `QobjEvo` print will show it has feedback. . The solver method is mostly there for documentation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2210#issuecomment-1789631286:365,error,error,365,https://qutip.org,https://github.com/qutip/qutip/pull/2210#issuecomment-1789631286,1,['error'],['error']
Availability,"@hodgestar Hi, I have managed to reproduce the error with a much smaller code which i have attached at the bottom. Quitp.about() :. QuTiP Version: 4.7.0; Numpy Version: 1.21.5; Scipy Version: 1.7.3; Cython Version: 0.29.28; Matplotlib Version: 3.5.1; Python Version: 3.9.12; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /opt/anaconda3/lib/python3.9/site-packages/qutip. <img width=""1130"" alt=""Screenshot 2022-08-27 at 12 58 25"" src=""https://user-images.githubusercontent.com/75099190/187029284-1cda7133-9ed1-4b95-82a0-d1b5eb10c36e.png"">. ￼; <img width=""1074"" alt=""Screenshot 2022-08-27 at 12 58 46"" src=""https://user-images.githubusercontent.com/75099190/187029267-49dc711b-412f-4e12-acb4-cfb195902351.png"">. ￼; import numpy as np; from qutip import *. wc = 1.0 * 2 * np.pi ; wa = 1.0 * 2 * np.pi ; g = 0.05 * 2 * np.pi ; N=15 ; rate = 0.005. tlist = np.linspace(0, 25, 101); psi0 = tensor(basis(N, 0), basis(2, 1)) ; a = tensor(destroy(N), qeye(2)); sm = tensor(qeye(N), destroy(2)); H = wc * a.dag() * a + wa * sm.dag() * sm + g * (a.dag() * sm + a * sm.dag()). output = mesolve(H, psi0, tlist)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1987#issuecomment-1229179569:47,error,error,47,https://qutip.org,https://github.com/qutip/qutip/issues/1987#issuecomment-1229179569,1,['error'],['error']
Availability,"@hodgestar Thanks for you help!. However, If I set `dims=[4, 4, 4]`, an issue with the initial state arises. I'm setting an initial state by converting from a regular array to a Qobj:. `psi_zero=Qobj(psi_initial,dims=[4,4,4],type='ket')`. If I set `dims=[4, 4, 4]` instead of ` [[4, 4, 4], [1, 1, 1]]`, I will get an error for the ket:. ```; File ""C:\Users\OlekAdmin\anaconda3\lib\site-packages\IPython\core\formatters.py"", line 345, in __call__; return method(). File ""C:\Users\OlekAdmin\anaconda3\lib\site-packages\qutip\qobj.py"", line 831, in _repr_latex_; t = self.type. File ""C:\Users\OlekAdmin\anaconda3\lib\site-packages\qutip\qobj.py"", line 2058, in type; self._type = type_from_dims(self.dims). File ""C:\Users\OlekAdmin\anaconda3\lib\site-packages\qutip\dimensions.py"", line 65, in type_from_dims; bra_like, ket_like = map(is_scalar, dims). ValueError: too many values to unpack (expected 2); ```. It seems that qutip requires dims to be a list of two lists, giving two dimensions for each particle.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1803#issuecomment-1038576371:317,error,error,317,https://qutip.org,https://github.com/qutip/qutip/issues/1803#issuecomment-1038576371,1,['error'],['error']
Availability,"@hodgestar shall we attempt to sort out the caching now, or get things moved over ahead of Unitary Hack and sort it out later? I don't think it's particularly a blocking issue - the tests still all run fine, after all. There's an argument against using `pip wheel` caching for us - we've historically used our tests to try and catch errors when using new versions of packages, which we'd lose if we start pinning versions to one particular thing. I'm not sure which is more desirable for us - overall I think the time loss from installing `cvxpy` isn't _that_ high, and we'd get more improvement from redoing some of our older tests. (Not to mention the _effective_ wait time for tests to pass is now ~35 minutes, whereas it could be >2hours on Travis since you had to wait from Mac machines for a long time.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1551#issuecomment-839686694:333,error,errors,333,https://qutip.org,https://github.com/qutip/qutip/pull/1551#issuecomment-839686694,1,['error'],['errors']
Availability,"@hodgestar since yesterday our tests are failing for python3.9 ubuntu, but I can't reproduce the error locally...; I you have time could you take a look.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1689#issuecomment-943619749:97,error,error,97,https://qutip.org,https://github.com/qutip/qutip/pull/1689#issuecomment-943619749,1,['error'],['error']
Availability,"@hodgestar, I fixed the codeclimat issues and improved the error message. If your still fine with it, let's merge.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1778#issuecomment-1017814632:59,error,error,59,https://qutip.org,https://github.com/qutip/qutip/pull/1778#issuecomment-1017814632,1,['error'],['error']
Availability,@jakelishman I just pinged you for fun and because I though you might like to see the QuTiP documentation builds being dragged into the century of the fruit bat. :),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2149#issuecomment-1494599342:20,ping,pinged,20,https://qutip.org,https://github.com/qutip/qutip/pull/2149#issuecomment-1494599342,1,['ping'],['pinged']
Availability,"@jakelishman Sorry -- I forgot we added the TODO. I was speaking from a bigger picture perspective -- having CodeClimate fail all the time means that we might not notice if more failures are added accidentally, which would reduce the value of running CodeClimate in CI.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506#issuecomment-826663656:178,failure,failures,178,https://qutip.org,https://github.com/qutip/qutip/pull/1506#issuecomment-826663656,1,['failure'],['failures']
Availability,"@jakelishman Thanks for this really great PR. I have just a few comments to add to keep track of the private class `_alpha_matrix` and how it behaves. No changes to the code so if you think these comments are reasonable and can help to clarify how it all works for future maintenance, then go ahead and add them and we can merge this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1583#issuecomment-877301763:272,mainten,maintenance,272,https://qutip.org,https://github.com/qutip/qutip/pull/1583#issuecomment-877301763,1,['mainten'],['maintenance']
Availability,"@jakelishman, about the two issues you raised:. 1. Import time related to `import qutip`; I agree with you that in order to make it frictionless for downstream libraries to implement qutip's interface you'd want not to increase their loading times. That would easily be achieved by defining the `__qutip_qobj__` as the entry point of this API. A drawback of this implementation is that it requires the conversion method to be defined on the object itself.; The dispatch-like solution, as was proposed by @hodgestar, is easier to play with, can be defined in a separate file, can be added to a separate package like `netket_qutip_interop` or even using setuptools entry points, though that would add complexity. Again, I'm personally not biased. I would go with option 1 because it's simpler, but I do like the organisational beauty of option 2 (that is used throughout the jax ecosystem). 2. About implicit conversion; - Assume we can distinguish two level of APIs exposed by qutip, similar in spirit to the distinction there is between BLAS and LAPACK. ; - There are low level (BLAS-like) operations on Qobjs such as addition, kron, sum, ecc that are performed repeatedly, can be efficiently implemented only among objects whose data structure is well know. Everything is built on top of those, so they need to be fast with a low overhead. ; - There are higher-level (LAPACK-like) operations on Qobjs, such as `.eigenvalues()` or `eigenstates()`, or `sesolve/mesolve` which are built by combining several low level operations. Their runtime is much higher, and they perform a fair bit of setup/input handling, which comes at the price of some overhead, but which is negligible compared to the runtime cost for most meaningfully large systems. I'd then like to state that; - *I have never suggested to insert a mechanism to insert implicit conversion in the low-level operations.* ; - In this RFC in no way have I proposed to implement implicit conversion anywhere else then were is already done in qu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-913661687:149,down,downstream,149,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-913661687,1,['down'],['downstream']
Availability,"@jrjohansson plot_pulse is giving an error alongwith the output in case of linear spin chain, please check that out",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/165#issuecomment-46957561:37,error,error,37,https://qutip.org,https://github.com/qutip/qutip/pull/165#issuecomment-46957561,1,['error'],['error']
Availability,"@madphysicist Just re-pinging. As before, it's perfectly okay if you've run out of time a bit -- just let us know.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1469#issuecomment-875604784:22,ping,pinging,22,https://qutip.org,https://github.com/qutip/qutip/pull/1469#issuecomment-875604784,1,['ping'],['pinging']
Availability,@manas7891 This is a question about usage of qutip. Please ask on help group and include full code snippet.; https://groups.google.com/forum/#!forum/qutip. You get the test errors because you don't have working C++ compiler,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467351684:173,error,errors,173,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467351684,1,['error'],['errors']
Availability,"@matteoacrossi Thanks! I don't know that I have much particular advice, other than ""let's try debug the failing tests one at a time"". Maybe pick one of the `test_driven_cavity` ones, because I'm not quite sure how `ValueError: Invalid preconditioning method` can get raised when it succeeds on other platforms. Maybe it is a bug that isn't completely related to the M1?. Are you familiar with pdb? Running just the one test using pytest and `pytest --pdb` will allow to explore the stack trace and see the values of variables in each stack frame, and hopefully figure out what went wrong. Another first step is just to fix the line `raise ValueError(""Invalid preconditioning method."")` to be `raise ValueError(f""Invalid preconditioning method: {ss_args['method']!r}."")` so that the error messages gives more of a hint of what the invalid method name was.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755#issuecomment-1007285325:782,error,error,782,https://qutip.org,https://github.com/qutip/qutip/issues/1755#issuecomment-1007285325,1,['error'],['error']
Availability,"@mcditoos Thanks more making the PR. Would you mind reverting all the unrelated changes? We don't mind small clean ups, but big clean ups should rather go into separate PRs and it should be clear why they are being made. Once you're ready for this to be reviewed, remove the draft status and ping me on the PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2261#issuecomment-1824959705:292,ping,ping,292,https://qutip.org,https://github.com/qutip/qutip/pull/2261#issuecomment-1824959705,1,['ping'],['ping']
Availability,"@nathanshammah ; I am keeping the release up to date adding merged PR to this one.; This version has most bug fix PR since 4.5.0 and some testing/travis one.; Idealy I would also like to add 2 more waiting approval:; #1219 : Bug on windows using int32; #1215: parallel_map run on mac in python 3.8.; I did not add the PR about gates, they are new feature.; The latex one (#1194 ), I am not sure, so I left it for now.; To be really happy about the release I would like the segfault to be fixed, but I don't have the error and travis test also does not. So I am blind for that one. It will have to wait.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1215#issuecomment-613039746:516,error,error,516,https://qutip.org,https://github.com/qutip/qutip/pull/1215#issuecomment-613039746,1,['error'],['error']
Availability,"@nathanshammah ; That was a lot more than 1 commit but it's now ready.; - I added a test suite without cython. It only skip brmesolve time dependent tests. ; - Error is raised when trying to use brmesolve without cython, but not at qutip import.; - Every other features works without cython. I tested without cython with both conda and pip. It work with both when done properly but conda is not as stable: uninstalling cython can change numpy, scipy, etc.'s versions which break qutip. So I am not sure if it will work properly we downloaded as binaries from conda. But this error should already be present for conda installation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1082#issuecomment-535188336:160,Error,Error,160,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-535188336,3,"['Error', 'down', 'error']","['Error', 'downloaded', 'error']"
Availability,"@nathanshammah I've merged in master, waiting for builds to complete. The code climate error is seems largely unrelated to this PR (the PR adds a tiny snippet of code that is similar to 4 other existing pieces of code). I'm happy to refactor this a bit if someone makes a suggestion, but the code climate error seems overly zealous to me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1090#issuecomment-581037319:87,error,error,87,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-581037319,2,['error'],['error']
Availability,"@nathanshammah, everything seems to be working now! I fixed the small code-climate issues. I am pushing another commit with the changes. However, I am not eager to change __init__ function which has protective measures against a number of possible input errors and I do not even remember all of them readily.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1066#issuecomment-575514599:254,error,errors,254,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-575514599,1,['error'],['errors']
Availability,"@nathanshammah: It seems that travis fails before it even gets to the testing, when calibrating openmp. I cannot replicate the error on my end, the calibration takes only about a second for me. I did make 535010d more similar to 5501b2e by no longer using numpy.testing.assert_raises, numpy.testing.assert_warns and a ResourceWarning. Instead I use a try-except construction now. That seems to have fixed things, so I suspect that importing/calling one of the functions or the warning makes openmp fail on the rig used by travis. As I'm pretty sure the reason for the previous failure is either a numpy or openmp issue and therefore a hard fix, I would propose to simply not use those functions, the try-except construction does well enough.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/934#issuecomment-567132755:127,error,error,127,https://qutip.org,https://github.com/qutip/qutip/pull/934#issuecomment-567132755,2,"['error', 'failure']","['error', 'failure']"
Availability,@nonhermitian Hopefully you will see I pinged up on conda-forge/qutip-feedstock#18. There is a problem with the OSX build of QuTiP on the conda-forge,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/649#issuecomment-286091396:39,ping,pinged,39,https://qutip.org,https://github.com/qutip/qutip/issues/649#issuecomment-286091396,1,['ping'],['pinged']
Availability,"@nonhermitian The test failure is with NOMKL=1 and OPENMP=0. Specifically, a solver is unavailable. This is not related to the addition of this function. Something else is breaking. ```; cvxpy.error.SolverError: Solver 'CVXOPT' failed. Try another solver.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/752#issuecomment-331760244:23,failure,failure,23,https://qutip.org,https://github.com/qutip/qutip/pull/752#issuecomment-331760244,2,"['error', 'failure']","['error', 'failure']"
Availability,"@nonhermitian this seems to generate some errors, are you able to fix?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/735#issuecomment-465839176:42,error,errors,42,https://qutip.org,https://github.com/qutip/qutip/pull/735#issuecomment-465839176,1,['error'],['errors']
Availability,"@nonhermitian, I have fixed the import error but 2/4 testers fail. As far as I can tell this is unrelated to this PR. Is there anything that I should do before this can be merged?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/553#issuecomment-257148174:39,error,error,39,https://qutip.org,https://github.com/qutip/qutip/pull/553#issuecomment-257148174,1,['error'],['error']
Availability,@nquesada just pinging you as it would be great to have your contribution in the upcoming version release in a week or so.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1148#issuecomment-574254948:15,ping,pinging,15,https://qutip.org,https://github.com/qutip/qutip/issues/1148#issuecomment-574254948,1,['ping'],['pinging']
Availability,"@nwlambert ; Unable to run the test cases in (entropy.py) it show this error ; <img width=""850"" alt=""Screenshot 2024-03-20 at 2 48 54 AM"" src=""https://github.com/qutip/qutip/assets/147247481/710869a8-79e6-4941-b6d6-2ad0cf9fd76d"">; Can you please suggest me the solution to solve it ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2345#issuecomment-2008154917:71,error,error,71,https://qutip.org,https://github.com/qutip/qutip/issues/2345#issuecomment-2008154917,1,['error'],['error']
Availability,"@nwlambert Thanks for the help, it somehow solves the problem a bit. However, it doesn't really help much when I increase the Hilbert space cut-off to N=20 or 25. In fact, 4.7 still calculates instantly, but 5.0 will report an error that the space required is too large, or the kernel just shuts down itself... I don't know so much about algorithms, but from your answer it seems that 4.7 and 5.0 are using completely different ways to handle matrices? It seems the 5.0 method is in general a bit slower to handle heavier calculations?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2115#issuecomment-1463804614:227,error,error,227,https://qutip.org,https://github.com/qutip/qutip/issues/2115#issuecomment-1463804614,2,"['down', 'error']","['down', 'error']"
Availability,"@rohan999chaudhary Could you share the error traceback? . From the documentation, the default value for `blit` is False. Perhaps, you could remove the `blit` argument and try again?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1558#issuecomment-842039776:39,error,error,39,https://qutip.org,https://github.com/qutip/qutip/pull/1558#issuecomment-842039776,1,['error'],['error']
Availability,"@shemian29 Did this issue occur after you upgraded QuTiP or one of it's dependencies? And how did you install QuTiP? The IPython kernel crash suggests that maybe the installation is broken somehow (e.g. mismatched C libraries, etc). I can't reproduce your error on my side.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1705#issuecomment-959146334:256,error,error,256,https://qutip.org,https://github.com/qutip/qutip/issues/1705#issuecomment-959146334,1,['error'],['error']
Availability,"@shemian29 It's possible that the error is caused by using numpy 1.21.2 with MKL which triggers this bug -- https://github.com/numpy/numpy/issues/20356 -- on Intel CPUs that support AVX512. If that is the case, it should be fixed by install QuTiP 4.6.3 when it is released (hopefully early next week) and numpy 1.22. P.S. If you like, you could install QuTiP from the master branch and numpy 1.22 now and see if that solves your issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1705#issuecomment-1006413111:34,error,error,34,https://qutip.org,https://github.com/qutip/qutip/issues/1705#issuecomment-1006413111,1,['error'],['error']
Availability,@stelakus It's odd that `conda install nomkl qutip` is hanging when `conda install qutip` succeeded. I don't use Windows much myself. Other options are to try downgrade numpy to 1.20.3 perhaps. Or to see what other BLAS implementations are supported in your conda environment and try explicitly install one of those. If you can get more information on why the install is hanging (maybe with `conda install -vvv ...`) I might be able to make more suggestions. Aside: You seem to be running in your `base` conda environment. That is probably not a good idea -- create a new environment for each project you work on so that the `base` environment remains pristine.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750#issuecomment-1006037619:159,down,downgrade,159,https://qutip.org,https://github.com/qutip/qutip/issues/1750#issuecomment-1006037619,1,['down'],['downgrade']
Availability,@tamakoshi2001 Thanks for the info! That fixed my error.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2098#issuecomment-1465279129:50,error,error,50,https://qutip.org,https://github.com/qutip/qutip/issues/2098#issuecomment-1465279129,1,['error'],['error']
Availability,"@tehruhn let's look into this together this week so that I can understand better also Eric comments. I would be happy to merge, and open a separate issue on the np-Cython bit. nose to pytest migration has been dragging on for ages. Also, please let's try to find a way to have the docstrings print to screen, the verbosity=2 thing does not seem to work. With `nose` and current development master now I get a segmentation fault on Mac 10.14 so I cannot test locally.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131#issuecomment-563243088:422,fault,fault,422,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-563243088,1,['fault'],['fault']
Availability,"@thangleiter: this particular error looks possibly like it's caused by build incompatibility with the recently released numpy 1.20. I see that the environment is installing numpy 1.19, but I suspect that the build_wheels action of `pip install` is pulling in numpy 1.20. QuTiP 4.5 doesn't officially support installation from `pip` (we never had enough free CI available to build wheels) - you should be able to always get a working installation using the `conda-forge` channel of `conda`. We should have wheels in the next major release. We're currently facing a couple of problems with numpy 1.20 (#1433), but we'll be able to put out a patch when someone has time, which will include pinning numpy to a lower version when building.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-777556715:30,error,error,30,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-777556715,2,"['avail', 'error']","['available', 'error']"
Availability,"@trentfridey, there seems to be an error in the newly added towncrier github workflow that needs to be fixed before merging. Would you mind taking a look?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1927#issuecomment-1158769418:35,error,error,35,https://qutip.org,https://github.com/qutip/qutip/pull/1927#issuecomment-1158769418,1,['error'],['error']
Availability,@wrzadkow thank you. It sounds good to me. Could [detect](https://stackoverflow.com/questions/5376837/how-can-i-do-an-if-run-from-ipython-test-in-python) whether the environment is `IPython`. ; If you can write a test too for it to avoid environment-dependent errors that would be great.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/989#issuecomment-493725091:260,error,errors,260,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-493725091,1,['error'],['errors']
Availability,"@yosefrajwulf Thanks for pointing out the bug. I got an unrelated error in MacOS so restarting the tests. Hopefully, they pass and we can merge this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/943#issuecomment-456054829:66,error,error,66,https://qutip.org,https://github.com/qutip/qutip/pull/943#issuecomment-456054829,1,['error'],['error']
Availability,"A blog post with the method is now hosted also at https://unitary.fund/posts/krylov.html; @Ericgig @emilianomfortes what is the next step? I suggest you proceed by opening a PR. Due to the limitations of the method applicability, I could see a use for it as `krylovsolve` for the time being. ; Pinging also @quantshah @cgranade who've been involved in the mentoring of the project.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1668#issuecomment-973132966:294,Ping,Pinging,294,https://qutip.org,https://github.com/qutip/qutip/issues/1668#issuecomment-973132966,1,['Ping'],['Pinging']
Availability,"A check on macOS wasn’t successful, but I don’t see how that error message could have any relation with krylovsolve",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1739#issuecomment-1084513982:61,error,error,61,https://qutip.org,https://github.com/qutip/qutip/pull/1739#issuecomment-1084513982,1,['error'],['error']
Availability,AFAIK this error only manifests if you have a space of dimension 1.; and a space of dimension 1 is trivial. . Is there a use case where this actually manifests?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/823#issuecomment-398962107:11,error,error,11,https://qutip.org,https://github.com/qutip/qutip/issues/823#issuecomment-398962107,1,['error'],['error']
Availability,"About only storing kets, but not averaging into a dm, we can't do that yet, but it's easy to implement so if useful, we can add the option. The error is not in the `_to_dm`, but in the addition, which is done in the sparse CSR format. No dense conversion are made. But the `proj` operator does not have a tidyup step, so any non-zero are kept, however small they are. This is also an easy fix that could help. The `MemoryError` is also not that helpful, we should improve the error message to tell what size of arrays are allocated. Thank you for reporting these and trying the alpha version. I see you don't have cython, do you have a way to compile the source yourself? ; Once fixed, I would be curious to have you try the development version without waiting for a release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2299#issuecomment-1904338523:144,error,error,144,https://qutip.org,https://github.com/qutip/qutip/issues/2299#issuecomment-1904338523,2,['error'],['error']
Availability,"About tests being very slow, I saw the following notice when I open the details:; ```; Please be aware travis-ci.org will be shutting down in several weeks, with all accounts migrating to travis-ci.com. Please stay tuned here for more information.; ```; I think we are still on `travis-ci.org`? Is this related to us? Maybe ""switch CI to GitHub Actions"" is more pressing than we thought.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465#issuecomment-805920788:134,down,down,134,https://qutip.org,https://github.com/qutip/qutip/pull/1465#issuecomment-805920788,1,['down'],['down']
Availability,"About the simulation, the frequency of your `H0` is at the level of 10^12 (with w0=0), while your control amplitude `Delta` is only 10^6! This is a huge difference. I feel like there might be an error in the unit somewhere. The number of time steps sampled needs to be hundreds of millions. Simulate this whole process is not practical. By setting `w-w0=0` you discard the fast process and what remains is only `Delta`. With `w-w0=0`, I get reasonable oscillation with the following code; ```python; def pulse(t0,t):; return np.heaviside(t-t0,2e-9). def H1_coeff(t,args):; t0=args['t0']; phi=args['phi']; return Delta*pulse(t0,t)*np.sin((w-w0)*t+phi). H = [H0,[sx,H1_coeff]]. times=np.linspace(0, 0.00001, 1000). args = {""t0"":0, ""phi"":np.pi/2}; result = mesolve(H, basis(2,0), times, args=args, e_ops=[sz]); plt.plot(result.expect[0]); plt.show(); ```. If you want to observe the effect of RWA, you could set `w-w0` to be about 10 times `Delta`. That is, the frequency of your system's dynamics is about ten times larger than your driving. Discarding the system dynamics by RWA will lead to some visible error in the plot, but not significantly enough to destroy the driving dynamics. (Edited) About pulse that spikes up and dies down, a spike at one single time point is not well defined. Mathematically the integral will be 0 (in measures that makes sense here at least). If you want a pulse that is turned on for a certain duration and then off, you can use two Heaviside. But much easier: you can just shift your time scale and define your tlist `times` to be that time duration from `0` to `t_end`, which matches the duration of your pulse.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1466#issuecomment-810331229:195,error,error,195,https://qutip.org,https://github.com/qutip/qutip/issues/1466#issuecomment-810331229,3,"['down', 'error']","['down', 'error']"
Availability,"According to the error message; ```; WARNING: invalid signature for automodule ('qutip.core.gates\n :members:\n :show-inheritance:\n :imported-members:'); WARNING: don't know which module to import for autodocumenting 'qutip.core.gates\n :members:\n :show-inheritance:\n :imported-members:' (try placing a ""module"" or ""currentmodule"" directive in the document, or giving an explicit module name); ```; That should be the error source. Lets use; ```; .. automodule:: qutip.core.gates; :members: ...; ```; first and see if it works.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2441#issuecomment-2148414542:17,error,error,17,https://qutip.org,https://github.com/qutip/qutip/pull/2441#issuecomment-2148414542,2,['error'],['error']
Availability,"Actually let's also leave it open until I can determine if it is indeed scipy. After installing scipy with pip as the scipy folks suggested, the example I had in that issue is now working, but I get the same integration error with qutip and same tests failing. When I get time, i'll try to distill down the qutip error to a scipy error and post an update. Hopefully the main issue is just a scipy error, but would be good to confirm.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965#issuecomment-1205435786:220,error,error,220,https://qutip.org,https://github.com/qutip/qutip/issues/1965#issuecomment-1205435786,5,"['down', 'error']","['down', 'error']"
Availability,"Actually on a further look, `Qobj` does _not_ do suitable checks to prevent segfaults in Python-space code (including in the old version). I'll push a new commit to fix that. Behaviour without this PR:; ```python; In [1]: import qutip; ...: k1, k2 = qutip.rand_ket(50), qutip.rand_ket(100); ...: k1.overlap(k2); Segmentation fault: 11; ```. And with this PR:; ```python; In [1]: import qutip; ...: k1, k2 = qutip.rand_ket(50), qutip.rand_ket(100); ...: k1.overlap(k2); [ traceback removed ]; TypeError: incompatible lengths 50 and 100; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1306#issuecomment-652972473:325,fault,fault,325,https://qutip.org,https://github.com/qutip/qutip/pull/1306#issuecomment-652972473,1,['fault'],['fault']
Availability,"After fixing the fortran issue here is the error:. # . ## ERROR: Test Qobj: trunc_neg works for non-diagonal opers. Traceback (most recent call last):; File ""/home/travis/miniconda/envs/test-environment/lib/python3.5/site-packages/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/travis/build/qutip/qutip/qutip/tests/test_qobj.py"", line 816, in case; pos_qobj = qobj.trunc_neg(method=method); File ""/home/travis/build/qutip/qutip/qutip/qobj.py"", line 1246, in trunc_neg; if eigvals[idx] + acc / (idx + 1) >= 0:; IndexError: index 2 is out of bounds for axis 0 with size 2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/417#issuecomment-181509701:43,error,error,43,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-181509701,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"After investigating a bit more, I think this may be related to 3a5ab42200b3f1851343081614064e67be3b02bf, in that SCS and CVXOPT are not yet compatible with MKL, and require OpenBLAS instead. If I locally use pip to install SCS and CVXOPT with an MKL-enabled conda env, then importing cvxpy fails due to undefined symbols. On the other hand, if I use the Omnia conda channel to install cvxopt and scs, then `dnorm()` works, but the conda env switches to use OpenBLAS. To resolve the build failures, then, I'd suggest temporarily marking the tests as skipped if MKL is enabled.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/484#issuecomment-222046697:488,failure,failures,488,https://qutip.org,https://github.com/qutip/qutip/issues/484#issuecomment-222046697,1,['failure'],['failures']
Availability,"After merging #1097, the following error is given on a Linux machine from travis CI ; AttributeError: 'QobjEvo' object has no attribute 'coeff_files'; 1656Exception in thread Thread-546:; 1657Traceback (most recent call last):; 1658 File ""/Users/travis/miniconda/envs/test-environment/lib/python3.7/threading.py"", line 926, in _bootstrap_inner; 1659 self.run()",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1084#issuecomment-543262454:35,error,error,35,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-543262454,1,['error'],['error']
Availability,"After playing around with PyAMG, I do not see any benefit over our current implementation. In fact, the PyAMG solvers were breaking down just like the SciPy versions did. The only issue we are having is the superLU preconditioner fails for some systems. Once that issue is figured out (hopefully) we will be in a good position with respect to SS solving.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/29#issuecomment-20720708:132,down,down,132,https://qutip.org,https://github.com/qutip/qutip/issues/29#issuecomment-20720708,1,['down'],['down']
Availability,"After setting atol=1e-9 it works now for 500 time steps. But increasing the number of time steps to 550 causes the program to fail again. It also doesn't help to decrease atol further, I went up to 1e-15, neither does decreasing the relative tolerance rtol. Shouldn't actually increasing the number of time steps improve the precision? Also, why does it depend on the dimension of the dm? I'm just curious now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/771#issuecomment-338105892:242,toler,tolerance,242,https://qutip.org,https://github.com/qutip/qutip/issues/771#issuecomment-338105892,1,['toler'],['tolerance']
Availability,Agreed that it is tricky to test. I mostly wanted the tests because the nice error messages might contain bugs. Happy to let this slide for now though.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2304#issuecomment-1908915742:77,error,error,77,https://qutip.org,https://github.com/qutip/qutip/pull/2304#issuecomment-1908915742,1,['error'],['error']
Availability,"Ah, are you using an Apple M1?. SciPy support for Apple M1 is still rather unreliable (this is more a function of the lack of availability of Apple M1 VMs for open source projects to run tests on than any fault of SciPy's). Perhaps you are encountering one of these two recent bugs:. - https://github.com/scipy/scipy/issues/16767; - https://github.com/scipy/scipy/issues/16875. The bugs are closed but I don't know if new versions have been released. Various work arounds have been suggested in those issue reports. Hopefully one of them will work for your case.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1987#issuecomment-1229182134:126,avail,availability,126,https://qutip.org,https://github.com/qutip/qutip/issues/1987#issuecomment-1229182134,2,"['avail', 'fault']","['availability', 'fault']"
Availability,"Ah, nice catch thanks, and thanks for the super clear repro. We're overhauling the solvers for QuTiP 5.0, which will include a lot more rigorous input checking on entry, but also it uses far safer low-level datatypes that would catch this shape mismatch in the C layer (even though the `dims` _should_ have been checked by `mesolve`). I'll check the other solvers and patch in a sanity test - probably after these lines: https://github.com/qutip/qutip/blob/d5e305513d9186df74beee4fd8da680e89f29d15/qutip/mesolve.py#L259-L261; we can just insert a test; ```python; if rho0.dims[0] != rho0.dims[1]:; raise ValueError(; ""input state must be a pure state or square density matrix""; ); ```. There may also be other segfaults lurking if you use a Python function to generate a time-dependent `Qobj` value in the Liouvillian or the expectation operators, but right now you're unlikely to use that form (because it's slow as anything). The bug slips through because we unsafely pass off a matrix down to C code (where we currently don't have sanity checks) without first verifying that it is a valid shape in Python space - the C code is working as designed, so there shouldn't be problems with correct inputs. Removing `c_ops` causes `mesolve` to delegate to `sesolve` which presumably is better at its type-checking, and I expect that a small dimension size working is likely just `malloc` having slack in the memory it gives us for small sizes or small requests being allocated into the special pre-allocated store.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1456#issuecomment-791925169:988,down,down,988,https://qutip.org,https://github.com/qutip/qutip/issues/1456#issuecomment-791925169,1,['down'],['down']
Availability,"Ah, this is the confluence of two bugs, unfortunately. As an immediate workaround, you should be able to set the environment variable `CI_QUTIP_RELEASE=1` before running `pip` (assuming it propagates the env), and it should build without an error. The two bugs:; 1. building in ""release mode"" isn't the default; on CI to build the wheels we set a release-mode flag, but the sdist can't tell. That's what the environment variable above does. I'll have to think a little about how we'll do versioning. This bug slipped in in #1465, where the primary concern was getting wheels built, and I didn't notice that the sdist wouldn't build in release mode.; 2. `git` isn't meant to be required - in dev mode, it should just get to the string ""nogit"". That error is actually within a `try/except` block, except it only catches `subprocess.SubprocessError`, when it should catch both `subprocess.SubprocessError` and `OSError`. Thanks for the report.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1514#issuecomment-829931042:241,error,error,241,https://qutip.org,https://github.com/qutip/qutip/issues/1514#issuecomment-829931042,2,['error'],['error']
Availability,"Ah, this test failure reminds me I need to merge up the 4.6.0 release to `dev.major`. Documentation fix is good, merging (though ironically there's a typo in your PR name!)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1494#issuecomment-818721204:14,failure,failure,14,https://qutip.org,https://github.com/qutip/qutip/pull/1494#issuecomment-818721204,1,['failure'],['failure']
Availability,"Ah, you are right! It seems to be all tests using the ODE solvers are failing.; Indeed mesolve and sesolve tests are also failing (with the same integration error).; There are lots of tests which fail, I think most likely every test that calls a solver... I just did some basic testing with scipy's integrate.ode and this seems to have the same kind of issues, so I think as you mention, the issue lies with the solver...meaning it probably isn't installed correctly.; Similar issues seem to have been raised for scipy previously (e.g. https://github.com/scipy/scipy/issues/15077), though I don't see any currently open. I also updated scipy today and it didn't change anything unfortunately. I guess this issue can be closed, if it's just a scipy problem?; Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965#issuecomment-1204170858:157,error,error,157,https://qutip.org,https://github.com/qutip/qutip/issues/1965#issuecomment-1204170858,1,['error'],['error']
Availability,"Aha I understand the error now, `oldest-supported-numpy` requires numpy 1.17, but qutip requires >1.19. I tried to install manually with `pip install wheel setuptools packaging numpy cython scipy` and then `pip install --no-build-isolation qutip` but now I get some Cython compilation errors. I think I will stick with v4 for now. I suppose with the updates to the docs in #2413, this issue is resolved.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412#issuecomment-2092495162:21,error,error,21,https://qutip.org,https://github.com/qutip/qutip/issues/2412#issuecomment-2092495162,2,['error'],"['error', 'errors']"
Availability,"All looks good to me. Thanks a lot for changing all of that - this is all clearly good stuff and should in principle be merged. We should the Linux tests again after #1381 is merged because there is Linux-specific code in the changes that needs to be tested (the tests fail for unrelated reasons at the moment). I can't see any reason why the changes here should cause any true test failures, though - it's more a formality.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1380#issuecomment-727103648:383,failure,failures,383,https://qutip.org,https://github.com/qutip/qutip/pull/1380#issuecomment-727103648,1,['failure'],['failures']
Availability,"An explicit warning / exception sounds good to me.; You mention a UserWarning there as an error. Does that mean that the ODE solver raises an exception? If so, then there can be no useful application of this, and hence we should raise an exception - probably a RuntimeError unless anyone has a better suggestion.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/479#issuecomment-221550684:90,error,error,90,https://qutip.org,https://github.com/qutip/qutip/issues/479#issuecomment-221550684,1,['error'],['error']
Availability,"And for those who are not using Conda? ; ```; In file included from qutip/cy/sparse_utils.cpp:1134:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/complex:235:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:642:26: error: no template named 'numeric_limits'; bool _FloatBigger = (numeric_limits<_FloatT>::digits > numeric_limits<_IntT>::digits),; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:642:60: error: no template named 'numeric_limits'; bool _FloatBigger = (numeric_limits<_FloatT>::digits > numeric_limits<_IntT>::digits),; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:643:18: error: no template named 'numeric_limits'; int _Bits = (numeric_limits<_IntT>::digits - numeric_limits<_FloatT>::digits)>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:643:50: error: no template named 'numeric_limits'; int _Bits = (numeric_limits<_IntT>::digits - numeric_limits<_FloatT>::digits)>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:648:17: error: no template named 'numeric_limits'; static_assert(numeric_limits<_FloatT>::radix == 2, ""FloatT has incorrect radix"");; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:25: error: no template named 'numeric_limits'; return _FloatBigger ? numeric_limits<_IntT>::max() : (numeric_limits<_IntT>::max() >> _Bits << _Bits);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:58: error: no template named 'numeric_limits'; return _Floa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583:379,error,error,379,https://qutip.org,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583,3,['error'],['error']
Availability,"Any update on the failing tests, @araza6?; This is the print message from CI build:; ```; ==================================== ERRORS ====================================; _____________ ERROR collecting tests/test_basis_transformation.py ______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/_pytest/python.py:513: in _importtestmodule; mod = self.fspath.pyimport(ensuresyspath=importmode); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:176: in <module>; from qutip.qobj import *; E File ""/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/qobj.py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __I",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:127,ERROR,ERRORS,127,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,3,['ERROR'],"['ERROR', 'ERRORS']"
Availability,"Apologies, I encountered a separate set of issues related to cython that I have thus far been unable to solve. Once I get that sorted out, if I run into any errors related to the above, I'll get back to you. Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/552#issuecomment-260194032:157,error,errors,157,https://qutip.org,https://github.com/qutip/qutip/issues/552#issuecomment-260194032,1,['error'],['errors']
Availability,"Are you running it from the installation directory?. On May 11, 2017 9:31 AM, ""Jiaqi Cai"" <notifications@github.com> wrote:. > I see that qutip announced a new version, but after my update,It breaks; > down:; > from qutip import *; > the error occurs: undefined symbol: _ZTINSt8ios_base7failureB5cxx11E; > After google the error,I find a possible solution :pip install qutip; > Then the error changes to :; > `-----------------------------------------------------------; > ----------------; > AttributeError Traceback (most recent call last); > /home/caidish1234/anaconda3/lib/python3.6/site-packages/qutip/*init*.py; > in (); > 46 *IPYTHON*; > ---> 47 qutip.settings.ipython = True; > 48 except:; >; > AttributeError: module 'qutip' has no attribute 'settings'; >; > During handling of the above exception, another exception occurred:; >; > AttributeError Traceback (most recent call last); > in (); > 3 import matplotlib.pyplot as plt; > 4 from tqdm import tnrange,tqdm_notebook; > ----> 5 from qutip import *; >; > /home/caidish1234/anaconda3/lib/python3.6/site-packages/qutip/*init*.py; > in (); > 47 qutip.settings.ipython = True; > 48 except:; > ---> 49 qutip.settings.ipython = False; > 50; > 51 # ------------------------------------------------------------; > -----------------; >; > AttributeError: module 'qutip' has no attribute 'settings'`; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/694>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqRkf4CJgtdC5dIzttfYgfScDE_Zqks5r4ym1gaJpZM4NYLKw>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/694#issuecomment-300829416:202,down,down,202,https://qutip.org,https://github.com/qutip/qutip/issues/694#issuecomment-300829416,4,"['down', 'error']","['down', 'error']"
Availability,"Are you running on OSX? If so, this could be a known bug between multiprocessing and matplotlib for matplotlib 3.2. You can downgrade to 3.1 or upgrade to 3.3 (haven't personally validated 3.3 yet).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1326#issuecomment-664716642:124,down,downgrade,124,https://qutip.org,https://github.com/qutip/qutip/issues/1326#issuecomment-664716642,1,['down'],['downgrade']
Availability,"Arne,. Do you still have the code where the eigenvalue solver breaks down for the Liouvillian? I am starting to work on the matrix balancing functions and would like something known to cause trouble to test on. Cheers,. Paul",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/16#issuecomment-34325017:69,down,down,69,https://qutip.org,https://github.com/qutip/qutip/issues/16#issuecomment-34325017,1,['down'],['down']
Availability,"Arne,. Please propose your patch in a PR on our Github. So long as it is; mathematically sound, then the context does not matter in this case. If you need any advice on how to do this, then let us know. Email me direct; if you prefer. alex.pitchford@gmail.com. Thanks. Alex. On Thu, 21 Jun 2018 at 09:31, Arne Hamann <notifications@github.com> wrote:. > I use the qutip to do some Grover simulations. having a Hilbertspace of; > Grover an an additional entangled Hilbert space. In a simpler version there; > is only one state in the entangled Space so the program automatically; > chooses dimension 1.; > And then there are allot of errors coming because of this qutip error.; > At the moment I fixed it using a patched qutip version.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/823#issuecomment-399020891>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AIxX7QOoYa2vq7kgVYNcZdxB3vxO3FJnks5t-1n4gaJpZM4SNkIK>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/823#issuecomment-399033847:633,error,errors,633,https://qutip.org,https://github.com/qutip/qutip/issues/823#issuecomment-399033847,2,['error'],"['error', 'errors']"
Availability,"As I mentioned in #853, I wonder if it's possible to completely encapsulate any use of sparse matrices to allow for different implementations, assuming a common interface. This would support both int32 and int64, as well as any other specialized implementation anyone might want to use. Obviously, this falls into the ""quite a bit of work"" category, assuming it's possible at all. Personally, I also want to clarify that in #853, I wasn't thinking clearly when I titled it ""moderately big tensor products"" (obviously, it was an insanely large product). I don't actually foresee needing anything bigger than int32. Is there a CPU-time penalty for switching to int64? If so, I would consider that more of a downside than an increase in memory usage.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/850#issuecomment-382528173:705,down,downside,705,https://qutip.org,https://github.com/qutip/qutip/issues/850#issuecomment-382528173,1,['down'],['downside']
Availability,"As I understand it, the only way to avoid needing to touch `MANIFEST.in` is to not have files distributed with the test suite (or to have the temporary files by `*.py`, since `setup.py` automatically recognises them). That's not really a pytest thing, it's a `setuptools` one. I don't think there's a problem distributing files as part of the tests. You can add a line which says; ```; recursive-include qutip/tests/qasm_files *.qasm; ```; to `MANIFEST.in`, and that should hopefully fix the problem. You won't have the problem locally, because you'll be running `./setup.py develop`, which ""installs"" in-place, so you don't notice the fact that you've missed files from the manifest. In the tests, it runs `./setup.py install`, which does the copy, missing files which aren't in the manifest. Boxi: I'm not certain what more you'd like to do with fixtures here. Fixtures are good for setup and tear down, parametrisation and sharing resources (like network connections), but I'm not certain what further benefit you get for a test function which is testing whether it can open a known file, read it, and construct the expected output. I think Sidhant is already doing some nice parametrisation of his tests, from what I see. Sidhant: I added a comment on the exception test, since pytest gives us an easier-to-read context manager you can use. It's also typically better practice to handle file paths like I did in that (using the overloaded `/` operator with `pathlib.Path`, or `os.path.join`) rather than manually putting in slashes. Windows _usually_ will do the right thing now with slashes, but it's better to let Python handle it for us.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1291#issuecomment-656255156:900,down,down,900,https://qutip.org,https://github.com/qutip/qutip/pull/1291#issuecomment-656255156,1,['down'],['down']
Availability,"As a note: `qutip.vector_to_operator` is part of the implementation of superoperators. The ""vector"" in the name refers to the idea that a superoperator in a Hilbert space can be represented as a vector on a different Hilbert space which comprises of two copies of the original space tensor-producted together. It doesn't refer to a ""vector"" in the sense of a ""ket"". The difference was introduced in c62a8e9, which is the amalgamated commit encompassing all the discussion in #1098. `qutip.vector_to_operator` expects to receive an argument whose `dims` parameter is of the form `[operator_dims , [1]]`, where `operator_dims` is the dimensions of a regular operator (for example `[[2], [2]]` for a single qubit Hilbert space, or `[[2, 2], [2, 2]]` for an operator acting on a Hilbert space with two qubits in. The exception occurs because `vector_to_operator` attempts to access the two elements of the `operator_dims` array to discover the output shape. Since there is an insufficient number of lists for it to access, it just ends up reading the dimensions of the first two elements of the tensor product, and `np.prod` (used to calculate the output shape) doesn't complain when passed scalars. Notice that running the code with `nb_qubits = 1` will cause an `IndexError`, as there are insufficient tensor-product elements. The immediate solution for your code is to use `qutip.ket2dm`, which converts a ket into a density matrix. I think this is what you're actually trying to do. For a fix, there are two points:; 1. The fix is simply to test that the input dimensions are of the correct form, rather than assuming; this will allow us to provide a more descriptive error.; 2. Perhaps worth considering is moving the super-operator functionality in a sub-module `qutip.super`, and not importing all the functions into the main namespace. This might help reduce user confusion going forwards, especially since most people aren't using the superoperator formalism.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1204#issuecomment-600792011:1668,error,error,1668,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-600792011,1,['error'],['error']
Availability,"As far as the ""known issues"" go, these are discussed in #484.; I don't think the issues I saw recently are the same as in that one.; ```; Intel MKL FATAL ERROR: Cannot load libmkl_avx.so or libmkl_def.so.; ```; I think this is just an MKL install problem.; It's difficult to test at the moment, as I don't seem to be able to create a conda env with mkl blas",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/872#issuecomment-394304854:154,ERROR,ERROR,154,https://qutip.org,https://github.com/qutip/qutip/issues/872#issuecomment-394304854,1,['ERROR'],['ERROR']
Availability,"As long as we do some test runs without MPI, I think this is fine. Perhaps we could also document somewhere that `mpi` is needed -- maybe just by raising a nice exception if it needs to be imported but isn't available?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2319#issuecomment-1930820031:208,avail,available,208,https://qutip.org,https://github.com/qutip/qutip/pull/2319#issuecomment-1930820031,1,['avail'],['available']
Availability,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/448#issuecomment-192570921:307,error,errors,307,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921,2,['error'],['errors']
Availability,"As mentioned previously, to me more reliable is a big benefit, slightly slower is not an issue.; Do @nonhermitian or @jrjohansson have an opinion on this PR?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/360#issuecomment-130280628:36,reliab,reliable,36,https://qutip.org,https://github.com/qutip/qutip/pull/360#issuecomment-130280628,1,['reliab'],['reliable']
Availability,"As stated in the docstring in the function, the a_ops Cubic_Spline must be a tuple (f(w), g(t)). This was my mistake (possibly this could be updated in the online documentation on BRME). Closing this as there is no error. Although I will note there is a legitimate error if the array passed to `qt.Cubic_Spline` is too large. In this case, `np.array2string` uses the default `threshold` argument which means the saved array is compressed (e.g. `[0,1,2,...,8,9,10]`). The way to fix this is to explicitly set the threshold argument.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1624#issuecomment-887782852:215,error,error,215,https://qutip.org,https://github.com/qutip/qutip/issues/1624#issuecomment-887782852,2,['error'],['error']
Availability,"Assuming Simon's point isn't just a complete answer to your question: in the general case, this is an impossible question to answer - it touches on many parts of numerical integration, such as tolerance limits and adaptive step-size methods. When you're dealing with completely arbitrary time-dependence, there's not really any one-size-fits-all approach that'll work (despite how RK45 is often taught as a magic bullet in physics courses). Here, you will likely find that your RK45 results depend strongly on how many intermediate timesteps you use, whereas QuTiP's results will be (marginally) more stable. This is because QuTiP will internally subdivide the timesteps more to achieve internal precision goals, but then only returns the results at the time points you ask for. You can increase the maximum number of allowed subdivisions by increasing the `nsteps` parameter in a `qutip.Options` object, and with the `options` keyword argument.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733#issuecomment-986661136:193,toler,tolerance,193,https://qutip.org,https://github.com/qutip/qutip/issues/1733#issuecomment-986661136,1,['toler'],['tolerance']
Availability,"Assuming you have Anaconda 2.5 installed (so that you can use the Intel MKL on all platforms), the default number of threads is one. Therefore, you don't get much benefit. To change the number of threads used you can do:. ``` python; import mkl; mkl.set_num_threads(N); ```. or in QuTiP it is easy to set using:. ``` python; n_threads = hardware_info()['cpus']; mkl.set_num_threads(n_threads); ```. One can not access the spare MKL routines directly as there is no support in the scipy.sparse library. However, you can get to all of the functions using ctypes. An example of complex SpMV is here:. https://gist.github.com/nonhermitian/74c3ddbbd006b2f8d306. The only issue with the attached method, is that finding the MKL runtime library is platform dependent (maybe should file an issue with the Anaconda people?). Therefore, it is a bit cumbersome to work with. Moreover, it is not possible to access these routines via Cython as they do not have any of the development stuff available. That may not really be an issue at the end of the day though as one needs quite a large system to get any benefit, and at large Hilbert dimensions, the overhead from calling Python funcs. directly is not an issue. I will be chatting with the [Intel Python](https://software.intel.com/en-us/python-distribution) people tomorrow to give them some suggestions and talk about our project. Hopefully we can hash out some plan to make our life a bit easier, and take advantage of the MKL tools. Their parallel direct sparse solver may also be of interest.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/438#issuecomment-186864518:978,avail,available,978,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-186864518,1,['avail'],['available']
Availability,"At least two tests have been observed to generate unrelated failures:; - `qutip.tests.test_subsys_apply`; - `qutip.tests.test_fidelity2`. I haven't seen any others recently (at least, not since resolving #425), but if we observe any, we should add them here so that we can be sure everything works for 3.2.0.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/430#issuecomment-184077054:60,failure,failures,60,https://qutip.org,https://github.com/qutip/qutip/issues/430#issuecomment-184077054,1,['failure'],['failures']
Availability,AttributeError Traceback (most recent call last); <ipython-input-2-82c62ef8635d> in <module>; ----> 1 from qutip import *; When I try to run ; from qutip import *. I got this error. Can anyone help to come out of this error?. ~/anaconda3/lib/python3.8/site-packages/qutip/__init__.py in <module>; 42 try:; 43 __IPYTHON__; ---> 44 qutip.settings.ipython = True; 45 except NameError:; 46 qutip.settings.ipython = False. AttributeError: partially initialized module 'qutip' has no attribute 'settings' (most likely due to a circular import),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-1220250053:175,error,error,175,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-1220250053,2,['error'],['error']
Availability,Bleh -- build error: `ERROR: Some build dependencies for file:///project conflict with the backend dependencies: numpy==1.13.3 is incompatible with numpy>=1.16.6.`; Probably I need to loosen the build dependencies in setup_requires.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1735#issuecomment-990081489:14,error,error,14,https://qutip.org,https://github.com/qutip/qutip/pull/1735#issuecomment-990081489,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Both this failure and the one before it are in unrelated tests. For instance, the most recent failure is in `qutip.tests.test_fidelity2`, which rather surprises me as I'd have thought that test case was quite stable.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/428#issuecomment-183608615:10,failure,failure,10,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-183608615,2,['failure'],['failure']
Availability,"Bumping an old topic with two major new considerations. Number one: Travis is [changing its pricing model for open source software](https://blog.travis-ci.com/2020-11-02-travis-ci-new-billing), and generally it seems like [it's going to become unfeasible for us](https://www.jeffgeerling.com/blog/2020/travis-cis-new-pricing-plan-threw-wrench-my-open-source-works). Over the past month or so, queue times on Linux builds have increased massively (from near-instant to up to 90 minutes), and the number of allowed concurrent builds has already limited the amount of testing we are able to do - we don't even have Windows tests because we couldn't fit them in. In around March 2021 we expect the old travis-ci.org that QuTiP is grandfathered onto to shut down completely, forcing us onto the new model on travis-ci.com. Number two: in November 2019, GitHub released their own CI, GitHub Actions. This is (as best as I can tell) completely free for open source, public repositories like QuTiP, and offers access to a large number of Linux, macOS and Windows containers. This completely free period of GitHub Actions might not last forever (you can imagine maybe they're just trying to drive adoption before increasing the cost), but especially with the new time pressure from Travis, this seems like the right choice for now. Our testing set up is fairly straightforward, so migrating to a new CI shouldn't be too difficult. I just wrote (#1429) a GitHub Actions workflow to build and distribute binary releases of QuTiP on Linux/Mac/Windows, and I'm pretty convinced by the power of their CI. It's got an awful lot of flexibility with a _lot_ of customisation so its initial learning curve is a little steep (or maybe I'm just not used to CI tools), but I'm impressed by what's available. I believe it comes with a degree of reusability as well; I think we can define a test as a single ""action"", and then reuse that in the PR-push workflow and the make-distribution workflow.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/959#issuecomment-770455542:753,down,down,753,https://qutip.org,https://github.com/qutip/qutip/issues/959#issuecomment-770455542,2,"['avail', 'down']","['available', 'down']"
Availability,"Bumping this because I'm working on `test_metrics.py` and came across it. ## Attempting to isolate. With `cvxpy` and `cvxopt` from conda-forge, I can run all the `dnorm` tests, but as before (see #874, #880, #881) they fail too much of the time. By my rough tests, failure only occurs with any regularity when using `cvxpy` with operator inputs (not supers) of dimension 3 (not 2). I also find that using `dnorm(A, B)` with `A` and `B` drawn from `rand_unitary_haar` has a failure rate of 0.004(1), whereas drawing from `rand_unitary` instead has a failure rate about 3 times higher of 0.012(2). I'm sure if you have more (i.e. > 0) knowledge of the Haar measure than I do, that presumably gives you more information on what makes it likely for the optimisation to fail. Also, using `dnorm(A)` (i.e. taking `B` to be 0) produced no failures in 4000 tests of the same function. ## Testing strategy. Since each `dnorm` test is repeated 10 times and there's only one offending test, that's a current failure rate of about 4%. The offending test actually isn't even testing what it's supposed to test - it supposedly tests that special cases that are handled by QuTiP agree with the optimisations done by `cvxpy`, except that the offender isn't a handled special case. I'll remove that for now. I will also convert `dnorm` tests to quietly xfail if the optimisation fails, but cause a suite failure if they cause a proper `AssertionError`. ## Future. Since we have a new major version in the future, we do have the option to issue a `FutureWarning` and remove `dnorm` if we want to do so, but if so, we should get the warning out as soon as possible. It's probably worth mentioning that by-and-large, it seems like `dnorm` does actually work in most cases. > This has been the final straw. We have tried to keep dnorm supported. - @ajgpitch . Suspect Alex has some thoughts on this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/874#issuecomment-634292336:265,failure,failure,265,https://qutip.org,https://github.com/qutip/qutip/issues/874#issuecomment-634292336,6,['failure'],"['failure', 'failures']"
Availability,"But how would you know which ones are safe to remove? The fact that we can have many python interpreters running qutip at the same time makes this complicated. I'm not sure what would be the best solution, but I guess that in principle one could imagine an atexit handler that does the cleanup of files corresponding to the current PID. https://docs.python.org/3/library/atexit.html. But taking us down a path of complicated and and hard to maintain code...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/291#issuecomment-66948492:398,down,down,398,https://qutip.org,https://github.com/qutip/qutip/pull/291#issuecomment-66948492,1,['down'],['down']
Availability,"But it seems to me that it would be best to avoid this type of issue when possible. For example, the squeezing operator is called squeez just to get around a namespace conflict. Otherwise people are bound to get errors that don't make any sense just because of the import order and then they will be emailing us. Of course we can not avoid all conflicts, but since loading scipy is so fundamental to what we do, having no conflicts with this package seems to be reasonable, at least to me. . On Wednesday, June 5, 2013 at 11:12 AM, Robert Johansson wrote:. > Yes, this can happen.. But I dont think this is a bug or error, although it can be confusing. There is always a risk of namespace collisions when importing different packages into the global namespace. For example, many conflicts of this kind occur between the math and numpy packages.. The only way to get around it safely is to import packages in different namespaces.; > ; > —; > Reply to this email directly or view it on GitHub (https://github.com/qutip/qutip/issues/25#issuecomment-18951570).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/25#issuecomment-18951920:212,error,errors,212,https://qutip.org,https://github.com/qutip/qutip/issues/25#issuecomment-18951920,2,['error'],"['error', 'errors']"
Availability,"By (3), I meant removing the csr specialisation from the dispatched function and call the function directly when not all values are desired. When `Qobj.eigenstates` is called, the sparse operation being not available, it would defer to the dense code, no warning nor error. ; We can't fully trust `eigs_csr` as it is, so I would like to make it fully working (1) or remove it from the dispatch (3). Yes (2) can be seen as separate enhancement. For me (5) was purely documentation, a warning is fine, but when `sparse` is specified, it would use `eigh_csr` and too bad if wrong results are obtained... (3) would also mean removing the; ```; if isinstance(L.data, _data.CSR) and not sparse:; L = L.to(_data.Dense); evals, evecs = _data.eigs(L.data); ```; since they are no longer used (`spectrum.py`, `floquet.py`, `qobj.py`) and reviewing the tests cases.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1998#issuecomment-1472768466:207,avail,available,207,https://qutip.org,https://github.com/qutip/qutip/issues/1998#issuecomment-1472768466,2,"['avail', 'error']","['available', 'error']"
Availability,Can anyone explain why all these travis errors occur?; It seems like they all relate to CVXOPT. They also seem to occur many (10) times each.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/476#issuecomment-221221607:40,error,errors,40,https://qutip.org,https://github.com/qutip/qutip/pull/476#issuecomment-221221607,1,['error'],['errors']
Availability,"Can confirm both the error and the workaround. As a physicist, I just did this to lines 48 and 49 of `hardware_info.py`; ```; #results.update({'cpu_freq': int(float(os.popen('sysctl -n machdep.cpu.brand_string'); #.readlines()[0].split('@')[1][:-4])*1000)}); results.update({'cpu_freq': 3000}); ```; Works fine now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1606#issuecomment-885023500:21,error,error,21,https://qutip.org,https://github.com/qutip/qutip/issues/1606#issuecomment-885023500,1,['error'],['error']
Availability,"Can you please say something about result.photocurrent? I can see it contains all the jumps from all the trajectories, but what is the meaning of the value associated with each jump? It believe it goes down when I increase the number of trajectories or timesteps, so I think it is perhaps dividing by those numbers? But I don't know what else it might depend on. Thanks.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2539#issuecomment-2400213467:202,down,down,202,https://qutip.org,https://github.com/qutip/qutip/issues/2539#issuecomment-2400213467,1,['down'],['down']
Availability,"Closing this because the original issue is resolved. Some support for Cython 3.0 is now available, but the situation is still a bit fluid and complex as Cython 3.0 stabilizes. We'll likely need a few more specific issues to deal with Cython 3.0 support. Anyone reading feel free to open such an issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2245#issuecomment-1856882465:88,avail,available,88,https://qutip.org,https://github.com/qutip/qutip/issues/2245#issuecomment-1856882465,1,['avail'],['available']
Availability,"Closing this now because it's not really a QuTiP error, just Apple being Apple.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1030#issuecomment-809712509:49,error,error,49,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-809712509,1,['error'],['error']
Availability,"Closing this now, unless you have more problems - QuTiP has binary release candidates for 4.5.2 and 4.5.3 on `conda-forge` (I think they rebuilt 4.5.2 since this issue), and I couldn't reproduce any build failures on `pip` with 3.9.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1371#issuecomment-809302975:205,failure,failures,205,https://qutip.org,https://github.com/qutip/qutip/issues/1371#issuecomment-809302975,1,['failure'],['failures']
Availability,"Code in `__init__.py` is executed on import, including printing and raising error.; But I don't know if we can differ between import methods (`import qutip` vs `from qutip import *`)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1071#issuecomment-520490526:76,error,error,76,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-520490526,1,['error'],['error']
Availability,CodeClimate reported a bunch of places where line lengths were increased to exceed 79 characters. Could we reduce those down again if possible? Maybe do this at the end so that it's not too hard to review the reformatting.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1925#issuecomment-1152508955:120,down,down,120,https://qutip.org,https://github.com/qutip/qutip/pull/1925#issuecomment-1152508955,1,['down'],['down']
Availability,"Computed error 1.08705544e-07, tol 1e-7... The initial ket in `rand_ket(2)`. I believe that with `nosetest`, the random seed was kept between test file. One of our early test would fix the seed and all following tests would be deterministic. With `pytest` the seed is probably reset at each file. We could loosen the tolerance. Ideally we would get the stats on the error first. Maybe `pytest` has a support for test that pass 99% of the time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249#issuecomment-625283606:9,error,error,9,https://qutip.org,https://github.com/qutip/qutip/pull/1249#issuecomment-625283606,3,"['error', 'toler']","['error', 'tolerance']"
Availability,Confirming that the only tests that are failing currently are the `brmesolve` related tests. The previous commit fixed one failure in the coefficient tests.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1727#issuecomment-1050000793:123,failure,failure,123,https://qutip.org,https://github.com/qutip/qutip/pull/1727#issuecomment-1050000793,1,['failure'],['failure']
Availability,"Consider what you're doing from a statistical sense here. If everything works correctly, then you're effectively trying a two-tail hypothesis test that your test binomial distribution has a probability of 0.25, given you made `n` observations of it. The analytic success rate of your test is then; ```python; import scipy.stats; def success(n, p, tol):; dist = scipy.stats.binom(n, p); return dist.cdf(n * (p+tol)) - dist.cdf(n * (p-tol)); ```; where `success(4096, 0.25, 0.02)` is 99.67%. Since there are 5 independent runs on Travis, that's equivalent to a failure rate of 1.6% on every single CI run, which is several orders of magnitude too high. It's probably just luck that it was Python 3.8 on both occasions - it's a one-in-five chance that in two failing CI runs, it was the same setup both times. You have to consider what is most appropriate to fix the test, and what you can reasonably test in ~1 second of runtime. You don't want to increase the tolerance too much, because then you can get a lot of false positives even if something is broken. If you can bump the number of runs up to 100,000 and set the tolerance at 0.01, you'll have a per-test failure rate of ~3e-13, which is more like what we'd want. If you keep it at 4096, the tolerance should be more like 0.05 (which is pretty big tbh).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-640043626:559,failure,failure,559,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-640043626,5,"['failure', 'toler']","['failure', 'tolerance']"
Availability,"Cool, that would be nice. I'll have a look at restructuring qutip.tensor.tensor a bit so that it at least preserves the superreps attribute when possible and raises an error when called with superoperators with different superreps.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/99#issuecomment-39531063:168,error,error,168,https://qutip.org,https://github.com/qutip/qutip/pull/99#issuecomment-39531063,1,['error'],['error']
Availability,"Could we just reach `Data` objects to be multiplied by a scalar so that the Tensorflow backend can accept multiplication by a `tf.Tensor` and either raise an error if it's a not a `1x1` tensor or perform the scalar multiplication if it is? It feels like this is a quirk of Tensorflow that scalars are represented by `1x1` matrices, so it would be nice if the tensorflow backend could handle that quirk itself.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1607#issuecomment-881323790:158,error,error,158,https://qutip.org,https://github.com/qutip/qutip/issues/1607#issuecomment-881323790,1,['error'],['error']
Availability,Could you please post the code snippet and the traceback of the error message ? Thank you.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/682#issuecomment-292698585:64,error,error,64,https://qutip.org,https://github.com/qutip/qutip/issues/682#issuecomment-292698585,1,['error'],['error']
Availability,"Could you push the code you have right now? We have CI that builds documentation, which will reveal the error you mentioned in more detail. Maybe I can help then.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2441#issuecomment-2148346368:104,error,error,104,https://qutip.org,https://github.com/qutip/qutip/pull/2441#issuecomment-2148346368,1,['error'],['error']
Availability,"Curious cross-reference from [mdanalysis](https://github.com/MDAnalysis/mdanalysis). Their tests trigger the same error (likely again because of pytest-xvfb),; ```; XIO: fatal IO error 0 (Success) on X server "":1029""; ```; Their error is not so simple to clear, since they use the object oriented matplotlib API (e.g. using AxesSubplot `matplotlib.axes._subplots.AxesSubplot`) rather than matplotlib.pyplot. So they don't have access to `plt.close()` and `axes.cla()` doesn't prevent the error, probably for the same reason that `plt.clf()` didn't work for qutip. One point they have which is worth noting: they recommend using the environment variable `MPLBACKEND=agg` for headless CI testing. And sure enough the XIO error does not occur with mdanalysis if `MPLBACKEND=agg` is set. For qutip the `plt.close(fig)` patch is still the best (more robust) solution though.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639#issuecomment-912159847:114,error,error,114,https://qutip.org,https://github.com/qutip/qutip/issues/1639#issuecomment-912159847,6,"['error', 'robust']","['error', 'robust']"
Availability,"Cython 0.29 is not compatible with python 3.12.; On debian, they have the module `python3-zombie-imp` which is a copy of the removed imp module, but it does not seems available on pip or conda. Thus cython jit (pyximport) is not working on 3.12 for almost everyone. Adding cython3 to 4.7.X is not a quick fix and we already choose not to do it. The best we can do is to run as if cython was not installed at runtime on 3.12 and release 5.0.0 soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293#issuecomment-1892641379:167,avail,available,167,https://qutip.org,https://github.com/qutip/qutip/issues/2293#issuecomment-1892641379,1,['avail'],['available']
Availability,"Cython error are quite vague, but there should not be any cython error here.; It could be errors inside a cython function. Could you send the log if it persist.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2351#issuecomment-2004022346:7,error,error,7,https://qutip.org,https://github.com/qutip/qutip/pull/2351#issuecomment-2004022346,3,['error'],"['error', 'errors']"
Availability,"Dear Qutip admin,. Thank you for your fast reply. I tried the above method. However, it doesn't work. It gives me an error message saying that ""Time list does not match"". Here is one sample on how I applied it. import qutip; import numpy as np; options = qutip.Options(); options.nsteps = 100000; hamiltonian = qutip.sigmax(); args = {'omega':1000}; timelist = np.linspace(0, 1, 1000); omegatlist = np.cos(args['omega']*timelist); H = qutip.QobjEvo([qutip.sigmax(),[qutip.sigmax(),omegatlist]], tlist=1000); state = qutip.basis(2, 0).proj(); times = np.linspace(0, 1, 2); qutip.mesolve(H,state,times,[],qutip.sigmax(),args=args,options=options). Although in the above, I used an analytic function for my Hamiltonian, actually my real Hamiltonian is a time-dependent non-analytic function which has to be represented by an array. Your comment on how to solve the problem associated with the above code will be much appreciated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1472#issuecomment-808615925:117,error,error,117,https://qutip.org,https://github.com/qutip/qutip/issues/1472#issuecomment-808615925,1,['error'],['error']
Availability,"Dear all,. I'm trying to install the latest release of QuTip on Ubuntu system. Since; our workstation hasn't been connected to internet, I; downloaded Anaconda3-2019.03-Linux-x86_64 and qutip-4.3.1.tar, and attempt; to install from source code. Firstly I successfully installed Anaconda with the command:; bash ~/Downloads/Anaconda3-2019.03-Linux-x86_64.sh. Then in the conda environment I typed the command:; python setup.py install. I get the following error message:. gcc -pthread -B /home/pz/anaconda3/compiler_compat -Wl,--sysroot=/; -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -Iqutip/cy; -I/home/pz/anaconda3/lib/python3.7/site-packages/numpy/core/include; -I/home/pz/anaconda3/lib/python3.7/site-packages/numpy/core/include; -I/home/pz/anaconda3/include/python3.7m -c qutip/cy/spmatfuncs.cpp -o; build/temp.linux-x86_64-3.7/qutip/cy/spmatfuncs.o -w -O3 -march=native; -funroll-loops; gcc: error trying to exec 'cc1plus': execvp: No such file or directory; error: command 'gcc' failed with exit status 1. It seems the gcc compiler isn't correctly located? Or what else problem. I checked the gcc version on the workstation:; gcc --version; gcc (Ubuntu 8.3.0-6ubuntu1~18.10) 8.3.0; Copyright (C) 2018 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. whereis gcc; gcc: /usr/bin/gcc /usr/lib/gcc /usr/share/man/man1/gcc.1.gz. How can I direct the installer to find the gcc compiler?. Thanks!; Best regards, Pu Zhang; --; Faculty at School of Physics, Huazhong University of Science and Technology; Room 819 (N.), Yifu Science and Technology Building; 1037 Luoyu Road, Wuhan, China; E-mail: puzhang0702@hust.edu.cn <puzha@fotonik.dtu.dk>; Homepage: www.researchgate.net/profile/Pu_Zhang4; Phone: +86 18871860394",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/946#issuecomment-501605757:140,down,downloaded,140,https://qutip.org,https://github.com/qutip/qutip/issues/946#issuecomment-501605757,5,"['Down', 'down', 'error']","['Downloads', 'downloaded', 'error']"
Availability,Did you grab the latest version from git? I cant seem to reproduce the error. Perhaps something has changed in diags since scipy 0.15,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/508#issuecomment-237343862:71,error,error,71,https://qutip.org,https://github.com/qutip/qutip/issues/508#issuecomment-237343862,1,['error'],['error']
Availability,"Do worry about the failing python2.7 tests, it's a common error on all recent checks. Your pull should not affect them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/917#issuecomment-428349067:58,error,error,58,https://qutip.org,https://github.com/qutip/qutip/pull/917#issuecomment-428349067,1,['error'],['error']
Availability,"Do you get the same behaviour with QuTiP 4.5.0 in the same environment? The offending parts of `qutip/__init__.py` have been there since then, so it shouldn't be new in 4.5.2 at least. I can't reproduce the error unless `pyximport.install()` has already been run before QuTiP is imported (e.g. if I do `import pyximport; pyximport.install(); import qutip` or `importlib.reload(qutip)`). We have `qutip/__init__.py` organised so that we don't enable `pyximport` until after we've done the test for `qutip.cy.openmp.parfuncs`: first we do. https://github.com/qutip/qutip/blob/8e181cc44ceefc14ad0e4f4bcf78e1c8fcd2b291/qutip/__init__.py#L100-L105. and only after that do we. https://github.com/qutip/qutip/blob/8e181cc44ceefc14ad0e4f4bcf78e1c8fcd2b291/qutip/__init__.py#L124-L126. In your error it's trying to build `qutip.cy.openmp.parfuncs`, and the only line that ever attempts to import that (in Python space) is line 101 above in `__init__`. It can only attempt to Cythonize files if `pyximport` is activated, but `qutip` doesn't activate that til a few lines later. It's certainly still a bug that this error appears if you've manually activated `pyximport` before (which would definitely cause it), but I'm struggling to find any other reason that the error could appear. We're looking to simplify the handling of OpenMP in a later version, and this buggy check is certainly a good reason to expedite that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1334#issuecomment-670167290:207,error,error,207,https://qutip.org,https://github.com/qutip/qutip/issues/1334#issuecomment-670167290,4,['error'],['error']
Availability,"E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_steadystate.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_stochastic_me.py ______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_stochastic_se.py ______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_subsys_apply.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:24788,ERROR,ERROR,24788,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_qobjevo.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_qpt.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________ ERROR collecting qutip/tests/test_qubit_evolution.py _____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_qubitcircuit.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:17692,ERROR,ERROR,17692,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_states.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_steadystate.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_stochastic_me.py ______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_stochastic_se.py ______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:24315,ERROR,ERROR,24315,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"Early thought:. The `solver.add_feedback` approach doesn't look too bad, but it does seem a bit odd because on does to specify the state parameters when constructing the operators that the define the system -- i.e. H, c_ops, etc. Could we not expose the feedback on the QobjEvo itself so that users can then do:. ```python; H = QobjEvo([op, lambda t, ket: bra @ ket], feedback={""ket"": ""qobj""}); ...; ```. or; ```python; H = QobjEvo([op, lambda t, ket: bra @ ket]); H.add_feedback(ket=""qobj""); ...; ```. or even; ```python; H = QobjEvo([op, lambda t, ket: bra @ ket]); solver = Solver(...); solver.rhs.add_feedback(ket=""qobj""); ```. Thoughts?. It will get a bit trickier for the feedback that is less easily available from the state, but perhaps solvers can just check whether the ops they're using need the special feedback?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2210#issuecomment-1663061538:707,avail,available,707,https://qutip.org,https://github.com/qutip/qutip/pull/2210#issuecomment-1663061538,1,['avail'],['available']
Availability,Either `nnz` return `size_t` or raise an error when allocating matrix with too many elements.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2314#issuecomment-1946129803:41,error,error,41,https://qutip.org,https://github.com/qutip/qutip/pull/2314#issuecomment-1946129803,1,['error'],['error']
Availability,"Every `Qobj` created by qutip have `dims[0]` and `dims[1]` being list. `dims=[2, 2]` is an error that we should catch. The main issue is that there is no clear documentation or tests that clearly says what is a valid dims format. . There are some strange dimension that are produced by our function that would raise an error with `np.stack` like; `tensor(operator_to_vector(oper), oper)` but I don't think we should accept these kind of `Qobj` in the first place, so I am fine failing there.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1783#issuecomment-1028044366:91,error,error,91,https://qutip.org,https://github.com/qutip/qutip/pull/1783#issuecomment-1028044366,2,['error'],['error']
Availability,"Everything else works correctly the issue appears when going to high dimensions only, 8 to be clear. I tried myself on other environments and as long as scipy is changed the instability in 8 dimensions disappears, I do not imagine what type of error can appear only in big dimensions and in a specific scipy version other than a numeric stability in the scipy version itself. Do you have any guess?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-817212665:244,error,error,244,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-817212665,1,['error'],['error']
Availability,"Extra safety check have been added to prevent this kind of errors. #1783, #1784, #1778",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1374#issuecomment-1074188292:59,error,errors,59,https://qutip.org,https://github.com/qutip/qutip/issues/1374#issuecomment-1074188292,1,['error'],['errors']
Availability,Failure in doc builds was `ipython 8.10.0 depends on prompt-toolkit<3.1.0 and >=3.0.30` so we likely just need to bump the version of prompt-toolkit.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2085#issuecomment-1426687909:0,Failure,Failure,0,https://qutip.org,https://github.com/qutip/qutip/pull/2085#issuecomment-1426687909,1,['Failure'],['Failure']
Availability,"False test failure again - we really have too many tests which fail probabilistically! This particular one should have been smoothed out by #1250, since the current test is rather convoluted and there's several imprecise floating-point literals in use.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1264#issuecomment-628910011:11,failure,failure,11,https://qutip.org,https://github.com/qutip/qutip/pull/1264#issuecomment-628910011,1,['failure'],['failure']
Availability,"Finally, here is the temporal solution for those who might have the same issue. My bug report is ; ```; /home/abc/.pyxbld/temp.linux-x86_64-3.7/pyrex/qutip/cy/openmp/parfuncs.cpp:614:10: fatal error: src/zspmv_openmp.hpp: No such file or directory; #include ""src/zspmv_openmp.hpp""; ^~~~~~~~~~~~~~~~~~~~~~; compilation terminated.; ```. There is no `src/zspmv_openmp.hpp` in that folder, i.e. `/home/abc/.pyxbld/temp.linux-x86_64-3.7/pyrex/qutip/cy/openmp/`. One can download [this folder](https://github.com/qutip/qutip/tree/master/qutip/cy/openmp/src) and put this `src` folder into the target folder `/home/abc/.pyxbld/temp.linux-x86_64-3.7/pyrex/qutip/cy/openmp/`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1205#issuecomment-606944113:193,error,error,193,https://qutip.org,https://github.com/qutip/qutip/issues/1205#issuecomment-606944113,2,"['down', 'error']","['download', 'error']"
Availability,"First of all I'm glad you could get it to run under OSX. Which OpenCL environment are you using?; - Is the failure of `test_mcsolve_cl_time_dep_h` reproducible?; - You can probably ignore the compiler warning. I assume it is related to the pragma statement. Some OpenCL implementations refuse to work without it, others give you a warning that it is unnecessary. Maybe we can omit the statement based on the platform version and hide some warning, but that would require more testing (on different platforms). At the moment there is a lot of debug information to ease testing.; - The AttributeError you get is something I have not encountered yet. If you do consider merging this branch, it is a good idea to get more people involved in testing. The code has not been reviewed and probably contains some bugs. The questions you raised concerning the maintainability are all valid. On top of that setting up OpenCL is somewhat troublesome, which makes `mcsolve_cl` a kind of experimental feature. Ultimately it is up to the maintainers of qutip to decide whether such a feature should be included. The advantage `mcsolve_cl` has over `mcsolve_f90` is that it supports some time-dependence and introduces no build dependencies. If, for some reason `mcsolve_cl` does not work, the user can always fall back to `mcsolve`. By the way, is it wise to rebase this branch all the time or only when necessary?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/554#issuecomment-260134503:107,failure,failure,107,https://qutip.org,https://github.com/qutip/qutip/pull/554#issuecomment-260134503,1,['failure'],['failure']
Availability,"Fixed some causes of travis tests not succeeding. In particular e303b0e fixes use of `round` in the function `_td_wrap_array_str` in rhs_generate.py. This function uses `round` to get an integer number that is then passed as an array index. Since `round` returns a float, this causes the deprecation warning ""DeprecationWarning: using a non-integer number instead of an integer will result in an error in the future"". I therefore wrapped the call to `round` with a call to `int`. The travis tests now pass succesfully for this pull request.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/404#issuecomment-162598230:396,error,error,396,https://qutip.org,https://github.com/qutip/qutip/pull/404#issuecomment-162598230,1,['error'],['error']
Availability,"For a constant Liouvillian, it seems very reasonable that an eigenseries-based solution would be faster? In the end, that massively reduces the number of matrix-matrix operations to be done. I'm not at all familiar with Matlab, but I wouldn't be shocked if that's what your toolbox there is doing too. Looking at your code, you seem to have 16 cores available. QuTiP at present can't make too much use of multiple cores in `mesolve` or `essolve` (though it can in `correlation`), whereas Matlab may well have some fancy parallelised methods for solving eigenvector problems (if doing that method) - we rely on Scipy for our eigenvector calculations, and I'm pretty sure there's no parallelisation in there. There could also be large timing disparities if you're not being linked to good BLAS/LAPACK/ARPACK implementations in Python space. I'm sure that any distributed version of Matlab will come stuffed with lovely libraries compiled specifically for your processor's instruction set, but Scipy may only be able to find Netlib BLAS or (even worse) Accelerate - if so, they probably won't be making good use of vectorised instructions in your processor, and may not be well-optimised for memory access.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1591#issuecomment-871031472:350,avail,available,350,https://qutip.org,https://github.com/qutip/qutip/issues/1591#issuecomment-871031472,1,['avail'],['available']
Availability,"For a first issue, it could be solved with little changes or by going down the rabbit-hole.; There could also be a discussion about always returning complex expectation values.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1460#issuecomment-796876592:70,down,down,70,https://qutip.org,https://github.com/qutip/qutip/issues/1460#issuecomment-796876592,1,['down'],['down']
Availability,"For clarity: I ran your code with 1,000 timesteps and 10,000 timesteps and found a linalg norm difference in the outputs of 4.4e-4 (compared to QuTiP's 6.5e-8), which is what I meant. I considered that difference ""not fully convergent"" in part because QuTiP's default tolerance goals have an absolute tolerance of ~1e-8 (that's per-element, not the full norm). Here's a couple more things to look at:; - if you're using QuTiP objects without our solvers like this, we tidy up sparse matrices at every operation. You probably don't want that - you might get different results if you convert your RK method to work on raw Numpy arrays.; - your RHS isn't accurate - it takes `sqrt(gamma)`, but your time-dependent function already does that. This is perhaps a mistake, and very likely the source of the discrepancy? Also, while it's irrelevant here, your Lindbladian has `c_op * c_op.dag() * rho` as the last term, but it should be `c_op.dag() * c_op * rho`.; - your RK method isn't using updated versions of the Hamiltonian or the collapse operator at the intermediate timesteps.; - you say you're using RK45, but you've only got 4 different evaluations? That looks like an RK4 method to me (not that it should matter).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733#issuecomment-986723762:268,toler,tolerance,268,https://qutip.org,https://github.com/qutip/qutip/issues/1733#issuecomment-986723762,2,['toler'],['tolerance']
Availability,"For example.. one of the errors ... Qobj([1,2,3,4,5]). C:\Users\MTS-144\Anaconda3\lib\site-packages\ipykernel\ipkernel.py:448: DeprecationWarning: `input_splitter` is deprecated since IPython 7.0, prefer `input_transformer_manager`.; status, indent_spaces = self.shell.input_splitter.check_complete(code); Traceback (most recent call last):. File ""<ipython-input-9-03628e422267>"", line 1, in <module>; Qobj([1,2,3,4,5]). NameError: name 'Qobj' is not defined",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467318070:25,error,errors,25,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467318070,1,['error'],['errors']
Availability,"For large matrices (`dim > ~500`), the dense matrix dot product is still a pretty large cost, but you're still saving a fair amount. That said, at that kind of dimension, the analytical formula may do you well enough. If you want derivatives wrt alpha, you should be able to get analytic ones from my method - there's no ""black box"" numerical work that goes on in `__call__`, everything is just matrix multiplication. Given that it appears non-linearly in a possibly large multiplication, though, and I would imagine the derivatives are pretty smooth, you may well just be faster just numerically approximating it with finite differences (I don't know anything about autodifferentiation). If you're so inclined, you can sacrifice some speed for higher accuracy in the eigenvector calculations, as we can find the eigenvalues semi-analytically. There are a few places in numpy and scipy that can find the roots of the Hermite polynomials for you (i.e. get the eigenvalues), which will be found exactly wrt double precision (I believe). You can then call out to the LAPACK routine `dstein` to get the eigenvectors from the eigenvalues. `dstein` is slower than `dstemr`/`dsteqr` (which is what scipy uses, I think), but it allows us to supply the eigenvalues, removing some numerical error. I didn't test that very thoroughly though.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1293#issuecomment-646100632:1281,error,error,1281,https://qutip.org,https://github.com/qutip/qutip/issues/1293#issuecomment-646100632,1,['error'],['error']
Availability,"For local operators with homogeneous decay, only pumping, emission and; dephasing are supported.; For collective operators, any jump term can be written down, writing a; Liouvillian “by hand” using the jspin operators. On Fri, 9 Oct 2020 at 09:23, pegasus328 <notifications@github.com> wrote:. > Hi.; >; > I was wondering while playing with the permutational invariant solver, if; > there is any way to customize your Lindblad in the dicke basis. I meas,; > suppose I have a collapse of the form, J_+ + J_-. The class Dicke does not; > include any flexibility a part from the collective emission/pumping and the; > corresponding individual emission/pumping.; >; > Or am I missing something?; > Thanks; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1370>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADPF67GNDFM56EJE5WMCRJ3SJ2T7TANCNFSM4SJVGOSA>; > .; >; -- ; Dr. Nathan Shammah; www.nathanshammah.com",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1370#issuecomment-705998421:153,down,down,153,https://qutip.org,https://github.com/qutip/qutip/issues/1370#issuecomment-705998421,1,['down'],['down']
Availability,"For point 2: adding marks right now will cause conflicts, but if #1181 gets merged then it'll be much simpler. The main issue is that a lot of the testing structure has changed for tests up to `test_mcsolve.py` alphabetically, and so in general the tests are just not the same. The principle is pretty straightforwards - just like #1181 introduces a `requires_cython` mark, we would add `uses_cython`, `uses_mkl` and `uses_openmp` marks. These would be even simpler to add than `requires_cython` because unlike it, they don't require any test-generation logic at all. The change would simply be to add them to `pytest.ini`, mark the requisite functions and then change the pytest invocation of the specialised test to `pytest -m ""uses_cython""` or whatever. As far as I'm aware, the only parts of their codebase which modify their behaviour based on whether `Cython` is available is `QobjEvo`. The other parts (like `brmesolve`) just don't work if Cython isn't there. The MKL tests would become very short; by my reckoning, MKL is only used by `steadystate` and `countstat`. OpenMP is much more pervasive, as `sesolve`, `mesolve` and `brmesolve` all use it, and parts which depend on those are generally the slowest tests. The short tests could just become `pytest -m ""not slow""`? That's not super speedy, but it takes about half the time, maybe. If you want more, then a good starting point is `pytest --durations=0` which will tell us which tests are the slowest (perhaps that was what you already did when marking the slow ones?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217#issuecomment-604011776:869,avail,available,869,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604011776,1,['avail'],['available']
Availability,"For the time being, a fix is to downgrade Matplotlib:. conda install matplotlib==3.0.3. On Sat, 28 Sep 2019 at 13:09, XiaoTailong <notifications@github.com> wrote:. > I have the same problem in Bloch() and show() functions in Mac OS 10.14. I; > cannot plot the Bloch sphere. It seems the problem of Matplotlib. But I am; > not sure.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1027?email_source=notifications&email_token=ADPF67AG3SH3L3HWWEZIC2TQL3KHTA5CNFSM4H24W5NKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD72QMLY#issuecomment-536151599>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ADPF67EQT2K5O3K73IHOFQ3QL3KHTANCNFSM4H24W5NA>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1027#issuecomment-536154011:32,down,downgrade,32,https://qutip.org,https://github.com/qutip/qutip/issues/1027#issuecomment-536154011,1,['down'],['downgrade']
Availability,"From what I understand, on intel, brmesolve seems to work correctly, but not on M1.; This look like an issue with the eigensolver. Could you run the test suite to see if it fails the eigen and bloch redfield related tests: `pytest path_to_qutip/qutip/tests`. (Tests can take >30min). Also could you look at the tensor directly:; ```; R, H_eigenvector = bloch_redfield_tensor(sigmax(), a_ops=[[sigmax(), psd]]); ```; If the tensor is wrong on M1, this would explain the error.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965#issuecomment-1203272586:469,error,error,469,https://qutip.org,https://github.com/qutip/qutip/issues/1965#issuecomment-1203272586,1,['error'],['error']
Availability,"Getting this error for a few conversions, was not happening yesterday:. INPUT -> U1 = gate_sequence_product(qc.unitary_matrix(resolved=True)). ERROR -> ; TypeError Traceback (most recent call last); <ipython-input-67-9b3721c98c5a> in <module>(); ----> 1 U1 = gate_sequence_product(qc.unitary_matrix(resolved=True)); 2 ; 3 U0 == U1. /usr/local/lib/python3.4/dist-packages/qutip/qip/gates.py in gate_sequence_product(U_list, left_to_right); 672 for U in U_list:; 673 if left_to_right:; --> 674 U_overall = U \* U_overall; 675 else:; 676 U_overall = U_overall \* U. /usr/local/lib/python3.4/dist-packages/qutip/qobj.py in **mul**(self, other); 429 ; 430 else:; --> 431 raise TypeError(""Incompatible Qobj shapes""); 432 ; 433 elif isinstance(other, (list, np.ndarray)):. TypeError: Incompatible Qobj shapes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/145#issuecomment-45190105:13,error,error,13,https://qutip.org,https://github.com/qutip/qutip/pull/145#issuecomment-45190105,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Given that this PR worked fine on Travis CI before I merged it, I'm at a loss as to why all of the builds are now erroring out, much less at the linking stage. It's late here, so I'll try and look at it ASAP tomorrow. Thanks for your patience.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/417#issuecomment-181319167:114,error,erroring,114,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-181319167,1,['error'],['erroring']
Availability,"Good catch, this seems to be a problem with how the arguments are structured in the function signature for brme_solve. For the tensor formation, . `def bloch_redfield_tensor(H, a_ops, spectra_cb=None, c_ops=[], use_secular=True, sec_cutoff=0.1):`. In this case, the spectra_cb is given the [ohmic_spectrum] argument, which is the correct argument. However, for the brme_solve, the signature is . ```; def brmesolve(H, psi0, tlist, a_ops=[], e_ops=[], c_ops=[],. args={}, use_secular=True, sec_cutoff = 0.1,; tol=qset.atol,; spectra_cb=None, options=None,; progress_bar=None, _safe_mode=True, verbose=False):; ```. If you run the same code with . `output = brmesolve(H, psi0, tlist, [sigmax()], e_ops, spectra_cb = [ohmic_spectrum]); `. the code will run perfectly. However, this is an issue we should fix since spectra_cb is a depreciated argument and technically the c_ops list should accommodate arbitrary noise power spectrum functions that spectra_cb handled before. The error seems to be originating because ohmic_spectrum is of type function but the safety checker expects either a Qobj or a tuple. Also, once we fix the documentation/code on how to use c_ops, we also need to add depreciate warning to bloch_redfield_tensor to maintain uniformity.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1223#issuecomment-605703993:975,error,error,975,https://qutip.org,https://github.com/qutip/qutip/issues/1223#issuecomment-605703993,1,['error'],['error']
Availability,Good job hunting this down in NumPy!,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/228#issuecomment-56619059:22,down,down,22,https://qutip.org,https://github.com/qutip/qutip/issues/228#issuecomment-56619059,1,['down'],['down']
Availability,"Good point, sorry to cause that problem, then. Is it worth keeping it at a debug or info severity instead, then? Also, should the warning after a failed import of configobj also be removed or downgraded (https://github.com/qutip/qutip/blob/4fc89ce6804324f20e84039d961ac765105a7a2e/qutip/settings.py#L98)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/465#issuecomment-210294305:192,down,downgraded,192,https://qutip.org,https://github.com/qutip/qutip/pull/465#issuecomment-210294305,1,['down'],['downgraded']
Availability,"Good.; Still, `brmrsolve` failing without raising an error is on us, I will close this PR when we fix that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965#issuecomment-1205377439:53,error,error,53,https://qutip.org,https://github.com/qutip/qutip/issues/1965#issuecomment-1205377439,1,['error'],['error']
Availability,"Got it to work as expected after a few changes:. * First, it seems there is an error in [Gri98] and `A` should be transposed. This can be seen as equation 251 from [Gri98] differs from equation 52 from [PRA44]. There might be another issue with a `k` factor instead of a `-k` factor, but it should not matter as long as thermal population is 0. For some unknown reason, using `A` or its transpose does not change anything on qubits systems.; * Second, `c_ops` should not be dissipation operators but operators coupling to the environment bath. Then, one should not use `a` but `a + a.dag()`. This seems to be different than the standard `mesolve` and might deserve an emphasis in the doc. [Gri98] | Grifoni, P. Hänggi, Driven quantum tunneling, Physics Reports 304, 299 (1998). doi:10.1016/S0370-1573(98)00022-2.; [PRA44] | R. Blümel, A. Buchleitner, R. Graham, L. Sirko, U. Smilansky, H. Walther, Phys. Rev. A 44 (1991) 4521.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/772#issuecomment-339472230:79,error,error,79,https://qutip.org,https://github.com/qutip/qutip/issues/772#issuecomment-339472230,1,['error'],['error']
Availability,"Great for the PR. . Somehow `nose` was not picking this error. ; It would be nice to investigate and fix. ; The problem seems to be at test 03 there,; ```; AttributeError: 'TestPulseOptim' object has no attribute 'tmp_dirs'; ```; Indeed, TestPulseOptim seems to have this attribute where `tmp_dirs`; are defined, ; ```; def setUp(self):; # list of file paths to be removed after test; self.tmp_files = []; # list of folder paths to be removed after test; self.tmp_dirs = []; ```; Investigating this locally (running the pytest only for this module) would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131#issuecomment-560236003:56,error,error,56,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560236003,1,['error'],['error']
Availability,"HI, I have some errors similar to these, and I don't know how to solve it. Is there anyone will face these problems if installing on windows?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-526840351:16,error,errors,16,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-526840351,1,['error'],['errors']
Availability,Happy for this to be merged with the build failure and we can just check that the merge commit builds correctly.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1968#issuecomment-1207185532:43,failure,failure,43,https://qutip.org,https://github.com/qutip/qutip/pull/1968#issuecomment-1207185532,1,['failure'],['failure']
Availability,"Having a tool to fit a correlation function would be great for the user, I see that it's certainly not easy nor a priority.; I believe having high level Bath available will be important to get user to interested. The issue I see with `BathExponent` is that it contain a `Q` which seems to be usually shared for one Bath. While the exponent themselves can share an instance, `_spreQ`, `_spostQ`, `_s_pre_minus_post_Q` and `_s_pre_plus_post_Q` will be independent for each exponent. I don't know how many exponent per Bath you expect, if it's 1~2, it could be fine, but if it get large, you are computing and storing too many copies of these. > some exponents are paired (e.g. the + and - types). If they are to be paired, then why make each exponents independent? I see this as a reason to store them as a whole.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1601#issuecomment-965224595:158,avail,available,158,https://qutip.org,https://github.com/qutip/qutip/pull/1601#issuecomment-965224595,1,['avail'],['available']
Availability,"Having looked at the code, and thought about it more, what your seeing ; is nothing but the eigenenergies returned via SciPy. these of course ; will have floating point errors in them. The rho operator itself is ; well-defined with diagonal elements:. |[ 0. 0.18508326 0.05229591 0.01262083 0.18508326 0.; 0.01262083 0.05229591 0.05229591 0.01262083 0. 0.18508326; 0.01262083 0.05229591 0.18508326 0. ]; |. These are all positive and sum to one as they should. My earlier ; mistake was in thinking that you had issues with the operator itself and ; not the eigenenergies. -P; > 17643015 <mailto:notifications@github.com>; > February 14, 2017 at 22:31; >; > from itertools import*; > from qutip import*; >; > n= 4; > S = [0.5/sigmax(), 0.5/sigmay(), 0.5*sigmaz()]; > C = list(combinations(range(n), 2)); >; > def dist(ind): return float(min(abs(ind[0]-ind[1]), abs(n - ; > abs(ind[0]-ind[1])))); >; > def tens(oper,ind):; > I = [qeye(2) for i in range(n)]; > for i in range(len(ind)):; > print i; > I[ind[i]] = oper[i]; > return I; >; > H = sum(tensor(tens([S[0],S[0]],ind))/dist(ind) for ind in C); >; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub ; > <https://github.com/qutip/qutip/issues/646#issuecomment-279920905>, or ; > mute the thread ; > <https://github.com/notifications/unsubscribe-auth/ABMPqT8-AbK96w42xwmWK9-aOHt8KemRks5rco2WgaJpZM4L_XrW>.; >; > 17643015 <mailto:notifications@github.com>; > February 13, 2017 at 08:52; >; > qutip ; > <https://cloud.githubusercontent.com/assets/9404272/22890374/d209a6d4-f214-11e6-90e7-c49eee8de738.png>; >; > As one can see in the following picture I am getting negative ; > eigenvalues for a pure state density matrix. This leads to negative ; > entropy. Another mistake is that there should only be one non-zero ; > eigenvalue ( = 1) for a pure state density matrix. This is extremely ; > worrisome as this makes me doubt many of the results I receive from ; > the library. I have check an",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/646#issuecomment-280228892:169,error,errors,169,https://qutip.org,https://github.com/qutip/qutip/issues/646#issuecomment-280228892,1,['error'],['errors']
Availability,"He did - he's the original feature requester, but given super super weird interactions with ufuncs (see #1433), it's not so clear to me that it was _necessarily_ the right idea to implement especially now it's causing problems with how numpy arrays are used in the library. There always was a work-around; allowing `np.array(qobj)` was more to save him from writing `x = x.full() if isinstance(x, Qobj) else np.asarray(x)`. That said, I came round to the idea more as I read more about the control we can have over the rest of the numpy infrastructure. We can allow `np.array` on `Qobj` (satisfying Michael's original request), and with a little bit of extra code we can prevent all the super weird ufunc/implicit casting behaviour, because `Qobj` shouldn't be able to implicitly interoperate with raw arrays. I know in my personal code I'd rather use `Qobj.full()`, but I no longer think it's _wrong_ to allow `np.array(qobj)` given that other people like it, even with these numpy 1.20 problems. It does make it difficult to put `Qobj` in arrays, but numpy 1.20 has ruled out being able to have `np.array(qobj)` and `np.array([qobj1, qobj2], dtype=object)`, so that's not really our fault.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1434#issuecomment-772665656:1185,fault,fault,1185,https://qutip.org,https://github.com/qutip/qutip/pull/1434#issuecomment-772665656,1,['fault'],['fault']
Availability,"Hello @Ericgig, thanks a lot for your comments, it has been very instructive for me. I've solved most of the things, and I'm working with the tests your proposed and any other that comes to mind. . I have a question. When trying a test with <code>sesolve</code> and <code>e_ops=[lambda t, psi: qutip.expect(qutip.num(dim), psi)]</code> I get an <code>AttributeError</code> (krylovsolve seems to be working fine, however). It works if its not a list. This error comes from sesolve check of <code>op.isherm</code>:. ```python; elif isinstance(e_ops, list):; n_expt_op = len(e_ops); expt_callback = False; output.num_expect = n_expt_op; if n_expt_op == 0:; # fallback on storing states; opt.store_states = True; else:; for op in e_ops:; if op.isherm:; AttributeError: 'function' object has no attribute 'isherm'; ```. Im using qutip 4.6.3. Should I not compare to qutip solvers for this functionality?. Here is a running example:. ```python; from qutip import rand_herm, rand_ket, sesolve, expect, num, jmat, krylovsolve; import numpy as np. dim = 100; psi0 = rand_ket(dim); H = rand_herm(dim); tlist = np.linspace(0, 1, 100). e_op = lambda t, psi: expect(num(dim), psi). try:; out = sesolve(H, psi0, tlist, e_ops=e_op); except AttributeError:; print(""first one didn't work""); try:; out2 = sesolve(H, psi0, tlist, e_ops=[e_op]); except AttributeError:; print(""second one didn't work""); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1739#issuecomment-1043000945:455,error,error,455,https://qutip.org,https://github.com/qutip/qutip/pull/1739#issuecomment-1043000945,1,['error'],['error']
Availability,"Hello @hodgestar, we missed your last comment, but Nathan just notified us. We will get it all sorted out by wednesday at most. I leave a todolist to keep track of everything that @Ericgig mentioned. To-do. * [x] Include some tests like test_sesolve.py --> **Included tests with random Hamiltonian, ising transverse field and SHO. Both for states and expectation values. Lacking a testing example for callable e_ops**. * [x] Why <code>krylov_dim=30?</code> ? --> **There was a subtle physical reason, but we conclude its better to leave it as a free input without a predefined variable.**. * [x] <code>tolerance</code>, <code>store_states</code> and <code>store_final_state</code> --> **Changed as an Options qutip class, now tolerance is <code>Options.atol</code> property**. * [x] <code>e_ops</code> should also take a callable or list of mixed function and <code>Qobj</code> --> **Added support**. * [x] Remove support for <code>np.ndarray</code> --> **Removed for qutip cleanliness**. * [x] Assertion errors to specififc errors --> **Modified.**. * [x] Check that psi0 is a ket --> **Added**. * [x] If both <code>store_states</code> and <code>store_final_state</code> are True there is a small bug --> **Fixed the store twice problem**. * [x] Infinite loop at stagnant =0 --> **Added a raise ValueError if its <0.**. * [x] __all__ should be defined to filter functions seen by the user --> **set to =<code>krylovsolve</code> and <code>lanczos_algorithm</code>**. * [x] Why not call <code>_make_partitions</code> directly instead of having this method --> **Removed when deprecating <code>KSolve</code> class**. * [x] tlist is already stored, are those needed? (lines 152-155) --> **Removed when deprecating <code>KSolve</code> class**; * [x] The Result has a tag to the solver that created it --> **Added**; * [x] If tlist is empty, you can just return the empty results. --> **Now it returns an empty <code>Results()</code> instance.**; * [x] Can you use the <code>eigh</code> in <code>qutip.spar",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1739#issuecomment-1039192650:602,toler,tolerance,602,https://qutip.org,https://github.com/qutip/qutip/pull/1739#issuecomment-1039192650,2,['toler'],['tolerance']
Availability,"Hello @jakelishman sorry for hopping in, but I'm having the same problem and I'm desperate... I have xcode 10.3; This is THE error:; ```; /usr/local/Cellar/gcc/10.2.0_3/lib/gcc/10/gcc/x86_64-apple-darwin18/10.2.0/include-fixed/stdio.h:219:10: fatal error: _ctermid.h: No such file or directory; 219 | #include <_ctermid.h>; | ^~~~~~~~~~~~; ```; In the compile flags I see these:. ```; -I/usr/local/include ; -F/Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/System/Library/Frameworks ; -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk; ```. I've tried all suggested above to reinstall all headers, but it's nowhere in my entire disk. ; do you have any ideas?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1030#issuecomment-769182608:125,error,error,125,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-769182608,2,['error'],['error']
Availability,"Hello Eric, thank you for the quick response!. We have spoken with some members of the qutip team during the grant meetings regarding porting it directly into qutip, and we agreed it would be a good addition as a separate solver. There are a couple of we-believe-good reasons to provide <code>krylovsolve</code> as another qutip solver. As you mention, the method is currently limited to constant closed system Hamiltonians. Another possible addition discussed during the meetings was support for open quantum systems, which provides another unitary-fund grant opportunity for some students!. Another important application for many-body systems comes in handy with Krylov. Given the memory limitations from matrix representation of operators and the exponential growth of many-body systems Hilbert spaces, the limit of qubits on which the solvers live is around 15 qubits. This limitation gets expanded (in exchange for some slow down in the computations) to a few more qubits exploiting the binary operational nature of many-body systems. While any solver could use operations instead of matrices, it is a good testing bead to use Krylov's algorithm because of a property when constructing this space. This feature is a must-have within our research group, and everyone could also benefit from it. More importantly, Krylov is gaining increasing interest in the research community, and we believe that providing it as a qutip solver will increase the traffic of the repository. Regarding benchmarks and some documentation, we have a public jupyter notebook with some benchmarks here [krylov use examples](https://colab.research.google.com/drive/1f7ng8q9QNEzaZ97vGop3aIip8GPtl3GR?usp=sharing), and there's also a [medium blog post](https://medium.com/@julian.ruffinelli/krylov-approximation-method-for-quantum-evolution-148b3f023ec4) with some other details. As for maintenance, yes, the way this code-block fits in should not be problematic to update even with qutip changes. We use <code>krylovsolve<",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1668#issuecomment-926236528:930,down,down,930,https://qutip.org,https://github.com/qutip/qutip/issues/1668#issuecomment-926236528,1,['down'],['down']
Availability,"Hello Eric,; I could have a look at it and add a test with the `scipy.special.sph_harm` .; Could you explain in more detail what errors you got?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1839#issuecomment-1079270356:129,error,errors,129,https://qutip.org,https://github.com/qutip/qutip/issues/1839#issuecomment-1079270356,1,['error'],['errors']
Availability,"Here's a code that reproduces the error for me (taken from an earlier GitHub issue for qutip):; import qutip as q. ```; import qutip as q; #consider two coupled spin L and S; Lval = 1; Sval = 0.5. [Lx,Ly,Lz] = map(lambda x: q.tensor(x, q.qeye(2*Sval+1)),q.jmat(Lval)); [Sx,Sy,Sz] = map(lambda x: q.tensor(q.qeye(2*Lval+1), x),q.jmat(Sval)). Jx = Lx + Sx; Jy = Ly + Sy; Jz = Lz + Sz. Lsq = Lx*Lx + Ly*Ly + Lz*Lz; Ssq = Sx*Sx + Sy*Sy + Sz*Sz; Jsq = Jx*Jx + Jy*Jy + Jz*Jz. q.simdiag([Lsq,Ssq,Jsq,Jz]); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1067#issuecomment-519446924:34,error,error,34,https://qutip.org,https://github.com/qutip/qutip/issues/1067#issuecomment-519446924,1,['error'],['error']
Availability,"Hey @lzawbrito, ; I tried to reproduce your error on a Linux (Ubuntu) machine. I installed your exact environment (all versions equal) and your provided code runs without a problem. Also the notebook you refer to does not give an error. So it seems to me that it is a problem with macOS. . Did you try to increase `nsteps`? You can do so by adding an option to the `mesolve()` function: . `output = mesolve(H, psi0, tlist, c_ops, e_ops, options=Options(nsteps=1000))`; Note that `1000` is the standard value for `nsteps`, so you should increase it furhter.; Let me know if increasing `nsteps` works!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896#issuecomment-1138780441:44,error,error,44,https://qutip.org,https://github.com/qutip/qutip/issues/1896#issuecomment-1138780441,2,['error'],['error']
Availability,"Hey, thanks for the workaround with pinning scipy. How long does it typically take for a qutip version to show up on conda-forge after it is already released by you folks and made available on pypi?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2383#issuecomment-2045143602:180,avail,available,180,https://qutip.org,https://github.com/qutip/qutip/pull/2383#issuecomment-2045143602,1,['avail'],['available']
Availability,"Hey,; Thanks! Since test did not continue after this point, I am not sure whether to continue to use the qutip. Is there any way to bypass these kind of errors and continue the test?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1084#issuecomment-531466956:153,error,errors,153,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-531466956,1,['error'],['errors']
Availability,"Hi @ALasek . You are right, there is a bug in the error handling.; ```; File ""C:\Users\OlekAdmin\anaconda3\lib\site-packages\qutip\qip\circuit.py"", line 2114, in initialize; raise ValueError(""dimension of state is incorrect""); ```; This check is wrong. It assumes that the state is a qubits state. Our test didn't cover the `run` method with multi-level systems. Here are the ways around:; - If you know how to hack the package, you can simply find the file and delete this error handling (lines 2113 and 2114).; - If you don't know how to do that, you can also use; ```; gate_sequence_product(qc.propagators()); ```; to compute the unitary representation of the circuit first and then apply it to the input state. I'll make a bug fix soon. But the next release may still take a while. Using `QubitCirucuit` for qutrits and qudits should be fine, it is rarely used though. So there might be bugs that are uncovered by our test. If you encounter any further questions, feel free to ask!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1803#issuecomment-1039660650:50,error,error,50,https://qutip.org,https://github.com/qutip/qutip/issues/1803#issuecomment-1039660650,2,['error'],['error']
Availability,"Hi @BoxiLi . If I mix dimensions like that, I can add the gates, but I get an error about wrong dimensions when trying to run the circuit:. `psi_final_Q=qc.run(state=psi_zero)`. ```; Traceback (most recent call last):. File ""C:\Users\OlekAdmin\Documents\GitHub\NATS\ManojExperiment\Huse\David\RUC_David_comm.py"", line 461, in <module>; psi_final=qc.run(state=psi_zero). File ""C:\Users\OlekAdmin\anaconda3\lib\site-packages\qutip\qip\circuit.py"", line 1182, in run; sim = CircuitSimulator(self, state, cbits, U_list, measure_results,. File ""C:\Users\OlekAdmin\anaconda3\lib\site-packages\qutip\qip\circuit.py"", line 2004, in __init__; self.initialize(state, cbits, measure_results). File ""C:\Users\OlekAdmin\anaconda3\lib\site-packages\qutip\qip\circuit.py"", line 2114, in initialize; raise ValueError(""dimension of state is incorrect""). ValueError: dimension of state is incorrect; ```. PS This all works fine when state dimension is 2 instead of 4. PPS I can sidestep this error by manually constructing my 2-qudit gate as a 3-qudit (N-qudit in general) operator by tensoring it with the appropriate identity, and then applying this operator on my initial ket, but I'm afraid I'm losing a lot of efficiency by not using the quantum circuit functionality.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1803#issuecomment-1039340372:78,error,error,78,https://qutip.org,https://github.com/qutip/qutip/issues/1803#issuecomment-1039340372,2,['error'],['error']
Availability,"Hi @Canoming, thanks for spotting this error and fixing it. I'm surprised that this error is hidden here for so long. There is still a flaw in the option for `remove=""all""`. When you remove the first element in a list, the rest elements will move forward and eventually leads to an index out of range error.; For example, if you have a list ``gates = [a, b, c]`` and use ``gates.pop(0)``. ; The list will become; ```; >>> gates; [b, c]; ```; if you now iterate to ``i=1``, you skip element `b`; This can be solved by iterating in the inverse order.; ```; elif name is not None and remove == ""all"":; for i in reverse(range(len(self.gates))):; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1242#issuecomment-622091888:39,error,error,39,https://qutip.org,https://github.com/qutip/qutip/pull/1242#issuecomment-622091888,3,['error'],['error']
Availability,"Hi @DnMGalan totally forgot this was up!. I think the main code has been iterated on a few times, but can still be improved. Maybe (1) was done already (I think... ). However (2) and (3) are still open. On (2) as a complementary thing, I recently tried the method in appendix A of this paper for calculating finite time moments and cumulants and stuff https://arxiv.org/abs/1012.0750 It works very nicely. . Interestingly, we can also do it a different way with autograd in Jax, taking derivatives of the whole generating function equation of motion directly. also seemed to work pretty well (seemed a little more efficient). I have some basic notebooks of both of these things, can share with you, and we can think about making it generic and robust. (3) I am a little rusty on, we can discuss about it next week. (christian flindt is also visiting, so we can grill him about it!)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/442#issuecomment-2005373020:744,robust,robust,744,https://qutip.org,https://github.com/qutip/qutip/issues/442#issuecomment-2005373020,1,['robust'],['robust']
Availability,"Hi @Ericgig , could you be a little more specific about what reworking the kwargs treatment would entail? Also if you could emphasize more concretely what you're looking for in updates to the notebooks and docs, that would be great. I do have some other observations.; 1. I do not get the KeyError message if I run the same jupyter notebook locally with the same versions of code as specified by version_table( ). I get another error instead, which actually seems more reasonable to me (something along the lines of 'use_precond' wasn't found in the keys of the dict, which clearly indicates that there's something off with the optional args thing).; 2. Also using mech_dms = np.asarray(mech_dms) fails, I think because it sees a Qobj instead of a real number.; 3. The direct patch to the KeyError mentioned above, based on my understanding of the code, would simply be to nest the assignment to 'max_iter_refine' in the 'info' dictionary inside a condition that checks if the solver is 'scipy'?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1017#issuecomment-539805676:428,error,error,428,https://qutip.org,https://github.com/qutip/qutip/issues/1017#issuecomment-539805676,1,['error'],['error']
Availability,"Hi @Ericgig . I've ran the tests from the FreeBSD port's directory, and the errors above are what was printed. Yuri",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190#issuecomment-1622099822:76,error,errors,76,https://qutip.org,https://github.com/qutip/qutip/issues/2190#issuecomment-1622099822,1,['error'],['errors']
Availability,"Hi @Ericgig, @AFvanloo, and @nwlambert, this bug has become more interested. Thanks for all the comments and suggestions. I will be busy this week, but I will dive down into the functions and propose a good solution during the weekend. It looks that the solution @nwlambert is proposing is the best one but I want to check if there is something else to do here. . Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1808#issuecomment-1149861067:164,down,down,164,https://qutip.org,https://github.com/qutip/qutip/issues/1808#issuecomment-1149861067,1,['down'],['down']
Availability,"Hi @Ericgig, thank you for your feedback. I have already implemented the changes. To correct the error when plotting points with style 'l' I have made the script only sort the points when styles 'm' and 's' are specified as it was in V4.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2308#issuecomment-1911930396:97,error,error,97,https://qutip.org,https://github.com/qutip/qutip/pull/2308#issuecomment-1911930396,1,['error'],['error']
Availability,"Hi @MrRobot2211,. indeed that project is still open, see https://github.com/qutip/qutip/wiki/Google-Summer-of-Code-2021#1-error-mitigation-in-qutip. However, compared to last year, the workload is reduced because this year GSoC reduces the required working time (now 175h in total). If you are interested in the part that is removed (e.g. concrete physical model), you are still welcome to draft a proposal according to your interest. It does not have to follow exactly the ideas proposed on the wiki page as long as it is a self-contained project and related to QuTiP. @nathanshammah in case he has comments.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1457#issuecomment-792274551:122,error,error-mitigation-in-qutip,122,https://qutip.org,https://github.com/qutip/qutip/issues/1457#issuecomment-792274551,1,['error'],['error-mitigation-in-qutip']
Availability,"Hi @Phenix00 ,. I don't know if you already managed to do the pip install, but I got the same errors as you and sahmed95 mentioned before. In my case, as I run my programs on a cluster in a Linux environment, where I don't have admin rights (e.g. I cannot use sudo commands), I had to use the --user option. ; So ""pip install --user qutip"" worked for me when the mentioned requirements have been installed met.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/739#issuecomment-337538079:94,error,errors,94,https://qutip.org,https://github.com/qutip/qutip/issues/739#issuecomment-337538079,1,['error'],['errors']
Availability,"Hi @Phenix00, I could reproduce the issue and this looks like an issue of pip messing up the dependencies in the requirements for QuTiP. The workaround is to install numpy, cython and scipy manually before running pip install qutip. Please let me know if this works. Also, I am assuming the complete error message that you got was something like the error message below. Thank you for bringing this to notice.; ```; (qtest) air:qtest shahnawaz$ pip install qutip; Collecting qutip; Downloading qutip-4.1.0.tar.gz (1.9MB); 100% |████████████████████████████████| 1.9MB 523kB/s; Complete output from command python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/private/var/folders/yp/zkfwkv252nl6jtzqy2_tt88m0000gn/T/pip-build-7Mg7bn/qutip/setup.py"", line 54, in <module>; from Cython.Build import cythonize; ImportError: No module named Cython.Build. ----------------------------------------; Command ""python setup.py egg_info"" failed with error code 1 in /private/var/folders/yp/zkfwkv252nl6jtzqy2_tt88m0000gn/T/pip-build-7Mg7bn/qutip/; ```; @ajgpitch ; I am looking into why this is happening and how it can be resolved. Relevant issues - https://github.com/h5py/h5py/issues/535, https://github.com/bayespy/bayespy/issues/14, https://github.com/pypa/pip/issues/988",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/739#issuecomment-321727923:300,error,error,300,https://qutip.org,https://github.com/qutip/qutip/issues/739#issuecomment-321727923,4,"['Down', 'error']","['Downloading', 'error']"
Availability,"Hi @TakumiAizawa, yes in a future QuTiP release this will be fixed. If you need to use this right now, I would recommend downloading the code from GitHub and install from source code. http://qutip.org/docs/latest/installation.html#installing-from-source",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1244#issuecomment-623071030:121,down,downloading,121,https://qutip.org,https://github.com/qutip/qutip/issues/1244#issuecomment-623071030,1,['down'],['downloading']
Availability,"Hi @VolodyaCO, thanks for reporting this!; I think the reason for `tlist` being overridden is because the result will be independent of `tlist` when the input is a steady-state. This can be seen in the following equations:; ![image](https://user-images.githubusercontent.com/57414022/121327018-5d313680-c913-11eb-9760-ca6004daca18.png); where rho is the initial state (`state0`) and H is the Hamiltonian of the system. I use the fact that rho is a steady-state to remove its temporal dependence. This derivation is simplified assuming unitary evolution (no collapse operators) but the same applies in the most general case where we include the collapse operators. This is my guess on why `tlist=[0]` is employed when using `state0=None`: the result does not depend on `tlist`. Hence, this is probably not a bug as the result should be mathematically correct. That being said, I would also expect the same output shape for the cases shown above unless explicitly mentioned in the docstring of the function. Thus, I think the way to go here is to document this behaviour in the docstring (as well as removing the t appearing in correlation_..._1t docstring) as any change in the output shape will break backwards compatibility. However, it may be worth considering whether this is the intended behaviour for QuTiP 5. I would suggest removing `state0=None` as possible input for simplicity in the maintenance and testing or at least I would make the example shown by @VolodyaCO to be consistent and have the same output. Let us see what the QuTiP admin team thinks :smile:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1566#issuecomment-857532355:1394,mainten,maintenance,1394,https://qutip.org,https://github.com/qutip/qutip/issues/1566#issuecomment-857532355,1,['mainten'],['maintenance']
Availability,"Hi @christian512, thanks for the help! I've increased `nsteps` for that particular simulation and the integration runs fine without any errors. One caveat is I have not checked the correctness of the result. . On the other hand, as soon as I tried `mesolve` on a simple Larmor precession problem, `mesolve` started either (1) throwing the typical ODE integration error or (2) integrating but producing a manifestly incorrect result (the final state is not on the Bloch sphere). The code I am using is ; ```; from qutip import * ; import numpy as np. sz = sigmaz(). init_ket = 2 ** (-1/2) * Qobj([[1], [1]]) # Bloch vector is unit x; init_dm = init_ket * init_ket.dag(). b_0 = 1; gam = 1; h_zeem = gam * b_0 * sz; h = [h_zeem]. larmor_freq = gam * b_0 ; period = 2 * np.pi / (larmor_freq); t = np.linspace(0, period / 2, 100). print(mesolve(h, init_dm, t, options=Options(nsteps=1e6)).states[-1]); ```. Which produces ; ```; Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True; Qobj data =; [[ 0.5 +0.j -263.5988765-267.24047092j]; [ -2.1425229 +0.49907152j 0.5 +0.j ]]; ```; Edit: I have also tried playing around with `atol` and `rtol` without any success.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896#issuecomment-1140305503:136,error,errors,136,https://qutip.org,https://github.com/qutip/qutip/issues/1896#issuecomment-1140305503,2,['error'],"['error', 'errors']"
Availability,"Hi @jakelishman do you have any further doubts about the issues with scipy 1.4 `linallg.eigenh() API` ? To me it is clear that we have to deprecate support for it, as any code that relies on calculating eigenvalues for large matrices has this MKL error, which it often does not show, and instead of terminating returns an incorrect numeric value. This affects not just this code but any possible high dimensional calculation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-818701546:247,error,error,247,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-818701546,1,['error'],['error']
Availability,"Hi @nathanshammah ,. Indeed you are right, but I was concerned that with large Hilbert spaces as in my case storing the individual states at all measuring times would be simply unaffordable. That is why I was wondering if mcsolve could provide not only averaged observables but also the associated statistical errors. I hope this clarifies my problem. Thanks for the example too!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1032#issuecomment-533216900:310,error,errors,310,https://qutip.org,https://github.com/qutip/qutip/issues/1032#issuecomment-533216900,1,['error'],['errors']
Availability,"Hi @nathanshammah,. Could this issue perhaps be broken into sub-tasks in some way, perhaps, in order to enable work starting on it a bit more feasible?. Also, I can see it's been labelled as a ""good first issue"" but it seems to me the definition of done (i.e., what would a PR - or a set of PRs - that would successfully address the problem entail?), with respect to the entire issue, could be clarified a bit further, and the breakdown into sub-tasks (which itself might result organically from some further discussion) might help a bit in that direction. Regarding possible approaches for handling randomness - I have to admit I've started looking into QuTiP only very recently, and I'm yet to start familiarising myself with its more intricate details and get to run the full set of tests, and investigate what kind of test failures occur. In the meantime, I'll generally share some (what I _think_ is) relevant experience in the context of handling randomness in tests:; - My understanding is that we're talking about not testing the behaviour of random-number generations per se, but how the numbers they generate affect the non-deterministic functions/algorithms, which depend on the former. In such cases, I've either used a fixed seed (as you've mentioned in your [original post](https://github.com/qutip/qutip/issues/1268#issue-619006856)), which can get a bit messy, as there's Python's `random`, NumPy's `random` (which also comes in a legacy and a modern flavour, namely `numpy.random.RandomState` and `numpy.random.Generator`). Also, as you've mentioned, there's tight coupling between the implementation logic and the corresponding set of tests, and updates in the former require constant maintenance of the latter.; - As an alternative, I've sometimes resorted to [`mock`](https://docs.python.org/3/library/unittest.mock.html)ing the random-number generation process itself, and - in a way equivalent to using a fixed seed - providing a pre-defined sequence of numbers to the functions ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1268#issuecomment-1123679707:827,failure,failures,827,https://qutip.org,https://github.com/qutip/qutip/issues/1268#issuecomment-1123679707,1,['failure'],['failures']
Availability,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348#issuecomment-263745214:1657,error,error,1657,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214,1,['error'],['error']
Availability,"Hi @pschindler, thanks for reporting this! Although the eigenenstates are different for both cases (`sparse=True` and `sparse=False`) I believe that they are both equally valid since the operator has degenerated eigenvalues. The approach for the computation of the eigenstates for both `sparse=True ` and `sparse=False` is different so that may explain why you see different results. For the case that @Ericgig presented though, the eigenvalues are non-degenerated. I tracked down the issue and it is related to how we compute these eigenvalues. When we ask for all the eigenvalues what we actually do is to compute the smallest half in with one method (`scipy.sparse.linalg(which='LR')`) and the largest half with a different method (`scipy.sparse.linalg(which='SR')`). Smallest half and largest half here means relative to the _real_ part of the eigenvalue. This makes complete sense for the cases where the eigenvalues are real but unfortunately not so much sense when we only care about the imaginary part. This is what the `which` is doing, is selecting the values with smallest/largest real part. If we include a small real component the bug completely disappears:; ```; In [56]: (qutip.num(4)*(1j+0.00001)).eigenenergies(sparse=True); Out[56]:; array([1.23048985e-16-2.21177095e-16j, 1.00000000e-05+1.00000000e+00j,; 2.00000000e-05+2.00000000e+00j, 3.00000000e-05+3.00000000e+00j]); ```; Because now there is a real part to use in the ordering. The behavior of `eigenstates` is definitely wrong and one way of solving it would be to not use both `LR` and `SR` options when all the eigenvalues are required and instead chose internally just one. This would still return results ordered by their real part but at least all the eigenvalues would be present (only once). We may want to extend the behavior of `eigenstates` to not only accept `sort=low` and `sort=high` and instead have a similar behavior to the one provided by scipy and allow sorting by imaginary part or absolute value.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1998#issuecomment-1416862009:476,down,down,476,https://qutip.org,https://github.com/qutip/qutip/issues/1998#issuecomment-1416862009,1,['down'],['down']
Availability,"Hi @pschindler,. Indeed, the behavior you show is a bug in qutip 4.7.0. Thanks for reporting this! However, it is actually a bug in the `sparse=True` case. The scipy case gives a different result compared to qutip sparse because of the method used. `eigh` assumes the input is hermitian but `op` is not. You can see the correct eigenvalues using:; ```; In [7]: scipy.linalg.eigvals(op.full()); Out[7]:; array([-1. -2.22044605e-16j, -0.5+8.66025404e-01j, -0.5-8.66025404e-01j,; 0.5+8.66025404e-01j, 0.5-8.66025404e-01j, 1. +0.00000000e+00j]); ```. I am genuinely surprised that the `sparse=False` is bugged in the latest version of qutip. Fortunately, I tested this in the master branch of qutip (this contains the qutip 5.0.0 alpha version) and the bug seems to be solved there. This operator is indeed subjected to the same bug Eric shows (it is non-hermitian). However, due to the real part of the eigenvalues, it actually shows the correct answer (similar to the example I showed in my previous comment). I will try to find the source of the error but it seems very likely that we incorrectly label the operator as hermitian and hence uses the wrong method to find eigenvalues.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1998#issuecomment-1419816348:1045,error,error,1045,https://qutip.org,https://github.com/qutip/qutip/issues/1998#issuecomment-1419816348,1,['error'],['error']
Availability,"Hi @sahmed95, thanks a lot for your many suggestions on improving this module! I'll respond to each of your individual suggestions, but here is a summary of the ones worth discussing. > Changing QObj to :class: qutip.Qobj; line spacings; ""[[t1]_wg1]"" changes. I will make these changes. See the `temporal_basis_vector` comment for discussion on changing nested list to dictionary. > Things not covered by tests. I'll add tests for these or remove the functionalities (for example, `count_filled()` is never used and is just a debugging function I made while developing this module). > Lots of minor suggestions to comply with PEP8. I will make most of these changes. Some of the errors, such as the 80>79 errors and spaces around kwarg equals, were not shown as problematic using PyCharm's PEP8 linter with default inspection profile - can you provide steps to reproduce? However, I think that some bits that PEP8 classifies as problematic shouldn't be changed for notational consistency, such as H = hamiltonian, and my usage of T and W in the code and the notebook to denote number of time bins and waveguides. > Moving `__all__` to after import statements. I declared `__all__` in its current location because almost universally, all (heh) top-level qutip modules declare it before imports. (I actually checked about a dozen of these and can't find any instance of it being after imports.) I think this might be worth changing to comply with PEP8, but I think it should be done after the module is added in a separate commit where all occurrences of this are changed across QuTiP. > Shortening argument / function names. I'll respond to each proposed change individually, but in general I disagree with most of these proposed changes since I think they reduce conceptual clarity. (For example, `temporal_basis_vector` returns a specific vector in the temporal basis; I would expect a function named `temporal_basis` to return an enumeration of all basis vectors.) However, I will try to think of sh",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/848#issuecomment-384821368:679,error,errors,679,https://qutip.org,https://github.com/qutip/qutip/pull/848#issuecomment-384821368,2,['error'],['errors']
Availability,"Hi @saiyagami , your errors seem to be centered around OpenMP and parallelization stuff. It seems from the red underlined error that you do not have OpenMP installed, which shouldn't be the case since it is bundled with the Visual C/C++ compiler by default. I'd recommend you try the following, in this order:; 1. Try running the install again using the cloned repository's `setup.py` file, but this time run it as `python setup.py install --with-openmp`. Hopefully this configures things properly, and you don't see any more OpenMP related errors.; 2. If the above doesn't work, that suggests a more pathological error, in which case you probably should try using another compiler such as MinGW. Should you do so, please find more detailed instructions here : [https://stackoverflow.com/questions/11079586/getting-started-with-openmp-install-on-windows](url).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1079#issuecomment-539862401:21,error,errors,21,https://qutip.org,https://github.com/qutip/qutip/issues/1079#issuecomment-539862401,4,['error'],"['error', 'errors']"
Availability,"Hi @sarsid I am having trouble reproducing this issue. When I copied above code, I get `<qutip.qip.circuit.QubitCircuit object at 0x7fe142c414f0>` and not the `value` error referenced by you. Is there something else I should be doing ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1330#issuecomment-806265083:167,error,error,167,https://qutip.org,https://github.com/qutip/qutip/issues/1330#issuecomment-806265083,1,['error'],['error']
Availability,"Hi @tehruhn, I also have the error but it does not appear when using jupyter so I missed it. The error comes from a line inside a `try` block, so I am not sure why it is not properly suppressed... I did touch much in that area so it should be a simple fix.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1109#issuecomment-542708686:29,error,error,29,https://qutip.org,https://github.com/qutip/qutip/issues/1109#issuecomment-542708686,2,['error'],['error']
Availability,"Hi @tehruhn, Openmp is not needed to run Qutip in parrallel. We are using the module multiprocessing. ; The 4.4.0 error is an error on my part. The 4.4.1 error seems to comes from temp files being erased too quickly for windows version of multiprocessing. ; multiprocessing does not use shared memory and reload all libraries from the files. string based coefficient are written to file as importable libraries and imported at runtime. In 4.4.1 once imported the file is immediately erased. Work file on linux, but I believe this is the cause of the error on windows. My PR #1082 keep the files until the object using it is no longer used, I am hoping this solve the problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1079#issuecomment-540029251:114,error,error,114,https://qutip.org,https://github.com/qutip/qutip/issues/1079#issuecomment-540029251,4,['error'],['error']
Availability,"Hi @tehruhn.; The call to steadystate take different kwargs depending on whether scipy of mkl is solved. It make an error if you give it a keyword not belonging to the right solver. I believe it should be better to accept all keyword and ignore the unused one. If you want to rework it, I would suggest to set the most stable solver/method as a default. I heard the default method sometime fails (#1077). . 2. Since a few version back, when we added a `__array__` method to Qobj. We need to do `np.asarray(mech_dms, dtype=object)`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1017#issuecomment-540010694:116,error,error,116,https://qutip.org,https://github.com/qutip/qutip/issues/1017#issuecomment-540010694,1,['error'],['error']
Availability,"Hi @yuli139304,. I can't really make out from the code you have written what you are trying to achieve -- it simply looks like you are using numpy and Qobj incorrectly. Could you type out in terms of Sx_nv, ... and D_xx, ... what you want using simple arithmetic? E.g. maybe you want `D_xx * Sx_nv + D_yy * Sy_nv + D_zz * Sz_nv` (which just works as is)?. Then once you have the simple expression written down, you can make it fancier (e.g. use np.dot, etc) if you need to. I'm going to close this for now because this doesn't look like a QuTiP bug, but feel free to ask more questions, either here or preferably on the mailing list.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1848#issuecomment-1093459741:405,down,down,405,https://qutip.org,https://github.com/qutip/qutip/issues/1848#issuecomment-1093459741,1,['down'],['down']
Availability,Hi @yurivict. Could you give more detail?; I can't reproduce the issue and the error messages are not enough to understand what is happening.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190#issuecomment-1622081465:79,error,error,79,https://qutip.org,https://github.com/qutip/qutip/issues/2190#issuecomment-1622081465,1,['error'],['error']
Availability,"Hi All; I get the same error when attempting to run the qutip tutorial ; ""Bloch sphere with colorbar"". from the qutip tutorials with a virgin install of qutip from the conda-forge on Python 3.7.6 using the latest version of Anaconda..in a new environment. Whats up?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1196#issuecomment-599356968:23,error,error,23,https://qutip.org,https://github.com/qutip/qutip/issues/1196#issuecomment-599356968,1,['error'],['error']
Availability,"Hi Anna, thank you for replying can you please give some more information about which particular part/s of the user guides you are finding these errors?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1759#issuecomment-1104512322:145,error,errors,145,https://qutip.org,https://github.com/qutip/qutip/issues/1759#issuecomment-1104512322,1,['error'],['errors']
Availability,"Hi Anto, ; Could you please leave the issue for a GSoC candidate. There are no error raised but looking are the equations, something looks wrong. For example:; For positive `m`: `SPlm[1]`, but the equivalent term for negative values: `SPlm[abs(m)]`. So when adding the tests, I expect that some fixes will be needed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1839#issuecomment-1079304653:79,error,error,79,https://qutip.org,https://github.com/qutip/qutip/issues/1839#issuecomment-1079304653,1,['error'],['error']
Availability,"Hi Boxi,. Can you please modify the projects of the Wiki page as you deem best?; All: we can also think of changing the order of them. It may be that; project #3 is deemed the most important. Best wishes,. Nathan. Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com. On Sun, Feb 23, 2020 at 5:42 AM Boxi Li <notifications@github.com> wrote:. > I have some detail information for the GSoC 2020 project ""Error mitigation; > in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > Wiki page. I post it here so if anyone finds it nice could copy it to the; > Wiki page.; >; > I add some details based on the original description:; > ------------------------------; > 1. Error mitigation in QuTiP; >; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class Processor and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > qutip.qip.noise to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (qutip.qip.circuit). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Request",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:494,Error,Error,494,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313,2,['Error'],['Error']
Availability,"Hi Chester,. I'm not that familiar with matplotlib on Windows, but I'm guessing that; something has gone wrong with the event loop being used to render the; matplotlib figures (possibly QuTiP did something wrong or maybe something; else happened). Could you confirm that you're using the TkAgg matplotlib backend? You can; check with matplot.get_backend(). And are you using IPython or the ordinary; Python console?. Usually only:. b = qutip.Bloch(); b.show(). is required to display the plot. Behind the scenes .show() and; .make_sphere() both call .render(...). I suspect that the empty axes you; are seeing might be related to having rendered the sphere a few different; times. Could you start a new Python console and try:. import qutip; import matplotlib.pyplot as plt; b = qutip.Bloch(); b.render(); plt.show(). I'm hoping that will give you just the plot you are looking for (and so; give you a work around for now). The reason this might be slightly more; robust is that internally b.show() renders the sphere onto the existing; axes, which could possibly be related to the issue you are seeing. After; closing the plot window, running b.render() and plt.show() should display; the sphere again. If that fails, could you confirm that you can show any plots with; matplotlib?. You could also try updating to a more recent matplotlib, but let's perhaps; leave that as a last resort. Yours sincerely,; Simon Cross",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1616#issuecomment-883192074:964,robust,robust,964,https://qutip.org,https://github.com/qutip/qutip/issues/1616#issuecomment-883192074,1,['robust'],['robust']
Availability,"Hi Eric, . thanks for your eager response.; I'll let you know if I find any errors. Since you mentioned the equations in the code, I believe it would be interesting to add explicitly which equations are solved when the options `method=""homodyne""` and `method=""heterodyne""` are selected. Specifically, I would like to check what are the values of dW_factors in both cases.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1706#issuecomment-962765705:76,error,errors,76,https://qutip.org,https://github.com/qutip/qutip/issues/1706#issuecomment-962765705,1,['error'],['errors']
Availability,"Hi Eric, thanks for your comment. > You should remove the options from `solver_options` instead. It contain every valid options keys, just removing the key from it would makes setting it an error. Unfortunately it is not so easy, since `MCSolver` relies on the option being present in `self.options`: https://github.com/qutip/qutip/blob/48df19ceeb1f07dd60659ccdc2fe61d8df159e78/qutip/solver/mcsolve.py#L474; We could try overriding every method of MCSolver that accesses this option, but that seems easy to break accidentally again with future changes in MCSolver. > Also I would suggest to overwrite the `options` property to add the `completeness_rtol`, etc. to it's docsting. Done.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2234#issuecomment-1750005892:190,error,error,190,https://qutip.org,https://github.com/qutip/qutip/pull/2234#issuecomment-1750005892,1,['error'],['error']
Availability,"Hi Eric,; I've created a draft PR request for the changes. I did try to generate documentation according to the steps mentioned in the wiki but am faced with the following error:; ```; make html; sphinx-build -b html -d _build/doctrees . _build/html; Running Sphinx v3.5.4. Configuration error:; There is a programmable error in your configuration file:. Traceback (most recent call last):; File ""__init__.pxd"", line 942, in numpy.import_array; RuntimeError: module compiled against API version 0x10 but this version of numpy is 0xf . Check the section C-API incompatibility at the Troubleshooting ImportError section at https://numpy.org/devdocs/user/troubleshooting-importerror.html#c-api-incompatibility for indications on how to solve this problem . During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/home/User/miniconda3/envs/qutip-doc/lib/python3.8/site-packages/sphinx/config.py"", line 327, in eval_config_file; execfile_(filename, namespace); File ""/home/User/miniconda3/envs/qutip-doc/lib/python3.8/site-packages/sphinx/util/pycompat.py"", line 88, in execfile_; exec(code, _globals); File ""/home/User/Projects/QuantumStuff/qutip/doc/conf.py"", line 95, in <module>; _check_source_folder_and_imported_qutip_match(); File ""/home/User/Projects/QuantumStuff/qutip/doc/conf.py"", line 80, in _check_source_folder_and_imported_qutip_match; import qutip; File ""/home/User/Projects/QuantumStuff/qutip/qutip/__init__.py"", line 34, in <module>; from .core import *; File ""/home/User/Projects/QuantumStuff/qutip/qutip/core/__init__.py"", line 2, in <module>; from .coefficient import *; File ""/home/User/Projects/QuantumStuff/qutip/qutip/core/coefficient.py"", line 24, in <module>; from .data import Data; File ""/home/User/Projects/QuantumStuff/qutip/qutip/core/data/__init__.py"", line 3, in <module>; from . import dense, csr; File ""qutip/core/data/dense.pyx"", line 1, in init qutip.core.data.dense; File ""qutip/core/data/csr.pyx"", line 1, in i",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2098#issuecomment-1462271488:172,error,error,172,https://qutip.org,https://github.com/qutip/qutip/issues/2098#issuecomment-1462271488,3,['error'],['error']
Availability,"Hi Ericgig,. Thanks for your response!. I installed the qutip manually with master branch. And yes, I used the qutip.testing.run() to test if the installation and functions are ready. I re-run the testing and the error happened on the ""**Monte-carlo: Collapse terms constant (func format)**"". Attached file is the error output with context. [issue1039.txt](https://github.com/qutip/qutip/files/3373987/issue1039.txt). Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-509716876:213,error,error,213,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-509716876,2,['error'],['error']
Availability,"Hi Jake,. Thanks for this, yeah I started looking into it but realised it would take too long for me to track it down. And definitely I have found some speed-ups in `dev.major` for some matrix operations compared to v4.5. Actually, I have been working a bit with Eric and Nathan to make a PR soon on something related to this, where I have been doing fairly rigorous speed testing. If you like, I can loop you in on this thread (I read your blog a bit and have been using the new `Dense` data layer -- this opens up some new possibilities).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1382#issuecomment-728332245:113,down,down,113,https://qutip.org,https://github.com/qutip/qutip/issues/1382#issuecomment-728332245,1,['down'],['down']
Availability,"Hi Lambert,. Thanks you for your answer ! As you said I tried with a higher number of dimension for the case with V(x) = 0.5*x**2+x and I adjusted the sqrt(2) which was lacking and yes the eigenvalues are converging but not a the good values. For example with dim = 35 I obtain : ; [ 3. 4. 5. 6. 7. 8. 9. 10. 10.76386907 11. 12. 13. 13.99999999 14.59881066 15.00000021 15.99999984 16.99997989 17.7691296 18.00061485 ....] the first values are not far from the PySlise values but after the errors are too important.; And the most weird is that if I use the potential V(x) = 0.5*x**2-x and change the position into - position in the Hamiltonian this times qutip converges at : ; [-3.00000000e+00 -2.00000000e+00 -9.99999948e-01 1.24008598e-06; 1.00001959e+00 2.00021567e+00 3.00168756e+00 4.00939902e+00]; and PySlise gives me : [ -3.00000 -1.99999 -0.99990 0.00084 1.00478 2.01924 3.05719 4.13217 ]; So it gives me the good eigenvalues (expect for the 4th but it's negligible) and I really don't understand why it works in this case and not in the other. Thanks for the time you took for helping me.; Christian",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1597#issuecomment-873940529:489,error,errors,489,https://qutip.org,https://github.com/qutip/qutip/issues/1597#issuecomment-873940529,1,['error'],['errors']
Availability,"Hi Leo-am, ; Thank you for your interest, any help would be greatly appreciated.; `stochastic` documentation is certainly lacking. . If there are any error in the equations, please let me know so I can check that they are not also present in the code.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1706#issuecomment-961883532:150,error,error,150,https://qutip.org,https://github.com/qutip/qutip/issues/1706#issuecomment-961883532,1,['error'],['error']
Availability,"Hi Louis,. There is work in development that will allow `QobjEvo` to be build from callback also, not just list. This will make callback work anywhere easily. . I was in the impression that H callback worked already for mcsolve. I rewrote part of mcsolve and broke it. Looking at your commit, I inverted `_funcrhs_with_state` and `_funcrhs`...; Sorry to have you take time to correct it. The 20x is big, but the list format allows for optimizations that are hard to do with a callback. A big one is that you don't need to create a new matrix/Qobj when calling `mul_vec`, just use it. With this code, I see a 20x between `mul_vec` and creating a Qobj a python function. . ```; import numpy as np; import qutip as qt. qoe = qt.QobjEvo([qt.qeye(3),[qt.destroy(3), lambda t,_:np.sin(t)]]); qoe.compile(). o1 = qt.qeye(3); o2 = qt.destroy(3) ; def H(t):; return o1 + o2 * np.sin(t). v = np.ones(3)+0j; %timeit qoe(0); %timeit qoe.mul_vec(0, v); %timeit H(0); %timeit H(0).data * v; ```. One optimization you could do is having the callback return a `np.array` instead of a Qobj. In `mcsolve`, this would probably be simple to implement and I expect some speed gain. But it can't really be officially supported in Qutip, for now. . ps. All those 'redundant' argument setting are for reusing the system (`ss`) in multiple call of `mcsolve` with different args, used in `correlation`. Using string coefficient, the compilation step can take a few second, so it is set to be able to reuse a compiled system, changing the `psi0`, `args`, `e_ops`, etc. This will become a less obscure feature in v5 when solver object are available.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1260#issuecomment-629231634:1241,redundant,redundant,1241,https://qutip.org,https://github.com/qutip/qutip/issues/1260#issuecomment-629231634,2,"['avail', 'redundant']","['available', 'redundant']"
Availability,"Hi Nathan,. I can't modify the Wiki page because I'm not a maintainer of QuTiP. And it seems that there is no way to make a PR to Wiki. I can also send you the markdown source code per email like this, but I’m not sure if it works as I expected. The following is the markdown source code:. -----------------------------------; ## 1. Error mitigation in QuTiP; From the QuTiP 4.5 release, the qutip.qip module now contains the noisy quantum circuit simulator (which was a GSoC project) providing enhanced features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940:333,Error,Error,333,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940,1,['Error'],['Error']
Availability,"Hi Neill,. Thanks a lot for your answer. I did think the issue was with truncated Fock space but did not expect the 'error' would show up right in the middle of the eigenspectrum. I was expecting it somewhere towards the end of the spectrum. The explicit explanation is very helpful. As you pointed out, it would indeed be useful to have a list of ground rules (like normal ordering you mentioned) ; * for new users; * for those handling a problem where a closed form solution is unknown. I will check if the suggested normal ordering approach is helpful in other cases also. Hopefully it should be alright if I report my findings as a followup comment in this thread. With my best regards; Subimal Deb",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1587#issuecomment-869562786:117,error,error,117,https://qutip.org,https://github.com/qutip/qutip/issues/1587#issuecomment-869562786,1,['error'],['error']
Availability,"Hi Sabhyata21, thank you for the report. Could you please include the output of the command `qutip.about()`? Because your code does not give an error on my setup.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2536#issuecomment-2372741589:144,error,error,144,https://qutip.org,https://github.com/qutip/qutip/issues/2536#issuecomment-2372741589,1,['error'],['error']
Availability,"Hi Subimal,. This happens because of the truncation of the Fock space. You can see a related discussion here ; https://groups.google.com/g/qutip/c/DD6z8kYUU1I/m/k48XZS1AAgAJ. But in short, with truncation there is always an error in the commutators, so for truncating the Fock states at N photons, I think you find that [a,a.dag()] = \sum_{n=0}^(N-1) |n><n| - N|N><N| (you can check this by writing out these operators as projectors onto fock states, you will notice a*a.dag() is missing a term due to the truncation that should cancel with a term in a.dag()*a). Similarly putting the creation and annihilation operators into the position/momentum definition of the Hamiltonian, you find H = sum_{n=0}^(N-1)(n+0.5) |n><n| + N/2 |N><N|. Hence, since you truncated at 9 photons in your example, there is a degeneracy of the 4.5 eigenvalue. I am not sure if there is much can be done about this in general, perhaps the discussion I linked above might be useful. The main message I suppose is always take a larger cut-off than you think you might need, particularly if you are relying on the commutation relations to simplify things for you (which, given your example, can be a bad idea some times!). . I guess there is an interesting question about what is the best practice in these things, e.g., if you have a non-linear model, what form is it best to put it in before moving to a truncated basis? given your example, I would expect something like normal ordering to be better.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1587#issuecomment-869408770:224,error,error,224,https://qutip.org,https://github.com/qutip/qutip/issues/1587#issuecomment-869408770,1,['error'],['error']
Availability,"Hi and thank you for your contribution! I see that this is still a draft, but I wanted to quickly point out qutip's existing `parallel` module: https://qutip.readthedocs.io/en/master/apidoc/functions.html#module-qutip.solver.parallel; The module offers functions which can either execute tasks serially (`serial_map`) or in parallel (`parallel_map`, `loky_pmap`, `mpi_pmap`). For example in the Monte Carlo solver, the `map` option decides which of these functions is used, allowing users to switch easily between serial and parallel execution. These functions also come with error handling already, and they select a default number of processes based on the CPU count. It would be nice to have such a `map` option for the calculation of correlation functions.; Are you planning to make similar modifications also to the other types of correlation function in the same module?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2395#issuecomment-2063018511:576,error,error,576,https://qutip.org,https://github.com/qutip/qutip/pull/2395#issuecomment-2063018511,1,['error'],['error']
Availability,"Hi paul,. Thanks for the feedback. I think maybe Rob had originally included the mkl stuff, but I took it out when I was bug fixing. Will put it in, I didn't realize it gave such a big performance boost. thats cool. I will also follow your advice and stick in a finite frequency to make sure all the solvers work. . I had a poke around in discussion forums for numpy and scipy, and it seems like the problem is that they throw an exception when they decide L is ""exactly singular"" (which technically it is). Sometimes numerical rounding errors prevent this exception, as occurs in larger systems, or adding a finite frequency, so it tries to solve it anyway and succeeds, because the projector Q on the right-hand side guarantees a solution. Conversely, matlab will just throw a warning, and try and solve it anyway.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/528#issuecomment-243988381:537,error,errors,537,https://qutip.org,https://github.com/qutip/qutip/pull/528#issuecomment-243988381,1,['error'],['errors']
Availability,Hi! How did you import the function `read_qasm`? Could also include your `import qutip ...` or `from qutip.qip import ...` statements? Does any warning or error message show up during the execution of the import?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2334#issuecomment-1962937455:155,error,error,155,https://qutip.org,https://github.com/qutip/qutip/issues/2334#issuecomment-1962937455,1,['error'],['error']
Availability,Hi! Thanks for spotting this error and sending a fix! The patch looks good so I'm merging.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/27#issuecomment-19307072:29,error,error,29,https://qutip.org,https://github.com/qutip/qutip/pull/27#issuecomment-19307072,1,['error'],['error']
Availability,"Hi, . Here's the output I get. While I've installed the BLAS libraries on my machine, I haven't 'connected' it with numpy, so maybe this is what's leading to the issue?. ```; >>> import numpy as np; >>> config = np.__config__; >>> config.show(); openblas_lapack_info:; NOT AVAILABLE; atlas_3_10_blas_info:; NOT AVAILABLE; atlas_info:; NOT AVAILABLE; atlas_blas_info:; NOT AVAILABLE; openblas_info:; NOT AVAILABLE; atlas_3_10_threads_info:; NOT AVAILABLE; blas_opt_info:; extra_link_args = ['-Wl,-framework', '-Wl,Accelerate']; define_macros = [('NO_ATLAS_INFO', 3), ('HAVE_CBLAS', None)]; extra_compile_args = ['-msse3', '-I/System/Library/Frameworks/vecLib.framework/Headers']; lapack_opt_info:; extra_link_args = ['-Wl,-framework', '-Wl,Accelerate']; define_macros = [('NO_ATLAS_INFO', 3), ('HAVE_CBLAS', None)]; extra_compile_args = ['-msse3']; atlas_3_10_info:; NOT AVAILABLE; blas_mkl_info:; NOT AVAILABLE; atlas_blas_threads_info:; NOT AVAILABLE; atlas_threads_info:; NOT AVAILABLE; lapack_mkl_info:; NOT AVAILABLE; atlas_3_10_blas_threads_info:; NOT AVAILABLE; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/552#issuecomment-259646175:273,AVAIL,AVAILABLE,273,https://qutip.org,https://github.com/qutip/qutip/issues/552#issuecomment-259646175,12,['AVAIL'],['AVAILABLE']
Availability,"Hi, @abhisekupadhyaya nice work! . Usually a high cognitive complexity indicates that the function is too long or too deep for understanding and maintenance, but sometimes it exaggerates a bit, so it's fine as long as everything is clear. To reduce the function length, for example, if the checking part and each gate parsing can be resued (e.g for QASM v2), they can be defined in a separate function. Another minor thing, what about leaving a short warning when ignoring the unsupported code?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1139#issuecomment-562831745:145,mainten,maintenance,145,https://qutip.org,https://github.com/qutip/qutip/pull/1139#issuecomment-562831745,1,['mainten'],['maintenance']
Availability,"Hi, I also have the problem on both windows 64 bit 7 and 10, with with miniconda 64 bits 2019.07 and qutip 4.4, after following exactly the official install reciepe from http://qutip.org/docs/latest/installation.html; And replacing the last MKL by MKL2018 does not fix the problem for me.; Any more robust solution?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975#issuecomment-534742208:299,robust,robust,299,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-534742208,1,['robust'],['robust']
Availability,"Hi, I am getting this error on the current master. I guess this will be solved once this PR is merged ?. ```; air:tests shahnawaz$ nosetests test_sparse.py; E; ======================================================================; ERROR: Failure: ImportError (No module named 'qutip.cy.spconvert'); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/609#issuecomment-270078397:22,error,error,22,https://qutip.org,https://github.com/qutip/qutip/pull/609#issuecomment-270078397,3,"['ERROR', 'Failure', 'error']","['ERROR', 'Failure', 'error']"
Availability,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:15,error,errors,15,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315,15,"['ERROR', 'error']","['ERROR', 'errors']"
Availability,"Hi, I got the same error but I could successfully install qutip after upgrading Scipy because the previous version of Scipy seems not to have a specific Cython package for building qutip. . It's on Mac but try this:. pip3 install scipy --upgrade; pip3 install qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/739#issuecomment-343758428:19,error,error,19,https://qutip.org,https://github.com/qutip/qutip/issues/739#issuecomment-343758428,1,['error'],['error']
Availability,"Hi, I think you may have some typos in your code, for example you have a pi instead of np.pi in line 9. Also in the definition of the constants you have 2np.pi instead of 2*np.pi. . I've run your code changing those typos and I didn't get any error. I am running it in Mac OS X Catalina. . Try to run the code I've run in your machine: . ```; import numpy as np; from qutip import *; import matplotlib.pyplot as plt. delta = 0.2 * 2*np.pi; eps0 = 1.0 * 2*np.pi; A = 2.5 * 2*np.pi; omega = 1.0 * 2*np.pi; H0 = - delta/2.0 * sigmax() - eps0/2.0 * sigmaz(); H1 = A/2.0 * sigmaz(); args = {'w': omega}; H = [H0, [H1, 'sin(w * t)']]; T = 2*np.pi / omega; f_modes_0, f_energies = floquet_modes(H, T, args); f_energies; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1207#issuecomment-603532427:243,error,error,243,https://qutip.org,https://github.com/qutip/qutip/issues/1207#issuecomment-603532427,1,['error'],['error']
Availability,"Hi, I would like to contribute to this issue as part of the UnitaryHack2024. I will incorporate a basic use of gates module to guide-basics.rst and a table of the available gates.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2389#issuecomment-2140841510:163,avail,available,163,https://qutip.org,https://github.com/qutip/qutip/issues/2389#issuecomment-2140841510,1,['avail'],['available']
Availability,"Hi, are you sure you are not in the QuTiP folder when you start your Python; interpreter? Please provide some information as to how you installed QuTiP.; Which Python version are you using?. You can just type the command. >> which python. To find out the Python you are using. I would suggest the best way to run; QuTiP is using the conda installation. On Sun, 29 Nov 2020 at 20:42, ZahraQI <notifications@github.com> wrote:. > After installing qutip, in order to test qutip installation, I type; > ""python"" in terminal and then type ""import qutip.testing as qt"", getteing; > to the following error.; >; > import qutip.testing as qt; > Traceback (most recent call last):; > File """", line 1, in; > ModuleNotFoundError: No module named 'qutip'; >; > qt.run(); > Traceback (most recent call last):; > File """", line 1, in; > NameError: name 'qt' is not defined; >; > If anyone can help to solve the problem?; > Thanks; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1391>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABVFIBB6E4CM7HU3CY2NT6LSSKP3PANCNFSM4UGXA6UA>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1391#issuecomment-735447201:593,error,error,593,https://qutip.org,https://github.com/qutip/qutip/issues/1391#issuecomment-735447201,1,['error'],['error']
Availability,"Hi, could you please tell us how you installed QuTiP and which python are you using? Just type the following in the terminal. ```; which python; ```. To check how QuTiP was installed (if on Linux or Mac):. ```; pip freeze | grep ""qutip""; ```. If on windows, download Anaconda and install QuTiP from conda-forge with. ```; conda install -c conda-forge qutip; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387393174:258,down,download,258,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387393174,1,['down'],['download']
Availability,"Hi, matplotlib is an optional dependency and there is a warning on import.; You should install them separately. On Thu, Jun 7, 2018, 2:47 PM Tejas Shetty <notifications@github.com> wrote:. > Doesn't install matplotlib when installing on windows.; > And then produces errors; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/878>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGpUBD8arMQpOQc40gQMwSImZ3fq6Cm7ks5t6L57gaJpZM4Udxhh>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/878#issuecomment-395303939:267,error,errors,267,https://qutip.org,https://github.com/qutip/qutip/issues/878#issuecomment-395303939,1,['error'],['errors']
Availability,"Hi, thak you for the feedback it is really helpful. Using lower density matrices is reducing my time by 10%, and without the fix it produces error; it is an excellent finding.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1498#issuecomment-822574194:141,error,error,141,https://qutip.org,https://github.com/qutip/qutip/pull/1498#issuecomment-822574194,1,['error'],['error']
Availability,"Hi, thank you all for the answers, and sorry for the delay. I understand there is some confusion because what I'm trying to do doesn't really have a physical meaning, I simply wanted to convert between matrices and vectors because I'm looking for computational gains by doing so. ; If this was numpy, I would simply use numpy.reshape. ; I guess it actually makes sense if this is not a permitted operation in qutip, I was just exploiting the operator_to_vector function for a different reason. @quantshah ; Thanks, I tried the code, but even the test_vec implementation fails with error ; File ""qutip\superoperator.py"", line 278, in vector_to_operator; shape = (np.prod(q.dims[0]), np.prod(q.dims[1])). IndexError: list index out of range. @jakelishman ; Thanks for the tip for the tensor product basis state creation.; It's not a density matrix that I want to do, I just wanted to reshape the array. As a side note, I notice that I have a very large computational cost when I work with dense matrices and state vectors, as you do when you simulate a quantum circuit with parametric rotations on each qubit, and this is due to the fact that qutip uses a sparse matrix representation. If I do the same operations with numpy I get a large computational gain, because the arrays are dense. Is there any way that I don't know about to save the Qobj data in dense form?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1204#issuecomment-601662221:581,error,error,581,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-601662221,1,['error'],['error']
Availability,"Hi, thank you for replying!. I have downloaded everything necessary as written there and also tried to change the policy.xml file of ImageMagick, but it would not help, and I still get the same error:; FileNotFoundError: [Errno 2] No such file or directory: 'qcirc.png'. I have a valid version of pdflatex with the packages qcircuit and pdfcrop installed. I verified it through MikTex.; After running, I obtained the latex file and the pdf file, but it is not converted to png file for some reason. Thanks,; Ariel",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1888#issuecomment-1112205108:36,down,downloaded,36,https://qutip.org,https://github.com/qutip/qutip/issues/1888#issuecomment-1112205108,2,"['down', 'error']","['downloaded', 'error']"
Availability,"Hi, the cropping issue was there before. Even I had faced it when; visualizing circuits. I used to just add a redundant qubit to the circuit; to get that extra padding. I ll look into the cropping and resize it to; make the visualization better. Could you please open a new issue for that?. I opened a new issue to discuss that in #680 . On 05-Apr-2017 9:37 PM, ""Morten Kjaergaard"" <notifications@github.com>; wrote:. > Hi again @ajgpitch <https://github.com/ajgpitch> and @sahmed95; > <https://github.com/sahmed95>.; >; > I had a chance to work a little with the "".add_state"" feature this; > morning, and wanted to raise an issue in terms of the visualization. The; > problems are shown in the figure below:; > [image: image]; > <https://cloud.githubusercontent.com/assets/7925874/24715124/6f96cf7a-19f8-11e7-8ecd-76c937805bc5.png>; > (NB: this could just be due to jupyter notebook? In any case, I see the; > problem is also reproduced in @sahmed95 <https://github.com/sahmed95>'s; > post here: #679 (comment); > <https://github.com/qutip/qutip/pull/679#issuecomment-291652067>); >; > Two things:; >; > 1. The cropping seems to go bonkers if you use anything else than one; > symbol in the ket-state; > 2. It's not possible to use \textrm{xxx} in the ket-names.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/679#issuecomment-291911527>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AGpUBBFZyzHSm5vJxrIdu33IDkreVAMnks5rs7xQgaJpZM4MyxeC>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/679#issuecomment-291957664:110,redundant,redundant,110,https://qutip.org,https://github.com/qutip/qutip/pull/679#issuecomment-291957664,1,['redundant'],['redundant']
Availability,"Hi, the failure is gone, though the error is still there. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. ---. Ran 221 tests in 269.779s. FAILED (SKIP=1, errors=1). I removed my installation with apt-get remove python-qutip before installing the development version.; Cheers; Clemens",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42922665:8,failure,failure,8,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42922665,4,"['ERROR', 'error', 'failure']","['ERROR', 'error', 'errors', 'failure']"
Availability,"Hi, there were some import statement errors which are fixed now and the tests pass, hopefully. The code is the same as in Nathan's repository where we have the notebooks as examples.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/753#issuecomment-361302051:37,error,errors,37,https://qutip.org,https://github.com/qutip/qutip/pull/753#issuecomment-361302051,1,['error'],['errors']
Availability,"Hi,. Thanks for digging into this! Given the docstring of `qutip.propagator`, this behavior was unexpected for me https://github.com/qutip/qutip/blob/master/qutip/propagator.py#L62-L76. Changing the propagator to consider a list with a single element as a single float value (`[t]` would be the same as `t`) would break the current API and could eventually break some scripts built using QuTiP and using the fact that `qutip.propagator` of `[t]` gives identity. The best way to fix this would probably be to edit the docstring to emphasize the expected behavior for a single `t` value and for a list of times. P.S.: Not directly related to this issue but when looking for QuTiP doc on search engines, it often sends to documentation for old versions of QuTiP. Typically http://qutip.org/docs/4.0.2/apidoc/functions.html#module-qutip.propagator. What about putting a banner on these legacy documentations online stating that ""You are reading the documentation of an older version of QuTiP. Latest documentation is available at http://qutip.org/docs/latest/apidoc/functions.html#module-qutip.propagator"" (for instance)?. Best,",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/950#issuecomment-463583335:1013,avail,available,1013,https://qutip.org,https://github.com/qutip/qutip/issues/950#issuecomment-463583335,1,['avail'],['available']
Availability,"Hi,. Yes, I know, that's why I added the md file. I updated it now, thanks,; adding more info on general resources to learn about QuTiP and more; references to the #3 project, i.e. your blog and the talk.; https://github.com/qutip/qutip/wiki/Google-Summer-of-Code-2020. Neill, Alex, if you have a lead, please add a HEOM project. Bests,. Nathan. Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com. On Tue, Feb 25, 2020 at 5:10 PM Boxi Li <notifications@github.com> wrote:. > Hi Nathan,; >; > I can't modify the Wiki page because I'm not a maintainer of QuTiP. And it; > seems that there is no way to make a PR to Wiki. I can also send you the; > markdown source code per email like this, but I’m not sure if it works as I; > expected.; >; > The following is the markdown source code:; >; > -----------------------------------; > ## 1. Error mitigation in QuTiP; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class `Processor` and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > `qutip.qip.noise` to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (`qutip.qip.circuit`). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > ht",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:928,Error,Error,928,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553,1,['Error'],['Error']
Availability,"Hi,; I had a similar issue recently. See; https://stackoverflow.com/questions/11912878/gcc-error-gcc-error-trying-to-exec-cc1-execvp-no-such-file-or-directory. The second suggestion. sudo apt-get update; sudo apt-get install --reinstall build-essential. worked for me. Best of luck with it. Alex. On Thu, 13 Jun 2019 at 09:32, PZJuly <notifications@github.com> wrote:. > Dear all,; >; > I'm trying to install the latest release of QuTip on Ubuntu system. Since; > our workstation hasn't been connected to internet, I; > downloaded Anaconda3-2019.03-Linux-x86_64 and qutip-4.3.1.tar, and attempt; > to install from source code.; >; > Firstly I successfully installed Anaconda with the command:; > bash ~/Downloads/Anaconda3-2019.03-Linux-x86_64.sh; >; > Then in the conda environment I typed the command:; > python setup.py install; >; > I get the following error message:; >; > gcc -pthread -B /home/pz/anaconda3/compiler_compat -Wl,--sysroot=/; > -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -Iqutip/cy; > -I/home/pz/anaconda3/lib/python3.7/site-packages/numpy/core/include; > -I/home/pz/anaconda3/lib/python3.7/site-packages/numpy/core/include; > -I/home/pz/anaconda3/include/python3.7m -c qutip/cy/spmatfuncs.cpp -o; > build/temp.linux-x86_64-3.7/qutip/cy/spmatfuncs.o -w -O3 -march=native; > -funroll-loops; > gcc: error trying to exec 'cc1plus': execvp: No such file or directory; > error: command 'gcc' failed with exit status 1; >; > It seems the gcc compiler isn't correctly located? Or what else problem.; >; > I checked the gcc version on the workstation:; > gcc --version; > gcc (Ubuntu 8.3.0-6ubuntu1~18.10) 8.3.0; > Copyright (C) 2018 Free Software Foundation, Inc.; > This is free software; see the source for copying conditions. There is NO; > warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; >; > whereis gcc; > gcc: /usr/bin/gcc /usr/lib/gcc /usr/share/man/man1/gcc.1.gz; >; > How can I direct the installer to find the gcc compiler?; >; > Thanks!; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/946#issuecomment-501609220:91,error,error-gcc-error-trying-to-exec-,91,https://qutip.org,https://github.com/qutip/qutip/issues/946#issuecomment-501609220,4,"['Down', 'down', 'error']","['Downloads', 'downloaded', 'error', 'error-gcc-error-trying-to-exec-']"
Availability,"Hi,; There are many methods for the steadystate solver, some are faster, some are less stable. I would suggest trying other method until your find a good one for your problem.; Available method are: ; `'direct', 'eigen', 'iterative-gmres', 'iterative-lgmres', 'iterative-bicgstab', 'svd', 'power', 'power-gmres', 'power-lgmres', 'power-bicgstab'`. `'direct'` and `'power'` can use mkl as a solver, all can use scipy. You can also try to change some options such as the tolerance and max iteration number. ; The options for each solver are different depending on the solver and not all are documented. ; I list them here if you want to go deeper:. For scipy:; ```; 'sparse': True, ; 'use_rcm': False,; 'use_wbm': False, ; 'weight': None, ; 'use_precond': False,; 'all_states': False, ; 'M': None, ; 'x0': None, ; 'drop_tol': 1e-4,; 'fill_factor': 100, ; 'diag_pivot_thresh': None, ; 'maxiter': 1000,; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None,; 'permc_spec': 'COLAMD', ; 'ILU_MILU': 'smilu_2',; 'restart': 20, ; 'return_info': False,; 'info': _empty_info_dict(),; 'verbose': False, ; 'solver': 'scipy'; ```. For mkl:; ```; 'max_iter_refine': 10, ; 'scaling_vectors': True, ; 'weighted_matching': True, ; 'return_info': False, ; 'info': _empty_info_dict(), ; 'verbose': False, ; 'solver': 'mkl', ; 'use_rcm': False, ; 'use_wbm': False, ; 'weight': None, ; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None, ; 'maxiter': 1000; ```. Lastly, most steadystate's method have a logger if you activate debug in setting:; ```; import qutip.settings as settings; settings.debug = True; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1077#issuecomment-527620834:177,Avail,Available,177,https://qutip.org,https://github.com/qutip/qutip/issues/1077#issuecomment-527620834,2,"['Avail', 'toler']","['Available', 'tolerance']"
Availability,"Hi,; This seems to ba accumulation of numerical error.; You can increase the solver precision (atol, rtol, max_step) in options:; `sesolve(..., options=qutip.Options(atol=1e-9)`.; You could also remove the normalization of the state `Options(normalize_output=False)`, then the error will not spread to the ""010"" state.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1085#issuecomment-531283266:48,error,error,48,https://qutip.org,https://github.com/qutip/qutip/issues/1085#issuecomment-531283266,2,['error'],['error']
Availability,"Hi. By clarifying the data types `_data.solve(_data.CSR(A),_data.Dense(V))`, Typeerror stops, but Attribute error occurred instead.; ```; qutip/solver/countstat.py:221: in countstat_current_noise; current, noise = _noise_direct(L, wlist, rhoss, J_ops); qutip/solver/countstat.py:118: in _noise_direct; X_rho = [_data.dense.fast_from_numpy(_solve(A, op)); qutip/solver/countstat.py:118: in <listcomp>; X_rho = [_data.dense.fast_from_numpy(_solve(A, op)); qutip/core/data/dense.pyx:215: in qutip.core.data.dense.fast_from_numpy; cpdef Dense fast_from_numpy(object array):; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . > if array.ndim == 1:; E AttributeError: 'qutip.core.data.dense.Dense' object has no attribute 'ndim'; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2109#issuecomment-1459917369:108,error,error,108,https://qutip.org,https://github.com/qutip/qutip/issues/2109#issuecomment-1459917369,1,['error'],['error']
Availability,"Hi. I replaced scipy wrapper with _data.solve. I ran pytest and error occurred. Does anybody know how to solve this? Thank you. File ""qutip/core/data/dispatch.pyx"", line 582, in qutip.core.data.dispatch.Dispatcher.__call__; raise TypeError(""unknown types to dispatch on: "" + str(dispatch)) from None; TypeError: unknown types to dispatch on: [<class 'scipy.sparse._csr.csr_matrix'>, <class 'numpy.ndarray'>]; Traceback (most recent call last):; File ""/root/opt/qutip/qutip/solver/countstat.py"", line 83, in _solve; return _data.solve(A, V, ""splu"")",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2109#issuecomment-1458453064:64,error,error,64,https://qutip.org,https://github.com/qutip/qutip/issues/2109#issuecomment-1458453064,1,['error'],['error']
Availability,"Hi. Thanks, but I am now getting a new error. If the code is-. `from qutip import *. import numpy as np. import matplotlib.pyplot as plt. print(Qobj())`. Then there is no error whatsoever. If the code is-. `from qutip import *. import numpy as np. import matplotlib.pyplot as plt. print(Qobj()). print(Qobj([[1],[2],[3],[4],[5]]))`. Then it gives expected result if I run it first thing after launching spyder. But if I have already run any qutip code and then try to run this code, then I get the following error-. File ""/home/premkr/.local/lib/python3.7/site-packages/scipy/sparse/base.py"", line 283, in __bool__; raise ValueError(""The truth value of an array with more than one "". ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all(). The full error message is-. runfile('/home/premkr/Dropbox/work/python/qutip/gksl_learning.py', wdir='/home/premkr/Dropbox/work/python/qutip'); Traceback (most recent call last):. File ""<ipython-input-2-af424448e75a>"", line 1, in <module>; runfile('/home/premkr/Dropbox/work/python/qutip/gksl_learning.py', wdir='/home/premkr/Dropbox/work/python/qutip'). File ""/usr/lib/python3/dist-packages/spyder_kernels/customize/spydercustomize.py"", line 678, in runfile; execfile(filename, namespace). File ""/usr/lib/python3/dist-packages/spyder_kernels/customize/spydercustomize.py"", line 106, in execfile; exec(compile(f.read(), filename, 'exec'), namespace). File ""/home/premkr/Dropbox/work/python/qutip/gksl_learning.py"", line 19, in <module>; print(Qobj([[1],[2],[3],[4],[5]])). File ""/home/premkr/.local/lib/python3.7/site-packages/qutip/qobj.py"", line 256, in __init__; _tmp = sp.csr_matrix(data, dtype=complex). File ""/home/premkr/.local/lib/python3.7/site-packages/scipy/sparse/compressed.py"", line 86, in __init__; self._set_self(self.__class__(coo_matrix(arg1, dtype=dtype))). File ""/home/premkr/.local/lib/python3.7/site-packages/scipy/sparse/compressed.py"", line 86, in __init__; self._set_self(self.__class__(c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2121#issuecomment-1469601223:39,error,error,39,https://qutip.org,https://github.com/qutip/qutip/issues/2121#issuecomment-1469601223,4,['error'],['error']
Availability,Hmm. It would be nice to get the results that succeeded. What if we made a single exception class that was used by all the functions and which contained all the errors and all the results? Then everyone can catch the same exception class and decide what to do with all the results and errors?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1969#issuecomment-1209413844:161,error,errors,161,https://qutip.org,https://github.com/qutip/qutip/pull/1969#issuecomment-1209413844,2,['error'],['errors']
Availability,"Hmm. Travis didn't run on the force-pushed version. That's frustrating, particularly because I was force-pushing to correct a silly error that CI caught.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-603230950:132,error,error,132,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-603230950,1,['error'],['error']
Availability,"Hmmm. Now the documentation build works, and the macos test run works as well (except for unrelated test failures). The python 3.9 test runs fails to build mpi4py. Here, the problem solution would be [this](https://stackoverflow.com/a/73399242) (I've had the same problem before installing mpi4py on the RIKEN HPC). Should I add that?. All other test runs fail, seemingly because the first call to `mpi_pmap` hangs indefinitely. That's... hard to debug. Why would it work only on macos?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296#issuecomment-1905456136:105,failure,failures,105,https://qutip.org,https://github.com/qutip/qutip/pull/2296#issuecomment-1905456136,1,['failure'],['failures']
Availability,"Hopefully `sin(t) if t > 4 else cos(t)` should work for you?. Internally the relevant data structures either compile standard Python to code objects or go native via Cython, so the rule of thumb is ""would `eval(my_string)` give me what I want?"". QuTiP provides some basic wrapping of the scoping rules so things like `t` are available, and the standard numpy functions `sin`, `cos`, etc., are available without needing the namespace, but it's not got a full DSL for specifying time-dependence - it just uses regular Python.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1240#issuecomment-620486072:325,avail,available,325,https://qutip.org,https://github.com/qutip/qutip/issues/1240#issuecomment-620486072,2,['avail'],['available']
Availability,How do I fix this error on win64 conda?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/702#issuecomment-471319003:18,error,error,18,https://qutip.org,https://github.com/qutip/qutip/issues/702#issuecomment-471319003,1,['error'],['error']
Availability,"I actually have a question about this automatic normalization. Do we really need this to hide the numerical errors? Wouldn't it be better to just expose the error since it will be proportional to `atol` anyway (and if not, something went wrong)? Which group of users will this auto-normalization benefit?. Sometimes an unnormalised state at the ends can also indicate that there is something wrong with the Hamiltonian, e.g., it is not hermitian due to some typos.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2427#issuecomment-2115886018:108,error,errors,108,https://qutip.org,https://github.com/qutip/qutip/pull/2427#issuecomment-2115886018,2,['error'],"['error', 'errors']"
Availability,"I added a test that compares `correlation_2op_1t` to its analytical solution. I was trying to match the `c_ops` of this new test to the ones appearing in `test_correlation_solver_equivalence`, which are:; ` c_ops = [np.sqrt(G1 * (n_th+1)) * a,; np.sqrt(G1 * n_th) * a.dag()]; `; However, the analytical solution I obtained for this case did not work unless I used a very small value for `n_th = 0.1`. I was wondering whether the analytical solution I got was wrong or whether this actually makes sense. I was thinking that the difference probably comes from the cut we use for the number of states (`N = 20`). The new test for `correlation_2op_1t` should be very robust as it tests for a lot of different scenarios, including the one presented in #1460. I was wondering whether these were too many cases.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1478#issuecomment-813359081:663,robust,robust,663,https://qutip.org,https://github.com/qutip/qutip/pull/1478#issuecomment-813359081,1,['robust'],['robust']
Availability,"I added all the suggested changes. However, now the tets for trace norm with csr matrices started failing (in particular `TestTraceNorm.test_mathematically_correct[CSR[square,sparse]->Number]`). Decreasing the tolerance to `1e-8` solves the problem but given that this was not a problem before (at least I do not remember this happening), I wonder if it is actually signaling that there is something wrong.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1635#issuecomment-929280362:210,toler,tolerance,210,https://qutip.org,https://github.com/qutip/qutip/pull/1635#issuecomment-929280362,1,['toler'],['tolerance']
Availability,"I added support for `nan`.; But most `CSR` operation are not careful about them, `mul` as a fast pass that `*0` return a new zeros matrix without ever reading the original array. I believe that instead of supporting `nan`, operation that could create `nan` should raise an error.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1670#issuecomment-928390255:273,error,error,273,https://qutip.org,https://github.com/qutip/qutip/pull/1670#issuecomment-928390255,1,['error'],['error']
Availability,I added the test in `qutip/tests/test_correlation.py` and pytest returns no errors. Why not put it inside the `qutip/tests/test_steadystate.py` file instead?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1660#issuecomment-917597103:76,error,errors,76,https://qutip.org,https://github.com/qutip/qutip/pull/1660#issuecomment-917597103,1,['error'],['errors']
Availability,"I agree we need to be consistent, but I would also go with `matrix * Qobj` to be right and change `Qobj * array` to raise an error.; `Qobj * Qobj` can be understood as `Qobj @ Qobj` but everything else could use `mul`. If `mul` raise a `TypeError`, we can catch it and return `NotImplemented`. With this, we probably won't need to touch the `Dense` and `CSR` `mul` function and `Variable` will be passed to the `TfTensor` specialization.; The only issue I see is that sometime `Variable * Qobj` will work, other time it will not exist.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1611#issuecomment-880821814:125,error,error,125,https://qutip.org,https://github.com/qutip/qutip/pull/1611#issuecomment-880821814,1,['error'],['error']
Availability,"I agree with this, with some additional points:; 1. `QobjEvo` also needs to be handled by `__matmul__`, but this should be handled by returning `NotImplemented`, and letting `QobjEvo.__rmul__` dispatch it to `QobjEvo.__rmatmul__`.; 1. however we choose to do this, `__mul__` should return `NotImplemented` if the other element can't be handled correctly; it shouldn't raise an exception by itself. The ""Pythonic"" way is to try/catch an exception in handling, but this just means we need to be sure that all `__mul__` methods do proper error checking, and _do_ reject invalid input rather than just silently doing weird stuff.; 1. what do we want to do in response to being multiplied with Numpy arrays? We have to be careful, because otherwise we might do very different things depending on whether we're being multiplied from the left or right by the Numpy array, which isn't really desirable. My first instinct is to say we should make ourselves appear as a scalar type to Numpy, so it broadcasts the multiplication over the scalar values in its array. To do that, we may need to play a little with `__array__`, `__array_ufunc__` and `__array_function__`, and return `NotImplemented` from `Qobj.__mul__(array)`. I think this maybe gives the most useful behaviour? I can't imagine a situation where it would make sense for a data-layer type to accept a Numpy array in a scalar-multiplication routine, and doing things this way allows people to use the broadcasting support of Numpy for convient looping. Just for posterity, I'm really strongly against any automatic promotion to `Qobj`, with the exception of handling scalar numbers in `__add__` and `__sub__`, where mathematical convention is that they mean the relevant identity operator scaled by the scalar. Having that is also necessary to have `sum()` work with `Qobj` ergonomically. I know that's not the suggestion here, just thought I'd mention it again!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1611#issuecomment-882613672:535,error,error,535,https://qutip.org,https://github.com/qutip/qutip/pull/1611#issuecomment-882613672,1,['error'],['error']
Availability,"I also get no error. The user already has access to Q.data, so if this is what they want, then it is already available. I do not see any benefit of changing the display output.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/432#issuecomment-184881219:14,error,error,14,https://qutip.org,https://github.com/qutip/qutip/issues/432#issuecomment-184881219,2,"['avail', 'error']","['available', 'error']"
Availability,I also switched the `general_stochastic` parameter checking exceptions type from `Exception` to:; `TypeError` for incorrect object type; `ValueError` for some incorrect property of object; `RuntimeError` for unknown source of error. I think this is good practice.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1115#issuecomment-546778114:226,error,error,226,https://qutip.org,https://github.com/qutip/qutip/pull/1115#issuecomment-546778114,1,['error'],['error']
Availability,I am able to reproduce locally. Both with scipy 1.1 and 0.19; both with libopenblas 0.2.20. The `sp.linalg.eigsh` call generates the seg fault. Seems it this is a known issue with anaconda openblas; https://github.com/scipy/scipy/issues/7667. I have read many other related posts:; https://github.com/opencobra/memote/issues/383; https://github.com/numpy/numpy/issues/613. This one suggests a fix with openblas 0.2.17 (not anaconda though); https://github.com/mingwpy/mingwpy/issues/2,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/871#issuecomment-393906614:137,fault,fault,137,https://qutip.org,https://github.com/qutip/qutip/issues/871#issuecomment-393906614,1,['fault'],['fault']
Availability,"I am afraid it was last week, and I can't remember the details. The error was always related to OSX version mavericks or later not being compatible with gcc48.; Again these steps may not be exact, but this is what I think we did:; 1. Install HomeBrew; ruby -e ""$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)""; 2. Install scipy and cython; brew install scipy; brew install cython",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/265#issuecomment-64205641:68,error,error,68,https://qutip.org,https://github.com/qutip/qutip/issues/265#issuecomment-64205641,1,['error'],['error']
Availability,"I am closing this: change to the documentation are redundant to previous PRs. The `requirements.txt` file refers to the packages needed to use qutip, which we keep to a minimum. Modules required to build the documentation are in `doc/requirements.txt`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1764#issuecomment-1014778988:51,redundant,redundant,51,https://qutip.org,https://github.com/qutip/qutip/pull/1764#issuecomment-1014778988,1,['redundant'],['redundant']
Availability,"I am getting a variety of errors when running the test scripts under OSX:; - For `test_mcsolve_cl_time_dep_h` I get ""atol could not be reached for 1 trajectories"". I am also seeing:. ""CompilerWarning: Non-empty compiler output encountered. Set the environment variable PYOPENCL_COMPILER_OUTPUT=1 to see more.; ""to see more."", CompilerWarning)"". ""AttributeError: 'NoneType' object has no attribute 'clobj__delete'; Exception ignored in: <object repr() failed>""",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/554#issuecomment-259602577:26,error,errors,26,https://qutip.org,https://github.com/qutip/qutip/pull/554#issuecomment-259602577,1,['error'],['errors']
Availability,I am getting the same error using Python 3.6 and qutip 4.1,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/671#issuecomment-401908455:22,error,error,22,https://qutip.org,https://github.com/qutip/qutip/issues/671#issuecomment-401908455,1,['error'],['error']
Availability,I am guessing that the test has too low a tolerance. Also not sure about the two tests. Didnt see it a day or two ago.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/721#issuecomment-316063869:42,toler,tolerance,42,https://qutip.org,https://github.com/qutip/qutip/pull/721#issuecomment-316063869,1,['toler'],['tolerance']
Availability,I am happy to review this. ; Tests seem to be failing with:; ```; ERROR: Failure: ModuleNotFoundError (No module named 'piqs'); ```; Perhaps this could be fixed first,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/753#issuecomment-361266618:66,ERROR,ERROR,66,https://qutip.org,https://github.com/qutip/qutip/pull/753#issuecomment-361266618,2,"['ERROR', 'Failure']","['ERROR', 'Failure']"
Availability,I am happy with the changes and explanations. ; I see the Python2.7 check has failed though. I am not sure what the error message implies. @cgranade do you have any idea?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/358#issuecomment-128688035:116,error,error,116,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128688035,1,['error'],['error']
Availability,I am not really seeing the seg fault clearly in this trace. ; Please could you add some more description in here about what exactly you doing. That is steps to replicate. Please also include details about your environment by running `qutip.about()`,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-595872761:31,fault,fault,31,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-595872761,1,['fault'],['fault']
Availability,"I am not too familiar with poetry, but it seems to try to install Qutip from source. To build, you need cython with a working c++ compiler. Usually the c++ compiler is managed by the OS, not python, so you need to install is manually. My guess it that if you can tell poetry to use Qutip's wheels available on pypi instead of building from source, it should work. But if you need to build it from source, you will need to install Microsoft Visual C++ and do some setup. See https://cython.readthedocs.io/en/latest/src/quickstart/install.html. I am not sure if there is anything we can do on our side, but if we are missing something, feel free to tell us or make a PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2322#issuecomment-1936053208:297,avail,available,297,https://qutip.org,https://github.com/qutip/qutip/issues/2322#issuecomment-1936053208,1,['avail'],['available']
Availability,"I am now trying to setup a developement environment using ```python setup.py develop``` and ```python setup.py build_ext --inplace``` but getting the error . ```; cy/stochastic.pyx: cannot find cimported module 'qutip.cy.spmatfuncs'; Appending qutip.cy configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.cy'); Appending qutip.control configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.control'); Traceback (most recent call last):; File ""setup.py"", line 18, in <module>; setup(**configuration(top_path='').todict()); File ""setup.py"", line 10, in configuration; if os.environ['FORTRAN_LIBS'] == 'TRUE':; File ""/usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/UserDict.py"", line 40, in __getitem__; raise KeyError(key); KeyError: 'FORTRAN_LIBS'; ```; I have gcc and gfortran installed and I suspect this might also be due to some issue with the file paths. I will try to get a workaround and post soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348#issuecomment-263750245:150,error,error,150,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263750245,1,['error'],['error']
Availability,I am still trying to understand the error:; Perhaps the pending notebook; https://github.com/qutip/qutip-notebooks/pull/51; could help you,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/820#issuecomment-366304046:36,error,error,36,https://qutip.org,https://github.com/qutip/qutip/issues/820#issuecomment-366304046,1,['error'],['error']
Availability,"I am trying to add some `.qasm` files to the folder `qutip/qutip/tests/qasm_files/` to use during test time. I thought it would be enough to add them to the `PACKAGE_DATA` variable in `setup.py` but that does not seem to work. Any ideas on how to make sure this folder is available during testing time? Beside this part, the PR is ready for review. @nathanshammah @BoxiLi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1291#issuecomment-655893373:272,avail,available,272,https://qutip.org,https://github.com/qutip/qutip/pull/1291#issuecomment-655893373,1,['avail'],['available']
Availability,I am using Debian and when I build QuTiP with GCC 5 it passes all modules in qutip.tests. But with GCC 6 it gives a lot of errors in the tests. I am not sure if this is related to your problem @bastikr but hope it gives you some insight.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/681#issuecomment-292649790:123,error,errors,123,https://qutip.org,https://github.com/qutip/qutip/issues/681#issuecomment-292649790,1,['error'],['errors']
Availability,"I am using spyder. When I run the code once by pressing F5 button, then I get expected behaviour. But when I press F5 again, then I get error. If I modify the code and press F5, same error. If I restart spyder, then again I do not get any error on the first run, but the error repeats on subsequent runs. Yes, just running `import qutip` also gives the same error. I guess you are asking for the full error message and not just the last two lines. Here it is for `import qutip` for two subsequent runs.-. IN [1]: runfile('/home/premkr/Dropbox/work/python/qutip/gksl_learning.py', wdir='/home/premkr/Dropbox/work/python/qutip'). IN [2]: runfile('/home/premkr/Dropbox/work/python/qutip/gksl_learning.py', wdir='/home/premkr/Dropbox/work/python/qutip'); Traceback (most recent call last):. File ""<ipython-input-2-af424448e75a>"", line 1, in <module>; runfile('/home/premkr/Dropbox/work/python/qutip/gksl_learning.py', wdir='/home/premkr/Dropbox/work/python/qutip'). File ""/usr/lib/python3/dist-packages/spyder_kernels/customize/spydercustomize.py"", line 678, in runfile; execfile(filename, namespace). File ""/usr/lib/python3/dist-packages/spyder_kernels/customize/spydercustomize.py"", line 106, in execfile; exec(compile(f.read(), filename, 'exec'), namespace). File ""/home/premkr/Dropbox/work/python/qutip/gksl_learning.py"", line 11, in <module>; import qutip. File ""/home/premkr/.local/lib/python3.7/site-packages/qutip/__init__.py"", line 106, in <module>; from qutip.qobj import *. File ""/home/premkr/.local/lib/python3.7/site-packages/qutip/qobj.py"", line 2526, in <module>; import qutip.superop_reps as sr. File ""/home/premkr/.local/lib/python3.7/site-packages/qutip/superop_reps.py"", line 74, in <module>; _SINGLE_QUBIT_PAULI_BASIS = (identity(2), sigmax(), sigmay(), sigmaz()). File ""/home/premkr/.local/lib/python3.7/site-packages/qutip/operators.py"", line 278, in sigmax; return 2 * jmat(1 / 2, 'x'). File ""/home/premkr/.local/lib/python3.7/site-packages/qutip/operators.py"", line 80, in jmat; A ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2121#issuecomment-1469319817:136,error,error,136,https://qutip.org,https://github.com/qutip/qutip/issues/2121#issuecomment-1469319817,6,['error'],['error']
Availability,"I apologize for my distraction, but I fixed the Python 3.4 failures now. Is there anything else that I should do before this is ready to merge? Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/332#issuecomment-125435509:59,failure,failures,59,https://qutip.org,https://github.com/qutip/qutip/pull/332#issuecomment-125435509,1,['failure'],['failures']
Availability,"I apologize to all for the delay, but I just added checks for regression on this issue. They currently fail due to a problem with `to_chi` and multiple qubits. ``` python; ======================================================================; ERROR: Failure: TypeError (Incompatible Qobj shapes); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Anaconda\lib\site-packages\nose\loader.py"", line 251, in generate; for test in g():; File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\tests\test_qobj.py"", line 671, in test_dag_preserves_superrep; yield case, to_chi(qobj); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 435, in to_chi; return to_chi(to_choi(q_oper)); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 432, in to_chi; return choi_to_chi(q_oper); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 258, in choi_to_chi; return Qobj(B.dag() * q_oper * B, superrep='chi'); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\qobj.py"", line 455, in __mul__; raise TypeError(""Incompatible Qobj shapes""); TypeError: Incompatible Qobj shapes. ----------------------------------------------------------------------; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/375#issuecomment-152945134:244,ERROR,ERROR,244,https://qutip.org,https://github.com/qutip/qutip/pull/375#issuecomment-152945134,2,"['ERROR', 'Failure']","['ERROR', 'Failure']"
Availability,I can confirm that the failure in the CI occurs only on the `coverage` test environment and it disappears if we update scipy to 1.6,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-817211736:23,failure,failure,23,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-817211736,1,['failure'],['failure']
Availability,"I can definitely see the appeal in having bra_ket returning a c-number, but the obvious downside it that one loses the ability to call Qobjs methods and attributes on the result, and maybe not use it as input to some of qutips other functions. But these might be corner cases since the data of bra_ket is after all a c-number so it might not be necessary to represent it with a Qobj. Still I feel hesitant to change this behavior without carefully thinking through the consequences. There is also a function Qobj.overlap that can be used if a c number result is what one wants. . Maybe @nonhermitian has some opinion/insights on this issue?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/28#issuecomment-19604526:88,down,downside,88,https://qutip.org,https://github.com/qutip/qutip/issues/28#issuecomment-19604526,1,['down'],['downside']
Availability,"I can get the same error on linux with:; ```; from qutip.testing import run; import multiprocessing as mp; mp.set_start_method('spawn'); run(); ```; It hangs on qutip/tests/test_mcsolve.py::test_MCTDFunc.; So maybe, set_start_method('fork') could probably fix the problem on mac.; Also this hang, both at console and jupyter:; ```; import multiprocessing as mp; mp.set_start_method('spawn'). def f(i):; return i+1. p = mp.Pool(); p.map(f, [1,2,3,4]); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1202#issuecomment-603919447:19,error,error,19,https://qutip.org,https://github.com/qutip/qutip/issues/1202#issuecomment-603919447,1,['error'],['error']
Availability,"I can not imagine that that error would have much to do with a compiler change. Sometimes the tests fail for odd reasons and are fine if they get rerun. I will look into it tomorrow. . Paul . > On Feb 21, 2015, at 09:52, Dominic Meiser notifications@github.com wrote:; > ; > Ok makes sense. I will make that change over the weekend. Btw for whatever reason one of the builds failed in the most recent build:; > ; > https://travis-ci.org/qutip/qutip/jobs/51588003; > ; > Any idea what the problem is? Is this something I should be worried about?; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/318#issuecomment-75411847:28,error,error,28,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75411847,1,['error'],['error']
Availability,"I can not reproduce the second error that you mention. In addition, it seems that the error with homebrew is not a QuTiP issue, but rather some issue with the build_ext command used there. I am not 100% what the error is, but the include file directory does not seem to be passed to the compiler.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348#issuecomment-113345570:31,error,error,31,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-113345570,3,['error'],['error']
Availability,I can reproduce it with matplotlib `3.9` but actually I am not sure if it is a qutip problem. The error message seems pure matplotlib,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2400#issuecomment-2146968944:98,error,error,98,https://qutip.org,https://github.com/qutip/qutip/issues/2400#issuecomment-2146968944,1,['error'],['error']
Availability,I cannot reproduce the error as I am on darwin. ; It might be something about `_linux_hardware_info`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1004#issuecomment-497178029:23,error,error,23,https://qutip.org,https://github.com/qutip/qutip/issues/1004#issuecomment-497178029,1,['error'],['error']
Availability,"I cannot reproduce the error. I get the answer. ```python; Quantum object: dims = [[1], [10]], shape = (1, 10), type = bra; Qobj data =; [[ 0.31622777 0.76344136 0.99493615 1.18017809 1.33956231 1.48170345; 1.6112567 1.73108722 1.84311049 0.9486833 ]]; ```; which matches the NumPy dense answer:. ```python; [[ 0.31622777+0.j 0.76344136+0.j 0.99493615+0.j 1.18017809+0.j; 1.33956231+0.j 1.48170345+0.j 1.61125670+0.j 1.73108722+0.j; 1.84311049+0.j 0.94868330+0.j]]; ```. Why not try using Anaconda? It is what our build scripts are run against, and you do not have to build things yourself.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/681#issuecomment-292603323:23,error,error,23,https://qutip.org,https://github.com/qutip/qutip/issues/681#issuecomment-292603323,1,['error'],['error']
Availability,"I carefully followed the instruction and installed qutip on an ubuntu system in windows. It seems the the only package I did not explicitly install is Python Headers.; After installing qutip and running the test, I got the following:; 634 passed, 6 skipped, 61 deselected, 2 xfailed, 959 warnings in 236.31s (0:03:56); qutip/tests/test_metrics.py::test_unitarity_known XFAIL [ 35%]; qutip/tests/test_metrics.py::test_unitarity_bounded XFAIL [ 35%]; qutip/tests/test_metrics.py::test_dnorm_bounded SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_known_cases SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_scalar SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_qubit_triangle SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_force_solve SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_cptp SKIPPED [ 36%]. 1. I am wondering how to solve these problems. 2. Do I need to worry about deselected and warnings? What should the normal output be if qutip is installed successfully?; As a beginner, I feel it is really challenging to install the package and be free of errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1222#issuecomment-605556711:1111,error,errors,1111,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-605556711,1,['error'],['errors']
Availability,"I checked locally by intentionally making the tests fail, and the case descriptions do show up in failure logs correctly, so at least the hack works?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/417#issuecomment-179027129:98,failure,failure,98,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-179027129,1,['failure'],['failure']
Availability,"I closed the issue; it is too vague, sorry about that. From: hrahman12 ***@***.***>; Sent: Wednesday, April 20, 2022 5:16 PM; To: qutip/qutip ***@***.***>; Cc: Anna Naden ***@***.***>; Author ***@***.***>; Subject: Re: [qutip/qutip] Details of QuTiP user's guide (Issue #1759). Hi Anna, thank you for replying can you please give some more information about which particular part/s of the user guides you are finding these errors?. —; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/1759#issuecomment-1104512322>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AN2AJU6X7MKML5BRRV4IWHLVGB62PANCNFSM5LYUHNQA>.; You are receiving this because you authored the thread.Message ID: ***@***.******@***.***>>",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1759#issuecomment-1104665213:423,error,errors,423,https://qutip.org,https://github.com/qutip/qutip/issues/1759#issuecomment-1104665213,1,['error'],['errors']
Availability,"I completely agree with you that random tests really aren't the right way to go in general, but right now our problem is that basically QuTiP's entire testing suite is based on randomised tests, and that's an awful lot of technical debt to overcome any time soon :(. . The `dnorm` tests have historically been a huge problem, even though basically nobody's worked on `dnorm` for a long long time now (for context, see in particular #880 and #874). We don't actually even know if the failures in `dnorm` are deterministic and reproducible, although it turns out that I had a brief look into this when I joined as a GSoC student about a year ago... I don't remember doing it at all!. I know this is super inelegant and not the perfect method, but it's kind of a nasty trade-off - I don't have time to really dig into `dnorm` (a topic I know almost nothing about) to work out an appropriate solution to temperamental errors, we do want `dnorm` to be tested since we're shipping it, and the slight flakiness keeps causing us test suite failures about 1 in 10 times. I'm somewhat opposed to fixing the random seed because having the variance over several test runs does actually help us cover more ground (eventually) - fixing it to a ""known good"" seed actually seems to me to be more of a mask of potential problems than this. Of note: the pytest plugin I'm using reports the number of reruns it performed in the analysis at the bottom - they show up in a yellow alongside the ""skips"" and ""xfails"" - so it's not completely hidden. I'd love to have a property-based testing suite like hypothesis up and running - that definitely seems like the proper solution to this in the end. In the meantime, I'm open to swapping to a fixed random seed if you think that's much better - testing is one place where I'm really aware of my lack of formal experience in software engineering, so I'm basically just learning as I go.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1490#issuecomment-815317227:483,failure,failures,483,https://qutip.org,https://github.com/qutip/qutip/pull/1490#issuecomment-815317227,4,"['error', 'failure', 'mask']","['errors', 'failures', 'mask']"
Availability,"I couldn't reproduce this with an install into a fresh `conda` environment, _but_ I did once see that same error when I tried to make an OpenMP and a non-OpenMP `qutip` coexist in the same environment. When that previously happened, the package actually worked, it just reported that error. My guess is that this happens if `pyximport.install()` has already been activated when `qutip` is imported, and consequently the test in `__init__.py` as to whether `qutip.cy.openmp.parfuncs` is importable causes this error. It should not be able to even attempt to import it _unless_ `pyximport` has been turned on, and if it's been turned on by something other than QuTiP, then it should fail with a `numpy` header file error instead (this is something we should probably fix too, but I've not noticed it before). Is there any chance you're importing or reimporting `qutip` in a Python session in which some other version of `qutip` is already imported (like in an IPython profile file)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1334#issuecomment-670003770:107,error,error,107,https://qutip.org,https://github.com/qutip/qutip/issues/1334#issuecomment-670003770,4,['error'],['error']
Availability,"I created a CentOS VM - which I think may have been unnecessary and a bit time consuming; I installed Miniconda and the qutip required libraries. Initially this was cython 0.25.2; I installed qutip 4.2 (the version we created for the release) from source with no error.; I upgraded to cython 0.26, for which I had to use the conda-forge channel.; I tried to install qutip 4.2 (the version we created for the release) from source and found the errors reported by @kcgthb ; I installed qutip 4.2 (the version from #731 ) from source with no error.; I would say therefore that this issue is fixed by #731",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-318100070:263,error,error,263,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-318100070,3,['error'],"['error', 'errors']"
Availability,"I did try to understand the question you are investigating, but a quick look at the error report you can see that the problem is just in the final plotting. If you only fit the first 500 data points, you can only plot those first 500 points, unless you do some extrapolation in advance. So change the line to `ax.plot(times[:500], final, 'r')` should work.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1559#issuecomment-846382792:84,error,error,84,https://qutip.org,https://github.com/qutip/qutip/issues/1559#issuecomment-846382792,1,['error'],['error']
Availability,I do not get a build failure under NumPy 1.10.1. What was the particular error message? Any changes would also have to be backward compatible with earlier NumPy versions.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/392#issuecomment-154863591:21,failure,failure,21,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154863591,2,"['error', 'failure']","['error', 'failure']"
Availability,"I don't get any error in both cases. ; What is your `qutip.about()` message? ; By the way, QuTiP does not support anymore Python 2.7, see #882. ; My specifications are; ```; QuTiP Version: 4.3.1; Numpy Version: 1.16.2; Scipy Version: 1.2.1; Cython Version: 0.28.5; Matplotlib Version: 2.2.3; Python Version: 3.6.7; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/796#issuecomment-497299113:16,error,error,16,https://qutip.org,https://github.com/qutip/qutip/issues/796#issuecomment-497299113,1,['error'],['error']
Availability,"I don't have xvfb (pytest-xvfb) installed specifically for qutip, but it is used by other packages (The general use of pytest-xvfb is to facilitate testing of GUI, graphical or windowing functionality without having an normal Xserver active. That is, it can be useful for automated CI testing of gui packages, for instance in chroots or cloud CI infrastructure). Since qutip doesn't use xvfb directly this bug won't be a problem for general CI testing, where only qutip is loaded on a cloud instance (for instance Debian testing done at https://ci.debian.net/packages/q/qutip/). But before I upload a package to the Debian infrastructure, I like to run the tests on my own system to be confident they're likely to pass. So this is where the problem happens, running tests on my own system, where I have pytest-xvfb installed for testing other packages. (pytest has this bad habit of loading all available plugins whether or not they're actually used by the tests being run. It's quite annoying actually. It would be better if it only loaded plugins specified in conftest.py). So the use case is running the qutip tests on my own system, where pytest-xvfb simply happens to be installed for other purposes not related to qutip. There are ways of working around the problem, for instance the `--no-xvfb` option could be explicitly added to the `pytest` command line. But it can be useful if the test code itself can be made robust with respect to the problem (e.g. in this case just replacing `plt.clf()` with `plt.close('all')`)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639#issuecomment-909115791:895,avail,available,895,https://qutip.org,https://github.com/qutip/qutip/issues/1639#issuecomment-909115791,2,"['avail', 'robust']","['available', 'robust']"
Availability,"I don't know if it is relevant, but I copy-pasted the block in the first [post](https://github.com/qutip/qutip/issues/932#issue-378533309) of the thread and I do not get an error message by running it on OS High Sierra 10.13.6 in a Jupyter notebook. There is a clang warning ; ```; libstdc++ is deprecated; move to libc++ with a minimum deployment target of OS X 10.9 [-Wdeprecated]; ```; Other details. ```; QuTiP Version: 4.3.1; Numpy Version: 1.14.2; Scipy Version: 1.1.0; Cython Version: 0.28.5; Matplotlib Version: 2.2.3; Python Version: 3.6.7; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932#issuecomment-466251384:173,error,error,173,https://qutip.org,https://github.com/qutip/qutip/issues/932#issuecomment-466251384,1,['error'],['error']
Availability,"I don't know if the test failure is related or not -- it *looks* unrelated but it is a data layer test, so we should probably check a bit carefully.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1620#issuecomment-892573255:25,failure,failure,25,https://qutip.org,https://github.com/qutip/qutip/pull/1620#issuecomment-892573255,1,['failure'],['failure']
Availability,"I don't know if this is helpful, but I can get a different error if I first `import numpy`:. ```; >>> import numpy; >>> import qutip.testing as qt; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/usr/local/lib/python2.7/site-packages/qutip/__init__.py"", line 62, in <module>; qutip.settings.ipython = False; AttributeError: 'module' object has no attribute 'settings'; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348#issuecomment-113235398:59,error,error,59,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-113235398,1,['error'],['error']
Availability,"I don't think either ""missing"" or ""full"" should be used much with pure qutip. Only with plugins like qutip-jax it makes any sense to me. With ""missing"", you could set it so it will end up all in jax format and not have too much issues. . ""full"" will probably break HEOM, some steadystate feature, slow down scipy integrators, etc. ""missing? should be safe. Ok for `default_dtype_scope`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2519#issuecomment-2407529422:302,down,down,302,https://qutip.org,https://github.com/qutip/qutip/pull/2519#issuecomment-2407529422,1,['down'],['down']
Availability,"I don't think it's your code, but I haven't looked in to it in sufficient detail yet. As it stands installing qutip is fine but importing it fails, as it is unable to find the C headers, and is spitting out multiple errors of the form ""distutils.errors.CompileError: command '/usr/bin/clang' failed with exit status 1"". I can provide the full error messages sometime tomorrow if I'm still unable to solve the problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/552#issuecomment-260194878:216,error,errors,216,https://qutip.org,https://github.com/qutip/qutip/issues/552#issuecomment-260194878,3,['error'],"['error', 'errors']"
Availability,"I don't think there is something wrong.; We can expect the matmul output and eigen values to have errors of about 1e-16, (double's precision), then it sums the square-roots, resulting in error up to ~1e-8 when the eigen values should be zeros. So with a tol at 1e-8, the test can fail from numerical error with nothing wrong in the test. If you look are the sparse eigen solver, for a 100x100 matrix with only 10 non-zero values, all along the diagonal, it does not find any` 0` eigen values: there are about 89x `~e-36`, 1x `~e-17` and the 10 non-zeros values. So the `sqrt(~e-17)` is pure numerical error and appear in the test at around 3e-9. ; I ran the test a few thousand times and it fails about 23% of the time, at `tol=3e-8`, it fails about 0.2% of the time and the max is 3.7e-8. So I expect everything is fine and you just need to loosen the tolerance.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1635#issuecomment-929406921:98,error,errors,98,https://qutip.org,https://github.com/qutip/qutip/pull/1635#issuecomment-929406921,5,"['error', 'toler']","['error', 'errors', 'tolerance']"
Availability,"I don't think this is the right way to solve your problem, but we probably should be consistent. `Qobj` is not a container for arbitrary data, and a 1x1 `Qobj` basically should never exist. If I remember correctly, the auto-promotion to `Qobj` is to avoid breaking backwards compatibility, because 4.x doesn't use the `@` syntax at all. We almost certainly should be moving to remove that ""feature"", not add to it - it should never work with compound Hilbert spaces (we should be safe-by-default), and trying to detect special behaviour on 1x1 inputs just leads to weird edge cases and breakages all over the place. You probably want some sort of different mechanism for deciding what types a `Qobj.data` instance can accept in `mul`. At the moment, the test is `isinstance(other, numbers.Number)`, but you want to accept `tensorflow.Variable` if the backing data is TF-like. I think the right solution would be based on having some way for downstream classes to expose what types they can accept, perhaps by a well-defined try/except pattern?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1611#issuecomment-880664515:941,down,downstream,941,https://qutip.org,https://github.com/qutip/qutip/pull/1611#issuecomment-880664515,1,['down'],['downstream']
Availability,"I don't want the way to catch error depend on the map, `serial_map` and `loky_map` both return the error of the first failing iteration and stop there. Having `parallel_map` failing differently will mean that every time we want to catch an error in `mcsolve`, etc. we will have to catch both the expected error and the custom `ParallelMapException`. It also hide the kind of error and prevent us to act on it. I still think that stopping the map and returning the first error is the best options. It will ensure that all map functions fail the same way. In our case, the raised exceptions should be consistent so we should not need run all iteration to see every ways it can fail. And we don't waste computing time to compute result that will not be returned. Another options would to not raise any error and return the finished iteration. For mcsolve, we could have a result returning 99% of the asked trajectories with the note that 1% failed because of overwork from the solver. Trowing away all the work done for one error feels bad. However I can see this not being safe, so it would be a solver options for the user to set.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1969#issuecomment-1209406180:30,error,error,30,https://qutip.org,https://github.com/qutip/qutip/pull/1969#issuecomment-1209406180,8,['error'],['error']
Availability,"I don’t know. It worked for me when I tried to install QuTiP from source; —with-openmp. The error was a different and I am on a different MacOS (I; also tried a conda install llvm, but what worked was gcc for me, with; openmp). I understand that you trying to install QuTiP? If so, how? conda / source /; pip? Consider doing it via conda if you are interested in the stable; version release (4.3), by activating the conda-forge channel as detailed in; the documentation. If QuTiP is installed and you receive this error while doing a specific; task, can you copy paste the message of qutip.about() here?. On Sat, 9 Mar 2019 at 14:37, Xiao <notifications@github.com> wrote:. > Try conda install gcc.; >; > Does that mean I should use gcc from the Anaconda directory?; >; > —; > You are receiving this because you commented.; >; >; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/965#issuecomment-471148065>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AN5ffFcanH6qaCezLIKtW4SflaVsZ63Aks5vU0iCgaJpZM4bmfhd>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/965#issuecomment-471153754:92,error,error,92,https://qutip.org,https://github.com/qutip/qutip/issues/965#issuecomment-471153754,2,['error'],['error']
Availability,"I find Python's `collections` module a good example (https://docs.python.org/3/library/collections.html). Python moved Collections Abstract Base Classes like `Iterable` to the `collections.abc` submodule. In python3.7, . The following code still works but there will be a deprecation warning; ```; from collections import Iterable; ```; ```; import collections; collections.Iterable; ```. It won't disturb other users since there is no warning when; ```; import collections; ```; ```; from collections import *; ```. But the following will give an error, ; ```; >>> from collections import *; >>> Iterable; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'Iterable' is not defined; ```; So for those who use ``from qutip import *``, they still don't know what happens. I'm not sure if it is possible to add a deprecation warning for this case separately. Maybe we can modify the top-level __init__.py so that we `qip` function is imported directly with the `qutip` namespace, it is wrapped with a deprecation warning. In this way, the warning only shows when the functions are called. Not sure if this is practical, though.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1071#issuecomment-520506756:548,error,error,548,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-520506756,1,['error'],['error']
Availability,"I find this error appears when the two pulses are separated by a distance d > 23.0017... Have no idea why...; ```; c_x_bug = lambda t, arg: cosine_pulse(t, t0=piLen/2.0, amp=0.5*piAmp)+\; cosine_pulse(t, t0=23.0018 + 1.0*piLen+piLen/2.0, amp=0.5*piAmp); ```; The generated `QuobjEvo` seems to be correct. . If I change the `[Qobj, func]` representation to `[Qobj, np.array]`, the same thing appears but with a different threshold. . The bug disappears if I give an epsilon small value to the pulse, like 0.000001, instead of 0. ```; def cosine_pulse(t, t0=piLen/2.0, amp=piAmp, w=piLen, phase=0, df=0):; ...; return ... + 0.000001; ```. Does this somehow ring a bell @Ericgig? Is this possible that the algorithm terminates if the coefficients are all zero for a while?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1265#issuecomment-629680971:12,error,error,12,https://qutip.org,https://github.com/qutip/qutip/issues/1265#issuecomment-629680971,1,['error'],['error']
Availability,"I fixed steadystate tests:; - `_permute` use numpy array, @AGaliciaMartinez is looking to fix the data layer function.; - Lowered the precision required for `test_exact_solution_for_simple_methods`. The test looked for `1e-16 +/- 1e-16` and most calls returned `0`. Most methods cannot match this precision and can fail from numerical error.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1850#issuecomment-1097177212:335,error,error,335,https://qutip.org,https://github.com/qutip/qutip/pull/1850#issuecomment-1097177212,1,['error'],['error']
Availability,"I found this thread,. https://solus-project.com/forums/viewtopic.php?t=2938. which tells one to try:. sudo eopkg install -c system.devel. -P. jakeargent wrote:; >; > I'm using solus <https://solus-project.com> 64-bit, and anaconda for; > my python.; >; > anaconda cannot find any qutip package, so I tried to install with; > pip. It gives the following error:; >; > |Command ""/home/jakeargent/anaconda3/bin/python -u -c ""import; > setuptools,; > tokenize;__file__='/tmp/pip-build-n7ekqm4y/qutip/setup.py';f=getattr(tokenize, ; >; > 'open', open)(__file__);code=f.read().replace('\r\n',; > '\n');f.close();exec(compile(code, __file__, 'exec'))"" install; > --record /tmp/pip-lnsaamvm-record/install-record.txt; > --single-version-externally-managed --compile"" failed with error code; > 1 in /tmp/pip-build-n7ekqm4y/qutip/|; >; > Then I tried easy_install, which gave me:; >; > |Processing qutip Writing /home/jakeargent/qutip/setup.cfg Running; > setup.py -q bdist_egg --dist-dir; > /home/jakeargent/qutip/egg-dist-tmp-9_egnp34 Installing without the; > fortran mcsolver. In file included from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; > from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; > from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11, from; > qutip/cy/spmatfuncs.c:27:; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61:; > fatal error: limits.h: No such file or directory #include_next; > <limits.h> /* recurse down to the real one */ ^ compilation; > terminated. In file included from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; > from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; > from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11, from; > qutip/cy/spmatfuncs.c:27:; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61:; > fatal error: limits.h: No such file or directory #include_next; > <limits.h> /* recurs",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639#issuecomment-275734243:353,error,error,353,https://qutip.org,https://github.com/qutip/qutip/issues/639#issuecomment-275734243,2,['error'],['error']
Availability,I get an error `error: command 'gcc' failed with exit status 1` if I try `python setup.py install` or `develop`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1065#issuecomment-527430941:9,error,error,9,https://qutip.org,https://github.com/qutip/qutip/pull/1065#issuecomment-527430941,2,['error'],['error']
Availability,I get the following error when trying to use the ip_parallel_map:. ```; FileNotFoundError: [Errno 2] No such file or directory: '/home/paul/.ipython/profile_default/security/ipcontroller-client.json'; ```. Everything else works as expected.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/276#issuecomment-66558727:20,error,error,20,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66558727,1,['error'],['error']
Availability,"I guess disabling warnings would be OK, but I don't particularly like putting win work-arounds in the general code base.. multiprocessing on windows will always be a pain in the neck.. Anyways, is there anything we can do on this now for 3.1 or should we just kick this can down the road?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/274#issuecomment-66575881:274,down,down,274,https://qutip.org,https://github.com/qutip/qutip/issues/274#issuecomment-66575881,1,['down'],['down']
Availability,I guess the failure on Python 3.10 will sort it self out when this gets merged.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1979#issuecomment-1219958590:12,failure,failure,12,https://qutip.org,https://github.com/qutip/qutip/pull/1979#issuecomment-1219958590,1,['failure'],['failure']
Availability,"I guess there's two things, firstly as you go to higher energies, again convergence errors will appear as levels near the cut-off are sensitive to the cut-off. Also, I think you can see the repeated eigenvalue around the middle of the spectrum which was recently discussed here as a consequence of truncation https://github.com/qutip/qutip/issues/1587 . Secondly, as far as I can see the +- x examples give similar convergence. This example is easily solved analytically, the energies are just that of a normal harmonic oscillator + displacement (+-3 in your case) -0.5. You can calculate this with a couple of just linear coordinate transformations in x. Perhaps there is some issue with your +x solution in pyslise?. Also, for this type of question, you are likely to get good feedback/help from the community if you post to the qutip google group https://groups.google.com/g/qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1597#issuecomment-874060820:84,error,errors,84,https://qutip.org,https://github.com/qutip/qutip/issues/1597#issuecomment-874060820,1,['error'],['errors']
Availability,I guess this was the ZVODE error in the mcsolve_f90 tests?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/197#issuecomment-49157591:27,error,error,27,https://qutip.org,https://github.com/qutip/qutip/pull/197#issuecomment-49157591,1,['error'],['error']
Availability,"I had a quick stab at this by adding a Metaclass to Qobj (I tried doing this within `__new__` but could not get it to work. If it's possible I accept suggestions). ; I am also unsure if your constructor `Qobj` is supposed to be called with positional, kwargs or a combination of both. If it was only kwargs the implementation could be more terse. I assumed that the `copy` argument gets passed as part of `__qutip_qobj_interface__`, as in the conversion it might be necessary to copy anyway so the downstream implementor is responsible for taking care of the copy if requested. ```python; class QobjMetaclass(type):; def __call__(cls, inpt=None, dims=None, shape=None,; type=None, isherm=None, copy=True,; fast=False, superrep=None, isunitary=None):. if isinstance(inpt, Qobj):; pass; elif hasattr(inpt, ""__qutip_qobj_interface__""):; inpt_data = inpt.__qutip_qobj_interface__(copy=copy). inpt = inpt_data['matrix']; dims = inpt_data['dims']; copy = False. obj = cls.__new__(cls, inpt, dims, shape, type, isherm, copy, fast,; superrep, isunitary); obj.__init__(inpt, dims, shape, type, isherm, copy, fast,; superrep, isunitary); return obj. class Qobj(object, metaclass=QobjMetaclass):; ...; ```; I'm quite sure this implementation can be improved, however. On the NetKet side, the implementation is very simple. At the moment we only support operators from H->H.; ```python; class AbstractOperator:; ... ; def __qutip_qobj_interface__(self, dims, copy=True):; return {'matrix': stacked_rows_to_stacked_cols(self.hilbert, self.to_sparse()),; 'dims': [list(self.hilbert.shape), list(self.hilbert.shape)]}; ```. This already is quite nice and allows for quick and simple interoperability. Some comments/questions:; - Qutip uses stacked columns (column major) ordering for the tensor products, as opposed to NumPy `kron` ordering that is stacked rows, right? ; - To signal that an object is a super-operator (Liouvillian) is it sufficient to pass a correctly constructed `dims` or I should also provide `s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-829966601:498,down,downstream,498,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-829966601,1,['down'],['downstream']
Availability,"I have a similar issue, but raising nsteps on options don't solve it. I tried to raise it until I got the error ""OverflowError: Python int too large to convert to C long"", which seems to happen for big numbers.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/806#issuecomment-878527034:106,error,error,106,https://qutip.org,https://github.com/qutip/qutip/issues/806#issuecomment-878527034,1,['error'],['error']
Availability,I have added the issue. I have spotted already some suggestions of what can be going wrong and note them down on the issue details!,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2167#issuecomment-1575060855:105,down,down,105,https://qutip.org,https://github.com/qutip/qutip/pull/2167#issuecomment-1575060855,1,['down'],['down']
Availability,"I have download other examples and they surprisingly work, so it is not the environment problem. The case code have its own problem, but I haven't found where it is.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/854#issuecomment-382609847:7,down,download,7,https://qutip.org,https://github.com/qutip/qutip/issues/854#issuecomment-382609847,1,['down'],['download']
Availability,"I have looked into this a bit. Everything compiles fine except the things that require complex.h. VS 15 has this library, and MS even highlights their compatibility with C99. However, others have found that the MS complex type is not compatible with C99. Therefore, one gets a typedef conversion error. Therefore we would have to write a conversion function. Another possibility is to use the Intel compilers. I believe one can get them for free if in academics.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/447#issuecomment-222156370:296,error,error,296,https://qutip.org,https://github.com/qutip/qutip/issues/447#issuecomment-222156370,1,['error'],['error']
Availability,"I have noticed some performance benefits with openblas but nothing noticeable for the sparse matrix routines. Multithreading gets some extra performance but the scaling is sublinear for sure. Just a couple of percent. From what I understand many sparse routines are limited by memory bandwidth. This is usually discussed in the context of the spmv. The biggest benefit when going to openblas is the removal of the umfpack out of memory errors. I dont think this has anything to do with the actual openblas functions but somewhere in the build process (suitesparse, metis, or something) the memory limitation is removed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/55#issuecomment-25365509:436,error,errors,436,https://qutip.org,https://github.com/qutip/qutip/issues/55#issuecomment-25365509,1,['error'],['errors']
Availability,"I have read that, but as what the output from H.groundstate(), it is showing it's a quantum object. So I don't understand why the error occurs",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/805#issuecomment-360855816:130,error,error,130,https://qutip.org,https://github.com/qutip/qutip/issues/805#issuecomment-360855816,1,['error'],['error']
Availability,"I have the same error in the current master, seems parallel can sometime freeze, not sure why or how common it is.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/934#issuecomment-579832967:16,error,error,16,https://qutip.org,https://github.com/qutip/qutip/pull/934#issuecomment-579832967,1,['error'],['error']
Availability,I have the same exact same NumPy errors in a fresh VirtualEnv with Python 3.6.1 and #731.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-317815407:33,error,errors,33,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-317815407,1,['error'],['errors']
Availability,"I have tried the simple two-level systems in http://qutip.org/docs/latest/guide/dynamics/dynamics-floquet.html and found an unexpected error, could you help to solve this problem #854 ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/772#issuecomment-382599620:135,error,error,135,https://qutip.org,https://github.com/qutip/qutip/issues/772#issuecomment-382599620,1,['error'],['error']
Availability,"I have two possible solutions for this, one is legit, and the other's a little hacky. 1. (legit) You might want to try installing Visual Studio Build Tools for C/C++, which you can do by going to Control Panel and modifying your VS install.; 2. (hacky) Try pip installing the right WHL package from here for your Python version (basically Wisows binaries for certain Python libs): [https://www.lfd.uci.edu/~gohlke/pythonlibs/#cython](url). Navigate to the specific download path and run `pip -m install <path-to-whl-file>`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1026#issuecomment-539875200:465,down,download,465,https://qutip.org,https://github.com/qutip/qutip/issues/1026#issuecomment-539875200,1,['down'],['download']
Availability,"I haven't run into that failure before, but I've only tried on Windows 8.1; and 10 so far. Do you have a console log for a python.exe crash?. On Fri, Oct 16, 2015 at 11:14 PM Alexander Pitchford <; notifications@github.com> wrote:. > I have tried on Win7x64 using anaconda.; > under Python2.7:; > I found qutip would install, and most things would work. However there; > were many warnings when running tests and occurrences of python.exe crashing; > under Python 3.5; > I found qutip would install. However nothing much would run, e.g. issues; > importing spmatfuncs when creating a Qobj; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/377#issuecomment-148701161.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148703467:24,failure,failure,24,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148703467,1,['failure'],['failure']
Availability,"I installed using conda-forge channel and installation worked without any problems, but when i run following jupyter notebook from example code on documentation: (http://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/control-grape-cnot.ipynb) ; it gives following error; ![grape](https://user-images.githubusercontent.com/34689025/36730450-652e8d18-1c02-11e8-83a8-8741d69f24d6.JPG). ![gr](https://user-images.githubusercontent.com/34689025/36730803-a21e9bcc-1c03-11e8-9a77-d333108df231.JPG)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/826#issuecomment-368867793:288,error,error,288,https://qutip.org,https://github.com/qutip/qutip/issues/826#issuecomment-368867793,1,['error'],['error']
Availability,"I installed visual studio 2015 from https://visualstudio.microsoft.com/vs/older-downloads/ , after that I simply followed instructions of qutip documentation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/826#issuecomment-480488981:80,down,downloads,80,https://qutip.org,https://github.com/qutip/qutip/issues/826#issuecomment-480488981,1,['down'],['downloads']
Availability,"I just ran locally:; `make latexpdf SPHINXOPTS=""-W --keep-going -T""`; And got `build succeeded` message.; The error on the project pipeline shows:; `Unknown interpreted text role ""cls"".` for the `me_solver`. Do you have an idea of why could this be happening?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2167#issuecomment-1567334034:110,error,error,110,https://qutip.org,https://github.com/qutip/qutip/pull/2167#issuecomment-1567334034,1,['error'],['error']
Availability,"I know you've marked this as draft, but let me point out that you've not really aligned your `master` with ours after the merge (one of the reasons it's not a good idea to develop using `master`). You've merged in the changes from our branch, but really you needed to overwrite your local copy with ours; I squashed the previous PR down into just one commit to keep the commit log cleaner and easier to interpret. In this sort of triangular workflow where you're proposing PRs that might not be merged as-is, you need to treat our repository as the single source of truth - you should never change your `master` branch except by doing `git pull` to our repository, so you can't get out of sync. Since you've now developed on the top of an incorrect tip, it'll be a bit difficult for you to untangle if you're not very familiar with `git`. You _can_ do it with rebasing or cherry-picking techniques to keep what you've done, but in this particular case (and there's no way you could have known this), I was actually just about to publish PR #1490 that makes all these same changes in `test_metrics.py`, but also goes a lot further in rewriting the tests in a more pytest-y style. It might be better for you if you reset your repository to match ours exactly, and then start again using the proper branching structure for the superoperator and tensor tests you wanted to look at. Perhaps you could have a look at #1490 as well to see how I go about parametrising tests and organising everything to keep it tidy (not saying that my code is perfect by a long shot, and the concept of ""random"" tests is questionable overall, but it's what we've got at the moment). Remember as well that readibility is a big concern. Using an automated tool to enforce pep8 compliance often won't get you the best results - our real style requirement is that it's easy to read, so linebreaks should be in sensible places (that still abide by pep8).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1487#issuecomment-814998778:332,down,down,332,https://qutip.org,https://github.com/qutip/qutip/pull/1487#issuecomment-814998778,1,['down'],['down']
Availability,"I like your work very much!; Especially the additional option to stop the simulation when a certain accuracy of the observables is reached!. However, I have the problem that the option is not known with me. ; ` mcsolve() got an unexpected keyword argument 'target_tol'`.; Possibly there is just a problem with my merge. EDIT: Error found, the import classes changed to:; ```; from qutip.solver.mcsolve import mcsolve, McSolver; from qutip.solver.solver_base import Solver; from qutip.solver.options import SolverOptions; ```. Now all works fine, I would vote up for merging!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1710#issuecomment-974028874:326,Error,Error,326,https://qutip.org,https://github.com/qutip/qutip/pull/1710#issuecomment-974028874,1,['Error'],['Error']
Availability,"I looked at the failures and they seem to be in parts that are completely disconnected from logging. I have no idea why they aren't also in the main branch, but I'll investigate. Anyway, I agree with you, @jrjohansson, that the current implementation is not in keeping with the design of Python's logging package. At the time, it was a bit of a hack to try and make it fit as well as possible, but I think in retrospect that may have been misguided. Do you think the refactoring to more appropriately use Python logging would be a good 3.2.0 feature, or would you suggest that for ≥ 3.3? Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/379#issuecomment-147493646:16,failure,failures,16,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147493646,1,['failure'],['failures']
Availability,"I made a snipped with dummy arrays that reproduce the error. Is it enough?; ````; H=[]. timelist_Jump_op=[]; time=[]; for i in range(t):; H.append(Qobj(np.ones((2,2)))); list_Jump_op.append(Qobj(np.ones((2,2)))); time.append(0.5). estados_val=np.array([; [[ 0.4952317 +0.j , 0.35307695-0.22776115j],; [ 0.35307695+0.22776115j, 0.5047683 +0.j ]],. [[ 0.80942518+0.j , 0.14798043+0.36381018j],; [ 0.14798043-0.36381018j, 0.19057482+0.j ]],. [[ 0.74030166+0.j , -0.42252924+0.11715014j],; [-0.42252924-0.11715014j, 0.25969834+0.j ]],; [[ 0.76627252+0.j , 0.14479804+0.39765874j],; [ 0.14479804-0.39765874j, 0.23372748+0.j ]],; [[ 0.69965345+0.j , 0.4260361 -0.16920917j],; [ 0.4260361 +0.16920917j, 0.30034655+0.j ]],; [[ 0.80355468+0.j , 0.36706718-0.15204028j],; [ 0.36706718+0.15204028j, 0.19644532+0.j ]]]) . predictions=[mesolve(H,; Qobj(estados_val[i]),; time,list_Jump_op,options=Options(nsteps=1000000000)) for i in range(len(estados_val))]`. ```; `---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-26-ef5799d8412d> in <module>; 26 [ 0.36706718+0.15204028j, 0.19644532+0.j ]]]) ; 27 ; ---> 28 predictions=[mesolve(H,; 29 Qobj(estados_val[i]),; 30 time,list_Jump_op,options=Options(nsteps=1000000000)) for i in range(len(estados_val))]. <ipython-input-26-ef5799d8412d> in <listcomp>(.0); 26 [ 0.36706718+0.15204028j, 0.19644532+0.j ]]]) ; 27 ; ---> 28 predictions=[mesolve(H,; 29 Qobj(estados_val[i]),; 30 time,list_Jump_op,options=Options(nsteps=1000000000)) for i in range(len(estados_val))]. ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 270 func(0., v, *ode_args) + v; 271 ; --> 272 res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, options,; 273 progress_bar, dims=rho0.dims); 274 res.num_collapse = len(c_ops). ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in _generic_ode_solve(func, ode",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605#issuecomment-879127553:54,error,error,54,https://qutip.org,https://github.com/qutip/qutip/issues/1605#issuecomment-879127553,1,['error'],['error']
Availability,"I made the change for immutable `Coefficient` and `_Elements`. ; `replace` is about 200ns slower than the previous inplace `arguments`.; With `_Elements` 'immutable', `QobjEvo.copy`'s default is to do a shallow copy of the `elements` list. ; The `_BaseElement._call` is not returning the (data, coeff) pair, but stores it to save on time to create of a python object.; This it may not safe with threading: if 2 copies of a `QobjEvo` are called at the same time with different `t`, both could return the same result. I am not sure how good is the GIL in this case.; I don't expect it to be an issue, in the rare case threading would be used, a deepcopy is available with `QobjEvo.copy(deepcopy=True)`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1481#issuecomment-817018631:655,avail,available,655,https://qutip.org,https://github.com/qutip/qutip/pull/1481#issuecomment-817018631,1,['avail'],['available']
Availability,I met the same errors as you described.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975#issuecomment-536370037:15,error,errors,15,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536370037,1,['error'],['errors']
Availability,"I might try and have a look tonight (UK time), if I have time - I've wanted to break up the large `propagator` monolith into smaller components for quite a while. ---. About numerical precision: if you want to try increasing the precision of the integrators, try passing `options=qutip.Options(nsteps=1_000_000, atol=1e-12, rtol=1e-10)` to `propagator`. `atol` and `rtol` are absolute and relative tolerances respectively, and `nsteps` is the number of subdivisions the integrator is _allowed_ to take (if it reaches its tolerance goals, it won't take all of them). You'll find that `atol` and `rtol` will have only a loose relation to the tolerance of your fidelity value, because there's a _lot_ of floating-point operations between those points in which the errors compound, and there's a hard limit on the tolerances the integrator can achieve, so you might not be able to get a perfect answer. The fidelity calculation involves finding the square root of a density operator, so that's another large possible source of error. About times: if you only care about the state at the last time, setting `tlist = np.linspace(0, x, 201)` is quite inefficient. Instead, set `tlist = [0, x]`, and then pass `options=qutip.Options(nsteps=<very very big integer>)`. It's more efficient because it doesn't need to achieve tolerance goals and construct/store `Qobj` instances at every intermediate timestep. Temporary workaround: this is _very_ temporary, and generally a bad idea in QuTiP, but you can ""flatten"" all your operators into a single space for now, while we implement a fix. To do that:; ```python; # initial setup; H = qutip.tensor(...); c_ops = [qutip.tensor(...)]. original_dimensions = H.dims.copy(); new_dimensions = list(H.shape). H.dims = new_dimensions; for c_op in c_ops:; c_op.dims = new_dimensions. outputs = qutip.propagator(H, times, c_ops=c_ops); for op in outputs:; # the ops are superoperators, so have expanded dimensions; op.dims = [original_dimensions, original_dimensions]; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1585#issuecomment-865903199:1636,toler,tolerance,1636,https://qutip.org,https://github.com/qutip/qutip/issues/1585#issuecomment-865903199,1,['toler'],['tolerance']
Availability,"I missed `qstate` for some reason, thanks for pointing to it. Anyway, I needed something more general. Anyway, I was thinking how to combine different notations. . That is, for qubits, people use:; - `u` / `d` for up and down (as it is is `qstate`),; - `g` / `e` for ground and excited,; - `H` / `V` for horizontal and vertical (polarizations),. and, of course, numbers. I was thinking about making a dictionary, but I am not sure if it is going to help or not (e.g. there may be intersecting conventions). But it would be nice to write e.g.:. ```; ket(""e00"") + ket(""g01"") + ket(""g10""); ```. I will clean things and do a PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/64#issuecomment-28288241:221,down,down,221,https://qutip.org,https://github.com/qutip/qutip/issues/64#issuecomment-28288241,1,['down'],['down']
Availability,"I moved ```limits bar_style color_limits color_style```. The number of arguments is 13 > 10, but they should not be in ```options```. Also, I raised an error when users pass unexpected arguments to ```bar_style color_style```.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2193#issuecomment-1630117889:152,error,error,152,https://qutip.org,https://github.com/qutip/qutip/pull/2193#issuecomment-1630117889,1,['error'],['error']
Availability,I never saw the test failure in `test_zheevr`. That's odd - I thought we'd merged a change that fixed that. I certainly haven't seen one for a very long time personally - it's all `test_diag_liou_mult`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1446#issuecomment-805888167:21,failure,failure,21,https://qutip.org,https://github.com/qutip/qutip/pull/1446#issuecomment-805888167,1,['failure'],['failure']
Availability,I notice that I am also getting the same error on the travis build in the latest branch on my fork. An error that I do not get on my local machine. I will try a fresh conda env later and see if I can reproduce it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/379#issuecomment-148046579:41,error,error,41,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-148046579,2,['error'],['error']
Availability,"I noticed this recently while addressing an issue for which the test of `average_gate_fidelity` was failing when the random supermatrix included an odd dimensional object. I had your same impression but was unsure of the proper function. I am pinging @BoxiLi and @quantshah to keep an eye on this, if they are knowledgeable, in the future months. Thank you @lucainnocenti, and if you think that your fix is fine, please open directly a pull request.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/869#issuecomment-497300028:243,ping,pinging,243,https://qutip.org,https://github.com/qutip/qutip/issues/869#issuecomment-497300028,1,['ping'],['pinging']
Availability,"I now see SNOT and Toffoli gates as available in the gate resolvers, but I don't use the code so can't make a final judgment. I'll leave to @BoxiLi to close if appropriate now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/614#issuecomment-809431920:36,avail,available,36,https://qutip.org,https://github.com/qutip/qutip/issues/614#issuecomment-809431920,1,['avail'],['available']
Availability,"I observed something strange after your update. On windows, with Jupyter Notebook, the kernel crashes every time when I try to plot the circuit. No error message. Does it run normally on your OS?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194#issuecomment-605285010:148,error,error,148,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605285010,1,['error'],['error']
Availability,"I often get these kind of error when installing manually. If you install Qutip with openmp once, the next time you install it without, you need to clean the old version or you get similar error. I never got this from a clean install. . Setting the `has_openmp` flag at installation is better, but I would let the precompiler set it instead of setup.py.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1334#issuecomment-670227091:26,error,error,26,https://qutip.org,https://github.com/qutip/qutip/issues/1334#issuecomment-670227091,2,['error'],['error']
Availability,I put some more download and versioning badges into the README in #1511. If you're happy Nathan (@nathanshammah) we can close this issue now?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/983#issuecomment-829132520:16,down,download,16,https://qutip.org,https://github.com/qutip/qutip/issues/983#issuecomment-829132520,1,['down'],['download']
Availability,"I quite like this. I find the operator-to-vector-vector-to-operator casting too cumbersome. I also think its OK notation wise, since we typically use parenthesis when superoperators act on operators. Another option however would be to add this functionality to `Qobj.__mul__`, such that `Qobj.__mul__` is interpreted as 'acting on' if an operator is multiplied from the left on a state, or a superoperator from the left on an operator. Leaving out the parenthesis is also pretty standard notation. For the `Qobj.__call__` solution, I don't like so much that ""A(B)"" is interpreted as ""A B A.dag()"" when A and B are both operators though. This is not standard notation anywhere that I'm familiar with and I would personally be very confused by getting this result. If anything I would have expected an error or possibly the product ""AB"".",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/475#issuecomment-221078645:800,error,error,800,https://qutip.org,https://github.com/qutip/qutip/issues/475#issuecomment-221078645,1,['error'],['error']
Availability,"I ran the full tests on Windows 10. All passed except 1. Trace as follows:; ```; ======================================================================; FAIL: Monte-carlo: Collapse terms constant (str format); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Anaconda2\envs\q4_2-dev-py36\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Anaconda2\envs\q4_2-dev-py36\lib\site-packages\qutip-4.3.0.dev0+6915aee-py3.6-win-amd64.egg\qutip\tests\test_mcsolve.py"", line 326, in test_MCSimpleConstStr; assert_equal(avg_diff < mc_error, True); File ""C:\Anaconda2\envs\q4_2-dev-py36\lib\site-packages\numpy\testing\utils.py"", line 416, in assert_equal; raise AssertionError(msg); AssertionError:; Items are not equal:; ACTUAL: False; DESIRED: True; -------------------- >> begin captured stdout << ---------------------; 10.0%. Run time: 8.27s. Est. time left: 00:00:01:14; 20.0%. Run time: 10.17s. Est. time left: 00:00:00:40; 30.0%. Run time: 12.19s. Est. time left: 00:00:00:28; 40.0%. Run time: 14.11s. Est. time left: 00:00:00:21; 50.0%. Run time: 16.05s. Est. time left: 00:00:00:16; 60.0%. Run time: 18.03s. Est. time left: 00:00:00:12; 70.0%. Run time: 19.99s. Est. time left: 00:00:00:08; 80.0%. Run time: 21.94s. Est. time left: 00:00:00:05; 90.0%. Run time: 23.94s. Est. time left: 00:00:00:02; 100.0%. Run time: 25.87s. Est. time left: 00:00:00:00; Total run time: 25.99s. --------------------- >> end captured stdout << ----------------------. ----------------------------------------------------------------------; Ran 488 tests in 2700.806s. FAILED (SKIP=9, failures=1); >>>; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/729#issuecomment-317797935:1669,failure,failures,1669,https://qutip.org,https://github.com/qutip/qutip/pull/729#issuecomment-317797935,1,['failure'],['failures']
Availability,"I re-launched the Travis tests on all platforms. They pass for all besides Mac OS (similar error as for other PR). With `python setup.py install`, with `install` instead of `develop`, things seem to work. What it is unclear to me is why it reads that the QuTiP Version is `4.4.0.dev0+1a639d7a`, when I could not find this hash in here (or maybe I am confused). Now, after some tries with install and develop, I am on that version of qutip-dev. . To begin with, I am running the contents of the [development notebooks](https://github.com/qutip/qutip-notebooks/tree/master/development). Some comments below are relevant to the PR of the notebooks, https://github.com/qutip/qutip-notebooks/pull/71. * `development-qobjevo.ipynb`: Runs fine. ; * `development-qobjevo-adv.ipynb`: Runs fine. ; * `development-qobjevo-timing.ipynb`: Runs fine. * The notebook [development-qobjevo.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo.ipynb) could be re-adapted to be among other tutorials, with some title like ""Time-dependent `Qobj` with `QobjEvo`"". There could be much more commentary of the basics of `QobjEvo`. Some could be copy-pasted from the introductory comment in `qobjevo.py`. You are the best person to explain, with basic examples, of increasing complexity, what QobjEvo can do. Possibly taking a known physics problem, e.g., the damped harmonic oscillator with `mesolve`, could help the user. . * In [development-qobjevo.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo.ipynb), block 22 has the first check set to False, but this is both in the notebook I run locally and in the one online. So probably that's the expected behaviour. . In [development-qobjevo-adv.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo-adv.ipynb), block 20 has a comment that is an unfinished sentence. In general, I think that examples could be much more descriptive, with comments, about the",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/969#issuecomment-489565751:91,error,error,91,https://qutip.org,https://github.com/qutip/qutip/pull/969#issuecomment-489565751,1,['error'],['error']
Availability,"I reactivated MKL, updated numpy to 1.22.0 and when running `import qutip.testing` I get the following error:. `Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\ProgramData\Miniconda3\lib\site-packages\qutip\__init__.py"", line 73, in <module>; (_blas_info() == ""OPENBLAS"" and platform.system() == 'Darwin'); File ""C:\ProgramData\Miniconda3\lib\site-packages\qutip\utilities.py"", line 430, in _blas_info; blas_info = config.blas_opt_info; AttributeError: module 'numpy.__config__' has no attribute 'blas_opt_info'`. Then as I wanted to provide my config I typed `import qutip` but it yielded the exact same error so I reverted it back to 1.20.3. QuTiP Version: 4.6.2; Numpy Version: 1.20.3; Scipy Version: 1.7.1; Cython Version: 0.29.25; Matplotlib Version: 3.5.0; Python Version: 3.9.5; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\ProgramData\Miniconda3\lib\site-packages\qutip. Why is it on OPENBLAS now?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750#issuecomment-1005876725:103,error,error,103,https://qutip.org,https://github.com/qutip/qutip/issues/1750#issuecomment-1005876725,2,['error'],['error']
Availability,"I realised I never replied to this. I suggested `2*rtol` in this case because the error propagation in this case would guarantee that this is always sufficient. For other tests, we can always design the test so that it's calculable what the error term should be. I'd say it's generally a good idea to have the tests be as tight as we can possibly make them without risking false-negatives on the results, because otherwise we're not properly testing that the parameters do what they say. Regardless, that test failure isn't due to any of my PRs - it's a pre-existing problem that we happened to get unlucky on this time round. It'll get fixed when I modify `test_mesolve.py`. Can we review this PR to get the ball rolling on getting all of the test refactoring considered?. Possible reviewers: @Ericgig, @BoxiLi, @nathanshammah",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249#issuecomment-628265133:82,error,error,82,https://qutip.org,https://github.com/qutip/qutip/pull/1249#issuecomment-628265133,3,"['error', 'failure']","['error', 'failure']"
Availability,"I really can't see how the changes here could be causing the Travis errors. ; I restarted once, but got the same errors in all three tests; Any ideas?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/379#issuecomment-147449765:68,error,errors,68,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147449765,2,['error'],['errors']
Availability,"I report local tests failing on my MacOS 10.13.6 by running qutip.testing.run(). Tests fail for python 3.7 and 3.6 environments, if QuTiP 4.4. is installed in develop mode (openmp = True). ; Tests fail also for QuTiP 4.3.1 installed with conda. . ### py36; Broken test for python 3.6 with: (1) QuTiP 4.4-dev, with openmp =True and (2) conda install qutip, QuTiP 4.3.1: ; Error Message below: ; ``` ; Metrics: Trace dist. & Fidelity mixed/pure inequality ... ok ; Metrics: Check avg gate fidelities for random ... ; python(35852,0x7fff9757f380) malloc: *** error for object 0x7fe189168a10: incorrect checksum for freed object - object was probably modified after being freed. *** ; set a breakpoint in malloc_error_break to debug ; Abort trap: 6 ---------------------------------------------- ; ``` . Building the dev environment: ; ``` conda create --name qutip-dev-44-py36 ; source activate qutip-dev-44-py36 ; conda install python=3.6 cython numpy scipy nose jupyter matplotlib; python setup.py develop --with-openmp; ``` . ### py37; Broken test for python 3.7 with: (1) QuTiP 4.4-dev, with openmp =True and (2) conda install qutip, QuTiP 4.3.1. Error Message below: ; ``` ; qutip.tests.test_qobj.test_expect_exception ... ok Qobj data ... ok Qobj type ... ok Qobj Hermicity ... ok ; Qobj unitarity ... ok ; Qobj shape ... ok ; Qobj: multiplication w/ non-square qobj.dims ... ok ; Qobj addition ... ok ; Qobj subtraction ... ok ; Qobj multiplication ... ok ; Qobj division ... ok ; Qobj power ... ; python(35379,0x7fff9757f380) malloc: *** error for object 0x7fbf1089fa90: incorrect checksum for freed object - object was probably modified after being freed. *** ; set a breakpoint in malloc_error_break to debug ; Abort trap: 6 ; ``` . Building the dev environment: ; ``` conda create --name qutip-dev-44-py37 ; source activate qutip-dev-44-py37 ; conda install python=3.7 cython numpy scipy nose jupyter matplotlib; python setup.py develop --with-openmp```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-473772867:371,Error,Error,371,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-473772867,4,"['Error', 'error']","['Error', 'error']"
Availability,"I see it as `v4` being wrong instead of `dev.major`. It should not truncate small values with an hidden tolerance.; Here it's the sparse matrix operations which drop small values to stay sparse that cause the change. In v5, these operations are done using dense matrices. However this should have been the case for a long time... The test `p != 0` is always risky with floating number, we should use `p >= tol` with a documented tolerance instead. The `atol` from core options would work here, but we could also have the tolerance as an optional input to measurement functions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2029#issuecomment-1336417866:104,toler,tolerance,104,https://qutip.org,https://github.com/qutip/qutip/issues/2029#issuecomment-1336417866,3,['toler'],['tolerance']
Availability,"I see the `Nan`'s...; Scipy's `norm` call numpy's `norm` which call `svd` with `compute_uv=False` and it return junk...:. ```; np.linalg.svd(nan_matrix, compute_uv=False); array([ inf, inf, 1.07311390e+000, 9.83440402e-001,; 9.42395122e-001, 9.27989857e-001, 8.23177182e-001, 2.38050872e-022,; 6.40149943e-032, 5.64518572e-033, 9.14729223e-045, 2.72704923e-049,; 1.56401558e-063, 4.83650926e-068, 6.39334574e-081, 2.83836536e-092,; 8.27175428e-096, 1.73661126e-097, 2.01091260e-114, 1.30856687e-123,; 2.06455678e-127, 4.92744107e-155, 5.08952541e-159, 1.74118770e-186,; 9.44136765e-227, 6.23313780e-246, 0.00000000e+000, 0.00000000e+000,; 0.00000000e+000, 0.00000000e+000, 0.00000000e+000, 0.00000000e+000,; 0.00000000e+000, 0.00000000e+000, 0.00000000e+000, 0.00000000e+000,; 0.00000000e+000, 0.00000000e+000, 0.00000000e+000, 0.00000000e+000,; 0.00000000e+000, 0.00000000e+000, 0.00000000e+000, 0.00000000e+000,; 0.00000000e+000, 0.00000000e+000, 0.00000000e+000, 0.00000000e+000,; 0.00000000e+000, 0.00000000e+000, 0.00000000e+000, 0.00000000e+000,; 0.00000000e+000, 0.00000000e+000, 0.00000000e+000, 0.00000000e+000,; 0.00000000e+000, 0.00000000e+000, 0.00000000e+000, 0.00000000e+000,; 0.00000000e+000, 0.00000000e+000, 0.00000000e+000, 0.00000000e+000,; 0.00000000e+000, 0.00000000e+000, 0.00000000e+000, nan,; nan, nan, nan, nan,; nan, nan, nan, nan,; nan, nan, nan, nan,; nan, nan, nan, nan,; nan, nan, nan, nan,; nan, nan, nan, nan,; nan, nan, nan, nan,; nan, nan, nan, 0.00000000e+000]); ```. Put with `compute_uv=True` (default) it work fine... I guess the best we can do is report to numpy... Do you want to do it?. Not computing the `uv` is 10x faster in case everything goes well and these error seem rare, so for now I would use a fall back:; ```; norm = np.linalg.norm(matrix, 'nuc'); if np.isnan(norm):; # Bug in `numpy svd(..., compute_uv=False)` used by `norm(..., 'nuc')`; norm = np.linalg.svd(nan_matrix)[1].sum(); return norm; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1635#issuecomment-930347069:1704,error,error,1704,https://qutip.org,https://github.com/qutip/qutip/pull/1635#issuecomment-930347069,1,['error'],['error']
Availability,"I see there is an error when building the pdf but don't understand why. Running the `make pdflatex` command works for me locally. Also the html page is rendered as expected:. <img width=""422"" alt=""Screenshot 2023-05-29 at 11 56 07"" src=""https://github.com/qutip/qutip/assets/57567043/ebbd88a8-df2e-4567-a254-53031d6d7e13"">",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2167#issuecomment-1566883813:18,error,error,18,https://qutip.org,https://github.com/qutip/qutip/pull/2167#issuecomment-1566883813,1,['error'],['error']
Availability,"I see this issue as well but with a different test (error came up with ptrace test). I think this is a larger py3.7 issue, some comments have come up in the mailing list too. In a py3.7 env I see malloc errors occasionally with the es solver in correlation_2op_1t calls as used here: https://github.com/gsteele13/gary-exploring-qutip/blob/master/Correlations.ipynb. QuTiP Version: 4.4.1; Numpy Version: 1.17.2; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.1; Python Version: 3.7.4; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1120#issuecomment-551924373:52,error,error,52,https://qutip.org,https://github.com/qutip/qutip/issues/1120#issuecomment-551924373,2,['error'],"['error', 'errors']"
Availability,"I started patching documentation:; - Updated import from moved files (`from qutip.states` --> `from qutip.core.states`).; - Changes `Options` to `SolverOptions`.; - Commented some calls to function and method that do not exist anymore (`QobjEvo.to_list`). There are a lots of warning when building documentattion, but actual error seems to be limited to qip and HEOM changes that where not properly merged.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1850#issuecomment-1095498766:325,error,error,325,https://qutip.org,https://github.com/qutip/qutip/pull/1850#issuecomment-1095498766,1,['error'],['error']
Availability,"I think I have tracked down the problem to this issue https://github.com/cvxgrp/cvxpy/issues/1159, we could patch it using dense matrices instead of sparse ones.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1422#issuecomment-794422644:23,down,down,23,https://qutip.org,https://github.com/qutip/qutip/issues/1422#issuecomment-794422644,1,['down'],['down']
Availability,I think I pinned down the issue for local tests on Mac 10.13.6 (High Sierra) with Python 3.7 with the current qutip 4.4 dev version to the line; ```; assert_(0 <= average_gate_fidelity(rand_super()) <= 1); ```; in test_metrics.py.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-496365615:17,down,down,17,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-496365615,1,['down'],['down']
Availability,"I think `hypothesis` is the best method here in the long term, but it will most likely have to be a long-term goal. I think the main pro in favour of it is that it actually is making an attempt to remove randomness; it's attempting to comprehensively test a spanning set of input parameters, rather than just Monte-Carlo'ing our way through and hoping. There's a couple of points which make it difficult to implement:. 1. QuTiP can be quite fragile with respect to unexpected input formats, particularly in older parts of the code.; 2. Various components are only accurate up to some tolerance, and the error propagation to work out how that corresponds to useful measurable quantities can be rather tricky. Those are certainly both solvable problems, and point 1 in particular is just general improvement of usability. The second point is about designing the tests well, which again is certainly doable, but will take a while (it takes long enough just to refactor them, let alone a total rewrite of large chunks of them!).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1268#issuecomment-629272663:584,toler,tolerance,584,https://qutip.org,https://github.com/qutip/qutip/issues/1268#issuecomment-629272663,2,"['error', 'toler']","['error', 'tolerance']"
Availability,"I think i found the origin of the problem, but i don't know how to fix it correctly. I noticed that in the _essolve.py_ file (line 149) there is this instruction; ```; # check if state is below error threshold; if abs(rho0.full()).sum() < 1e-10 + 1e-24:; # enforce zero operator; return eseries(qzero(rho0.dims[0])); ```; which ( i think) should return zero eseries if the sum of all components is less than that value. However, if i increase the limit from 1e-10 to 1e-05 it work, that is it returns a zero eseries.; In the original case it doesn't enter into this _if_ and than returns an _es_ series which es.ampl[0] returns that error. ### Edit:; I replaced the `return estidy(out)` in line 205 of the same file with `return out`, and it seems to work!. ### Edit 2:; More precisely the problem is on the tolerance of tidy. I modified lines 315-316 of _eseries.py_ file with; ```; rate_tol = 1e-10; ampl_tol = 1e-13; ```; and now (with `return estidy(out)` as in origin), it's working.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1388#issuecomment-735377831:194,error,error,194,https://qutip.org,https://github.com/qutip/qutip/issues/1388#issuecomment-735377831,3,"['error', 'toler']","['error', 'tolerance']"
Availability,"I think is is one of the errors that occurs when running qutip from within; the installation director.; Just cd to your home directory and all should be fine. Alex. On 8 May 2018 at 13:57, Shahnawaz Ahmed <notifications@github.com> wrote:. > Hi, could you please tell us how you installed QuTiP and which python are; > you using? Just type the following in the terminal; >; > which python; >; > To check how QuTiP was installed (if on Linux or Mac):; >; > pip freeze | grep ""qutip""; >; > If on windows, download Anaconda and install QuTiP from conda-forge with; >; > conda install -c conda-forge qutip; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/858#issuecomment-387393174>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AIxX7clOzLboC5wUH12kiohPXZ6DnmDgks5twZY7gaJpZM4T2T0k>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387490007:25,error,errors,25,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387490007,2,"['down', 'error']","['download', 'errors']"
Availability,"I think it's quite important to understand why this happened. Previously we reliably had an exactly correct result, and now we don't. This particular check for `p != 0` of a float is I think okay because it's there specially to avoid division by exactly zero. I can think of at least two plausible scenarios:. 1. The issue was caused by the removal of auto_tidyup, in which case I think either a setting like this with an explicit check in either the measurement functions or the simulator are good solutions (although it should be possible to override the setting on a per-call basis, just like with atol). 2. The issue was caused by the removal of the data layer mathematical operations, and in particular, by the replacement of `data / value` by `data.mul(data, 1 / value)`, in which case I think the solution is to add a `div` operation to the data classes so that we don't lose this accuracy.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1656#issuecomment-917229773:76,reliab,reliably,76,https://qutip.org,https://github.com/qutip/qutip/pull/1656#issuecomment-917229773,1,['reliab'],['reliably']
Availability,"I think that `qutip.testing` and the tests in CI are different. The former are in that file, the latter look at the instructions from [`.travis.yml`](https://github.com/qutip/qutip/blob/master/.travis.yml), which basically call `python setup.py install` (or `test`). Also looking at the Travis CI reports, it seems that they work fine. Locally, I'm getting tests to fail on my machine, with malloc or abort trap 6 errors every other time, although some time they pass (hence I opened #1160). It may be that they fail on my machine due to some mess with the gcc compiler.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1158#issuecomment-576002319:414,error,errors,414,https://qutip.org,https://github.com/qutip/qutip/issues/1158#issuecomment-576002319,1,['error'],['errors']
Availability,"I think that makes sense. Tolerances of 1e-12 are a bit ridiculous to insist upon for a trace norm, since that scales with the dimension.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/435#issuecomment-185802054:26,Toler,Tolerances,26,https://qutip.org,https://github.com/qutip/qutip/pull/435#issuecomment-185802054,1,['Toler'],['Tolerances']
Availability,"I think that more slower, but more reliable, Travis CI tests, would be a definite benefit",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/359#issuecomment-130258998:35,reliab,reliable,35,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130258998,1,['reliab'],['reliable']
Availability,"I think that the rendering is executed through the Visual Studio extension called ""[Jupyter Notebook Renderers](https://marketplace.visualstudio.com/items?itemName=ms-toolsai.jupyter-renderers)"". I apparently solved this issue by simply downgrading the version of this extension, since I read in the changelog of the latest version ""Removed rendering of text/latex in favor of built-in support."". Thus the problem was in the Visual Studio part, however it still remain opened in the case one decide to install the latest version of this extension. Thank you.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1809#issuecomment-1043028427:237,down,downgrading,237,https://qutip.org,https://github.com/qutip/qutip/issues/1809#issuecomment-1043028427,1,['down'],['downgrading']
Availability,"I think that this is the correct solution though, so big bonus points for hunting this down! At work, we have no use for OSX, and would love py3 on win, so I can fiddle around to get something working. Having two separate sources may be the route we need to go. It wouldn't be the end of the world, but should be avoided unless absolutely necessary.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/647#issuecomment-279727419:87,down,down,87,https://qutip.org,https://github.com/qutip/qutip/issues/647#issuecomment-279727419,1,['down'],['down']
Availability,"I think that typically you don't gain much by using more processes than the number of cores, even if hyperthreading is available. In some cases you even get a performance degradation, so that's the reason why we dont default to cores*threads. However if you want to you can set the num_cpu flag explicitly.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/260#issuecomment-63587960:119,avail,available,119,https://qutip.org,https://github.com/qutip/qutip/issues/260#issuecomment-63587960,1,['avail'],['available']
Availability,"I think the current behaviour is fine, it just depends on the way the kronecker product is done in QuTiP. Pinging @nwlambert.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1285#issuecomment-643272712:106,Ping,Pinging,106,https://qutip.org,https://github.com/qutip/qutip/issues/1285#issuecomment-643272712,1,['Ping'],['Pinging']
Availability,"I think the module should really be `qutip.testing` (or `qutip.test` if the name's already taken), not `qutip.core.data.testing`, if you're going to add one. It's very likely to be the case in the future (if it isn't already) that you'll need additional dependencies to define the tests, and you don't want to force _all_ runtime users to have them to install QuTiP. If you put the package in a separate top-level module, it's _far_ easier to separate out all the code, and have `qutip/__init__.py` not import `qutip.testing`, so things won't break. Also, tests generally need to work with a fully imported version of the module. If we start putting testing infrastructure in the core, we're going to encode a whole lot of cyclical dependencies right away, or end up with `testing` modules scattered all across the codebase, for no real gain. For discovery: that would only happen during test generation, which comes after importing the modules and defining the classes, so you'd still be able to define tolerances and influence how the tests ran. The problem with _not_ having discovery is that it becomes very easy to forget to test a function, and with so much of the machinery automated, it's also easy to forget it when reviewing a PR. That's particularly true once you have external contributors writing these sorts of things - we have it in Qiskit, where people add things to our ""standard equivalence library"", and new contributors and new reviewers don't know where all the different tests are, so our discovery tests have helped catch bugs. That happens even with super experienced team members. I'd argue that code coverage metrics are possibly a better way of detecting missing tests - that fails safe if you add broken code and forget to test it, whereas having to specify the tests explicitly means you can accidentally add broken code to a dispatcher and not know, if you forgot to add the test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1723#issuecomment-981562735:1004,toler,tolerances,1004,https://qutip.org,https://github.com/qutip/qutip/pull/1723#issuecomment-981562735,1,['toler'],['tolerances']
Availability,"I think the test ist faulty. The spin matrices in test_operators.py, to which the output of jmat is compared, are missing the same sign. Should I fix this and prepare a new pull request?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/565#issuecomment-264087183:21,fault,faulty,21,https://qutip.org,https://github.com/qutip/qutip/pull/565#issuecomment-264087183,1,['fault'],['faulty']
Availability,"I think there are two separate issues here. . As for the fortran module, it's true that the it adds a lot of build complexity, but most users do not need it and can easily install qutip without it. There is a case for removing it from qutip and put it in a separate module, but think this should be low priority, since it would require non-negligible amount work, would break backwards compatibility (it should bump next release to 4.0), and does not really provide any new features (other than a less complex code base). There might users who rely on it and for them it might be annoying if we remove it. So I would vote for postponing it until there are very strong arguments for removing it. As for the topic of this issue, I think that qutip should follow the lead of NumPy, even if it breaks backwards compatibility in the configuration methods, so that users that are familiar with NumPy and related projects does not have any surprises when using qutip. Also, if I understand correctly, this would mostly change how one configure and build against blas libraries such as openblas? Then I guess it would not effect the typical user that just download and install the package with standard configuration (no site.cfg file), and it should be safe the follow the advice of the OP.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/392#issuecomment-155058653:1148,down,download,1148,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-155058653,1,['down'],['download']
Availability,"I think this is a good addition. Whether it's accepted comes down to how much complexity it adds to the Bloch sphere class, I suspect. Perhaps open the PR and let's see what the code changes look like?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1683#issuecomment-933398132:61,down,down,61,https://qutip.org,https://github.com/qutip/qutip/issues/1683#issuecomment-933398132,1,['down'],['down']
Availability,"I think we finally have a concrete error and it's rather mystifying to me how it can happen:; ```; E = spla.expm(A.toarray()); if np.isnan(E).any():; print(""A:"", A); print(""A data:"", A.indices, A.indptr, A.shape); print(""A toarray:"", A.toarray()); print(""E:"", E); > raise RuntimeError(""NaNs generated by sp_expm.""); E RuntimeError: NaNs generated by sp_expm. qutip/sparse.py:408: RuntimeError; ----------------------------- Captured stdout call -----------------------------; A: (0, 1)	(-0.5+0j); (1, 0)	(0.5+0j); (1, 2)	(-0.7071067811865476+0j); (2, 1)	(0.7071067811865476+0j); (2, 3)	(-0.8660254037844386+0j); (3, 2)	(0.8660254037844386+0j); (3, 4)	(-1+0j); (4, 3)	(1+0j); A data: [1 0 2 1 3 2 4 3] [0 1 3 5 7 8] (5, 5); A toarray: [[ 0. +0.j -0.5 +0.j 0. +0.j 0. +0.j; 0. +0.j]; [ 0.5 +0.j 0. +0.j -0.70710678+0.j 0. +0.j; 0. +0.j]; [ 0. +0.j 0.70710678+0.j 0. +0.j -0.8660254 +0.j; 0. +0.j]; [ 0. +0.j 0. +0.j 0.8660254 +0.j 0. +0.j; -1. +0.j]; [ 0. +0.j 0. +0.j 0. +0.j 1. +0.j; 0. +0.j]]; E: [[nan+nanj nan+nanj nan+nanj nan+nanj nan+nanj]; [nan+nanj nan+nanj nan+nanj nan+nanj nan+nanj]; [nan+nanj nan+nanj nan+nanj nan+nanj nan+nanj]; [nan+nanj nan+nanj nan+nanj nan+nanj nan+nanj]; [nan+nanj nan+nanj nan+nanj nan+nanj nan+nanj]]; ```; See https://github.com/qutip/qutip/runs/3966808806?check_suite_focus=true#step:6:1646",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1694#issuecomment-948841475:35,error,error,35,https://qutip.org,https://github.com/qutip/qutip/pull/1694#issuecomment-948841475,1,['error'],['error']
Availability,"I thought that it was highly recommended to use the same compiler for; extensions that is used for python itself? Is this just an ideal rather; than a necessity?. Also, it would be ideal to try and use a compiler that is available on the; conda-forge. Not sure whether the Intel one is or not. On 28 May 2016 at 04:54, Paul Nation notifications@github.com wrote:. > Thanks for pointing this out. I did not know that this was the case.; > Ironically the complex numbers are done this way to support compilers (VS; > in particular) that do not obey C99. The suggested patch is a bit difficult; > to implement as the runtime generated Cython code is compiled via pyximport; > and getting in there to change the c files would be a bit tricky. However,; > I know that the Intel compiler has no problem with the Cython code (at; > least on Linux). So perhaps that is the way to go for Python 3.5.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > https://github.com/qutip/qutip/issues/447#issuecomment-222288358, or mute; > the thread; > https://github.com/notifications/unsubscribe/AIxX7bilAvaPFQKZx8CtnoG8p0DEpaQ_ks5qF7xvgaJpZM4HpJf1; > .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/447#issuecomment-222801414:221,avail,available,221,https://qutip.org,https://github.com/qutip/qutip/issues/447#issuecomment-222801414,1,['avail'],['available']
Availability,"I thought we had resolved the installation issues with the Fortran side by making the MC solver a optional (default to False).; I am not that I have fully digested everything in this thread, but @zerothi seems confident that there is just some small change that we need to improve integration with the latest Numpy. Its not clear to me what are the risks or other downsides.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/392#issuecomment-155040632:364,down,downsides,364,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-155040632,1,['down'],['downsides']
Availability,"I tried it locally and `show` print the figure twice, whether you provide a figure or not. `render` itself print the picture so having it in `show` make `display` redundant. Otherwise, it work fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1619#issuecomment-988068295:163,redundant,redundant,163,https://qutip.org,https://github.com/qutip/qutip/pull/1619#issuecomment-988068295,1,['redundant'],['redundant']
Availability,"I tried it on Colab and obtained this error if importing a single function,; which seems related to the init, . ```; AttributeError Traceback (most recent call last); /usr/local/lib/python3.6/dist-packages/qutip/__init__.py in <module>(); 46 __IPYTHON__; ---> 47 qutip.settings.ipython = True; 48 except:. AttributeError: module 'qutip' has no attribute 'settings'. During handling of the above exception, another exception occurred:. AttributeError Traceback (most recent call last); 1 frames; /usr/local/lib/python3.6/dist-packages/qutip/__init__.py in <module>(); 47 qutip.settings.ipython = True; 48 except:; ---> 49 qutip.settings.ipython = False; 50 ; 51 # -----------------------------------------------------------------------------; ```; AttributeError: module 'qutip' has no attribute 'settings'. The strange thing is that that bit of the init has not been touched for years, https://github.com/qutip/qutip/blame/master/qutip/__init__.py#L45. I don't have an immediate fix (@quantshah might know more about colab) but a workaround could be using [My Binder](https://mybinder.org/), if that is a viable option for you. . To set it up, you need to copy a `requirements.yml` file in your repository and activate My Binder by copying the link into their homepage.; Right now, in the master of qutip-notebooks we get an issue with scipy's `IndexMixin` ; https://github.com/theislab/anndata/issues/146. But, from my [notebooks](https://github.com/nathanshammah/notebooks) repository it seems to work. Copying the environment file and copy-pasting the My Binder link should work. You can copy-paste a given branch in mybinder.org, such that it does not keep rebuilding the environment completely from scratch, something that will happen if it finds a new commit in that branch. Hope this helps. . .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1008#issuecomment-498667655:38,error,error,38,https://qutip.org,https://github.com/qutip/qutip/issues/1008#issuecomment-498667655,1,['error'],['error']
Availability,"I tried some experiments with elementwise exp with numpy to see if mkl did any parallel processing. It did not seem to. scipy.linalg.expm claims to use the Pade approximation. There used to be a expm2 (that used diagonalisation) and an expm3 (method?) but these have been deprecated. The scipy docs claim that the method used in expm is ""numerically more robust"". In the control modules we either use a eigendecomp (diagonalisation) method or scipy.linalg.expm_frechet as we typically need to compute propagators (which either uses the eigendecomp or is provided by the frechet deriv) . Frechet also uses some Pade approximation. I think the Pade method uses something like a LU decomp, but would need more research. It would always be more efficient to use the eigendecomp if it has been computed already. My guess is that if parallel LU decomp provides much (x100) faster eigendecomp, then the diagonalisation method would be much faster than expm. However, some experimentation would be needed to verify. . I am told that there are many methods of computing expm, and is there is much numerical research into it. It seems strange that scipy only offer us one method. The spinach control library (http://spindynamics.org/Spinach.php) reputedly has some interesting methods of computing expm. A quick Google search found https://github.com/scipy/scipy/pull/354, which shows that scipy considered adding a method kwarg, but have parked the idea. We currently have multiple methods in qutip based. I assume there must have been some motivation for writing our own sparse matrix functions for expm. It would seem that a pretty thorough investigation would be required determine to value of the various options. Would make a nice self contained project for someone.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/462#issuecomment-207456658:355,robust,robust,355,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207456658,1,['robust'],['robust']
Availability,"I tried your suggestions but unfortunately nothing changes. I think my issue is with the way the rotating frame approximation is being implemented. Prior to this, my issue was that the graph couldn't be plotted over a large time scale because w0 is so high, so I added (w-w0) to H0. That fixed it, but I'm not sure how that affects the H1_coeff function. Is it as simple as including a (w-w0) term there as well, or do I need to adjust it some other way? As you can see, the pulse does exist, but for some reason nothing I change in the code causes the pulse to affect the graphs in any way. . Also, I realized that the heaviside function may not actually be appropriate for this situation. My goal is to create a pulse that spikes up and dies down, but the heaviside function is a step function so it spikes up and stays there. Do you know if qutip has any functions for such pulses?. ![k](https://user-images.githubusercontent.com/29261370/113001273-42ce2600-9136-11eb-84f3-a4bcdd7c458f.PNG)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1466#issuecomment-810278045:744,down,down,744,https://qutip.org,https://github.com/qutip/qutip/issues/1466#issuecomment-810278045,1,['down'],['down']
Availability,"I understand completely!. I'd probably just go to `int64` with your internal CSR implementation for the moment. Would it be very easy to have the `int32`/`int64` boiled down to a single compile-time flag, for those people that compile QuTiP manually and feel they really need the smaller `int32` matrices? The pre-compiled pip/conda releases could be `int64`. That might be a simple way to provide some support for ""both"". Somehow, I thought that SciPy would put a lot more emphasis on performance, and do things like Kronecker products without conversion. It would seem that SciPy should be the place to really optimize the sparse linear algebra implementation, including all the possible combinations like `CSR * DIA`. Then everyone could build on top of that, making custom sparse-matrix implementation unnecessary. Maybe when someone gets some serious funding for working on QuTiP, encapsulating all of this better would be doable. So, just something to keep in mind before bolting on too many things onto the existing custom implementation (like multiple sparse and full storage formats). Once you open up that can of worms, it just might be better to re-design `Oobj.data` to have a very broad base (e.g. SciPy), and keep the custom CSR as an optional, highly efficient implementation for the special case, maybe in a separate package. Either way, it's going to be a lot of work, and not something for a minor-version release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/850#issuecomment-384094285:169,down,down,169,https://qutip.org,https://github.com/qutip/qutip/issues/850#issuecomment-384094285,1,['down'],['down']
Availability,"I updated my qutip to V5 and I tried ; ```; cmap = 'jet'; fig, ax = plot_spin_distribution(Q, THETA, PHI, ""3d"", cmap=cmap); ```; to change the color map of the sphere, but I get error; ```; fig, ax = plot_spin_distribution(Q, THETA, PHI, ""3d"", cmap=cmap); NameError: name 'plot_spin_distribution' is not defined. Did you mean: 'plot_spin_distribution_2d'?; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2431#issuecomment-2118997182:178,error,error,178,https://qutip.org,https://github.com/qutip/qutip/issues/2431#issuecomment-2118997182,1,['error'],['error']
Availability,"I use the qutip to do some Grover simulations. having a Hilbertspace of Grover an an additional entangled Hilbert space. In a simpler version there is only one state in the entangled Space so the program automatically chooses dimension 1. ; And then there are allot of errors coming because of this qutip error. ; At the moment I fixed it using a patched qutip version. And I think there are more cases when one has dynamical dimensions of a space, that there are cases in which the dimension is 1.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/823#issuecomment-399020891:269,error,errors,269,https://qutip.org,https://github.com/qutip/qutip/issues/823#issuecomment-399020891,2,['error'],"['error', 'errors']"
Availability,"I was unable to find any common properties of failing elements other than what I mentioned, unfortunately. We're apparently using the `cvxopt` solver, which isn't the default. The failure rate can be improved a lot (~30x fewer or so?) by setting `kktsolver='robust'`, which takes about 2x longer, and still isn't perfect. As to renaming, we already have `Qobj.norm(type)` - should it not become `Qobj.norm(type='diamond')` if we were going for a rename?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/874#issuecomment-634762505:180,failure,failure,180,https://qutip.org,https://github.com/qutip/qutip/issues/874#issuecomment-634762505,2,"['failure', 'robust']","['failure', 'robust']"
Availability,I was wondering if this is still an issue? If so I could try to spend some thinking on possible ways to correct the errors.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/122#issuecomment-107400015:116,error,errors,116,https://qutip.org,https://github.com/qutip/qutip/issues/122#issuecomment-107400015,1,['error'],['errors']
Availability,"I will vote for a deprecation warning being raised for a few versions of QuTiP with a `compile()` function that does nothing. The deprecation warning can briefly explain what changed and how to tackle it (in this case simply not use `.compile()`). It can also raise an error based on QuTiP's version such that our tests warn us about needing to remove it. Even if its a rarely used function and mostly employed internal, I still think that we should deprecate it appropriately as it will help making a smother transition to QuTiP 5.0.0. A HOW TO with some of the most significant porting changes is a also useful but I would prefer if it does not substitute deprecation warnings.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1949#issuecomment-1176355115:269,error,error,269,https://qutip.org,https://github.com/qutip/qutip/issues/1949#issuecomment-1176355115,1,['error'],['error']
Availability,"I wonder if there is something wrong with your new QuTiP install? Since I can't reproduce the issue locally it might be difficult to suggest solutions, but I can give some debugging advice:. - Try reducing the code used to produce the issue as much as possible (perhaps just a single cell that calls the solver without any c_ops and checks the initial and final expectation values, without plots).; - Check all the inputs to the solver (psi0, etc).; - If a solver prints the ""ODE Integration Error"" warning it usually means that the solver has not converged to an output it trusts, so the solution returned is likely wrong.; ; If you manage to find a smaller reproducer of the error, report it here with as much information about your setup as possible (you can start with the output of `qutip.about()`).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1987#issuecomment-1229174846:492,Error,Error,492,https://qutip.org,https://github.com/qutip/qutip/issues/1987#issuecomment-1229174846,2,"['Error', 'error']","['Error', 'error']"
Availability,"I would like to try to build the solution for this. **Task 1:** For chrome, the error seems to be due to the CORS (Cross-origin Resource Sharing) policy of google chrome.; `Access to XMLHttpRequest at 'file:///C:/Users/Sid/Desktop/qutip-doc/QuTiP_tree_plot/d3_data/qutip.json' from origin 'null' has been blocked by CORS policy: Cross origin requests are only supported for protocol schemes: http, data, chrome, chrome-extension, https.`. To fix this, I created a local server (on port 8080) from the `../qutip-doc/QuTiP_tree_plot` folder and then ran the URL `http://localhost:8082/qutip_org.html` on chrome.; Egde doesn't seemed to have any problem in running `qutip-doc.html`. **Task 2:** ; Clarification - We would right a new script to generate `qutip.json` from `apidoc/functions.rst`, just like `QuTiP_tree_plot/qutip-structure.py`. Am I right?. **Task 4:** ; Can you please elaborate on task 4 as to link to which API docs. **Task 5:**; The script written in Task 2 can be made to run for `classes.rst` and a json file would be created which would be used to generate a tree, right?; Where would we put it in the docs? guide-overview?. PS: I'm sorry if I've asked or stated an obvious thing, I am new to this community and am still trying to fimiliarize myself. Thanks.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1525#issuecomment-469209588:80,error,error,80,https://qutip.org,https://github.com/qutip/qutip/issues/1525#issuecomment-469209588,1,['error'],['error']
Availability,"I would not worry too much about codeclimate, but:; - some of the errors are arising due to trailing whitespaces. This is an easy fix; - in some cases, the ""cognitive complexity"" is very high. For example here:; ```; __init__ has a Cognitive Complexity of 68 (exceeds 5 allowed).; ```; Maybe it is worth considering some code refactoring.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1066#issuecomment-575498581:66,error,errors,66,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-575498581,1,['error'],['errors']
Availability,I'd agree on dropping the try-catch as well. The about.py is dependant on a successful hardware_info() call. So there's little use on catching an error just to invoke another one with an empty array one level higher. Shall I make a new clean pull request with a more sophisticated commit message?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/780#issuecomment-348168206:146,error,error,146,https://qutip.org,https://github.com/qutip/qutip/pull/780#issuecomment-348168206,1,['error'],['error']
Availability,"I'd be interested in providing these changes. I have a few points to ask/consider:; 1. which function is meant by `zero_oper()`? I can't find any reference to it in the code, and judging by the name, I'd guess it's equivalent to `qzero()`, which already supports this.; 2. should we extend the automatic tensoring to other operators, e.g. `create()`, `destroy()`, and so forth? I can't necessarily think of any particular use-case, but _not_ having it causes an odd inconsistency with `qeye()`.; 3. for `projection()` and `basis()` in particular: should the interface allow only scalar `m` and `n`, which must be the same for all dimensions, or should there be broadcasting rules? The latter seems like a more useful choice to me, with the rules for all arguments being:; - if `m` is a list, then `max_len == len(m)`; - if `m` is a scalar, then `m = [m] * max_len`. For example, this would provide `tensor(basis(2, 0), basis(2, 1)) == basis(2, [0, 1]) == basis([2,2], [0, 1])`, which seems the ""least surprising"" to me.; 4. should there be error-checking that supplied scalars/lists are the correct format? For lists in particular, the current behaviour is to silently flatten nested lists, though this is presumably a user error.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/363#issuecomment-575273170:1040,error,error-checking,1040,https://qutip.org,https://github.com/qutip/qutip/issues/363#issuecomment-575273170,2,['error'],"['error', 'error-checking']"
Availability,"I'd be vastly surprised if there's a way of permitting a test which passes 99% of the time - on any particular test run how would it know?. I don't remember having seen anything about setting the initial seeds, but relying on a previous test to set a seed isn't a good idea - you'd always have to ensure that no tests were ever added or changed in-between that ever used random state or everything would get lost. We could fix the random seed for any test which uses random methods with a fixture to get around that. I actually think this is a true failure; the default solver `rtol = 1e-6`, but here we're using `rtol=1e-7` as the test, so the test is bugged (it's probably not the only one, and I may have missed some of these in `mcsolve` too). I should change this when I convert `test_mesolve.py`. Also, I clearly didn't read the log properly on that one - I thought it was one of the random errors from before!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249#issuecomment-625290303:549,failure,failure,549,https://qutip.org,https://github.com/qutip/qutip/pull/1249#issuecomment-625290303,2,"['error', 'failure']","['errors', 'failure']"
Availability,"I'll add that it might be worth addressing the fact that there are two common conventions for representing quantum states as tensors that each have their pros and cons. Perhaps this would be better placed in a separate issue, but I'll explain here anyway. Consider a joint state like $` |\psi_1 \psi_2 \rangle \langle \psi_3 \psi_4 | `$ where the dimensions of $` |\psi_i\rangle `$ are $` d_i `$. Two common representations of this abstract state as a tensor are; 1. $` (|\psi_1\rangle \otimes |\psi_2\rangle) \otimes (\langle \psi_3| \otimes \langle \psi_4|) `$, which has shape $`(d_1, d_2, d_3, d_4)`$; 2. $` (|\psi_1\rangle \otimes \langle \psi_3|) \otimes (|\psi_2\rangle \otimes \langle \psi_4|) `$, which has shape $` (d_1, d_3, d_2, d_4) `$. These two conventions essentially correspond to the ""super"" and ""choi"" representations for channels. Representation 1. is nice when you are doing most of your calculations with pure states, but then want a density matrix towards the end, which you can do with just `np.tensordot(my_ket_tensor, np.conj(my_ket_tensor), 0)`. Representation 2. is nice when you are working with density matrices and want to combine multiple subsystems, which you can do with `np.tensordot(my_density_tensor_1, my_density_tensor_2, 0)`. Doing either of these operations in the other representation involves very error-prone index permutation in my experience. When I said above that these two conventions should be ""addressed"" in some way, I was intentionally vague because I'm honestly not sure what the best way to do that would be. One option would be to simply mention it in the user guide somewhere, perhaps near the section on the Super and Choi representations. Another would be to support both conventions via optional parameters like `to_tensor_rep(my_qobj, convention='super')` or `to_tensor_rep(my_qobj, convention='choi')`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2353#issuecomment-2007183867:1341,error,error-prone,1341,https://qutip.org,https://github.com/qutip/qutip/issues/2353#issuecomment-2007183867,1,['error'],['error-prone']
Availability,I'll give that a shot. Are there any other hidden dependencies that could be at fault?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/508#issuecomment-237678785:80,fault,fault,80,https://qutip.org,https://github.com/qutip/qutip/issues/508#issuecomment-237678785,1,['fault'],['fault']
Availability,"I'll go on and do that, then. Just to summarize, this came up in finding a channel that represents tensoring a state with a preparation of an ancilla, evolving according to a larger channel, then partial tracing out the ancilla. That last step can be written down as a contraction of the indices of a superoperator, giving a rectangular supermatrix representation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/268#issuecomment-65021685:259,down,down,259,https://qutip.org,https://github.com/qutip/qutip/pull/268#issuecomment-65021685,1,['down'],['down']
Availability,"I'll merge this now (it's going to have a couple of merge conflicts with other PRs currently in preparation), but I think there's a bit of discussion that's worth having about our processes for CodeClimate errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506#issuecomment-827164375:206,error,errors,206,https://qutip.org,https://github.com/qutip/qutip/pull/1506#issuecomment-827164375,1,['error'],['errors']
Availability,"I'll try to explain as much as I can, but I'm not sure exactly what is going on. The error might have been there for quite a while, it was not until I recently tried to modify qutip regarding the other issue I raised that I noticed that changes I made had no effect because qutip was not compiling. Earlier today I did manage to get changes to qutip to register and work, but I still get this error on reload. Maybe it no longer matters. While pyrex is in the path, it seems to not be installed. (I cannot import or uninstall it). I can also not remember installing openMP, although I'm not sure if openMP capability comes with gcc by default. . This issue is likely something strange with my exact installation. What has me confused is that re-installing the packages does not seem to solve anything. Apologies for the unclear explanation. If there is any specific information I can add, please tell me what I can do. My qutip.about() is:. QuTiP Version: 4.6.3; Numpy Version: 1.22.2; Scipy Version: 1.8.0; Cython Version: 0.29.27; Matplotlib Version: 3.5.1; Python Version: 3.8.10; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1810#issuecomment-1044657281:85,error,error,85,https://qutip.org,https://github.com/qutip/qutip/issues/1810#issuecomment-1044657281,2,['error'],['error']
Availability,I'm +1 on having auto tidy up being a feature of the individual data layers. Could the auto tidy up setting perhaps be passed down to the data layers and then each layer can handle it in a way that seems sensible to the data layer?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1610#issuecomment-882525259:126,down,down,126,https://qutip.org,https://github.com/qutip/qutip/pull/1610#issuecomment-882525259,1,['down'],['down']
Availability,"I'm a fan of the CodeClimate complexity tests, but I wouldn't be averse to removing its complaints about ""TODO"" comments - I'm not sure what we really gain from that in this sort of open-source development. In a business where people are working full-time then I imagine it can be worth preventing a merge to finalise some details, but in our very decentralised development, really in some cases (especially in the next major release), we do need to merge in parts of code we know to be imperfect. That said, we probably should make an effort to clear out some of the TODOs and FIXMEs that are in the codebase already. Pushed fix-up changes since last review:; - wrapped the steadystate SciPy linalg functions so they're simplified at the point of call, and unknown keywords in old SciPy versions are just silently ""eaten"" (this is the same behaviour that the file used to have, just formalised a little more).; - added `TODO` in a comment in `qutip.cy.pyxbuilder`; - changed the static class attributes in `test_superoper.py` into a `setup_method` function. *edit*: oh yeah, forgot that there were still errors in some old SciPy bits in the control module as well. I'll push a fix to that before this needs reviewing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506#issuecomment-826074305:1105,error,errors,1105,https://qutip.org,https://github.com/qutip/qutip/pull/1506#issuecomment-826074305,1,['error'],['errors']
Availability,"I'm also using Anaconda on Macbook M1 and ran into 2 errors today when importing qutip. . 1. With the M1 chip, qutip had a problem with hardware detection and as @jakelishman said, commenting lines 48 and 49 on `qutip/hardware_info.py` fixed this error. 2. Then I got the same error message with ""IPYTHON not defined"" and ""'qutip' has no attribute 'settings'."" I thought my conda environment must have been missing the ipython package somehow(?) so I tried `conda install ipython` and importing qutip again and it worked! (I then ran qutip.testing.run() to test out all functions and everything worked perfectly).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-759733240:53,error,errors,53,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-759733240,3,['error'],"['error', 'errors']"
Availability,I'm changing this draft to the complete PR. I'll update it with any changes related to documentation once the build error is resolved.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2114#issuecomment-1463345791:116,error,error,116,https://qutip.org,https://github.com/qutip/qutip/pull/2114#issuecomment-1463345791,1,['error'],['error']
Availability,"I'm glad that you like the `__call__` option for `super(oper)`; my thought there was that having `__mul__` cas op-to-vec and vec-to-op could lead to some surprising behavior, especially when manipulating Choi states. As for the proposed semantics for `oper(oper)`, my thought behind making that return `A * B * A.dag()` is that this behavior would then be identical to `to_super(A)(B)`, such that it would be a consistent with previously-used semantics within QuTiP. In particular, all of the superoperator representation conversions so far treat `type=""oper""` Qobj instances as acting by conjugation. Though I agree that adopting `A(B) = A * B * A.dag()` for the `oper(oper)` case could raise some potential for confusion, I think that it may be worth it for consistency, especially since `__call__` would not conflict with any previous code. That said, given that it could be confusing, I agree it could make sense for it to raise an error.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/475#issuecomment-221128096:936,error,error,936,https://qutip.org,https://github.com/qutip/qutip/issues/475#issuecomment-221128096,1,['error'],['error']
Availability,"I'm glad you like! As for squashing, I think that can make sense, yeah. I'd like to hold off on doing so with this PR I have the current test failures fixed (seems as though the difference-of-unitaries optimization still needs a bit of work). After that, though, I agree that'd make for a much more legible commit history.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/456#issuecomment-198569367:142,failure,failures,142,https://qutip.org,https://github.com/qutip/qutip/pull/456#issuecomment-198569367,1,['failure'],['failures']
Availability,"I'm happy to go either way on whether to merge this now or later. I'm happy to keep adding to it, but I'm also mindful that I don't want this to turn into another +15000/-15000 PR. I possibly need to look into that test failure a little more - it's temperamental, and I'm not sure if it's something where it's just a case of a too strict tolerance, or if there is an actually numerical precision problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1351#issuecomment-680225994:220,failure,failure,220,https://qutip.org,https://github.com/qutip/qutip/pull/1351#issuecomment-680225994,2,"['failure', 'toler']","['failure', 'tolerance']"
Availability,I'm merging this now. All tests are at least now running. The ones related to this are passing.; The errors #872 are not related to this,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/870#issuecomment-394187586:101,error,errors,101,https://qutip.org,https://github.com/qutip/qutip/pull/870#issuecomment-394187586,1,['error'],['errors']
Availability,"I'm not at all a fan of making tests part of the public interface like this. It's something that we make absolutely no stability guarantees about, and coupling downstream packages to our own tests just sounds like a recipe for disaster - if we find a bug in main QuTiP and need to change tests or add methods (which we should be able to do completely freely), we're going to inject a ton of extra code into downstream packages, and may completely break them. To be honest, I'm not even wild about how we distribute our tests as part of the module code at all, but that's what we've got. It _could_ be ok if you import the test case base, and redefine your tests from there. We still don't make any stability guarantees about that, but it's conceivable that we could (though of course, the problem of ""what if we need to add methods"" persists). That would also solve your problems about saying you can't import individual tests. You can import individual tests anyway, you just need to rename them to things like `_TestAdd`, or use one of the pytest hooks in your local `conftest.py` to reject tests whose `__module__` isn't your local module, or do one of the other methods of filtering.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1723#issuecomment-976540355:160,down,downstream,160,https://qutip.org,https://github.com/qutip/qutip/pull/1723#issuecomment-976540355,2,['down'],['downstream']
Availability,"I'm not sure about this, but I think that we should keep tensor as simple as possible. Meaning that we could support tensor products of superoperators with the same representation, if that operation makes any sense, but not have it converting between different representations or doing any reshuffling to make sure that `to_super(tensor(A, B)) == tensor(to_super(A), to_super(B))`. If there are any important use-cases where this property would be important we could reconsider this. Do you have any examples in mind?. If not I would recommend we raise an error if tensor is called with superoperators with different representations, and set Qobj.superrep to the correct representation if all arguments are the same.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/99#issuecomment-39528800:556,error,error,556,https://qutip.org,https://github.com/qutip/qutip/pull/99#issuecomment-39528800,1,['error'],['error']
Availability,"I'm not sure how this should be down. What I was thinking is that there are some changes to `circuitprocessor.py` and `gate.py` in my commits in the above list. And I might work on those files further in the coming weeks. If they are not included in qip_opt, we will have to eventually come back and resolve the confliction. Maybe in the next few months all PR related to qip should be merged to qip_opt instead of master?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1014#issuecomment-500755145:32,down,down,32,https://qutip.org,https://github.com/qutip/qutip/pull/1014#issuecomment-500755145,1,['down'],['down']
Availability,"I'm not sure solution 3 will work as easily as this - if the user's `scipy.linalg.eigh` is broken, then calling it doesn't help, surely?. Also, I can reproduce the segfaults with both `np.ascontiguousarray` and `np.asfortranarray` on my machine, but it is a size of 64 that seems to reliably do me in. Script to reproduce:; ```python; import numpy as np; from scipy.linalg import eigh. def random_hermitian(n):; h = np.random.rand(n, n) + 1j*np.random.rand(n, n); return h + np.conj(h.T). for n in range(1, 101):; print(n); for _ in [None]*100:; x = eigh(np.ascontiguousarray(random_hermitian(n))); ```; and this segfaults on `n=64` reliably with the `pip` version of `scipy` (linked against OpenBLAS 0.3.7), and always succeeds with the `conda` version (linked against MKL 2019.4). Both `scipy` versions are 1.4.1 here. I did the most bare-bones install to test this:; ```; $ conda create -n blastest python; $ conda activate blastest; $ pip install scipy; $ python blas.py; ```; where `blas.py` is the repro script above. Doing this, `pip` pulls me OpenBLAS 0.3.7. Looking at the source of OpenBLAS, the whole heavy-lifting implementation is in Fortran - there's the classic LAPACKe C wrapper around the core Fortran LAPACK, but everything eventually goes down to the Fortran. If it helps, it's an out-of-bounds access error that causes the segfault for me, and the address it's trying to access doesn't look like dummy nonsense (`0x101b95010`). I'm pretty sure it's a nasty Mac/OpenBLAS bug. If the problem is particularly in `zheevr` we could swap the call to `eig` (instead of `eigh`) for Mac only, which should hopefully sidestep the problem, because it'll call `zgeev` instead. All recent pip installs of `scipy` link against OpenBLAS, so there's not much that can sidestep it there, other than mandating `conda` usage, because you can't relink `scipy` to decent libraries without compiling from source.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-628780955:283,reliab,reliably,283,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628780955,4,"['down', 'error', 'reliab']","['down', 'error', 'reliably']"
Availability,"I'm sorry I don't have a huge amount of time at the moment, but just to add an extra point (that it looks like I didn't think about before): if we _do_ add this, then any method that requires an unconditional `import qutip` in downstream packages probably isn't a suitable solution - `import qutip` already takes far too long (though a lot of this is importing various parts of `scipy`, which another library might do on our behalf), and it means that they'd have to do their own import checking to handle optional dependencies. In that sense, (ab)using Python's duck-typing with a magic method might be the best way to break the dependency/import problem. I'm definitely still against implicit conversion to `Qobj` in pretty much any situation - I can imagine we could define a safe, fairly forward-compatible interface for letting people do `qutip.Qobj(x)`, but as it stands, that's the limit that I'd want the interface to be used for. I particularly am really against the idea of implicit conversion. I don't see an advantage to allowing QuTiP functions to act implicitly on other objects; it means our own functions are slower (because we have to explicitly test inputs on _everything_), and it restricts us more from improving `Qobj`'s internals, because we have to maintain compatibility with the interface. We'd never really be able to output anything _other_ than a `Qobj` without this, so there's no reason not to just have the user convert the inputs to `Qobj` explicitly themselves - that isolates the efficiency penalty so you only pay it if you need it, and it'll likely be clearer in the end anyway, because explicit is better for following the logic than implicit.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-908380301:227,down,downstream,227,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-908380301,1,['down'],['downstream']
Availability,"I'm using Qutip 3.0.1 for Python 3.4, just updated from Python 2.7 to compare. Bug persists, but it seems that your version of Qutip doesn't have it. Sorry about not using the dev version. . I downloaded the latest official version from apt-get, is there a way to get the dev version from there or do I have to compile etc.?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/226#issuecomment-54701699:193,down,downloaded,193,https://qutip.org,https://github.com/qutip/qutip/issues/226#issuecomment-54701699,1,['down'],['downloaded']
Availability,"I'm using. My configuration information is as follows:. Software	Version; QuTiP	4.5.2; Numpy	1.18.5; SciPy	1.5.0; matplotlib	3.2.2; Cython	0.29.21; Number of CPUs	6; BLAS Info	INTEL MKL; IPython	7.16.1; Python	3.8.3 (default, Jul 2 2020, 11:26:31) [Clang 10.0.0 ]; OS	posix [darwin]; Fri Sep 18 02:42:59 2020 MSK. For Mac OS: FileNotFoundError: [Errno 2] No such file or directory: 'qcirc.png'.\. When I try to generate a circuit diagram as follows:. %matplotlib inline; from IPython.display import Image; from numpy import pi; import numpy as np; from qutip import *; from qutip.qip.operations import *; from qutip.qip.circuit import QubitCircuit, Gate. cphase(pi/2); q = QubitCircuit(2, reverse_states=False); q.add_gate(""CSIGN"", controls=[0], targets=[1]); q.png. Log Error:. ---------------------------------------------------------------------------; FileNotFoundError Traceback (most recent call last); <ipython-input-14-a760fe8d2360> in <module>; 1 q = QubitCircuit(2, reverse_states=False); 2 q.add_gate(""CSIGN"", controls=[0], targets=[1]); ----> 3 q.png. ~/opt/anaconda3/lib/python3.8/site-packages/qutip/qip/circuit.py in png(self); 1122 def png(self):; 1123 from IPython.display import Image; -> 1124 return Image(self._repr_png_(), embed=True); 1125 ; 1126 @property. ~/opt/anaconda3/lib/python3.8/site-packages/qutip/qip/circuit.py in _repr_png_(self); 1114 ; 1115 def _repr_png_(self):; -> 1116 return _latex_compile(self.latex_code(), format=""png""); 1117 ; 1118 def _repr_svg_(self):. ~/opt/anaconda3/lib/python3.8/site-packages/qutip/qip/circuit_latex.py in _latex_compile(code, filename, format); 60 os.system(""convert -density %s %s.pdf %s.png"" % (100, filename,; 61 filename)); ---> 62 with open(""%s.png"" % filename, ""rb"") as f:; 63 result = f.read(); 64 else:. FileNotFoundError: [Errno 2] No such file or directory: 'qcirc.png'. How do I fix this error on Mac?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/702#issuecomment-694558061:771,Error,Error,771,https://qutip.org,https://github.com/qutip/qutip/issues/702#issuecomment-694558061,2,"['Error', 'error']","['Error', 'error']"
Availability,"I've been thinking about how this interacts with our build and test infrastructure, and I'm writing some of those thoughts here partly for myself:. - We currently build with oldest-supported-numpy, and we want to keep that because which is the earliest supported numpy varies by Python version and operating system and changes over time, so it's good if someone else worries about that for us. - We require for installation currently numpy >= 1.16.6 and that is probably what we want to update to match the NEP. There is a question here of whether we should specify our minimum supported numpy in ""install_requires"" in ""setup.cfg"" or not. - The majority of our test matrix should *build* qutip with oldest-supported-numpy to match what we distribute. - We should include at least one test run for the oldest numpy we require (i.e. oldest NEP) and one for the most recent (i.e. latest numpy). . - We should include at least one test run for the oldest Python we support and one for the newest. - We should include at least one test run for the oldest SciPy we support and one for the newest. - The NEP doesn't say anything about SciPy, but I propose we select the oldest SciPy that supports our oldest NEP numpy. And as Asier suggested, I think it would be good to write this all down. The test matrix requirements could just be a big comment in the GitHub action file.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1941#issuecomment-1165714182:1279,down,down,1279,https://qutip.org,https://github.com/qutip/qutip/pull/1941#issuecomment-1165714182,1,['down'],['down']
Availability,I've created #1751 to fix the error in the cibuildwheel overrides syntax and made it a qutip branch so that I can run the build CI before merging.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1747#issuecomment-1005718437:30,error,error,30,https://qutip.org,https://github.com/qutip/qutip/pull/1747#issuecomment-1005718437,1,['error'],['error']
Availability,"I've given up on solving this for QuTiP 4 for now -- it leads down a long rabbit hole that ends in fixing string coefficient generation, which was a big re-write and has already been done in QuTiP 5. I'm continue the work for QuTiP 5 in #1948.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1854#issuecomment-1170243021:62,down,down,62,https://qutip.org,https://github.com/qutip/qutip/pull/1854#issuecomment-1170243021,1,['down'],['down']
Availability,"I've just pushed a couple of commits to fix up a little bit of the formatting (it was the squashed lines I meant, rather than the particular level of indent or location of the keyword `or`) and to slightly fix the tolerance of the eigenvalue test. The individual uncertainty in any eigenvalue is allowed to be ~1e-12, so when you sum them all up to compare them, you have to propagrate the uncertainty through. Don't worry about the random test failure you got in a pickle test one time - that wasn't your fault and we know about it and have fixed it for the next major release of QuTiP already. Also don't worry about the speed of the CI tests. You can't reliably benchmark by comparing CI runs because you never know what else was running on the physical hardware at the same time. Travis are ramping down the amount of processing power available to us while they're transition business model. I'll be moving our testing infrastructure elsewhere when I've got a bit more time to sort it out, and have decided what we actually want/need/can get. In the mean time, we just live with the occasional test failure if a Mac Xcode12 machine is overloaded when we get to it. We can rerun them if we need to; it's not worth compromising on our test coverage.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1498#issuecomment-822688883:214,toler,tolerance,214,https://qutip.org,https://github.com/qutip/qutip/pull/1498#issuecomment-822688883,7,"['avail', 'down', 'failure', 'fault', 'reliab', 'toler']","['available', 'down', 'failure', 'fault', 'reliably', 'tolerance']"
Availability,"I've just pushed a little change to correct some minor points of style in `random_objects.py` (that weren't your fault - they were there before), and to correct the docstring to say that only `N=None` triggers the deduction, not `N=0`. (I also just finished the conversion of the tests into a parametrised pytest style - I'm trying to keep get these gradually updated as we look at the files, but I didn't want to ask you to do a _whole_ bunch more work, when you've already done a lot to get this ready, thanks!)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1509#issuecomment-832161733:113,fault,fault,113,https://qutip.org,https://github.com/qutip/qutip/pull/1509#issuecomment-832161733,1,['fault'],['fault']
Availability,"I've just spotted a bug in `isherm` on the new data layer, which is my fault for not getting the tests for that written yet. That may also be having some impact on the test fragility.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1348#issuecomment-680004649:71,fault,fault,71,https://qutip.org,https://github.com/qutip/qutip/pull/1348#issuecomment-680004649,1,['fault'],['fault']
Availability,I've made codeclimate/codeclimate-duplication#364 to hopefully fix the complex-number parsing problem. Now we need to work on tidying up as much legacy code as we can to get the numbers down!,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1577#issuecomment-862563893:186,down,down,186,https://qutip.org,https://github.com/qutip/qutip/pull/1577#issuecomment-862563893,1,['down'],['down']
Availability,"I've rebased on top of master, now that #1381 has been merged. However there is still an error, but I don't really understand the link with my changes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1380#issuecomment-729960378:89,error,error,89,https://qutip.org,https://github.com/qutip/qutip/pull/1380#issuecomment-729960378,1,['error'],['error']
Availability,"If I run ""cython spmatfuncs.pyx"" it gives an error:. ```; Error compiling Cython file:; ------------------------------------------------------------; ...; import numpy as np; cimport numpy as np; cimport cython; cimport libc.math. ctypedef np.complex128_t CTYPE_t; ^; ------------------------------------------------------------. spmatfuncs.pyx:24:0: 'CTYPE_t' redeclared ; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/52#issuecomment-25343953:45,error,error,45,https://qutip.org,https://github.com/qutip/qutip/pull/52#issuecomment-25343953,2,"['Error', 'error']","['Error', 'error']"
Availability,"If I try to import qutip a second time, I get the following error:. ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-6-d4205f385795> in <module>(); ----> 1 from qutip import*. /home/jan/.local/lib/python2.7/site-packages/qutip/__init__.pyc in <module>(); 60 qutip.settings.ipython = True; 61 except:; ---> 62 qutip.settings.ipython = False; 63 ; 64 # -----------------------------------------------------------------------------. AttributeError: 'module' object has no attribute 'settings'. Also I am running ubuntu 16.10",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/637#issuecomment-273531916:60,error,error,60,https://qutip.org,https://github.com/qutip/qutip/issues/637#issuecomment-273531916,1,['error'],['error']
Availability,"If it helps in the future, you can use `pycodestyle` (available in `pip` and `conda`) to check pep8 compliance on your end before pushing a commit. As to the actual command, we might not actually want to remove the usage of `convert` - it's quite possible that a lot of people are still using ImageMagick 6, since for most people it's just a dependency that got installed by something else, and isn't frequently updated. `qutip` doesn't list it as an official dependency, so it wouldn't get updated on our behalf. We could catch which version of `ImageMagick` to use with something like; ```python; def _magick_comamnd():; for command in ['magick', 'convert']:; try:; subprocess.run((command, '--version'), capture_output=True); return command; except OSError:; pass; raise FileNotFoundError(""Couldn't locate system ImageMagick""); ```; and cache the result on import (below into the variable `_magick`). There could also be logic based on OS if needed. The convert command would become; ```python; subprocess.run((_magick, ""-density"", 100, filename + "".pdf"", filename + "".png"")); ```; or something like that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1179#issuecomment-585236473:54,avail,available,54,https://qutip.org,https://github.com/qutip/qutip/pull/1179#issuecomment-585236473,1,['avail'],['available']
Availability,"If we don't do `del numpy` in qutip's `__init__.py`, then doing this works:. ```; from import qutip *; numpy.func(...); ```. because numpy was imported but not deleted before the end of qutips init file, and it will be exported form qutip as a global symbol in qutips namespace (which is the callers global name space if called as above). However, this is not a desired behaviour of a module to do like this: importing qutip shouldn't impose that numpy is imported in any particular way (even though qutip uses numpy internally). For example, if a user prefer to import numpy as `np`, then it is pointless that qutip exposes numpy as `numpy` as well. It because even weirder when an import pattern like `import qutip as q` is used, because as it is now then numpy is available through `q.numpy`, which is unnecessary and causes problem with for example nose unit testing of qutip module (because it finds numpy and run all numpy tests as well) and also with module autocompletion in for example spyder and ipython. For these and many other similar reasons, it is neatest if qutip only exports its own symbols, and if a users requires any symbols of other packages they should be explicitly imported from those packages. I hope this explains why I want to eliminate qutips currently excessive namespace populating.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/233#issuecomment-56176673:767,avail,available,767,https://qutip.org,https://github.com/qutip/qutip/pull/233#issuecomment-56176673,1,['avail'],['available']
Availability,"If you have extra_link_args in the site.cfg, then a double keyword argument; happens when reading the options for the blas library. If you use openblas, add this to your site.cfg; [openblas]; extra_link_args = ... whatever ... and the error will happen.; The error is this. TypeError: config.add_extension() got multiple values for keyword argument; 'extra_link_args'. 2015-11-08 21:12 GMT+01:00 Paul Nation notifications@github.com:. > I do not get a build failure under NumPy 1.10.1. What was the particular; > error message? Any changes would also have to be backward compatible with; > earlier NumPy versions.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/392#issuecomment-154863591. ## . Kind regards Nick",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/392#issuecomment-154867711:235,error,error,235,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154867711,4,"['error', 'failure']","['error', 'failure']"
Availability,"If you only need the final state and you don't need any intermediate times, your `tlist` should only have two elements in it. So; ```python; import qutip; hamiltonian = qutip.sigmax(); state = qutip.basis(2, 0).proj(); times = [0, 10]; qutip.mesolve(hamiltonian, state, times); ```; should give the correct result. If you want to integrated for a long time, you might get errors about the integration not converging. If so, you will need to increase the `nsteps` solver option, such as; ```; options = qutip.Options(nsteps=10_000_000); qutip.mesolve(..., options=options); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1472#issuecomment-808417826:372,error,errors,372,https://qutip.org,https://github.com/qutip/qutip/issues/1472#issuecomment-808417826,1,['error'],['errors']
Availability,"If you run it locally it won't appear as a ""failure"" it'll be a warning, but now on the CI server we've fixed every warning, and turned new warnings into errors. You can get the same behaviour on your computer by running the command as `pytest -We [...]` instead.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-827823447:44,failure,failure,44,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-827823447,2,"['error', 'failure']","['errors', 'failure']"
Availability,"If you use functions instead of string as coefficient of your Hamiltonian, this error should not happen. ; It should also be faster in your case: string are a little faster (<10%) but take ~1 sec to compile. With 3 sec evolution, the compilation time is not worth it. ; If your Hamiltonian is always the same, you can reuse it by setting `options.rhs_reuse = True`, but we don't have much documentation for this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/966#issuecomment-474064887:80,error,error,80,https://qutip.org,https://github.com/qutip/qutip/issues/966#issuecomment-474064887,1,['error'],['error']
Availability,"If you're concerned about the solvers, a) they skip tidyup til the end anyway and b) _technically_ the computational complexity of CSR * dense vector is identical to tidyup (though tidyup is a little more cache efficient), but really it's the constant factors that could kill you for small systems. For example, the ""naive"" way of implementing a relative tolerance would take the absolute value of a complex number, but that involves a floating-point square root, which is a very slow operation. That's likely partly why the current version compares real and imaginary components separately, even though the sparsity structure is only improved if _both_ go to zero. In a two-pass operation you'd sqrt twice for every entry (naively - all the square roots are very avoidable), and I'd start to worry that that really _could_ dominate small system operations. Or maybe you should just ignore me when assigning ""good first issues"" - I'm probably too opinionated about performance characteristics without enough experience at managing other people's code!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1349#issuecomment-793991141:355,toler,tolerance,355,https://qutip.org,https://github.com/qutip/qutip/issues/1349#issuecomment-793991141,1,['toler'],['tolerance']
Availability,"ImageMagick is only mentioned in our tutorial page and not listed elsewhere. So we didn't specify a required version for it. . > We could catch which version of `ImageMagick` to use with something like; > ; > ```python; > def _magick_comamnd():; > for command in ['magick', 'convert']:; > try:; > subprocess.run((command, '--version'), capture_output=True); > return command; > except OSError:; > pass; > raise FileNotFoundError(""Couldn't locate system ImageMagick""); > ```; > ; > and cache the result on import (below into the variable `_magick`). There could also be logic based on OS if needed. The convert command would become; > ; > ```python; > subprocess.run((_magick, ""-density"", 100, filename + "".pdf"", filename + "".png"")); > ```. This solution looks neat. One minor thing is that maybe we should use `check=True` instead of `capture_output=True` since the latter one is only available from Python 3.7+. Despite those has already been discussed above, the plot sill does not work for me. I find the following lines also wrong on Windows; ``` python; os.system(""rm -f %s.aux %s.log"" % (filename, filename)). os.system(""mv %s-tmp.pdf %s.pdf"" % (filename, filename)); ```; because `rm` and `mv` are not Windows command. We should probably replace it by python script `os.remove` and `os.replace` to make it system independent.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1179#issuecomment-592993793:885,avail,available,885,https://qutip.org,https://github.com/qutip/qutip/pull/1179#issuecomment-592993793,1,['avail'],['available']
Availability,"In `brtools`'s tests, we could check that the results `eigenvector` are mathematically right, without matching `scipy`'s result. Should be quite simple and we would more resilient to changes in scipy. . Did anybody check if it solves the segfault issues on Mac yet?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1299#issuecomment-649523632:170,resilien,resilient,170,https://qutip.org,https://github.com/qutip/qutip/issues/1299#issuecomment-649523632,1,['resilien'],['resilient']
Availability,"In development version 4.4: . - For Python 3.6, when running `qutip.testing.run()`. ```; uTiP Version: 4.4.0.dev0+0bf3e05e; Numpy Version: 1.16.2; Scipy Version: 1.2.1; Cython Version: 0.29.6; Matplotlib Version: 3.0.3; Python Version: 3.6.8; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: True; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); ```; I obtain an error at ; ```; Propagator: steady state ... Segmentation fault: 11; ```. - For Python 3.7 with ; ```; QuTiP Version: 4.4.0.dev0+0bf3e05e; Numpy Version: 1.16.2; Scipy Version: 1.2.1; Cython Version: 0.29.6; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: True; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/nathanshammah/miniconda3/envs/py37/lib/python3.7/site-packages/qutip-4.4.0.dev0+0bf3e05e-py3.7-macosx-10.7-x86_64.egg/qutip; ```; the error occurs at . ```; Metrics: Check avg gate fidelities for random ... python(42424,0x7fffa34a8380) malloc: *** error for object 0x7fc74f258880: incorrect checksum for freed object - object was probably modified after being freed.; *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-482116179:378,error,error,378,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-482116179,4,"['error', 'fault']","['error', 'fault']"
Availability,"In fact, any scalar multiplying ``qutip.num(0)`` gives the same error",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/981#issuecomment-484690982:64,error,error,64,https://qutip.org,https://github.com/qutip/qutip/issues/981#issuecomment-484690982,1,['error'],['error']
Availability,"In general in pytest we use the bare keyword `assert` for almost everything. All the functions in `np.testing` are from the ""before times"", when test tooling wasn't as good as it is nowadays - they were a big improvement on available warning messages back before 2015. Nowadays, though, `pytest` does introspection on assertion failures, so it has even better message reporting than the `np.testing` functions, and it lets you write much clearer code. For example, `assert_equal(x, y)` is much better spelled in pytest as `assert x == y`, because it's much faster to read and pytest does better error reporting for it. Similarly, testing for exceptions is better with; ```python; with pytest.raises(ValueError):; call_that_raises(1, ""hello, world""); ```; as opposed to the numpy form `np.testing.assert_raises(ValueError, call_that_raises, 1, ""hello, world"")` - the pytest one is much easier to read, and the error message is better. The only numpy one we still use is `np.testing.assert_allclose` when we're comparing several numpy arrays. That's just because `pytest` doesn't have a good function that's aware of multidimensional arrays (at least not one that I know). This file still has a load of old numpy testing code in it (e.g. `np.testing.assert_equal`) because it was written quite a long time ago, when that was the recommended way of doing things. We're changing over slowly, so we can take advantage of all the nice features of pytest. In this case, I changed `np.testing.assert_allclose(x, y, atol=tol)` to `assert abs(x - y) < tol`. I removed `np.testing.assert_allclose`, because that gives the mistaken impression that we're comparing arrays (we're not, we're comparing two scalars). I could have changed it to `assert x == pytest.approx(y, tol=tol)`, except in this case the test file hasn't been converted to `pytest` style yet, and I wanted to keep the total change of this PR as small as possible.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1498#issuecomment-822737671:224,avail,available,224,https://qutip.org,https://github.com/qutip/qutip/pull/1498#issuecomment-822737671,4,"['avail', 'error', 'failure']","['available', 'error', 'failures']"
Availability,"In general, if you think this is something that is worthwhile, we'd ask you to try it yourself, and then show us memory-usage and execution-time benchmark results showing that such a change is warranted. I've given you a few reasons why this sort of ""programming by script"" can be difficult and introduce errors, and why there may be more concerns than you might have thought about. If you can show that such a change has actual tangible benefits with proof, then we would be willing to consider a limited change, but you also need to have verified everything yourself. If it looks like you've done it indiscriminately by script, we would reject the PR, because it would require one of us to go through ourselves line-by-line and check everything, which is something the PR author is meant to do themselves first. We (mostly) do this for free, and we only have a finite amount of time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1714#issuecomment-972782201:305,error,errors,305,https://qutip.org,https://github.com/qutip/qutip/issues/1714#issuecomment-972782201,1,['error'],['errors']
Availability,"In my case,. ```python; > H_0.dims; [[3, 11], [3, 11]]; > H_1.dims; [[3, 6], [3, 6]]; ```; and I don't get any error when running. ```python; > H = [H0, [H_1, 'sin(t)']]; qutip.propagator(H, T, [], args); ```; apart from the `Segmentation fault`. I think this is due to `sesolve` being called with `_safe_mode=False` [here](https://github.com/qutip/qutip/blob/master/qutip/propagator.py#L160) as running; ```python; > qutip.sesolve(H, psi0, tlist, [], args, options, _safe_mode=False); ``` ; gets me a `Segmentation fault` without any other error, but running; ```python; > qutip.sesolve(H, psi0, tlist, [], args, options); ```; gives; ```python; Exception: Input operator and ket do not share same structure.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/761#issuecomment-334228053:111,error,error,111,https://qutip.org,https://github.com/qutip/qutip/issues/761#issuecomment-334228053,4,"['error', 'fault']","['error', 'fault']"
Availability,"In my tries yesterday, I did not have problem with `scipy.linalg.eigh` for C array. Since `scipy` does not use the same lapack interface for C and Fontran continuous array, I though it was fine. I guess I did not run enough tests. . Using `eig` and `zgeev` seems a good idea. I don't have any error with it yet.; It would then be good to change all the `eigh` in the code, not just the `zheevr` call in cython. ; And probably raise an issue in `scipy`. @jakelishman since most computation of eigenvalue in Qutip go through the `Qobj` could you fix that call this summer.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-628833918:293,error,error,293,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628833918,1,['error'],['error']
Availability,"In short the answer is no. One could think of a couple of ways of trying to determine whether the system has reached the steady state or not, but for nonlinear systems this is difficult. In addition, how would you calculate the error if you dont know the steady state solution in the first place?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/319#issuecomment-75664628:228,error,error,228,https://qutip.org,https://github.com/qutip/qutip/issues/319#issuecomment-75664628,1,['error'],['error']
Availability,"In the CI test, we convert warnings to errors. Have you tried `make latexpdf -W`?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2167#issuecomment-1566998431:39,error,errors,39,https://qutip.org,https://github.com/qutip/qutip/pull/2167#issuecomment-1566998431,1,['error'],['errors']
Availability,"In the documentation, qutip is build with `pip install qutip[full]`, while in test it is installed with `pip install qutip[$QUTIP_TARGET]`, with the target changing depending on the test. We don't have any test using extra yet... The mpi4py team made a GitHub Actions workflow to run it in test: https://github.com/mpi4py/setup-mpi. You can add that workflow and the `extra` to have every test run with mpi:; ```; - uses: actions/checkout@v3; - uses: mpi4py/setup-mpi@v1; ```. `QUTIP_TARGET=""tests,graphics,semidefinite,ipython,extra"" `. By I am not sure it would work for windows. Also if installing mpi is slow, we may not want it in all test.; But conditional workflow are tricky so lets see want if it just works first. Yes, the test failures are related to last weekend scipy release, not this code.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296#issuecomment-1904189729:738,failure,failures,738,https://qutip.org,https://github.com/qutip/qutip/pull/2296#issuecomment-1904189729,1,['failure'],['failures']
Availability,"In theory the `correlation_2op_1t` function is only valid when you pass in the steady state solution of the Liouvillian. However, we implement it just by calculating `<A(t) B(0)>` - it's not _immediately_ clear to me that that our output is necessarily correct when you don't pass in a steadystate (especially if `taulist` doesn't start from 0). I _think_ it's fine in all cases, but perhaps Neill you can check me on that front?. I'd agree with Neill that truncation of the thermal state basis is likely the reason you were failing to get that to work exactly right. The tolerance calculation will actually be a bit more involved because QuTiP returns a normed dm. That will cause all the values to shift by relatively the same amount, and then you've got to factor in the solver tolerance on top of those errors, but the principle is correct for sure. *edit*: I'm happy and ready to merge this, but I'll just hold off for a day or so in case Neill has chance to answer my last minor query.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1478#issuecomment-815021669:572,toler,tolerance,572,https://qutip.org,https://github.com/qutip/qutip/pull/1478#issuecomment-815021669,3,"['error', 'toler']","['errors', 'tolerance']"
Availability,"Indeed ; ```; b = Bloch(); b.show(); ```; renders the Bloch sphere. Calling again `b.show()` does not work as you say. . Interestingly, invoking just; ```; b; ```; gives an error, but plots the correct sphere again. ; ```; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); ~/miniconda3/lib/python3.6/site-packages/IPython/core/formatters.py in __call__(self, obj); 343 method = get_real_method(obj, self.print_method); 344 if method is not None:; --> 345 return method(); 346 return None; 347 else:. ~/miniconda3/lib/python3.6/site-packages/qutip/bloch.py in _repr_svg_(self); 298 from IPython.core.pylabtools import print_figure; 299 self.render(); --> 300 fig_data = print_figure(self.fig, 'svg').decode('utf-8'); 301 plt.close(self.fig); 302 return fig_data. AttributeError: 'str' object has no attribute 'decode'; ```; Regarding the no-show, I guess there is something to fiddle with at; https://github.com/qutip/qutip/blob/master/qutip/bloch.py#L625-L632",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/989#issuecomment-490030124:173,error,error,173,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-490030124,1,['error'],['error']
Availability,"Indeed, that is my error. Will fix tonight. Thanks for finding it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/493#issuecomment-224977661:19,error,error,19,https://qutip.org,https://github.com/qutip/qutip/issues/493#issuecomment-224977661,1,['error'],['error']
Availability,"Interesting... You see, the gate `Gate(RY, targets=[0, 1], controls=None)` is clearly wrong because RY acts only on one qubits. I guess you are probably using a released version of QuTiP (4.5.2/3 maybe) and not the master branch. This error was hidden before in those released version. If you try to install from source (http://qutip.org/docs/latest/installation.html#installing-from-source) (which you have to if you want to contribute anyway), you will probably see this error message.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1330#issuecomment-810554275:235,error,error,235,https://qutip.org,https://github.com/qutip/qutip/issues/1330#issuecomment-810554275,2,['error'],['error']
Availability,Internal note: `bloch_redfield_solve` quit without raising an error when ode integration fails.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965#issuecomment-1203283104:62,error,error,62,https://qutip.org,https://github.com/qutip/qutip/issues/1965#issuecomment-1203283104,1,['error'],['error']
Availability,"Internally all `Qobj` use sparse matrices, no matter what type of data you give them. Whether your density matrix stays sparse during the time evolution depends on the Hamiltonian. In general, especially if there's any environmental interaction, it likely won't, but that's just down to the physics.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1737#issuecomment-990055735:279,down,down,279,https://qutip.org,https://github.com/qutip/qutip/issues/1737#issuecomment-990055735,1,['down'],['down']
Availability,"Is the code failing or only the tests?; Does it fail in local test or only in automated tests?; The file that I asked you to add to gitignore was a temp file created in the tests directory, which is not where they should be. If pytest run the tests from that directory, this may be the cause of the error. Otherwise I have no idea.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131#issuecomment-562262739:299,error,error,299,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-562262739,1,['error'],['error']
Availability,Is there anything preventing this merging once the documentation builds are passing?. The documentation build failure is quite odd -- maybe something to do with merging in the upstream/dev.major branch?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1890#issuecomment-1134817221:110,failure,failure,110,https://qutip.org,https://github.com/qutip/qutip/pull/1890#issuecomment-1134817221,1,['failure'],['failure']
Availability,"Is this on, Linux? All the tests run fine under Ubuntu 13.10, Python ; 2.7 & 3.3, as well as the Mac. Maybe you need to check out the latest ; copy or something funny is going on. On 02/20/2014 11:56 AM, Robert Johansson wrote:. > On my system the following tests fails:; > ; > Sparse: Symmetric Reverse Permute ... ERROR; > Sparse: Nonsymmetric Reverse Permute ... ERROR; > Sparse: Bandwidth ... ERROR; > ; > More detailed info:; > ; > ```; > ERROR: Sparse: Symmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 73, in test_sparse_symmetric_reverse_permute; > B=sparse_reverse_permute(x,perm,perm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Nonsymmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 89, in test_sparse_nonsymmetric_reverse_permute; > B=sparse_reverse_permute(x,rperm,cperm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/73#issuecomment-35583331:316,ERROR,ERROR,316,https://qutip.org,https://github.com/qutip/qutip/issues/73#issuecomment-35583331,4,['ERROR'],['ERROR']
Availability,It appeared there was a floating point error in ode2es that would result in an empty amplitude string for small enough amplitudes. In PR #509 is fixed by forcing the amplitude to zero when the numerical error occurs.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/500#issuecomment-237693792:39,error,error,39,https://qutip.org,https://github.com/qutip/qutip/issues/500#issuecomment-237693792,2,['error'],['error']
Availability,"It appears that the iterative methods do not converge to the tolerance value within the maxiter number of steps. The bicgstab method is particularly bad. Another option is lgmres that I have found to give the correct answer with fewer iterations. I have also noticed that we are still having issues with the preconditioner failing, but that is for another day.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/29#issuecomment-20343868:61,toler,tolerance,61,https://qutip.org,https://github.com/qutip/qutip/issues/29#issuecomment-20343868,1,['toler'],['tolerance']
Availability,"It appears that they have removed hw.cpufrequency on these things (About this mac doesn't show a freq. either). I don't know what is their policy in this regard but I did find these two related issues: https://github.com/giampaolo/psutil/issues/1892 and https://github.com/shirou/gopsutil/pull/999. My workaround was to comment out the code and hard-wire a random value in there :-) A quick grep didn't seem to show any use of cpu_freq elsewhere in the code but then I didn't look too much in depth. I don't personally use qutip, my partner does, she's the physicist, I'm just the geek helping hand :). It does look like this code could use some error handling and put some ""reasonable"" default values if the sysctl's fail indeed. Happy to test a patch and report. She's currently away so there will be some latency (I can occasionally ssh into her laptop but it takes preparation), so I can't really submit a PR myself at this point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1606#issuecomment-880308664:646,error,error,646,https://qutip.org,https://github.com/qutip/qutip/issues/1606#issuecomment-880308664,1,['error'],['error']
Availability,"It doesn't look robust enough to be user facing as it is, but as a private function, if you get a 3.5x, I'd say we want it. Technically, just give a type to `i` and it's all running in c code.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2128#issuecomment-1476692791:16,robust,robust,16,https://qutip.org,https://github.com/qutip/qutip/pull/2128#issuecomment-1476692791,1,['robust'],['robust']
Availability,"It gives me correct result when I change the ODE tolerances as you mentioned, in mesolve(). Thank you so much. I tried in v4.7.3, now, after I upgrade it to v5, still same result as v4.7.3.; Now I can try my original calculation, your suggestion should work then.; Thanks. > It is a little annoying it is just failing silently. yes, I agree....",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2229#issuecomment-1713148770:49,toler,tolerances,49,https://qutip.org,https://github.com/qutip/qutip/issues/2229#issuecomment-1713148770,1,['toler'],['tolerances']
Availability,"It is giving an error at ; ```; ERROR: mesolve: super vs. density matrix as initial condition; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 543, in testSuperJC; fid = self.fidelitycheck(out1, out2, rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 475, in fidelitycheck; rhot = vector_to_operator(E*rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/superoperator.py"", line 280, in vector_to_operator; q.data = sp_reshape(op.data.T, shape[::-1]).T; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/sparse.py"", line 135, in sp_reshape; return zcsr_reshape(A, shape[0], shape[1]); File ""qutip/cy/spconvert.pyx"", line 254, in qutip.cy.spconvert.zcsr_reshape; Exception: Total size of array must be unchanged.; ```; Also, can you do a small change so that we can check if with the new `pytest` on Travis CI this is still the case?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1098#issuecomment-575497693:16,error,error,16,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-575497693,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"It is giving an error because your operator and your state are in two different spaces. . tensor(hadamard_transform(1), hadamard_transform(1), identity(2), identity(2)) is 4 single qubit operators acting on 4 single qubit subsystems (as intended). . basis(16, 1) is an atom with 16 distinguishable states and no subsystems. You cannot make a single qubit operator act on this object (since it is not a qubit) and there are no subspaces for the remaining 3 operators to act on. . The state that you actually want (a system of 4 qubit subsystems) can be constructed as ; tensor(basis(2), basis(2), basis(2), basis(2)). Try this; > tensor(hadamard_transform(1), hadamard_transform(1), identity(2), identity(2)) * tensor(basis(2), basis(2), basis(2), basis(2)). Or for clarity; > H = hadamard_transform(1); > I = identity(2); > ket0 = basis(2); > HHII = tensor(H, H, I, I); > psi = tensor(ket0, ket0, ket0, ket0); > HHII * psi. Hope this helps.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/888#issuecomment-403337748:16,error,error,16,https://qutip.org,https://github.com/qutip/qutip/issues/888#issuecomment-403337748,1,['error'],['error']
Availability,"It is strange. The failure is not dependent on the changes that you made here since the failure is due to some missing header files in Numpy. I am at a loss on what is happening. But your other PRs are going through so I am sure, it is something small. I will try restarting the builds for this PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/883#issuecomment-398284232:19,failure,failure,19,https://qutip.org,https://github.com/qutip/qutip/pull/883#issuecomment-398284232,2,['failure'],['failure']
Availability,"It looks as though the known failures are now properly being skipped. Given that this is causing build failures elsewhere, I'd suggest that this PR is ready for merge.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/487#issuecomment-222056144:29,failure,failures,29,https://qutip.org,https://github.com/qutip/qutip/pull/487#issuecomment-222056144,2,['failure'],['failures']
Availability,"It looks like there are some wheels for QuTiP on Windows available at https://www.lfd.uci.edu/~gohlke/pythonlibs/. Just tried them out, and they seem to work fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/933#issuecomment-502266058:57,avail,available,57,https://qutip.org,https://github.com/qutip/qutip/issues/933#issuecomment-502266058,1,['avail'],['available']
Availability,"It looks like your parameters are a bit challenging for the ODE solver (the Rabi frequency Omega is much much smaller than the energy splitting omega). If you change the ODE tolerances using options you will find it gives the expected result, e.g., something like: . ```; options = qt.Options(rtol=1e-8, atol=1e-8); result = qt.mesolve(H, rho0, t, options=options,progress_bar=True); ```. If you use a ket instead of a density operator mesolve() will pass the problem to sesolve(), which I guess for some reason is more robust in this case. It is a little annoying it is just failing silently. I am curious if you tried in v5?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2229#issuecomment-1713056542:174,toler,tolerances,174,https://qutip.org,https://github.com/qutip/qutip/issues/2229#issuecomment-1713056542,2,"['robust', 'toler']","['robust', 'tolerances']"
Availability,"It most likely is. Roundoff error and errors due to discreteness of the; ode methods will lead to some errors. One way to get around this is to; operate only on the upper or lower triangle of rho. This would also speed; things up; - Sent from my Sony Z Tablet. Frequently while I am using mesolve for some long protracted evolution the; density matrix at some point becomes nonhermitian (isherm and; checkherm()return false). I am guessing that this is just because of; numeric noise, as; there is nothing physically that can cause that (and it is happening even; when the evolution is purely unitary). Is this actually because of numerical noise?. If yes, I was wondering whether this can be addressed from within qutip or; whether the burden on addressing numerical noise should be on the user?. Is there a ""canonical qutip way"" to remove the nonhermitian numerical noise; from matrices that should be hermitian?. —; Reply to this email directly or view it on; GitHubhttps://github.com/qutip/qutip/issues/122; .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/122#issuecomment-42121578:28,error,error,28,https://qutip.org,https://github.com/qutip/qutip/issues/122#issuecomment-42121578,3,['error'],"['error', 'errors']"
Availability,"It seems like 4fa892932b1062b31fcaf2640987c8ecfa7d7a19 fixed the problem with the broken demos(). But if demos application is going to continue to be an official part of qutip, I think it would be better to dispatch each demo in a separate process, using ""fork() and exec()"", instead of the current method of ""compile() and eval()"" which seems not very robust (that is, it crashes the application if something goes wrong in the example script). Also, the text-based demos can probably be dropped because I doubt anyone use that function. . But work on new qutip demos should probably be using ipython notebooks, I think, so I'm not sure how much energy we should spend on the demos application.. But on the other hand not everyone uses the ipython notebook, so the qt demos application probably might still has a role to play.. and some effort to make it more robust might be worthwhile?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/19#issuecomment-18893809:353,robust,robust,353,https://qutip.org,https://github.com/qutip/qutip/issues/19#issuecomment-18893809,2,['robust'],['robust']
Availability,"It seems the problem was with the `blas_opt['extra_compile_args']` call in the `setup.py` for the Fortran solver. This is an odd error given that is works perfectly well on the mac:. ``` python; import numpy as np; blas_opt=np.__config__.blas_opt_info; extra_compile_args=blas_opt['extra_compile_args']; print(extra_compile_args); ['-msse3', '-DAPPLE_ACCELERATE_SGEMV_PATCH', '-I/System/Library/Frameworks/vecLib.framework/Headers']; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/283#issuecomment-66267097:129,error,error,129,https://qutip.org,https://github.com/qutip/qutip/issues/283#issuecomment-66267097,1,['error'],['error']
Availability,"It seems to me that what counts in the end is how good the result of the simulation in the truncated Hilbert space coincides with the exact solution for the infinite Hilbert space. As an example I tried it out on a pumped mode in a cavity (https://gist.github.com/bastikr/136908ce690b299e2e82bd13ab2cb47a). Both approaches, i.e. using the analytically generated coherent state or generating it with the displacement operator as initial states, yield pretty much the same error compared to the analytic result. I may have made a mistake or simply misunderstood your statement. Can you maybe further help me to understand this issue?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/683#issuecomment-293311686:471,error,error,471,https://qutip.org,https://github.com/qutip/qutip/pull/683#issuecomment-293311686,1,['error'],['error']
Availability,"It was during fixing/changing the behaviour shown in 1808 that I first saw the issue. It seems now that I can change the qutip code, and to some degree at least it does compile, but the mentioned error still shows up in the terminal on running reload(qutip). Its likely that the error was there before I started modifying any files, and that I did not happen to spot it between all the lines jupyter tends to print in the terminal. It also shows up on my system after I force a fresh installation of qutip with no changes. It does not currently seem to stop me from doing anything, but I don't know what causes it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1810#issuecomment-1046958786:196,error,error,196,https://qutip.org,https://github.com/qutip/qutip/issues/1810#issuecomment-1046958786,2,['error'],['error']
Availability,"It will cause a lot of tests failure not related to changes, We will get tests failure due to new version of jax or a deprecation in numpy /scipy will have to be fixed in multiple repos for the tests to work as we are seen with the present failure. It require commitment to keep everything working and up to date so I would like to hear from the maintainers of the other projects before merging. ; Also should other projects such as `qutip-cupy`, `qutip-qtrl` be included?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2504#issuecomment-2286479530:29,failure,failure,29,https://qutip.org,https://github.com/qutip/qutip/pull/2504#issuecomment-2286479530,3,['failure'],['failure']
Availability,"It would be good to include the zenodo bib reference that relates to the specific version that is being used. It would be good if users included this zenodo reference, as this pinpoints a version, which could be important for people trying to repeat the results. In the same vein it could be a good idea to automatically output a file into the cwd that contains the `qutip.about()` output. We could include a citation reminder in the `qutip.about()` and also a message that explains that bib files have also be produced for their convenience. In order to placate those who may object to all of this, we should provide some setting that allows users to turn off this bib and about() output. We should mention this setting in the `about()`. We also need to handle file errors that may occur.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/752#issuecomment-330591675:767,error,errors,767,https://qutip.org,https://github.com/qutip/qutip/pull/752#issuecomment-330591675,1,['error'],['errors']
Availability,"It would be good to understand why the qutip-qip test started failing now. Perhaps it is related to the new specializations for dense that were merged on Friday? Previously some operations that went via the sparse data layer may have been tidied up and now they are not. The use of `p != 0` existed in version 4 and is, I think, correct in this particular case. If a POVM is supplied as a list of operators, and some of those operators have zero probability, then one cannot provide a normalized final density matrix, but one still needs to return a value to the user, since they specifically asked about that POVM. Perhaps qutip-qip could apply a tolerance itself on the returned probabilities?. We could also add an atol parameter to some measurement functions for v5, but I think that ship has sailed for 4.7.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2029#issuecomment-1336427119:648,toler,tolerance,648,https://qutip.org,https://github.com/qutip/qutip/issues/2029#issuecomment-1336427119,1,['toler'],['tolerance']
Availability,"It would be really good to get #1181 merged - I put in a couple of commits that would show us a lot more whether it's a minor random Monte-Carlo randomness error, or if it's completely wrong. I wouldn't worry too much about it for the purposes of this PR - we know it's not related so it's probably ok to merge despite it. Even if it passed, the subsequent run on merge might fail anyway. (pinging @Ericgig as he asked)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1209#issuecomment-607480196:156,error,error,156,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607480196,2,"['error', 'ping']","['error', 'pinging']"
Availability,"It would maybe be good to keep everything in one PR that can be squashed into a single commit at the end - this is only a single ""logical"" change at the end of the day. Nice to get these things tidied up. You probably need to run all the tests locally before just pushing to check if everything works; QuTiP has quite a few code generation steps and indirect evaluation that can't be detected with static analysis, which is why you're seeing a lot of test failures (though that's _mostly_ `.pyx` files). Something seems wrong with the static analyser if it's not spotting that `Qobj` is used _everywhere_, though, and I notice in several commits it has a lot of false positives for removal. I can't imagine any situation where a static analyser should remove an in-library import from an `__init__.py` file, but it's done that in a couple of places. Similarly, in `cy/pyxbuilder.py` I can see that it's removed a line `import pyximport`, but I can see that that import _is_ used - it's so close it's even within the minimal diff!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1394#issuecomment-735738116:456,failure,failures,456,https://qutip.org,https://github.com/qutip/qutip/pull/1394#issuecomment-735738116,1,['failure'],['failures']
Availability,"It's fine to not split the PR in too many chunks.; Yes it's easier to review, but I don't want to have it half implemented/merged at release, which is coming soon.; You could just add `kron` here. The other can be implemented using matmul and can wait. It's fine to take some time. Just ping me when you want a re-review.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2314#issuecomment-1942727858:287,ping,ping,287,https://qutip.org,https://github.com/qutip/qutip/pull/2314#issuecomment-1942727858,1,['ping'],['ping']
Availability,"Just a few comments:; * The changes in behavior are probably due to a different QuTiP version. Your `qutip.about()` output shows that you have installed version 5.0.3 on the one PC and version 4.6.2 on the other. Version 5 was recently released, and it is a major update and changes many of the internals of QuTiP. Old code should still work with version 5 in the majority of cases, but it is not guaranteed to always work. For old code, you might therefore prefer to use version 4 (the latest release of version 4 is v4.7.6).; * Your notebooks are rather long, and for a person who has not written them it can be hard to figure out what they do. If you would like to investigate in detail where the different behavior comes from, I would recommend to try to boil it down to a *short, self-contained* example script that gives different results in versions 4 and 5.; * The differing plots show values with a magnitude of $10^{-14}$ or so. That is rather small. By default, QuTiP's solvers use tolerances of $10^{-12}$, so you should not expect the numerical results to have a higher precision than that. In numerical calculations, it is generally recommended to rescale your units such that your parameters and results have a magnitude around $1$ if possible.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2501#issuecomment-2249560375:767,down,down,767,https://qutip.org,https://github.com/qutip/qutip/issues/2501#issuecomment-2249560375,2,"['down', 'toler']","['down', 'tolerances']"
Availability,Just a ping to @araza6 for any update. Cc @quantshah.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-633933697:7,ping,ping,7,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-633933697,1,['ping'],['ping']
Availability,"Just adding my two cents. From my experience, a lot of our users don't know how to efficiently locate the error and find the solution. Simply posting a HOW-TO guide along with the release notes might not be sufficient, because the users may not be aware of its existence. It would help I think if we could; - raise an error or warning message that locates the error as clear as possible and; - if feasible, leave a link in the error/warning message directing the users to the HOW-TO guide.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1949#issuecomment-1179740053:106,error,error,106,https://qutip.org,https://github.com/qutip/qutip/issues/1949#issuecomment-1179740053,4,['error'],['error']
Availability,"Just adding some minor comments here, not really related to the core discussion; > We could have a warning when matrices over a certain size are allocated. I don't think it is good unless we can read the available memory and derive the warning threshold from that. On the cluster, we sometimes have up to hundreds of GB of memory. The threshold should be different from computer to computer. > Should eigenstates return the states in one operator instead of a list of kets?. I do often want eigenstates to return one operator. Many times I have to get the kets to NumPy array and recreate the unitary operator from them. Maybe we can have an additional argument to the function.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2328#issuecomment-1953129675:204,avail,available,204,https://qutip.org,https://github.com/qutip/qutip/issues/2328#issuecomment-1953129675,1,['avail'],['available']
Availability,"Just found what may have been the cause of the segfault. Incorrect indexing in `data.csr.Accumulator.gather` led to uninitialised memory being exposed if it encountered a zero value which in the current PR would only have been exposed by `Qobj.ptrace` on CSR to CSR, but by no fault of its own. This PR is ready for review - these last couple of patches I've just been sending could equally have gone to the next PR I'm preparing which is waiting for this one to be merged so I can rebase it on top of the new `dev.major`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1338#issuecomment-678399544:277,fault,fault,277,https://qutip.org,https://github.com/qutip/qutip/pull/1338#issuecomment-678399544,1,['fault'],['fault']
Availability,"Just some information. There were indeed issues about this, e.g. #1247 . For new users, this could lead to some confusing behaviours. In those cases, `relative tolerance` definitely helps.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1349#issuecomment-680091809:160,toler,tolerance,160,https://qutip.org,https://github.com/qutip/qutip/issues/1349#issuecomment-680091809,1,['toler'],['tolerance']
Availability,"Just to add, I tried to benchmark Eric's jax data layer a bit more with an Ising model, the example is at the end of this colab notebook we made for a tutorial talk, which shows some crossover in performance at certain system sizes: https://colab.research.google.com/drive/1RcgX7oEzGjzPAF8Ryus54Q5UmyMddmLA?usp=sharing. ![benchmark](https://github.com/qutip/qutip/assets/5094429/15d2dfaa-b269-44f7-8334-878b8e2c5910). Note colab does not have free GPUs, so you will have to download and use it locally. also in the actual ising example, replace ; `with jax.default_device(jax.devices(""cpu"")[0]):` ; with; `with jax.default_device(jax.devices(""gpu"")[0]):`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2320#issuecomment-1940278917:474,down,download,474,https://qutip.org,https://github.com/qutip/qutip/issues/2320#issuecomment-1940278917,1,['down'],['download']
Availability,"Just tried this, I still the same error. So the `resolve_gates()` function works for you? What are the gates you get in the end? Are they correct?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1330#issuecomment-806463739:34,error,error,34,https://qutip.org,https://github.com/qutip/qutip/issues/1330#issuecomment-806463739,1,['error'],['error']
Availability,"Knowing the number of CPUs in the system may help in the future in debugging OpenMP code and setting sensible OpenMP thread counts - we may want to keep that part of the detection. I don't see any need for CPU frequency or memory size, though. That said, we should probably switch to using a library (like [`psutil`](https://github.com/giampaolo/psutil)) if we're going to keep it - it'll be a lot more reliable. For example, I've no idea why the current mac hardware detection in QuTiP ignores the `hw.ncpu` entry in `sysctl`, but the FreeBSD version explicitly uses it...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1395#issuecomment-736675351:403,reliab,reliable,403,https://qutip.org,https://github.com/qutip/qutip/issues/1395#issuecomment-736675351,1,['reliab'],['reliable']
Availability,"Knowing the tensor structure is still necessary for enforcing the Hilbert spaces are of the correct dimensions, even if the resulting state can't be written as a product of states on individual spaces. I think there's a lot more design to do to work out a sensible data structure which can really take advantage of this lazy representation, but my morning-after reaction to this is that it's very non-trivial without a lot of code duplication. It's easy enough to imagine how it will work for operators of structure `[scalar, oper, scalar] * [scalar, scalar, oper] -> [scalar, oper, oper]` - in this case the final result is fully expanded in the last two states, and not in the first. It's much trickier dealing with `[oper, scalar, scalar] * [scalar, scalar, oper] -> [oper, scalar, oper]`. In this case, since there's a subspace in between them, you need a specifically ""lazy"" Kronecker product. I suspect that this would have to be supported via either a completely separate `tensor` mechanism, or the mechanisms which currently underpin the data-layer `kron` would have to be revisited. At least at first, I think that's a very large undertaking, and it would really need a lot of careful design to ensure that we don't slow anything down, or balloon the amount of code to be maintained.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1320#issuecomment-658094225:1239,down,down,1239,https://qutip.org,https://github.com/qutip/qutip/issues/1320#issuecomment-658094225,1,['down'],['down']
Availability,"LMFC\INCLUDE"" ""-IC:\Program Files (x86)\Windows Kits\10\include\10.0.10240.0\ucrt"" ""-IC:\Program Files (x86)\Windows Kits\NETFXSDK\4.6.1\include\um"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\shared"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\um"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\winrt"" ""-IC:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\INCLUDE"" ""-IC:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\ATLMFC\INCLUDE"" ""-IC:\Program Files (x86)\Windows Kits\10\include\10.0.10240.0\ucrt"" ""-IC:\Program Files (x86)\Windows Kits\NETFXSDK\4.6.1\include\um"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\shared"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\um"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\winrt"" /EHsc /Tpqutip/cy/spmatfuncs.cpp /Fobuild\temp.win-amd64-3.5\Release\qutip/cy/spmatfuncs.obj /w /Ox; cl : Command line warning D9025 : overriding '/W3' with '/w'; spmatfuncs.cpp; c:\anaconda2\envs\qtpy3\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; c:\users\alex\documents\github\qutip\qutip\cy\src/zspmv.hpp(3): error C2146: syntax error: missing ')' before identifier 'data'; c:\users\alex\documents\github\qutip\qutip\cy\src/zspmv.hpp(3): error C3646: 'data': unknown override specifier; c:\users\alex\documents\github\qutip\qutip\cy\src/zspmv.hpp(3): error C2062: type 'int' unexpected; c:\users\alex\documents\github\qutip\qutip\cy\src/zspmv.hpp(7): error C2059: syntax error: ')'; qutip/cy/spmatfuncs.cpp(2503): error C2660: 'zspmvpy': function does not take 7 arguments; qutip/cy/spmatfuncs.cpp(2688): error C2660: 'zspmvpy': function does not take 7 arguments; qutip/cy/spmatfuncs.cpp(2923): error C2660: 'zspmvpy': function does not take 7 arguments; error: command 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\x86_amd64\\cl.exe' failed with exit status 2; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/648#issuecomment-281199101:1980,error,error,1980,https://qutip.org,https://github.com/qutip/qutip/pull/648#issuecomment-281199101,10,['error'],['error']
Availability,Leaving the full error message here:. ```; anaconda3/lib/gcc/x86_64-apple-darwin11.4.2/4.8.5/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1030#issuecomment-505449699:17,error,error,17,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-505449699,3,"['down', 'error']","['down', 'error']"
Availability,"Look good,; Thank you sameshl.; We can ignore the test errors as they are not related to this PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1091#issuecomment-537176077:55,error,errors,55,https://qutip.org,https://github.com/qutip/qutip/pull/1091#issuecomment-537176077,1,['error'],['errors']
Availability,"Looking great, good job! . Just a few minor problems with the unit tests:; - use .np.array on line 214 in random_objects.py; - I get errors like ""AttributeError: 'numpy.ndarray' object has no attribute 'H'"". We need to use numpy.matrix instead of numpy.ndarray if .H is to be used.; - line 57 insuperop_reps: ""inpt=q_oper.data.reshape([sqrt_shape] \* 4)."" gives an error because q_oper.data is csr sparse matrix and does not implement reshape. I guess that the unit tests work on your system (maybe some version differences of numpy/scipy), so I'll go ahead and merge this PR now, and try to fix the unit test problems I get here. Just go ahead and make a new PR if there is anything else that you want to add or update. We really appreciate your contribution!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/22#issuecomment-18782823:133,error,errors,133,https://qutip.org,https://github.com/qutip/qutip/pull/22#issuecomment-18782823,2,['error'],"['error', 'errors']"
Availability,"Looks generally good to me. Personally I am happy with the class instance method of invoking the code. However, as you say, the standard approach elsewhere in the library is to provide a function call. In the control modules I took the approach of doing both, with some functionality only being available through the setting of properties and calling instance methods. I would prefer to here from some of the other developer before merging though, as this is more in their area than mine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/405#issuecomment-164471109:295,avail,available,295,https://qutip.org,https://github.com/qutip/qutip/pull/405#issuecomment-164471109,1,['avail'],['available']
Availability,Looks like plenty of warnings still and some errors in Python3.; Will pick up again tomorrow.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/434#issuecomment-185274058:45,error,errors,45,https://qutip.org,https://github.com/qutip/qutip/pull/434#issuecomment-185274058,1,['error'],['errors']
Availability,MSVC v10 (that is for py < 35) reports a failure to find complex.h; MSVC v14 (for py35) reports issues with pyx_build (can't remember exactly),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/447#issuecomment-192175123:41,failure,failure,41,https://qutip.org,https://github.com/qutip/qutip/issues/447#issuecomment-192175123,1,['failure'],['failure']
Availability,"Makes sense, I only mentioned about the speed as I thought it might be of interest to Travis. That said, I totally agree, getting a reliable build is definitely important.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/360#issuecomment-130281180:132,reliab,reliable,132,https://qutip.org,https://github.com/qutip/qutip/pull/360#issuecomment-130281180,1,['reliab'],['reliable']
Availability,Many thanks for this. What was the exact error that was occurring? This might be better treated in the partial transpose call.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/776#issuecomment-347420136:41,error,error,41,https://qutip.org,https://github.com/qutip/qutip/pull/776#issuecomment-347420136,1,['error'],['error']
Availability,"Many thanks for your kind reply. Unfortunately, I can not do that, because there is cases in my hamiltonian in which that matrix is not diagonal, I am just trying from the simplest case, actually my goal is to have a term ""S_vector * D_matrix *S_vector"" . Could you please explain how I am using Qobj incorrectly and how to used right. The error message states that since S_vector is a Qobj I can not multiply it with the D_matrix. If I put Qobj(D_matrix) then I can not multiply them because all terms are Qobj.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1848#issuecomment-1093795266:340,error,error,340,https://qutip.org,https://github.com/qutip/qutip/issues/1848#issuecomment-1093795266,1,['error'],['error']
Availability,Many thanks to your student for hunting this down. Merging now.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/545#issuecomment-251871954:45,down,down,45,https://qutip.org,https://github.com/qutip/qutip/pull/545#issuecomment-251871954,1,['down'],['down']
Availability,"Matlibplot 3.0.3may work will. 发自我的iPhone. ------------------ Original ------------------; From: Michael Kerschbaum <notifications@github.com&gt;; Date: 周六,4月 18,2020 15:16; To: qutip/qutip <qutip@noreply.github.com&gt;; Cc: XiaoTailong <2449734455@qq.com&gt;, Comment <comment@noreply.github.com&gt;; Subject: Re: [qutip/qutip] `Bloch().add_points()` breaks in Matplotlib 3.1.0 (works in Matplotlib 3.0.3) (#1027). ; I can reproduce the above errors with Matplotlib 3.2.1.; ; —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1027#issuecomment-615872719:444,error,errors,444,https://qutip.org,https://github.com/qutip/qutip/issues/1027#issuecomment-615872719,1,['error'],['errors']
Availability,"May I propose another approach for testing normalization: use a non-hermitian Hamiltonian and `qeye` as the e_ops.; Then it is clear if the normalization step does it's work or not. Otherwise the `tol` should be very strict, the error between before and after the normalization is usually quite small. `sesolve` does not differentiate between an `unitary` and a `dm`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1907#issuecomment-1148806235:229,error,error,229,https://qutip.org,https://github.com/qutip/qutip/pull/1907#issuecomment-1148806235,1,['error'],['error']
Availability,"Maybe we should require that at least one of the test cases requires a version of scipy pre-1.5 so we don't cause any regressions for older versions of scipy as Travis builds start to reliably pull 1.5? Perhaps we can add a requirement for scipy=1.4.1 to the Linux py3.7, MKL/OMP one?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1301#issuecomment-649616762:184,reliab,reliably,184,https://qutip.org,https://github.com/qutip/qutip/pull/1301#issuecomment-649616762,1,['reliab'],['reliably']
Availability,"Minimal script to reproduce the error that only uses numpy:; ```; # On a CPU with AVX512 extensions and numpy 1.21.2:; # (only tested on Ubuntu); # It works again on numpy 1.21.4 (and maybe 1.21.3 -- I did not check because 1.21.3 was not conda installable). import numpy as np. L = np.diag([1+0j, 1, 1, 1]); b = np.array([1+0j, 0, 0, 0]). # commenting out the line below makes everything work, with it solve returns nans.; np.exp(0); # breakpoint(). v = np.linalg.solve(L, b); np.testing.assert_allclose(v, b); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1694#issuecomment-967000449:32,error,error,32,https://qutip.org,https://github.com/qutip/qutip/pull/1694#issuecomment-967000449,1,['error'],['error']
Availability,"Most of it is already in qutip or in development:; - We already have a progress bar.; - We have feedback to support solvers where parameters are changed depending on the current state. Those should not updated at each time-step, but included in the rhs. Otherwise, it will increase runtime and often the numerical error. We mostly use multistep method (Adams and BDF) which are particularly sensible to that.; - In my rework of `mcsolve`, I'm including the capacity to stop after a certain time, (already merged) and after the error bar gets under a certain tolerance. I have not though an equivalent for `me/sesolve` would be needed but it would be simple enough to add. We could have function that takes the expect value and tell the solver to stop or continue. ; - I was thinking of adding the ability to step through the evolution (draft in #1455):; ```; solver = MeSolver(H, c_ops, options=opt); solver.start(t0, rho0); for t in [t1,t2, ...]:; rho_t = solver.step(t, args=new_args); ```; Which would work like a `yield`:; ```; solver = MeSolver(H, c_ops, options=opt); for rho_t in solver.yield_run(rho0, tlist):; if needed:; solver.update_parameter(args=new_args); ```; I prefer using steps since you don't have do define `tlist` first, you could use it in a `while True` loop or interactively.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-858740451:314,error,error,314,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-858740451,3,"['error', 'toler']","['error', 'tolerance']"
Availability,"Most of scipy's solver are not ""thread-safe"", but we will be able to use other solvers in the new version. We will be sure to add at least one which is thread safe. The `args=new_args` refer to the `args` in `[H0, [H1, f(t, args)]]`, in your case, you could use something like:; ```; def f(t, args):; return args['u'] ; ```; We don't have step interpolation with changing coefficient array. It could be added, but we will have to think about it. Using a mutable, as in your example, would create error with most ODE solver with variable step, so I would not recommend it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859791561:496,error,error,496,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859791561,1,['error'],['error']
Availability,"My thinking on this basically comes down to two points. First, the behavior of `composite` is explicitly not the same as that of `tensor()` or `super_tensor()`, as it's a common usecase to compose operators defined on different subsystems without reference to representation. While I agree that it would be good to have more generic wire-bending support in QuTiP, I think that's likely out of scope for this particular feature, as it would require some significant rethinking of how `dims` is currently implemented. Second, I think that it's entirely defensible that the current behavior of `composite` promotes operators by `spre() * spost()`, as this is consistent with the view that superoperators are matrix representations of group action by conjugation. That is, `composite` returns the composite of the same group action applied to each of several subsystems, though the action can be more general for `type='super'` arguments. This could perhaps be made more clear by renaming `composite` to `composite_oper` or similar, but I think that the _behavior_ of the current function is correct and consistent, if admittedly, poorly described.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/241#issuecomment-58038276:36,down,down,36,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-58038276,1,['down'],['down']
Availability,"Nathan, could you resolve the conflict. You can merge it yourself or ping me if you prefer.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1168#issuecomment-633711479:69,ping,ping,69,https://qutip.org,https://github.com/qutip/qutip/pull/1168#issuecomment-633711479,1,['ping'],['ping']
Availability,"Nevermind, sorry I was being stupid. Changed the integrator tolerance and it work :/.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1492#issuecomment-815315471:60,toler,tolerance,60,https://qutip.org,https://github.com/qutip/qutip/issues/1492#issuecomment-815315471,1,['toler'],['tolerance']
Availability,Nice work Eric. I had a quick look at the code.; Does this PR mean that string type td will be used to construct Python functions when Cython not available? Just checking that I understand.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1082#issuecomment-529838231:146,avail,available,146,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-529838231,1,['avail'],['available']
Availability,No errors from the following:; ```; try:; from qutip import *; from qutip.qip import *; except ImportError:; !pip install --quiet qutip--4.7.5 qutip-qip; from qutip import *; from qutip.qip import *; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2334#issuecomment-1962951064:3,error,errors,3,https://qutip.org,https://github.com/qutip/qutip/issues/2334#issuecomment-1962951064,1,['error'],['errors']
Availability,"No longer relevant with v5.; `essolve` was removed.; `sesolve` still has a small drift due to numerical error, but easily solver by changing `rtol` and `atol`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/841#issuecomment-2073417353:104,error,error,104,https://qutip.org,https://github.com/qutip/qutip/issues/841#issuecomment-2073417353,1,['error'],['error']
Availability,"No problem - test failures are a big deal, because they prevent everyone else from seeing what might be going wrong with their own code, and lots of people are actively working on QuTiP at the moment. > Merging once tests pass. ""if"", I think - I have a mac, so I still get the segfaults!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1301#issuecomment-649583979:18,failure,failures,18,https://qutip.org,https://github.com/qutip/qutip/pull/1301#issuecomment-649583979,1,['failure'],['failures']
Availability,"No, I never got similar error...; You seems to be following the instruction in the doc's readme which usually work well.; Your branch seems to be not up to date with master, maybe if you merge the recent changes and rebuild qutip from source, it would work.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1706#issuecomment-995160913:24,error,error,24,https://qutip.org,https://github.com/qutip/qutip/issues/1706#issuecomment-995160913,1,['error'],['error']
Availability,"No, not yet, it will be supported in v5.; You could try to use `photocurrent_mesolve` which is very similar, but with a slower algorithm. ps. There is an error in the formula in the [documentation](https://qutip.org/docs/latest/guide/dynamics/dynamics-photocurrent.html#open-system):; L_eff(rho) = L(rho) - C_dag*C*rho - rho*C_dag*C + tr(C_dag*C*rho - rho*C_dag*C)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2060#issuecomment-1385475587:154,error,error,154,https://qutip.org,https://github.com/qutip/qutip/issues/2060#issuecomment-1385475587,1,['error'],['error']
Availability,"No, we usually have no problem on linux. How did you install it? `pip`, `python setup.py install`? Did you have a prior installation? Some time, if you install qutip without openmp but installed it previously with openmp there are errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1205#issuecomment-600635973:231,error,errors,231,https://qutip.org,https://github.com/qutip/qutip/issues/1205#issuecomment-600635973,1,['error'],['errors']
Availability,"None:; sso.dW_factors = [1.] * len(sso.m_ops); elif len(sso.dW_factors) == 1:; - sso.dW_factors = sso.dW_factors * len(sso.m_ops); + sso.dW_factors *= len(sso.m_ops); elif len(sso.dW_factors) != len(sso.m_ops):; raise ValueError(""The number of dW_factors must fit"" +; "" the number of m_ops.""); @@ -1318,7 +1318,7 @@ def _sesolve_generic(sso, options, progress_bar):; res.states = res.avg_states = avg_states_list; ; # average; - res.expect = res.expect / nt; + res.expect /= nt; ; # standard error; if nt > 1:; diff --git a/qutip/subsystem_apply.py b/qutip/subsystem_apply.py; index ebd81a1b..110f6cca 100644; --- a/qutip/subsystem_apply.py; +++ b/qutip/subsystem_apply.py; @@ -126,7 +126,7 @@ def _one_subsystem_apply(state, channel, idx):; for mul_idx in range(idx):; # print mul_idx; # print subs_dim_ar[mul_idx]; - n_blks = n_blks * subs_dim_ar[mul_idx][0]; + n_blks *= subs_dim_ar[mul_idx][0]; ; blk_sz = state.shape[0] // n_blks; # Apply channel to top subsystem of each block in matrix; @@ -258,5 +258,5 @@ def _subsystem_apply_reference(state, channel, mask):; else qeye(state.dims[0][j]); for j in range(len(state.dims[0]))]; full_oper = tensor(list(map(Qobj, op_iter_list))); - rho_out = rho_out + full_oper * state * full_oper.dag(); + rho_out += full_oper * state * full_oper.dag(); return Qobj(rho_out); diff --git a/qutip/superoperator.py b/qutip/superoperator.py; index dacc0e1e..8d099484 100644; --- a/qutip/superoperator.py; +++ b/qutip/superoperator.py; @@ -112,19 +112,19 @@ def liouvillian(H, c_ops=[], data_only=False, chi=None):; c_ = c_op; ; if c_.issuper:; - data = data + c_.data; + data += c_.data; else:; cd = c_.data.H; c = c_.data; if chi:; - data = data + np.exp(1j * chi[idx]) * \; + data += np.exp(1j * chi[idx]) * \; zcsr_kron(c.conj(), c); else:; - data = data + zcsr_kron(c.conj(), c); + data += zcsr_kron(c.conj(), c); cdc = cd * c; cdct = cdc.T; - data = data - 0.5 * zcsr_kron(spI, cdc); - data = data - 0.5 * zcsr_kron(cdct, spI); + data -= 0.5 * zcsr_kron(spI, ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872:21697,mask,mask,21697,https://qutip.org,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872,1,['mask'],['mask']
Availability,"Not a huge amount to be done about that CodeClimate failure to be honest - I'm not going to go through and change that function into something more sensible, because the whole type is _completely_ rewritten in 5.0 anyway. If I remember correctly, that whole class is copied from SciPy too, with some small adjustments to the initialisation to speed it up. The failure isn't anything new, it's just being flagged because my diff hit a return statement in a function with about 25 returns.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506#issuecomment-824507509:52,failure,failure,52,https://qutip.org,https://github.com/qutip/qutip/pull/1506#issuecomment-824507509,2,['failure'],['failure']
Availability,"Not in that way. `0` is the right value when the system is constant or the time dependence is always active (`sin(w*t)`, `exp(-t)`, etc.) In these case, it is best to let the solver decide the right step length. Also pulse shorter that 5% of `tlist` could still be missed. Lastly. in some cases, the `tlist` may not be available to the solver. We certainly need to be better documentation of this. Maybe a notebook showing this trap could be useful. But without being able to look into the coefficient, I don't see an easy fix.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1945#issuecomment-1168820859:319,avail,available,319,https://qutip.org,https://github.com/qutip/qutip/issues/1945#issuecomment-1168820859,1,['avail'],['available']
Availability,"Not really much to add, except that if it were possible to try a fresh; install of anaconda, and maybe python 3.6, but that is just guessing.; Probably an install from source is better on linux any way.; The conda packages were mainly developed for users with issues compiling; (i.e. on Windows). Though things have moved on so much since we started; trying that as a solution. On 26 March 2017 at 02:01, Paul Nation <notifications@github.com> wrote:. > Oh sorry, I thought you were reporting the sys gcc, not the conda one.; >; > Conda-forge and QuTiP are tested heavily against Ubuntu 14.04, so if any; > platform works, it should be that one.; >; > As I originally suspected, the problem comes from the Cython code.; > Specifically for the sparse matrix math. The fact that you can build it; > yourself suggests a binary incompatibility. However, again, we test; > against 14.04, so I am hard pressed to think about what the issue could be.; > gdb might be able to hunt down where the dump occurs.; >; > On Mar 25, 2017 18:27, ""Michael Goerz"" <notifications@github.com> wrote:; >; > Since it's the python from the conda package, I'm assuming that's because; > Continuum created the linux package on a Redhat system. GCC is identified; > like that on both of the workstations. But yeah, my guess would be that; > there is some shared library that's compiled in a way that's incompatible; > with the rest of the system. Is there any linux utility that would allow to; > determine which library is being accessed at the moment of the crash? Some; > invocation of ldd?; >; > —; > You are receiving this because you commented.; >; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/674#issuecomment-289249308>, or; > mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqT0F1WSzbd-; > hOyso9XQM0K5ldiiwks5rpbEBgaJpZM4MpI4Z>; > .; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly,",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-289852411:973,down,down,973,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-289852411,1,['down'],['down']
Availability,"Not really sure on the source of the error here. Stange one, as it's from a file not changed in this PR.; All I can suggest is to rebase from the upstream master again, which is not really a very onerous process; ```; git rebase upstream/master; ```; skipping any conflicting commits, then; ```; git push --force; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/883#issuecomment-398675812:37,error,error,37,https://qutip.org,https://github.com/qutip/qutip/pull/883#issuecomment-398675812,1,['error'],['error']
Availability,Not sure how to make a test for this. The file name is random and it's not always reliable when the `__del__` is called which is where the file is erased.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2251#issuecomment-1781162157:82,reliab,reliable,82,https://qutip.org,https://github.com/qutip/qutip/pull/2251#issuecomment-1781162157,1,['reliab'],['reliable']
Availability,"Not sure if it's that simple.; ```; --config-setting=""--global-option=--with-openmp""; ```; actually gives me a build error:; ```shell; $ python3.10 -m build --skip-dependency-check --no-isolation --wheel --config-setting=""--global-option=--with-openmp""; * Building wheel...; Traceback (most recent call last):; File ""/usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 363, in <module>; main(); File ""/usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 345, in main; json_out['return_val'] = hook(**hook_input['kwargs']); File ""/usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 261, in build_wheel; return _build_backend().build_wheel(wheel_directory, config_settings,; File ""/usr/lib/python3/dist-packages/setuptools/build_meta.py"", line 230, in build_wheel; return self._build_with_temp_dir(['bdist_wheel'], '.whl',; File ""/usr/lib/python3/dist-packages/setuptools/build_meta.py"", line 211, in _build_with_temp_dir; sys.argv = (sys.argv[:1] + setup_command +; TypeError: can only concatenate list (not ""str"") to list. ERROR Backend subproccess exited when trying to invoke build_wheel; ```. The other method; ```; --config-setting=""--build-option=--with-openmp""; ```; appears to work in the sense that it builds successfully. But after installing the package it reports that openmp is still missing; ```; $ python3 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.0; Numpy Version: 1.21.5;",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1875#issuecomment-1219841152:117,error,error,117,https://qutip.org,https://github.com/qutip/qutip/issues/1875#issuecomment-1219841152,1,['error'],['error']
Availability,Not sure if the failure on windows is related to the numpy release or not. It's a different issue so I will merge this and look at it another time.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2510#issuecomment-2296970652:16,failure,failure,16,https://qutip.org,https://github.com/qutip/qutip/pull/2510#issuecomment-2296970652,1,['failure'],['failure']
Availability,"Not to discourage you from contributing, but there's already been some movement on #1208 in #1209. About tests: `qutip` uses `pytest` now, so the preferred method is actually just a bare `assert`, because `pytest` does introspection on the variables on an assertion failure. But yes, any changes to that should be in a new PR, because it's a different logical unit of work. There's some movement on that too (e.g. #1181). About pep8 changes: I'm not a maintainer, but it might be a good idea to be conservative about changing actual public APIs in the name of pep8. Changing public APIs that work fine means the users, who are the reason we're writing the code in the first place, have to adjust, and the pep8 spec explicitly warns against breaking backwards compatibility to match the pep. `N` is fairly consistent within `qutip` for the number of qubits, and the `U` in `U_list` refers to unitary matrices, which are conventionally a capital `U` in mathematical writing. You could argue that `U_list` should perhaps be called `unitaries`, but again, there's a degree of backwards-compatibility that should be maintained.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1212#issuecomment-603560557:266,failure,failure,266,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-603560557,1,['failure'],['failure']
Availability,"Note: This appears broken on my M1 MacBookPro running Big Sur... there is no sysctl hw.cpufrequency at all on this machine, so it blows up (some error handling in that function would be good :-). ```$ sysctl hw; hw.ncpu: 8; hw.byteorder: 1234; hw.memsize: 17179869184; hw.activecpu: 8; hw.optional.amx_version: 2; hw.optional.arm64: 1; hw.optional.armv8_1_atomics: 1; hw.optional.armv8_2_fhm: 1; hw.optional.armv8_2_sha3: 1; hw.optional.armv8_2_sha512: 1; hw.optional.armv8_crc32: 1; hw.optional.breakpoint: 6; hw.optional.floatingpoint: 1; hw.optional.neon: 1; hw.optional.neon_fp16: 1; hw.optional.neon_hpfp: 1; hw.optional.ucnormal_mem: 1; hw.optional.watchpoint: 4; hw.cacheconfig: 8 1 1 0 0 0 0 0 0 0; hw.cachelinesize: 128; hw.cachesize: 3616980992 65536 4194304 0 0 0 0 0 0 0; hw.cpu64bit_capable: 1; hw.cpufamily: 458787763; hw.cpusubfamily: 2; hw.cpusubtype: 2; hw.cputype: 16777228; hw.ephemeral_storage: 0; hw.l1dcachesize: 65536; hw.l1icachesize: 131072; hw.l2cachesize: 4194304; hw.logicalcpu: 8; hw.logicalcpu_max: 8; hw.osenvironment: ; hw.packages: 1; hw.pagesize: 16384; hw.pagesize32: 16384; hw.physicalcpu: 8; hw.physicalcpu_max: 8; hw.serialdebugmode: 0; hw.tbfrequency: 24000000; hw.use_kernelmanagerd: 1; hw.use_recovery_securityd: 0; hw.targettype: J293; ```; Big Sur 11.4 on MacBookPro M1. Actually I'll open a separate issue...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1401#issuecomment-879469970:145,error,error,145,https://qutip.org,https://github.com/qutip/qutip/pull/1401#issuecomment-879469970,1,['error'],['error']
Availability,"Note: in theory you can install QuTiP from the test PyPI server right now by doing; ```; pip install -i https://test.pypi.org/simple qutip-jakelishman; ```; (that's just the name - you still do `import qutip`) but since it's on the ""wrong"" server, you first have to manually install `numpy` and `scipy`. When it's released properly on PyPI it'll handle the dependencies correctly - this is only an artifact of being on the testing server. Running that command will install a binary version with no compilation, and should work on any (reasonable) Linux machine, Mac (possibly not M1 chips) and Windows. It's possible you may get an error about `ndarray size changed ... this may indicate binary incompatibility` - if so, either force `numpy` up to the new 1.20 or down to 1.19 (whichever one you don't have). This was a breaking change in numpy 1.20. Per my reading of the release notes, it won't be an issue provided in the future we always build against `numpy>=1.20` (even when using lower `numpy` at runtime) because the new version updates a certain C-API macro to take into account the possibility of runtime variability. I have pushed an additional change to the build requirements to ensure this always happens. This has another knock-on effect: numpy 1.20 only supports Python 3.7+ (released June 2017). Currently, officially QuTiP supports Python 3.6, but I think it's reasonable to follow numpy's footsteps and **drop support for python 3.6 from qutip 5.0**. It's offset by gaining support for 3.9. (Apologies for all the force-pushing - whenever I want to re-run a test release on my own branch I have to temporarily add an extra commit to swap to the testing server, then force-push a rewind of this PR's branch.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429#issuecomment-770459519:632,error,error,632,https://qutip.org,https://github.com/qutip/qutip/pull/1429#issuecomment-770459519,2,"['down', 'error']","['down', 'error']"
Availability,"Note: it _did_ cause additional CodeClimate failures. I manually approved the run from within CodeClimate (you can see that in the output of the checks). Unfortunately the duplication checker still errors out on a lot of files, because it seems to choke on complex numbers, so we actually don't get detection on loads of our files (not to mention all our Cython files).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1577#issuecomment-862377861:44,failure,failures,44,https://qutip.org,https://github.com/qutip/qutip/pull/1577#issuecomment-862377861,2,"['error', 'failure']","['errors', 'failures']"
Availability,"Now it gives me one other error and a failure (and I have the impression the I can deal with the prior errors better than with the new one):. > > > import qutip.testing as qt; > > > qt.run(); > > > Qobj data ... ok; > > > Qobj type ... ok; > > > Qobj Hermicity ... ok; > > > Qobj shape ... ok; > > > Qobj addition ... ERROR; > > > Qobj subtraction ... ok; > > > Qobj multiplication ... ok; > > > Qobj division ... ok; > > > Qobj power ... FAIL; > > > Qobj negation ... ok; > > > Qobj equals ... ok; > > > Qobj getitem ... ok; > > > Qobj multiplication type ... ok; > > > Qobj conjugate ... ok; > > > Qobj adjoint (dagger) ... ok; > > > Qobj diagonals ... ok; > > > Qobj eigenenergies ... ok; > > > Qobj eigenstates ... ok; > > > Qobj expm ... ok; > > > Qobj full ... ok; > > > Qobj ket type ... ok; > > > Qobj bra type ... ok; > > > Qobj operator type ... ok; > > > Qobj superoperator type ... ok; > > > Sparse: Symmetric Permute ... ok; > > > Sparse: Nonsymmetric Permute ... ok; > > > Sparse: Symmetric Reverse Permute ... ok; > > > Sparse: Nonsymmetric Reverse Permute ... ok; > > > Sparse: Bandwidth ... ok; > > > Transform 2-level to eigenbasis and back ... ok; > > > Transform 10-level real-values to eigenbasis and back ... ok; > > > Transform 10-level to eigenbasis and back ... ok; > > > Transform 10-level imag to eigenbasis and back ... ok; > > > Check diagonalization via eigenbasis transformation ... ok; > > > brmesolve: harmonic oscillator, finite temperature ... ok; > > > brmesolve: harmonic oscillator, finite temperature, states ... ok; > > > brmesolve: harmonic oscillator, zero temperature ... ok; > > > brmesolve: Jaynes-Cummings model, zero temperature ... ok; > > > brmesolve: qubit ... ok; > > > correlation: comparing me and es for oscillator in coherent initial state ... ok; > > > correlation: comparing me and es for oscillator in steady state ... ok; > > > correlation: compare spectrum from eseries and pseudo-inverse methods ... ok; > > > Diagonalization of random two-",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42855884:26,error,error,26,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884,4,"['ERROR', 'error', 'failure']","['ERROR', 'error', 'errors', 'failure']"
Availability,"Now that #99 is coming along, I went back to this one, and it seems to fix the unit tests for the new superrep. There's still some failures left over from #99, but they don't seem to be caused by the chi matrix support.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/97#issuecomment-39652247:131,failure,failures,131,https://qutip.org,https://github.com/qutip/qutip/pull/97#issuecomment-39652247,1,['failure'],['failures']
Availability,Numpy is maintaining a list of project versions that support numpy 2 -- https://github.com/numpy/numpy/issues/26191. They're waiting of downstream packages to be ready before release. We could add ourselves there if we liked.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2421#issuecomment-2108725817:136,down,downstream,136,https://qutip.org,https://github.com/qutip/qutip/pull/2421#issuecomment-2108725817,1,['down'],['downstream']
Availability,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2085#issuecomment-1426693519:93,avail,available,93,https://qutip.org,https://github.com/qutip/qutip/pull/2085#issuecomment-1426693519,1,['avail'],['available']
Availability,"OK, good. I see no harm in keeping bicg and lgmres though, if only for backwards compatibility, also in case one encounters a bug in one of them the other could be tried (this just happend to me, bicg failed with an undefined variable error deep in the scipy code, but bicgstab worked). The defaults should be chosen carefully though, of course.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/214#issuecomment-52879383:235,error,error,235,https://qutip.org,https://github.com/qutip/qutip/pull/214#issuecomment-52879383,1,['error'],['error']
Availability,"Oh sorry, I thought you were reporting the sys gcc, not the conda one. Conda-forge and QuTiP are tested heavily against Ubuntu 14.04, so if any; platform works, it should be that one. As I originally suspected, the problem comes from the Cython code.; Specifically for the sparse matrix math. The fact that you can build it; yourself suggests a binary incompatibility. However, again, we test; against 14.04, so I am hard pressed to think about what the issue could be.; gdb might be able to hunt down where the dump occurs. On Mar 25, 2017 18:27, ""Michael Goerz"" <notifications@github.com> wrote:. Since it's the python from the conda package, I'm assuming that's because; Continuum created the linux package on a Redhat system. GCC is identified; like that on both of the workstations. But yeah, my guess would be that; there is some shared library that's compiled in a way that's incompatible; with the rest of the system. Is there any linux utility that would allow to; determine which library is being accessed at the moment of the crash? Some; invocation of ldd?. —; You are receiving this because you commented. Reply to this email directly, view it on GitHub; <https://github.com/qutip/qutip/issues/674#issuecomment-289249308>, or mute; the thread; <https://github.com/notifications/unsubscribe-auth/ABMPqT0F1WSzbd-hOyso9XQM0K5ldiiwks5rpbEBgaJpZM4MpI4Z>; .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-289250540:497,down,down,497,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-289250540,1,['down'],['down']
Availability,"Oh yeah, I totally agree with that perspective - it's in part why I've gone on my little crusade over the past couple of weeks to remove all the warnings and errors from all the build processes. What do you think a sensible strategy is for handling bug fixes that touches code that issues complaints? CodeClimate will typically restate its complaint if you change a line that contributes to it (e.g. here I changed a ""return"" statement in a function that has too many). I guess there's either ""maintainers state whether any particular PR is acceptable with a failing warning""; ""write a [skip ci] commit message"" (or whatever it's called); or ""any PR that touches complained-about code must fix the error"". Without any experience, to my mind it seems like points 1 and 2 are basically the same, but point 1 gives the power to override to maintainers, and point 2 to contributors - seems like version 2 works well in a business where ""everyone"" is trusted to modify the code, but in the distribued opensource world, maybe not? Point 3 seems ideal in principle, but it seems like it would make it very hard to have first-time contributors do anything with older parts of the library - there'd be a huge onus to completely overhaul functionality, even just to fix small stuff. I really don't know what recommended practices are here - I was roughly working under the assumption that we'd have maintainers be allowed to override complexity failures on occasion, but we've never really discussed it as far as I know, and I do recognise the problems with it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506#issuecomment-826673175:158,error,errors,158,https://qutip.org,https://github.com/qutip/qutip/pull/1506#issuecomment-826673175,3,"['error', 'failure']","['error', 'errors', 'failures']"
Availability,"Oh, I hadn't even thought of that issue. It seems like that could be filed as an upstream bug with someone else, perhaps? Where does it break down when you do have spaces in the username?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-150097897:142,down,down,142,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-150097897,1,['down'],['down']
Availability,"Oh, I just noticed that if I do this in a jupyter notebook, I get a somewhat useful error message from the server: ; ~~~; /Users/goerz/.pyxbld/temp.macosx-10.6-x86_64-3.5/pyrex/rhs72670.cpp:541:10: fatal error: 'complex' file not found; #include <complex>; ~~~",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932#issuecomment-436875871:84,error,error,84,https://qutip.org,https://github.com/qutip/qutip/issues/932#issuecomment-436875871,2,['error'],['error']
Availability,"Oh, yes, I increase the sampling rate. Indeed the correct result is recovered. Great thanks",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2253#issuecomment-1781240479:68,recover,recovered,68,https://qutip.org,https://github.com/qutip/qutip/issues/2253#issuecomment-1781240479,1,['recover'],['recovered']
Availability,"Ok no worries, lets merge it in there. -P. On Jul 14, 2017 06:36, ""Denis Vasilyev"" <notifications@github.com> wrote:. > The problem is that at the moment this error crashes the entire python; > kernel unexpectedly for a user without any messages. It can be very; > frustrating for a newbie.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/699#issuecomment-315348946>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqYXiiBT-6u_46schRBDuTuOPQ-isks5sN2C3gaJpZM4Nr1OC>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/699#issuecomment-315354193:159,error,error,159,https://qutip.org,https://github.com/qutip/qutip/pull/699#issuecomment-315354193,1,['error'],['error']
Availability,"Ok there are two issues here. 1. Scipy `atol` keyword argument has only been introduced in Scipy 1.1, the latest version. So we should bump it to 1.1 or should do nothing at all and ignore the warnings. 2. The tests are failing for the sparse eigenval function in [`qutip.tests.test_sp_eigs`](https://github.com/qutip/qutip/blob/master/qutip/tests/test_sp_eigs.py#L45). So there is something else which is breaking and this is some weird segmentation fault issue, see below. Note that the test itself was known to give trouble before. But for some reason, with Python 3+ and the latest scipy, everything works fine. . I am very much in favor of dropping support for Python 2.7 as even Numpy seems to be gearing up to drop Python 2.7. [Link](https://docs.scipy.org/doc/numpy/neps/dropping-python2.7-proposal.html). . With regards to the Scipy version, 1.1 seems okay as @nonhermitian mentioned, but it is the latest version though. . ```; @unittest.skipIf(_version2int(scipy.__version__) < _version2int('0.10'),; 'Known to fail on SciPy ' + scipy.__version__); def test_SparseHermValsVecs():; """"""; Sparse eigs Hermitian; """""" ; ```. Failure; ```; Sparse eigs Hermitian ... /home/travis/.travis/job_stages: line 57: 6793 Segmentation fault (core dumped) nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/865#issuecomment-392028033:451,fault,fault,451,https://qutip.org,https://github.com/qutip/qutip/pull/865#issuecomment-392028033,3,"['Failure', 'fault']","['Failure', 'fault']"
Availability,"Ok, I think I may have some more information. I am fairly sure that this is the same bug as #1120, #963 and #944 (which I believe was not actually ever fixed). I'm going to put the information here. My working theory is currently that this is a MKL bug on Mac. For posterity, let me just dump out some information. ## Things you should know if you've not worked with segfaults before. - `Abort trap 6`, `Segmentation fault` and a few other points can all be from the same cause; - Segmentation faults are typically caused by reading or writing to memory that isn't owned by our process. These often occur by reading/writing too much data to an allocated pointer, or trying to read/write a memory location where the location was read from uninitialised memory.; - Segfaults will not always reliably occur. It's _very_ difficult to prove that swapping tools ""fixes"" a segfault; it can often just move around enough allocations to mask the problem, not fix it.; - Python stack traces are likely to be almost entirely unreliable in these cases, because the segfault may often occur while the garbage collector is running, and that will happen at seemingly non-deterministic times.; - Running files in a slightly different interpreter, running within a test runner with differing numbers of files, doing different work before and after will all cause the segfault to change, and may mask it.; - As annoying as they are, segfaults are actually the _good_ case of the bug - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation comp",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:417,fault,fault,417,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,4,"['fault', 'mask', 'reliab']","['fault', 'faults', 'mask', 'reliably']"
Availability,"Ok, cool. I'll merge this and we can remove unused bits of `mcsolve` in a different PR. > 139 lines of only white space change in pulsegen.py!. I was just searching for `np.random` in the codebase and fixing files with that and pep8 errors, but I think there might be quite a few more hiding in the control module!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1575#issuecomment-862288347:233,error,errors,233,https://qutip.org,https://github.com/qutip/qutip/pull/1575#issuecomment-862288347,1,['error'],['errors']
Availability,"Ok, here it is:; btw the actual error (the last line) did not appear in the output file, but it does appear in the cmd window, so I typed it in. Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; correlation: legacy me and es for oscillator in coherent initial state ... ok; correlation: comparing me and es for oscillator in coherent initial state ... ok; correlation: comparing me and mc for driven oscillator in ground state ... Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; correlation: legacy me and es for oscillator in coherent initial state ... ok; correlation: comparing me and es for oscillator in coherent initial state ... ok; correlation: comparing me and mc for driven oscillator in ground state ... ERRO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:32,error,error,32,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['error'],['error']
Availability,"Ok, it looks like the tests are finally going to pass. As the number of commits suggests, this was a pain. Not because the code was wrong, but because:. 1) The default config used by Travis has GCC 4.6 which contains an error that happens to get raised in our case. Thus, had to move to the Trusty build stack. 2) Although it took forever to hunt down, it appears that when .pyx files are included as package data, Py27 may try to rebuild them upon calling **init**. This would throw a missing header error. Since these files are not needed after building, removing them clears up this issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/551#issuecomment-254497807:220,error,error,220,https://qutip.org,https://github.com/qutip/qutip/pull/551#issuecomment-254497807,3,"['down', 'error']","['down', 'error']"
Availability,"Ok, it seems that for some reason the 'mkl_info' key from the NumPy config info is no longer available in some miniconda installs. This took forever to find as I could not reproduce the error at home when using a fresh miniconda install. Now I look in the libs as well for BLAS info.; - Also removed matplotlib from the requirements as it is not a requirement. At least not at present.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/547#issuecomment-252450097:93,avail,available,93,https://qutip.org,https://github.com/qutip/qutip/pull/547#issuecomment-252450097,2,"['avail', 'error']","['available', 'error']"
Availability,"Ok, my bad, I specified the wrong folder. It works for me on windows (except for some tests that are known to be failing), although it takes a bit longer to solve the dependency. It might be very useful for downstream packages since these issues kept popping up.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1309#issuecomment-654983411:207,down,downstream,207,https://qutip.org,https://github.com/qutip/qutip/pull/1309#issuecomment-654983411,1,['down'],['downstream']
Availability,"Ok, the problem was a dumb change I made in the name of ""neatness"", and didn't test locally. For some reason I decided to change my original `cdef int _safe_multiply(int a, int b) except -1` into `except 0`, completely eschewing 50 proud years of C tradition _and_ forgetting that 0 is a normal, valid return value and can't be the error condition.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1436#issuecomment-774359132:332,error,error,332,https://qutip.org,https://github.com/qutip/qutip/pull/1436#issuecomment-774359132,1,['error'],['error']
Availability,"Ok. I wrote a test for it. The error message can be seen below. I will open a PR to resolve this. Thank you very much for raising the issue.; ```; qc = QubitCircuit(3); qc.add_gate(""CNOT"", targets=[1], controls=[0]); test_gate = Gate(""RZ"", targets=[1], arg_value = 1.570796,; arg_label=""P""); qc.add_gate(test_gate); qc.reverse_circuit(); ```. ```; ERROR: Reverse a circuit; ----------------------------------------------------------------------; Traceback (most recent call last):; dev/qutip/qutip/qip/circuit.py"", line 371, in reverse_circuit; temp.append(self.gates[self.N - i - 1]); AttributeError: 'QubitCircuit' object has no attribute 'append'; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/682#issuecomment-292698877:31,error,error,31,https://qutip.org,https://github.com/qutip/qutip/issues/682#issuecomment-292698877,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"On mac, testing #1241, I get:; `qutip/tests/test_cavityqed.py::Testcqed::test_numerical_evo Segmentation fault: 11`; Does this address it somewhay?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1251#issuecomment-624802081:105,fault,fault,105,https://qutip.org,https://github.com/qutip/qutip/pull/1251#issuecomment-624802081,1,['fault'],['fault']
Availability,One fail in some rand test. Just outside tolerance; Merging anyway,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/889#issuecomment-403459908:41,toler,tolerance,41,https://qutip.org,https://github.com/qutip/qutip/pull/889#issuecomment-403459908,1,['toler'],['tolerance']
Availability,One needs to run `echo export PATH='/usr/local/bin:$PATH' >> ~/.profile` to put the Homebrew Python in the PATH.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/279#issuecomment-65756811:18,echo,echo,18,https://qutip.org,https://github.com/qutip/qutip/pull/279#issuecomment-65756811,1,['echo'],['echo']
Availability,"Ooo, that's an annoying error in the CI run on 7732470 (though the actual issue is in f42d9f9). Looks like gcc (which I'm using on Mac) does something different to the default clang. Should be a straightforward solution.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1296#issuecomment-647628082:24,error,error,24,https://qutip.org,https://github.com/qutip/qutip/pull/1296#issuecomment-647628082,1,['error'],['error']
Availability,"Out of curiosity, are you using the default solver for `cvxpy`? If so, for a failing case, I would wonder if the failure would persist under other SDP solvers. . Another question I have is what the properties are of the random matrices that fail. Perhaps there are some consistent properties amongst those matrices that cause the failure. . I also agree with @nathanshammah about renaming from `dnorm` to `diamond_norm`, as I favor the latter.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/874#issuecomment-634659794:113,failure,failure,113,https://qutip.org,https://github.com/qutip/qutip/issues/874#issuecomment-634659794,2,['failure'],['failure']
Availability,"Out of interest, I had a look around. BSD-3 clause and GPL-v2 are ""compatible"", but only in the sense that the resultant _must_ be GPL-licensed (see [a bit of discussion here](https://opensource.stackexchange.com/questions/7180/can-i-combine-gplv2-and-bsd-3-clause-code-and-keep-the-bsd-permissions)). That probably means that we're technically not following the rules at the moment. That said, my understanding is that licences are just a general statement of rights that are given to everyone. If we get explicit permission from the creator of the library to include it in this library with a rider that this particular section cannot be copied or used in a public project except under GPL-v2 terms, then I think we'd be fine (except that might make it super annoying for downstream projects...). In general I think the primary reason that we can't release GPL'd code under a BSD licence is that the BSD licence doesn't have the restriction that source code must be made available. I _think_, however, that since the circuit drawing isn't an integral part of QuTiP, it would be allowed for us to distribute this portion as a stand-alone extension to QuTiP which is individually GPL'd, even if we couldn't get a relicensed version of the LaTeX package. It's always fine for private use to use GPL'd stuff.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1187#issuecomment-607176262:774,down,downstream,774,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-607176262,2,"['avail', 'down']","['available', 'downstream']"
Availability,"Perhaps I was a bit over-zealous (I thought I saw they both had ""raiseNotImplementedError""s) The 2op_2t has the not implemented error. I just ran something for 2op_1t though and it doesn't seem to work:. from qutip import *; from scipy import *. times = linspace(0,10.0,200); a = destroy(10); x = a.dag() + a; H = a.dag() \* a; psi0 = fock(10,1). corr1 = correlation_ss(H, times, [sqrt(0.5) \* a], x, x, rho0=psi0, solver=""me""); corr2 = correlation_ss(H, times, [sqrt(0.5) \* a], x, x, rho0=psi0, solver=""mc""). from pylab import *; plot(times, real(corr1), times, real(corr2)); xlabel(r'Time $t$'); ylabel(r'Correlation $\left<x(t)x(0)\right>$'); show()",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/206#issuecomment-53378743:128,error,error,128,https://qutip.org,https://github.com/qutip/qutip/pull/206#issuecomment-53378743,1,['error'],['error']
Availability,"Perhaps one could fallback to explicitly use `np.exp(1j * w *t)` in this case, or would you prefer defaulting to the numpy version and make the cmath version availably by explicitly choosing it?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/154#issuecomment-45703033:158,avail,availably,158,https://qutip.org,https://github.com/qutip/qutip/pull/154#issuecomment-45703033,1,['avail'],['availably']
Availability,Pinging @tehruhn for help in reviewing this.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1113#issuecomment-558986865:0,Ping,Pinging,0,https://qutip.org,https://github.com/qutip/qutip/pull/1113#issuecomment-558986865,1,['Ping'],['Pinging']
Availability,Pinging @tehruhn for help on this.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/958#issuecomment-558990244:0,Ping,Pinging,0,https://qutip.org,https://github.com/qutip/qutip/issues/958#issuecomment-558990244,1,['Ping'],['Pinging']
Availability,Pinging lots of people as reviewers just for fun and because it's a momentous occasion.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1857#issuecomment-1098007336:0,Ping,Pinging,0,https://qutip.org,https://github.com/qutip/qutip/pull/1857#issuecomment-1098007336,1,['Ping'],['Pinging']
Availability,"Py2.7 on Windows needs to always use the GCC. The VS version corresponding to Py27 does not support the functions that we need. The Py3.5 errors mean that my #define did not work. I have put up a different version, and will check it tomorrow at work.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/648#issuecomment-281248063:138,error,errors,138,https://qutip.org,https://github.com/qutip/qutip/pull/648#issuecomment-281248063,1,['error'],['errors']
Availability,Qobj equality has a tolerance option in qutip's settings:; ```; >>> import qutip as qt; >>> import qutip.settings as settings; >>> settings.atol = 1; >>> qt.destroy(1) == qt.destroy(1)+0.5; True; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/982#issuecomment-485976020:20,toler,tolerance,20,https://qutip.org,https://github.com/qutip/qutip/issues/982#issuecomment-485976020,1,['toler'],['tolerance']
Availability,"QobjEvo used to tidyup once right before 'compiling'. We could tidyup values smaller than `1e-15 * norm` to differentiate small object to numerical error.; In usual operations, `matmul`, `add` etc. if you can make them smarter then and keep a reasonable sparsity without tidyup, it could replace the Qobj's auto_tidyup. And in situation where this is a slowdown, `Dense` should be used.; We could change the default to False for the beta and see how users reacts, but I would not remove the option.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1349#issuecomment-680020737:148,error,error,148,https://qutip.org,https://github.com/qutip/qutip/issues/1349#issuecomment-680020737,1,['error'],['error']
Availability,"QuTiP: Quantum Toolbox in Python. ================================. Copyright (c) QuTiP team 2011 and later. Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed,; Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross, Asier; Galicia, Paul Menczel, and Patrick Hopf. Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco; Nori and Will Zeng. Original developers: R. J. Johansson & P. D. Nation. Previous lead developers: Chris Granade & A. Grimsmo. Currently developed through wide collaboration. See https://github.com/qutip; for details. QuTiP Version: 5.0.4. Numpy Version: 1.24.3. Scipy Version: 1.14.1. Cython Version: None. Matplotlib Version: 3.7.2. Python Version: 3.11.5. Number of CPUs: 16. BLAS Info: INTEL MKL. INTEL MKL Ext: False. Platform Info: Windows (AMD64). Installation path: C:\Users\sabhy\anaconda3\Lib\site-packages\qutip. ================================================================================. Please cite QuTiP in your publication. ================================================================================. For your convenience a bibtex reference can be easily generated using; `qutip.cite()`. On Wed, Sep 25, 2024 at 4:09 AM Paul ***@***.***> wrote:. > Could you please include the output of the command qutip.about()? Because; > your code does not give an error on my setup.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/2536#issuecomment-2372741589>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJVIYE6VAXW7QIVMRM4WQTDZYILLZAVCNFSM6AAAAABOYAR32CVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDGNZSG42DCNJYHE>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2536#issuecomment-2373078683:1350,error,error,1350,https://qutip.org,https://github.com/qutip/qutip/issues/2536#issuecomment-2373078683,1,['error'],['error']
Availability,"Qutip `essolve` and QOtoolbox's `ode2es` both work by diagonalizing `L`. Once the eigenstates are computed, the time evolution is mostly free.; `mesolve` solve the ODE system one time increment at a time. So for any long enough `tlist`, `essolve` will be faster. Also, unless you compiled Qutip yourself with the openmp option, `mesolve` will run on one cpu, while the eigen solver run in parallel. With 16 cpus and the size of your problem, not running in parallel will slow you down. With some luck, the next major version release will be distributed compiled with openmp. . With the present release, if you compile with openmp (https://qutip.org/docs/latest/installation.html#direct-setuptools-source-builds) you should get better time, but correlation will still not be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1591#issuecomment-870937294:480,down,down,480,https://qutip.org,https://github.com/qutip/qutip/issues/1591#issuecomment-870937294,1,['down'],['down']
Availability,"RESOLVED. First, I changed to a source install inside the anaconda site-packages folder instead of pulling from the site. I was still getting the error, but I found this similar issue at https://github.com/qutip/qutip/pull/311, which suggested I remove the fpmath calls in a couple of the c compiler setup.py files. In particular, the setups in the cy and control subdirectories (see links). For instance, something like . ```; extra_compile_args=['-w', '-ffast-math',; '-O3', '-march=native, '-mfpmath=sse']; ```. to. ```; extra_compile_args=['-w', '-ffast-math',; '-O3', '-march=native'], #, '-mfpmath=sse'; ```. For some reason, this wasn't working either, so I decided to try changing; -march=native. to; -march=x86-64. , and that did the trick!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/409#issuecomment-165934550:146,error,error,146,https://qutip.org,https://github.com/qutip/qutip/issues/409#issuecomment-165934550,1,['error'],['error']
Availability,"Reducing to `scipy==1.10.1` gave me a different error, `AttributeError: partially initialized module 'qutip' has no attribute 'settings' (most likely due to a circular import)`. using:; ```; qutip 4.7.1; scipy 1.10.1; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2182#issuecomment-1607754914:48,error,error,48,https://qutip.org,https://github.com/qutip/qutip/issues/2182#issuecomment-1607754914,1,['error'],['error']
Availability,"Redundant to #1768, we will keep that one for those 2 files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1769#issuecomment-1015730642:0,Redundant,Redundant,0,https://qutip.org,https://github.com/qutip/qutip/pull/1769#issuecomment-1015730642,1,['Redundant'],['Redundant']
Availability,"Removing list and forcing dict does not feels making things nicer... Being forced to use dict is mostly a nuisance for me. Presently we support both list ans dict output without much issues, there are very few place that would have issue supporting multiple interfaces. (I can only think of `plot_expectation`.). But how about using `namedtuple`?. It act as a list for loop and numpy, but elements can be called by both the number and name, and I like having result's output somewhat immutable. The biggest issue is that we must provide field names for list inputs... For MC, if e_ops callable return weird things, they will have to choose the option to store all trajectories instead of averaging the result. If they ask for the average or standard derivation of a dict, they will and should get an error, the best we should do is making this error message useful. Custom reduce function could be doable, but probably be a mess, especially if we need one for both `mean` and `std`... So unless someone present a good use case for it, I don't plan going that way.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1907#issuecomment-1141402988:800,error,error,800,https://qutip.org,https://github.com/qutip/qutip/pull/1907#issuecomment-1141402988,2,['error'],['error']
Availability,"Repeat the test 20 times and accept if at least 19 pass?. I remember adapting the tests when numpy's rng changed. 1~2 where failing. I believe that the tests pass over 99% with a random seed, but with the number of tests, it's not enough. I did not realize the test tolerance was smaller than the test one. But the solver tolerance is for the state itself, not expectation values and other scalars obtained from them. The test is not to check numerical error. When there is an mistake in the code, the error is orders of magnitude greater. Not sure if using the sovler's tol is right, but probably better than using a number that just seems to work.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249#issuecomment-625307705:266,toler,tolerance,266,https://qutip.org,https://github.com/qutip/qutip/pull/1249#issuecomment-625307705,4,"['error', 'toler']","['error', 'tolerance']"
Availability,"Repeating just changes the probability of failure, rather than actually detecting whether it was a rare fail, and `mesolve` tests aren't always the fastest, so repetition here isn't great. For simple unitary qubit operations, I think it should be easy enough to work out how the tolerance translates. It's difficult to say that if there's a numerical error then the error will be much greater - I caught some errors in the `test_gates.py` (I think) that were sneaking through because the tolerances were set too high. It's probably best to keep as tight a tolerance as is reasonable - here I think `2 * qutip.Options.rtol` would always be correct if the numerics are.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249#issuecomment-625344751:42,failure,failure,42,https://qutip.org,https://github.com/qutip/qutip/pull/1249#issuecomment-625344751,7,"['error', 'failure', 'toler']","['error', 'errors', 'failure', 'tolerance', 'tolerances']"
Availability,"Right now there's no way to make `Qobj` use a dense representation, but that is something that's been discussed elsewhere. If you just want to use `qutip` functions to build up a system then do the heavy lifting using `numpy`, you can convert a `Qobj` to a dense array with `Qobj.full` (e.g. `qutip.qeye(10000).full()`). Your question certainly did spot a place where the error message could be improved, though!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1204#issuecomment-601795001:372,error,error,372,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-601795001,1,['error'],['error']
Availability,"Right now, QuTiP doesn't support passing `c_ops` as an arbitrary function to `mcsolve`. @Ericgig might have more ideas for other things you may try, but in general to us `mcsolve` you need to have your collapse operators as constant matrices multiplied by time-dependent scalars. Depending on your collapse operators, you may be able to move to an interaction picture such that the collapse operators lose their time-dependence, or move to being scalars multiplied by constant matrices. Otherwise, if your system size and available memory permit, you can use `mesolve` to directly solve the Lindblad master equation for the full density matrix rather than single trajectories.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1398#issuecomment-739026681:522,avail,available,522,https://qutip.org,https://github.com/qutip/qutip/issues/1398#issuecomment-739026681,1,['avail'],['available']
Availability,"Running `nosetests` in a conda environment in Python 3.6 on a Mac High Sierra 10.13.6 gives; ```. /Users/nathanshammah/github/qutip/qutip/tests/test_metrics.py:300: DeprecationWarning: invalid escape sequence \oegmentation fault: 11; ``` ; and kils the tests. ; If I understand correctly it refers to line 300 in test_metrics, which has a new hellinger metric test by @wrzadkow . Could it be that using ""for _ in range(10):"" is a problem?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-496383789:778,fault,fault,778,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-496383789,1,['fault'],['fault']
Availability,"SNOT and Toffoli can be resolved to [CNOT, RX, RY]. But I think this issue is proposing to resolve other gates to Toffoli and H, which is not available currently. This is indeed something very useful. But this issue is quite old and I'm not sure if any of that code can still be used? @quantshah In particular, the algorithm decomposes arbitrary gate to Toffoli+others.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/614#issuecomment-809444640:142,avail,available,142,https://qutip.org,https://github.com/qutip/qutip/issues/614#issuecomment-809444640,1,['avail'],['available']
Availability,"SX.sdk/usr/include/c++/v1/complex:235:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:642:26: error: no template named 'numeric_limits'; bool _FloatBigger = (numeric_limits<_FloatT>::digits > numeric_limits<_IntT>::digits),; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:642:60: error: no template named 'numeric_limits'; bool _FloatBigger = (numeric_limits<_FloatT>::digits > numeric_limits<_IntT>::digits),; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:643:18: error: no template named 'numeric_limits'; int _Bits = (numeric_limits<_IntT>::digits - numeric_limits<_FloatT>::digits)>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:643:50: error: no template named 'numeric_limits'; int _Bits = (numeric_limits<_IntT>::digits - numeric_limits<_FloatT>::digits)>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:648:17: error: no template named 'numeric_limits'; static_assert(numeric_limits<_FloatT>::radix == 2, ""FloatT has incorrect radix"");; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:25: error: no template named 'numeric_limits'; return _FloatBigger ? numeric_limits<_IntT>::max() : (numeric_limits<_IntT>::max() >> _Bits << _Bits);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:58: error: no template named 'numeric_limits'; return _FloatBigger ? numeric_limits<_IntT>::max() : (numeric_limits<_IntT>::max() >> _Bits << _Bits);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cm",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583:1157,error,error,1157,https://qutip.org,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583,1,['error'],['error']
Availability,"Same for me :; I rolled back to previous mkl and qutip by running:; conda install mkl=2018.0.3; conda install qutip=4.1.3. Now my programs calling steadystate work again but I also get 1 error related to mkl and steady when running the full test. Denis. De : zhang [mailto:notifications@github.com]; Envoyé : samedi 28 septembre 2019 09:33; À : qutip/qutip <qutip@noreply.github.com>; Cc : VION Denis <denis.vion@cea.fr>; Comment <comment@noreply.github.com>; Objet : Re: [qutip/qutip] Error with conda MKL2019.0 on Windows (#975). This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:. File ""C:\Users\ym24chen\Anaconda3\. x = lu.solve(b, verbose=verbose). File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve. np_x, np_error). OSError: exception: access violation reading 0x0000000000000008. envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve. Env info:. QuTiP Version: 4.3.1. Numpy Version: 1.15.4. Scipy Version: 1.1.0. Cython Version: 0.29.6. Matplotlib Version: 3.0.3. Python Version: 3.7.2. Number of CPUs: 8. BLAS Info: INTEL MKL. OPENMP Installed: False. INTEL MKL Ext: True. Platform Info: Windows (AMD64). Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip. ==============================================================================. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/975?email_source=notifications&email_token=ADBRKX2X6OKO5WY3XBOXMFLQL4CEJA5CNFSM4HFQJOJ2YY3PNVWWK3TUL52",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975#issuecomment-536288655:187,error,error,187,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536288655,3,"['Error', 'error', 'rollback']","['Error', 'error', 'rollback']"
Availability,"Seeing this on `5.0.0.dev` with VSCode Insiders. Calling ; ```python; import qutip as qt; qt.fock(2, 0)._repr_latex_(); ``` ; yields `""Quantum object: dims=[[2], [1]], shape=(2, 1), type='ket'\\begin{equation*}\\left(\\begin{array}{*{11}c}1\\\\0\\end{array}\\right)\\end{equation*}""`. So the missing ""equation"" asterisk is being interpreted as markdown when displayed I think, and matching an asterisk in the column alignment argument `*{11}c`.; ```python; from IPython.display import display, Math; Math(qt.fock(2, 0)._repr_latex_()); ```; results in ```ParseError: KaTeX parse error: {equation*} can be used only in display mode.```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2172#issuecomment-1828518028:579,error,error,579,https://qutip.org,https://github.com/qutip/qutip/issues/2172#issuecomment-1828518028,1,['error'],['error']
Availability,"Seems to be a problem with the Cython pyximport. Running a py3 pyx file with just print(""hello world"") ; Runs and returns the text, but then crashes python.exe. Using Anaconda py3 on win7 x64. > On Oct 16, 2015, at 06:51, Alexander Pitchford notifications@github.com wrote:; > ; > Ok, here it is:; > btw the actual error (the last line) did not appear in the output file, but it does appear in the cmd window, so I typed it in.; > ; > Transform 2-level to eigenbasis and back ... ok; > Transform 10-level real-values to eigenbasis and back ... ok; > Transform 10-level to eigenbasis and back ... ok; > Transform 10-level imag to eigenbasis and back ... ok; > Consistency between transformations of kets and density matrices ... ok; > Check diagonalization via eigenbasis transformation ... ok; > brmesolve: simple qubit ... ok; > brmesolve: c_ops alone ... ok; > brmesolve: c_ops with a_ops ... ok; > brmesolve: harmonic oscillator, zero temperature ... ok; > brmesolve: harmonic oscillator, finite temperature ... ok; > brmesolve: harmonic oscillator, finite temperature, states ... ok; > brmesolve: Jaynes-Cummings model, zero temperature ... ok; > correlation: legacy me and es for oscillator in coherent initial state ... ok; > correlation: comparing me and es for oscillator in coherent initial state ... ok; > correlation: comparing me and mc for driven oscillator in ground state ... Transform 2-level to eigenbasis and back ... ok; > Transform 10-level real-values to eigenbasis and back ... ok; > Transform 10-level to eigenbasis and back ... ok; > Transform 10-level imag to eigenbasis and back ... ok; > Consistency between transformations of kets and density matrices ... ok; > Check diagonalization via eigenbasis transformation ... ok; > brmesolve: simple qubit ... ok; > brmesolve: c_ops alone ... ok; > brmesolve: c_ops with a_ops ... ok; > brmesolve: harmonic oscillator, zero temperature ... ok; > brmesolve: harmonic oscillator, finite temperature ... ok; > brmesolve: harmonic osci",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:315,error,error,315,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['error'],['error']
Availability,"Seems to be back with matplotlib 3.4.1 in my case - exactly same error, very annoying (from matplotlib's site). QuTiP Version: 4.6.0; Numpy Version: 1.20.2; Scipy Version: 1.6.3; Cython Version: 0.29.23; Matplotlib Version: 3.4.1; Python Version: 3.8.8; Number of CPUs: 32; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/XXX/anaconda3/envs/qutip/lib/python3.8/site-packages/qutip. raise Exception(""Could not convert string to importable function, ""; Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_xxxxx.pyx",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1326#issuecomment-832382977:65,error,error,65,https://qutip.org,https://github.com/qutip/qutip/issues/1326#issuecomment-832382977,1,['error'],['error']
Availability,"Shahnawaz - I think you had some thoughts about merging in the documentation? It'd be good to know what you think about this strategy as well. I haven't attempted to change any structure of the documentation in this PR; it's building reliably (evidenced by the GH Action), and we can make further overhauls no matter which repo it's based in.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1513#issuecomment-830096853:234,reliab,reliably,234,https://qutip.org,https://github.com/qutip/qutip/pull/1513#issuecomment-830096853,1,['reliab'],['reliably']
Availability,"Similar test failures are affecting #429, with `qutip.tests.test_subsys_apply` now raising assertion errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/428#issuecomment-183612808:13,failure,failures,13,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-183612808,2,"['error', 'failure']","['errors', 'failures']"
Availability,"Since this branch is unfortunately rather old, I didn't want to squash the early commits, but the most recent batch have been squashed down to just one. I think that this feature is now in a state I feel comfortable with reviewing, so I'll add the label. In the future, I would like to generalize the difference of unitaries optimization, but I think that will take a bit of Cython work to implement.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/456#issuecomment-198632131:135,down,down,135,https://qutip.org,https://github.com/qutip/qutip/pull/456#issuecomment-198632131,1,['down'],['down']
Availability,"So I did just that, and the ""overloaded method"" error doesn't happen again, which is good.; But installation still fails on other errors, I believe related to NumPy:. ```; ./setup.py install --user; Compiling qutip/cy/spmatfuncs.pyx because it changed.; Compiling qutip/cy/stochastic.pyx because it changed.; Compiling qutip/cy/sparse_utils.pyx because it changed.; Compiling qutip/cy/graph_utils.pyx because it changed.; Compiling qutip/cy/interpolate.pyx because it changed.; Compiling qutip/cy/spmath.pyx because it changed.; Compiling qutip/cy/heom.pyx because it changed.; Compiling qutip/cy/math.pyx because it changed.; Compiling qutip/cy/spconvert.pyx because it changed.; Compiling qutip/cy/ptrace.pyx because it changed.; Compiling qutip/cy/testing.pyx because it changed.; Compiling qutip/cy/brtools.pyx because it changed.; Compiling qutip/cy/brtools_testing.pyx because it changed.; [ 1/13] Cythonizing qutip/cy/brtools.pyx. Error compiling Cython file:; ------------------------------------------------------------; ... DTYPE = np.float64; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:2:10: cimported module has no attribute 'float64'. Error compiling Cython file:; ------------------------------------------------------------; ... DTYPE = np.float64; ctypedef np.float64_t DTYPE_t. ITYPE = np.int32; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:5:10: cimported module has no attribute 'int32'. Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.float64_t DTYPE_t. ITYPE = np.int32; ctypedef np.int32_t ITYPE_t. CTYPE = np.complex128; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:8:10: cimported module has no attribute 'complex128'. Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.int32_t ITYPE_t. CTYPE = np.complex128; ctypedef np.co",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-317495769:48,error,error,48,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-317495769,3,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"So I ran the tests with `pytest -m ""not slow""` (on my current #1181 branch) with profiling on, so I've got the following additional slow tests that we could mark to cut down the total time. Here are the tests that took longer than 1 second:; ```; 35.75s call test_stochastic_me.py::test_ssesolve_feedback; 33.73s call test_stochastic_se.py::test_ssesolve_feedback; 25.80s call test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str; 24.41s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string]; 21.83s call test_propagator.py::testPropHOStrTd; 19.95s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsStrList; 17.73s call test_qobjevo.py::test_QobjEvo_expect_rho; 16.52s call test_stochastic_me.py::test_smesolve_homodyne; 15.79s call test_qobjevo.py::test_QobjEvo_call; 12.67s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; 12.37s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; 11.43s call test_qobjevo.py::test_QobjEvo_mul_mat; 10.89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_cont",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:169,down,down,169,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373,1,['down'],['down']
Availability,"So Travis CI says there's an error in smesolve, which I haven't touched. :/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1100#issuecomment-540438166:29,error,error,29,https://qutip.org,https://github.com/qutip/qutip/pull/1100#issuecomment-540438166,1,['error'],['error']
Availability,"So after starting with a fresh install of Anaconda and going through the steps described in https://qutip.org/docs/4.1/installation.html to install through conda-forge and conda, I am still seeing the same behaviour. However I have found a workaround that gives me exactly what I want. During my debugging I ending up adding the `b.make_sphere()` command, this seems to have caused the extra set of axes to keep appearing. I found that by omitting the `make_sphere` command and just replacing `b.show()` with `plt.show()` worked perfectly.; Heres my MWE; ```python; import qutip; import matplotlib.pyplot as plt; b=qutip.Bloch(). b.add_vectors([1,0,0]); b.render(). plt.show(); ```. My `qutip.about()` output is:; ```; QuTiP Version: 4.6.2; Numpy Version: 1.20.3; Scipy Version: 1.6.2; Cython Version: 0.29.24; Matplotlib Version: 3.3.4; Python Version: 3.9.5; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\Chester\.conda\envs\qutip-env\lib\site-packages\qutip; ```. Hopefully this helps someone. @jakelishman I tried interactive mode toggling when this problem first occurred as that's what the behaviour reminded me of too. Gave it another go with my example in this text (replacing the `plt.show()` with `b.show()`) but still same behaviour.; I think it's to do with something similar to the problem/solution in https://stackoverflow.com/questions/12369693/how-to-make-the-plot-not-disappear/12905317 as `self.fig` within the Bloch class is initialised in `render()` (and then called in `show()`) a similar way. But I am not familiar enough with the qutip backend to know if this is an error, especially as this does not seem like a common issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1616#issuecomment-883619754:1691,error,error,1691,https://qutip.org,https://github.com/qutip/qutip/issues/1616#issuecomment-883619754,1,['error'],['error']
Availability,"So the error is because QuTiP uses 32 bit int indices. This is because; that was all the scipy supported at the time. This can be updated to; support 64 ints as well, but is a bit of work to do. On Fri, Apr 6, 2018, 08:53 Xavier <notifications@github.com> wrote:. > Thanks for your quick reply. I am using multiple profilers at the moment,; > but albeit large, the RAM usage may not be the main problem. I am running; > the program on a 2 TB VM as well, and it looks like the maximum of N before; > the program crashes is the same. (N=115 crashes, but there should be enough; > RAM available for this parameter. Now running for N=112.); >; > The specific error I get is the following one:; >; > *Traceback (most recent call last):*; > File ""SPI_V5.py"", line 197, in; > H_BS1=-BS_1/(2.*Dt_BS1)*(a_UPs.dag()*a_LOWs+a_UPs*a_LOWs.dag()+a_UPi.dag(); > *a_LOWi+a_UPi*a_LOWi.dag()); > File ""/usr/local/lib/python3.5/dist-packages/qutip/qobj.py"", line 414, in; > *add*; > out.data = self.data + other.data; > File ""/usr/local/lib/python3.5/dist-packages/scipy/sparse/base.py"", line; > 375, in *add*; > return self._add_sparse(other); > File ""/usr/local/lib/python3.5/dist-packages/scipy/sparse/compressed.py"",; > line 342, in _add_sparse; >; > return self._binopt(other, '*plus*'); > File ""/usr/local/lib/python3.5/dist-packages/qutip/fastsparse.py"", line; > 115, in _binopt; > A = fast_csr_matrix((data, indices, indptr), dtype=data.dtype,; > shape=self.shape); > File ""/usr/local/lib/python3.5/dist-packages/qutip/fastsparse.py"", line; > 60, in *init*; >; > *raise TypeError('fast_csr_matrix allows only int32 indices.') TypeError:; > fast_csr_matrix allows only int32 indices.*; >; > To me, it seems that it is due to a bad type of integer passed to a QuTiP; > function. Do you agree?; > I admit that it is hard to solve a problem without having the code; > available, but perhaps you know more of this specific TypeError in QuTiP.; >; > Best regards,; > Xavier; >; > —; > You are receiving this because yo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/845#issuecomment-379268268:7,error,error,7,https://qutip.org,https://github.com/qutip/qutip/issues/845#issuecomment-379268268,3,"['avail', 'error']","['available', 'error']"
Availability,"So this test has had a failure in `test_diag_liou_mult` again, despite the merging of #1474. I still believe the fix in that issue is correct in principle, but I'll investigate in more detail to determine the tightest allowable tolerances in another issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1480#issuecomment-811934830:23,failure,failure,23,https://qutip.org,https://github.com/qutip/qutip/pull/1480#issuecomment-811934830,2,"['failure', 'toler']","['failure', 'tolerances']"
Availability,"So, in summary, this issue affects only MacOS running Python 3.8. As it is not possible to handle seg faults (because Python crashes), then I think we should, for now, identify which tests we know will seg fault and fail them with a message to say something like ""known fault with Python 3.8 on MacOS"". This way the rest of the tests will complete. We can they work on a proper fix, for which we should raise another issue. I am working on creating a MacOS test platform for myself. In the meantime, if anyone can isolate which tests will cause a seg fault, that would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-598830257:102,fault,faults,102,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-598830257,4,['fault'],"['fault', 'faults']"
Availability,"So, now tests fail for Qobj subtraction, when running `nose.run(defaultTest=""qutip.tests"", argv=['nosetests', '-v'])` but they run just fine when running `nose.run(defaultTest=""qutip.tests.test_qobj"", argv=['nosetests', '-v'])`. Note that before, for the metrics, the error was occuring even if only `nose.run(defaultTest=""qutip.tests.test_metrics"", argv=['nosetests', '-v'])` was run. It might be something ill allocated due to the order of how tests are run. . I also wonder if there is an issue with pycache. Also, in my folder there are both py36.pyc and py37.pyc files. Here there is a discussion that might be related (?); https://github.com/pytest-dev/pytest/issues/200#issuecomment-395816011",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-496376661:268,error,error,268,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-496376661,1,['error'],['error']
Availability,"So, while I agree that having a flexible storage format is a good way to go, the truth of the matter is that no one has time to implement such a big change. SciPy supports both 32 and 64-bit ints, and checks to see which ones are needed at runtime. e.g. a tensor product of two sparse matrices with int32, may need int64 in the result since their shape is larger. We could also do a similar thing, but it is a lot of work. The reason why we no longer use standard SciPy sparse objects is: 1) They tend to have a sizeable overhead when being created and/or manipulated do to redundant safety checks. 2) Many of the sparse operations are not well optimized. Because SciPy supports many different sparse formats, they had to generalize many of their core operations, making them slower. For example, the sparse kronecker product first converts to COO format, does the tensoring, and then converts back to the original format. Our method is much faster. Supporting more than just the current CSR format is also problematic. As already mentioned, there would be type checks, conditionals, and format conversions everywhere. e.g. what happens when DIA * CSR. As usual, available time is the limiting factor here. Support for both int32 and int64 is not that hard, but would take some time. Just int64 would make smaller matrices larger, but would allow for much greater system dimensions. In this later case, it would be a simple switch `int` -> `int64` and `size_t` -> `uint64` in the Cython code, and the fastsparse module (plus probably other places.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/850#issuecomment-384005667:574,redundant,redundant,574,https://qutip.org,https://github.com/qutip/qutip/issues/850#issuecomment-384005667,2,"['avail', 'redundant']","['available', 'redundant']"
Availability,Some examples I found interesting:. PyPI - Downloads (monthly) ![PyPI - Downloads](https://img.shields.io/pypi/dm/qutip.svg?style=plastic). GitHub code size ![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/qutip/qutip.svg?style=plastic). PyPI - Python Version ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/qutip.svg?style=plastic). Code Climate maintainability ![Code Climate maintainability](https://img.shields.io/codeclimate/maintainability/qutip/qutip.svg?style=plastic). Conda platform support ![Conda](https://img.shields.io/conda/pn/conda-forge/qutip.svg?style=plastic). GitHub contributors ![GitHub contributors](https://img.shields.io/github/contributors-anon/qutip/qutip.svg?style=plastic). PyPI status ![PyPI - Status](https://img.shields.io/pypi/status/qutip.svg?style=plastic). Closed Pull Requests ![GitHub closed pull requests](https://img.shields.io/github/issues-pr-closed/qutip/qutip.svg?style=plastic). Already on Readme.md:. Travis status ![Travis (.org)](https://img.shields.io/travis/qutip/qutip.svg). Coveralls github ![Coveralls github](https://img.shields.io/coveralls/github/qutip/qutip.svg?style=plastic),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/983#issuecomment-484765518:43,Down,Downloads,43,https://qutip.org,https://github.com/qutip/qutip/issues/983#issuecomment-484765518,2,['Down'],['Downloads']
Availability,Some of these points have been addressed by #1065. The rest could become also a [project](https://github.com/qutip/qutip/projects; ) and be added also to the wiki as available project.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/441#issuecomment-573581279:166,avail,available,166,https://qutip.org,https://github.com/qutip/qutip/issues/441#issuecomment-573581279,1,['avail'],['available']
Availability,"Somehow, rerunning the Jupyter Notebook or python from bash after reactivating the conda environment gives an error when importing qutip. ; ```; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-1-69863217b56d> in <module>; 1 import numpy as np; ----> 2 from qutip import *. ~/github/qutip/qutip/__init__.py in <module>; 205 from qutip.mesolve import *; 206 from qutip.sesolve import *; --> 207 from qutip.mcsolve import *; 208 from qutip.stochastic import *; 209 from qutip.essolve import *. ~/github/qutip/qutip/mcsolve.py in <module>; 46 from qutip.qobjevo import QobjEvo; 47 from qutip.parallel import parfor, parallel_map, serial_map; ---> 48 from qutip.cy.mcsolve import CyMcOde, CyMcOdeDiag; 49 # cy_mc_run_ode = None; 50 from qutip.sesolve import sesolve. ~/github/qutip/qutip/cy/cqobjevo_factor.pxd in init qutip.cy.mcsolve(). ValueError: qutip.cy.cqobjevo_factor.CoeffFunc size changed, may indicate binary incompatibility. Expected 40 from C header, got 32 from PyObject. ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/969#issuecomment-489535565:110,error,error,110,https://qutip.org,https://github.com/qutip/qutip/pull/969#issuecomment-489535565,1,['error'],['error']
Availability,Someone asked this question on [stackexchange](https://stackoverflow.com/questions/42178706/python-animation-funcanimation-error-object-is-not-iterable). You just have to set `blit=False` in the `FuncAnimation` call and this example will work again.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/836#issuecomment-398766805:123,error,error-object-is-not-iterable,123,https://qutip.org,https://github.com/qutip/qutip/issues/836#issuecomment-398766805,1,['error'],['error-object-is-not-iterable']
Availability,Something is way off about that test failure again... Is it possible Travis isn't cleaning up properly? I can't reproduce the failure (it's also clearly nothing to do with this change) and the error message doesn't match up. If anything it looks like the error message is coming from a hash collision inside QobjEvo _maybe_?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1221#issuecomment-605533672:37,failure,failure,37,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-605533672,4,"['error', 'failure']","['error', 'failure']"
Availability,"Sorry I didn't get round to commenting on this PR sooner. Since it's now come up in #1579 around the subject of sorting out licensing in general in QuTiP, let me also note some stuff about that here. #1579 proposes to remove all individual-file licence text, because it is in general redundant, and makes it harder for us to centrally manage our licence. There is some concern (mostly mine), that it will be a little difficult for us to manage additional code which does not sign over copyright to the QuTiP admin team; if we accept it, we will have to keep the notice in perpetuity. This will pose a bit of a Theseus' ship problem for us if we ever want to re-organise the file that contains this code; after how many modifications is the code no longer NASA's, but QuTiP's? As long as it's not _ours_, we can't separate it out into different files, or mix it with other code (say additional implementations). I'm definitely not a lawyer, but I'm worried that will cause us code organisation problems in the future, and while the licence would give us permission to improve the code, it's the reorganisation I'm worried about. Secondly, about the code itself: this sort of local operation is something I absolutely would like to include, but I'm not certain that the form it's in right now is the best, general way to do it. I think this is part of much larger discussion about how to handle tensor networks - for example, at the moment, `targets` is fine for states and operators, but it won't work for superoperators. I'm not sure that this is solvable in an ergonomic way with QuTiP's current dimensions specifiers, but it's something we're definitely going to look into after the initial release of 5.0. Also, there are already several disparate functions in QuTiP that provide sort-of similar functionality, and I think we need to have a proper go at tidying them all up into one cohesive interface. This includes `subsystem_apply` (most similar to this), but also `ptrace` and `partial_tranpose",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566:284,redundant,redundant,284,https://qutip.org,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566,1,['redundant'],['redundant']
Availability,"Sorry for the delay on the docstrings and so on, I think all suggestions should be incorporated now. However, thanks to Paul's suggestion of adapting the tutorial 1e. I realized that I made a ""mistake from the very beggining"", namely the function used to fit the correlation function is only good if the imaginary part of the spectral density is 0 at t=0, because I'm using. $C(t)=\sum_{k}a_{k}e^{-b_{k} t}e^{i c_{k} t}$. so . $C_{R}(t)=\sum_{k}a_{k}e^{-b_{k} t}cos(c_{k} t)$. $C_{I}(t)=\sum_{k}a_{k}e^{-b_{k} t}sin(c_{k} t)$. No matter how many terms I take $C_{I}(0)=0$. I should have realized before but this can be bypassed by excluding $t=0$ from the fit, and starting at a small t, you get a decent fit, as long as you don't look at C(0), and I never check for these situations before. The results of doing this are pretty decent, but updating tutorial 1e I realized it required higher calculation times for the HEOMSolver when compared to using another ansatz for the correlation function, since solving is the expensive bit then I changed the code use another function for fitting. $C(t)=\sum_{k}(a_{k}+i d_{k})e^{-b_{k} t}e^{i c_{k} t}$. The downside is that since this function has 4 parameters, it required changing other functions as well, luckily only functions starting with _, hopefully this won't delay the PR too much. I updated the tutorials with this as well, and added a bit so that passing the parameters for the fitting is easier (after this comment), if the change is not desirable we can just go back to the commit before this comment",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2260#issuecomment-1925945764:1151,down,downside,1151,https://qutip.org,https://github.com/qutip/qutip/pull/2260#issuecomment-1925945764,1,['down'],['downside']
Availability,"Sorry for the delayed reply, here is what I've been trying to do:. N = 8; max_excitation = 1 ; num_levels = 2; dims = [num_levels] * N`. ann_operators = enr_destroy(dims, excitations = max_excitation); w_r = 2 * np.pi * 5; w = np.array([w_r] * N). J_r = 2 * np.pi * 0.4; J_t2 = 1.353 * J_r; J_t1 = 1.035 * J_r. J = np.array([J_t2, J_t1] + [J_r] * (N-5) + [J_t1, J_t2]). kappa = 2.92 * J_r; drive_amp = 2 * np.pi * 0.0001. mod_freq = 2 * np.pi * 0.87; mod_amp = mod_freq * 0.8. t = []. detuning_list = 2 * np.pi * np.linspace(-1, 1, 501). for detuning in detuning_list:; drive_w = (w_r - detuning). H_r = 0; for i, a in enumerate(ann_operators):; H_r += (w[i] - drive_w) * a.dag() * a. H_int = 0; for i in range(len(ann_operators)-1):; H_int += J[i] * (ann_operators[i].dag() * ann_operators[i+1] + ann_operators[i+1].dag() * ann_operators[i]). H_d = -1j * drive_amp * (ann_operators[0] - ann_operators[0].dag()). H = H_r + H_int + H_d; c_ops = [np.sqrt(kappa)*ann_operators[0], np.sqrt(kappa)*ann_operators[-1]]; Op_t = mod_amp * ann_operators[6].dag() * ann_operators[6]. rho_ss = steadystate_floquet(H, c_ops, Op_t, w_d = mod_freq). a_out = np.sqrt(kappa) * expect(ann_operators[-1], rho_ss); t.append(np.sqrt(kappa) * a_out/drive_amp). t = np.array(t). dB = 0. if dB:; plt.plot(detuning_list/2/np.pi, 20*np.log10(np.abs(t))); plt.xlabel(""Detuning (GHz)""); plt.ylabel(""|S21|(dB)""); plt.ylim(-10,0.01). else:; plt.plot(detuning_list/2/np.pi, (np.abs(t))); plt.xlabel(""Detuning (GHz)""); plt.ylabel(""|S21|""); plt.grid()`. Qutip 4.7:; ![image](https://github.com/qutip/qutip/assets/61804899/95a303ef-dcef-4fae-bace-5d6f5b7b24a1). Qutip 5.1.0 (installed by downloading a zip from the git as on April 11th):; ![image](https://github.com/qutip/qutip/assets/61804899/04d3e168-2893-435b-9818-91fe917c5d6b)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2386#issuecomment-2050649919:1654,down,downloading,1654,https://qutip.org,https://github.com/qutip/qutip/issues/2386#issuecomment-2050649919,1,['down'],['downloading']
Availability,"Sorry, somehow missed adding the description; An error occurred when using the TraceDiff fidelity when the computation of the evolution operator(s) resulted in Inf elements due to the repeated multiplication of large numbers. This resulted in fidelity error of NaN, which confused the L-BFGS-B alg. Forcing the fid_err to Inf instead of NaN seemed to improve L-BFGS-B alg response. ; Had to add new test_out_file to investigate the issue. Took the opportunity to tidy up test out files generally",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/294#issuecomment-67649613:49,error,error,49,https://qutip.org,https://github.com/qutip/qutip/pull/294#issuecomment-67649613,2,['error'],['error']
Availability,"Sorry, the blame is on me. Qutip works fine as it is, it was an error on my side. So I'll close the pull request.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1088#issuecomment-532284445:64,error,error,64,https://qutip.org,https://github.com/qutip/qutip/pull/1088#issuecomment-532284445,1,['error'],['error']
Availability,"Sounds good to me. Yeah, even if `packaging` _were_ in `setuptools`, it'd still be an explicit dependency of ours, so you're right to put it in, thanks. Yeah, that coveralls thing just looked like a network timeout on their side. Not the fault of this PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1715#issuecomment-973127486:238,fault,fault,238,https://qutip.org,https://github.com/qutip/qutip/pull/1715#issuecomment-973127486,1,['fault'],['fault']
Availability,"Sounds good, we should definitely make sure that the tests all work for 3.2; final. In the meantime, I think we should continue to merge in fixes when; its clear that the test failures are unrelated. On Mon, Feb 15, 2016 at 4:52 PM Alexander Pitchford <; notifications@github.com> wrote:. > Yes, I was thinking the same thing. I will open an issue now.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/pull/428#issuecomment-184074750.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/428#issuecomment-184074941:176,failure,failures,176,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-184074941,1,['failure'],['failures']
Availability,"Sounds good. I restarted once earlier and it failed on a different test, such that I think we should possibly create a new Issue to help track down which tests are randomly failing and why.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/428#issuecomment-184069261:143,down,down,143,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-184069261,1,['down'],['down']
Availability,Sounds like it is xvfb that is interfering with the test environment. I guess if you install it you'll likely be able to reproduce the error.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639#issuecomment-908496458:135,error,error,135,https://qutip.org,https://github.com/qutip/qutip/issues/1639#issuecomment-908496458,1,['error'],['error']
Availability,"String format coefficients (`'sin(w * t)' ` in H) which use cython for compilation often fails on windows. Using functions instead work better.; ```; def f(t,args):; return sin(args[""w""]*t); H = [H0, [H1, f]]; ```; Here there is also an error in the error message, we will fix that bug soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1207#issuecomment-600826564:237,error,error,237,https://qutip.org,https://github.com/qutip/qutip/issues/1207#issuecomment-600826564,2,['error'],['error']
Availability,Supplying negative or zero eigenvalues in the list and `pos_def=True` is certainly non-sensical input and should possibly return an error (and I think doesn't at the moment).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1642#issuecomment-905707288:132,error,error,132,https://qutip.org,https://github.com/qutip/qutip/issues/1642#issuecomment-905707288,1,['error'],['error']
Availability,"Switching `auto_tidyup` to being a relative tolerance not an absolute tolerance I think is a really good idea. It raises the cost of it a bit by making it a two-pass operation (and for sure let's use the max norm, not the trace norm!), but I think it's a sensible compromise. We could even have two options - `tidyup_atol` and `tidyup_rtol` to have both, and have `tidyup_atol` default to `0`. Also, fine point about `QobjEvo` - I'd forgotten that it internally called `tidyup`. I'm certainly in favour of swapping the default to `False` for the next major release. I know people may still want the option, so not a good idea to remove it completely, but I think having the default be `False` is safer numerically.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1349#issuecomment-680027055:44,toler,tolerance,44,https://qutip.org,https://github.com/qutip/qutip/issues/1349#issuecomment-680027055,2,['toler'],['tolerance']
Availability,Switching to ProcessPoolExecutor seems to have improved parallel_map quite a bit -- now all of the errors seem to be related to compiling coefficients.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1854#issuecomment-1169062453:99,error,errors,99,https://qutip.org,https://github.com/qutip/qutip/pull/1854#issuecomment-1169062453,1,['error'],['errors']
Availability,"T>::digits)>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:643:50: error: no template named 'numeric_limits'; int _Bits = (numeric_limits<_IntT>::digits - numeric_limits<_FloatT>::digits)>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:648:17: error: no template named 'numeric_limits'; static_assert(numeric_limits<_FloatT>::radix == 2, ""FloatT has incorrect radix"");; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:25: error: no template named 'numeric_limits'; return _FloatBigger ? numeric_limits<_IntT>::max() : (numeric_limits<_IntT>::max() >> _Bits << _Bits);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:58: error: no template named 'numeric_limits'; return _FloatBigger ? numeric_limits<_IntT>::max() : (numeric_limits<_IntT>::max() >> _Bits << _Bits);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:661:16: error: no template named 'numeric_limits'; using _Lim = numeric_limits<_IntT>;; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:664:12: error: use of undeclared identifier '_Lim'; return _Lim::max();; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:665:21: error: use of undeclared identifier '_Lim'; } else if (__r <= _Lim::lowest()) {; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:666:12: error: use of undeclared identifier '_Lim'; return _Lim::min();; ^; 11 errors generated.; error: command '/usr/bin/clang' failed with exit code 1; [end of output]; ; note",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583:1946,error,error,1946,https://qutip.org,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583,1,['error'],['error']
Availability,Test error is an unrelated correlation test failure (it looks like a coefficient generation race condition?).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1857#issuecomment-1098120081:5,error,error,5,https://qutip.org,https://github.com/qutip/qutip/pull/1857#issuecomment-1098120081,2,"['error', 'failure']","['error', 'failure']"
Availability,"Thank for the remark. ; @NS2LPS Replacing the first row of the Liouvillian is a standard way to ensure the algorithm produces a steady state with trace one. Since this condition is, in theory, redundant, adding the weighted first-row or substituting the first line should be equivalent. Often the algorithm is unstable, so one weights the trace 1 condition. Maybe how much of the first row is kept can make the algorithm even more stable?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1275#issuecomment-661868732:193,redundant,redundant,193,https://qutip.org,https://github.com/qutip/qutip/pull/1275#issuecomment-661868732,1,['redundant'],['redundant']
Availability,Thank you @ElieGouzien for pinning down the incompatibility and opening the issue and @Ericgig for carefully addressing it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/999#issuecomment-495046302:35,down,down,35,https://qutip.org,https://github.com/qutip/qutip/issues/999#issuecomment-495046302,1,['down'],['down']
Availability,"Thank you @christian512, pdf seems to be build without error.; Could you add an upload step so we can access it after the job finished?; The mirror of the ""Upload built HTML files"" step.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1883#issuecomment-1109695548:55,error,error,55,https://qutip.org,https://github.com/qutip/qutip/pull/1883#issuecomment-1109695548,1,['error'],['error']
Availability,"Thank you @jakelishman for the summary on the use of a GPL-2.0 in BSD-3.0. ; Maybe we can ping directly @Travis-S regarding the use of `qcircuit` 2.6 here for input on how to proceed. Let me point out that recently, reference to this project and a link was added in QuTiP's [user guide](https://github.com/qutip/qutip-doc/blob/f3592e9ad5a4083c19a8c7b81db8b2ae282cf4b4/guide/guide-qip.rst#plotting-a-quantum-circuit).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1187#issuecomment-633932995:90,ping,ping,90,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-633932995,1,['ping'],['ping']
Availability,Thank you @magzpavz for catching this. Could you add some tests so the error doesn't reappears.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2382#issuecomment-2036003278:71,error,error,71,https://qutip.org,https://github.com/qutip/qutip/pull/2382#issuecomment-2036003278,1,['error'],['error']
Availability,Thank you @wuisawesome for the fix and @tilek for spotting the bug. The correct place to open such issue would have been in [`qutip/qutip-doc`](https://github.com/qutip/qutip-doc). ; Now clicking on the link from Chrome downloads the video. In order to view it online something like [this](https://stackoverflow.com/questions/48820321/how-to-force-a-file-mp4-to-transfer-from-github-to-readthedocs) might be needed but [PR 77](https://github.com/qutip/qutip-doc/pull/77) fixes the bug.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/800#issuecomment-497291324:220,down,downloads,220,https://qutip.org,https://github.com/qutip/qutip/issues/800#issuecomment-497291324,1,['down'],['downloads']
Availability,"Thank you Jake for taking a quick look!; I checked once more and the following produces an error (used in an ""empty"" virtual environment):; ```; > pip install setuptools wheel 'cython>=0.29.20' 'numpy>=1.16.6,<1.20' 'scipy>=1.0'; > python setup.py develop. Traceback (most recent call last):; File ""/home/kaladin/Documents/git/qutip/qutip4/setup.py"", line 13, in <module>; import packaging.version; ModuleNotFoundError: No module named 'packaging'; ```; So I think `packaging` it is not included with `setuptools`. . > `requirements.txt` has no special meaning at all so it doesn't really matter,; Lets not add wheels and setuptools to the requirements then. Updating it with the latest dependency versions in setup.cfg dependencies should be fine though.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1715#issuecomment-973123214:91,error,error,91,https://qutip.org,https://github.com/qutip/qutip/pull/1715#issuecomment-973123214,1,['error'],['error']
Availability,"Thank you for finding the source to this testing error and proposing a fix. It would be best to have @Ericgig's opinion on this, as he refurbished the stochastic solvers and has been working on migration from int32 to int64, see also project [4](https://github.com/qutip/qutip/wiki//Google-Summer-of-Code-2019#4-abstraction-of-the-quantum-object-class-qutipqobjqobj) in Google Summer of Code.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/968#issuecomment-478251874:49,error,error,49,https://qutip.org,https://github.com/qutip/qutip/issues/968#issuecomment-478251874,1,['error'],['error']
Availability,"Thank you for reporting, the fix is available in the qutip-4.7.X branch.; We will try to make a release with the fix soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2182#issuecomment-1608172869:36,avail,available,36,https://qutip.org,https://github.com/qutip/qutip/issues/2182#issuecomment-1608172869,1,['avail'],['available']
Availability,Thank you for reporting. I will fix by having ket + scalar raising an error.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2208#issuecomment-1658492275:70,error,error,70,https://qutip.org,https://github.com/qutip/qutip/issues/2208#issuecomment-1658492275,1,['error'],['error']
Availability,"Thank you for reporting. `e_ops=callable` should work and allow you to obtain the result you need for now.; `e_ops=[callable]` support should have been added, but it seems it was only properly done for `sesolve`. The error is in the qutip-4.7.X branch at: https://github.com/qutip/qutip/blob/15880398a222ebfd62fd52361cc3852a685b1ac7/qutip/mesolve.py#L458; where is should be set to `True` if at least one of the `e_ops` is a callable but not a `Qobj`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2118#issuecomment-1468144893:217,error,error,217,https://qutip.org,https://github.com/qutip/qutip/issues/2118#issuecomment-1468144893,1,['error'],['error']
Availability,"Thank you for the explanation @phfaist. I don't know the answer unfortunately. There are upcoming developments in quantum tomography with QuTiP, including recently added [notebooks](https://github.com/qutip/qutip-notebooks/pull/79), that warrant looking into this library integration further. . Besides this, regarding cvxpy, the package is now actively maintained also on conda forge https://anaconda.org/cvxgrp/cvxpy/files?page=1, we could add a check in the test failures to the to-do list...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/874#issuecomment-500419184:466,failure,failures,466,https://qutip.org,https://github.com/qutip/qutip/issues/874#issuecomment-500419184,1,['failure'],['failures']
Availability,Thank you for the fix! I tested it locally and I was able to reproduce the error in #1753 and confirm it is fixed with this PR. `qutip.about()` also returns same message locally (not sure where it is tested if it is tested). It seems that CI was not complaining because we do not test for numpy 1.22 yet (although build requirements do install latest numpy version) but I think @hodgestar plans to include numpy 1.22 in the CI soon (see comments in #1747). I hope this PR can be merged soon as tests in PR qutip/qutip-tensornetwork#10 are failing due to `qutip.about()` not working with numpy 1.22.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1752#issuecomment-1005999347:75,error,error,75,https://qutip.org,https://github.com/qutip/qutip/pull/1752#issuecomment-1005999347,1,['error'],['error']
Availability,"Thank you for the tests. ; These tests will already ensure future changes don't break anything so we are quite grateful for them as is. We treat warnings as error during automated tests, so the casting warnings need to be fixed.; You change `self.data` to `self.data.real` in all 3 `visualize_...` functions. It will show same plot without the warnings. Maybe if there are interest, we could add an option as to what to show (real, imag, abs, ...), but not in this PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2548#issuecomment-2420725916:157,error,error,157,https://qutip.org,https://github.com/qutip/qutip/pull/2548#issuecomment-2420725916,1,['error'],['error']
Availability,"Thank you for these fixes! Sorry, it will take me a bit until I can have a proper look (vacation next week). It would help if you could break the PR down a bit. Perhaps into things related to the general multitrajresult, and things related to the stochastic solvers?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2455#issuecomment-2169216457:149,down,down,149,https://qutip.org,https://github.com/qutip/qutip/pull/2455#issuecomment-2169216457,1,['down'],['down']
Availability,"Thank you for your answer @Ericgig !. So, even though we are not using any quotes in our code, this internally maps to the string approach ?; I am trying to understand how to do what I want using callbacks instead, I could use a bit of help.; This is what the original code I shared here reads:. ```; # list of variational parameters ""a[]""; a=[]; for i in range(numite):; a.append(0.01*i). # define energy function by using variational parameters; def energy(a):; psi = initial_H.eigenstates(sparse=False)[1][0]; t = np.linspace(0, 1, timesteps+1); for i in range(numite):; 	H=[[initial_H,1-a[i]*t],[final_H,a[i]*t]]; 	result= qt.mesolve(H, psi, t, [], []); 	psi=result.states[timesteps]. E = qt.expect(final_H,psi); return E; ```. I tried to understand the documentation here: http://qutip.org/docs/latest/modules/qutip/mesolve.html; What I think I need to do is the following:. - I need to just pass callbacks instead of formulas / strings for the coefficients when defining the operators.; - these callbacks must have a signature with the format `(t, *args)` and should return an np.array; - `t` and `args` values are passed as arguments to mesolve. . I am a bit unclear whether or not ""args"" is a list or a dictionary and how I can access it inside my callbacks. I made an attempt but it returns errors: maybe it would be easy for you to fix some lines of this example and tell me if I am on the right track? Or do you have a link to an example, maybe ?; I am just targeting the innermost portion of the code, here:. ```; mesolve_args = ... # a dictionary ? a list? Something that lets me access the variable ""a""; def h_t1(t, *args):; return np.array(1-a[i]*t) # how do I retrieve a[i] by accessing args?; def h_t2(t, *args):; return np.array(a[i]*t) # same. H=[ [initial_H, h_t1], [final_H, h_t2] ]; result= qt.mesolve(H, psi, t, c_ops=[], e_ops=[], args=mesolve_args) # is this correct ?; psi=result.states[timesteps]; ```. Thank you for your help !",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/966#issuecomment-474154477:1300,error,errors,1300,https://qutip.org,https://github.com/qutip/qutip/issues/966#issuecomment-474154477,1,['error'],['errors']
Availability,"Thank you for your prompt reply. @sahmed95. QuTip was installed on Windows; ```; pyhton 3.6.4; ```; We download anaconda and install QuTip from conda-forge with; ```; conda install -c conda-forge qutip; ```; but when run ; ```; import qutip.testing as qt; qt.run(); ```; the following message occurred:; ```; QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.2.0; Numpy Version: 1.13.3; Scipy Version: 1.0.0; Cython Version: 0.27.3; Matplotlib Version: 2.1.2; Python Version: 3.6.4; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\ProgramData\Anaconda3\lib\site-packages\qutip. DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transf",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387626958:103,down,download,103,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387626958,1,['down'],['download']
Availability,Thank you for your reply. I used pip to download the qutip and the version of qutip is 4.5.3,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1473#issuecomment-808841158:40,down,download,40,https://qutip.org,https://github.com/qutip/qutip/issues/1473#issuecomment-808841158,1,['down'],['download']
Availability,Thank you. The checks fail with this message `ERROR: Husimi Q: Compare with/without precomputation for rand. ket`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/934#issuecomment-541546142:46,ERROR,ERROR,46,https://qutip.org,https://github.com/qutip/qutip/pull/934#issuecomment-541546142,1,['ERROR'],['ERROR']
Availability,"Thank you. Turning off auto tidy of course fixes my issue.; I use QuTiP for quantum photonics, where our down-conversion probabilities are of order 1e-7, and sometimes we do two cascaded. This tiny photon component is nonetheless measurable in the lab, and QuTiP is really helpful to predict rates and noise. I guess the problem is unitless in the sense that these small elements are directly the photon probability amplitudes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/521#issuecomment-242072924:105,down,down-conversion,105,https://qutip.org,https://github.com/qutip/qutip/issues/521#issuecomment-242072924,1,['down'],['down-conversion']
Availability,"Thanks @jakelishman. Pinging @vprusso just in case he experienced any of this with [toqito](https://github.com/vprusso/toqito). . By the way, I think that renaming `dnorm` to `diamond_norm` would be more pythonic, with a deprecation warning.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/874#issuecomment-634528042:21,Ping,Pinging,21,https://qutip.org,https://github.com/qutip/qutip/issues/874#issuecomment-634528042,1,['Ping'],['Pinging']
Availability,Thanks Chris. This is looking good. I'll try it out in more detail in the comings days. Some immediate comments:; - I don't think we should keep two code-paths for parsing the config file. So either we keep using the old manual parsing or we make configobj the official and only way to parse the config file. In that case I think it would be Ok to simply fail to parse the config file if configobj is not available. I don't think many users use the config file so would be to worried about breaking backwards compatibility with respect to this.; - I think I'd prefer to have the logging module called logging.py rather than _logging.py even though it is supposed to internal to qutip. ; - Please add a `__all__` list in logging.py; - Shouldn't configspec.ini be added to the setup.py file?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/248#issuecomment-61393881:405,avail,available,405,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-61393881,1,['avail'],['available']
Availability,"Thanks Nathan. Once I install your versions of the packages and Python 3.7, these errors are gone.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1018#issuecomment-501582503:82,error,errors,82,https://qutip.org,https://github.com/qutip/qutip/issues/1018#issuecomment-501582503,1,['error'],['errors']
Availability,"Thanks all, I am new to this and I apologise for the extra help required. Here is the plot. Just FYI, the function ""matrix_histogram"" is much more robust than; ""matrix_histogram_complex"", and has cbar_pad as an option. It may be better; in the long run to base the complex version on the ""matrix_histogram""; function.; [image: image.png]. On Wed, 28 Jun 2023 at 09:00, Yuji TAMAKOSHI ***@***.***>; wrote:. > @SJUW <https://github.com/SJUW> Hi. Can you show me a plot? I want to see; > that your change is better.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/2181#issuecomment-1610330125>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/A3KQ4AJKUOCE7MJK42H7APDXNNQYLANCNFSM6AAAAAAZTS45QQ>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2181#issuecomment-1610360194:147,robust,robust,147,https://qutip.org,https://github.com/qutip/qutip/pull/2181#issuecomment-1610360194,1,['robust'],['robust']
Availability,"Thanks alot for your great help.; Activating conda solved the problem, but still the command ""import numpy as; np"" leads to the following error:. File ""<stdin>"", line 1; import numpy as np; ^; IndentationError: unexpected indent. Other commands like ""import matplotlib.pyplot as plt"" works fine but; something like ""r=np.random.rand(4,4)"" does not work.; My numpy version is 1.19.2. Would you please help me to solve the problem.; Many thanks. On Tue, Dec 1, 2020 at 12:44 AM Boxi Li <notifications@github.com> wrote:. > Every time you open a new terminal, you will need to activate the conda; > environment by conda activate qutip-env. QuTiP is only installed in this; > environment. If you are interested, you could check; > https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html; > for details.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1391#issuecomment-736060302>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AR53J43QBLGZO3C3WKRB7BDSSQDMJANCNFSM4UGXA6UA>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1391#issuecomment-736727232:138,error,error,138,https://qutip.org,https://github.com/qutip/qutip/issues/1391#issuecomment-736727232,1,['error'],['error']
Availability,"Thanks both @jakelishman and @hodgestar for your comments! I agree that I may be depending too much on the classes in `qutip.tests.core.data` to do the testing both in qutip-tensorflow and qutip-tensornetwork. I myself was worried of ""who is going to tests the tests"" if this trend continued with other packages. Reusing the `qutip.tests.core.data`'s code though helps to speed things up in the development process and also allows QuTiP to strictly define what each specialisation is meant to do. . As you mentioned above, I think it would be best to create a `qutip.core.data.testing` module where all the classes for testing are implemented. Then these classes could be tested to ensure that the proper tests are created and these classes ca be used by both QuTiP and downstream packages. I do not have time for this now but I will come to this later, so lets keep this PR open to discuss any ideas!. ----. > the data layer tests should really discover the specialisations rather than us needing to specify them (this is true regardless of this PR). I am not sure about this one. Automatic discovery of tests for specialisations seems to lead to very restricted flexibility in how tests are parametrized. For instance, I needed to change the `rtol` to accommodate the tests for the complex64 data layer in qutip-tensorflow and I am not sure how this could be added automatically. . Also, as @hodgestar mentioned today, you probably want to be explicit on adding tests so that you are confident that those tests are running. Otherwise you need to constantly check the log to ensure the proper tests are running. . Another thing is that by being explicit on what is tested, you could assert if the tested specialisation has not been registered (which actually happened to both qutip-cupy and qutip-tensorflow before: specialisations where being tested but, surprisingly, they were not registered).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1723#issuecomment-981550356:770,down,downstream,770,https://qutip.org,https://github.com/qutip/qutip/pull/1723#issuecomment-981550356,1,['down'],['downstream']
Availability,"Thanks for looking deeply into it. It's good to know the cause. We shouldn't remove support for SciPy 1.4 unless we _absolutely_ have to. Most users won't use matrices that large so won't be affected, and SciPy 1.5 is only a year old which is too recent to be a requirement in an academic setting. We should maintain at least a 2-year dependency window (like NumPy). Any constraints we make on allowable versions affect any packages downstream of us as well, so we want to try and stay as permissive as possible, as long as there's not new features that we absolutely must have. We already have mechanisms for working around an unstable `eigh` implementation because of problems with mac OpenBLAS `zheevr` in some cases, so we can add in this additional test when setting `eigh_unsafe` in our initialisation. The principle is that we decay to using the general-purpose `eig`, and include a specific orthonormalisation step to stabilise the eigensystem afterwards. This code is already in `qutip/sparse.py`, so it shouldn't be too hard to add an extra condition in `qutip/__init__.py`. Could you also test if the issue is also confined to MKL, or if it persists in OpenBLAS with SciPy 1.4 as well? We lose precision when swapping down to `eig` in place of `eigh`, so it's good to confine the switch to the minimum known-bad set.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-818719109:433,down,downstream,433,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-818719109,2,['down'],"['down', 'downstream']"
Availability,"Thanks for reporting this - it's an important bug that's snuck in. Right now, there's a few errors in your code that you can fix to get on your way again, but we need to fix the error on our side. You're using `sigmap()` which is the Pauli excitation operator and is only defined for a Hilbert space with dimension 2. You actually are working with a Hilbert space of dimension `nmax * nmax` (a tensor-product space), so your `e_ops` argument to `sesolve` is wrong - it's difficult to know exactly what you meant here. `destroy(2)` is equivalent to `sigmap()`, so it's possible you intended to have `e_ops` be `[qutip.tensor(a1, a2)]`?. ---. Maintainers: The error is actually a segfault, because QuTiP 4.5 (probably 4.4 too) does not do sufficient error checking on`e_ops` arguments - probably they're missing in the conversion to `CQobjEvo`. When the expectation is called, it has already sidestepped `Qobj`'s dimensions check and there is no matrix size check, so it simply segfaults on OOB access. The fix for the 4.x branch is to have a very loud Python-space error due to mismatched `Qobj` dimensions on entry to the solvers, or insert a size check within `CQobjEvo`. High priority: there's no reason we should be segfaulting here. Partially fixed in the 5.x branch; all matrix multiplications that take place in C-space have a size check and throw a Python exception, however the solvers still sidestep the `Qobj` dimension check so a tensor-product-space mismatch will not be detected.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1374#issuecomment-717495492:92,error,errors,92,https://qutip.org,https://github.com/qutip/qutip/issues/1374#issuecomment-717495492,5,['error'],"['error', 'errors']"
Availability,"Thanks for reporting this. The function should be more robust... We have had this problem several times before, especially with Cython which seem to come up with new version postfix every once in a while... There are a list of special cases in the version2int function. A new special case for version numbers ending with 'a...' should be added.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/207#issuecomment-50946425:55,robust,robust,55,https://qutip.org,https://github.com/qutip/qutip/issues/207#issuecomment-50946425,1,['robust'],['robust']
Availability,"Thanks for reporting this. The new version of packaging removed LegacyVersion. They deprecated *constructing* LegacyVersion for two years, but not doing the right thing and raising an error on LegacyVersion ourselves (which we do). So we'll have to remove our check and release 4.7.1 to fix this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2036#issuecomment-1342764859:184,error,error,184,https://qutip.org,https://github.com/qutip/qutip/issues/2036#issuecomment-1342764859,1,['error'],['error']
Availability,"Thanks for reporting this. Yes, we certainly want the installation to be smooth on osx... Exactly what problems did you have with macports and xcode? I've got thing running on yosemite and macports, so that's certainly possible, but I have not installed this environment from scratch in a long while, so I don't know what difficulties you might encounter when doing this. . I've not used brew myself, but if you wrote down the steps you had to do to set up things with brew we could provide these as an alternative install path.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/265#issuecomment-64202123:418,down,down,418,https://qutip.org,https://github.com/qutip/qutip/issues/265#issuecomment-64202123,1,['down'],['down']
Availability,"Thanks for reviewing! Sounds good, will make those changes ASAP. . Quick disclaimer, I can't seem to install `cvxpy` on my machine without using anaconda, so I haven't run the qutip tests personally. I assume these run automatically in the pipeline. I have done a lot of testing independently though and the implementation seems to work very reliably (often giving more accurate results than the semidefinite program).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2416#issuecomment-2094916281:342,reliab,reliably,342,https://qutip.org,https://github.com/qutip/qutip/pull/2416#issuecomment-2094916281,1,['reliab'],['reliably']
Availability,"Thanks for spending time tracking down this bug! Qobj.data should always be csr. We make this assumption in many places in qutip, so the bug is in create and not in mcsolve, so I agree with Paul that type casts in mcsolve should not be necessary.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/210#issuecomment-51133272:34,down,down,34,https://qutip.org,https://github.com/qutip/qutip/pull/210#issuecomment-51133272,1,['down'],['down']
Availability,Thanks for spotting this. Obviously an error.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/292#issuecomment-67495227:39,error,error,39,https://qutip.org,https://github.com/qutip/qutip/pull/292#issuecomment-67495227,1,['error'],['error']
Availability,"Thanks for taking care of this, looks like some nice improvements. I had only originally added the generator-based tests to allow them to fail independently (this is especially useful for randomized tests), but I agree with cutting down the amount of extraneous console output. Is there a better way that I should use in the future that will allow for independent failure without inflating the number of tests reported?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/458#issuecomment-202057828:232,down,down,232,https://qutip.org,https://github.com/qutip/qutip/pull/458#issuecomment-202057828,2,"['down', 'failure']","['down', 'failure']"
Availability,Thanks for the bug report and your interest! Can you give an example which demonstrates the error? Then it would be easier to identify what might be wrong and how it should be fixed.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/239#issuecomment-57045399:92,error,error,92,https://qutip.org,https://github.com/qutip/qutip/issues/239#issuecomment-57045399,1,['error'],['error']
Availability,"Thanks for the clue, it was helpfull.; The source of problem is localization of `lscpu` util, which used by `_linux_hardware_info()` function.; The function expects `'Socket(s)'`, `'Core(s) per socket'`, etc in `lscpu` output, but in my system it actually `'Потоков на ядро'`, `'Сокетов'`, etc.; I think, maybe better less system dependent ways to calculate cpu count, for example, we could use `multiprocessing` module and it's `cpu_count` function. Or `len(os.sched_getaffinity(0))`for computers with dynamic cpu management (see [this](https://stackoverflow.com/questions/31346974/portable-way-of-detecting-number-of-usable-cpus-in-python) for details).; Or show exception/error, if we try to use lscpu and `LANG` is not english (or we couldn't found mentioned above `'Socket(s)'`).; Ideas?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1004#issuecomment-497325045:675,error,error,675,https://qutip.org,https://github.com/qutip/qutip/issues/1004#issuecomment-497325045,1,['error'],['error']
Availability,Thanks for the details and tracking it down. Could you open a Pull Request and add a test for that?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1176#issuecomment-582891331:39,down,down,39,https://qutip.org,https://github.com/qutip/qutip/issues/1176#issuecomment-582891331,1,['down'],['down']
Availability,"Thanks for the quick reply.; Will this error affect other examples and notebooks present on the website where a spectra_cb is needed? Because right now I'm trying to run this example ( https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/brmesolve-time-dependent-Liouvillian.ipynb ) and the code hungs on the 8th cell, from the Jupyter terminal I get the following message; ```AttributeError: Can't get attribute 'brme_step' on <module '__main__' (built-in)>```. Conda env is the same as the above.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1223#issuecomment-605704959:39,error,error,39,https://qutip.org,https://github.com/qutip/qutip/issues/1223#issuecomment-605704959,1,['error'],['error']
Availability,"Thanks for your quick reply. I am using multiple profilers at the moment, but albeit large, the RAM usage may not be the main problem. I am running the program on a 2 TB VM as well, and it looks like the maximum of N before the program crashes is the same. (N=115 crashes, but there should be enough RAM available for this parameter. Now running for N=112.). EDIT: N=112 indeed raises a segmentation fault as well. The specific error I get is the following one:. **Traceback (most recent call last):**; File ""SPI_V5.py"", line 197, in <module>; H_BS1=-BS_1/(2.*Dt_BS1)*(a_UPs.dag()*a_LOWs+a_UPs*a_LOWs.dag()+a_UPi.dag()*a_LOWi+a_UPi*a_LOWi.dag()); File ""/usr/local/lib/python3.5/dist-packages/qutip/qobj.py"", line 414, in __add__; out.data = self.data + other.data; File ""/usr/local/lib/python3.5/dist-packages/scipy/sparse/base.py"", line 375, in __add__; return self._add_sparse(other); File ""/usr/local/lib/python3.5/dist-packages/scipy/sparse/compressed.py"", line 342, in _add_sparse. return self._binopt(other, '_plus_'); File ""/usr/local/lib/python3.5/dist-packages/qutip/fastsparse.py"", line 115, in _binopt; A = fast_csr_matrix((data, indices, indptr), dtype=data.dtype, shape=self.shape); File ""/usr/local/lib/python3.5/dist-packages/qutip/fastsparse.py"", line 60, in __init__; **raise TypeError('fast_csr_matrix allows only int32 indices.'); TypeError: fast_csr_matrix allows only int32 indices.**. To me, it seems that it is due to a bad type of integer passed to a QuTiP function. Do you agree?; I admit that it is hard to solve a problem without having the code available, but perhaps you know more of this specific TypeError in QuTiP. Best regards,; Xavier",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/845#issuecomment-379244228:304,avail,available,304,https://qutip.org,https://github.com/qutip/qutip/issues/845#issuecomment-379244228,4,"['avail', 'error', 'fault']","['available', 'error', 'fault']"
Availability,"Thanks for your replies @BoxiLi @Ericgig , very helpful!. The output seems right after adding the `max_step` option to mesolve().; We changed the width of the cosine shaped pulse, here are some simple observations.; ```; if width = 20, then setting max_step < 27 can produce the correct answer.; if width = 50, then setting max_step < 70 can produce the correct answer.; if width = 100, then setting max_step < 130 can produce the correct answer.; ```. But as we are most caring about how to use the solvers correctly, we still have some doubts:; 1. We only observed two results, one is 'perfectly correct', and another is 'totally wrong' (Like @Ericgig said, the second pulse has been completely skipped over). Would some fault result in the middle happen? Some wrong result very similar to the correct would be even worse. 2. The Ode version of mesolve function is very fast, which is one of the reasons we love it. But we did not find document about other solvers (raw propagator, flatten to Liouville space?) for the master equation. Could you explain why the ODE method is the best over others, in aspect of accuracy and speed?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1265#issuecomment-629729386:723,fault,fault,723,https://qutip.org,https://github.com/qutip/qutip/issues/1265#issuecomment-629729386,1,['fault'],['fault']
Availability,"Thanks for your replies.; I did not have any python on my computer. Firstly, I installed Anaconda, then build a qutip-env. I typed ""conda activate qutip-env"" and then used the following command to install the requirements: ""conda install numpy scipy cython matplotlib pytest pytest-cov jupyter notebook spyder"" .; Then, I added ""conda config --append channels conda-forge"", getting the following warning: ""conda-forge already in channels list, moving to the bottem"".; Then, I run ""conda install qutip"" with no errors.; qutip was installed in ""/root/anaconda3/env"" and i opened a terminal in ""/root"", typed ""python"" and then ""import qutip.testing as qt"" getting the above error.; I really appreciate any help!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1391#issuecomment-735554120:510,error,errors,510,https://qutip.org,https://github.com/qutip/qutip/issues/1391#issuecomment-735554120,2,['error'],"['error', 'errors']"
Availability,"Thanks very much @Ericgig for preparing this!. I feel like it will be quite confusing if gates like `cnot` have different signatures than the ones in qutip-qip. Moreover, many of those gates/transformations are not only relevant to `qip`, but also used in other applications, so maybe we should keep more of them in the main qutip. One of the reasons that we want to include those gates into `qutip.operators` is because a few other downstream packages (e.g. `krylovsolver` that is now merged into qutip, and `qutip-tensornetwork` also uses Hadamard transform) also use them for testing (only) purposes. Having them in the main qutip may save them from depending on qutip-qip. I guess it would be better if we either; - Remove all qip and only define a few `_cnot`, `_swap` as private functions for testing inside the main qutip. And ask whoever else wants to use some gates to install `qutip-qip`. This may result in e.g. `qutip-tensornetwork` depending on `qutip-qip or having to implement a copy of some gates. or; - Include some more commonly used gates like `rx`, `ry` (they are unitaries generated by the Paulis and directly relevant to quantum control) `iswap` etc and keep them identical to the ones in qutip-qip, so that those who just want some gates for testing does not have to download the full qutip-qip. If the problem is the `qutip.qip.expand_operator`. I would argue that we can even include it into the main qutip. It is `tensor` + `permutation` and works not just for qubit systems, but also for other composite Hilbert spaces (provided a `dims`). It is quite handy not just for `qip`, but also for control and probably some other applications. What do you think?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1890#issuecomment-1120403103:433,down,downstream,433,https://qutip.org,https://github.com/qutip/qutip/pull/1890#issuecomment-1120403103,2,['down'],"['download', 'downstream']"
Availability,"Thanks victor!  My main worry as it stands is that, as I mentioned in the previous issue, this fix, on its own, introduces an unwanted additional error for the case with a time-dependent Hamiltonian, as then that time dependence essentially gets shifted twice, once by the H_shifted change, and once again by adding tlist[idx] to tau_list. ; This case of a time-dependent H could do with a test as well I guess. . This can be easily remedied by completely omitting the old method of shifting the time-dependence (e.g., using H and c_ops instead of H_shifted and c_ops_shifted in the call to mesolve(), for example).    But I am a little concerned that the the old method of shifting the time-dependence in H_shifted and C_ops_shifted was there for a reason.  @Ericgig any thoughts?. As an aside, I guess _correlation_mc_2t()  also needs a fix, but maybe better to do that in a separate issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1929#issuecomment-1153462129:146,error,error,146,https://qutip.org,https://github.com/qutip/qutip/pull/1929#issuecomment-1153462129,1,['error'],['error']
Availability,"Thanks! I used git checkout for ecca45c and reinstalled with python setup.py install, and I get the following error for the minimal example:; ```; Traceback (most recent call last):; File ""MinimalErrorExample.py"", line 62, in <module>; result = cpo.optimize_pulse_unitary(drift, ctrls, U_0, U_targ, n_ts, evo_time, fid_err_targ=fid_err_targ, min_grad=min_grad, max_iter=max_iter, max_wall_time=max_wall_time, out_file_ext=f_ext, init_pulse_type=p_type, log_level=log_level,gen_stats=True,dyn_params=dict(oper_dtype=Qobj,sparse_eigen_decomp=True)); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/pulseoptim.py"", line 757, in optimize_pulse_unitary; gen_stats=gen_stats); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/pulseoptim.py"", line 459, in optimize_pulse; result = optim.run_optimization(); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/optimizer.py"", line 957, in run_optimization; result = self._create_result(); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/optimizer.py"", line 362, in _create_result; result.initial_fid_err = self.dynamics.fid_computer.get_fid_err(); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/fidcomp.py"", line 412, in get_fid_err; return np.abs(1 - self.get_fidelity()); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/fidcomp.py"", line 422, in get_fidelity; self.fid_norm_func(self.get_fidelity_prenorm()); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/fidcomp.py"", line 438, in get_fidelity_prenorm; dyn.compute_evolution(); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/dynamics.py"", line 1394, in compute_evolution; self.tslot_computer.recompute_evolution(); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/tslotcomp.py"", line 265, in recompute_evolution; prop_comp._compute_prop_grad(k, j); File ""/Us",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1617#issuecomment-886098212:110,error,error,110,https://qutip.org,https://github.com/qutip/qutip/issues/1617#issuecomment-886098212,1,['error'],['error']
Availability,"Thanks, this helps track it down. It seems not to be an issue with ENR per se, but with the floquet steadystate solver itself (it also appears without using ENR states). . I think I pinned it down to two small bugs in that seem to have crept in to the solver with the data layer updates, I will make a PR for it and ping you for some feedback, if thats ok. We lack a sufficiently robust test for this solver really, if you can suggest something tractable (very small example, potentially analytical solution we can check against), it would be very helpful.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2386#issuecomment-2051189504:28,down,down,28,https://qutip.org,https://github.com/qutip/qutip/issues/2386#issuecomment-2051189504,4,"['down', 'ping', 'robust']","['down', 'ping', 'robust']"
Availability,"Thanks. I come across another problem when I try to run the following codes on a L4 GPU provided by google colab:; ```; import qutip; import qutip_jax. with qutip.CoreOptions(default_dtype=""jax""):; H = qutip.rand_herm(5); c_ops = [qutip.destroy(5)]; rho0 = qutip.basis(5, 4). result = qutip.mesolve(H, rho0, [0, 1], c_ops=c_ops, options={""method"": ""diffrax""}); ```; And an error will occur:; ```; JaxStackTraceBeforeTransformation: NotImplementedError: Schur decomposition is only implemented on the CPU backend. The preceding stack trace is the source of the JAX operation that, once transformed by JAX, triggered the following exception. --------------------. The above exception was the direct cause of the following exception:. NotImplementedError Traceback (most recent call last); [... skipping hidden 28 frame]. [/usr/local/lib/python3.10/site-packages/jax/_src/lax/linalg.py](https://localhost:8080/#) in _schur_lowering(ctx, *args, **kwargs); 2231 ; 2232 def _schur_lowering(ctx, *args, **kwargs):; -> 2233 raise NotImplementedError(; 2234 ""Schur decomposition is only implemented on the CPU backend.""); 2235 . NotImplementedError: Schur decomposition is only implemented on the CPU backend.; ```; So I assume the qutip-jax doesn't work with L4 GPU, right? What GPU or TPU can be used in this case?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2320#issuecomment-2090630204:373,error,error,373,https://qutip.org,https://github.com/qutip/qutip/issues/2320#issuecomment-2090630204,1,['error'],['error']
Availability,"That environment deliberately tests against Scipy 1.4 because we still officially support it. This looks like a true test failure - we need to know what's causing it, and most likely fix it in code, not in the test suite.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-817212093:122,failure,failure,122,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-817212093,1,['failure'],['failure']
Availability,"That notebook seems to be running fine for me and terminates. Did you interrupt it manually, if not can you post the trace of the error ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1223#issuecomment-605706487:130,error,error,130,https://qutip.org,https://github.com/qutip/qutip/issues/1223#issuecomment-605706487,1,['error'],['error']
Availability,"That particular flag is causing trouble as ARM cpus do not have the SSE extensions. Instead ARM v7+ use the NEON extensions. As such, the build is failing. However, this flag is really only useful for x86 (32-bit) systems where the fpmath is not set to use SSE by default. On x64 it is. In reality, I am not even sure if that flag does any good for our particular code as it is not written to directly use SSE anyway. If you want to remove this flag yourself, it is in the setup.py files in the 'cy' and 'control' directories inside the qutip directory. Given that their are no commercially available ARM systems outside of the Raspberry PI and MS Surface. I am not sure if adding support for ARM extensions is really necessary at the moment.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/309#issuecomment-72564925:591,avail,available,591,https://qutip.org,https://github.com/qutip/qutip/issues/309#issuecomment-72564925,1,['avail'],['available']
Availability,"That sound strange. At the end it does remove the bar to show only the total time, so there is the small chance that you just missed the bar. Otherwise it might be an issue with the ipython notebook version. I am running on 2.0 and it works. I can try to track down the issue with some more details (ipython version, python version, etc).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/121#issuecomment-41988948:261,down,down,261,https://qutip.org,https://github.com/qutip/qutip/pull/121#issuecomment-41988948,1,['down'],['down']
Availability,"That test failure actually looks like a serious problem - there's a `NaN` that has crept into an output after a `copy` operation. In this case I think it's important that we really track down the root cause of how that happened, so we can be sure it can't happen again. All the other numbers are the same in that failure, so it looks like possibly memory corruption? There are 17 elements in the output (not a nice round number like 16), so maybe there's an off-by-one somewhere?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1461#issuecomment-809280369:10,failure,failure,10,https://qutip.org,https://github.com/qutip/qutip/pull/1461#issuecomment-809280369,3,"['down', 'failure']","['down', 'failure']"
Availability,"That’s what I thought too in hindsight, so I deleted that part of the; docstring, but nosetests now just gives a segmentation fault and quits. On Tue, 28 May 2019 at 21:33, Wojciech Rzadkowski <notifications@github.com>; wrote:. > If I understand correctly it refers to line 300 in test_metrics, which has; > a new hellinger metric test by @wrzadkow <https://github.com/wrzadkow> .; > Could it be that using ""for _ in range(10):"" is a problem?; >; > The following observations:; >; > - for _ in range(10) is already in line in 128 in test_metrics.py; > https://github.com/qutip/qutip/blob/master/qutip/tests/test_metrics.py#L128; > - line 300 is the end of docstring of test_hellinger_monotonicity(); > https://github.com/qutip/qutip/blob/master/qutip/tests/test_metrics.py#L300; > - the presence of invalid escape sequence \o in the error message; > - this thread; > https://stackoverflow.com/questions/52335970/how-to-fix-string-deprecationwarning-invalid-escape-sequence-in-python; >; > make me think that the issue may be caused by \otimes that I used in the; > docstring explanations. Don't have a Mac to reproduce, though.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/963?email_source=notifications&email_token=ADPF67GLVSBPTSYBEWHF753PXURAZA5CNFSM4G4MKE72YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODWL7DBA#issuecomment-496497028>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ADPF67BCDAJ2I55ZNP3VBB3PXURAZANCNFSM4G4MKE7Q>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-496582231:126,fault,fault,126,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-496582231,2,"['error', 'fault']","['error', 'fault']"
Availability,The CI errors all appear to the result of the coveralls.io service being down. Happy for this to be merged with the failures.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2333#issuecomment-1963065768:7,error,errors,7,https://qutip.org,https://github.com/qutip/qutip/pull/2333#issuecomment-1963065768,3,"['down', 'error', 'failure']","['down', 'errors', 'failures']"
Availability,"The CI errors do not relate to this change, and it is only a one character bug fix, so I will merge unless anyone objects.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/476#issuecomment-221861640:7,error,errors,7,https://qutip.org,https://github.com/qutip/qutip/pull/476#issuecomment-221861640,1,['error'],['errors']
Availability,"The CI failure on ` macOS, Python 3.8: XCode 12` is because the tests took too long. Not sure if this is just a Travis issue or a pre-existing problem or something new.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465#issuecomment-801756430:7,failure,failure,7,https://qutip.org,https://github.com/qutip/qutip/pull/1465#issuecomment-801756430,1,['failure'],['failure']
Availability,The Mac OS ci failed with a strange pardiso error from the HEOM tests.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1992#issuecomment-1247954515:44,error,error,44,https://qutip.org,https://github.com/qutip/qutip/pull/1992#issuecomment-1247954515,1,['error'],['error']
Availability,"The NOMKL build is the only one out of the 6 that fails:; `ERROR: Metrics: checks that special cases for dnorm agree with SDP solutions.`; `cvxpy.error.SolverError: Solver 'CVXOPT' failed. Try another solver.`. Unfortunately I'm not seeing how this is related to my changes. I noticed a huge chunk of warnings for scipy.misc.factorial and will make a second pull request. If that ones fails at the same position, it might be unrelated to this commit.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/780#issuecomment-347506698:59,ERROR,ERROR,59,https://qutip.org,https://github.com/qutip/qutip/pull/780#issuecomment-347506698,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"The RK45 code here has no notion of error associated with it; you have no way of saying whether a particular step size `dt` is actually good. It ideally should converge to something as the step size goes to zero. QuTiP has an adaptive solver that modifies the step size to keep the error below the supplied tolerances. For time-dependent problems one could run into issues with very narrow pulses, but that is not the case here. Writing ones own ODE solver is not really the best thing to do outside of a learning exercise for reasons along these lines.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733#issuecomment-986722508:36,error,error,36,https://qutip.org,https://github.com/qutip/qutip/issues/1733#issuecomment-986722508,3,"['error', 'toler']","['error', 'tolerances']"
Availability,"The Read The Docs version is compiled on each commit, but the website version requires downloading the update version and manually updating the website repo.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2104#issuecomment-1454074321:87,down,downloading,87,https://qutip.org,https://github.com/qutip/qutip/issues/2104#issuecomment-1454074321,1,['down'],['downloading']
Availability,"The SS solver has been heavily modifed since version 2.2. The bicgstab; method has been replaced in the development version with the LGMRES solver.; The bicgstab method would exit with a fatal error. The new method in; combination with the preconditioner is quite fast. However preconditioning; does fail for some models. Paul; On Jul 9, 2013 5:54 PM, ""Vutshi"" notifications@github.com wrote:. > I would like to draw your attention to this problem once again. I did some; > testing with steady state for my high dimensional model. The direct method; > runs out of memory so I was trying all sorts of iterative methods. My; > conclusion was that the BicgSTAB method is the best for my particular; > problem. However, the iterative methods are very sensitive to everything; > basically this is why there are so many different kinds of them. Moreover,; > the Scipy realisation of these methods is not the most optimal. PyAMG; > realisation of bicgSTAB worked better for me than the one from scipy. So,; > please, keep both of the methods in qutip.; > ; > —; > Reply to this email directly or view it on GitHubhttps://github.com/qutip/qutip/issues/29#issuecomment-20661092; > .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/29#issuecomment-20662801:193,error,error,193,https://qutip.org,https://github.com/qutip/qutip/issues/29#issuecomment-20662801,1,['error'],['error']
Availability,"The Travis build seems to create a new conda env each time it runs the test. Consequently it downloads and installs the latest [conda] numpy, scipy etc. I tried creating a fresh conda env yesterday and found that the numpy version was higher than my qutip dev env, which I created a few months ago.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/379#issuecomment-148349639:93,down,downloads,93,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-148349639,1,['down'],['downloads']
Availability,"The Travis error occurred because the latest numpy v1.10 did not allow some implicit cast from object to complex. I have fixed this in #380 ; @cgranade I guess we can merge that, then you can rebase from master (or similar process)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/379#issuecomment-148136161:11,error,error,11,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-148136161,1,['error'],['error']
Availability,"The Windows test failure is the strange ""Tcl is not properly installed one"". Someone else reported this at https://github.com/microsoft/azure-pipelines-tasks/issues/16426 so I mentioned that we see it too. I linked to this build failure there, so please don't re-run it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1968#issuecomment-1207185394:17,failure,failure,17,https://qutip.org,https://github.com/qutip/qutip/pull/1968#issuecomment-1207185394,2,['failure'],['failure']
Availability,"The `Qcircuit.tex` PR was unfortunately many many years ago, long before I made my first commit to QuTiP (according to `git log` it was by Anubhav Vardhan in 2014), so the damage is already done. It was on my mind because there was a PR about updating the version of the code in it (#1187). Nonetheless, we definitely should remove it. @BoxiLi Boxi: `Qcircuit.tex` is a concern for `qutip-qip` more than the main library from 5.0 onwards - it's currently in `qip/circuit_latex.py`, which we'll have removed, but you've gained. It might be most appropriate to handle this the same way Qiskit does - generate code which does `\usepackage{qcircuit}`, and leave it up to the user to have a properly-provisioned LaTeX environment. I note that `qcircuit` is included in MikTeX and TexLive since at least 2018 (but not sure when exactly it was added). > Yeah putting years I think is the correct thing. Didn't know that at the time. Ah, that's good to know, thanks. I'm trying to learn more about licensing - I'm trying to get it sorted now into the right form, but it's a really complicated field. I think if we change `LICENCE.txt` to. ```text; Copyright (c) 2011--2021 Paul Nation and Robert Johansson.; Copyright (c) 2021--2021 QuTiP Admin Team.; All rights reserved. <BSD 3-clause licence>; ```. and update the final `2021` as appropriate, we'll be in the best standing. That's also why we might want to remove the general licence text from each file - it's already redundant, but it'll be much harder to update if we have it scattered everywhere (automation would run the risk of us messing up and changing any external code's licence as well, I think, which would be wrong). > Look forward to talking to you in July!. Me too!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1579#issuecomment-864059845:1464,redundant,redundant,1464,https://qutip.org,https://github.com/qutip/qutip/pull/1579#issuecomment-864059845,1,['redundant'],['redundant']
Availability,"The `Qobj.data` is not a scipy csr matrices, most attributes are not directly available. `Qobj.data_as` convert it usual format scipy, numpy, etc.; ```; csr = qutip.qeye(3, dtype=""CSR"").data_as(""csr_matrix""); csr.nnz; ```; or ; ```; qutip.qeye(3, dtype=""CSR"").data.as_scipy().nnz; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2481#issuecomment-2206199762:78,avail,available,78,https://qutip.org,https://github.com/qutip/qutip/issues/2481#issuecomment-2206199762,1,['avail'],['available']
Availability,The above code is working fine with Matplotlib 3.1.3. But when downgrading it to 3.1.0 and running the code is causing error.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1027#issuecomment-612224658:63,down,downgrading,63,https://qutip.org,https://github.com/qutip/qutip/issues/1027#issuecomment-612224658,2,"['down', 'error']","['downgrading', 'error']"
Availability,"The anaconda people have said they have / will fix the scipy openblas package in the next few days, so I think we can wait.; However, I see there were hundreds of new failures in all the py3 latest tests. I will set them of again, see what happens",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/870#issuecomment-394079084:167,failure,failures,167,https://qutip.org,https://github.com/qutip/qutip/pull/870#issuecomment-394079084,1,['failure'],['failures']
Availability,"The canopy needs to be updated as it points toward an old os 10.6 whose SDK is not available on your newer osx. . Paul. > On Oct 14, 2015, at 13:49, rjmagyar notifications@github.com wrote:; > ; > I just built and installed Qutip on the command line using Enthought python. No errors...; > ; > Then when I run I get:; > ; > Enthought Canopy Python 2.7.9 | 64-bit | (default, May 20 2015, 20:01:56) ; > [GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.6)] on darwin; > Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; > ; > from qutip import *; > Compiling with an SDK that doesn't seem to exist: /Developer/SDKs/MacOSX10.6.sdk; > Please check your Xcode installation; > In file included from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/syslimits.h:7:0,; > from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:34,; > from /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:19,; > from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:; > /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:168:61: error: no include path in which to search for limits.h; > In file included from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:0:; > /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:33:19: fatal error: stdio.h: No such file or directory; > compilation terminated.; > Traceback (most recent call last):; > File """", line 1, in ; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/init.py"", line 213, in ; > from qutip.qobj import *; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/qobj.py"", line 60, in ; > from qutip.ptrace import ptrace; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/382#issuecomment-148179436:83,avail,available,83,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-148179436,2,"['avail', 'error']","['available', 'errors']"
Availability,The changes look good but there are still some `test_satisfy_eigenvalue_equation` failures -- perhaps the accuracy just needs to be loosened slightly?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1820#issuecomment-1137085764:82,failure,failures,82,https://qutip.org,https://github.com/qutip/qutip/pull/1820#issuecomment-1137085764,1,['failure'],['failures']
Availability,"The code below is a (hopefully) minimum working example that demonstrates the strange behavior of the stochastic solver. I'm simulating a single trajectory using `general_stochastic` and plotting the returned expectation values along with expectation values calculated from the states. There is also a theoretical solution for the variances of X and Y, which are deterministic despite the stochastic evolution. The manually calculated expectations match the theory perfectly which means the states are correct. The returned ones accumulate errors and obviously shouldn't be used. I don't see a reason why they should be different -- I would assume the expectations are calculated internally from the states. Note that the deprecation warning from above still appears. ### Output plots. ![image](https://user-images.githubusercontent.com/13610206/100783362-f6840b00-340d-11eb-9274-09148e11cf44.png). ### Code; ```; # -*- coding: utf-8 -*-. import matplotlib.pyplot as plt; import numpy as np. from numpy import sqrt, exp. import qutip. from qutip import destroy, basis, ket2dm, expect, liouvillian, \; general_stochastic, parallel_map, \; cy, spre, spost, vector_to_operator, \; operator_to_vector. #%%%%%%%% . times = np.linspace(0, 2, 1024). N = 16. a = destroy(N) . x = (a + a.dag()) / sqrt(2); y = 1j*(a-a.dag()) / sqrt(2). γ = 1 # damping rate; Ω = 0; χ = 1 # measurement strength. H = Ω * a.dag()*a. c_ops = [sqrt(γ)*a, sqrt(χ)*x]. e_ops = [x, x*x, y, y*y]. ρ0 = ket2dm(basis(N)). opts = qutip.solver.Options(store_states=True). ntraj = 1; nsubsteps = 1. # defintions for the SME; #; # in literature: dρ(t) = −i[H,ρ(t)]dt + γD[a]ρ(t)dt + dW(t)√γ H[a]ρ(t); # in QuTiP: dρ(t) = −i[H,ρ(t)]dt + D1[A]ρ(t)dt + D2[A]ρ(t)dW; #; # H[A]ρ = 0.5 * (Aρ + ρA† − Tr[Aρ+ρA†]ρ). L = liouvillian(H, c_ops=c_ops).data; def D1_ρ(t, ρ_vec):; return cy.spmv(L, ρ_vec). # D2[A]ρ(t) = √γ H[a]ρ(t). n_sum = spre(sqrt(χ)*x) + spost(sqrt(χ)*x.dag()); n_sum_data = n_sum.data. def D2_ρ(t, ρ_vec):; e1 = cy.cy_expect_rho_vec",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1379#issuecomment-736750957:540,error,errors,540,https://qutip.org,https://github.com/qutip/qutip/issues/1379#issuecomment-736750957,1,['error'],['errors']
Availability,The conda-forge download badge has been added to the Readme.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/997#issuecomment-532282813:16,down,download,16,https://qutip.org,https://github.com/qutip/qutip/issues/997#issuecomment-532282813,1,['down'],['download']
Availability,"The current test failure is unrelated and not your fault. It's everyone's favourite `dnorm` again, and it's not because of any _new_ problems with it, it's just because we recently re-enabled the `dnorm` tests (see #1463) that had been lying dormant due to a problem in how they were written when we swapped to `pytest` as our runner.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1478#issuecomment-811949743:17,failure,failure,17,https://qutip.org,https://github.com/qutip/qutip/pull/1478#issuecomment-811949743,2,"['failure', 'fault']","['failure', 'fault']"
Availability,"The current test failures can probably be fixed by merging #1651, so I should review that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1727#issuecomment-980007660:17,failure,failures,17,https://qutip.org,https://github.com/qutip/qutip/pull/1727#issuecomment-980007660,1,['failure'],['failures']
Availability,"The default Apple `clang` version doesn't recognise `-fopenmp` out-of-the-box, because Apple don't ship an OMP library with macOS. You'll have more luck (with most C/C++ projects!) if you install a fully-featured compiler and environment. On [homebrew](https://brew.sh) you can find both `clang`/`clang++` and `gcc`/`g++`, both of which can be installed with OMP support. Make sure your set `PATH`/`CC`/`CXX` environment variables are set up correctly after you've installed, so you're calling the compiler you've just installed, not just the Xcode versions. This isn't a bug in QuTiP, although we could remember this when somebody's working on modernising the distribution - in C/C++ land, tools like `automake` run through a big list of things to check during build configuration, and one of them is if OMP appears to exist. That way the error message is a little clearer (although in this case it's reasonable clear if you're used to C compilers).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1230#issuecomment-611425774:840,error,error,840,https://qutip.org,https://github.com/qutip/qutip/issues/1230#issuecomment-611425774,1,['error'],['error']
Availability,"The docstring can come live in its usual place, but otherwise that looks good to me! I'm always in favour of improving error meesages.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1427#issuecomment-770189215:119,error,error,119,https://qutip.org,https://github.com/qutip/qutip/pull/1427#issuecomment-770189215,1,['error'],['error']
Availability,The documentation build failure is likely due to the pip bug that triggered the documentation build errors on dev.major (#1897).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1902#issuecomment-1139096612:24,failure,failure,24,https://qutip.org,https://github.com/qutip/qutip/pull/1902#issuecomment-1139096612,2,"['error', 'failure']","['errors', 'failure']"
Availability,"The error comes from the file `/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py`. This file is no longer part of qutip (development version), so it must come from the old installation. Make sure you delete that file before installing the development version.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42922781:4,error,error,4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42922781,1,['error'],['error']
Availability,The error here has nothing to do with the pull but rather with the coveralls that shouldnt be running anyway for py3.2. Since we are no longer testing against 3 2 anyway I see no reason why this cant be merged.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/276#issuecomment-66583536:4,error,error,4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66583536,1,['error'],['error']
Availability,The error in the documentation build went away. So I am merging this now,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/626#issuecomment-271126735:4,error,error,4,https://qutip.org,https://github.com/qutip/qutip/pull/626#issuecomment-271126735,1,['error'],['error']
Availability,"The error is genuine. I think I have narrowed down the problem. The issue is reshaping (specifically vector_to_operator ) when the vector represents a tensor product system. ```python; from qutip import *. psi0 = tensor(basis(4, 0), basis(2, 0)); rho0vec = operator_to_vector(ket2dm(psi0)). print(rho0vec). vector_to_operator(rho0vec); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1098#issuecomment-575501006:4,error,error,4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-575501006,2,"['down', 'error']","['down', 'error']"
Availability,The error is related to my new metrics tests being too strict. So this seems to be ready for review.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/291#issuecomment-66949855:4,error,error,4,https://qutip.org,https://github.com/qutip/qutip/pull/291#issuecomment-66949855,1,['error'],['error']
Availability,"The error reported here; ```; /Users/goerz/.pyxbld/temp.macosx-10.6-x86_64-3.5/pyrex/rhs72670.cpp:541:10: fatal error: 'complex' file not found; #include <complex>; ```; Suggests that any string format time-dependence would fail to compile. @goerz Could you try to reproduce with simple example, e.g.; ```; H = [[sigmaz(), ""sin(t)""]]; ```; ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932#issuecomment-463246180:4,error,error,4,https://qutip.org,https://github.com/qutip/qutip/issues/932#issuecomment-463246180,2,['error'],['error']
Availability,"The error seems to occur only when I use matplotlib to make some plots before using the propagator. For example, if I implement the two blocks of code as shown below in the same order, I would get the error as shown. But if I remove the first block and implement only the second block, the error disappears (of course after restarting the kernel). . Block 1:; ```ruby. import numpy as np; import matplotlib.pyplot as plt; from qutip import *. x = np.linspace(0,2*np.pi,100); y = np.sin(x); plt.plot(x,y); plt.show(); ```; output:. <img width=""407"" alt=""image"" src=""https://user-images.githubusercontent.com/53356828/88606624-00e26280-d032-11ea-97a4-107449ad8b56.png"">. Block 2:; ``` ruby; H1 = sigmaz();H2 = sigmax(); ; args = {'w': 2*2*np.pi}; H = [H1, [H2, 'cos(w * t)']]; t_list = np.linspace(0,10,100); U_list = []; for (i,t) in enumerate(t_list):; U = propagator(H,t, [], args); U_list.append(U); print(i); ```; output:; ```; 0; 1; 2; 3; 4; 5; 6; 7; ---------------------------------------------------------------------------; DistutilsExecError Traceback (most recent call last); ~/opt/anaconda3/lib/python3.7/distutils/unixccompiler.py in _compile(self, obj, src, ext, cc_args, extra_postargs, pp_opts); 117 self.spawn(compiler_so + cc_args + [src, '-o', obj] +; --> 118 extra_postargs); 119 except DistutilsExecError as msg:. ~/opt/anaconda3/lib/python3.7/distutils/ccompiler.py in spawn(self, cmd); 909 def spawn(self, cmd):; --> 910 spawn(cmd, dry_run=self.dry_run); 911 . ~/opt/anaconda3/lib/python3.7/distutils/spawn.py in spawn(cmd, search_path, verbose, dry_run); 35 if os.name == 'posix':; ---> 36 _spawn_posix(cmd, search_path, dry_run=dry_run); 37 elif os.name == 'nt':. ~/opt/anaconda3/lib/python3.7/distutils/spawn.py in _spawn_posix(cmd, search_path, verbose, dry_run); 148 ""command %r terminated by signal %d""; --> 149 % (cmd, os.WTERMSIG(status))); 150 elif os.WIFEXITED(status):. DistutilsExecError: command 'gcc' terminated by signal 6. During handling of the above exception, ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1326#issuecomment-664714290:4,error,error,4,https://qutip.org,https://github.com/qutip/qutip/issues/1326#issuecomment-664714290,3,['error'],['error']
Availability,"The errors in this PR are caused by SciPy 1.11 raising:; ```; FAILED qutip/tests/test_sp_eigs.py::test_DenseHermValsVecs - DeprecationWarning: Keyword argument 'eigvals' is deprecated in favour of 'subset_by_index' keyword instead and will be removed in SciPy 1.12.0.; FAILED qutip/tests/test_sp_eigs.py::test_DenseValsOnly - DeprecationWarning: Keyword argument 'eigvals' is deprecated in favour of 'subset_by_index' keyword instead and will be removed in SciPy 1.12.0.; =========== 2 failed, 3250 passed, 12 skipped in 1792.40s (0:29:52) ============; ```; These should be fixed but in another PR. Issue #2093 created to ensure this isn't forgotten.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2091#issuecomment-1428714078:4,error,errors,4,https://qutip.org,https://github.com/qutip/qutip/pull/2091#issuecomment-1428714078,1,['error'],['errors']
Availability,"The example provided no longer produces that error when I run it. However, the error still occurs whenever I run an odd value for N. I would like to look more into this issue and try to resolve it.; ### Code Output; For N=10 `0.006061302499141838 0.006061302499140235`; For N=5 `-inf 0.004046653546081098`; For N=7 `-inf 0.004630127471444943`; For N=9 `-inf 0.005564781691231526`; ### Your Environment; ```; uTiP Version: 5.0.2; Numpy Version: 1.26.4; Scipy Version: 1.12.0; Cython Version: 3.0.10; Matplotlib Version:3.5.1; Python Version: 3.10.12; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1919#issuecomment-2178970555:45,error,error,45,https://qutip.org,https://github.com/qutip/qutip/issues/1919#issuecomment-2178970555,2,['error'],['error']
Availability,"The failing test in `CircuitSimulator` is likely from `run_statistics`, which collects all the possible outcomes wrt. the measurement result. If the measurement result is `None`, it will skip that state. I can also set tolerance there, or update the test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1656#issuecomment-917056083:219,toler,tolerance,219,https://qutip.org,https://github.com/qutip/qutip/pull/1656#issuecomment-917056083,1,['toler'],['tolerance']
Availability,The failing test was unrelated:; ```; FAILED qutip/tests/solver/test_floquet.py::TestFloquet::testFloquetUnitary - assert (0.9999980885...77441045e-05j) == 1.0 ± 5.0e-05; comparison failed; Obtained: (0.9999980885612143+5.1789504077441045e-05j); Expected: 1.0 ± 5.0e-05; ```; Recording it here so that we can fix it (looks like just a tolerance issue in the Floquet tests).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2089#issuecomment-1432205731:335,toler,tolerance,335,https://qutip.org,https://github.com/qutip/qutip/pull/2089#issuecomment-1432205731,1,['toler'],['tolerance']
Availability,"The failure is because Python 3.10 started warning when importers like PyxImporter don't implement .find_spec. Maybe it is possible to work around it somehow. There is a `-W ignore::ImportWarning` that we add on Python 3.10 for this case, but for some reason it doesn't catch the warning here.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1791#issuecomment-1028096571:4,failure,failure,4,https://qutip.org,https://github.com/qutip/qutip/pull/1791#issuecomment-1028096571,1,['failure'],['failure']
Availability,The first error generally occurs if you are running qutip from within the directory where you installed it,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/891#issuecomment-404096438:10,error,error,10,https://qutip.org,https://github.com/qutip/qutip/issues/891#issuecomment-404096438,1,['error'],['error']
Availability,"The hardware info is wrapped in a `try` statement, thus hiding the error. To see what the problem is, just remove the try statement, and see what error Travis is returning.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/780#issuecomment-347419067:67,error,error,67,https://qutip.org,https://github.com/qutip/qutip/pull/780#issuecomment-347419067,2,['error'],['error']
Availability,The intermittent test failure in c6d68c0 is unrelated and should be resolved by merging in dev.major.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1635#issuecomment-916904969:22,failure,failure,22,https://qutip.org,https://github.com/qutip/qutip/pull/1635#issuecomment-916904969,1,['failure'],['failure']
Availability,"The issue is not with import, but deprecation warnings. ; For our tests, warnings are considered errors.; This is why the tests using scipy 1.12 are still failing.; We will fix this on our side. Thank you again for your contribution.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2305#issuecomment-1908577398:97,error,errors,97,https://qutip.org,https://github.com/qutip/qutip/pull/2305#issuecomment-1908577398,1,['error'],['errors']
Availability,"The issue is when the `O[N-1-j][n]` is evaluated. In the second case, it is evaluated when the object is created, but the first case, it is evaluated when the function is used, using the latest `n` and `j`.; If you did `n=None` between creating `H_globallight` and calling mesolve, the first case will raise an error, but the second will work. Since this is an issue with python, not qutip, I will close the issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2161#issuecomment-1542433352:311,error,error,311,https://qutip.org,https://github.com/qutip/qutip/issues/2161#issuecomment-1542433352,1,['error'],['error']
Availability,"The issue is with numerical error: the default tolerance for the computation of the propagator is `1e-8`, but the tolerance for `iscptp` is `1e-12`. You can improve the precision of the propagator by passing `options=Options(atol=1e-14, rtol=1e-14)`. These precisions are per internal step, not for the full evolution. You can also lower the requirement for `iscptp` with `qutip.settings.atol = ...`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1901#issuecomment-1138620881:28,error,error,28,https://qutip.org,https://github.com/qutip/qutip/issues/1901#issuecomment-1138620881,3,"['error', 'toler']","['error', 'tolerance']"
Availability,"The issue still is the rapid slope on the edges of the pulse. The default tolerance on the ODE solver is not enough to capture the dynamics in your case. Doing:. options=Options(atol=1e-9). in mesolve resolves the issue. The evolution in the sesolve case is a bit different since the vector being solved is a ket rather than dm. > On Oct 19, 2017, at 22:06, nlphysics <notifications@github.com> wrote:; > ; > Yes! I played with Gamma as well as with the number of time steps. Nothing helped. As I already mentioned in the previous post even setting Gamma to zero doesn't help. What I noticed though if I change the factor within the tanh function from 100 to 90 it works again. It's really weird, since it worked with factor 100 in the case of two two level atoms but not for two three level atoms even after increasing the number of time steps by a factor of 20. I really don't know what's going on.; > ; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub <https://github.com/qutip/qutip/issues/771#issuecomment-338100758>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ABMPqTRV0BuVMs-vNMMGSkAmYK_qmopBks5suBxXgaJpZM4P__42>.; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/771#issuecomment-338103310:74,toler,tolerance,74,https://qutip.org,https://github.com/qutip/qutip/issues/771#issuecomment-338103310,1,['toler'],['tolerance']
Availability,The last error is fixed by this PR: https://github.com/qutip/qutip/pull/895. The first error (missing spmatfuncs) is still there.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/891#issuecomment-403722869:9,error,error,9,https://qutip.org,https://github.com/qutip/qutip/issues/891#issuecomment-403722869,2,['error'],['error']
Availability,"The main issue causing these errors though is that `cvxpy.Variable` and `cvxpy.Parameter` expect the first arg to be a tuple with dimensions. We are passing `num_rows, num_cols` is two args. Who knows how this has happened - cvxpy changed its interface?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/872#issuecomment-394201690:29,error,errors,29,https://qutip.org,https://github.com/qutip/qutip/issues/872#issuecomment-394201690,1,['error'],['errors']
Availability,The most recent three PR should resolve all error and warnings in the tests. I will merge them all later today unless there any objections,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/430#issuecomment-186011649:44,error,error,44,https://qutip.org,https://github.com/qutip/qutip/issues/430#issuecomment-186011649,1,['error'],['error']
Availability,"The parallel issue was resolved earlier. See the ipynbtools import of ipyparallel. ncps should not be an issue as it has always has fallen back on the multiprocessing count. > On Feb 9, 2016, at 18:40, Alexander Pitchford notifications@github.com wrote:; > ; > I was helping someone with an install on windows 7 yesterday.; > We were testing using a notebook, and it worked fine except the version_table. The first error was resolved by installing ipython parallel. Still after that it was failing with something like key 'ncpus' missing. Sorry for not supplying exact errors. I could ask the user to post them if necessary.; > ; > @nonhermitian is #421 likely to resolve this? Even if say they don't have win32com or comtypes installed?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/423#issuecomment-182174246:415,error,error,415,https://qutip.org,https://github.com/qutip/qutip/issues/423#issuecomment-182174246,2,['error'],"['error', 'errors']"
Availability,"The particular example that was given as an MKL error, is a tricky problem. Seems that the MKL cannot solve for it in the `power` steady mode. As such, I have implemented a 'solver' kwarg that allows for picking the solver that is used in the direct and power methods. The default is SciPy, which could be the usual SuperLU solver, or UMFPACK, if installed via scikits.umfpack. The 'mkl' option can be passed to do the mkl library. I will see what the Intel people have to say about solving the particular matrix that was given:. https://groups.google.com/d/msg/qutip/axGZ-7vtnhI/2Rlsl7ExAgAJ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/720#issuecomment-315449568:48,error,error,48,https://qutip.org,https://github.com/qutip/qutip/pull/720#issuecomment-315449568,1,['error'],['error']
Availability,"The possibility exists of issues on 32-bit systems. However, the reported error no longer occurs when checked using int, int32, int64, float, float32, float64, complex, and complex128 types.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/322#issuecomment-77798170:74,error,error,74,https://qutip.org,https://github.com/qutip/qutip/pull/322#issuecomment-77798170,1,['error'],['error']
Availability,The problem arises from `fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */`. Something I think @quantshah or someone else might have fixed some time ago.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1065#issuecomment-527433444:31,error,error,31,https://qutip.org,https://github.com/qutip/qutip/pull/1065#issuecomment-527433444,2,"['down', 'error']","['down', 'error']"
Availability,"The problem is recognising what a true 0 is from a small value. In your example on the new data layer, there will already be exactly 0 items explicitly stored (and `data.add_csr` is going to get faster and smarter in another PR, too) without `tidyup`, but much more concerningly `1e-15 * qutip.rand_herm(5)` will end up in a zero matrix, which is clearly absolutely wrong. The argument from Liouvillian doesn't work here - even before the new data layer, `liouvillian` never called the `tidyup` code because it accessed the `Qobj.data` field directly, rather than used `Qobj`. Since it then goes into `CQobjEvo` in most of the solvers, which also don't touch the `tidyup` code, it doesn't get called. I don't think there's any safe way to know if small values should actually be zero, or if they're just small values. It makes sense that we want to maintain as much sparsity as possible when values are truly zero, but I think having the QuTiP default be to attempt to tidy up after every addition, multiplication and matrix multiplication is quite unsafe, and for people who aren't doing very very sparse calculations, it's actually a slow down.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1349#issuecomment-680011384:1141,down,down,1141,https://qutip.org,https://github.com/qutip/qutip/issues/1349#issuecomment-680011384,1,['down'],['down']
Availability,The problem is that at the moment this error crashes the entire python kernel unexpectedly for a user without any messages. It can be very frustrating for a newbie.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/699#issuecomment-315348946:39,error,error,39,https://qutip.org,https://github.com/qutip/qutip/pull/699#issuecomment-315348946,1,['error'],['error']
Availability,"The problem was that I was using a pytest plugin to output the docstrings, which are not available in conda. Now I just increased verbosity to 2.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131#issuecomment-560254158:89,avail,available,89,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560254158,1,['avail'],['available']
Availability,"The scipy Laguerre polynomial will be very inefficient for constructing the entries because it's linear in various inputs, and we need a quadratic number of entries for it, so it ends up being cubic. I have some code for an old project of mine which calculates them all as a nice recurrence relation though, which cuts the timing back down to quadratic. There was an issue on the Google groups recently about something similar: https://groups.google.com/forum/#!topic/qutip/ZtOiO7e9zNk, though the code I supplied there doesn't save the actual recurrence terms, so it would still be cubic (and I'm pretty sure there's still a complex number sign-error bug in it still, because I didn't take very much care when I did it...). You have to be careful, though, because constructing the displacement operator that way will result in an operator which is not unitary for any truncated subspace.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1293#issuecomment-645272426:335,down,down,335,https://qutip.org,https://github.com/qutip/qutip/issues/1293#issuecomment-645272426,2,"['down', 'error']","['down', 'error']"
Availability,"The stochastic ode solver are not smart and do not adjust the step to meet a desired tolerance. You can manually increase the precision by increasing the number of sub-steps `nsubsteps`. ; Since you don't have any c_ops, see if you can use mcsolve instead. It accept `atol `and `rtol `options and you should be able to rebuild the measurement from the collapse.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1357#issuecomment-691086529:85,toler,tolerance,85,https://qutip.org,https://github.com/qutip/qutip/issues/1357#issuecomment-691086529,1,['toler'],['tolerance']
Availability,"The stuff in `doc/contrib` does not seems to have been used anywhere. I erased it and not error/warnings appeared, but can't tell you what it was used for.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2523#issuecomment-2332246101:90,error,error,90,https://qutip.org,https://github.com/qutip/qutip/pull/2523#issuecomment-2332246101,1,['error'],['error']
Availability,The test failure is the sporadic Window tk one.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1983#issuecomment-1224125400:9,failure,failure,9,https://qutip.org,https://github.com/qutip/qutip/pull/1983#issuecomment-1224125400,1,['failure'],['failure']
Availability,"The test failure is unrelated; the swap to the new `CSR` type has meant that a few test tolerances have become much more fragile when considering numerical precision; since we're now using our own mathematical operations rather than scipy's, we're a bit more likely to have disagreements with them. This may also have to do with the new version of `Qobj` being more consistent about applying the `auto_tidyup` rule. This is one rule I really think we should look at removing or seriously reworking; it's basically just ""numerical imprecision as a feature, not a bug"".",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1348#issuecomment-679976149:9,failure,failure,9,https://qutip.org,https://github.com/qutip/qutip/pull/1348#issuecomment-679976149,2,"['failure', 'toler']","['failure', 'tolerances']"
Availability,"The test failure on Python 3.6 appears to be due to some exceptionally weird behaviour by `conda` in the Travis setup - if you look closely, you can see that when it runs `conda uninstall cython`, it _downgrades_ `numpy` to 1.14.2. This would not be a problem in a `conda-forge` release build, because the `numpy` API dependency is pinned in the feedstock, but it is a potential problem on `pip` source builds. It's possible this super odd behaviour of `conda` is the cause of people's complaints on the email lists about failed imports. I will push a change to the requirements here to try and enforce `numpy >= 1.16.6`, which ought to solve the dependency issues. I will make a similar change on `master` and in #1429 (which I will likely back-port to master before 4.6).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1448#issuecomment-782105359:9,failure,failure,9,https://qutip.org,https://github.com/qutip/qutip/pull/1448#issuecomment-782105359,1,['failure'],['failure']
Availability,The test failure was just the occasional bloch sphere test failure that happens on Windows sometimes.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1961#issuecomment-1201107734:9,failure,failure,9,https://qutip.org,https://github.com/qutip/qutip/pull/1961#issuecomment-1201107734,2,['failure'],['failure']
Availability,The test failure was just the random superoperator `iscptp` and `isherm` test that is being fixed in #2147.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2146#issuecomment-1492643493:9,failure,failure,9,https://qutip.org,https://github.com/qutip/qutip/pull/2146#issuecomment-1492643493,1,['failure'],['failure']
Availability,The test failures seem to be only coveralls result upload errors. I'm happy to merge without re-running. Let's just double check that the merge commits pass everything.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1889#issuecomment-1191987452:9,failure,failures,9,https://qutip.org,https://github.com/qutip/qutip/pull/1889#issuecomment-1191987452,2,"['error', 'failure']","['errors', 'failures']"
Availability,The tests fail but it looks like a short network outage that caused conda to fail to download some packages. Probably just running it again will sort it out.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1917#issuecomment-1146096672:49,outage,outage,49,https://qutip.org,https://github.com/qutip/qutip/pull/1917#issuecomment-1146096672,2,"['down', 'outage']","['download', 'outage']"
Availability,The tests report errors because of the cancelled PR #1340 which was made to the wrong branch.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1341#issuecomment-672845992:17,error,errors,17,https://qutip.org,https://github.com/qutip/qutip/pull/1341#issuecomment-672845992,1,['error'],['errors']
Availability,The timeouts are because of a GitHub actions outage. It appears to have been resolved earlier today -- https://www.githubstatus.com/incidents/29xnrws671f0.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1787#issuecomment-1023376091:45,outage,outage,45,https://qutip.org,https://github.com/qutip/qutip/pull/1787#issuecomment-1023376091,1,['outage'],['outage']
Availability,"The variable e does not exist outside the except block even if the try failed...; So trying to give more information about the error resulted in more confusion, sorry. I would suggest to use functions instead of string for your coefficient, the speedpup is often less than the time it take to compile the string, (which is not included in the progressbar). . It is the first case where it would work once, but not the following times. I would be interested in the real error message and/or a code to reproduce the bug. If you are comfortable hacking your version of qutip: adding `print(e)` in the except block; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/qobjevo_codegen.py#L77-L80; should do it give the proper error message.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1196#issuecomment-595847212:127,error,error,127,https://qutip.org,https://github.com/qutip/qutip/issues/1196#issuecomment-595847212,3,['error'],['error']
Availability,The version at the last link posted also gives me this error. Should that have been fixed in there?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-520215959:55,error,error,55,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-520215959,1,['error'],['error']
Availability,"Then norm of an operator (with default input) is its trace. The trace of the Qobj you give, `out`, is 10^(-6). If you increase the tolerance (by default, `tol=0`) or maximum iteration in the eigenvalues solver, it should eventually be equal to the trace function (`tr()`), result.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/952#issuecomment-465112671:131,toler,tolerance,131,https://qutip.org,https://github.com/qutip/qutip/issues/952#issuecomment-465112671,1,['toler'],['tolerance']
Availability,"There are conda versions for cvxopt and cvxpy (https://anaconda.org/mcg/cvxpy) but nobody seems to be maintaining or updating them. Installing the conda version downgrades everything else. I will first try to fix the yml issue. Nothing seemed to be incorrect in the YML file, and the travis CI linter is not available, so I am not sure what is wrong with the file. Will update if I make progress.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/873#issuecomment-394298574:161,down,downgrades,161,https://qutip.org,https://github.com/qutip/qutip/pull/873#issuecomment-394298574,2,"['avail', 'down']","['available', 'downgrades']"
Availability,"There are two reasons I did not go with `isinstance(other, numbers.Number)`:; - This returns False when `other` is a NumPy array or TensorFlow tensor which makes `__mul__` significantly less flexible.; - If we accept objects that are not instances of `numbers.Number`, we will still have to use `complex(other)`. This is necessary to infer if the output is hermitian or unitary. Hence, instead of doing a set of `isinstance` checks and `shape` checks for NumPy TensorFlow or any other future library we may want to be somewhat compatible with, we just check whether other it can be casted to `complex`. If it can, `mul` makes sense and we let the specialisation do whatever they ""want"" (they could always just do complex(value) in any case). I must admit that the try except with complex also seems not ideal to me. But I could not find a better implementation that fitted the requirements. I mean, we do use this same code pattern at some other points in the code (in `__matmul__` we raise not implemented if `other` can not be casted to Qobj and we catch this with a try) but what worries me is: what happens if `complex(other)` raises TypeError not because we do not know how to do the cast but because the user made a mistake in the code? An example of this could be:; ```python; arrray = np.array([1,2]) # length 2 array; qobj*array; ```; This will return `TypeError` but with a different message if we catch it in the `complex(other)` try execpt. ; - _With_ a try execpt that returns NotImplemented (current implementation) the error message is:` TypeError: operand 'Qobj' does not support ufuncs (__array_ufunc__=None)`; - Wehreas _without_ the try expect (not returnt NotImplemented if `complex(other)` fails), the error message is: `TypeError: only length-1 arrays can be converted to Python scalars`, which could be a useful error message.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1620#issuecomment-885550798:1534,error,error,1534,https://qutip.org,https://github.com/qutip/qutip/pull/1620#issuecomment-885550798,3,['error'],['error']
Availability,"There is numerical error in the answer due to the need for the sqrtm method. I am not sure if I would call this error significant as the error is of order 1e-7, while the fidelity is of order unity. However, as Chris said, there might be a better way for pure states. Paul. > On Aug 26, 2015, at 13:11, dick-t notifications@github.com wrote:; > ; > fidelity() returns >1 by a significant amount for certain pure states. States are normalised, and taking the inner product returns 1. Code below provides two examples of states which give fidelity >1 with themselves.; > ; > #to test qutip's fidelity routine; > import qutip as qu; > ; > psi0=qu.Qobj(); > ; > i=0; > while i<=1:; > j=0; > while j<=1:; > psi0+=qu.state_number_qobj([2,2],[i,j]) #even superposition of qubit states; > j+=1; > i+=1; > ; > psi0=psi0.unit() #normalise; > ; > print(qu.fidelity(psi0,psi0)); > print((psi0.dag()_psi0).norm()_*2); > print(""\n""); > ; > psi0=qu.tensor(psi0,qu.basis(10,1)) #tensor product with Fock state; > ; > print(qu.fidelity(psi0,psi0)); > print((psi0.dag()_psi0).norm()_*2); > ; > Output:; > ; > 1.00000002107; > 1.0; > ; > 1.00000003485; > 1.0; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/361#issuecomment-134832098:19,error,error,19,https://qutip.org,https://github.com/qutip/qutip/issues/361#issuecomment-134832098,3,['error'],['error']
Availability,"There is one particular setup where the sparse eigen solver segfault. This happen with pure scipy and is not related to qutip.; Looking into it, I saw that when we installed qutip, it updated scipy version. It downgraded scipy 1.12 to 1.11, thus we never tested for 1.12.; Also build isolation meant that the version of numpy, scipy and cython we set in our test matrix did not match the one at installation. This is not ideal for cython since the compilation version could have a major impact. I set it to not use build isolation and used the matrix set version to compile qutip.; This had the side effect of not using the setup that caused the segfault and solving the failing test issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2361#issuecomment-2019207660:210,down,downgraded,210,https://qutip.org,https://github.com/qutip/qutip/pull/2361#issuecomment-2019207660,1,['down'],['downgraded']
Availability,"There may be some who would wish continue using the mingw compiler on Windows, as it is a smaller download. I guess we could just say that we only support MS compilers on Windows.; Would the zspmv.cpp need to be platform or compiler specific?; Is it possible to choose flags / source based on which compiler is being used? I have seen in the cython generated C that there are compiler specific conditionals in the directives.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/648#issuecomment-280327270:98,down,download,98,https://qutip.org,https://github.com/qutip/qutip/pull/648#issuecomment-280327270,1,['down'],['download']
Availability,"There's a new failure on an `mesolve` test in the Xcode 12 branch based on the relative tolerance. It's _probably_ fine, but maybe just check. Let's merge the fix for that in with this so we don't end up with the `diag_liou_mult` problem again (that I still haven't sorted out...). It's probably just a case of being a little more lenient with the test tolerance.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1462#issuecomment-805883421:14,failure,failure,14,https://qutip.org,https://github.com/qutip/qutip/pull/1462#issuecomment-805883421,3,"['failure', 'toler']","['failure', 'tolerance']"
Availability,"These failing tests are different from those random failing we've been seeing before. I also have this in my scheduler PR, but it is completely unrelated to the PR. It starts to appear yesterday, but nothing was merged in the last three weeks. Does anyone have a clue?. The error seems to come from the core data part @jakelishman @Ericgig. Scipy made a release 4 days ago and we are using one of the private attributes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-649280292:274,error,error,274,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-649280292,1,['error'],['error']
Availability,"These fortran errors only appears when installing through the dist file. When installing from the source directory in the repo it works. Something is missing the the dist file, perhaps the .f2py_f2cmap file or something similar.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/197#issuecomment-49159675:14,error,errors,14,https://qutip.org,https://github.com/qutip/qutip/pull/197#issuecomment-49159675,1,['error'],['errors']
Availability,"This PR should be independent of #332, as it fixes a visual error with plotting of channels as Pauli-basis superoperators.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/356#issuecomment-125611531:60,error,error,60,https://qutip.org,https://github.com/qutip/qutip/pull/356#issuecomment-125611531,1,['error'],['error']
Availability,"This all looks very sensible to me. I'm happy with `qobj * matrix` and `matrix * qobj` both being disallowed (though I also wouldn't mind allowing Numpy to broadcast the multiplication treating `Qobj` as a scalar). The thin wrappers around `add_csr` and `add_dense` (and `add_csr_dense_dense`, etc, if they exist), only need to be done when they're passed to the dispatcher - the functions themselves should remain as they are, so they can conveniently be called with C semantics without needing to cast up to a Python object and back down again. `data.add(left, right, scale)` done at arbitrary precision with no tidying up should be identical to `data.add(left, data.mul(right, scale))` (the operation is called ""fused multiply-add""), so yeah, `add` should agree with `mul`. Good catch!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1607#issuecomment-883321575:535,down,down,535,https://qutip.org,https://github.com/qutip/qutip/issues/1607#issuecomment-883321575,1,['down'],['down']
Availability,"This all seems incredibly complicated. How about all specialisations stored in the dispatcher take `object` as the scalar type, and throw a TypeError if they can't handle it. `Qobj.__mul__` just does a `try/except`, and returns `NotImplemented` if it catches a TypeError. If it doesn't catch a type error, it calls a separate function, something like; ```python; @functools.singledispatch; def _scalar_properties(x):; return {; # if the matrix was Hermitian, is the output Hermitian (True), or not known (False); 'preserves_hermicity': bool,; # regardless of the input matrix, is the output Hermitian (True), or not known (False); # (i.e. was the scalar zero-like).; 'forces_hermicity': bool,; # if the matrix was unitary, is it still unitary (True), or not known (False); 'preserves_unitarity': Optional[bool],; }; ```; Then just register types with the functools dispatcher?. So then `Qobj.__mul__` looks like:; ```python; def __mul__(self, other):; if isinstance(other, (Qobj, QobjEvo)):; return self.__matmul__(other); try:; out = _data.mul(self.data, other); except TypeError:; return NotImplemented; properties = _scalar_properties(other); isherm = properties['forces_hermicity'] or (self.isherm and properties['preserves_hermicity'] or None); isunitary = self.isunitary and properties['preserves_unitarity'] or None; return Qobj(; out, copy=False, dims=self.dims, isherm=isherm, isunitary=isunitary,; ); ```; (I've probably not got the property truthiness checking exactly right, but that's the principle.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1620#issuecomment-889018969:299,error,error,299,https://qutip.org,https://github.com/qutip/qutip/pull/1620#issuecomment-889018969,1,['error'],['error']
Availability,"This can - see e.g. Numpy that uses the same licence. #1405 would add its additional copyright to the top of the file. This is actually _more_ useful in that case - it's far clearer that that code is under different licence conditions. That said, I'm really not certain about accepting #1405 in its current form. It's not using the data-layer correctly at all, and if we were to include it, we'd really want to do something like that in a more structured way in core QuTiP. Really it should be a properly dispatched implementation of `einsum`, but I think this should come in as part of a much larger discussion on how to handle tensor networks completely; to have it be nice and ergonomic in all cases, I think this will come in at the same time or after the introduction of new dimensions objects. I'm also very wary of introducing code to QuTiP which is licensed by a different holder. I can only imagine that that will really give us problems down the line - how long would NASA own the copyright on that code, for example? Could we modify it? After how many modifications is it no longer NASA's? We wouldn't have control over anything like that, and I think it's probably more hassle than it's worth on our side.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1579#issuecomment-864022506:947,down,down,947,https://qutip.org,https://github.com/qutip/qutip/pull/1579#issuecomment-864022506,1,['down'],['down']
Availability,"This code https://gist.github.com/nathanshammah/f96f6c1db5c323243a4729467cb7351f; Also, let me mention that the progress bar was giving some errors in qutip 4.3.1 and now it does not.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1024#issuecomment-503669133:141,error,errors,141,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-503669133,1,['error'],['errors']
Availability,"This does not raise a type error for me in either qutip 4.7.X or qutip 5.0.0a.; ```python; >>> import qutip; >>> qutip.__version__; '4.7.3'; >>> x = qutip.sigmax(); >>> x += x; >>> x; Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True; Qobj data =; [[0. 2.]; [2. 0.]]; ```; and; ```python; >>> import qutip; q>>> qutip.__version__; '5.0.0.dev0+ec33e6b'; >>> x = qutip.sigmax(); >>> x += x; >>> x; Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', isherm=True; Qobj data =; [[0. 2.]; [2. 0.]]; ```; Could you give a minimal reproducing example and the QuTiP version you're using?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2326#issuecomment-1960288737:27,error,error,27,https://qutip.org,https://github.com/qutip/qutip/issues/2326#issuecomment-1960288737,1,['error'],['error']
Availability,"This doubles the time taken for the documentation build from ~9 minutes to ~18 minutes. It would be nice to do slow things down, but the documentation build is also not the slowest part of the build yet, so we can live with it for the moment.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1883#issuecomment-1122374547:123,down,down,123,https://qutip.org,https://github.com/qutip/qutip/pull/1883#issuecomment-1122374547,1,['down'],['down']
Availability,"This error comes from the integration algorithm.; Take a differential equation like dy/dt = -i*y.; With a simple method like euler: ; y(t+dt) = y(t) + f' dt = y(1-i*dt); So the norm increase exponentially *(1+dt**2) at each iteration, not somewhat randomly.; The default method we use is ""adams"" from scipy's solver, which is a lot better than euler, but still have a bias. We also stop the solver for re-normalization of the state from time to time, introducing another bias.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1085#issuecomment-531322708:5,error,error,5,https://qutip.org,https://github.com/qutip/qutip/issues/1085#issuecomment-531322708,1,['error'],['error']
Availability,This error is because of a conflict between versions. Remove the old qutip installation in /usr/local/lib/python2.7/dist-packages/qutip and reinstall the development version.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42904625:5,error,error,5,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42904625,1,['error'],['error']
Availability,"This error is not related to your work. It happens sometimes because some of the solvers in qutip are stochastic (in this case mcsolve) and occasionally the averaged results have errors that exceed the thresholds we set in the tests. We could fix it by increasing the number of trajectories in the simulation, but this would add time to the test suite which already takes a while to run.. So its a trade off between making the tests run as fast as possible and not getting too many false errors. I've restarted the test on travis, probably it will not fail again this time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/246#issuecomment-63485058:5,error,error,5,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-63485058,3,['error'],"['error', 'errors']"
Availability,This error message suggests to me that one of the things you're trying to add might be a numpy array:; ```; TypeError: operand 'Qobj' does not support ufuncs (__array_ufunc__=None); ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2326#issuecomment-1960290022:5,error,error,5,https://qutip.org,https://github.com/qutip/qutip/issues/2326#issuecomment-1960290022,1,['error'],['error']
Availability,This fails because time only contain `0.5`. ; You probably meant `time.append(0.5*i)`. The error message is a catch-all for failure in scipy solver and certainly not clear.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605#issuecomment-879178905:91,error,error,91,https://qutip.org,https://github.com/qutip/qutip/issues/1605#issuecomment-879178905,2,"['error', 'failure']","['error', 'failure']"
Availability,"This fails for python2.7 and it might also be related to older scipy version. I could not even install it locally in my python2.7 conda environment with scipy 0.15 as I get some compile errors for the `cy/brtools` module. One more reason to move to Python 3 and update scipy perhaps. @ajgpitch . If you have seen this error before with a conda env clashing with the Python GIL, please let me know,; ```; qutip/cy/brtools.pyx:98:51: Converting to Python object not allowed without gil; Traceback (most recent call last):; ```; The conda environment is as follows:; ```; # packages in environment at /Users/shahnawaz/miniconda3/envs/python2:; #; # Name Version Build Channel; blas 1.0 mkl; ca-certificates 2018.4.16 0 conda-forge; certifi 2018.4.16 py27_0 conda-forge; cython 0.28.3 py27_0 conda-forge; intel-openmp 2018.0.3 0; libgfortran 3.0.1 h93005f0_2; mkl 2018.0.3 1; ncurses 5.9 10 conda-forge; numpy 1.9.3 py27hb3dd696_3; numpy-base 1.14.3 py27ha9ae307_2; openblas 0.2.20 8 conda-forge; openssl 1.0.2o 0 conda-forge; pip 9.0.3 py27_0 conda-forge; python 2.7.15 0 conda-forge; qutip 4.3.0.dev0+2a849f2e <pip>; readline 7.0 0 conda-forge; scipy 0.15.1 np19py27_0; setuptools 39.2.0 py27_0 conda-forge; sqlite 3.20.1 2 conda-forge; tk 8.6.7 0 conda-forge; wheel 0.31.0 py27_0 conda-forge; zlib 1.2.11 h470a237_3 conda-forge; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/861#issuecomment-396111344:186,error,errors,186,https://qutip.org,https://github.com/qutip/qutip/pull/861#issuecomment-396111344,2,['error'],"['error', 'errors']"
Availability,"This is a really great idea! Since we're putting this into version 5, I have a suggestion to take things a small step further and try the following:. Let's have only one function element type that accepts functions of the form `f(t, ...)` where `...` is any signature that does not include `POSITIONAL_ONLY` arguments (i.e. no `/`) or a `VAR_POSITIONAL` argument (i.e. no `*args`) and is implemented as follows:. When the function element is constructed, we use `inspect.signature(f)` to:. * raise an error if any `POSITIONAL_ONLY` or `VAR_POSITIONAL` arguments are present; * determine the list of `POSITIONAL_OR_KEYWORD` argument; * determine whether a `VAR_KEYWORDS` argument is present. When the function arguments are updated:. * if `VAR_KEYWORDS` was present, we just keep all arguments; * if not, set the arguments to just `{k: new_args[k] for k in argument_list}`. When the function element is called:. * we can just just call `f(t, **args)` as before, because `args` already contains either just the named arguments we want or all the arguments if a `VAR_KEYWORDS` argument was present in f. Thoughts?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1609#issuecomment-881312472:501,error,error,501,https://qutip.org,https://github.com/qutip/qutip/pull/1609#issuecomment-881312472,1,['error'],['error']
Availability,This is also an error for me. Do I need to downconvert matplotlib for windows as well?. QuTiP Version: 4.6.2; Numpy Version: 1.21.2; Scipy Version: 1.7.1; Cython Version: 0.29.24; Matplotlib Version: 3.5.0; Python Version: 3.9.7; Number of CPUs: 12; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\XXX\Anaconda3\envs\qutip\lib\site-packages\qutip,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1326#issuecomment-996827395:16,error,error,16,https://qutip.org,https://github.com/qutip/qutip/issues/1326#issuecomment-996827395,2,"['down', 'error']","['downconvert', 'error']"
Availability,"This is an artifact of `auto_tidyup`; the object in the picture is zero everywhere except the diagonal, whose values are of the order 1e-7. The first step of calculating the trace norm is to do `op @ op.dag()`, which you can see will make all the diagonal entries of order 1e-14. This is below the default tolerance for `auto_tidyup`, so the resulting sparse matrix gets contracted to zero. This happens within `Qobj.norm`, so cannot be intercepted by the user. Can be worked around by temporarily setting `qutip.settings.auto_tidyup = False`, but that's just a work-around. Fixed already in `dev.major`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/952#issuecomment-809684497:306,toler,tolerance,306,https://qutip.org,https://github.com/qutip/qutip/issues/952#issuecomment-809684497,1,['toler'],['tolerance']
Availability,This is an issue with `matplotlib` rather than `QuTiP`. A possible workaround is downgrading to version 3.2.2.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1385#issuecomment-732099730:81,down,downgrading,81,https://qutip.org,https://github.com/qutip/qutip/issues/1385#issuecomment-732099730,1,['down'],['downgrading']
Availability,"This is because I switched the linear solver used by expm to the sparse version added to scipy. The upside is that we can use expm for larger systems, the downside is that the routine now obviously takes longer.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/50#issuecomment-29263828:155,down,downside,155,https://qutip.org,https://github.com/qutip/qutip/issues/50#issuecomment-29263828,1,['down'],['downside']
Availability,"This is due to numerical error in the integration, you can change the precision in options:; `Options(max_step=1/(wr * 100), atol=1e-9, rtol=1e-9)`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2258#issuecomment-1793050302:25,error,error,25,https://qutip.org,https://github.com/qutip/qutip/issues/2258#issuecomment-1793050302,1,['error'],['error']
Availability,"This is just a test. ; Since many failed Travis builds had a malloc error, also according to [this StackOverflow thread](https://stackoverflow.com/questions/19840671/malloc-error-incorrect-checksum-for-freed-object-object-was-probably-mod/19841133) it seemed that XCode was the source of the problem. . I added as osx environment in the travis configuration file xcode 10.2 (should be on osx 10.14 Mojave, not sure though). Build still fails, now at ; ```; Qobj subtraction ... python(2491,0x1192585c0) malloc: Incorrect checksum for freed object 0x7ffe6ff1ad50: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(2491,0x1192585c0) malloc: *** set a breakpoint in malloc_error_break to debug; /Users/travis/.travis/functions: line 104: 2491 Abort trap: 6 nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; The command ""nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip"" exited with 134.; ```; which seems a pretty basic test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/985#issuecomment-485054530:68,error,error,68,https://qutip.org,https://github.com/qutip/qutip/pull/985#issuecomment-485054530,2,['error'],"['error', 'error-incorrect-checksum-for-freed-object-object-was-probably-mod']"
Availability,"This is numerical error from the ODE solver.; Try changing the solver tolerance:; `sesolve(..., options=Options(atol=1e-10)`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2275#issuecomment-1839300126:18,error,error,18,https://qutip.org,https://github.com/qutip/qutip/issues/2275#issuecomment-1839300126,2,"['error', 'toler']","['error', 'tolerance']"
Availability,"This is something I can do or help someone with guidance. We simply need to do the following: ; - add intersphinx as extension in the `conf.py` file; - find the functions / objects we use from other libraries and add to `conf.py` such libraries; - change the cited functions classes with the correct reference, e.g. ```:class:`qiskit.QuantumCircuit` ```; The `krotov` library by @goerz shows how to do it, see [here](https://github.com/qucontrol/krotov/blob/0e8a4dbe81bd3986dbc5c4464d49131727fd57ef/docs/conf.py). ; The tilde `~` can be used to cut down the prefix of the cited module/function/class/method, e.g., from ```:class:`qiskit.QuantumCircuit` ``` to ```:class:`~qiskit.QuantumCircuit` ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1528#issuecomment-619395402:549,down,down,549,https://qutip.org,https://github.com/qutip/qutip/issues/1528#issuecomment-619395402,1,['down'],['down']
Availability,"This is somewhat unrelated, but I might also mention that I have experienced getting different answers for the dense and the sparse solver. This has nothing to do with qutip, as I tried calling scipy.linalg.eigvals() and scipy.sparse.eigs() directly. In certain cases, the sparse solver would output completely different values (difference being much larger than the specified relative tolerance), even though the maximum number of iterations was not reached. Not sure what to make of it, but I guess I would trust the dense solver more than the sparse one.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/16#issuecomment-16368695:386,toler,tolerance,386,https://qutip.org,https://github.com/qutip/qutip/issues/16#issuecomment-16368695,1,['toler'],['tolerance']
Availability,This is the same error as #681. It is an issue with the Arch linux package. You should install another way.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/690#issuecomment-298933237:17,error,error,17,https://qutip.org,https://github.com/qutip/qutip/issues/690#issuecomment-298933237,1,['error'],['error']
Availability,This is weird it is showing an apparently unrelated failure while saving and loading pickles. And the CI times seem longer.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1498#issuecomment-822631709:52,failure,failure,52,https://qutip.org,https://github.com/qutip/qutip/pull/1498#issuecomment-822631709,1,['failure'],['failure']
Availability,"This issue has a two-fold interest: decreasing test time in general and expand the platforms through which QuTiP is available. . What is the reason it takes so long on Nix? QuTiP, in the [latest PR](https://travis-ci.org/qutip/qutip/builds/628865624?utm_source=github_status&utm_medium=notification), takes on average 20 minutes to run its tests on a given platform. Much of this I think is due to the Cython configurations, indeed the no-cython option takes only 13 minutes. My first suggestion would be to try without Cython if things speed up, from those requirements (@Ericgig set that up and I am not knowledgeable about it). . From your PR on `nixpkgs` do you build on Travis CI or a similar cloud? If you could give a list of time taken by the different tests that would help. . The idea of a subset of tests is interesting (essential tests vs. thorough tests), in general; for example thorough tests could be done only in production and a lighter version could be called with `qutip.testing.run()`. Although, in specific, it is not clear to me how to triage which tests to skip. I would be glad to have the others opinion on this too (pinged them as assignees).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1147#issuecomment-569696700:116,avail,available,116,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569696700,2,"['avail', 'ping']","['available', 'pinged']"
Availability,"This issue has been answered online on [StackOverflow](https://stackoverflow.com/questions/42178706/python-animation-funcanimation-error-object-is-not-iterable), exactly relative to the QuTiP question (!). If I implement the fix though, the saved mp4 file is empty and another error is given, ; ```; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-32-9b6a11dd33f8> in <module>(); 41 ani = ani.FuncAnimation(fig, animate, frames=t, init_func=ini, repeat=True); 42 plt.show(); ---> 43 ani.save('bloch_sphere.mp4', fps=20). ~/miniconda3/lib/python3.6/site-packages/matplotlib/animation.py in save(self, filename, writer, fps, dpi, codec, bitrate, extra_args, metadata, extra_anim, savefig_kwargs); 1198 # TODO: See if turning off blit is really necessary; 1199 anim._draw_next_frame(d, blit=False); -> 1200 writer.grab_frame(**savefig_kwargs); 1201 ; 1202 # Reconnect signal for first draw if necessary. ~/miniconda3/lib/python3.6/contextlib.py in __exit__(self, type, value, traceback); 97 value = type(); 98 try:; ---> 99 self.gen.throw(type, value, traceback); 100 except StopIteration as exc:; 101 # Suppress StopIteration *unless* it's the same exception that. ~/miniconda3/lib/python3.6/site-packages/matplotlib/animation.py in saving(self, fig, outfile, dpi, *args, **kwargs); 239 yield self; 240 finally:; --> 241 self.finish(); 242 ; 243 . ~/miniconda3/lib/python3.6/site-packages/matplotlib/animation.py in finish(self); 365 def finish(self):; 366 '''Finish any processing for writing the movie.'''; --> 367 self.cleanup(); 368 ; 369 def grab_frame(self, **savefig_kwargs):. ~/miniconda3/lib/python3.6/site-packages/matplotlib/animation.py in cleanup(self); 403 def cleanup(self):; 404 '''Clean-up and collect the process used to write the movie file.'''; --> 405 out, err = self._proc.communicate(); 406 self._frame_sink().close(); 407 _log.debug('MovieWriter -- Command stdout:\n%s', out). ~/miniconda3",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/799#issuecomment-497315077:131,error,error-object-is-not-iterable,131,https://qutip.org,https://github.com/qutip/qutip/issues/799#issuecomment-497315077,2,['error'],"['error', 'error-object-is-not-iterable']"
Availability,"This latest commit 77c21f8 fixes several bugs in the testing of `qutip.qip.operations.gates` - see the commit message for more details. (Force-pushed a new version of it to increase the commit hash references by one character, so GitHub would pick them up and link them.). We should also add tests that the explicit forms of the gates are correct (comparing to hard-coded arrays) in their base forms. These tests should never really fail, but they should be there as a fail-safe sanity check against somebody changing things in that module in the future.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-593333553:469,fail-safe,fail-safe,469,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-593333553,1,['fail-safe'],['fail-safe']
Availability,"This no longer has any conflicts. However, as usual, the errors are generated by qutip.tests.test_subsys_apply as given in Issue #430.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/421#issuecomment-184880374:57,error,errors,57,https://qutip.org,https://github.com/qutip/qutip/pull/421#issuecomment-184880374,1,['error'],['errors']
Availability,"This particular segfault is solved by #1288 - it's related to a bust `zheevr` implementation in the Mac OpenBLAS stack somewhere or another (may even be in `scipy`'s binding, we never tracked it down exactly). This doesn't mean all segfaults on Mac are fixed - see also #1160, which I believe still occasionally rears its head and we have no idea about.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093#issuecomment-809350853:195,down,down,195,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-809350853,1,['down'],['down']
Availability,This problem has since gotten worse. The linked notebook is no longer available. I'm going to update the documentation with the numbering convention.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/385#issuecomment-350960435:70,avail,available,70,https://qutip.org,https://github.com/qutip/qutip/issues/385#issuecomment-350960435,1,['avail'],['available']
Availability,"This randomly failing test appears again. It is really getting annoying. I copied the error message from Travis bellow:. ```; =================================== FAILURES ===================================; ___________________________ test_MCSimpleConstStates ___________________________; @pytest.mark.slow; def test_MCSimpleConstStates():; ""Monte-carlo: Constant H with constant collapse (states)""; N = 10 # number of basis states to consider; a = destroy(N); H = a.dag() * a; psi0 = basis(N, 9) # initial state; kappa = 0.2 # coupling to oscillator; c_op_list = [np.sqrt(kappa) * a]; tlist = np.linspace(0, 10, 100); mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; options=Options(average_states=True)); assert_(len(mcdata.states) == len(tlist)); assert_(isinstance(mcdata.states[0], Qobj)); expt = expect(a.dag() * a, mcdata.states); actual_answer = 9.0 * np.exp(-kappa * tlist); avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > assert_equal(avg_diff < mc_error, True); E AssertionError: ; E Items are not equal:; E ACTUAL: False; E DESIRED: True; ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; ----------------------------- Captured stdout call -----------------------------; 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; Total run time: 20.34s; ---------- coverage: platform darwin, python 3.7.7-final-0 -----------; Name ; ```; Restart the tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1209#issuecomment-607477749:86,error,error,86,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607477749,2,"['FAILURE', 'error']","['FAILURES', 'error']"
Availability,This second commit fixes the test error in `test_ptrace.py` - the commit message in 6c85261 explains what I've done. The errors in `brtools` are due to a much more difficult fix to implement. See #1299.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1298#issuecomment-649502147:34,error,error,34,https://qutip.org,https://github.com/qutip/qutip/pull/1298#issuecomment-649502147,2,['error'],"['error', 'errors']"
Availability,"This segfault is still _very_ occasionally present on Mac as of QuTiP 4.6.0 and the current master (624405e7). Unfortunately, I've not been able to find any sort of reliable reproducer, so I can't offer a huge amount of insight into what might be causing it. Here's an example output:; ```; jake@tauros$ pytest tests/test_superop_reps.py; =========================================================================================== test session starts ============================================================================================; platform darwin -- Python 3.8.8, pytest-6.2.3, py-1.10.0, pluggy-0.13.1; rootdir: /Users/jake/code/qutip/qutip/qutip/tests, configfile: pytest.ini; plugins: rerunfailures-9.1.1; collected 15 items. tests/test_superop_reps.py ..F............ [100%]. ================================================================================================= FAILURES =================================================================================================; ____________________________________________________________________________________ TestSuperopReps.test_ChoiKrausChoi ____________________________________________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x11f1140d0>. Fatal Python error: Segmentation fault. Current thread 0x000000010c77b5c0 (most recent call first):; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 312 in _optimize_charset; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 120 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 607 in _code; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 768 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 304 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 252 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:165,reliab,reliable,165,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502,2,"['FAILURE', 'reliab']","['FAILURES', 'reliable']"
Availability,This should be addressed in Pull #801. The only other reported instance of error when using the MKL solver was resolved when the new kwarg `weighted_matching=False` is used in the steady state solver.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/791#issuecomment-358553914:75,error,error,75,https://qutip.org,https://github.com/qutip/qutip/issues/791#issuecomment-358553914,1,['error'],['error']
Availability,"This should be fixed by #428. I tried running tests locally several times, and didn't observe any failures. If Travis checks out on that PR, I'll merge it and close both issues.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/425#issuecomment-183599625:98,failure,failures,98,https://qutip.org,https://github.com/qutip/qutip/issues/425#issuecomment-183599625,1,['failure'],['failures']
Availability,"This shouldn't segfault (we should detect it and turn it into a Python error, so that's definitely a bug), but do note that you'd need a supercomputer to actually use a system of that size - storing a single operator or state of this system would require 8GB of RAM even if it were the 0 operator.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1406#issuecomment-747009088:71,error,error,71,https://qutip.org,https://github.com/qutip/qutip/issues/1406#issuecomment-747009088,1,['error'],['error']
Availability,"This will repeat the issue quite quickly and always reliability; ```; import traceback; import sys; import qutip.tests.test_interpolate as test_interpolate; import qutip.tests.test_mcsolve as test_mcsolve. def main():. try:; test_interpolate.test_interpolate_brevolve3(); test_mcsolve.test_MCCollapseTimesOperators(). print(""Tests passed""); except:; print(""Test failed:""); traceback.print_exc(). if __name__ == ""__main__"":; main(); ```. The main function is necessary on windows for scripts that use multiprocessing somewhere",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/728#issuecomment-317279772:52,reliab,reliability,52,https://qutip.org,https://github.com/qutip/qutip/issues/728#issuecomment-317279772,1,['reliab'],['reliability']
Availability,"This won't be easy to fix, if the compilation is in the task, `parfor` cannot know about it to wait for it.; The simplest would be to have only the main process able to compile. This code will still raise an error, but the solution would be in the error message.; Otherwise communication between process would be needed and this can get tricky. Also `parfor` will be removed. It says in its [documentation](https://qutip.org/docs/latest/apidoc/functions.html#qutip.parallel.parfor) to use `parallel_map` instead since v3.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1963#issuecomment-1199314433:208,error,error,208,https://qutip.org,https://github.com/qutip/qutip/issues/1963#issuecomment-1199314433,2,['error'],['error']
Availability,Those are subject to some error since the monte carlo method is random. Try to run it again.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/729#issuecomment-317799666:26,error,error,26,https://qutip.org,https://github.com/qutip/qutip/pull/729#issuecomment-317799666,1,['error'],['error']
Availability,"Those do match. The absolute error is ~3.5e-5, which is the same as the error made in interpolating this particular cosine function with 1000 points. So again this comes down to considering the error inherent in making an interpolation, like I said in the previous comment.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1472#issuecomment-819560261:29,error,error,29,https://qutip.org,https://github.com/qutip/qutip/issues/1472#issuecomment-819560261,4,"['down', 'error']","['down', 'error']"
Availability,"Those last two CI failures are exceedingly odd, especially since they're not consistent with each other, and those last two commits essentially don't do anything. I'm unable to reproduce either test failure on my machine. The `mcsolve` error _could_ have just been unfortunate chance, since `mcsolve` is inherently a bit random, but the errors in `test_interpolate.py` are really odd. I can't reproduce it at all, and it's inconsistent - it says that `mesolve` and `mcsolve` have (the same!) issue with one particular case, but in that case `mcsolve` decays exactly to `sesolve`, and that test passed...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-604114734:18,failure,failures,18,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-604114734,4,"['error', 'failure']","['error', 'errors', 'failure', 'failures']"
Availability,"To elaborate a little on the syntax: There's two prefixes (which can also be combined), `.` and `~`. (There's also `!`, but I don't know when you'd ever use that one.). The `~` cuts down the name in the *output* to the last component. That is, if you write a reference using the fully qualified name `` :class:`~qiskit.QuantumCircuit` `` it will show up in the rendered HTML as ""QuantumCircuit"" (without the tilde, it would be the full ""qiskit.QuantumCricuit"". The`.` is for cutting down the name in the *input*, e.g. you could write `` :func:`.mesolve` `` instead of `` :func:`qutip.mesolve.mesolve` `` anywhere, and Sphinx will search its internal index for any fully qualified name that ends in `.mesolve` and use that. This is great for keeping docstrings readable, but I'd avoid using it to refer to *external* functions (from intersphinx). See the Sphinx documentation on [Cross-referencing syntax](https://www.sphinx-doc.org/en/1.8/usage/restructuredtext/domains.html#cross-referencing-syntax) and the explanations at the end of [Cross-referencing Python objects](https://www.sphinx-doc.org/en/1.8/usage/restructuredtext/domains.html#cross-referencing-python-objects) for details.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1528#issuecomment-619413454:182,down,down,182,https://qutip.org,https://github.com/qutip/qutip/issues/1528#issuecomment-619413454,2,['down'],['down']
Availability,"To illustrate the point further for dimension 8 the resulting superoperator has dims `[[[8, 8], [8, 8]], [[8, 8], [8, 8]]]` this amounts to 16777216 numbers. If the differences in each is of the order of 1e-8 this test will not pass, as the resulting total error will be well above 1e-5. . This difference is not seen in scipy versions :; - 1.5; - 1.6; - 1.6.2. Going deeper when running the 8 dimension tests in scipy 1.4 set to verbose this error is thrown. >Intel MKL ERROR: Parameter 12 was incorrect on entry to ZHBRDB. looking at it in stackoverflow ; https://stackoverflow.com/questions/54314529/mkl-error-parameter-12-for-large-matrices-with-scipy-linalg-eigvalsh-in-an. and then looking at the PR history in scipy I found this. https://github.com/scipy/scipy/pull/11304. which refers to this issue in particular. https://github.com/scipy/scipy/issues/8205. which seems in consonance with my finding. Scipy 1.4 has issues in its `linalg.eigh()` API Iam surprised this is not producing errors elsewhere. Specially when calculating the tracenorm.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-817235661:257,error,error,257,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-817235661,5,"['ERROR', 'error']","['ERROR', 'error', 'error-parameter-', 'errors']"
Availability,"To me this is a question of what guarantees our primary type makes, so it's quite a big decision to be taken. I'm not sure I agree that implementing `__array_wrap__` is a good idea - `Qobj` does not support ufunc semantics, and implementing that implies that we're a similar class to `ndarray`, which I don't think we are. I don't think `np.sin(qobj)` should return `ndarray` _or_ `Qobj`; I think it should be a TypeError. To me, we should be rather conservative about adding features like that when there's little tangible benefit - when there's a slightly more explicit alternative syntax, it's better to fail-safe than add potential ""gotchas"". The fact that elementwise operations are not part of the algebra of `Qobj` should be enough of a reason to cause you to have to explicitly ask for it, otherwise it tacitly _becomes_ part of the algebra. For your point three, if that's the case, I'd argue you're doing something wrong: are you constructing the `Qobj` before you've finalised your data? Shouldn't it be; ```python; incomplete_data = np.array([[theta, 0, 0], ...]); return Qobj(np.sin(incomplete_data)); ```; not; ```python; return np.sin(Qobj(incomplete_data)); ```. As a compromise, we could ensure that all our data-layer types (`CSR`, `Dense`, whatever else) will support ufuncs with ndarray syntax; then you could do `Qobj(np.sin(qobj.data))` to be explicitly elementwise if you really wanted, rather than absolutely requiring you to produce a full dense matrix. I'm still not sure I see the use case there, though. I'm in favour of removing `np.array([qobj1, qobj2, ...], dtype=object)` usage inside QuTiP no matter which way we come down on this, though. As far as I recall from seeing it, there no reason to use `ndarray` over a regular Python list in any of our internal use, and it's rarely (if ever) actually returned out of a QuTiP function. Given it might cause subtle differences between different numpy versions, probably best to avoid it. If GSoC applications are imminent, ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433#issuecomment-774058408:607,fail-safe,fail-safe,607,https://qutip.org,https://github.com/qutip/qutip/issues/1433#issuecomment-774058408,1,['fail-safe'],['fail-safe']
Availability,"Today I encountered the same problem when installing qutip 4.3.1 from conda-forge channel on Ubuntu 18.04. I have Anaconda 2018.12 with Python 3.7. Installing via pip in the system python didn't work either. The solution was in fact to install from source in anaconda which I did in the following manner:; 1. download the qutip source file from webpage, in my case it was: qutip-4.3.1.tar.gz; 2. write in terminal: ""whereis pip""; 3. choose the anaconda pip location, something like: /home/miriam/anaconda3/bin/pip ; 4. go to the directory where you downloaded the source file and type: sudo *here_goes_the_pip_location_from_previous_step* install qutip-4.3.1.tar.gz; 5. it finally works for me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-457501976:309,down,download,309,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-457501976,2,['down'],"['download', 'downloaded']"
Availability,"Tried to install Qutip in windows 10, but showing following errors while working. .; .; .; .....; U = propagator(H,1, unitary_mode='single'); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\propagator.py"", line 164, in propagator; _safe_mode=False); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py"", line 185, in sesolve; progress_bar); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py"", line 520, in _sesolve_list_str_td; exec(code, globals()); File ""<string>"", line 1, in <module>; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 462, in load_module; language_level=self.language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 231, in load_module; raise exc.with_traceback(tb); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccom",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:60,error,errors,60,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['error'],['errors']
Availability,"Turns out the failure in the Python 2 tests was because `Qobj` was declared `class Qobj():`, which supports getting properties, but not setting them. Thus, `isherm = None` was overriding the property call. I have less experience with Python 3, though, so I'm not sure why the reshuffling is causing the `dims` property to be set to `[[], []]`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/99#issuecomment-39650759:14,failure,failure,14,https://qutip.org,https://github.com/qutip/qutip/pull/99#issuecomment-39650759,1,['failure'],['failure']
Availability,"Unfortunately I have had some issues with `conda` in CI (for instance, it's solver uses quite a bit of memory, which had readthedocs actually shoot it down when solving the environment at some point). Also build matrices that test various combinations of optional dependencies are much cleaner when using a pure `pip` setup. I see your point though. I'll have to work around it for now. Thanks anyway!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-777706377:151,down,down,151,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-777706377,1,['down'],['down']
Availability,"Unfortunately not, or at least, certainly not the underlying cause - I was only able to reproduce the segfaults maybe once, but then it disappeared once I attached a debugger. It's very unlikely to be that particular test function, since I used to get them in fairly random locations. Just rearranging the test functions may have caused it to temporarily disappear, but it'll be back eventually until we find out whatever use-after-free or out-of-bounds error's actually causing it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1251#issuecomment-624835925:454,error,error,454,https://qutip.org,https://github.com/qutip/qutip/pull/1251#issuecomment-624835925,1,['error'],['error']
Availability,"Uninstalling cython or using a virtualenv without it will make the risky code make an import error and not crash. cython is needed for installation, but mostly optional at runtime. It can be used to speedup some computations but usually the compilation time is not worth it. Or, you can run tests per section:; ```; import nose; import glob; for testfile in glob.glob("".../qutip/qutip/tests/*.py):; test = testfile[N:-3].repace(""\"",""."") # remove the whole path and the .py: ( ""qutip.tests.test_qobj"" ); nose.run(defaultTest=test, argv=['nosetests', '-v']); ```; test_mccolve, test_stochastic_se and test_stochastic_me will fail/crash, but I expect most of the rest to pass.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1084#issuecomment-531884694:93,error,error,93,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-531884694,1,['error'],['error']
Availability,"Update to 4.1 dev or do [e_ops]. -P. On Feb 9, 2017 06:10, ""WolfgangLechner"" <notifications@github.com> wrote:. > To reproduce the problem:; >; > -; >; > run Lecture 8 - Adiabatic sweep from qutip lectures with qutip 4.02; > -; >; > Error message:; >; > Traceback (most recent call last):; > File ""as.py"", line 92, in; > mesolve(h_t, psi0, taulist, [], process_rho, args); > File ""/usr/local/lib/python2.7/site-packages/qutip/mesolve.py"", line 208,; > in mesolve; > _solver_safety_check(H, rho0, c_ops, e_ops, args); > File ""/usr/local/lib/python2.7/site-packages/qutip/solver.py"", line 822,; > in _solver_safety_check; > for ii in range(len(e_ops)):; > TypeError: object of type 'function' has no len(); >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/645>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqUOt9R6_QP67bFpCcaIVV3D2Su2cks5raxBggaJpZM4L8Gzy>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/645#issuecomment-278673105:233,Error,Error,233,https://qutip.org,https://github.com/qutip/qutip/issues/645#issuecomment-278673105,1,['Error'],['Error']
Availability,"Using `tempfile.TemporaryDirectory()` as a context manager doesn't change the current directory, so we should be allowed to `cd` into the directory it returns... The documentation doesn't mention anything about not being able to as far as I can see, and regardless, if it fails it should raise an `OSError` and not crash the interpreter. I need to get a Windows box to try and debug this myself - it's difficult to know how to proceed without working out exactly what the problem is. We could try using the `cwd` kwarg of `subprocess.run`, but if you're not allowed to change into a temporary directory on Windows in any manner, then that may also fail. We don't want to run `pdflatex` in the user's directory, but ""officially"" we don't know exactly what files it will produce, so we can't reliably clean them all up. That's also not to mention the potential race condition that we get if two processes are trying to draw circuits simultaneously.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194#issuecomment-605333270:790,reliab,reliably,790,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605333270,1,['reliab'],['reliably']
Availability,"Using the exact same qutip, numpy, scipy and python versions, I still cannot reproduce your error. Perhaps something messed up your installation? I would recommend trying again in a fresh conda environment.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2536#issuecomment-2375830378:92,error,error,92,https://qutip.org,https://github.com/qutip/qutip/issues/2536#issuecomment-2375830378,1,['error'],['error']
Availability,"Using the stable release of QuTiP doesn't really help me: I'm trying to prepare a pull request for QuTiP, so I need to be able to run tests on `master` and my topic branch. I've been relying on the CI to run the tests for me, but that gets tricky once you run into test failures. You can't really debug the tests if you can't run them locally. I'm also not surprised you're not able to reproduce this on your machine on Linux: this is definitely a platform-dependent problem. The issue is that QuTiP's use of Cython is *extremely* brittle. This makes contributing to the library quite difficult. Until the most recent release (4.4.1), these kinds of problems were also affecting me and colleagues a lot as a user, but luckily that seems to have gotten better. Nonetheless, it would be great if QuTiP's low-level parts became even more robust. I know this is not a trivial problem (or I'd contribute some fixes myself), and I'm very thankful for all the core developers' work, but it's definitely a source of frustration.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093#issuecomment-540025634:270,failure,failures,270,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540025634,2,"['failure', 'robust']","['failures', 'robust']"
Availability,"Version 5 has `loky` (and mpi) based parallel maps available for when `multiprocessing` doesn't want to cooperate.; All maps are tests of linux, mac and windows.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1202#issuecomment-2029143757:51,avail,available,51,https://qutip.org,https://github.com/qutip/qutip/issues/1202#issuecomment-2029143757,1,['avail'],['available']
Availability,"Very probably. The integrator doesn't know what you're trying to achieve, and you've set it exact tolerance limits (either implicitly or explicitly), so it has to integrate within those limits. If you want the steady-state solution, you can try `qutip.steadystate` instead.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605#issuecomment-886246136:98,toler,tolerance,98,https://qutip.org,https://github.com/qutip/qutip/issues/1605#issuecomment-886246136,1,['toler'],['tolerance']
Availability,"We can in theory drop that requirement for users - it was there in the immediate aftermath of the Numpy 1.20 release, which broke C-ABI compatibility with previous versions, and we had a couple of problems with people building against Numpy 1.20 but trying to run against a prior version. Our CI and release versions will still all need to be built against Numpy 1.16 (or our minimum supported runtime Numpy) as the lowest common denominator until we drop support for all Numpy releases before 1.20, but we enforce that in our build pipelines anyway. Just to be clear (though I think you knew this):. > Can qutip be updated to run with current versions of Numpy?. QuTiP already runs correctly against Numpy 1.20 and Numpy 1.21, and its runtime requirements on Numpy are uncapped. It's just building from source that'll fail, and that was originally a sort of ""fail-safe"" mechanism. Also `pip install -e .` should automatically do build isolation for you, including installing all the build requirements into a temporary virtual environment, so it should have just worked here. Calling `setup.py develop` directly is kind of out-dated now, though it can still be useful if you're planning on doing Cython development; `pip`'s isolation actually usually means that the Cython compiler can't detect changes any more, so it always needs to rebuild everything. `setup.py develop`, because of its much lower-level status, leaves the source and extension-library files well enough untouched that it can do incremental compilation. If you're not doing Cython development (only Python), `pip install -e .` is much better.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1720#issuecomment-974830497:860,fail-safe,fail-safe,860,https://qutip.org,https://github.com/qutip/qutip/issues/1720#issuecomment-974830497,1,['fail-safe'],['fail-safe']
Availability,"We can't implement `__hash__` for `Qobj`, sorry - it's just not possible while following the [Python data model](https://docs.python.org/3/reference/datamodel.html#object.__hash__). The two principle points that a hash function must follow from there are; 1. objects which compare equal with `__eq__` have the same hash; 2. the hash of an object cannot change after instantiation (no mutable types). Unfortunately we fail on both points. `Qobj.__eq__` is a rounding match, because it gives a total `True` or `False` based on a floating point tolerance, not on exact equality. I'm not aware of any hash function which can handle this. Second, the `data` attribute of a `Qobj` is mutable in-place, and so hashing based on the data in the object is not valid. This is the same reason that `list` and `np.ndarray` are also not hashable types. If your cache is just for memoisation over a small number of `Qobj` where you know that floating-point tolerance will never be an issue, you may be able to get away with rolling your own cache decorator which uses linear lookup rather than constant-time. I mean something like; ```python; In [1]: import functools; ...: import qutip; ...:; ...: def linear_cache(f):; ...: cache = []; ...: @functools.wraps(f); ...: def out(*args):; ...: for cached_args, cached_value in cache:; ...: if args == cached_args:; ...: print(""Getting from cache""); ...: return cached_value; ...: print(""Computing new value""); ...: value = f(*args); ...: cache.append((args, value)); ...: return value; ...: return out; ...:; ...: @linear_cache; ...: def negate(x):; ...: return -x; ...:; ...: sx = qutip.sigmax(); ...: sy = qutip.sigmay(); ...: negate(sx); ...: negate(sx); ...: negate(sy); ...: negate(sx); ...: negate(sy); Computing new value; Getting from cache; Computing new value; Getting from cache; Getting from cache; ```; This will lead to degraded performance if you need to do it for a large number of possible inputs, but if you have a relatively small number of inputs an",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1321#issuecomment-658078277:542,toler,tolerance,542,https://qutip.org,https://github.com/qutip/qutip/issues/1321#issuecomment-658078277,2,['toler'],['tolerance']
Availability,"We have decided not to continue to maintain the Ubuntu channel. Please; install from source to using qutip 3.2.; Alternatively you can use the conda-forge channel if you are able to work; with qutip 3.1. On 9 May 2016 at 02:52, Qi notifications@github.com wrote:. > There doesn't seem to be the package released under Ubuntu 16.04 channel.; > After I added the Ubuntu PPA for QuTiP, I got the following error/warning:; > ; > qxd@ubuntu1604$: sudo apt-get update; > ...; > W: The repository 'http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu xenial Release' does not have a Release file.; > N: Data from such a repository can't be authenticated and is therefore potentially dangerous to use.; > N: See apt-secure(8) manpage for repository creation and user configuration details.; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-amd64/Packages 404 Not Found; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-i386/Packages 404 Not Found; > ; > Thanks for maintaining it :); > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/472",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/472#issuecomment-218122293:403,error,error,403,https://qutip.org,https://github.com/qutip/qutip/issues/472#issuecomment-218122293,1,['error'],['error']
Availability,"We have made some progress! But I also have some questions for the experts here.; * We have added a Users Guide for the new solver, as a new subsection of the ""Monte Carlo Solver"" guide. On my machine, I can build the documentation without problems (there are some warnings, but unrelated to this pull request). However, the check here failed and I do not see a useful error message. Does someone have an idea what is going on?; * We have two example notebooks to add to qutip-notebooks. How to proceed in practice: do we open a separate pull request in qutip-notebooks?; * The _run_one_traj function now exists 3 times, with practically identical code:; https://github.com/qutip/qutip/blob/master/qutip/solver/multitraj.py#L197; https://github.com/qutip/qutip/blob/master/qutip/solver/mcsolve.py#L427; https://github.com/pmenczel/qutip/blob/nonmarkovian-mcsolve/qutip/solver/nm_mcsolve.py#L160; I've noticed a small bug that has gone unnoticed because of this: ""step"" [here](https://github.com/qutip/qutip/blob/master/qutip/solver/multitraj.py#L206) should be ""integrate"", I think. Maybe it would be a good idea to make the type of `Result` that is used for single trajectories generic in multi-trajectory solvers (just like the `resultclass` is already generic in solvers in general)? I have implemented that [here](https://github.com/pmenczel/qutip/commit/4a25709f90ed7c6dc2153011ee5a8110f3957c95) and could merge that commit into this PR if you think that's a good idea. Side note: due to a WSL bug, some of my commit timestamps are messed up. Because of that, some commits seem to be shown out of order here...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2070#issuecomment-1446149901:369,error,error,369,https://qutip.org,https://github.com/qutip/qutip/pull/2070#issuecomment-1446149901,1,['error'],['error']
Availability,"We have not modified the sp_eigs code in some time. Also, the only error that I have ever seen is subsys_apply. Taking care of that test would cure most, if not all, of our issues.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/430#issuecomment-184881659:67,error,error,67,https://qutip.org,https://github.com/qutip/qutip/issues/430#issuecomment-184881659,1,['error'],['error']
Availability,"We made good progress updating the documentation for v5, we are mostly missing pages for new features and porting from v4 to v5, which would be hard to write without being up to date with recent progress.; However if you want to take a look with fresh eyes, fix error, improve wording, fix broken links, etc. it would be greatly appreciated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1898#issuecomment-1356839030:262,error,error,262,https://qutip.org,https://github.com/qutip/qutip/issues/1898#issuecomment-1356839030,1,['error'],['error']
Availability,"We mostly added it to `mesolve` since we always had it for `sesolve`.; Numerical error is not well understood by all users and we can get issues that the solver are wrong because the trace, norm, populations etc. is not constant.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2427#issuecomment-2115919319:81,error,error,81,https://qutip.org,https://github.com/qutip/qutip/pull/2427#issuecomment-2115919319,1,['error'],['error']
Availability,"We ran into the ""Illegal Instruction"" problem too when using the conda qutip package (4.2.0-np113py36_2). Building qutip from source within the same conda environment produced a working qutip. Details of the processor on which the failure was observed:. model name	: Intel(R) Core(TM)2 Duo CPU E8400 @ 3.00GHz; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx lm constant_tsc arch_perfmon pebs bts rep_good nopl aperfmperf pni dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm sse4_1 xsave lahf_lm dtherm tpr_shadow vnmi flexpriority. $ uname -a; Linux plantain 3.16.0-4-amd64 #1 SMP Debian 3.16.43-2+deb8u2 (2017-06-26) x86_64 GNU/Linux",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-318765815:231,failure,failure,231,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-318765815,1,['failure'],['failure']
Availability,"We removed the need for cython at run time (officially) recently. It is still needed at installation for installation from sources, but conda can be used if cython is not available. I am not sure about the minimum version, but it does not have to be that recent. Pickling of cdef class is done manually and depend more on pickle version than cython's.; We don't support python2 anymore since numpy also removed it's support, but 4.3 or 4.2 should date from a time it was still supported. Are some of the cython files compiling or are they all failing?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1129#issuecomment-607866651:171,avail,available,171,https://qutip.org,https://github.com/qutip/qutip/issues/1129#issuecomment-607866651,1,['avail'],['available']
Availability,"We should somehow highlight more in the documentation that:; 1. QuTiP use cubic spline and the time points in `tlist` are not the sampling points used in `mesolve`.; 2. (edited) `tlist` in `QobjEvo` and in `mesolve` do not have to be the same. The _later_ one determines only which point to save the state or calculate the expectation value. From what I experienced, quite some people don't know this. And it slows down their code a lot.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1472#issuecomment-811468770:415,down,down,415,https://qutip.org,https://github.com/qutip/qutip/issues/1472#issuecomment-811468770,1,['down'],['down']
Availability,"We will probably change this behavior in version 3. Indeed, the benefits probably out weigh the possible downsides, if any. > On 2013. 11. 12., at 20:51, Piotr Migdał notifications@github.com wrote:; > ; > When it comes to bra*ket results, I would prefer to have a c-number, not an Qobj.; > ; > Why?; > ; > Because typical things like; > ; > if abs(some_bra \* some_ket) > 0.5:; > do_something(); > won't work.; > ; > Also things like creating a Gramian matrix (as np.matrix or np.array) from a set of quantum states won't work (unless I extract them by [0,0]); > ; > Moreover, Qobj.tr() returns a c-number not a Qobj, and here I would expect to have similar behavior for both tr and inner product.; > ; > Also, things like number of particles or dimensionality have (IMHO) little sense for a 1x1 Qobj.; > ; > I do understand why, from matrix multiplication perspective, scalar products may result in a 1x1 Qobj.; > But in mathematics a vector is not a nx1 matrix, and a scalar product is a function to c-numbers.; > ; > Anyway, I do understand that it's not pure mathematics, and there is implementation and other factors.; > ; > @jrjohansson Do you know any particular use-cases when it is preferable to distinguish between 1x1 Qobj and c-numbers?; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/28#issuecomment-28289086:105,down,downsides,105,https://qutip.org,https://github.com/qutip/qutip/issues/28#issuecomment-28289086,1,['down'],['downsides']
Availability,"Weird CI error on f56d27f - the build log suggests there was an error in setup (looks like `numpy` failed to load?), but I don't think that commit actually caused it, since it doesn't touch `setup.py`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-586401030:9,error,error,9,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-586401030,2,['error'],['error']
Availability,"Weirdly, that error didn't show up in Travis CI for me before I merged. Working on diagnosing now, thanks for catching it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/417#issuecomment-181628033:14,error,error,14,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-181628033,1,['error'],['error']
Availability,Well the most naive way I can think of is to overwrite the `circuit.py` file in your local installation of qutip with this new `circuit.py` file. It is located in `qutip/qutip/qip` in your local python package installation folder. If you can't find it then you can go for a fresh install with this file. - Remove your current qutip version with a `pip uninstall qutip`; - Download the latest qutip version from the [website](qutip.org) and replace the `circuit.py` file in `qutip/qip` folder with the one from here.; - Reinstall qutip by running `python setup.py install` from your qutip folder. Of course there are better ways to do this such as pulling this branch locally and updating your qutip version. If you need any help ping me on our gitter channel https://gitter.im/qutip/Lobby.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/679#issuecomment-291664172:372,Down,Download,372,https://qutip.org,https://github.com/qutip/qutip/pull/679#issuecomment-291664172,2,"['Down', 'ping']","['Download', 'ping']"
Availability,"Well, having a higher version of scipy and cython does not seem to fix it and we are plagued again by the `dnorm` issue. Attempting to run with the latest scipy (1.1) one last time. Otherwise, we should decide to include this after QuTiP drops python 2.7, or let it be merged as it is with a warning that python2 is not recommended for the `piqs` module. I cannot understand the error, as locally, all tests are passing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/861#issuecomment-396131009:379,error,error,379,https://qutip.org,https://github.com/qutip/qutip/pull/861#issuecomment-396131009,1,['error'],['error']
Availability,"Well, your opinion is definitely important, especially regarding core :) Performance is a top requirement there. Technically I think there is no need for square root at all because we can just compare the squared value to the squared tolerance. But I get your point that constant factor may dominate the performance of a small system. It's best to avoid Cython in ""good first issues"", so this one won't be on my list anyway.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1349#issuecomment-794400401:234,toler,tolerance,234,https://qutip.org,https://github.com/qutip/qutip/issues/1349#issuecomment-794400401,1,['toler'],['tolerance']
Availability,What I did in stochastic.py is a totally redundant mess. This is the reason I didn't do the pull request. I feel that an elegant way to add the Milstein with multiple Wiener increments (as well as any other more advanced methods) is to switch to a RHS function which is provided with all A_ops and which returns rho_{n+1}. Since it involves changing of API I want to discuss it with you first.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/35#issuecomment-22015755:41,redundant,redundant,41,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22015755,1,['redundant'],['redundant']
Availability,"What happens if you try one of the control pulseoptim notebooks? e.g.:; http://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/control-pulseoptim-QFT.ipynb. They do not have any cython components. On 27 February 2018 at 13:09, Bilal Riaz <notifications@github.com> wrote:. > I installed using conda-forge channel and installation worked without any; > problems, but when i run following jupyter notebook from example code on; > documentation: (http://nbviewer.jupyter.org/github/qutip/qutip-notebooks/; > blob/master/examples/control-grape-cnot.ipynb); > it gives following error; > [image: grape]; > <https://user-images.githubusercontent.com/34689025/36730450-652e8d18-1c02-11e8-83a8-8741d69f24d6.JPG>; >; > —; > You are receiving this because you modified the open/close state.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/826#issuecomment-368867793>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AIxX7dXsxCq1txKUU7RuhVSNZaW3A9oPks5tY_5_gaJpZM4SSlE1>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/826#issuecomment-368895127:597,error,error,597,https://qutip.org,https://github.com/qutip/qutip/issues/826#issuecomment-368895127,1,['error'],['error']
Availability,"What you are asking about is a common issue when trying to simulate infinite dimensional systems, and has been asked many times. In short, for self-consistency, you must begin with the assumption that your Hilbert space is finite, built the corresponding operators, and go from there. You would check convergence by increasing the state space size until a desired tolerance is met. Using the infinite analytic formulas are incorrect for the truncated space, but people use them a lot since they are familiar.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/683#issuecomment-292995687:364,toler,tolerance,364,https://qutip.org,https://github.com/qutip/qutip/pull/683#issuecomment-292995687,1,['toler'],['tolerance']
Availability,"What's wrong with just using a loop? Adding the `combine` statement is already extra work for you, and using the solver in a loop will be much clearer about what's going on. The `Qobj` object container is not meant to a vector of objects itself - use a list for that, or a numpy array if you're only going to do simple mathematical operations that you want broadcasting for (numpy will broadcast `*`, `/`, `+`, `-` and `**` correctly). The calculational complexity of the solver isn't helped by knowing you're going to do it a few times, but there are some setup costs that QuTiP already gives you the tools to alleviate. `mesolve` constructs a Liouvillian out the Hamiltonian and collapse operators; if you want to reuse the result of this, you should use `qutip.liouvillian` and `qutip.QobjEvo`, and use the `compile` method of the latter. You can pass the result of this directly as the `H` parameter of `mesolve` and it'll skip all the setup. There is some work going on about making a class-based interface to the solvers, which allows easier use of the tools to reduce setup time, but those likely won't be released for some time yet. In the meantime, just use a loop here. There will not be a notable slow down (unlike numpy maths operations) because the Python iteration over elements takes a negligible amount of time compared to single numerical intergration. As a side note, in this particular case you're doing unitary dynamics with state vectors, so this call to `mesolve` is actually translated into one to `sesolve`, which does not need to construct the Liouvillian.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1323#issuecomment-660459774:1213,down,down,1213,https://qutip.org,https://github.com/qutip/qutip/issues/1323#issuecomment-660459774,1,['down'],['down']
Availability,"Whether it is an issue likely depends on you school of thought. The error comes from the finite accuracy of the solvers. By default, the solutions are found using a method that is accurate 12-order in the step size and looks for absolute and relative errors at the 1e-8 and 1e-6 levels, respectively. If you evolve for long enough then inevitably there is going to be some error, and you will not get perfectly Hermitian matrices. One can accept this, and possibly lower the tolerance levels for more accuracy, or you can take 0.5*(A+A.dag()) to force the Hermicity. What method you use likely depends on your question and taste. Either way, I do not think that I would call this an issue. It is more of a fact of life when doing numerics. Paul. > On Jun 1, 2015, at 20:00, mmensing notifications@github.com wrote:; > ; > I was wondering if this is still an issue? If so I could try to spend some thinking on possible ways to correct the errors.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/qutip/qutip/issues/122#issuecomment-107400015.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/122#issuecomment-108683653:68,error,error,68,https://qutip.org,https://github.com/qutip/qutip/issues/122#issuecomment-108683653,5,"['error', 'toler']","['error', 'errors', 'tolerance']"
Availability,"Which version of QuTiP and which version of Cython do you have? I think this is an issue with a Cython version number parsing error in QuTiP, but if I am not mistaken it has been fixed in the development version of qutip that you find here on github,",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42841619:126,error,error,126,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42841619,1,['error'],['error']
Availability,"While running the above example on a jupyter notebook I am faced with the following error ; ```; {; 	""name"": ""TypeError"",; 	""message"": ""_remove_margins.<locals>._get_coord_info_new() missing 1 required positional argument: 'renderer'"",; 	""stack"": ""---------------------------------------------------------------------------; TypeError Traceback (most recent call last); File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/pyplot.py:265, in _draw_all_if_interactive(); 263 def _draw_all_if_interactive() -> None:; 264 if matplotlib.is_interactive():; --> 265 draw_all(). File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/_pylab_helpers.py:131, in Gcf.draw_all(cls, force); 129 for manager in cls.get_all_fig_managers():; 130 if force or manager.canvas.figure.stale:; --> 131 manager.canvas.draw_idle(). File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/backend_bases.py:1919, in FigureCanvasBase.draw_idle(self, *args, **kwargs); 1917 if not self._is_idle_drawing:; 1918 with self._idle_draw_cntx():; -> 1919 self.draw(*args, **kwargs). File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/backends/backend_agg.py:387, in FigureCanvasAgg.draw(self); 384 # Acquire a lock on the shared font cache.; 385 with (self.toolbar._wait_cursor_for_draw_cm() if self.toolbar; 386 else nullcontext()):; --> 387 self.figure.draw(self.renderer); 388 # A GUI class may be need to update a window using this draw, so; 389 # don't forget to call the superclass.; 390 super().draw(). File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/artist.py:95, in _finalize_rasterization.<locals>.draw_wrapper(artist, renderer, *args, **kwargs); 93 @wraps(draw); 94 def draw_wrapper(artist, renderer, *args, **kwargs):; ---> 95 result = draw(artist, renderer, *args, **kwargs); 96 if renderer._rasterizing:; 97 renderer.stop_rasterizing(). File ~/.local",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2400#issuecomment-2142000903:84,error,error,84,https://qutip.org,https://github.com/qutip/qutip/issues/2400#issuecomment-2142000903,1,['error'],['error']
Availability,"While the tests now pass for Mac on Travis CI, this is the error messages I get locally on Mac, . ```; (base) cln-232-18:qutip nathanshammah$ pytest; ============================= test session starts ==============================; platform darwin -- Python 3.7.3, pytest-4.6.2, py-1.8.0, pluggy-0.12.0; rootdir: /Users/nathanshammah/github/qutip; collected 0 items / 60 errors. ==================================== ERRORS ====================================; __________ ERROR collecting qutip/tests/test_basis_transformation.py ___________; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:171: in <module>; from qutip.qobj import *; qutip/qobj.py:60: in <module>; from qutip.fastsparse import fast_csr_matrix, fast_identity; qutip/fastsparse.py:406: in <module>; from qutip.cy.spmath import (zcsr_transpose, zcsr_adjoint, zcsr_mult); qutip/cy/__init__.py:1: in <module>; from qutip.cy.spmatfuncs import *; stringsource:105: in init qutip.cy.spmatfuncs; ???; E AttributeError: type object 'qutip.cy.spmatfuncs.array' has no attribute '__reduce_cython__'; ________________ ERROR collecting qutip/tests/test_brmesolve.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_brmesolve_td.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = F",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:59,error,error,59,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,4,"['ERROR', 'error']","['ERROR', 'ERRORS', 'error', 'errors']"
Availability,"While this isn't an alternative for this PR, scipy 1.5 made new LAPACK drivers available for `scipy.linalg.eigh`, one or more of which might not have the same problems in OpenBLAS on Mac. Still, we can't require scipy 1.5 when that only released like 5 days ago, but it's interesting going forwards.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1288#issuecomment-649793403:79,avail,available,79,https://qutip.org,https://github.com/qutip/qutip/pull/1288#issuecomment-649793403,1,['avail'],['available']
Availability,"Why though? It _is_ a badly written function and it should be changed. It's a true error, and I wouldn't be confident that there isn't an edge-case bug in it, because it's got so many branches I can't separate them easily in my head when reading it. There's loads of ways to write the same functionality where it's decomposed into smaller bits that are all much easier to check for correctness individually (`mul_dense`, `mul_scalar`, `mul_sparse`, etc) - way easier to verify the top-level dispatching logic into those bits, and then way easier to verify each individual component within them. Also, as long as we have the ""TODO"" error filter turned on, it would be wrong to silence the error that comes from adding a new one, right? If we wanted to skip it, we should turn it off globally (which I'm not against for the TODO thing). If it's in, this way at least lets us use codeclimate properly to see when certain errors were introduced, or when issues in funny-looking functions might have been affected. At any rate, the many-return function is completely removed in `dev.major` since we completely rewrote the backing types.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506#issuecomment-826657390:83,error,error,83,https://qutip.org,https://github.com/qutip/qutip/pull/1506#issuecomment-826657390,4,['error'],"['error', 'errors']"
Availability,Will address other test errors as they pop up.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/621#issuecomment-273363278:24,error,errors,24,https://qutip.org,https://github.com/qutip/qutip/issues/621#issuecomment-273363278,1,['error'],['errors']
Availability,Will this also restrict all the downstream packages to only use NumPy <1.20 or is it just a restriction when compiling `qutip`?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429#issuecomment-779700849:32,down,downstream,32,https://qutip.org,https://github.com/qutip/qutip/pull/1429#issuecomment-779700849,1,['down'],['downstream']
Availability,"With that branch, you can pass any function that take time and a args dict that return a Qobj as a `c_ops`:; ```; import qutip as qt; def f(t, args):; return (qt.destroy(3)*t).expm(). res = qt.mcsolve(qt.qeye(3), qt.basis(3,1), [0,1,2,3,4,5], [f], [qt.num(3)], 10); ```; It slows down the solver a lot...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1398#issuecomment-741910743:280,down,down,280,https://qutip.org,https://github.com/qutip/qutip/issues/1398#issuecomment-741910743,1,['down'],['down']
Availability,"With the latest changes, `Qobj.type` now points at the new `dims_utils.type_from_dims`, which consolidates the type-detection logic in one place and makes it more robust to ragged `dims`. On Python 2 all tests of `qobj`, `tensor` and `dims_utils` now pass locally, I'll try with Python 3 soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/389#issuecomment-152941888:163,robust,robust,163,https://qutip.org,https://github.com/qutip/qutip/pull/389#issuecomment-152941888,1,['robust'],['robust']
Availability,With what errors?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-317819602:10,error,errors,10,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-317819602,1,['error'],['errors']
Availability,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:206,error,error,206,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018,2,['error'],['error']
Availability,"Yeah, I didn't notice before because I always run the tests locally before I push big things like that, and all the solver tests run locally, since it was just a packaging mix-up. As long as changing `__setitem__` means that `SolverOptions(seeds=[1, 2, 3])` throws an error (for now), then it's all good.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1338#issuecomment-675511997:268,error,error,268,https://qutip.org,https://github.com/qutip/qutip/pull/1338#issuecomment-675511997,1,['error'],['error']
Availability,"Yeah, I would think so too. Most of the times the energy gap is quite large compared to calculation errors.; But I'm really a newbie, so I'm not sure what the day-to-day users need. It would be great if a contributor could pitch in if this is a good idea.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1800#issuecomment-1103429187:100,error,errors,100,https://qutip.org,https://github.com/qutip/qutip/issues/1800#issuecomment-1103429187,1,['error'],['errors']
Availability,"Yeah, I'd like to get a better isolated failure case first, but once I've done that, I think it makes sense to report this to CVXOPT especially.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/484#issuecomment-222058027:40,failure,failure,40,https://qutip.org,https://github.com/qutip/qutip/issues/484#issuecomment-222058027,1,['failure'],['failure']
Availability,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:735,down,down,735,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182,2,['down'],['down']
Availability,"Yeah, don't worry about that. That's a pretty unfortunate error (I've never actually seen it before) but it's certainly not related to your changes. It means that the numerical intergrator we use for solvers couldn't proceed properly (failed to converge in, or that kind of thing). It will be related to the random seed that `mcsolve` used that time round, but certainly not your fault.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-647047749:58,error,error,58,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-647047749,2,"['error', 'fault']","['error', 'fault']"
Availability,"Yeah, it runs completely normally for me... ![jupyter output](https://i.imgur.com/9LkOQzO.png). I can only think that there is some problem with the temporary directory on Windows, since the calls to all the external programmes are the functionally the same. Do you get any error messages in the kernel log? If not, can you try running it in raw `python` or `ipython` on the command line, and just run; ```python; from qutip.qip.circuit import QubitCircuit; qc = QubitCircuit(2); qc.add_gate(""CNOT"", 0, 1); qc.png; qc.svg; ```; and see if there are any error messages?. I kind of hope it's a mistake in my code somewhere, because if it is the `tempfile.TemporaryDirectory` on Windows then I'll have to re-think some parts of #1181 too.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194#issuecomment-605289820:274,error,error,274,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605289820,2,['error'],['error']
Availability,"Yeah, looking at it, this functionality still does not exist. The `essolve` function is pretty out-of-date (its last real activity was back in 2013), and may well be completely deprecated in an upcoming version of QuTiP. Hopefully `qutip.mesolve` should be a near drop-in replacement for you (`c_ops_list` is now called `c_ops`, but other than that you're fine), and it may well be a lot faster as well. @Ericgig, @ajgpitch: shall we commit to maintaining `essolve` and/or the `eseries` class, or issue a deprecation warning as soon as possible? They're pretty unloved, and `QobjEvo` really is a far far more general way of specifying time-dependence. My vote (should I have one) is for deprecation. I'm always in favour of slimming down codebases if it doesn't remove useful functionality!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1262#issuecomment-628260933:733,down,down,733,https://qutip.org,https://github.com/qutip/qutip/issues/1262#issuecomment-628260933,1,['down'],['down']
Availability,"Yeah, so this bug is fixed in QuTiP 4.5.3 and above. You can also fix it by downgrading Numpy to 1.19 or below (in 1.20 they changed how they handle object arrays, which broke us and a few other packages). That's strange that Conda won't let you upgrade beyond 4.5.2; there's no constraint on our conda package which should prevent it. Do you have any other packages installed that depend on QuTiP? If so, they might be pinning our version. What happens when you run `conda update qutip`? (By the way, you can also install `qutip` from `pip` easily since the 4.6 release).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1634#issuecomment-895511734:76,down,downgrading,76,https://qutip.org,https://github.com/qutip/qutip/issues/1634#issuecomment-895511734,1,['down'],['downgrading']
Availability,"Yeah, that's a very fair point. If you absolutely want to do it in a sparse manner too, there's `CSR.as_scipy()` available as well that'll let you munge our data however you like. I'm still not a fan of `Qobj.__array__`, but happy enough to go with it since it seems everyone else likes it (we should also reinstate it in `dev.major`). We can set `Qobj.__array_ufunc__ = Qobj.__array_function__ = None` to disable ufuncs and other numpy functions unconditionally. It's unlikely this will annoy anyone, since we've not had a complaint that ufuncs on `Qobj` does something super weird since `Qobj.__array__` was implemented. We can leave it unless Simon wants to make some more of the case for allowing ufuncs on `Qobj`, or happy to go with this? (tag @hodgestar.). We can also give it a day or two for Michael (tag @goerz), but it seems people are generally resolved to keeping the functionality he originally wanted anyway, even with numpy 1.20 changing its behaviour.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433#issuecomment-774128466:113,avail,available,113,https://qutip.org,https://github.com/qutip/qutip/issues/1433#issuecomment-774128466,1,['avail'],['available']
Availability,"Yeah, that's good. There are plenty of cases (like in the tests) where we want to change something like `ntraj` on-the-fly within the same script. Even just in regular REPL work, I mess around with tolerances and things like that, and it's much much easier to be able to do that case-by-case, rather than having to set global state, which often ends up with boilerplate when you're trying to be safe - you can't do quick checks as one-liners, and you have to use `try/finally` if you only want to temporarily set it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1297#issuecomment-651144540:198,toler,tolerances,198,https://qutip.org,https://github.com/qutip/qutip/pull/1297#issuecomment-651144540,1,['toler'],['tolerances']
Availability,"Yeah, this feels like a bug in `propagator` - I bet at some point we do `qeye(L.shape[0])` instead of `qeye(L.dims[0])`. There's sometimes quite a bit of that in older code - it used to slip through because we weren't super strict about dimension handling, so in certain cases (like this one), we'd accept bad dimensions. I might try and have a look tonight (UK time), if I have time - I've wanted to break up the large `propagator` monolith into smaller components for quite a while. ---. About numerical precision: if you want to try increasing the precision of the integrators, try passing `options=qutip.Options(nsteps=1_000_000, atol=1e-12, rtol=1e-10)` to `propagator`. `atol` and `rtol` are absolute and relative tolerances respectively, and `nsteps` is the number of subdivisions the integrator is _allowed_ to take (if it reaches its tolerance goals, it won't take all of them). You'll find that `atol` and `rtol` will have only a loose relation to the tolerance of your fidelity value, because there's a _lot_ of floating-point operations between those points in which the errors compound, and there's a hard limit on the tolerances the integrator can achieve, so you might not be able to get a perfect answer. The fidelity calculation involves finding the square root of a density operator, so that's another large possible source of error. About times: if you only care about the state at the last time, setting `tlist = np.linspace(0, x, 201)` is quite inefficient. Instead, set `tlist = [0, x]`, and then pass `options=qutip.Options(nsteps=<very very big integer>)`. It's more efficient because it doesn't need to achieve tolerance goals and construct/store `Qobj` instances at every intermediate timestep. Temporary workaround: this is _very_ temporary, and generally a bad idea in QuTiP, but you can ""flatten"" all your operators into a single space for now, while we implement a fix. To do that:; ```python; # initial setup; H = qutip.tensor(...); c_ops = [qutip.tensor(...)]. original",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1585#issuecomment-865903199:720,toler,tolerances,720,https://qutip.org,https://github.com/qutip/qutip/issues/1585#issuecomment-865903199,2,['toler'],"['tolerance', 'tolerances']"
Availability,"Yeah, this is a ""true"" merge of the qutip-doc repository with this one. Technically all the commits have been rewritten (you'll find that the hashes won't match between the repositories), but they'll all be credited to the same authors on GitHub. Everyone will actually get the credit ""twice"" - once for the archived qutip/qutip-doc repo, and once for the new commit object in here. If anybody was in the habit of signing their commits with a private key, that will have been lost, but the only people that's likely to have affected are me and the GitHub merge bot. It doesn't mean anything in the greater scheme of things, because I've signed the merge commit. (signing is mostly just a way of verifying that the author really was who it says it was). *edit:* I checked, the only two types of signed commits in qutip/qutip-doc are those from me and those from the GitHub bot. Answers:; - I'll migrate all open issues on qutip-doc into the qutip/qutip repository, and tag them with a ""docs"" tag. GitHub has a built-in mechanism to migrate issues.; - We'll archive it, posting a message on the front page of it (or the README if GitHub doesn't have a separate mechanism). We need to leave the repository up and available on the web, because old documentation refers to it in links.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1513#issuecomment-830106458:1210,avail,available,1210,https://qutip.org,https://github.com/qutip/qutip/pull/1513#issuecomment-830106458,1,['avail'],['available']
Availability,"Yeah, this is just one of those silly things caused by ImageMagick choosing a _very_ generic name and then getting burned (hence the swap to `magick`...). Probably the best thing to do is to try and run `convert` once at discovery and to see what happens. If you run `convert -version` on an IM6 install, does it output a string that looks like; > Version: ImageMagick 6.blahblahblah; or something similar?. If so, try this patch: [check_convert.txt](https://github.com/qutip/qutip/files/4397692/check_convert.txt). It rearranged the functions a little for a more logical order (I'll rebase the PR before merge), but the main change is that it now tests the output of `convert -version` to see if it contains the substring `imagemagick` (case insensitive). The reason to do this now is because if we allowed the error to propagate later, we'd have to check it every time and it would mean we'd have to pass through the ""special cases"" more frequently, and it would make the core logic more complex. Also, we _could_ catch a subprocess `CalledProcessError` later (say if one of the other commands were to fail for some reason) and re-raise our own, but to be honest I didn't want to over-engineer what ought to have been a relatively simple PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194#issuecomment-605504526:812,error,error,812,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605504526,1,['error'],['error']
Availability,"Yeah, using `np.int`, `np.long` or `np.longlong` when it _matters_ what size they are is a recipe for disaster. C99 guarantees that `stdint.h` will be available, so you can always safely use `np.int8`, `np.int16`, `np.int32` and `np.int64` if you know the size you need. If you just need ""at least"" whatever, then in C `int` is >= 16-bit, `long` is >= 32-bit and `long long ` is >= 64-bit.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1313#issuecomment-655142649:151,avail,available,151,https://qutip.org,https://github.com/qutip/qutip/pull/1313#issuecomment-655142649,1,['avail'],['available']
Availability,"Yep, looks like my error.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/807#issuecomment-360949839:19,error,error,19,https://qutip.org,https://github.com/qutip/qutip/issues/807#issuecomment-360949839,1,['error'],['error']
Availability,"Yep, the `resolve_gates()` function is quite messy right now and works on a case by case basis. In the FREDKIN case, it was giving this error. The issue would atleast involve resolving the FREDKIN gate properly as a starting point. . As an aside, @BoxiLi Should this issue be moved to the qutip_qip module already? Or should it wait since everything is not setup there yet?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1330#issuecomment-794864771:136,error,error,136,https://qutip.org,https://github.com/qutip/qutip/issues/1330#issuecomment-794864771,1,['error'],['error']
Availability,"Yes `multiprocessing` is used by `mcsolve`. If there are issues pickling function, then it will cause errors. I hope that this could be fixed with the function `set_start_method` from `multiprocessing`. In the segfault case, the problematic function call lapack from cython by using scipy interface. So it could be a couple of things. On mac, there is the accelerate blas/lapack implementation which does not have the same interface, so if it links to this, then a segfault would not be surprising. But I can't say for sure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-596712910:102,error,errors,102,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596712910,1,['error'],['errors']
Availability,"Yes `nsubsteps` and `tlist` are the only way to control precision with `photocurrent_mesolve`, `mcsolve` does not support a mix of `c_ops` and `sc_ops` so if both of them are needed `photocurrent_mesolve` is your only option available.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1357#issuecomment-691366231:225,avail,available,225,https://qutip.org,https://github.com/qutip/qutip/issues/1357#issuecomment-691366231,1,['avail'],['available']
Availability,"Yes, I also tried using these packages. If you see #484 and all the; corresponding links you will see why we switched to the pip install. It's questionable whether we should have a feature that relies on a library; that is not maintaining a conda package. But that is a question for another; day. On 4 June 2018 at 10:51, Shahnawaz Ahmed <notifications@github.com> wrote:. > There are conda versions for cvxopt and cvxpy (https://anaconda.org/mcg/; > cvxpy) but nobody seems to be maintaining or updating them. Installing; > the conda version downgrades everything else. I will first try to fix the; > yml issue. Nothing seemed to be incorrect in the YML file, and the travis; > CI linter is not available, so I am not sure what is wrong with the file.; > Will update if I make progress.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/873#issuecomment-394298574>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AIxX7e0B0n4eEJ-sZ3Ts6PTblD_UxUD8ks5t5QMkgaJpZM4UYSyh>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/873#issuecomment-394303776:543,down,downgrades,543,https://qutip.org,https://github.com/qutip/qutip/pull/873#issuecomment-394303776,2,"['avail', 'down']","['available', 'downgrades']"
Availability,"Yes, I am running on OS X. Thanks for the advice, it worked. I see that matplotlib 3.1.0 and 3.3.0 don't give any errors but anything in between would result into the error. ; PS: I was using 3.1.3",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1326#issuecomment-664736506:114,error,errors,114,https://qutip.org,https://github.com/qutip/qutip/issues/1326#issuecomment-664736506,2,['error'],"['error', 'errors']"
Availability,"Yes, I have seen similar errors on my windows when running the tests. Looks like memory error; ```; ======================================================================; ERROR: Counting statistics: current and current noise in a DQD model; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_countstat.py"", line 73, in test_dqd_current; rhoss = steadystate(L); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 290, in steadystate; return _steadystate_direct_sparse(A, ss_args); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 460, in _steadystate_direct_sparse; weighted_matching=ss_args['weighted_matching']); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 393, in mkl_spsolve; x = lu.solve(b, verbose=verbose); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 170, in solve; np_x, np_error); OSError: exception: access violation reading 0x0000000099EC80F8. ======================================================================; ERROR: MKL spsolve : Hermitian (real) solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_mkl.py"", line 230, in test_mkl_spsolve10; y = mkl_spsolve(A, b, hermitian=1); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 414, in mkl_spsolve; lu.delete(); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 208, in delete; byref(c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975#issuecomment-483000016:25,error,errors,25,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-483000016,3,"['ERROR', 'error']","['ERROR', 'error', 'errors']"
Availability,"Yes, I would suspect it is numerical errors. How large is the nonhermicity? For example, what does something like `abs(rho - rho.dag()).data).max()` give? In some places in qutip where we know that a Qobj is hermitian we enforce it with something like `rho = (rho+rho.dag())/2`, but I'm not a big fan of this introducing more of this kind enforcement on the matrix data level. But we could perhaps have some convenient functions for helping users enforcing hermiticity?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/122#issuecomment-42121559:37,error,errors,37,https://qutip.org,https://github.com/qutip/qutip/issues/122#issuecomment-42121559,1,['error'],['errors']
Availability,"Yes, configuring a bot is beneficial for several tasks. However, the scope would be broad then. Narrowing down seems reasonable. What do you think about opening a new issue, mentioning several examples that can be worked on?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1089#issuecomment-1852573254:106,down,down,106,https://qutip.org,https://github.com/qutip/qutip/issues/1089#issuecomment-1852573254,1,['down'],['down']
Availability,"Yes, eigenenergies computation, while technically required, is too strict in most case. Other options would be to make the check optional and/or adding a tolerance.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-612477122:154,toler,tolerance,154,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-612477122,1,['toler'],['tolerance']
Availability,"Yes, string will be turned to python function when cython is not available.; It is possible to use python even if cython is available if preferred.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1082#issuecomment-530016047:65,avail,available,65,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-530016047,2,['avail'],['available']
Availability,"Yes, that also fails, with the same error (on Windows):. `Building module rhs44481 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']`. I just realized that this particular problem is probably just that this Windows VM doesn't have Visual Studio installed (maybe I should try again with the 20GB developer's VM that Microsoft has). So as a user on Windows, having installed QuTiP through Anaconda, I can't do any time propagation? Somehow, I would have thought that having Cython though Anaconda would also come with some compiler like gcc (which is what it seems to be doing on the Mac). Otherwise, that seems like a very limiting factor to any Windows user. There's no way to run QuTiP while preventing it to cythonize time-dependencies, right? That is, aside from workarounds like the one I did here: https://github.com/qucontrol/krotov/blob/247d4066c83ee4923769b934486da9dae95f6879/src/krotov/objectives.py#L175. Anyway, this is likely not really the same issue as the original problem on the Mac.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932#issuecomment-464148578:36,error,error,36,https://qutip.org,https://github.com/qutip/qutip/issues/932#issuecomment-464148578,2,['error'],"['error', 'errors']"
Availability,"Yes, the Tavis tests fail due to the missing Normalize class from Matplotlib. This caused the failure in #248 and is why I resorted to the try statement on loading.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/249#issuecomment-61443740:94,failure,failure,94,https://qutip.org,https://github.com/qutip/qutip/pull/249#issuecomment-61443740,1,['failure'],['failure']
Availability,"Yes, the tests ran locally on a test environment I had created. The metrics test ran fine on Travis indirectly on this other PR : https://travis-ci.org/qutip/qutip/builds/379109476. . Note that the python 2.7 failures are not related but are of similar nature with something changing for supplying arguments in tuples vs directly passing them. However, in hindsight, I should have tried a rebuild on this PR. But I could find no way of re-starting the tests here as travis didn't see any change to trigger a new test. I will test this with a fresh PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/873#issuecomment-394276414:209,failure,failures,209,https://qutip.org,https://github.com/qutip/qutip/pull/873#issuecomment-394276414,1,['failure'],['failures']
Availability,"Yes, these are the implementation issues I discussed. Calling the ode solver of course takes small steps, with the step size based on the requested tolerance level. Our root finding is trivial in this case. We linearize the evolution and then find the intercept. It almost always works in a single step, and is quite efficient.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/344#issuecomment-105092235:148,toler,tolerance,148,https://qutip.org,https://github.com/qutip/qutip/issues/344#issuecomment-105092235,1,['toler'],['tolerance']
Availability,"Yes, this can happen.. But I dont think this is a bug or error, although it can be confusing. There is always a risk of namespace collisions when importing different packages into the global namespace. For example, many conflicts of this kind occur between the math and numpy packages.. The only way to get around it safely is to import packages in different namespaces.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/25#issuecomment-18951570:57,error,error,57,https://qutip.org,https://github.com/qutip/qutip/issues/25#issuecomment-18951570,1,['error'],['error']
Availability,"Yes, this error always comes up when doing something wrong. However, in order to understand what that is, we need to see the actual system being solved.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605#issuecomment-879092131:10,error,error,10,https://qutip.org,https://github.com/qutip/qutip/issues/1605#issuecomment-879092131,1,['error'],['error']
Availability,"Yes, we have binary operator defined for `Data` with object of the same type, but since for a while we only used `CSR`, there are probably some in the code where the `Data` types can be mixed. It will cause problem when we start using multiple types together. Also `/=` is used in `Qobj`, so some `TfTensor` no having them will cause problem as it is right now. We could remove operator support or fully support them, but the present something used, partially supported will cause issues. I prefer full support. By adding operator in `base.Date`, new type don't need to do anything so it's not causing difficulties when creating new types and it will work as expected everywhere, so we don't have to hunt them down. It also make the code cleaner.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1647#issuecomment-908306079:710,down,down,710,https://qutip.org,https://github.com/qutip/qutip/pull/1647#issuecomment-908306079,1,['down'],['down']
Availability,"Yes, we should catch any error before the ode solver when we can,",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605#issuecomment-879192853:25,error,error,25,https://qutip.org,https://github.com/qutip/qutip/issues/1605#issuecomment-879192853,1,['error'],['error']
Availability,"You can control the tolerance of the output of the solvers with the `qutip.Options()` class, in particular the parameters `atol`, `rtol` and `nsteps`. It's highly unlikely that you'll ever get them to be _exactly_ equal due to the realities of floating-point. A more relevant measure is the size of the overlap `r1.overlap(r2)`. Again, this will never be exactly 0, but by setting the tolerances of the solvers suitably, you can bound it to an acceptable value. This is unfortunately just one of the realities of numeric computing - floating-point calculations accumulate error, and it's up to the user to specify what level of error is tolerable.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1686#issuecomment-938617719:20,toler,tolerance,20,https://qutip.org,https://github.com/qutip/qutip/issues/1686#issuecomment-938617719,5,"['error', 'toler']","['error', 'tolerable', 'tolerance', 'tolerances']"
Availability,"You could try restarting them if you like, but it's been an issue hitting a few PRs now - I've had random test failures on two or three commits in #1181, now here, and I think one of your recent ones did too?. The oddest thing is that I can't reproduce the failures on my machine at all, so it's difficult to find out what's going on. I may try and make a fake PR which disables all but the nocython tests to see if I can pin it down (or if Eric knows). I ran the tests like 30 times back to back and no failure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1221#issuecomment-607082956:111,failure,failures,111,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-607082956,4,"['down', 'failure']","['down', 'failure', 'failures']"
Availability,"You may be trying to run QuTiP from the same directory you installed it; from. On Jan 18, 2017 9:51 AM, ""17643015"" <notifications@github.com> wrote:. > If I try to import qutip a second time, I get the following error:; > ------------------------------; >; > AttributeError Traceback (most recent call last); > in (); > ----> 1 from qutip import*; >; > /home/jan/.local/lib/python2.7/site-packages/qutip/*init*.pyc in (); > 60 qutip.settings.ipython = True; > 61 except:; > ---> 62 qutip.settings.ipython = False; > 63; > 64 # ------------------------------------------------------------; > -----------------; >; > AttributeError: 'module' object has no attribute 'settings'; >; > Also I am running ubuntu 16.10; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/637#issuecomment-273531916>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqUlvpTPnqA51MHD8rB-A_QVrHsXYks5rTkMngaJpZM4LnG0_>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/637#issuecomment-273536944:212,error,error,212,https://qutip.org,https://github.com/qutip/qutip/issues/637#issuecomment-273536944,1,['error'],['error']
Availability,"You should install qutip with anacondas package manager and not pip. Please install using. ```conda install -c conda-forge qutip; ```. On Tue 8 May, 2018, 10:50 PM hchanzy, <notifications@github.com> wrote:. > I installed anaconda on windows 10.; > I used then ""pip install qutip"", and I get this error :; > File ""\lib\distutils\cygwinccompiler.py"" line 129, in *init*; > if self.ld_version >= ""2.10.90"" :; > TypeError: '>=' not supported between instances of 'NoneType' and 'str'; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/860>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGpUBK8samd0yf037ZRMulY3XfyKvmEdks5twaK9gaJpZM4T2rnS>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/860#issuecomment-387572634:297,error,error,297,https://qutip.org,https://github.com/qutip/qutip/issues/860#issuecomment-387572634,1,['error'],['error']
Availability,"You simple need to create a function starting with `test_` that use the progress bar. Ideally you would use it in a way that ensure all lines of code are used at least once. Then if there is an error in the code, python will raise an error and the test will fail. There should be some tutorials for pytest on the web, writing a step per step guide on making tests is more work than making the tests themselves so please have mercy.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2127#issuecomment-1478014084:194,error,error,194,https://qutip.org,https://github.com/qutip/qutip/pull/2127#issuecomment-1478014084,2,['error'],['error']
Availability,"You still wouldn't be able to put `Qobj` into numpy arrays except by doing something like; ```python; qobjs = np.empty(3, dtype=object); qobjs[:] = [qutip.qeye(2), qutip.qeye(2), qutip.qeye(2)]; ```; but probably that's not _too_ much of a big deal. Leaving QuTiP as it is right now would require that anyway. My main problem is actually just with allowing ufuncs and other numpy interfaces to act directly on `Qobj` without an explicit conversion step, because it promotes the idea that it's ok to act elementwise on a `Qobj`. I don't think we should allow ufuncs at all - `Qobj` is not meant to be like an `ndarray` and ufunc semantics don't make sense. We can set `Qobj.__array_ufunc__ = None` and `Qobj.__array_function__ = None` to disable numpy functions acting on `Qobj` directly. Example with this in place:; ```python; >>> import qutip; >>> import numpy as np; >>> np.array(qutip.qeye(2)); array([[1.+0.j, 0.+0.j],; [0.+0.j, 1.+0.j]]); >>> np.array([qutip.qeye(2), qutip.qeye(2)]) # Not ideal, but not our fault.; array([[[1.+0.j, 0.+0.j],; [0.+0.j, 1.+0.j]],. [[1.+0.j, 0.+0.j],; [0.+0.j, 1.+0.j]]]); >>> np.sin(qutip.qeye(2)); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: operand 'Qobj' does not support ufuncs (__array_ufunc__=None); >>> np.sin(np.array(qutip.qeye(2))); array([[0.84147098+0.j, 0. +0.j],; [0. +0.j, 0.84147098+0.j]]); ```; Alternatively, if people _really_ want to be able to use ufuncs on `Qobj`, it is possible to define `__array_ufunc__` in such a way that we allow only some `ufuncs` to operate. Doing this leaves us susceptible to problems interacting with other libraries that implement this, though, beacuse whichever class has the highest `__array_priority__` gets to dictate what makes sense. Unless there's a really clear _need_ for this, I don't think it's a good idea. For completeness, the rest of this comment is stuff I find out while researching. ## The `__array__()` and `__array_wrap__()` methods. These have been s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433#issuecomment-772608902:1891,fault,fault,1891,https://qutip.org,https://github.com/qutip/qutip/issues/1433#issuecomment-772608902,1,['fault'],['fault']
Availability,"You want to be very careful using black - we haven't applied it to most of the codebase, so if you're letting it run, then it's going to produce large unrelated changes everywhere and make the PR harder to understand. Also, black doesn't abide by the exact set of rules set up in codeclimate, so it'll also add a bunch of errors. This would be part of a larger change we'd have to make across the whole codebase separately. (*note*: everything I wrote was already codeclimate-compatible - it's probably better to remove the two commits running black)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1583#issuecomment-878145441:322,error,errors,322,https://qutip.org,https://github.com/qutip/qutip/pull/1583#issuecomment-878145441,1,['error'],['errors']
Availability,"You're welcome! I've used `qutip` a lot throughout my PhD, so it seems fair that I'd contribute back to development. While I'm still getting used to the code base, I'm quite happy to do some ""boring"" software engineering-y maintenance bits, and plus, this helps me learn `pytest` a lot better. This PR can be merged whenever if you're happy with the changes - I'll open a new one if/when I convert more files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-586622667:223,mainten,maintenance,223,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-586622667,1,['mainten'],['maintenance']
Availability,Your welcome and thanks for looking into this. I understand that there are functionality considerations to be made. Perhaps a simple assertion check would strike the right balance -- giving the functionality you want while avoiding the danger of faulty assumptions.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/18#issuecomment-17175299:246,fault,faulty,246,https://qutip.org,https://github.com/qutip/qutip/issues/18#issuecomment-17175299,1,['fault'],['faulty']
Availability,"Yup, it installed ok, the openmp threshold check error is gone, and all tests passed ok~!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1471#issuecomment-808886693:49,error,error,49,https://qutip.org,https://github.com/qutip/qutip/pull/1471#issuecomment-808886693,1,['error'],['error']
Availability,[![Coverage Status](https://coveralls.io/builds/40090550/badge)](https://coveralls.io/builds/40090550). Coverage increased (+0.01%) to 64.915% when pulling **d32953c7780c3108198787e3b61953c5e11ad0cd on Yash-10:Fix-ffmpeg-error** into **9c422c8e30ff96ac835e852efb0d8656eb01ddab on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1557#issuecomment-849787790:221,error,error,221,https://qutip.org,https://github.com/qutip/qutip/pull/1557#issuecomment-849787790,1,['error'],['error']
Availability,[![Coverage Status](https://coveralls.io/builds/44999770/badge)](https://coveralls.io/builds/44999770). Coverage increased (+0.02%) to 68.347% when pulling **c5e0aeeef46ed1f4074e0698634ebd0a656087d2 on hodgestar:fix/raise-error-if-offset-nonzero-is-used-with-meth-operator-in-coherent** into **9b859e82b89d3ccec39603ed3bb70c4af819e4bc on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1741#issuecomment-993797670:222,error,error-if-offset-nonzero-is-used-with-meth-operator-in-coherent,222,https://qutip.org,https://github.com/qutip/qutip/pull/1741#issuecomment-993797670,1,['error'],['error-if-offset-nonzero-is-used-with-meth-operator-in-coherent']
Availability,[![Coverage Status](https://coveralls.io/builds/51772900/badge)](https://coveralls.io/builds/51772900). Coverage remained the same at 69.935% when pulling **53339827c21901c053647e9b1b6cf4f337a484de on hodgestar:feature/silence-pyximport-relative-error-warning** into **82c6704c6fea8a2801492865ad1ef7c1d73c8840 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1978#issuecomment-1219804239:246,error,error-warning,246,https://qutip.org,https://github.com/qutip/qutip/pull/1978#issuecomment-1219804239,1,['error'],['error-warning']
Availability,"[mkdtemp.txt](https://github.com/qutip/qutip/files/4396123/mkdtemp.txt). Could you try and apply this patch and see if it fixes the problem? Just download it somewhere, then; ```; git apply /path/to/mkdtemp.txt; ```; should do it. If so, I'll commit and push.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194#issuecomment-605336931:146,down,download,146,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605336931,1,['down'],['download']
Availability,"[pristine_from_docs.zip](https://github.com/qutip/qutip/files/6491982/pristine_from_docs.zip). I get this error for dir_gen_anim2.py. I have just attached the relevant part here. . ```python; fig = pyplot.figure(); ax = Axes3D(fig, azim=-40, elev=30); sphere = Bloch(axes=ax). def animate(i):; sphere.clear(); sphere.add_vectors([np_sin(theta), 0, np_cos(theta)]); sphere.add_points([sx[:i+1], sy[:i+1], sz[:i+1]]); sphere.make_sphere(); return ax. def init():; sphere.vector_color = ['r']; return ax. ani = FuncAnimation(fig, animate, arange(len(sx)),; init_func=init, blit=False, repeat=False). ani.save('bloch_sphere.mp4', fps=20). Exception ignored in: <function TimerQT.__del__ at 0x7fbf6c561b80>; Traceback (most recent call last):; File ""/home/rohan/anaconda3/envs/nbdev/lib/python3.8/site-packages/matplotlib/backends/backend_qt5.py"", line 189, in __del__; TypeError: 'NoneType' object is not callable; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1558#issuecomment-842086433:106,error,error,106,https://qutip.org,https://github.com/qutip/qutip/pull/1558#issuecomment-842086433,1,['error'],['error']
Availability,"]-U_prop_single[-1]).full()); ```. and here is the ""bad"" output with the older version of qutip that I was running before (Note, the difference between the 'batch' and 'single' has terms of order 1e-6). . ```; QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.3.0.dev0+4277eae; Numpy Version: 1.14.2; Scipy Version: 1.0.0; Cython Version: 0.28.1; Matplotlib Version: 2.2.2; Python Version: 3.4.3; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/local/lib/python3.4/dist-packages/qutip-4.3.0.dev0+4277eae-py3.4-linux-x86_64.egg/qutip. #I would expect this to have largest terms of order 1e-11 say.; [[-4.24096116e-07+1.00022928e-06j -4.16215462e-09-4.54122270e-07j]; [ 4.16215462e-09-4.54122270e-07j -4.24096116e-07-1.00022928e-06j]]; ```; and here is the result of running with the latest version (note, now difference between the two propagators respects the required tolerances):. ```; QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.3.0.dev0+489fd41; Numpy Version: 1.14.2; Scipy Version: 1.0.0; Cython Version: 0.28.1; Matplotlib Version: 2.2.2; Python Version: 3.4.3; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/local/lib/python3.4/dist-packages/qutip-4.3.0.dev0+489fd41-py3.4-linux-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex file can be easily generated using `qutip.cite()`. #working well now:; [[ 3.84509091e-12+2.02926564e-12j -1.25703892e-11+0.00000000e+00j]; [ 1.25703892e-11+0",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/829#issuecomment-376601387:1635,toler,tolerances,1635,https://qutip.org,https://github.com/qutip/qutip/issues/829#issuecomment-376601387,1,['toler'],['tolerances']
Availability,"_**edit to put the positivity up top!**_: This is a very exciting prospect to me, and I'm always happy when other libraries want to interact with QuTiP! In the interests of inciting more discussion, I've got thrown in some more discussion points below - I'm 100% sure they're all solvable, but it also seems like there isn't one way that's unambiguously correct to do them, so they're worth discussing. ---. In principle I'm happy to implement this, though I don't really agree with your assertion that `othertype.toqobj()` is bad style! It might be so in Julia, but Python doesn't have all the same multiple-dispatch niceties that Julia has, so at the end of the day, we have to add in a method with a ""magic"" name somewhere, and it all just comes down to choosing the name of the method. The downside to having a magic name is that it means we have to eschew proper namespacing; what if another library one day wants to call their interface the same thing? Then it's completely impossible for a downstream library to interoperate with both. Having conversions be a non-special method of the downstream class, and leaving our constructor unaware of them alleviates that issue. Numpy can get away with squatting the `__array__` name because they're _huge_, but I would argue that if we do it, we could actually _harm_ the quantum software ecosystem in the long-run - what happens when a package better than QuTiP comes along that wants to call its objects `Qobj` as well? Let's face it - it's a pretty straightforward name!. All that said, I am very aware that not everyone agrees with me on this, and I _am_ a big fan of interfaces. Python doesn't give us the tools to do it properly, but we can emulate it, like you suggest. I have a few more considerations to add to a discussion:. 1. we can't have _proper_ namespacing, but let's at least make the magic name `__qutip_qobj__` so we realistically prevent any chance of a clash - by nature of a centralised package manager, we can be sure that no ot",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507:749,down,down,749,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507,3,['down'],"['down', 'downside', 'downstream']"
Availability,"`--config-setting=""--global-option=--with-openmp""` gives a build error (qutip 4.7.0, debian unstable, python 3.10.6):; ```; $ python3.10 -m build --skip-dependency-check --no-isolation --wheel --config-setting=""--global-option=--with-openmp""; * Building wheel...; Traceback (most recent call last):; File ""/usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 363, in <module>; main(); File ""/usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 345, in main; json_out['return_val'] = hook(**hook_input['kwargs']); File ""/usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 261, in build_wheel; return _build_backend().build_wheel(wheel_directory, config_settings,; File ""/usr/lib/python3/dist-packages/setuptools/build_meta.py"", line 230, in build_wheel; return self._build_with_temp_dir(['bdist_wheel'], '.whl',; File ""/usr/lib/python3/dist-packages/setuptools/build_meta.py"", line 211, in _build_with_temp_dir; sys.argv = (sys.argv[:1] + setup_command +; TypeError: can only concatenate list (not ""str"") to list. ERROR Backend subproccess exited when trying to invoke build_wheel; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1978#issuecomment-1219844355:65,error,error,65,https://qutip.org,https://github.com/qutip/qutip/pull/1978#issuecomment-1219844355,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,`2 * Options.rtol` could be good enough for most the tests.; ; But expecting `Options.rtol` to be a good estimation of the numerical error in all case is risky. There is no promise by the solver that the result is within rtol of the analytical solution and it ignore error propagation in the post-treatment steps.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249#issuecomment-625407196:133,error,error,133,https://qutip.org,https://github.com/qutip/qutip/pull/1249#issuecomment-625407196,2,['error'],['error']
Availability,"`QobjEvo` have a `with_state` method `QobjEvo.with_state(t, psi, args={})` which can be used instead of `__call__` if needed. It compute the coefficient on the python side and send them to the cython part if needed. But I don't like it like this, using `__call__` will raise and error if a psi is needed, and we need to treat it differently in solvers.; How about having the state inserted in the args dictionary.; So if the users have the key ""psi_vec"" or ""psi_Qobj"" in args and mul_vec (spmv)/ expect is used, it is automatically updated. With that definition most solvers could work without a special cases for `rhs_with_state=True`. The present method could still be supported using decorator.; Also it would be relatively simple to support expectation value in args in a similar way:; if a specific key/value is found in the dictonary (`args[""_expect""+name] = Qobj/ QobjEvo` ), it is replaced with the operator expectation value when possible. . For the present case, we should document it more than change it, going back to Qobj will slow the simulation. Maybe `rhs_with_state` could be more than a bool and offer the option?; Here ` expect_rho_vec(data, vec, isherm)` from qutip.expect could be used to skip the vec -> Qobj conversion. . Also, the users should not need to know the matrix format and have to do the conversion themselves. They should never have to use `dense2D_to_fastcsr_fmode`. `QObj((vec2mat(rho))` works and should be sufficient.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/947#issuecomment-462591342:279,error,error,279,https://qutip.org,https://github.com/qutip/qutip/issues/947#issuecomment-462591342,1,['error'],['error']
Availability,"`[]` is a list while 'identity' is function, so they will invoke two different type of time-dependent functions (list-string or list-function type or function callback type, respectively). `rhs_reuse` only applies to the list-string type, so it should only affect the first type of call to `mesolve`. It might be that we have a bug in handing of empty lists as first argument to mesolve, I will look into that. Regarding `rhs_reuse` it can behave a bit differently in a script and the notebook because a notebook is one long-running python process, so the state of `rhs_reuse` might be retained from one call to `mesolve` to another, while a script would get reset between successive calls (runs of the script). I guess this is the reason for the backtrace error you show. Note that you cannot use `rhs_reuse` with successive calls to `mesolve` if you change the function signature. If this is not the case, then it would be useful with a small minimum example (script or notebook) that reproduces the error. ps.. In your second use-case you qouted `mesolve(identity, ..)`. In this case I would rather use `mesolve(identity(), ..)`, so that the first argument is a `Qobj` instance rather than the function that returns one.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/123#issuecomment-42158885:757,error,error,757,https://qutip.org,https://github.com/qutip/qutip/issues/123#issuecomment-42158885,2,['error'],['error']
Availability,"```; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/usr/lib/python3.6/site-packages/qutip/entropy.py"", line 169, in negativity; rho_pt = partial_transpose(rho, mask); File ""/usr/lib/python3.6/site-packages/qutip/partial_transpose.py"", line 82, in partial_transpose; return _partial_transpose_dense(rho, mask); File ""/usr/lib/python3.6/site-packages/qutip/partial_transpose.py"", line 96, in _partial_transpose_dense; np.array(rho.dims).flatten()).transpose(pt_idx).reshape(rho.shape); TypeError: only integer scalar arrays can be converted to a scalar index; ```. I guess `_partial_transpose_dense` was expecting `mask` to be an array of 0's or 1's, but negativity is passing in boolean array. Now that I read the docstring for partial_transpose, I agree with you. Should I just cast the mask to integers in `partial_transpose`?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/776#issuecomment-347820465:193,mask,mask,193,https://qutip.org,https://github.com/qutip/qutip/pull/776#issuecomment-347820465,4,['mask'],['mask']
Availability,"```python; jake@tauros$ python; Python 3.7.7 (default, May 6 2020, 04:59:01); [Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import qutip; /Users/jake/.anaconda3/anaconda3/envs/qutip-dev/lib/python3.7/site-packages/setuptools/distutils_patch.py:26: UserWarning: Distutils was imported before Setuptools. This usage is discouraged and may exhibit undesirable behaviors or errors. Please use Setuptools' objects directly or at least import Setuptools first.; ""Distutils was imported before Setuptools. This usage is discouraged ""; >>>; ```. It was caused by the original coefficients PR. Could be interplay between `pyximport` and the later import of `setuptools`, but I'm not sure (definitely the import of `setuptools` in `core/coefficient.py` is what actually triggers the warning, but I'm not sure when `distutils` is imported). I don't think you _need_ `setuptools` (which is also causing the `build` directories) - I think you can use importlib to import the result of `cythonize` directly?. At any rate, it would be very good to drop the `pyximport` dependency from BR too.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1351#issuecomment-680183199:468,error,errors,468,https://qutip.org,https://github.com/qutip/qutip/pull/1351#issuecomment-680183199,1,['error'],['errors']
Availability,"``b.add_points([1/np.sqrt(3),1/np.sqrt(3),1/np.sqrt(3)],meth=""l"")``; Gives no error, but produces no output. The other methods fail.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1027#issuecomment-539973018:78,error,error,78,https://qutip.org,https://github.com/qutip/qutip/issues/1027#issuecomment-539973018,1,['error'],['error']
Availability,"`auto-tidyup` exist to remove 0s stored in sparse matrices. `auto-tidyup` is quite messy, rounding all values under 1e-12 to 0 per default after each matrix operation can only cause problems. . As for the benchmark, why ask for dense operations to add an extra step to increase their outputs error to the same level as sparse operations so their benchmark do not look to good in comparisons. I think it is fair that the sparse operation's timing include the time needed to manage it's structure. . For auto-differentiation, if operations included are done with `Qobj`, it would have to differentiate tidy-up steps after each operation. But since the tidy-up operation does not have a clean derivative (`out[out < 1e-12] = 0`) it will make the auto-differentiation very inefficient. I see `auto-tidyup` more as a necessary evil to keep sparse matrix efficient. I would argue that we should not have `auto-tidyup` in `Qobj` and have sparse matrix operation clean themselves instead.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1610#issuecomment-881709826:292,error,error,292,https://qutip.org,https://github.com/qutip/qutip/pull/1610#issuecomment-881709826,1,['error'],['error']
Availability,"`dims` is an argument of all random Qobj creator, we should keep it.; It should be in [[m,n],[1,1]] format. documentation is not clear / wrong. If used with this format, it does work, but the check and documentation indicate to use [[n,m]] which is wrong and will cause errors. What I was thinking was something along the line of:; ```; def rand_ket(N=0, ...) : ; if not N: ; N = np.prod(dims[0]); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1058#issuecomment-516436835:270,error,errors,270,https://qutip.org,https://github.com/qutip/qutip/pull/1058#issuecomment-516436835,1,['error'],['errors']
Availability,"`general_stochastic` is very manual, halfway to scipy's ode solver. It can be used for both open and closed system and does not correspond to any particular physics equation. It the function that you use if you do weird stuff that does not fit already available template and I would discourage it's use. ; If other type of stochastic evolution are commonly used, it would be better to make a new specialized function than use `general_stochastic`. Old example should be adapted to `smesolve` as much as possible. The solver does not know if it is solving an close or open system (or something else). So e_ops are not touched. ; d1, d2 are working in array for performance issue. We could easily have them work in Qobj, but I would expect a significant slowdown. These function, taking no args, and being call many time at each step could benefit from being compiled with numba.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1115#issuecomment-546958283:252,avail,available,252,https://qutip.org,https://github.com/qutip/qutip/pull/1115#issuecomment-546958283,1,['avail'],['available']
Availability,`mcsolve` can only evolve ket states. The closest to what you want is `photocurrent_mesolve` which does master equation evolution of a density matrix with the liouvillian build from `H` and `c_ops` but using discrete jumps for `sc_ops`. It is a lot slower than mesolve since it use only basic ode method (Euler's or Heun's method) and you need to set a very small time step to keep the error resonable.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1375#issuecomment-720652251:386,error,error,386,https://qutip.org,https://github.com/qutip/qutip/issues/1375#issuecomment-720652251,1,['error'],['error']
Availability,"`pdf2svg` isn't part of ImageMagick, (at least on `brew`) is http://www.cityinthesky.co.uk/opensource/pdf2svg. It feels like all of these system commands should be made a bit more robust. In particular, the bare `os.system` is not the recommended way of calling out to system commands any more. It's now preferable to use [`subprocess.run`](https://docs.python.org/3/library/subprocess.html#subprocess.run). Here, the bug is, I would assume, actually on the previous line:; ```python; os.system('command_which_does_not_exist'); ```; will return a non-zero error code which isn't checked for, but will not raise an exception. . If Jupyter supports displaying embedded PDF files and that's all it's being used for, then it might be worth removing the conversion to SVG. (pdf)LaTeX certainly supports embedded PDF files as graphics. The fewer little dependencies we require, the better.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1185#issuecomment-593375737:180,robust,robust,180,https://qutip.org,https://github.com/qutip/qutip/issues/1185#issuecomment-593375737,2,"['error', 'robust']","['error', 'robust']"
Availability,"`qutip.ptrace()` takes the partial trace. It is defined only on composite Hilbert spaces. You are applying it on a single Hilbert space, hence it gives an error. If you want to take the trace, you could call it with `qp.sigmax().tr()`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1239#issuecomment-620130318:155,error,error,155,https://qutip.org,https://github.com/qutip/qutip/issues/1239#issuecomment-620130318,1,['error'],['error']
Availability,"`qutip` has binary built extensions and we distribute binary releases through `conda`. These generally have to be built against a specific version of CPython, so we haven't released a cp39 candidate package yet, and `conda` will recognise that as effectively a requirement that `python<3.9`. `pip` should install from source, because we haven't yet built wheels to distribute that way (though I've been looking into that a bit more recently), so the error will likely be completely different - what sort of error do you get from that?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1371#issuecomment-711168808:450,error,error,450,https://qutip.org,https://github.com/qutip/qutip/issues/1371#issuecomment-711168808,2,['error'],['error']
Availability,"`result.measurement` is not the same as `result.expect`, the measurement is an expectation value, but not of the `e_ops` but `m_ops` which are usually automatically generated from the `c_ops` and noise is added to the computed expectation value of the state of the trajectory. The noise is usually larger than the signal and makes it hard to see, but it should converge to mesolve's solution eventually. `smesolve`'s `expect` are just the expectation value of the state of each trajectories (averaged or not depending on options) and should average to the master equation solutions with enough trajectories. Plot in cell 8 show the match is quite good. Even with enough trajectories, the numerical error from `smesolve` will be visible. The equation solved are those written in the notebook. Various stochastic integration method are provided, the default is the taylor expansion of order 1.5.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2194#issuecomment-1634520926:698,error,error,698,https://qutip.org,https://github.com/qutip/qutip/issues/2194#issuecomment-1634520926,1,['error'],['error']
Availability,"`solver_options` contains all available options. I don't think we want to breaks this pattern for this.; Maybe fixing MCSolver to use `options.get(""improved_sampling"", False)` instead of `options[""improved_sampling""]` would be enough for now. But it shows that our solver class structure is to be reworked or we need an equivalent to `improved_sampling` for `nm_mcsolve`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2234#issuecomment-1751297442:30,avail,available,30,https://qutip.org,https://github.com/qutip/qutip/pull/2234#issuecomment-1751297442,1,['avail'],['available']
Availability,"`svd` is used by `steadystate`. There are no method in common between `Dense` and `CSR`, the default is `solve` for `Dense`, but `spsolve` for `CSR`. All iterative methods are only available in `sparse.linalg`... So we cannot pass it anywhere thus I think it won't be hard to remember. If we want to have the default change depending on whether we have mkl or not, we could read the default method from core's settings.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2002#issuecomment-1267059737:181,avail,available,181,https://qutip.org,https://github.com/qutip/qutip/pull/2002#issuecomment-1267059737,1,['avail'],['available']
Availability,ah great the rtol set to 1e-9 solved it.; thanks a lot !. out of a curiosity I need to ask though: why is the bias so constantly driving the population exclusively downwards (or upwards) ? I have no idea where the numerical error actually comes into play but I would have expected the error to be a lil' more all over the place...,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1085#issuecomment-531289790:164,down,downwards,164,https://qutip.org,https://github.com/qutip/qutip/issues/1085#issuecomment-531289790,3,"['down', 'error']","['downwards', 'error']"
Availability,"ame time different versions of the interface, however, and there’s value in doing so. > To me, this is absolutely one of the mistakes that Numpy made in their implementation, and we shouldn't be copying it. I don't know enough of the history behind numpy current api, but I see your point. however I'd like to reiterate that this is not what I am proposing. ; I think there is considerable difference between supporting arbitrary operations `new_obj = Qobj + netket_operator*5` (though if you are going to export dispatch hooks in `5.0`, this would be possible in a consistent way, I think) and `qutip.mesolve(netket_operator, ...)`. ; In the first, I do agree with your point that the nature python's `__add__/__radd__` is not commutative, leading to surprising behavior. From my point of view, no package really owns `+` so any conversion would be implicit.; But `qutip.groundstate(netket_operator)` is in itself an explicit cast. I am explicitly asking to qutip `please give me the ground state of this object`. I do expect to get a Qobj out, and qutip to make an effort converting this object to whatever format he internally wants to work with. Same goes with time evolution. . > For greater discussion, here's an alternate approach: instead of objects defining __qutip_qobj__, instead we expose an entry-point qutip.Qobj.register_conversion_function(converter, type, priority, version=None), and downstream libraries register functions rather than defining methods on their classes. I do prefer such an approach. I just did not think that was an option in QuTiP.; In fact we have redesigned NetKet to allow for something similar using multiple dispatch. (I’m not familiar with Tensorflow either.). I do agree with all your points, especially the first. As for your last point, about downstream packages having to import qutip: This is indeed a potential issue. I’ll try to investigate this: maybe there is a solution whereby a callback executed on package load can be registered with importlib?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830113742:3628,down,downstream,3628,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830113742,2,['down'],['downstream']
Availability,"anshammah$ pytest; ============================= test session starts ==============================; platform darwin -- Python 3.7.3, pytest-4.6.2, py-1.8.0, pluggy-0.12.0; rootdir: /Users/nathanshammah/github/qutip; collected 0 items / 60 errors. ==================================== ERRORS ====================================; __________ ERROR collecting qutip/tests/test_basis_transformation.py ___________; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:171: in <module>; from qutip.qobj import *; qutip/qobj.py:60: in <module>; from qutip.fastsparse import fast_csr_matrix, fast_identity; qutip/fastsparse.py:406: in <module>; from qutip.cy.spmath import (zcsr_transpose, zcsr_adjoint, zcsr_mult); qutip/cy/__init__.py:1: in <module>; from qutip.cy.spmatfuncs import *; stringsource:105: in init qutip.cy.spmatfuncs; ???; E AttributeError: type object 'qutip.cy.spmatfuncs.array' has no attribute '__reduce_cython__'; ________________ ERROR collecting qutip/tests/test_brmesolve.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_brmesolve_td.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_brtools.py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:1140,ERROR,ERROR,1140,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,as no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52452,ERROR,ERROR,52452,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,as no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52534,ERROR,ERROR,52534,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,as no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52944,ERROR,ERROR,52944,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,as no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54584,ERROR,ERROR,54584,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"ata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/dist.py"", line 972, in run_command; > cmd_obj.run(); > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 163, in run; > _build_ext.build_ext.run(self); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 337, in run; > self.build_extensions(); > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 171, in build_extensions; > self.build_extension(ext); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 496, in build_extension; > depends=ext.depends); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/ccompiler.py"", line 574, in compile; > self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/unixccompiler.py"", line 122, in _compile; > raise CompileError, msg; > ImportError: Building module qutip.cy.spmatfuncs failed: [""CompileError: command 'gcc' failed with exit status 1\n""]; > import numpy as np; > ; > from qutip import *; > Traceback (most recent call last):; > File """", line 1, in ; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/init.py"", line 62, in ; > qutip.settings.ipython = False; > AttributeError: 'module' object has no attribute 'settings'; > ; > ######################; > ; > This seems similar to the build error in Installation on OS X with Homebrew script error #348.; > ; > Is this a bug in qutip ? Is there a way to fix this?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/382#issuecomment-148179436:5133,error,error,5133,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-148179436,2,['error'],['error']
Availability,attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54420,ERROR,ERROR,54420,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54912,ERROR,ERROR,54912,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"b\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278047 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: state with td list str H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packag",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:6956,ERROR,ERROR,6956,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['ERROR'],['ERROR']
Availability,"btw when I run the tests in Windows, using:; import nose; nose.run(defaultTest=""qutip.tests"", argv=['nosetests', '-v']). they restart themselves when there is an error. And I can't close the cmd window (even using the task manager)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708728:162,error,error,162,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708728,1,['error'],['error']
Availability,"building extension ""qutip.cy.graph_utils"" sources; > building extension ""qutip.cy.interpolate"" sources; > building extension ""qutip.cy.spmath"" sources; > building extension ""qutip.cy.heom"" sources; > building extension ""qutip.cy.math"" sources; > building extension ""qutip.cy.spconvert"" sources; > building extension ""qutip.cy.ptrace"" sources; > building extension ""qutip.control.cy_grape"" sources; > building data_files sources; > build_src: building npy-pkg config files; > running build_py; > copying qutip/version.py -> build/lib.linux-x86_64-3.5/qutip; > copying build/src.linux-x86_64-3.5/qutip/*config*.py ->; > build/lib.linux-x86_64-3.5/qutip; > running build_ext; > customize UnixCCompiler; > customize UnixCCompiler using build_ext; > building 'qutip.cy.spmatfuncs' extension; > compiling C sources; > C compiler: gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall; > -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2; > -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer; > -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions; > -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error; > -Wp,-D_REENTRANT -fPIC; >; > compile options:; > '-I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/include/python3.5m -c'; > extra options: '-w -ffast-math -O3 -march=native -funroll-loops'; > gcc: qutip/cy/src/zspmv.c; > qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or; > directory; > #include <complex.h>; > ^; > compilation terminated.; > qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or; > directory; > #include <complex.h>; > ^; > compilation terminated.; > error: Command ""gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall; > -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectoriz",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639#issuecomment-275734243:4720,error,error,4720,https://qutip.org,https://github.com/qutip/qutip/issues/639#issuecomment-275734243,1,['error'],['error']
Availability,"ck in __init__ . Again, I think that your observation is right. I thought about it only after I submitted the post above. The way numpy does it is that `__array__(self, dtype)` takes only one argument, but I think we can do better and better respect the API set by qutip. ; That is why I was suggesting that `object.__qutip_qobj__` should not return a Qobj directly, but rather the data needed by QuTiP to construct a Qobj, and qutip should be free to re-organize it afterwards as he likes. . > 3 - we need to take care to do this in a way that still allows QuTiP to iterate and improve Qobj.__init__ between major versions. You could for example require that `__qutip_qobj__(self, version, *kwargs)` takes in a version of the API? I believe that is what numpy does in `__array_interface__`. And it's on implementers of the interface the burden of checking the api version and throwing an error if it's not supported. Or the inverse, where implementers return whatever data they return and a version of the API they are using, and qutip can throw an error if that is an older version. The latter would make it harder to support multiple versions of qutip in the implementers, but I would not worry too much about it. You can throw an error saying that this other package is not supported and you should either nag it's developers or downgrade qutip. I'm not particularly worried about the blame: even if the error is thrown from qutip, if the message is clear enough it will be clear that the fault is in the downstream implementors of the API. -- ; About keyword handling: copy-pasting the list of kwargs of `Qobj`...; ```python; inpt : array_like = Data for vector/matrix representation of the quantum object.; dims : list = Dimensions of object used for tensor products.; shape : list = Shape of underlying data structure (matrix shape).; copy : bool = Flag specifying whether Qobj should get a copy of the input data, or use the original.; fast : bool = Flag for fast qobj creation when running od",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825710810:1409,error,error,1409,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825710810,1,['error'],['error']
Availability,"consistent with times obtained by @Ericgig and saved in the folder. . I am on Python 3.7.3, I recently updated OS from High Sierra to Mojave, plus some other updates in scipy and numpy, and reinstalled conda, so I am curious to see if these speedups are machine independent, which would be great. My specs; ```; Software	Version; QuTiP	4.4.0.dev0+e1639f73; Numpy	1.16.4; SciPy	1.2.1; matplotlib	3.1.0; Cython	0.29.8; Number of CPUs	2; BLAS Info	INTEL MKL; IPython	7.5.0; Python	3.7.3 (default, Mar 27 2019, 16:54:48) [Clang 4.0.1 (tags/RELEASE_401/final)]; OS	posix [darwin]; Mon Jun 10 21:16:02 2019 JST; ```; Some details:; In cell 6 of development-ssesolver-new-methods, the running time went from over 160 seconds to 6 seconds (x25 speedup). Total run time in cell 21 is now down to 14.22s from 79.46s, cell 24/25 of is now 1.4 seconds down from 14.22s in `smesolve`. `ssesolve` in cell 4 is down from 164.50s to 11.06s. Cell 6 is down to 11.48s from 250s. The next cell checking all solver methods in `ssesolve` is down from 80s to 24s. In the notebook with new smesolve methods, cell 11 with multiple time dependence in sc_ops now runs in 69s instead of 171s. . Also, the benchmarking of the different methods now reads; ```; {'solver': 'euler-maruyama'}; Total run time: 0.21s; Total run time: 0.25s; Total run time: 0.30s; Total run time: 0.38s; Total run time: 0.45s; Total run time: 0.55s; Total run time: 0.67s; Total run time: 0.81s; {'solver': 'platen'}; Total run time: 0.70s; Total run time: 0.90s; Total run time: 1.13s; Total run time: 1.15s; Total run time: 1.41s; Total run time: 1.66s; Total run time: 2.03s; Total run time: 2.47s; {'solver': 'pc-euler'}; Total run time: 0.38s; Total run time: 0.46s; Total run time: 0.58s; Total run time: 0.70s; Total run time: 0.84s; Total run time: 1.00s; Total run time: 1.26s; Total run time: 1.49s; {'solver': 'milstein'}; Total run time: 0.31s; Total run time: 0.39s; Total run time: 0.46s; Total run time: 0.56s; Total run time: 0.70s; To",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/990#issuecomment-500396003:1526,down,down,1526,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003,1,['down'],['down']
Availability,"crap . ---. Paul D. Nation; Assistant Professor; Korea University; Department of Physics; Anam-dong 5, Seongbuk-gu; Seoul 136-713, South Korea; Email: pnation@korea.ac.kr (mailto:pnation@korea.ac.kr); Phone: +82-02-3290-3092. ## Web: nqdl.korea.ac.kr (http://nqdl.korea.ac.kr/). On Saturday, August 10, 2013 at 5:03 PM, Robert Johansson wrote:. > qutip import now fail with the following error message; > /usr/local/lib/python3.3/dist-packages/qutip/cyQ/**init**.py in <module>() 1 from qutip.cyQ.spmatfuncs import \* ----> 2 from qutip.cyQ.blas_funcs import \* ImportError: /usr/local/lib/python3.3/dist-packages/qutip/cyQ/blas_funcs.cpython-33m.so: undefined symbol: dznrm2_ ; > ; > —; > Reply to this email directly or view it on GitHub (https://github.com/qutip/qutip/issues/39).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/39#issuecomment-22436060:388,error,error,388,https://qutip.org,https://github.com/qutip/qutip/issues/39#issuecomment-22436060,1,['error'],['error']
Availability,"da3/include/python3.5m/Python.h:11, from; > qutip/cy/spmatfuncs.c:27:; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61:; > fatal error: limits.h: No such file or directory #include_next; > <limits.h> /* recurse down to the real one */ ^ compilation; > terminated. In file included from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; > from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; > from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11, from; > qutip/cy/spmatfuncs.c:27:; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61:; > fatal error: limits.h: No such file or directory #include_next; > <limits.h> /* recurse down to the real one */ ^ compilation; > terminated. error: Setup script exited with error: Command ""gcc; > -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes; > -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC; > -Wformat -Wformat-security -fno-omit-frame-pointer; > -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions; > -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error; > -Wp,-D_REENTRANT -fPIC; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/include/python3.5m -c; > qutip/cy/spmatfuncs.c -o; > build/temp.linux-x86_64-3.5/qutip/cy/spmatfuncs.o -w -ffast-math -O3; > -march=native -funroll-loops"" failed with exit status 1|; >; > Then, I cloned the qutip/qutip repository, and tried to build a wheel; > with |python setup.py bdist_wheel| under the qutip directory. Which; > gave me the following log:; >; > `running bdist_wheel; > running build; > running config_cc; > unifing config_cc, config, build_clib, build_ext, build commands; > --compiler options; > running config_fc; > unifi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639#issuecomment-275734243:2056,error,error,2056,https://qutip.org,https://github.com/qutip/qutip/issues/639#issuecomment-275734243,3,['error'],['error']
Availability,"dev) cln-232-18:qutip nathanshammah$ nosetests; /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjCte size changed, may indicate binary incompatibility. Expected 344 from C header, got 352 from PyObject; return f(*args, **kwds); /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjEvoTd size changed, may indicate binary incompatibility. Expected 560 from C header, got 568 from PyObject; return f(*args, **kwds); /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjEvoTdMatched size changed, may indicate binary incompatibility. Expected 1344 from C header, got 1352 from PyObject; return f(*args, **kwds); /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo_factor.CoeffFunc size changed, may indicate binary incompatibility. Expected 32 from C header, got 40 from PyObject; return f(*args, **kwds); /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo_factor.StrCoeff size changed, may indicate binary incompatibility. Expected 40 from C header, got 488 from PyObject; return f(*args, **kwds); /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjEvo size changed, may indicate binary incompatibility. Expected 288 from C header, got 296 from PyObject; return f(*args, **kwds); /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjCteDense size changed, may indicate binary incompatibility. Expected 496 from C header, got 504 from PyObject; return f(*args, **kwds); /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjEvoTdDense size changed, may indicate binary incompatibility. Expected 920 from C header, got 928 from PyObject; return f(*args, **kwds); ........Segmentation fault: 11; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:34134,fault,fault,34134,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['fault'],['fault']
Availability,"digits)>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:648:17: error: no template named 'numeric_limits'; static_assert(numeric_limits<_FloatT>::radix == 2, ""FloatT has incorrect radix"");; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:25: error: no template named 'numeric_limits'; return _FloatBigger ? numeric_limits<_IntT>::max() : (numeric_limits<_IntT>::max() >> _Bits << _Bits);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:58: error: no template named 'numeric_limits'; return _FloatBigger ? numeric_limits<_IntT>::max() : (numeric_limits<_IntT>::max() >> _Bits << _Bits);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:661:16: error: no template named 'numeric_limits'; using _Lim = numeric_limits<_IntT>;; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:664:12: error: use of undeclared identifier '_Lim'; return _Lim::max();; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:665:21: error: use of undeclared identifier '_Lim'; } else if (__r <= _Lim::lowest()) {; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:666:12: error: use of undeclared identifier '_Lim'; return _Lim::min();; ^; 11 errors generated.; error: command '/usr/bin/clang' failed with exit code 1; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; ERROR: Failed building wheel for qutip; Failed to build qutip; ERROR: Could not build wheels for qutip, which is required to install pyproject.toml-based projects. ```; Thanks",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583:2435,error,error,2435,https://qutip.org,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583,8,"['ERROR', 'error']","['ERROR', 'error', 'errors']"
Availability,"e Benchmarking**; All the stochastic solvers in those notebooks now run much faster: between a factor 2 and 30 in speedup from last time I ran them, which was consistent with times obtained by @Ericgig and saved in the folder. . I am on Python 3.7.3, I recently updated OS from High Sierra to Mojave, plus some other updates in scipy and numpy, and reinstalled conda, so I am curious to see if these speedups are machine independent, which would be great. My specs; ```; Software	Version; QuTiP	4.4.0.dev0+e1639f73; Numpy	1.16.4; SciPy	1.2.1; matplotlib	3.1.0; Cython	0.29.8; Number of CPUs	2; BLAS Info	INTEL MKL; IPython	7.5.0; Python	3.7.3 (default, Mar 27 2019, 16:54:48) [Clang 4.0.1 (tags/RELEASE_401/final)]; OS	posix [darwin]; Mon Jun 10 21:16:02 2019 JST; ```; Some details:; In cell 6 of development-ssesolver-new-methods, the running time went from over 160 seconds to 6 seconds (x25 speedup). Total run time in cell 21 is now down to 14.22s from 79.46s, cell 24/25 of is now 1.4 seconds down from 14.22s in `smesolve`. `ssesolve` in cell 4 is down from 164.50s to 11.06s. Cell 6 is down to 11.48s from 250s. The next cell checking all solver methods in `ssesolve` is down from 80s to 24s. In the notebook with new smesolve methods, cell 11 with multiple time dependence in sc_ops now runs in 69s instead of 171s. . Also, the benchmarking of the different methods now reads; ```; {'solver': 'euler-maruyama'}; Total run time: 0.21s; Total run time: 0.25s; Total run time: 0.30s; Total run time: 0.38s; Total run time: 0.45s; Total run time: 0.55s; Total run time: 0.67s; Total run time: 0.81s; {'solver': 'platen'}; Total run time: 0.70s; Total run time: 0.90s; Total run time: 1.13s; Total run time: 1.15s; Total run time: 1.41s; Total run time: 1.66s; Total run time: 2.03s; Total run time: 2.47s; {'solver': 'pc-euler'}; Total run time: 0.38s; Total run time: 0.46s; Total run time: 0.58s; Total run time: 0.70s; Total run time: 0.84s; Total run time: 1.00s; Total run time: 1.26s; Total",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/990#issuecomment-500396003:1346,down,down,1346,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003,1,['down'],['down']
Availability,"e input to the `einsum`-like function, then calls the `Dispatcher` with this information. I think this form would likely be preferable for several reasons:; 1. it will allow arbitrary mixing of different data types (`CSR` complete space and `Dense` operator, or both `CSR`, or whatever), with the allowed conversions respecting the global dispatcher rules, not having this function use a different, special configuration; 2. it will mean that the function can also be implemented by plug-in data types (TF/CuPy/etc), installed separately to QuTiP; 3. it will be more general, and easier to maintain; the current `subsystem_apply`, `partial_transpose`, `ptrace`, `tensor_contract` and this can all become special cases of this backing `einsum`-like routine.; 4. after we've implemented new dimensions objects, we'll be able to use a more standardised description of how to refer to individual subspaces of a Hilbert space, which will provide a more consistent UX across the library. This is particularly important if we want this to work well with superoperators. Really, thank you very much for making the PR - I really am excited to see people with an interest in the new data layer! I'm sorry that I took quite so long to respond properly to it, and that when I have, I've ended up being somewhat against the implementaton as it is. I would be really interested in pursuing this, likely after the initial release of 5.0, but right now I think we might need to get our ducks in a row about licensing primarily, and then about how we're going to handle tensor networks in general. In order to prevent headaches down the line (and again, very very sorry), would it be ok if we leave this unmerged, and don't attempt to modify it in any way? I don't want to get into a situation where we decide we can't accept non-QuTiP-licenced code, and we want to use/build on your code or implement something similar, but our hands are tied because anything we do will involve our knowledge of IP we don't control.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566:4580,down,down,4580,https://qutip.org,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566,1,['down'],['down']
Availability,"e just dump out some information. ## Things you should know if you've not worked with segfaults before. - `Abort trap 6`, `Segmentation fault` and a few other points can all be from the same cause; - Segmentation faults are typically caused by reading or writing to memory that isn't owned by our process. These often occur by reading/writing too much data to an allocated pointer, or trying to read/write a memory location where the location was read from uninitialised memory.; - Segfaults will not always reliably occur. It's _very_ difficult to prove that swapping tools ""fixes"" a segfault; it can often just move around enough allocations to mask the problem, not fix it.; - Python stack traces are likely to be almost entirely unreliable in these cases, because the segfault may often occur while the garbage collector is running, and that will happen at seemingly non-deterministic times.; - Running files in a slightly different interpreter, running within a test runner with differing numbers of files, doing different work before and after will all cause the segfault to change, and may mask it.; - As annoying as they are, segfaults are actually the _good_ case of the bug - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation completes (it prints ""500""), and _then_ the fault occurs. This along with the error message should hopefully make it clear that an out-of-bounds write occurs occasionally, and it is temperamental where exactly this happens. This is typically not detected until the object is freed, wh",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:1378,mask,mask,1378,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,1,['mask'],['mask']
Availability,"e; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_qubitcircuit.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_qubits.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_rand.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_random.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:19116,ERROR,ERROR,19116,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"e; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_correlation.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_countstat.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_cqed.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_cy_structs.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:3980,ERROR,ERROR,3980,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"e; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_propagator.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_ptrace.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_qft.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_qobj.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:15806,ERROR,ERROR,15806,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"e; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_parallel.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________ ERROR collecting qutip/tests/test_partial_transpose.py ____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_piqs.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_propagator.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:14386,ERROR,ERROR,14386,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"e; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_mesolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_metrics.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_mkl.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_openmp.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:12022,ERROR,ERROR,12022,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"e; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_ptrace.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_qft.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_qobj.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_qobjevo.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:16278,ERROR,ERROR,16278,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"e; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_qobj.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_qobjevo.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_qpt.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________ ERROR collecting qutip/tests/test_qubit_evolution.py _____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:17225,ERROR,ERROR,17225,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"ecomment-859717563 on the requirements: beyond yielding the propagated states, we'll also have to modify the controls, i.e. the time-dependencies for QuTiP's nested-list format. Within the `krotov` package, these would always be numpy arrays. As an explanation, see [the figure for Krotov's update scheme](https://qucontrol.github.io/krotov/v1.2.1/_images/krotovscheme.svg) from [the documentation](https://qucontrol.github.io/krotov/v1.2.1/07_krotovs_method.html#time-discretization). The single-step-`mesolve` would be for the ""(2) forward-propagation with updated control"" in the bottom of the diagram: After each propagation time step, we calculate a new control value based on the current propagated state and other information (the ∂H/∂ϵ and stored backward-propagated states χ). The new control value is then used for the next time step. I'd also add that `mesolve` ideally should be ""thread-safe"" in the sense that we may have multiple `mesolve` run in parallel (index k in the diagram, where all the different k contribute to the update of the control values at the next time step), within whatever parallelization framework Python makes available. I vaguely remember looking at some Runge-Kutta implementations within scipy where this was a problem. I noted this in the docstring of krotov's [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/master/src/krotov/propagators.py#L162), which was an attempt to adapt some of `mesolve`'s inner workings to Krotov's needs. It turned out the overhead was still too large for this work very well, cf. the large runtime of the [corresponding example](https://qucontrol.github.io/krotov/v1.2.1/notebooks/06_example_3states.html). To get very technical, Krotov's requirements are laid out in the documentation of the [`Propagator`](https://github.com/qucontrol/krotov/blob/master/src/krotov/propagators.py#L125) abstract base class, [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/master/src/krotov/propagat",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859754215:2952,avail,available,2952,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859754215,1,['avail'],['available']
Availability,"ect about it:. ```python; >>> arr = np.empty((3,), dtype=object); >>> arr[:] = [qutip.qeye(2), qutip.qeye(2), qutip.qeye(2)]; >>> arr.shape; (3,); >>> arr[0]; Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True; Qobj data =; [[1. 0.]; [0. 1.]]; ```. The reason numpy does this now is because (my understanding is that) defining `__array__` was meant to be a much stronger guarantee than just ""it's convenient to let `np.array` know about this object"". It was meant to be an indication that your class can be safely coerced into `ndarray` (and potentially coerced back afterwards), and that mathematical operations will satisfy the normal ufunc broadcasting rules, which isn't true of `Qobj`. That means that arrays of things implementing `__array__` should be safely representable as `ndarray`, which clearly isn't true for us. Similarly, ever since `Qobj.__array__` was first defined you could use Numpy ufuncs on `Qobj`, which would get implicitly converted to `ndarray` and then return complete nonsense, rather than throwing an error like ""what you're doing is silly"":; ```python; >>> np.sin(qutip.basis(2, 1)); array([[0. ],; [0.84147098]]); ```; (imo that should really be a `TypeError` if done without an explicit conversion into Numpy semantics). There is a way around that latter point in modern Numpy - defining `Qobj.__array_ufunc__ = Qobj.__array_function__ = None` - but it does raise the question of whether we _should_ define `Qobj.__array__`; we have no intention of implying that `Qobj` satisfies the general Numpy ufunc interface, and it isn't any sort of `ndarray`-like type, because it satisfies matrix semantics, not array semantics. That's the reason `scipy.sparse` types don't implement `__array__`. There always was a sanctioned method for converting `Qobj` to `ndarray` - `Qobj.full()`, similar to `scipy`'s `spmatrix.toarray()` - so `Qobj.__array__` was never a _necessity_, just a convenience in some workflows. Given the tools we can use to suppr",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433#issuecomment-773992094:2653,error,error,2653,https://qutip.org,https://github.com/qutip/qutip/issues/1433#issuecomment-773992094,1,['error'],['error']
Availability,"ed features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `qutip.qip.device` and `qutip.qip.compiler`; - Refactoring the circuit compiler to allow simple pulse scheduling, e.g. Restriction one pulses that can be turned on at the same time.; - Features to perform error mitigation techniques in QuTiP, such as zero-error extrapolation.; - APIs to allow import quantum circuits from other software packages or commonly used language e.g. through quantum assembly language (qasm); ----------------------------------------------------------------. Best; Boxi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940:2210,error,error,2210,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940,2,['error'],['error']
Availability,"ee to re-organize it afterwards as he likes. . > 3 - we need to take care to do this in a way that still allows QuTiP to iterate and improve Qobj.__init__ between major versions. You could for example require that `__qutip_qobj__(self, version, *kwargs)` takes in a version of the API? I believe that is what numpy does in `__array_interface__`. And it's on implementers of the interface the burden of checking the api version and throwing an error if it's not supported. Or the inverse, where implementers return whatever data they return and a version of the API they are using, and qutip can throw an error if that is an older version. The latter would make it harder to support multiple versions of qutip in the implementers, but I would not worry too much about it. You can throw an error saying that this other package is not supported and you should either nag it's developers or downgrade qutip. I'm not particularly worried about the blame: even if the error is thrown from qutip, if the message is clear enough it will be clear that the fault is in the downstream implementors of the API. -- ; About keyword handling: copy-pasting the list of kwargs of `Qobj`...; ```python; inpt : array_like = Data for vector/matrix representation of the quantum object.; dims : list = Dimensions of object used for tensor products.; shape : list = Shape of underlying data structure (matrix shape).; copy : bool = Flag specifying whether Qobj should get a copy of the input data, or use the original.; fast : bool = Flag for fast qobj creation when running ode solvers.; ```. For the case of the usage that netket would have, our objects already define the Hilbert space they are acting on (so `dims` and `shape`). `copy` doesn't really make sense for us, because we would be building the representation . The way I see it, `Qobj(other_pkg_obj,**kwargs)` should behave like `Qobj(qutip_obj, **kwargs)`, so `__qutip_qobj__` should return the matrix data, shape and dims if possible, and qutip will handle i",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825710810:1767,error,error,1767,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825710810,3,"['down', 'error', 'fault']","['downstream', 'error', 'fault']"
Availability,"elated to mkl and steady when running the full test. Denis. De : zhang [mailto:notifications@github.com]; Envoyé : samedi 28 septembre 2019 09:33; À : qutip/qutip <qutip@noreply.github.com>; Cc : VION Denis <denis.vion@cea.fr>; Comment <comment@noreply.github.com>; Objet : Re: [qutip/qutip] Error with conda MKL2019.0 on Windows (#975). This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:. File ""C:\Users\ym24chen\Anaconda3\. x = lu.solve(b, verbose=verbose). File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve. np_x, np_error). OSError: exception: access violation reading 0x0000000000000008. envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve. Env info:. QuTiP Version: 4.3.1. Numpy Version: 1.15.4. Scipy Version: 1.1.0. Cython Version: 0.29.6. Matplotlib Version: 3.0.3. Python Version: 3.7.2. Number of CPUs: 8. BLAS Info: INTEL MKL. OPENMP Installed: False. INTEL MKL Ext: True. Platform Info: Windows (AMD64). Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip. ==============================================================================. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/975?email_source=notifications&email_token=ADBRKX2X6OKO5WY3XBOXMFLQL4CEJA5CNFSM4HFQJOJ2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD72TBSI#issuecomment-536162505>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADBRKXZB66WCUYJDJKW7ZTLQL4CEJANCNFSM4HFQJOJQ>.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975#issuecomment-536288655:1663,rollback,rollback,1663,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536288655,2,"['error', 'rollback']","['errors', 'rollback']"
Availability,"elp"", ""copyright"", ""credits"" or ""license"" for more information.; > ; > from qutip import *; > Compiling with an SDK that doesn't seem to exist: /Developer/SDKs/MacOSX10.6.sdk; > Please check your Xcode installation; > In file included from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/syslimits.h:7:0,; > from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:34,; > from /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:19,; > from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:; > /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:168:61: error: no include path in which to search for limits.h; > In file included from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:0:; > /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:33:19: fatal error: stdio.h: No such file or directory; > compilation terminated.; > Traceback (most recent call last):; > File """", line 1, in ; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/init.py"", line 213, in ; > from qutip.qobj import *; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/qobj.py"", line 60, in ; > from qutip.ptrace import ptrace; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/ptrace.py"", line 38, in ; > from qutip.sparse import sp_reshape; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/sparse.py"", line 49, in ; > from qutip.cy.sparse_utils import (sparse_profile, _sparse_permute,; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/cy/__init.py"", line 1, in ; > from qutip.cy.spmatfuncs import *; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/382#issuecomment-148179436:1488,error,error,1488,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-148179436,1,['error'],['error']
Availability,"en module scoping isn't good, but if you have lots of different functions to test, and every test for a given function will want the same parametrisation, then class scoping might be a good choice. If you only need the parametrisation once, then it's best to put it right next to the place it's used (like in the case of mine that you've highlighted). It means that if you've opened that file to read the tests, then everything you need to understand `Test_fidelity.test_known_cases` will be on your screen if you just scroll to it. That makes it much easier for the next person who has to come along to edit your code. I used a couple of temporary variables in that case just to aid readability - my cases wouldn't have nicely fit on one line if I'd shoved the `qutip.basis(2, 0)` stuff inside the `pytest.param` constructors, and it would be hard to read. This way you can easily verify that the code is correct bit-by-bit; you can see clearly that the names are descriptive and match exactly what they say, and that means you can trust them when they then appear in the parametrisation. I won't pretend to be perfect at any part of coding, and particularly testing. I rewrote all the testing files starting from those beginning with ""a"" up to (now) ""metrics"" while I was first getting to know the QuTiP codebase, and hopefully you can see that my early efforts weren't that great, and they get a bit better and easier to read as time went on. (The later files haven't been converted yet.) The main things are to always be thinking about readability both of the code and the error messages that are coming out, and making sure that your tests are really testing that your functions have your behaviour you want them to have. Another thing we really don't have enough of in QuTiP yet is tests for ""negative"" behaviour, i.e. testing that functions _fail_ when they're passed incorrect inputs - consequently, quite a lot of QuTiP actually will just silently do the wrong thing if it's passed nonsense.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1487#issuecomment-815044706:2376,error,error,2376,https://qutip.org,https://github.com/qutip/qutip/pull/1487#issuecomment-815044706,1,['error'],['error']
Availability,"erlib` isn't compatible with QuTiP next, whereas `Qobj(otherlib.obj)` failing would (rightly) be taken as QuTiP being at fault, which stymies our development a little because we're forced to be more conservative than we otherwise would be with our constructor. This is going to be a particular problem with handling `dims`, since we're talking about completely changing the structure for how that's managed internally to help us in other parts of our library.; 4. what will happen with all the other keyword arguments passed to the `Qobj` constructor? We have probably three choices:; - pass all keywords on (which is a big problem in conjunction with the point above);; - pass none of them on, call `__qutip_qobj__` within `Qobj.__new__`, and then pass through `Qobj.__init__` like normal, but now with our new `Qobj` instance as the argument. This would have a slightly nontrivial interaction with the `copy` keyword, I imagine, but not an unsolvable one.; - error if you pass something that defines `__qutip_qobj__` in addition to keywords. This isn't ideal because it gives `Qobj` special treatment - additional kwargs can override `Qobj` settings if they're compatible. ---. Just in the interest of completeness, let me also just bring up some of the sweeping changes we'll bringing in in QuTiP 5.0 as well, which massively overhaul how `Qobj` is constructed, and how its data is stored. These aren't _directly_ applicable to the current discussion, but they're worth keeping in mind since they're a huge overhaul of how things will be handled, and may have some implications for how implementors of this interface might behave. The new `Qobj` will no longer have the same `fast_csr_matrix` type as its `data` attribute, but instead will have an extensible data type. The two that will be distributed with the library will be `Dense` and `CSR` (which simply do what they say on the tin), and all linear algebra operations between multiple `Qobj` are handled by a custom multiple-dispatch system ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507:3800,error,error,3800,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507,1,['error'],['error']
Availability,"erse Permute ... ERROR; > Sparse: Nonsymmetric Reverse Permute ... ERROR; > Sparse: Bandwidth ... ERROR; > ; > More detailed info:; > ; > ```; > ERROR: Sparse: Symmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 73, in test_sparse_symmetric_reverse_permute; > B=sparse_reverse_permute(x,perm,perm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Nonsymmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 89, in test_sparse_nonsymmetric_reverse_permute; > B=sparse_reverse_permute(x,rperm,cperm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Bandwidth; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/73#issuecomment-35583331:1271,ERROR,ERROR,1271,https://qutip.org,https://github.com/qutip/qutip/issues/73#issuecomment-35583331,1,['ERROR'],['ERROR']
Availability,"f Cython detected: needed {}, got {}.""; + .format(_cy_require, _Cython.__version__); + ); + if _version2int(_Cython.__version__) >= _version2int(_cy_unsupported):; + warnings.warn(; + ""The new version of Cython, (>= 3.0.0) is not supported.""; + .format(_Cython.__version__); + ); + else:; + # Setup pyximport; + import qutip.cy.pyxbuilder as _pyxbuilder; + _pyxbuilder.install(); + del _pyxbuilder, _Cython, _version2int; + qutip.settings.has_cython = True; ; ; # -----------------------------------------------------------------------------; Index: qutip/qutip/tests/test_brmesolve_td.py; ===================================================================; --- qutip.orig/qutip/tests/test_brmesolve_td.py	2024-01-16 03:52:59.780085342 +0100; +++ qutip/qutip/tests/test_brmesolve_td.py	2024-01-16 03:52:59.780085342 +0100; @@ -148,7 +148,8 @@; brme = qutip.brmesolve(H, psi0, times, a_ops, e_ops=[a.dag()*a]); assert np.mean(np.abs(brme.expect[0] - exact) / exact) < 1e-5; ; -; +@pytest.mark.skipif(not qutip.settings.has_cython,; + reason=""cython support is not available""); def test_time_dependent_spline_in_c_ops():; N = 10; a = qutip.destroy(N); @@ -232,6 +233,8 @@; [(a, a.dag()), (spectrum, '1', '1')]]); ; ; +@pytest.mark.skipif(not qutip.settings.has_cython,; + reason=""cython support is not available""); @pytest.mark.parametrize(""collapse_operators"", [; _2_tuple_split,; pytest.param(_4_tuple_split, marks=pytest.mark.slow),; Index: qutip/qutip/about.py; ===================================================================; --- qutip.orig/qutip/about.py	2024-01-16 03:52:59.780085342 +0100; +++ qutip/qutip/about.py	2024-01-16 03:54:39.029027082 +0100; @@ -44,7 +44,8 @@; cython_ver = Cython.__version__; except ImportError:; cython_ver = 'None'; - print(""Cython Version: %s"" % cython_ver); + print(""Cython Version: %s%s"" % (cython_ver,; + """" if cython_ver == 'None' or qutip.settings.has_cython else "" (unsupported)"")); try:; import matplotlib; matplotlib_ver = matplotlib.__version__. ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293#issuecomment-1893522543:2686,avail,available,2686,https://qutip.org,https://github.com/qutip/qutip/issues/2293#issuecomment-1893522543,2,['avail'],['available']
Availability,"ffset(pulse); ; @@ -1103,7 +1103,7 @@ class PulseGenCrab(PulseGen):; "", hence ignored."".format(self.guess_pulse_action)); ; def guess_pulse_add(self, pulse):; - pulse = pulse + self.guess_pulse; + pulse += self.guess_pulse; return pulse; ; def guess_pulse_modulate(self, pulse):; diff --git a/qutip/cy/codegen.py b/qutip/cy/codegen.py; index e01d57a2..e0964a47 100644; --- a/qutip/cy/codegen.py; +++ b/qutip/cy/codegen.py; @@ -396,7 +396,7 @@ def cython_col_spmv():; row_start = ptr[row]; row_end = ptr[row+1]; for jj in range(row_start,row_end):; - dot = dot + data[jj] * vec[idx[jj]]; + dot += data[jj] * vec[idx[jj]]; out[row] = dot; """"""]; ; diff --git a/qutip/essolve.py b/qutip/essolve.py; index 7320b9ab..304e6ffe 100644; --- a/qutip/essolve.py; +++ b/qutip/essolve.py; @@ -140,7 +140,7 @@ def ode2es(L, rho0):; # check initial state; if isket(rho0):; # Got a wave function as initial state: convert to density matrix.; - rho0 = rho0 * rho0.dag(); + rho0 *= rho0.dag(); # check if state is below error threshold; if abs(rho0.full()).sum() < 1e-10 + 1e-24:; # enforce zero operator; diff --git a/qutip/floquet.py b/qutip/floquet.py; index 92cca493..8640941e 100644; --- a/qutip/floquet.py; +++ b/qutip/floquet.py; @@ -140,7 +140,7 @@ def floquet_modes_t(f_modes_0, f_energies, t, H, T, args=None,; ; """"""; # find t in [0,T] such that t_orig = t + n * T for integer n; - t = t - int(t / T) * T; + t -= int(t / T) * T; f_modes_t = []; ; # get the unitary propagator from 0 to t; diff --git a/qutip/graph.py b/qutip/graph.py; index 8fb0b509..2c9b2293 100644; --- a/qutip/graph.py; +++ b/qutip/graph.py; @@ -143,7 +143,7 @@ def reverse_cuthill_mckee(A, sym=False):; raise TypeError('Input must be CSC or CSR sparse matrix.'); nrows = A.shape[0]; if not sym:; - A = A + A.transpose(); + A += A.transpose(); return _reverse_cuthill_mckee(A.indices, A.indptr, nrows); ; ; diff --git a/qutip/lattice.py b/qutip/lattice.py; index e3937691..7a89b641 100644; --- a/qutip/lattice.py; +++ b/qutip/lattice.py; ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872:6089,error,error,6089,https://qutip.org,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872,1,['error'],['error']
Availability,"fine the `__jax_array__` interface). While I think that Qobj is a very qutip-like principle, I see no problems in namespacing. > 2- having the check in __init__ . Again, I think that your observation is right. I thought about it only after I submitted the post above. The way numpy does it is that `__array__(self, dtype)` takes only one argument, but I think we can do better and better respect the API set by qutip. ; That is why I was suggesting that `object.__qutip_qobj__` should not return a Qobj directly, but rather the data needed by QuTiP to construct a Qobj, and qutip should be free to re-organize it afterwards as he likes. . > 3 - we need to take care to do this in a way that still allows QuTiP to iterate and improve Qobj.__init__ between major versions. You could for example require that `__qutip_qobj__(self, version, *kwargs)` takes in a version of the API? I believe that is what numpy does in `__array_interface__`. And it's on implementers of the interface the burden of checking the api version and throwing an error if it's not supported. Or the inverse, where implementers return whatever data they return and a version of the API they are using, and qutip can throw an error if that is an older version. The latter would make it harder to support multiple versions of qutip in the implementers, but I would not worry too much about it. You can throw an error saying that this other package is not supported and you should either nag it's developers or downgrade qutip. I'm not particularly worried about the blame: even if the error is thrown from qutip, if the message is clear enough it will be clear that the fault is in the downstream implementors of the API. -- ; About keyword handling: copy-pasting the list of kwargs of `Qobj`...; ```python; inpt : array_like = Data for vector/matrix representation of the quantum object.; dims : list = Dimensions of object used for tensor products.; shape : list = Shape of underlying data structure (matrix shape).; copy : bool ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825710810:1248,error,error,1248,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825710810,1,['error'],['error']
Availability,"first look it's looking great! I've been working a lot on the stochastic solvers the last few months, but it is still very much under development. The milstein method has been on my todo list for a long time, but I've not gotten around to work on it yet, so your contribution is very timely and most welcome!. I have tried to design the API in the most general way I could think of while still keeping the complexity from growing too much. Defining an SME with its RHS function, D1 and D2 functions has worked for most problems I considered so far, but I'd be happy to discuss further if this could be changed to something more flexible, like a function for calculating rho_{n+1} like you suggest. We hope to have the stochastic solver API ready and mature enough to include in the next qutip release sometime this fall, so it would be good to have these things tested and thoroughly discussed before then. But until the stochastic module is officially in the QuTiP API we still have a lot of freedom to shake things up if necessary. Also, to keep complexity and code duplication down I wanted to follow the pattern. smesolve (choose solver by argument) -> smesolve_generic -> specific method and SDE by rhs, d1, d2 selection. So it would be good if smesolve_mil and smesolve_impl in your code could be combined with smesolve, and if smesolve_implicit and smesolve_milstein could be combined with smesolve_generic, etc. That would reduce a lot of code duplication I think. Of course, if smesolve_generic needs to be changed to accommodate this that would be totally fine with me. It would be great if you could do a pull request of this to the qutip master, then we could discuss details in the PR. You'd need to rebase your branch to the current master tip though, because things already changed a bit since the version you based your additions on. If you have troubles with this or no not know how to do it I could also try to merge your modifications into the qutip master, it's totally up to you.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/35#issuecomment-22011953:1267,down,down,1267,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22011953,1,['down'],['down']
Availability,formation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51796,ERROR,ERROR,51796,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"g - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation completes (it prints ""500""), and _then_ the fault occurs. This along with the error message should hopefully make it clear that an out-of-bounds write occurs occasionally, and it is temperamental where exactly this happens. This is typically not detected until the object is freed, when the Python allocators do a little bit of checksumming. I think that in _all_ cases we're seeing the failure come from the garbage collection, but I can't be 100% certain - note that this almost certainly means the failure is somewhere completely different, and it's only _detected_ at garbage collection. Here is the output of a Python 3.8 crash on the `Malloc.py` file with some additional debugging enabled. This is with Python 3.8.8, Numpy 1.19.2, Scipy 1.6.2 and MKL:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler Malloc.py; 500; Debug memory block at address p=0x7fa2e02de610: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7fa2e02ed64f are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:2384,failure,failure,2384,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,2,['failure'],['failure']
Availability,"getting weighed down). We've got to be concerned with backwards and forwards compatibility; what if a user wants to install and use QuTiP and a different library in the same environment _without_ using them together, but can't even have them coexist because of version incompatibilities in optional conversion features? That's frustrating for users, even though it's not really anybody's fault. Bugging developers is fine when people want to use packages that are still maintained, but I'm sure we've all come up against times in research when you get to trying out a package to do one specific thing that's been abandoned for a while. Again, this certainly isn't an unsolvable problem: having versioning in the interface API is one solution to some of these problems. ---. For greater discussion, here's an alternate approach: instead of objects defining `__qutip_qobj__`, instead we expose an entry-point `qutip.Qobj.register_conversion_function(converter, type, priority, version=None)`, and downstream libraries register functions rather than defining methods on their classes. The logic inside the `Qobj` constructor remains approximately the same as what you suggest. I think TensorFlow does something a little more similar to this? (I'm not very familiar with it at all.). Advantages of this over a `__qutip_qobj__` magic method:; - Users aren't limited to what libraries define for them, but can add their own conversions or override library ones if they don't like them. I actually see this as being closer to Julia's dispatch, or Rust's `impl for`.; - It doesn't involve weird namespacing, or anything like that, and doesn't require downstream classes to carry around additional slots. It's less an issue for classes that define `__slots__` since those are frozen methods, but extra methods adds a minor amount vtable weight for most libraries, and makes their class definitions more complex.; - Control between different versions is perhaps a little easier (though a minor point): this _fe",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691:5242,down,downstream,5242,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691,1,['down'],['downstream']
Availability,has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52288,ERROR,ERROR,52288,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52616,ERROR,ERROR,52616,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53354,ERROR,ERROR,53354,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53436,ERROR,ERROR,53436,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"hat a scalar is (which classes are scalars) and at what level do we define it (who is responsible for returning NotImplemented). Proposed solutions:; 1) Let the _specialisation_ return `NotImplemented` and set `isherm` only when `complex(other)` is possible. This defines what an scalar is at the _specialisation_ level. However:; - It may cause inconsistent behaviour where some operations are allowed for a data layer (`TfTensor` or any other) but not for another one. I would argue that all specialisations should accept the same input, although operations may be handled differently internally (for example, in tensorflow we want to keep the graph state).; - `NotImplemented` only makes sense for some special binary methods (`__add__`, `__lt__`, etc) as Python employs `NotImplemented` to try `other`'s binary method. My concern is that if the dispatcher is used by itself at some points of the code (such as for the solver) returning `NotImplemented` may cause wrong error messages or even unexpected behaviour with future specialisations ( for instance, although it now raises a deprecation warning, `NotImplemented` is considered as `True` when evaluated as a condition). It seems to me that we should avoid having `NotImplemented` in python space (except for arithmetic operations in a class where they are useful and always make sense).; ; 2) Simon suggested to define what a scalar is at the _dispatcher_ level (or something similar to this but correct me if I am wrong). This would require to have a function that casts any defined scalar to a complex scalar. The dispatcher would be responsible to ensure that the correct scalar gets passed appropriately to the specialisation and for returning not implemented if necessary. ; - This solves the inconsistency problem as you could register a ""new"" scalar and define how it gets cast to a python complex scalar with a function (in most of the times, if not always, this will be `complex(other)`). ; - This does _not_ solve having `NotImplem",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1620#issuecomment-889006152:1403,error,error,1403,https://qutip.org,https://github.com/qutip/qutip/pull/1620#issuecomment-889006152,1,['error'],['error']
Availability,"he notebook I run locally and in the one online. So probably that's the expected behaviour. . In [development-qobjevo-adv.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo-adv.ipynb), block 20 has a comment that is an unfinished sentence. In general, I think that examples could be much more descriptive, with comments, about the tests that are being performed. . * I wonder whether `qobjevo_codegen.py` should stay there. It stands out from all other modules, also because in the other cases the title are self-explanatory. ; Regarding this comment:; ```; Function to build cython code from str, compile and import it.; Used by cQobjEvo.; cy/codegen.py does the same thing for specific solver; ```; could then this file by moved to `qutip/cy/`?. * In [development-qobjevo-timing.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo-timing.ipynb), block 24 online has a printed error `TypeError: __call__() got an unexpected keyword argument 'args'`, yet on my machine runs fine, it can be replaced. I opened a PR, also running the last blocks and qutip.about(), https://github.com/qutip/qutip-notebooks/pull/72. . * In [development-qobjevo-timing.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo-timing.ipynb), `Time for cte` could be more explanatory. Similarly elsewhere. * I wonder whether instead `QobjEvo`, `Qobjt` could be even more intuitive for the user. * I would really encourage you to write one notebook (or more), about the new functionalities of the stochastic solvers, as well as the old methods. This could be the to-go resource, beyond documentation, to understand how these stochastic solvers are now expanded and coherently defined. It does not need to be a lot of work, it can copy a lot of stuff from the development notebooks. It would be fundamental to have the solvers' master equations written down, explaining for each solver what each term is, e.g.,",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/969#issuecomment-489565751:2589,error,error,2589,https://qutip.org,https://github.com/qutip/qutip/pull/969#issuecomment-489565751,1,['error'],['error']
Availability,"her package will ever be called QuTiP. If it's a hidden name, it doesn't matter how ""pretty"" it is.; 2. having the check in `__init__` might not be correct - it feels like it belongs in `__new__` to me. `__init__` modifies an object that's already been created in Python-space, whereas `__new__` allows you to replace the object creation entirely.; 3. we need to take care to do this in a way that still allows QuTiP to iterate and improve `Qobj.__init__` between major versions. If _we_ define a public interface like this rather than having external libraries provide their own implementations, it puts the burden of maintain compatability on us, and takes it off downstream packages, who are able to define version requirements. For example, calling `otherlib.obj.toqobj()` and having it fail with QuTiP next.0 makes it clear that `otherlib` isn't compatible with QuTiP next, whereas `Qobj(otherlib.obj)` failing would (rightly) be taken as QuTiP being at fault, which stymies our development a little because we're forced to be more conservative than we otherwise would be with our constructor. This is going to be a particular problem with handling `dims`, since we're talking about completely changing the structure for how that's managed internally to help us in other parts of our library.; 4. what will happen with all the other keyword arguments passed to the `Qobj` constructor? We have probably three choices:; - pass all keywords on (which is a big problem in conjunction with the point above);; - pass none of them on, call `__qutip_qobj__` within `Qobj.__new__`, and then pass through `Qobj.__init__` like normal, but now with our new `Qobj` instance as the argument. This would have a slightly nontrivial interaction with the `copy` keyword, I imagine, but not an unsolvable one.; - error if you pass something that defines `__qutip_qobj__` in addition to keywords. This isn't ideal because it gives `Qobj` special treatment - additional kwargs can override `Qobj` settings if they're",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507:2960,fault,fault,2960,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507,1,['fault'],['fault']
Availability,"hey guys.. yes, things are fine now. Below is simplified code that shows this problem:; ```; import numpy as np; import qutip as q; q.about(); # opts=q.Odeoptions() #""low"" tolerances; opts=q.Odeoptions(method='adams', nsteps=100000, atol=1e-11, rtol=1e-11); times=np.linspace(0,10,300); epsilon=2*np.pi * 1; H=[epsilon/2*q.sigmaz(), [q.sigmax(), 'sin(2*pi*t)']]; U_prop_batch=q.propagator(H, times, options=opts, unitary_mode='batch', parallel=False); U_prop_single=q.propagator(H, times, options=opts, unitary_mode='single', parallel=False); print((U_prop_batch[-1]-U_prop_single[-1]).full()); ```. and here is the ""bad"" output with the older version of qutip that I was running before (Note, the difference between the 'batch' and 'single' has terms of order 1e-6). . ```; QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.3.0.dev0+4277eae; Numpy Version: 1.14.2; Scipy Version: 1.0.0; Cython Version: 0.28.1; Matplotlib Version: 2.2.2; Python Version: 3.4.3; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/local/lib/python3.4/dist-packages/qutip-4.3.0.dev0+4277eae-py3.4-linux-x86_64.egg/qutip. #I would expect this to have largest terms of order 1e-11 say.; [[-4.24096116e-07+1.00022928e-06j -4.16215462e-09-4.54122270e-07j]; [ 4.16215462e-09-4.54122270e-07j -4.24096116e-07-1.00022928e-06j]]; ```; and here is the result of running with the latest version (note, now difference between the two propagators respects the required tolerances):. ```; QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.3.0.dev0+489fd41; Numpy Version: 1.14.2; Scipy Version: 1.0.0; Cython Version: 0.28.1; Matplotlib Version: 2.2.2; Python Version: 3.4.3; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Insta",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/829#issuecomment-376601387:172,toler,tolerances,172,https://qutip.org,https://github.com/qutip/qutip/issues/829#issuecomment-376601387,1,['toler'],['tolerances']
Availability,"hose notebooks now run much faster: between a factor 2 and 30 in speedup from last time I ran them, which was consistent with times obtained by @Ericgig and saved in the folder. . I am on Python 3.7.3, I recently updated OS from High Sierra to Mojave, plus some other updates in scipy and numpy, and reinstalled conda, so I am curious to see if these speedups are machine independent, which would be great. My specs; ```; Software	Version; QuTiP	4.4.0.dev0+e1639f73; Numpy	1.16.4; SciPy	1.2.1; matplotlib	3.1.0; Cython	0.29.8; Number of CPUs	2; BLAS Info	INTEL MKL; IPython	7.5.0; Python	3.7.3 (default, Mar 27 2019, 16:54:48) [Clang 4.0.1 (tags/RELEASE_401/final)]; OS	posix [darwin]; Mon Jun 10 21:16:02 2019 JST; ```; Some details:; In cell 6 of development-ssesolver-new-methods, the running time went from over 160 seconds to 6 seconds (x25 speedup). Total run time in cell 21 is now down to 14.22s from 79.46s, cell 24/25 of is now 1.4 seconds down from 14.22s in `smesolve`. `ssesolve` in cell 4 is down from 164.50s to 11.06s. Cell 6 is down to 11.48s from 250s. The next cell checking all solver methods in `ssesolve` is down from 80s to 24s. In the notebook with new smesolve methods, cell 11 with multiple time dependence in sc_ops now runs in 69s instead of 171s. . Also, the benchmarking of the different methods now reads; ```; {'solver': 'euler-maruyama'}; Total run time: 0.21s; Total run time: 0.25s; Total run time: 0.30s; Total run time: 0.38s; Total run time: 0.45s; Total run time: 0.55s; Total run time: 0.67s; Total run time: 0.81s; {'solver': 'platen'}; Total run time: 0.70s; Total run time: 0.90s; Total run time: 1.13s; Total run time: 1.15s; Total run time: 1.41s; Total run time: 1.66s; Total run time: 2.03s; Total run time: 2.47s; {'solver': 'pc-euler'}; Total run time: 0.38s; Total run time: 0.46s; Total run time: 0.58s; Total run time: 0.70s; Total run time: 0.84s; Total run time: 1.00s; Total run time: 1.26s; Total run time: 1.49s; {'solver': 'milstein'}; Total r",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/990#issuecomment-500396003:1402,down,down,1402,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003,1,['down'],['down']
Availability,"ib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278049 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: state with td interp H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-package",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:16005,ERROR,ERROR,16005,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['ERROR'],['ERROR']
Availability,"ib\site-packages\qutip\stochastic.py"", line 1358, in _single_trajectory; result = ssolver.cy_sesolve_single_trajectory(i)#, sso). File ""qutip\cy\stochastic.pyx"", line 540, in qutip.cy.stochastic.StochasticSolver.cy_sesolve_single_trajectory. File ""c:\program files\python37\lib\site-packages\qutip\qobj.py"", line 303, in __init__; if not np.any(dims):. File ""<__array_function__ internals>"", line 6, in any. File ""c:\program files\python37\lib\site-packages\numpy\core\fromnumeric.py"", line 2330, in any; return _wrapreduction(a, np.logical_or, 'any', axis, None, out, keepdims=keepdims). File ""c:\program files\python37\lib\site-packages\numpy\core\fromnumeric.py"", line 87, in _wrapreduction; return ufunc.reduce(obj, axis, dtype, out, **passkwargs). VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences ; (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. ; If you meant to do this, you must specify 'dtype=object' when creating the ndarray; ```. The second problem is more serious, and I think it was the same in the my original version. The expectation values returned in `res.expect` are not the same as those computed manually from `res.states`. The values in `res.expect` gradually (but quickly) diverge away from the correct manual values that agree with theory. It is not a small error. (Note that I'm using a single trajectory so no problem of averaging over trajectories.). I would expect complete equality between the two. I would suspect that it's something to do with normalization (?) Passing kwarg `normalize=True` doesn't change anything, nor does the solver. This is how I compute the expectations:; ```; rho_list = [[vector_to_operator(u) for u in res.states[k]] for k in range(ntraj)]. for k in range(ntraj):; for i, rho in enumerate(rho_list[k]):; rho_list[k][i] = rho / rho.tr(); ```. Thanks again. I hope this is the correct venue for these kind of posts, but it does qualify as ""strange behavior"".",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1379#issuecomment-727043128:2086,error,error,2086,https://qutip.org,https://github.com/qutip/qutip/issues/1379#issuecomment-727043128,1,['error'],['error']
Availability,"igation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; > Expected outcomes; >; > - More devices defined in the qutip.qip.device module. At the moment,; > we have two models: spin chain and cavity QED. We would like to include; > some other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in qutip.qip.device and; > qutip.qip.compiler; > - Refactoring the circuit compiler to allow simple pulse scheduling,; > e.g. Restriction one pulses that can be turned on at the same time.; > - Features to perform error mitigation techniques in QuTiP, such as; > zero-error extrapolation.; > - APIs to allow import quantum circuits from other software packages; > or commonly used language e.g. through quantum assembly language (qasm); >; > ------------------------------; >; > Also, the last outcomes have some overlap with the last project. Although; > I also find this circuit importation very important, I guess two projects; > should not have overlap if they are both selected.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1184?email_source=notifications&email_token=ADPF67A5MSYZVSDKCZD73LTREGE2LA5CNFSM4KZUPCQ2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IPQGYLA>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADPF67EWECDUIOQMTKK2N2DREGE2LANCNFSM4KZUPCQQ>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:2739,error,error,2739,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313,2,['error'],['error']
Availability,"iginally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7fa2e02ed64f are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7fa2ddc04270). Current thread 0x00000001123d55c0 (most recent call first):; <no Python frame>; Abort trap: 6; ```. ## Relation to `to_kraus`. The above `Malloc.py` file uses `scipy.linalg.eig` via use of an `eseries` version of `correlation`. The current test of superoperator representations uses `choi_to_kraus` which also calls `scipy.linalg.eig`. Here is a file `kraus.py` that can reproduce these segfaults semi-reliably (may need to run it a few times to get it to trigger):. ```python; import qutip. s = qutip.rand_super(); c = qutip.to_choi(s); k = qutip.to_kraus(c); ```. For example, here's a similar command on this file:. ```; Debug memory block at address p=0x7f98cc467db0: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7f98cc476def are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7f98c9d018e0). Current thread 0x0000000109fe85c0 (most recent call first):; <no Python frame>; Abort trap: 6; ```. So these both use `scipy.lina",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:3902,reliab,reliably,3902,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,1,['reliab'],['reliably']
Availability,"iki page.; > >; > > I add some details based on the original description:; > > ------------------------------; > > 1. Error mitigation in QuTiP; > >; > > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > > quantum circuit simulator (which was a GSoC project) providing enhanced; > > features for a pulse-level description of quantum circuits and noise; > > models. A new class Processor and several subclasses are added to; > > represent different platforms for quantum computing. They can transfer a; > > quantum circuit into the corresponding control sequence and simulate the; > > dynamics with QuTiP solvers. Different noise models can be added to; > > qutip.qip.noise to simulate noise in a quantum device.; > >; > > This module is still young and many features can be improved, including; > > new device models, new noise models and integration with the existing; > > general framework for quantum circuits (qutip.qip.circuit). There are; > > also possible applications such as error mitigation techniques [1-3].; > >; > > The tutorial notebooks can be found at; > > http://qutip.org/tutorials.html#nisq. A recent presentation on the; > FOSDEM; > > conference may help you get an overview (; > > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > > Github Project page for a collection of related issues and ongoing Pull; > > Requests.; > > Expected outcomes; > >; > > - More devices defined in the qutip.qip.device module. At the moment,; > > we have two models: spin chain and cavity QED. We would like to include; > > some other commonly used planform such as Superconducting system, Ion; > trap; > > system or silicon system. Each model will need a new set of control; > > hamiltonian and a compiler that find the control pulse of a quantum gate.; > > This part is gonna involve some physics and study of commonly used; > hardware; > > platforms. The related code can be found in qutip.qip.device and; > > qutip.qip.compiler; > > - Refactoring t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:5287,error,error,5287,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553,1,['error'],['error']
Availability,"ils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278046 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: rhs_reuse : pyx filenames match for rhs_reus= True; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\sit",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:2527,ERROR,ERROR,2527,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['ERROR'],['ERROR']
Availability,"in that extreme example you gave I guess you are just seeing numerical error from the ODE solver which is sensitive to some small difference in how the Liouvillian is being constructed, if you decrease the tolerances in options the difference diminishes, I guess with something like,. options.atol=1e-15; options.rtol=1e-15. also, just fyi, when you send an array for the time-dependence mesolve() uses some cubic-spline fitting to ''fill in the gaps'' when needed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1472#issuecomment-808859776:71,error,error,71,https://qutip.org,https://github.com/qutip/qutip/issues/1472#issuecomment-808859776,2,"['error', 'toler']","['error', 'tolerances']"
Availability,"ing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering), but it looks like it's not really actively maintained any more and the logic is pretty straightforwards, so perhaps not a terrible idea just to do it ourselves. Maybe I'm not javascript enough to enjoy a good micro-dependency?. It would also be quite nice if we could define the whole logical structure of the `qutip` package, to help keep everything in order as the package grows larger. By that I generally just mean the internal structure, though cutting down the amount of global names exported could also be done in a sort of organisation like this: we could get a little more aggressive at not exporting things like `enr_*` or `three_level_*` to the global namespace, but instead put them in submodules. While I think this isn't what you were asking, it's also quite easy to just run specific parts of the testing suite if you're doing it from the command line. You can do `pytest file.py` to run only those in a specific file, or `pytest -m ""mark logic""` (e.g. `pytest -m ""not slow""`) to hit specifically marked tests. Perhaps most powerfully, and one I use a lot when writing these, you can do `pytest -k ""substring logic""` to run every test (potentially in the specified file(s)) that contains the elements specified in `""substring logic""`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:2461,down,down,2461,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386,1,['down'],['down']
Availability,"inux-x86_64-3.5/qutip; > running build_ext; > customize UnixCCompiler; > customize UnixCCompiler using build_ext; > building 'qutip.cy.spmatfuncs' extension; > compiling C sources; > C compiler: gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall; > -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2; > -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer; > -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions; > -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error; > -Wp,-D_REENTRANT -fPIC; >; > compile options:; > '-I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/include/python3.5m -c'; > extra options: '-w -ffast-math -O3 -march=native -funroll-loops'; > gcc: qutip/cy/src/zspmv.c; > qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or; > directory; > #include <complex.h>; > ^; > compilation terminated.; > qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or; > directory; > #include <complex.h>; > ^; > compilation terminated.; > error: Command ""gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall; > -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2; > -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer; > -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions; > -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error; > -Wp,-D_REENTRANT -fPIC; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/include/python3.5m -c; > qutip/cy/src/zspmv.c -o; > build/temp.linux-x86_64-3.5/qutip/cy/src/zspmv.o -w -ffast-math",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639#issuecomment-275734243:5213,error,error,5213,https://qutip.org,https://github.com/qutip/qutip/issues/639#issuecomment-275734243,1,['error'],['error']
Availability,ip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_wigner.py - AttributeError: module 'qutip' has no attribu...; !!!!!!!!!!!!!!!!!!! Interrupted: 65 errors during collection !!!!!!!!!!!!!!!!!!!; ===================,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:55158,ERROR,ERROR,55158,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,ip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51468,ERROR,ERROR,51468,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"is a rounding match, because it gives a total `True` or `False` based on a floating point tolerance, not on exact equality. I'm not aware of any hash function which can handle this. Second, the `data` attribute of a `Qobj` is mutable in-place, and so hashing based on the data in the object is not valid. This is the same reason that `list` and `np.ndarray` are also not hashable types. If your cache is just for memoisation over a small number of `Qobj` where you know that floating-point tolerance will never be an issue, you may be able to get away with rolling your own cache decorator which uses linear lookup rather than constant-time. I mean something like; ```python; In [1]: import functools; ...: import qutip; ...:; ...: def linear_cache(f):; ...: cache = []; ...: @functools.wraps(f); ...: def out(*args):; ...: for cached_args, cached_value in cache:; ...: if args == cached_args:; ...: print(""Getting from cache""); ...: return cached_value; ...: print(""Computing new value""); ...: value = f(*args); ...: cache.append((args, value)); ...: return value; ...: return out; ...:; ...: @linear_cache; ...: def negate(x):; ...: return -x; ...:; ...: sx = qutip.sigmax(); ...: sy = qutip.sigmay(); ...: negate(sx); ...: negate(sx); ...: negate(sy); ...: negate(sx); ...: negate(sy); Computing new value; Getting from cache; Computing new value; Getting from cache; Getting from cache; ```; This will lead to degraded performance if you need to do it for a large number of possible inputs, but if you have a relatively small number of inputs and your cached function is computationally expensive, this may be a way to achieve what you want. Also note that this is not infallible: the floating-point tolerance used in `__eq__` means that `Qobj` does not satisfy transitive equality (i.e. `a == b and b == c` does not imply `a == c`). The primary consequence of this is that the cache will simply be a little under-zealous, and sometimes it will calculate the value twice for three similar `Qobj`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1321#issuecomment-658078277:1866,degraded,degraded,1866,https://qutip.org,https://github.com/qutip/qutip/issues/1321#issuecomment-658078277,2,"['degraded', 'toler']","['degraded', 'tolerance']"
Availability,"is one), we'd accept bad dimensions. I might try and have a look tonight (UK time), if I have time - I've wanted to break up the large `propagator` monolith into smaller components for quite a while. ---. About numerical precision: if you want to try increasing the precision of the integrators, try passing `options=qutip.Options(nsteps=1_000_000, atol=1e-12, rtol=1e-10)` to `propagator`. `atol` and `rtol` are absolute and relative tolerances respectively, and `nsteps` is the number of subdivisions the integrator is _allowed_ to take (if it reaches its tolerance goals, it won't take all of them). You'll find that `atol` and `rtol` will have only a loose relation to the tolerance of your fidelity value, because there's a _lot_ of floating-point operations between those points in which the errors compound, and there's a hard limit on the tolerances the integrator can achieve, so you might not be able to get a perfect answer. The fidelity calculation involves finding the square root of a density operator, so that's another large possible source of error. About times: if you only care about the state at the last time, setting `tlist = np.linspace(0, x, 201)` is quite inefficient. Instead, set `tlist = [0, x]`, and then pass `options=qutip.Options(nsteps=<very very big integer>)`. It's more efficient because it doesn't need to achieve tolerance goals and construct/store `Qobj` instances at every intermediate timestep. Temporary workaround: this is _very_ temporary, and generally a bad idea in QuTiP, but you can ""flatten"" all your operators into a single space for now, while we implement a fix. To do that:; ```python; # initial setup; H = qutip.tensor(...); c_ops = [qutip.tensor(...)]. original_dimensions = H.dims.copy(); new_dimensions = list(H.shape). H.dims = new_dimensions; for c_op in c_ops:; c_op.dims = new_dimensions. outputs = qutip.propagator(H, times, c_ops=c_ops); for op in outputs:; # the ops are superoperators, so have expanded dimensions; op.dims = [original_d",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1585#issuecomment-865903199:1345,error,error,1345,https://qutip.org,https://github.com/qutip/qutip/issues/1585#issuecomment-865903199,1,['error'],['error']
Availability,"istutils/command/build_ext.py in build_extensions(self); 448 else:; --> 449 self._build_extensions_serial(); 450 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in _build_extensions_serial(self); 473 with self._filter_build_errors(ext):; --> 474 self.build_extension(ext); 475 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in build_extension(self, ext); 533 extra_postargs=extra_args,; --> 534 depends=ext.depends); 535 . ~/opt/anaconda3/lib/python3.7/distutils/ccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 573 continue; --> 574 self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); 575 . ~/opt/anaconda3/lib/python3.7/distutils/unixccompiler.py in _compile(self, obj, src, ext, cc_args, extra_postargs, pp_opts); 119 except DistutilsExecError as msg:; --> 120 raise CompileError(msg); 121 . ImportError: Building module cqobjevo_compiled_coeff_1212362029172 failed: [""distutils.errors.CompileError: command 'gcc' terminated by signal 6\n""]. The above exception was the direct cause of the following exception:. Exception Traceback (most recent call last); <ipython-input-4-773196c7ecc9> in <module>; 6 U_list = []; 7 for (i,t) in enumerate(t_list):; ----> 8 U = propagator(H,t, [], args); 9 U_list.append(U); 10 print(i). ~/opt/anaconda3/lib/python3.7/site-packages/qutip/propagator.py in propagator(H, t, c_op_list, args, options, unitary_mode, parallel, progress_bar, _safe_mode, **kwargs); 184 output = sesolve(H2, psi0, tlist, [],; 185 args=args, options=options,; --> 186 _safe_mode=False); 187 for k, t in enumerate(tlist):; 188 u[k] = sp_reshape(output.states[k].data, (N, N)). ~/opt/anaconda3/lib/python3.7/site-packages/qutip/sesolve.py in sesolve(H, psi0, tlist, e_ops, args, options, progress_bar, _safe_mode); 155 ss = H; 156 elif isinstance(H, (list, Qobj, QobjEvo)):; --> 157 ss = _sesolve_QobjEvo(H, tlist, args, options); 158 elif callable(H):; 159 ss = _sesolve_fun",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1326#issuecomment-664714290:8438,error,errors,8438,https://qutip.org,https://github.com/qutip/qutip/issues/1326#issuecomment-664714290,1,['error'],['errors']
Availability,"ite out a proper design document and get approval of it before we get deep into the implementation. > The latter would make it harder to support multiple versions of qutip in the implementers, but I would not worry too much about it. You can throw an error saying that this other package is not supported and you should either nag it's developers or downgrade qutip.; >; > I'm not particularly worried about the blame: even if the error is thrown from qutip, if the message is clear enough it will be clear that the fault is in the downstream implementors of the API. I'm concerned from a user's perspective. QuTiP has a wide user base, and we're beyond the stage where ""iterate fast and break things"" is ok for us (though of course it's fine and even good for pre-stable libraries, to avoid getting weighed down). We've got to be concerned with backwards and forwards compatibility; what if a user wants to install and use QuTiP and a different library in the same environment _without_ using them together, but can't even have them coexist because of version incompatibilities in optional conversion features? That's frustrating for users, even though it's not really anybody's fault. Bugging developers is fine when people want to use packages that are still maintained, but I'm sure we've all come up against times in research when you get to trying out a package to do one specific thing that's been abandoned for a while. Again, this certainly isn't an unsolvable problem: having versioning in the interface API is one solution to some of these problems. ---. For greater discussion, here's an alternate approach: instead of objects defining `__qutip_qobj__`, instead we expose an entry-point `qutip.Qobj.register_conversion_function(converter, type, priority, version=None)`, and downstream libraries register functions rather than defining methods on their classes. The logic inside the `Qobj` constructor remains approximately the same as what you suggest. I think TensorFlow does something ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691:4635,fault,fault,4635,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691,1,['fault'],['fault']
Availability,"itten it, this loop is thread-safe already. As it stands in the 4.x series, `mesolve` is re-entrant (I'm fairly sure), but note that it does generally mutate its arguments, especially if you pass a `QobjEvo` Liouvillian as the first argument. As long as you make sure you give each thread a distinct copy of the input Liouvillian, `mesolve` itself doesn't access global state as far as I recall. Just to be clear: there's two interconnected issues here: One is just being ""reentrant"" in the sense that I can safely have multiple `mesolve`'s run in parallel. This doesn't seem to be a problem for `mesolve` as a whole (propagating over the entire time grid). The other issue, at a lower level is whether I can keep the internal state of the integrator (`scipy.integrate.ode` or whatever else `mesolve` might be using) when propagating a single time step (and whether I can have multiple integrators to run in parallel that each safely keep track of their own state). That comes down to the integrator itself being ""reentrant"", of course. Certainly, calling `mesolve` in a loop (`In [19]`) doesn't keep the internal state of the integrator, hence the overhead between `In [21]` compared to `In [18]`. I wouldn't expect it to, of course, but the question is whether a refactoring of `mesolves` internals into an object that keeps state in a thread-safe way and allows doing time steps would alleviate this overhead (like the `mesolve_prepare_ode(H, state, c_ops) -> OdeState` that you propose in https://github.com/qutip/qutip/issues/1571#issuecomment-859917462). On the other hand, looping over the full `mesolve` as in `In [19]` obviously has no problems with parallelization. I wasn't sure if that's what you meant by ""`mesolve` is re-entrant"" or whether recent changes in QuTiP now use a re-entrant internal integrator, i.e. not `scipy.integrate.ode`. At the time I implemented the [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/k",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:6209,down,down,6209,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['down'],['down']
Availability,"ken. I'm not sure I agree that implementing `__array_wrap__` is a good idea - `Qobj` does not support ufunc semantics, and implementing that implies that we're a similar class to `ndarray`, which I don't think we are. I don't think `np.sin(qobj)` should return `ndarray` _or_ `Qobj`; I think it should be a TypeError. To me, we should be rather conservative about adding features like that when there's little tangible benefit - when there's a slightly more explicit alternative syntax, it's better to fail-safe than add potential ""gotchas"". The fact that elementwise operations are not part of the algebra of `Qobj` should be enough of a reason to cause you to have to explicitly ask for it, otherwise it tacitly _becomes_ part of the algebra. For your point three, if that's the case, I'd argue you're doing something wrong: are you constructing the `Qobj` before you've finalised your data? Shouldn't it be; ```python; incomplete_data = np.array([[theta, 0, 0], ...]); return Qobj(np.sin(incomplete_data)); ```; not; ```python; return np.sin(Qobj(incomplete_data)); ```. As a compromise, we could ensure that all our data-layer types (`CSR`, `Dense`, whatever else) will support ufuncs with ndarray syntax; then you could do `Qobj(np.sin(qobj.data))` to be explicitly elementwise if you really wanted, rather than absolutely requiring you to produce a full dense matrix. I'm still not sure I see the use case there, though. I'm in favour of removing `np.array([qobj1, qobj2, ...], dtype=object)` usage inside QuTiP no matter which way we come down on this, though. As far as I recall from seeing it, there no reason to use `ndarray` over a regular Python list in any of our internal use, and it's rarely (if ever) actually returned out of a QuTiP function. Given it might cause subtle differences between different numpy versions, probably best to avoid it. If GSoC applications are imminent, we could open an issue and tag it with ""good first issue"" to give prospective applicants a potential PR?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433#issuecomment-774058408:1651,down,down,1651,https://qutip.org,https://github.com/qutip/qutip/issues/1433#issuecomment-774058408,1,['down'],['down']
Availability,"ld error:; ```shell; $ python3.10 -m build --skip-dependency-check --no-isolation --wheel --config-setting=""--global-option=--with-openmp""; * Building wheel...; Traceback (most recent call last):; File ""/usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 363, in <module>; main(); File ""/usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 345, in main; json_out['return_val'] = hook(**hook_input['kwargs']); File ""/usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 261, in build_wheel; return _build_backend().build_wheel(wheel_directory, config_settings,; File ""/usr/lib/python3/dist-packages/setuptools/build_meta.py"", line 230, in build_wheel; return self._build_with_temp_dir(['bdist_wheel'], '.whl',; File ""/usr/lib/python3/dist-packages/setuptools/build_meta.py"", line 211, in _build_with_temp_dir; sys.argv = (sys.argv[:1] + setup_command +; TypeError: can only concatenate list (not ""str"") to list. ERROR Backend subproccess exited when trying to invoke build_wheel; ```. The other method; ```; --config-setting=""--build-option=--with-openmp""; ```; appears to work in the sense that it builds successfully. But after installing the package it reports that openmp is still missing; ```; $ python3 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.0; Numpy Version: 1.21.5; Scipy Version: 1.8.1; Cython Version: 0.29.30; Matplotlib Version: 3.5.2; Python Version: 3.10.6; Number of CPUs:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1875#issuecomment-1219841152:1079,ERROR,ERROR,1079,https://qutip.org,https://github.com/qutip/qutip/issues/1875#issuecomment-1219841152,1,['ERROR'],['ERROR']
Availability,"le ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/main.py"", line 304 in wrap_session; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/main.py"", line 316 in pytest_cmdline_main; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/callers.py"", line 187 in _multicall; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/manager.py"", line 84 in <lambda>; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/manager.py"", line 93 in _hookexec; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/hooks.py"", line 286 in __call__; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 162 in main; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 185 in console_main; File ""/Users/jake/.anaconda3/envs/qutip-dev/bin/pytest"", line 11 in <module>; Segmentation fault: 11; ```. This was done with commit 624405e7, SciPy 1.6.2 and Numpy 1.19.5. My BLAS version has chopped and changed an awful lot, but I believe that run was with MKL implementations. The ""random"" stack trace from pytest looks to me like the error came about during garbage collection, and I really don't imagine pytest is to blame. We have in the past had issues with some bad calls in SciPy linalg functions, so it's _possible_ that they are the cause again, but I doubt it; we'd expect the stack traces to reliably show scipy to be the problem in that case. I wasn't able to reproduce this segfault on Windows, but that doesn't mean a huge amount, because I also can't reliably reproduce it on Mac. I suspect that the cause is some dodgy handling of pointers in the `struct CSR_Matrix` type in `qutip/cy/sparse_routines.pxi`, but this is just a suspicion. As far as I remember, I have _never_ seen this segfault when using the `dev.major` branch, which completely ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:5984,fault,fault,5984,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502,1,['fault'],['fault']
Availability,"le for all known types automatically; when it's asked to do say `kron` on two types it doesn't have a specialisation for, it'll cast the inputs through a path of least weight into a specialisation it _does_ know, and then use that. The desired casting rules and preferred output types can be altered dynamically at run-time as well. While I put a lot of effort into making this as fast as possible (and naturally a constant-time operation with respect to the number of known types and specialisations), of course the penalty we pay is a small run-time cost of type look-ups and dispatch (<1µs, but that's dwarfed by the cost of the operations themselves). We will have a hook for creating ""data-layer types"" out of arbitrary inputs, but we weren't heavily focussing on this at all; it seems rather too special a case to have _another_ magic interface for, and we can basically just reuse `__array__` for it - ""data-layer types"" are essentially just ""matrix-like"" objects. It also isn't appropriate for the situation you're describing here, because your own objects have additional ""quantum-specific"" attributes associated with them, similar to the extra stuff that `Qobj` contains. If you want to see more of this, it's in the `dev.major` branch. ---. Defining an interoperable new public interface I think is quite a big task, since it's inherently got to be future-proof. I'm definitely +1 on us having one, and having some discussion about it before a 5.0 release. I'm most concerned with how we can do it in a manner that's useful without stymieing our own ability to iterate and improve. It's harder for downstream packages to support multiple versions of a magic interface than it is for them to changing call QuTiP library functions; with deprecation warnings we can have multiple valid methods for doing the same thing alive in the library at once, but we can't detect what version of an interface a downstream package requires (not keen on the idea of a `__qutip_qobj_api_version__` flag!!).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507:7704,down,downstream,7704,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507,3,"['alive', 'down']","['alive', 'downstream']"
Availability,"locally on my machine, also with pytest, it gives a segmentation fault at brmesolve",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131#issuecomment-563919205:65,fault,fault,65,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-563919205,1,['fault'],['fault']
Availability,"lose-minded to alternate views here, but given the problems Numpy had (whose team I have no doubt are much smarter than I am), I'm really not enthusiastic about any implicit conversions. I really do appreciate the interest, and I _am_ keen to let us have better compatibility with the rest of the community, but there are a lot of design concerns that we're going to want to work on our side first - I just want to caution you in case you're trying to work towards a PR, because I'm not close to being happy to accept one, yet. If we're going to do this (and we haven't decided if we will yet), we're going to need to get a lot of wide-ranging input from many different libraries, and we'll want to write out a proper design document and get approval of it before we get deep into the implementation. > The latter would make it harder to support multiple versions of qutip in the implementers, but I would not worry too much about it. You can throw an error saying that this other package is not supported and you should either nag it's developers or downgrade qutip.; >; > I'm not particularly worried about the blame: even if the error is thrown from qutip, if the message is clear enough it will be clear that the fault is in the downstream implementors of the API. I'm concerned from a user's perspective. QuTiP has a wide user base, and we're beyond the stage where ""iterate fast and break things"" is ok for us (though of course it's fine and even good for pre-stable libraries, to avoid getting weighed down). We've got to be concerned with backwards and forwards compatibility; what if a user wants to install and use QuTiP and a different library in the same environment _without_ using them together, but can't even have them coexist because of version incompatibilities in optional conversion features? That's frustrating for users, even though it's not really anybody's fault. Bugging developers is fine when people want to use packages that are still maintained, but I'm sure we've all com",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691:3706,error,error,3706,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691,2,"['down', 'error']","['downgrade', 'error']"
Availability,"lready. We'd have to modify our procedures a little bit (we're mostly concerned with constructing the underlying matrices at the moment), but it's a smaller change in behaviour. Disadvantages that I can think of:; - It's got linear scaling with the number of conversions registered, so it's in theory possible to register ""too many"" and cause a slow down. In reality, this will be a very small effect (`Qobj` construction time will be dominated by copying data into new formats), and I think the benefits of a priority queue of allowed converters outweighs it in convenience for users.; - It involves some global state of the `qutip` library, which _may_ cause problems for multiprocessing if somebody tries to register a `lambda` converter (can't pass through `pickle`, though I'm not 100% on whether module-level stuff needs to), and of course there's the query of what happens when converters are registered in separate processes. We already have this ""problem"" in 5.0 though, because that's how the entire underlying dispatch mechanism is handled; we can just require that converters must be pickle-able.; - If a downstream package wants to lazily `import qutip` (we're a pretty heavy import right now), it's harder in this method; you'd basically have to ask a user to call `otherlibrary.register_qutip()`. For one, I'm going to put some effort into making `import qutip` take much less time for 5.0 (the main problem right now is we essentially eagerly import all of scipy and IPython if it's around), so that'll make it a bit easier. For two, a single initialisation statement isn't _necessarily_ a terrible thing; users can decide for themselves if they want to install the implicit integrations, but this is definitely an inconvenience relative to the magic method. ---. Apologies that I'm not responding super quickly to everything - I'm not the only main QuTiP dev (and I can only work on QuTiP occasionally anyway), so I'm giving others time to read and think about the proposals as well.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691:7902,down,downstream,7902,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691,1,['down'],['downstream']
Availability,"ly useful and will simplify the code inside the propagator a bit. I removed `.evolve_dm`. > **For `.sys_dims`**:; > ; > The meaning of what `.sys_dims` returns is already unclear in this PR. The docstring says its the dimension of the system. Practically I assume that to mean ""the dimension of the initial state or dm passed to .run()"". However, in the PR its used as the size of the propagator. These are the same if there is no environment, but will be different otherwise.; > ; > I suggest we keep `.sys_dims` but document that it is the dimensions of the system excluding any environment. Changed in HEOMSolver. Since environment only means something for HEOM, so it took some time to understand what it referred to. Adding the change elsewhere would be confusing. ; > **Specifying which solvers support propagators**:; > ; > Currently we have a list of explicit checks at the top of the propagator constructor, but we could instead have a ""propagator_class"" attribute on solvers the same way we have a ""result_class"" and then that could be set to some suitable default for ordinary solvers and None or ""PropagatorNotSupported"" for solvers that don't support them. There is only one class for propagator and I don't see us needing any other, so there is no use for a `propagator_class` . We could have a `support_propagator` flag, but I prefer it this way as we can set a special error message for `HEOMSolver`. ; `HEOMSolver` is the only exceptions where we could support it but choose not to take the time to implement it. ; All deterministic solver we have can be used for propagator, trajectories solver don't have a properly defined propagator for single trajectory and I don't see any use to create a propagator for the averaged states. It would take a lot of trajectories to obtain what is effectively mesolve's propagator. . We could add the flag to the integrator instead, some krylov integrator cannot evolve 2D states, but it's the only one we have plan for and it's not merged yet...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1999#issuecomment-1335766120:1792,error,error,1792,https://qutip.org,https://github.com/qutip/qutip/pull/1999#issuecomment-1335766120,1,['error'],['error']
Availability,"m_ a big fan of interfaces. Python doesn't give us the tools to do it properly, but we can emulate it, like you suggest. I have a few more considerations to add to a discussion:. 1. we can't have _proper_ namespacing, but let's at least make the magic name `__qutip_qobj__` so we realistically prevent any chance of a clash - by nature of a centralised package manager, we can be sure that no other package will ever be called QuTiP. If it's a hidden name, it doesn't matter how ""pretty"" it is.; 2. having the check in `__init__` might not be correct - it feels like it belongs in `__new__` to me. `__init__` modifies an object that's already been created in Python-space, whereas `__new__` allows you to replace the object creation entirely.; 3. we need to take care to do this in a way that still allows QuTiP to iterate and improve `Qobj.__init__` between major versions. If _we_ define a public interface like this rather than having external libraries provide their own implementations, it puts the burden of maintain compatability on us, and takes it off downstream packages, who are able to define version requirements. For example, calling `otherlib.obj.toqobj()` and having it fail with QuTiP next.0 makes it clear that `otherlib` isn't compatible with QuTiP next, whereas `Qobj(otherlib.obj)` failing would (rightly) be taken as QuTiP being at fault, which stymies our development a little because we're forced to be more conservative than we otherwise would be with our constructor. This is going to be a particular problem with handling `dims`, since we're talking about completely changing the structure for how that's managed internally to help us in other parts of our library.; 4. what will happen with all the other keyword arguments passed to the `Qobj` constructor? We have probably three choices:; - pass all keywords on (which is a big problem in conjunction with the point above);; - pass none of them on, call `__qutip_qobj__` within `Qobj.__new__`, and then pass through `Qobj",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507:2667,down,downstream,2667,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507,1,['down'],['downstream']
Availability,"ming this fidelity feels wrong with the <code>1-...</code>. Also make Qobj and array conversions more efficiently with Naming this fidelity feels wrong with the <code>1-....</code>; You don't need to work go back and forth between <code>Qobj</code> and array. Also make things more efficiently with <code>1 - np.abs(psi_exact.overlap(psi_k))**2</code>. --> **Corrected.**; * [x] More efficiently <code>psi0=qutip.rand_ket(dim)</code>. --> **Corrected.**; * [x] Why compute 3 expectation values if only one is tested?; Also please use the normal <code>assert</code> instead of numpy's <code>assert_</code>. We are slowly removing them since we migrated from unitest to pytest. --> **Now all of them are checked and using <code>asset</code>**. #### <code>krylovsolve.py</code>. * [x] <code>isinstance</code> should be tested first since if it isn't, <code>psi0.isket</code> will raise an error before reaching it. It should raise a <code>TypeError</code>.; * [x] Please raise an error instead of using <code>assert</code>, since it can be suppressed.; * [x] Testing for dims instead of shape would be better. --> **Done.**; * [x] Empty progress bars can be ignored.; * [x] Improve the print at <code>particular_tlist</code> using <code>warnings.warn</code>. Properly describe the warning.; * [x] Swap illinois algorithm with a root finder from scipy. --> **Now using <code>scipy.optimize.root_finder</code>**.; * [x] <code>n_iterations</code> become <code>delta_t</code> when <code>optimizer</code> is called. It does not seems to be an integer so isn't <code>delta_t</code> a better name here? --> **Renamed to <code>delta_t</code>.**; * [x] <code>bound_function</code> seems very generic. Same with <code>optimizer</code>. --> **Renamed to <code>_lanczos_error_equation_to_optimize_delta_t</code> and <code>_optimize_lanczos_timestep_size</code>.**; * [x] numpy's array have a <code>dot</code> method that act the same a sparse array's one. This is not needed.; * [x] The <code>dims</code> of the outp",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1739#issuecomment-1041914233:1705,error,error,1705,https://qutip.org,https://github.com/qutip/qutip/pull/1739#issuecomment-1041914233,1,['error'],['error']
Availability,"mmand\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278051 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: compare state and unitary operator evo - list str td; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\l",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:25045,ERROR,ERROR,25045,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['ERROR'],['ERROR']
Availability,"modules, also because in the other cases the title are self-explanatory. ; Regarding this comment:; ```; Function to build cython code from str, compile and import it.; Used by cQobjEvo.; cy/codegen.py does the same thing for specific solver; ```; could then this file by moved to `qutip/cy/`?. * In [development-qobjevo-timing.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo-timing.ipynb), block 24 online has a printed error `TypeError: __call__() got an unexpected keyword argument 'args'`, yet on my machine runs fine, it can be replaced. I opened a PR, also running the last blocks and qutip.about(), https://github.com/qutip/qutip-notebooks/pull/72. . * In [development-qobjevo-timing.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo-timing.ipynb), `Time for cte` could be more explanatory. Similarly elsewhere. * I wonder whether instead `QobjEvo`, `Qobjt` could be even more intuitive for the user. * I would really encourage you to write one notebook (or more), about the new functionalities of the stochastic solvers, as well as the old methods. This could be the to-go resource, beyond documentation, to understand how these stochastic solvers are now expanded and coherently defined. It does not need to be a lot of work, it can copy a lot of stuff from the development notebooks. It would be fundamental to have the solvers' master equations written down, explaining for each solver what each term is, e.g., the jump operator. Also, in `development-smesolve-tests`, the equations are already there for example. Block 23 is beautiful, and it could be reproduced in the tutorial. . * Similarly, a user guide entry would really enhance the adoption of these solvers. At a later stage, some more refined example applications could be provided. * Review is still ongoing, I will provide comments on the .py files and other solvers files. Help from other developers is welcome as these are massive changes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/969#issuecomment-489565751:3574,down,down,3574,https://qutip.org,https://github.com/qutip/qutip/pull/969#issuecomment-489565751,1,['down'],['down']
Availability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting tests/test_partial_transpose.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_piqs.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_processor.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:24133,ERROR,ERROR,24133,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_qubitcircuit.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_qubits.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_rand.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:32327,ERROR,ERROR,32327,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_fastsparse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_fileio.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_floquet.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:11467,ERROR,ERROR,11467,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_propagator.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_ptrace.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_pulse.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:26367,ERROR,ERROR,26367,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_td_formats.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_tensor.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_three_level.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:45737,ERROR,ERROR,45737,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_spinchain.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_spmath.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_states.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:39032,ERROR,ERROR,39032,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_utilities.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_wigner.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ---------- coverage: platform linux, python 3.6.10-final-0 -----------; Name Stmts Miss Cover; -----------------------------------------------------------------------------------------------------------------------------------------------------",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:47972,ERROR,ERROR,47972,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_entropy.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_expect.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_fastsparse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:9977,ERROR,ERROR,9977,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_floquet.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_gates.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_graph.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:12958,ERROR,ERROR,12958,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_metrics.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_mkl.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_noise.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:18919,ERROR,ERROR,18919,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_ptrace.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_pulse.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_qft.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:27113,ERROR,ERROR,27113,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_qobjevo.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_qpt.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting tests/test_qubit_evolution.py ________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:30094,ERROR,ERROR,30094,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_qubits.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_rand.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_random.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:33073,ERROR,ERROR,33073,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sp_eigs.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sparse.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_spinchain.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:37542,ERROR,ERROR,37542,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_spmath.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_states.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_steadystate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:39777,ERROR,ERROR,39777,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_gates.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_graph.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_heom_solver.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:13703,ERROR,ERROR,13703,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_noise.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_openmp.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_operators.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:20407,ERROR,ERROR,20407,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_pulse.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_qft.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_qobj.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:27859,ERROR,ERROR,27859,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_rand.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_random.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_rhs_reuse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:33817,ERROR,ERROR,33817,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_mkl.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_noise.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_openmp.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:19663,ERROR,ERROR,19663,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_qft.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_qobj.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_qobjevo.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:28603,ERROR,ERROR,28603,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,multiprocessing is used in `__init__` to determine how many cpus are available. I guess you are right in that it is unlikely that the number of cpus would change between install and use.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/580#issuecomment-269724696:69,avail,available,69,https://qutip.org,https://github.com/qutip/qutip/issues/580#issuecomment-269724696,1,['avail'],['available']
Availability,"n 1.85 seconds ===========================; (base) cln-232-18:qutip nathanshammah$; ```; this on the 4.4.0 release version. ; On the dev version, ; ```; (qdev) cln-232-18:qutip nathanshammah$ pytest; ============================= test session starts ==============================; platform darwin -- Python 3.7.3, pytest-5.0.1, py-1.8.0, pluggy-0.12.0; rootdir: /Users/nathanshammah/github/qutip; collected 561 items. qutip/tests/test_basis_transformation.py ........ [ 1%]; qutip/tests/test_brmesolve.py Fatal Python error: Fatal Python error: Segmentation fault: 11; (qdev) cln-232-18:qutip nathanshammah$ pytest; ============================= test session starts ==============================; platform darwin -- Python 3.7.3, pytest-5.0.1, py-1.8.0, pluggy-0.12.0; rootdir: /Users/nathanshammah/github/qutip; collected 561 items. qutip/tests/test_basis_transformation.py ........ [ 1%]; qutip/tests/test_brmesolve.py Fatal Python error: Segmentation fault: 11; ```; and with nosetests; ```; (qdev) cln-232-18:qutip nathanshammah$ nosetests; /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjCte size changed, may indicate binary incompatibility. Expected 344 from C header, got 352 from PyObject; return f(*args, **kwds); /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjEvoTd size changed, may indicate binary incompatibility. Expected 560 from C header, got 568 from PyObject; return f(*args, **kwds); /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjEvoTdMatched size changed, may indicate binary incompatibility. Expected 1344 from C header, got 1352 from PyObject; return f(*args, **kwds); /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo_factor.CoeffFunc size changed, may indicate binary incompatibility. Expected 32 from C header, got 40 from PyObject; return f(*args, **kw",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:30086,error,error,30086,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,2,"['error', 'fault']","['error', 'fault']"
Availability,"n at seemingly non-deterministic times.; - Running files in a slightly different interpreter, running within a test runner with differing numbers of files, doing different work before and after will all cause the segfault to change, and may mask it.; - As annoying as they are, segfaults are actually the _good_ case of the bug - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation completes (it prints ""500""), and _then_ the fault occurs. This along with the error message should hopefully make it clear that an out-of-bounds write occurs occasionally, and it is temperamental where exactly this happens. This is typically not detected until the object is freed, when the Python allocators do a little bit of checksumming. I think that in _all_ cases we're seeing the failure come from the garbage collection, but I can't be 100% certain - note that this almost certainly means the failure is somewhere completely different, and it's only _detected_ at garbage collection. Here is the output of a Python 3.8 crash on the `Malloc.py` file with some additional debugging enabled. This is with Python 3.8.8, Numpy 1.19.2, Scipy 1.6.2 and MKL:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler Malloc.py; 500; Debug memory block at address p=0x7fa2e02de610: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7fa2e02ed64f are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUC",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:2075,error,error,2075,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,1,['error'],['error']
Availability,niconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/settings.py 24 2 92%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/utilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51058,ERROR,ERROR,51058,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52042,ERROR,ERROR,52042,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52780,ERROR,ERROR,52780,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53108,ERROR,ERROR,53108,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53518,ERROR,ERROR,53518,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53600,ERROR,ERROR,53600,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53682,ERROR,ERROR,53682,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53764,ERROR,ERROR,53764,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54994,ERROR,ERROR,54994,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_countstat.py"", line 73, in test_dqd_current; rhoss = steadystate(L); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 290, in steadystate; return _steadystate_direct_sparse(A, ss_args); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 460, in _steadystate_direct_sparse; weighted_matching=ss_args['weighted_matching']); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 393, in mkl_spsolve; x = lu.solve(b, verbose=verbose); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 170, in solve; np_x, np_error); OSError: exception: access violation reading 0x0000000099EC80F8. ======================================================================; ERROR: MKL spsolve : Hermitian (real) solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_mkl.py"", line 230, in test_mkl_spsolve10; y = mkl_spsolve(A, b, hermitian=1); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 414, in mkl_spsolve; lu.delete(); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 208, in delete; byref(c_int(0)), np_error); OSError: exception: access violation reading 0x00000006FFFFFFEF. ======================================================================; ```; Enviroment:; ```; QuTiP Version: 4.4.0.dev0+73a27971; Numpy Version: 1.16.2; Scipy Version: 1.2.1; Cython Version: 0.29.6; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 12; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975#issuecomment-483000016:1339,ERROR,ERROR,1339,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-483000016,1,['ERROR'],['ERROR']
Availability,"ns; > -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error; > -Wp,-D_REENTRANT -fPIC; >; > compile options:; > '-I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/include/python3.5m -c'; > extra options: '-w -ffast-math -O3 -march=native -funroll-loops'; > gcc: qutip/cy/src/zspmv.c; > qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or; > directory; > #include <complex.h>; > ^; > compilation terminated.; > qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or; > directory; > #include <complex.h>; > ^; > compilation terminated.; > error: Command ""gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall; > -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2; > -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer; > -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions; > -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error; > -Wp,-D_REENTRANT -fPIC; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/include/python3.5m -c; > qutip/cy/src/zspmv.c -o; > build/temp.linux-x86_64-3.5/qutip/cy/src/zspmv.o -w -ffast-math -O3; > -march=native -funroll-loops"" failed with exit status 1`; >; > Well, all of them seem to fail with a similar issue. Whatever is exit; > status 1. (This; > <http://stackoverflow.com/questions/35991403/python-pip-install-gives-command-python-setup-py-egg-info-failed-with-error-c> ; >; > is the SO solution I followed, it claims that error code is related to; > operation not permitted or setuptools not being installed. I upgraded; > the",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639#issuecomment-275734243:5458,error,error,5458,https://qutip.org,https://github.com/qutip/qutip/issues/639#issuecomment-275734243,2,['error'],['error']
Availability,nt/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51386,ERROR,ERROR,51386,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"numpy seeds must be 32bit usingned int. Thus `np.uint32` is better, `np.int32` will cut half the available seeds. #1219 will fix this but it will take some time before it is officially released.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/968#issuecomment-608570391:97,avail,available,97,https://qutip.org,https://github.com/qutip/qutip/issues/968#issuecomment-608570391,1,['avail'],['available']
Availability,o attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52862,ERROR,ERROR,52862,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,o attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53026,ERROR,ERROR,53026,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,o attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54010,ERROR,ERROR,54010,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,o attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54666,ERROR,ERROR,54666,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"o attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_wigner.py - AttributeError: module 'qutip' has no attribu...; !!!!!!!!!!!!!!!!!!! Interrupted: 65 errors during collection !!!!!!!!!!!!!!!!!!!; ======================== 2 warnings, 65 errors in 2.53s ========================; The command ""pytest --verbosity=1 --disable-pytest-warnings --cov=qutip --pyargs qutip"" exited with 2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:55322,ERROR,ERROR,55322,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"obj(data, dims=dims, copy=False, type='oper', isherm=...); ```; providing `data` is actually of a valid (`fast_csr_matrix`) format. Technically the `Qobj.data` attribute will be a new object that wraps the same numpy arrays as was passed, rather than the same `fast_csr_matrix`. In various forms, `expect` already does check the Hermicity, that's why `mc-dm` is careful to set it to avoid recalculating it. The expect functions in `qutip.expect` do this directly, and aren't aware of column-stacked density matrices - they'll just raise a TypeError. `mesolve` and `mcsolve` now bypass the `Qobj` stage and go direct to Cython - in 5.0 it might not be a terrible idea to route everything back through the `Qobj` form, since the performance issues there are solved (a column-stacked dense matrix can be directly wrapped by an f-ordered `Dense` type), and it's the natural central point of the code (and those parts are called from Python-space anyway, so no C concerns). Here though, the problem is actually that the expectation generator in `mesolve` correctly calculates the dtype of the output expectation array using both the state and the expectation operator, but then it does it incorrectly in the loop, and passes the hermicity down to Cython using only the expectation operator, which promptly throws out the complex part. So setting `fast='mc-dm'` in `Qobj` is a symptom of the same root cause as the problem here, rather than the cause itself. At the start of `mesolve` we don't assume that the state is Hermitian, but then inside the integration loop we do. We can still keep the speedup - if the output was created with a complex dtype, we can always safely say that we're passing in non-Hermitian operators, even if coincidentally at one timestep they happen to be anyway. See https://github.com/qutip/qutip/blob/d285e96b3afc61afd1deceef61d9635f9d9aa505/qutip/mcsolve.py#L525-L529 and https://github.com/qutip/qutip/blob/d285e96b3afc61afd1deceef61d9635f9d9aa505/qutip/mesolve.py#L509-L511",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1460#issuecomment-796835048:1666,down,down,1666,https://qutip.org,https://github.com/qutip/qutip/issues/1460#issuecomment-796835048,1,['down'],['down']
Availability,"ok i see, i was confsued about this error. travis is killing the tests. are we taking too long to finish the tests maybe? i was thinking that dropping 3.2 would be ok because i cant remember a case when the py 3.2 and 3.4 gave different results (unless errors due to random number stuff, which are not interesting..)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/276#issuecomment-66583790:36,error,error,36,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66583790,2,['error'],"['error', 'errors']"
Availability,"ols.pyx. Error compiling Cython file:; ------------------------------------------------------------; ... DTYPE = np.float64; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:2:10: cimported module has no attribute 'float64'. Error compiling Cython file:; ------------------------------------------------------------; ... DTYPE = np.float64; ctypedef np.float64_t DTYPE_t. ITYPE = np.int32; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:5:10: cimported module has no attribute 'int32'. Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.float64_t DTYPE_t. ITYPE = np.int32; ctypedef np.int32_t ITYPE_t. CTYPE = np.complex128; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:8:10: cimported module has no attribute 'complex128'. Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.int32_t ITYPE_t. CTYPE = np.complex128; ctypedef np.complex128_t CTYPE_t. CTYPE = np.int64; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:11:10: cimported module has no attribute 'int64'; Traceback (most recent call last):; File ""./setup.py"", line 233, in <module>; ext_modules = cythonize(EXT_MODULES),; File ""/dev/shm/qutip/lib/python2.7/site-packages/Cython/Build/Dependencies.py"", line 1016, in cythonize; cythonize_one(*args); File ""/dev/shm/qutip/lib/python2.7/site-packages/Cython/Build/Dependencies.py"", line 1138, in cythonize_one; raise CompileError(None, pyx_file); Cython.Compiler.Errors.CompileError: qutip/cy/brtools.pyx; ```. Versions:; ```; Python 2.7.5 (default, Dec 3 2013, 08:35:16) ; [GCC 4.4.6 20120305 (Red Hat 4.4.6-4)] on linux2; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import numpy; >>> numpy.version.version; '1.13.1'; >>> import Cython; >>> print Cython.__version__; 0.26; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-317495769:2583,Error,Errors,2583,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-317495769,1,['Error'],['Errors']
Availability,"or: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. # . ## FAIL: Qobj power. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(_self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 225, in test_QobjPower; assert_equal(all(q3.data.todense() - matrix(data) *_ 3), 0); File ""/usr/lib/python2.7/dist-packages/numpy/testing/utils.py"", line 317, in assert_equal; raise AssertionError(msg); AssertionError: ; Items are not equal:; ACTUAL: True; DESIRED: 0. ---. Ran 221 tests in 256.712s. FAILED (SKIP=1, errors=1, failures=1)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42855884:12043,ERROR,ERROR,12043,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884,3,"['ERROR', 'error', 'failure']","['ERROR', 'errors', 'failures']"
Availability,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_control_pulseoptim.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_correlation.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_countstat.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:4760,ERROR,ERROR,4760,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting tests/test_qubit_evolution.py ________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_qubitcircuit.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_qubits.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:31579,ERROR,ERROR,31579,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_stochastic_me.py _________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_stochastic_se.py _________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_subsys_apply.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:42009,ERROR,ERROR,42009,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_stochastic_se.py _________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_subsys_apply.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_superop_reps.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:42754,ERROR,ERROR,42754,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_subsys_apply.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_superop_reps.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_superoper.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:43499,ERROR,ERROR,43499,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_dimensions.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_eigenstates.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_enr_state_operator.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:7740,ERROR,ERROR,7740,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_heom_solver.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_interpolate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_lattice.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:15190,ERROR,ERROR,15190,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_steadystate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_stochastic_me.py _________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_stochastic_se.py _________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:41264,ERROR,ERROR,41264,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_states.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_steadystate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_stochastic_me.py _________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:40520,ERROR,ERROR,40520,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_tensor.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_three_level.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_utilities.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:46480,ERROR,ERROR,46480,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_graph.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_heom_solver.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_interpolate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:14445,ERROR,ERROR,14445,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"p /Fobuild\temp.win-amd64-2.7\Release\qutip/cy/spmatfuncs.obj -w -std=c++11 -O3 -march=native -funroll-loops; cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9002 : ignoring unknown option '-std=c++11'; cl : Command line warning D9002 : ignoring unknown option '-O3'; cl : Command line warning D9002 : ignoring unknown option '-march=native'; cl : Command line warning D9002 : ignoring unknown option '-funroll-loops'; spmatfuncs.cpp; c:\anaconda2\envs\qtpy2\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Include\xlocale(342) : warning C4530: C++ exception handler used, but unwind semantics are not enabled. Specify /EHsc; c:\users\alex\documents\github\qutip\qutip\cy\src/zspmv.hpp(3) : error C2146: syntax error : missing ',' before identifier 'data'; qutip/cy/spmatfuncs.cpp(2503) : error C2660: 'zspmvpy' : function does not take 7 arguments; qutip/cy/spmatfuncs.cpp(2688) : error C2660: 'zspmvpy' : function does not take 7 arguments; qutip/cy/spmatfuncs.cpp(2923) : error C2660: 'zspmvpy' : function does not take 7 arguments; qutip/cy/spmatfuncs.cpp(4801) : error C2668: 'sqrt' : ambiguous call to overloaded function; C:\Users\alex\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Include\math.h(581): could be 'long double sqrt(long double)'; C:\Users\alex\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Include\math.h(533): or 'float sqrt(float)'; C:\Users\alex\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Include\math.h(128): or 'double sqrt(double)'; while trying to match the argument list '(int)'; error: command 'C:\\Users\\alex\\AppData\\Local\\Programs\\Common\\Microsoft\\Visual C++ for Python\\9.0\\VC\\Bin\\amd64\\cl.exe' failed with exit status 2; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/648#issuecomment-281197524:1738,error,error,1738,https://qutip.org,https://github.com/qutip/qutip/pull/648#issuecomment-281197524,5,['error'],['error']
Availability,"p' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_utilities.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_wigner.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; !!!!!!!!!!!!!!!!!!! Interrupted: 60 errors during collection !!!!!!!!!!!!!!!!!!!; =========================== 60 error in 1.85 seconds ===========================; (base) cln-232-18:qutip nathanshammah$; ```; this on the 4.4.0 release version. ; On the dev version, ; ```; (qdev) cln-232-18:qutip nathanshammah$ pytest; ============================= test session starts ==============================; platform darwin -- Python 3.7.3, pytest-5.0.1, py-1.8.0, pluggy-0.12.0; rootdir: /Users/nathanshammah/github/qutip; collected 561 items. qutip/tests/test_basis_transformation.py ........ [ 1%]; qutip/tests/test_brmesolve.py Fatal Python error: Fatal Python error: Segmentation fault: 11; (qdev) cln-232-18:qutip nathanshammah$ pytest; ============================= test session starts ==============================; platform darwin -- Python 3.7.3, pytest-5.0.1, py-1.8.0, pluggy-0.12.0; rootdir: /Users/nathanshammah/github/qutip; collected 561 items. qutip/tests/test_basis_transformation.py ........ [ 1%]; qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:29066,error,errors,29066,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,2,['error'],"['error', 'errors']"
Availability,"p/cy/heom.pyx because it changed.; Compiling qutip/cy/math.pyx because it changed.; Compiling qutip/cy/spconvert.pyx because it changed.; Compiling qutip/cy/ptrace.pyx because it changed.; Compiling qutip/cy/testing.pyx because it changed.; Compiling qutip/cy/brtools.pyx because it changed.; Compiling qutip/cy/brtools_testing.pyx because it changed.; [ 1/13] Cythonizing qutip/cy/brtools.pyx. Error compiling Cython file:; ------------------------------------------------------------; ... DTYPE = np.float64; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:2:10: cimported module has no attribute 'float64'. Error compiling Cython file:; ------------------------------------------------------------; ... DTYPE = np.float64; ctypedef np.float64_t DTYPE_t. ITYPE = np.int32; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:5:10: cimported module has no attribute 'int32'. Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.float64_t DTYPE_t. ITYPE = np.int32; ctypedef np.int32_t ITYPE_t. CTYPE = np.complex128; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:8:10: cimported module has no attribute 'complex128'. Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.int32_t ITYPE_t. CTYPE = np.complex128; ctypedef np.complex128_t CTYPE_t. CTYPE = np.int64; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:11:10: cimported module has no attribute 'int64'; Traceback (most recent call last):; File ""./setup.py"", line 233, in <module>; ext_modules = cythonize(EXT_MODULES),; File ""/dev/shm/qutip/lib/python2.7/site-packages/Cython/Build/Dependencies.py"", line 1016, in cythonize; cythonize_one(*args); File ""/dev/shm/qutip/lib/python2.7/site-packages/Cython/Build/Dependencies.py"", line 1138, in cythonize_one; raise Compil",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-317495769:1497,Error,Error,1497,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-317495769,1,['Error'],['Error']
Availability,"p34 Installing without the; > fortran mcsolver. In file included from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; > from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; > from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11, from; > qutip/cy/spmatfuncs.c:27:; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61:; > fatal error: limits.h: No such file or directory #include_next; > <limits.h> /* recurse down to the real one */ ^ compilation; > terminated. In file included from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; > from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; > from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11, from; > qutip/cy/spmatfuncs.c:27:; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61:; > fatal error: limits.h: No such file or directory #include_next; > <limits.h> /* recurse down to the real one */ ^ compilation; > terminated. error: Setup script exited with error: Command ""gcc; > -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes; > -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC; > -Wformat -Wformat-security -fno-omit-frame-pointer; > -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions; > -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error; > -Wp,-D_REENTRANT -fPIC; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/include/python3.5m -c; > qutip/cy/spmatfuncs.c -o; > build/temp.linux-x86_64-3.5/qutip/cy/spmatfuncs.o -w -ffast-math -O3; > -march=native -funroll-loops"" failed with exit status 1|; >; > Then, I cloned the qutip/qutip repository, and tried to build a wheel; > with |python setup.py bdist_w",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639#issuecomment-275734243:2003,down,down,2003,https://qutip.org,https://github.com/qutip/qutip/issues/639#issuecomment-275734243,1,['down'],['down']
Availability,"path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:171: in <module>; from qutip.qobj import *; qutip/qobj.py:60: in <module>; from qutip.fastsparse import fast_csr_matrix, fast_identity; qutip/fastsparse.py:406: in <module>; from qutip.cy.spmath import (zcsr_transpose, zcsr_adjoint, zcsr_mult); qutip/cy/__init__.py:1: in <module>; from qutip.cy.spmatfuncs import *; stringsource:105: in init qutip.cy.spmatfuncs; ???; E AttributeError: type object 'qutip.cy.spmatfuncs.array' has no attribute '__reduce_cython__'; ________________ ERROR collecting qutip/tests/test_brmesolve.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_brmesolve_td.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_brtools.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________ ERROR collecting qutip/tests/test_",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:1611,ERROR,ERROR,1611,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,ping @anubhavvardhan : fyi,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/212#issuecomment-52374521:0,ping,ping,0,https://qutip.org,https://github.com/qutip/qutip/pull/212#issuecomment-52374521,1,['ping'],['ping']
Availability,ping @nonhermitian,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/214#issuecomment-52877501:0,ping,ping,0,https://qutip.org,https://github.com/qutip/qutip/pull/214#issuecomment-52877501,1,['ping'],['ping']
Availability,"plicit conversions. I really do appreciate the interest, and I _am_ keen to let us have better compatibility with the rest of the community, but there are a lot of design concerns that we're going to want to work on our side first - I just want to caution you in case you're trying to work towards a PR, because I'm not close to being happy to accept one, yet. If we're going to do this (and we haven't decided if we will yet), we're going to need to get a lot of wide-ranging input from many different libraries, and we'll want to write out a proper design document and get approval of it before we get deep into the implementation. > The latter would make it harder to support multiple versions of qutip in the implementers, but I would not worry too much about it. You can throw an error saying that this other package is not supported and you should either nag it's developers or downgrade qutip.; >; > I'm not particularly worried about the blame: even if the error is thrown from qutip, if the message is clear enough it will be clear that the fault is in the downstream implementors of the API. I'm concerned from a user's perspective. QuTiP has a wide user base, and we're beyond the stage where ""iterate fast and break things"" is ok for us (though of course it's fine and even good for pre-stable libraries, to avoid getting weighed down). We've got to be concerned with backwards and forwards compatibility; what if a user wants to install and use QuTiP and a different library in the same environment _without_ using them together, but can't even have them coexist because of version incompatibilities in optional conversion features? That's frustrating for users, even though it's not really anybody's fault. Bugging developers is fine when people want to use packages that are still maintained, but I'm sure we've all come up against times in research when you get to trying out a package to do one specific thing that's been abandoned for a while. Again, this certainly isn't an unsolvab",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691:3886,error,error,3886,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691,3,"['down', 'error', 'fault']","['downstream', 'error', 'fault']"
Availability,"pm methods use the Pade approximation. We coded ours many year ago before SciPy had a sparse expm function. However, like I said, it seems that, unless the matrix is diagonal, the output is always dense. Therefore, the dense solver should be the way to go. The one exception would be an idempotent matrix, but again, I do not think this is encountered in practice. I will have a look at the Spinach methods. Seems to be similar to the Matlab code, scaling, Pade, then squaring. The SciPy dense and sparse expm uses the same Higham algorithm as Matlab, so it should be good.; - Paul. > On Apr 8, 2016, at 08:38, Alexander Pitchford notifications@github.com wrote:; > ; > I tried some experiments with elementwise exp with numpy to see if mkl did any parallel processing. It did not seem to.; > ; > scipy.linalg.expm claims to use the Pade approximation. There used to be a expm2 (that used diagonalisation) and an expm3 (method?) but these have been deprecated. The scipy docs claim that the method used in expm is ""numerically more robust"".; > ; > In the control modules we either use a eigendecomp (diagonalisation) method or scipy.linalg.expm_frechet as we typically need to compute propagators (which either uses the eigendecomp or is provided by the frechet deriv) . Frechet also uses some Pade approximation. I think the Pade method uses something like a LU decomp, but would need more research. It would always be more efficient to use the eigendecomp if it has been computed already.; > ; > My guess is that if parallel LU decomp provides much (x100) faster eigendecomp, then the diagonalisation method would be much faster than expm. However, some experimentation would be needed to verify.; > ; > I am told that there are many methods of computing expm, and is there is much numerical research into it. It seems strange that scipy only offer us one method. The spinach control library (http://spindynamics.org/Spinach.php http://spindynamics.org/Spinach.php) reputedly has some interesting m",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/462#issuecomment-207466362:1149,robust,robust,1149,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207466362,1,['robust'],['robust']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_enr_state_operator.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_entropy.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_expect.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:9232,ERROR,ERROR,9232,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting tests/test_optpulseprocessor.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_parallel.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting tests/test_partial_transpose.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:22641,ERROR,ERROR,22641,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_brtools.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_cavityqed.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:2527,ERROR,ERROR,2527,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_superop_reps.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_superoper.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_td_formats.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:44246,ERROR,ERROR,44246,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_correlation.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_countstat.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_cy_structs.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:5506,ERROR,ERROR,5506,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_cy_structs.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_dimensions.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_eigenstates.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:6995,ERROR,ERROR,6995,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_interpolate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_lattice.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mcsolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:15937,ERROR,ERROR,15937,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_scattering.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sp_eigs.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:36052,ERROR,ERROR,36052,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_three_level.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_utilities.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_wigner.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:47226,ERROR,ERROR,47226,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_countstat.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_cy_structs.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_dimensions.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:6250,ERROR,ERROR,6250,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_processor.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_propagator.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_ptrace.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:25620,ERROR,ERROR,25620,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_rhs_reuse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_scattering.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:35305,ERROR,ERROR,35305,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_superoper.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_td_formats.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_tensor.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:44990,ERROR,ERROR,44990,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_brtools.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_cavityqed.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_control_pulseoptim.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:3271,ERROR,ERROR,3271,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_expect.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_fastsparse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_fileio.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:10720,ERROR,ERROR,10720,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_fileio.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_floquet.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_gates.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:12212,ERROR,ERROR,12212,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_lattice.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mcsolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:16682,ERROR,ERROR,16682,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mcsolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_metrics.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:17427,ERROR,ERROR,17427,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_metrics.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_mkl.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:18172,ERROR,ERROR,18172,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_openmp.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_operators.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting tests/test_optpulseprocessor.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:21151,ERROR,ERROR,21151,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_random.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_rhs_reuse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_scattering.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:34561,ERROR,ERROR,34561,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sp_eigs.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sparse.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:36797,ERROR,ERROR,36797,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sparse.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_spinchain.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_spmath.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:38286,ERROR,ERROR,38286,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_piqs.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_processor.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_propagator.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:24876,ERROR,ERROR,24876,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_qobj.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_qobjevo.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_qpt.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:29347,ERROR,ERROR,29347,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52206,ERROR,ERROR,52206,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52698,ERROR,ERROR,52698,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"qutip/setup.cfg Running; > setup.py -q bdist_egg --dist-dir; > /home/jakeargent/qutip/egg-dist-tmp-9_egnp34 Installing without the; > fortran mcsolver. In file included from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; > from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; > from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11, from; > qutip/cy/spmatfuncs.c:27:; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61:; > fatal error: limits.h: No such file or directory #include_next; > <limits.h> /* recurse down to the real one */ ^ compilation; > terminated. In file included from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; > from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; > from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11, from; > qutip/cy/spmatfuncs.c:27:; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61:; > fatal error: limits.h: No such file or directory #include_next; > <limits.h> /* recurse down to the real one */ ^ compilation; > terminated. error: Setup script exited with error: Command ""gcc; > -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes; > -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC; > -Wformat -Wformat-security -fno-omit-frame-pointer; > -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions; > -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error; > -Wp,-D_REENTRANT -fPIC; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/include/python3.5m -c; > qutip/cy/spmatfuncs.c -o; > build/temp.linux-x86_64-3.5/qutip/cy/spmatfuncs.o -w -ffast-math -O3; > -march=native -funroll-loops"" failed with exit status 1|; >; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639#issuecomment-275734243:1921,error,error,1921,https://qutip.org,https://github.com/qutip/qutip/issues/639#issuecomment-275734243,1,['error'],['error']
Availability,"r driven oscillator in ground state ... Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; correlation: legacy me and es for oscillator in coherent initial state ... ok; correlation: comparing me and es for oscillator in coherent initial state ... ok; correlation: comparing me and mc for driven oscillator in ground state ... ERROR; correlation: legacy me and es for oscillator in steady-state ... ok; correlation: comparing me and es for oscillator in steady-state ... ok; correlation: legacy spectrum from es and pi methods ... ok; correlation: comparing spectrum from es and fft methods ... ok; correlation: comparing spectrum from es and pi methods ... ok; correlation: comparing TLS emission correlations (str-list td format) ... In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: U",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:1997,ERROR,ERROR,1997,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['ERROR'],['ERROR']
Availability,"ravis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/qobj.py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_brtools.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:1779,ERROR,ERROR,1779,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"regarding porting it directly into qutip, and we agreed it would be a good addition as a separate solver. There are a couple of we-believe-good reasons to provide <code>krylovsolve</code> as another qutip solver. As you mention, the method is currently limited to constant closed system Hamiltonians. Another possible addition discussed during the meetings was support for open quantum systems, which provides another unitary-fund grant opportunity for some students!. Another important application for many-body systems comes in handy with Krylov. Given the memory limitations from matrix representation of operators and the exponential growth of many-body systems Hilbert spaces, the limit of qubits on which the solvers live is around 15 qubits. This limitation gets expanded (in exchange for some slow down in the computations) to a few more qubits exploiting the binary operational nature of many-body systems. While any solver could use operations instead of matrices, it is a good testing bead to use Krylov's algorithm because of a property when constructing this space. This feature is a must-have within our research group, and everyone could also benefit from it. More importantly, Krylov is gaining increasing interest in the research community, and we believe that providing it as a qutip solver will increase the traffic of the repository. Regarding benchmarks and some documentation, we have a public jupyter notebook with some benchmarks here [krylov use examples](https://colab.research.google.com/drive/1f7ng8q9QNEzaZ97vGop3aIip8GPtl3GR?usp=sharing), and there's also a [medium blog post](https://medium.com/@julian.ruffinelli/krylov-approximation-method-for-quantum-evolution-148b3f023ec4) with some other details. As for maintenance, yes, the way this code-block fits in should not be problematic to update even with qutip changes. We use <code>krylovsolve</code> for research and will keep the solver repo outside qutip up to date and (hopefully!) inside of it for the community.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1668#issuecomment-926236528:1865,mainten,maintenance,1865,https://qutip.org,https://github.com/qutip/qutip/issues/1668#issuecomment-926236528,1,['mainten'],['maintenance']
Availability,"resentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; >; > ### Expected outcomes; > - More devices defined in the `qutip.qip.device` module. At the moment, we; > have two models: spin chain and cavity QED. We would like to include some; > other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in `qutip.qip.device` and; > `qutip.qip.compiler`; > - Refactoring the circuit compiler to allow simple pulse scheduling, e.g.; > Restriction one pulses that can be turned on at the same time.; > - Features to perform error mitigation techniques in QuTiP, such as; > zero-error extrapolation.; > - APIs to allow import quantum circuits from other software packages or; > commonly used language e.g. through quantum assembly language (qasm); > ----------------------------------------------------------------; >; > Best; > Boxi; >; > From: Nathan Shammah<mailto:notifications@github.com>; > Sent: Tuesday, February 25, 2020 8:36 AM; > To: qutip/qutip<mailto:qutip@noreply.github.com>; > Cc: Boxi Li<mailto:etamin1201@gmail.com>; Author<mailto:; > author@noreply.github.com>; > Subject: Re: [qutip/qutip] More detailed information for GSoC 2020 project; > (#1184); >; > Hi Boxi,; >; > Can you please modify the projects of the Wiki page as you deem best?; > All: we can also think of changing the order of them. It may be that; > project #3 is deemed the most important.; >; > Best wishes,; >; > Nathan; >; > Dr. Nathan Shammah; > Postdoctoral Research Scientist; > Theoretical Quantum Physics Laboratory; > RIKEN, Wako, Saitama, Japan; > www.n",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:2901,error,error,2901,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553,2,['error'],['error']
Availability,"ries define for them, but can add their own conversions or override library ones if they don't like them. I actually see this as being closer to Julia's dispatch, or Rust's `impl for`.; - It doesn't involve weird namespacing, or anything like that, and doesn't require downstream classes to carry around additional slots. It's less an issue for classes that define `__slots__` since those are frozen methods, but extra methods adds a minor amount vtable weight for most libraries, and makes their class definitions more complex.; - Control between different versions is perhaps a little easier (though a minor point): this _feels_ easier to separate out different versions, and detect what to register as the conversion function with QuTiP. This is a particular advantage for Python classes compiled as C-extensions (like from C or Cython), which typically don't allow assigning methods dynamically.; - A library could even register multiple versions of the conversion function with us, and let QuTiP handle API versioning centrally, rather than requiring downstream libraries to roll their own checks.; - We're basically already set up to do this in `dev.major` already. We'd have to modify our procedures a little bit (we're mostly concerned with constructing the underlying matrices at the moment), but it's a smaller change in behaviour. Disadvantages that I can think of:; - It's got linear scaling with the number of conversions registered, so it's in theory possible to register ""too many"" and cause a slow down. In reality, this will be a very small effect (`Qobj` construction time will be dominated by copying data into new formats), and I think the benefits of a priority queue of allowed converters outweighs it in convenience for users.; - It involves some global state of the `qutip` library, which _may_ cause problems for multiprocessing if somebody tries to register a `lambda` converter (can't pass through `pickle`, though I'm not 100% on whether module-level stuff needs to), and o",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691:6677,down,downstream,6677,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691,1,['down'],['downstream']
Availability,rt test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51714,ERROR,ERROR,51714,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"rt; > setuptools,; > tokenize;__file__='/tmp/pip-build-n7ekqm4y/qutip/setup.py';f=getattr(tokenize, ; >; > 'open', open)(__file__);code=f.read().replace('\r\n',; > '\n');f.close();exec(compile(code, __file__, 'exec'))"" install; > --record /tmp/pip-lnsaamvm-record/install-record.txt; > --single-version-externally-managed --compile"" failed with error code; > 1 in /tmp/pip-build-n7ekqm4y/qutip/|; >; > Then I tried easy_install, which gave me:; >; > |Processing qutip Writing /home/jakeargent/qutip/setup.cfg Running; > setup.py -q bdist_egg --dist-dir; > /home/jakeargent/qutip/egg-dist-tmp-9_egnp34 Installing without the; > fortran mcsolver. In file included from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; > from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; > from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11, from; > qutip/cy/spmatfuncs.c:27:; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61:; > fatal error: limits.h: No such file or directory #include_next; > <limits.h> /* recurse down to the real one */ ^ compilation; > terminated. In file included from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; > from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; > from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11, from; > qutip/cy/spmatfuncs.c:27:; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61:; > fatal error: limits.h: No such file or directory #include_next; > <limits.h> /* recurse down to the real one */ ^ compilation; > terminated. error: Setup script exited with error: Command ""gcc; > -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes; > -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC; > -Wformat -Wformat-security -fno-omit-frame-pointer; > -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions; > -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error; ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639#issuecomment-275734243:1428,error,error,1428,https://qutip.org,https://github.com/qutip/qutip/issues/639#issuecomment-275734243,1,['error'],['error']
Availability,"rt__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_eigenstates.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_enr_state_operator.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_entropy.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON_",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:8481,ERROR,ERROR,8481,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"rt__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_cavityqed.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_control_pulseoptim.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_correlation.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON_",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:4011,ERROR,ERROR,4011,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"rt__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_operators.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting tests/test_optpulseprocessor.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_parallel.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON_",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:21892,ERROR,ERROR,21892,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"rt__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_parallel.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting tests/test_partial_transpose.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_piqs.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON_",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:23382,ERROR,ERROR,23382,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"rt__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_qpt.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting tests/test_qubit_evolution.py ________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_qubitcircuit.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:30833,ERROR,ERROR,30833,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"rtain - note that this almost certainly means the failure is somewhere completely different, and it's only _detected_ at garbage collection. Here is the output of a Python 3.8 crash on the `Malloc.py` file with some additional debugging enabled. This is with Python 3.8.8, Numpy 1.19.2, Scipy 1.6.2 and MKL:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler Malloc.py; 500; Debug memory block at address p=0x7fa2e02de610: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7fa2e02ed64f are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7fa2ddc04270). Current thread 0x00000001123d55c0 (most recent call first):; <no Python frame>; Abort trap: 6; ```. ## Relation to `to_kraus`. The above `Malloc.py` file uses `scipy.linalg.eig` via use of an `eseries` version of `correlation`. The current test of superoperator representations uses `choi_to_kraus` which also calls `scipy.linalg.eig`. Here is a file `kraus.py` that can reproduce these segfaults semi-reliably (may need to run it a few times to get it to trigger):. ```python; import qutip. s = qutip.rand_super(); c = qutip.to_choi(s); k = qutip.to_kraus(c); ```. For example, here's a similar command on this file:. ```; Debug memory block at address p=0x7f98cc467db0: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7f98cc476def are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:3412,error,error,3412,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,1,['error'],['error']
Availability,"rtcol < col_scale:; - A.indices = A.indices + insertcol*ncolin; + A.indices += insertcol*ncolin; else:; raise ValueError(""insertcol must be >= 0 and < col_scale""); ; diff --git a/qutip/orbital.py b/qutip/orbital.py; index bb12b71b..7432144d 100644; --- a/qutip/orbital.py; +++ b/qutip/orbital.py; @@ -59,7 +59,7 @@ def orbital(theta, phi, *args):; np.ones((np.size(phi), np.size(theta)),; dtype=complex) * SPlm[1]; for m in range(-l, 0):; - psi = psi + (fac * kf[l - m, 0]) * \; + psi += (fac * kf[l - m, 0]) * \; np.array([np.exp(1.0j * 1 * phi)]).T * \; np.ones((np.size(phi), np.size(theta)), dtype=complex) * \; SPlm[abs(m)]; diff --git a/qutip/pdpsolve.py b/qutip/pdpsolve.py; index 6e915792..77a7af1b 100644; --- a/qutip/pdpsolve.py; +++ b/qutip/pdpsolve.py; @@ -396,7 +396,7 @@ def _ssepdpsolve_generic(sso, options, progress_bar):; for n in range(len(data.times))]; ; # average; - data.expect = data.expect / nt; + data.expect /= nt; ; # standard error; if nt > 1:; @@ -525,7 +525,7 @@ def _smepdpsolve_generic(sso, options, progress_bar):; for n in range(len(data.times))]; ; # average; - data.expect = data.expect / sso.ntraj; + data.expect /= sso.ntraj; ; # standard error; if nt > 1:; diff --git a/qutip/piqs.py b/qutip/piqs.py; index 83144418..eace5620 100644; --- a/qutip/piqs.py; +++ b/qutip/piqs.py; @@ -193,7 +193,7 @@ def dicke_blocks(rho):; start_m = block_position; end_m = block_position + block_size; square_block = rho[start_m:end_m, start_m:end_m]; - block_position = block_position + block_size; + block_position += block_size; square_blocks.append(square_block); ; return square_blocks; @@ -233,12 +233,12 @@ def dicke_blocks_full(rho):; start_m = block_position; end_m = block_position + block_size; square_block = rho[start_m:end_m, start_m:end_m]; - block_position = block_position + block_size; + block_position += block_size; j = N / 2 - k; djn = state_degeneracy(N, j); for block_counter in range(0, djn):; full_blocks.append(square_block / djn) # preserve trace; - k =",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872:12665,error,error,12665,https://qutip.org,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872,1,['error'],['error']
Availability,"s a minor amount vtable weight for most libraries, and makes their class definitions more complex.; - Control between different versions is perhaps a little easier (though a minor point): this _feels_ easier to separate out different versions, and detect what to register as the conversion function with QuTiP. This is a particular advantage for Python classes compiled as C-extensions (like from C or Cython), which typically don't allow assigning methods dynamically.; - A library could even register multiple versions of the conversion function with us, and let QuTiP handle API versioning centrally, rather than requiring downstream libraries to roll their own checks.; - We're basically already set up to do this in `dev.major` already. We'd have to modify our procedures a little bit (we're mostly concerned with constructing the underlying matrices at the moment), but it's a smaller change in behaviour. Disadvantages that I can think of:; - It's got linear scaling with the number of conversions registered, so it's in theory possible to register ""too many"" and cause a slow down. In reality, this will be a very small effect (`Qobj` construction time will be dominated by copying data into new formats), and I think the benefits of a priority queue of allowed converters outweighs it in convenience for users.; - It involves some global state of the `qutip` library, which _may_ cause problems for multiprocessing if somebody tries to register a `lambda` converter (can't pass through `pickle`, though I'm not 100% on whether module-level stuff needs to), and of course there's the query of what happens when converters are registered in separate processes. We already have this ""problem"" in 5.0 though, because that's how the entire underlying dispatch mechanism is handled; we can just require that converters must be pickle-able.; - If a downstream package wants to lazily `import qutip` (we're a pretty heavy import right now), it's harder in this method; you'd basically have to ask a ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691:7135,down,down,7135,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691,1,['down'],['down']
Availability,"s ea1c129 to b4f75cf as ""new"" (the first three commits of this PR). However, when those commits are taken together, they make the same changes as commit 4102b99 (the one which merged #1242) in `qutip/master`. The Github ""Files changed"" dialog is a pretty-printed version of the `git` command `git diff qutip/master...Canoming/master`, which means ""show all changes on either branch since `qutip/master` and `Canoming/master` diverged"". Because they diverged before #1242 was merged, it includes those changes. The merge completes without conflict, however, because `git` is clever and recognises that the changes introduced in the two branches `qutip/master` and `Canoming/master` are identical, even though the commits are different. As a consequence, however, merging this PR without squashing it would cause commits ea1c129 to b4f75cf to suddenly appear in our commit history, which we don't want. ### If Canoming wanted to fix this (not necessary). First run; ```; git remote add qutip https://github.com/qutip/qutip.git; git fetch qutip; ```; to add the upstream `qutip` remote. Then run; ```; git checkout master; git rebase -i $(git merge-base qutip/master master); ```; and modify the file so that the instruction list looks like (only the first word of each line changes); ```; pick ea1c129a fix function QubitCircuit.remove_gate; fixup 3bd94603 fix function QubitCircui.remove_gate; fixup b4f75cfe fix; pick 4aa90f56 fix bug in QubitCircuit.add_circuit; pick 3a2676de fix function QubitCircuit.add_circuit; pick 58aebc7f fix indent; ```; Should you save and close the file, it would modify your commit history. We'd only do this to avoid a merge conflict which would otherwise occur in the next step. Then, run; ```; git rebase qutip/master; ```; which should complete without error. Finally, your local `master` would now have diverged from Github's copy (and this PR's), so you'd have to force-push the changes by doing; ```; git push --force; ```; which would update this PR accordingly.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1269#issuecomment-629701269:2842,error,error,2842,https://qutip.org,https://github.com/qutip/qutip/pull/1269#issuecomment-629701269,1,['error'],['error']
Availability,"s it nice could copy it to the; > Wiki page.; >; > I add some details based on the original description:; > ------------------------------; > 1. Error mitigation in QuTiP; >; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class Processor and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > qutip.qip.noise to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (qutip.qip.circuit). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; > Expected outcomes; >; > - More devices defined in the qutip.qip.device module. At the moment,; > we have two models: spin chain and cavity QED. We would like to include; > some other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in qutip.qip.device and; > qutip.qip.compiler; > - Refactoring the circuit compiler to allow simple pulse sche",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:1642,error,error,1642,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313,1,['error'],['error']
Availability,s no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51878,ERROR,ERROR,51878,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,s no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52124,ERROR,ERROR,52124,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,s no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52370,ERROR,ERROR,52370,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,s no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54092,ERROR,ERROR,54092,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,s no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54502,ERROR,ERROR,54502,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"s\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_rhs_reuse.py"", line 53, in test_rhs_reuse; out1 = qt.mesolve(H, psi0,tlist, e_ops=e_ops); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\mesolve.py"", line 336, in mesolve; e_ops, args, options, progress_bar); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py"", line 520, in _sesolve_list_str_td; exec(code, globals()); File ""<string>"", line 1, in <module>; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 462, in load_module; language_level=self.language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 231, in load_module; raise exc.with_traceback(tb); File",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:4232,error,errors,4232,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['error'],['errors']
Availability,"s\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 190, in test_04_1_state_with_list_str_H; td_args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 64, in check_evolution; args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py"", line 185, in sesolve; progress_bar); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py"", line 520, in _sesolve_list_str_td; exec(code, globals()); File ""<string>"", line 1, in <module>; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 462, in load_module; language_level=self.language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-pack",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:8644,error,errors,8644,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['error'],['errors']
Availability,"s\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 207, in test_04_2_unitary_with_list_func_H; td_args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 67, in check_evolution; output = sesolve(H, U0, tlist, args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py"", line 185, in sesolve; progress_bar); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py"", line 520, in _sesolve_list_str_td; exec(code, globals()); File ""<string>"", line 1, in <module>; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 462, in load_module; language_level=self.language_level); File ""C:\Use",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:13157,error,errors,13157,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['error'],['errors']
Availability,"s\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 226, in test_05_1_state_with_interp_H; td_args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 64, in check_evolution; args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py"", line 185, in sesolve; progress_bar); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py"", line 520, in _sesolve_list_str_td; exec(code, globals()); File ""<string>"", line 1, in <module>; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 462, in load_module; language_level=self.language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packag",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:17691,error,errors,17691,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['error'],['errors']
Availability,"s\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 245, in test_05_2_unitary_with_interp_H; td_args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 67, in check_evolution; output = sesolve(H, U0, tlist, args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py"", line 185, in sesolve; progress_bar); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py"", line 520, in _sesolve_list_str_td; exec(code, globals()); File ""<string>"", line 1, in <module>; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 462, in load_module; language_level=self.language_level); File ""C:\Users\",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:22200,error,errors,22200,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['error'],['errors']
Availability,"s\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 354, in test_06_4_compare_state_and_unitary_list_str; normalize=False, td_args=td_args, tol=5e-5); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 255, in compare_evolution; options=options,args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py"", line 185, in sesolve; progress_bar); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py"", line 520, in _sesolve_list_str_td; exec(code, globals()); File ""<string>"", line 1, in <module>; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 462, in load_module; language_level=self.lang",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:26761,error,errors,26761,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['error'],['errors']
Availability,"scipy deals with some slow tests by decorating them using `@slow` from `numpy.testing.decorators` and then using something like `nosetests` for testing. So TravisCI by default will not run the slow tests, but you can manually override this option if you want to run them locally. Also TravisCI will tolerate quite slow tests up to maybe 50min total (build+test).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/77#issuecomment-35959405:299,toler,tolerate,299,https://qutip.org,https://github.com/qutip/qutip/issues/77#issuecomment-35959405,1,['toler'],['tolerate']
Availability,"spmatfuncs.cpp /Fobuild\temp.win-amd64-2.7\Release\qutip/cy/spmatfuncs.obj -w -std=c++11 -O3 -march=native -funroll-loops; cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9002 : ignoring unknown option '-std=c++11'; cl : Command line warning D9002 : ignoring unknown option '-O3'; cl : Command line warning D9002 : ignoring unknown option '-march=native'; cl : Command line warning D9002 : ignoring unknown option '-funroll-loops'; spmatfuncs.cpp; c:\anaconda2\envs\qtpy2\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Include\xlocale(342) : warning C4530: C++ exception handler used, but unwind semantics are not enabled. Specify /EHsc; c:\users\alex\documents\github\qutip\qutip\cy\src/zspmv.hpp(3) : error C2146: syntax error : missing ',' before identifier 'data'; qutip/cy/spmatfuncs.cpp(2503) : error C2660: 'zspmvpy' : function does not take 7 arguments; qutip/cy/spmatfuncs.cpp(2688) : error C2660: 'zspmvpy' : function does not take 7 arguments; qutip/cy/spmatfuncs.cpp(2923) : error C2660: 'zspmvpy' : function does not take 7 arguments; qutip/cy/spmatfuncs.cpp(4801) : error C2668: 'sqrt' : ambiguous call to overloaded function; C:\Users\alex\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Include\math.h(581): could be 'long double sqrt(long double)'; C:\Users\alex\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Include\math.h(533): or 'float sqrt(float)'; C:\Users\alex\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Include\math.h(128): or 'double sqrt(double)'; while trying to match the argument list '(int)'; error: command 'C:\\Users\\alex\\AppData\\Local\\Programs\\Common\\Microsoft\\Visual C++ for Python\\9.0\\VC\\Bin\\amd64\\cl.exe' failed with exit s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/648#issuecomment-281197524:1640,error,error,1640,https://qutip.org,https://github.com/qutip/qutip/pull/648#issuecomment-281197524,2,['error'],['error']
Availability,"ssues/1268#issue-619006856)), which can get a bit messy, as there's Python's `random`, NumPy's `random` (which also comes in a legacy and a modern flavour, namely `numpy.random.RandomState` and `numpy.random.Generator`). Also, as you've mentioned, there's tight coupling between the implementation logic and the corresponding set of tests, and updates in the former require constant maintenance of the latter.; - As an alternative, I've sometimes resorted to [`mock`](https://docs.python.org/3/library/unittest.mock.html)ing the random-number generation process itself, and - in a way equivalent to using a fixed seed - providing a pre-defined sequence of numbers to the functions which depend on those. It comes with the same disadvantage of relatively tight coupling, but is somehow more flexible and powerful than just setting the seeds.; - I have used Hypothesis in the past (on a relatively small-scale project), and it's indeed a great framework with a lot of interesting and nice functionalities. I like it very much, but one disadvantage I ran into was the increased overall time for completion of a test run. In my case, a viable approach, for instance, was to run my Hypothesis tests (which were a subset of all tests) with a bit larger periodicity (in the CI pipeline) than the regular tests. Another concern that I intuitively have (I may be _wildly_ wrong on this one, though, not having yet properly explored QuTiP's testing landscape) is that - depending on how some Hypothesis tests are set up - there might be a cost incurred in that, eventually, one might have to implement guards against inputs, that would be virtually impossible (or very close to that) to occur in practical scenarios. In any case, I'd strongly recommend performing a time-boxed experiment on a small subset of tests, which are more suited to property-based testing, and examining how that affects the test-run-completion time(s) and whether it introduces more failures than what would be desired/cost-efficient.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1268#issuecomment-1123679707:3269,failure,failures,3269,https://qutip.org,https://github.com/qutip/qutip/issues/1268#issuecomment-1123679707,1,['failure'],['failures']
Availability,"st sub- and super-diagonals look like; ```[sqrt(1), -sqrt(2), sqrt(3), -sqrt(4), ...]```; and the diagonal of `P` looks like; ```[i, e^(-1i arg(alpha)), i e^(-2i arg(alpha)), e^(-3i arg(alpha)), ...]```. Now this real-symmetric tridiagonal form is the basis of Hermitian eigenvalue solvers, and has direct entry points in LAPACK (e.g. `?stemr`), which allow us to pass only the main diagonal and the first subdiagonal. Scipy provides convenient wrapped access in Python by `scipy.linalg.eigh_tridiagonal`. This lets us get the full eigensystem of `T`, which is related to that of `G` by dividing the eigenvalues by the scaling factor, and multiplying the eigenvectors by `P` to transform them into the correct basis. We now have a diagonalised matrix `G = Q^-1 . D . Q`, so `exp(G) = Q^-1 . exp(D) . Q`, which is now trivial because `D` is diagonal. Putting all this together allows us to use our knowledge of the problem domain to convert the matrix exponentiation problem into a much simpler real-symmetric tridiagonal eigensystem problem, which gets us a nice big speed up, and it's equivalent up to the tolerance of the eigenvalue solver (~1e-14). Even better for you, a lot of the hard work is done in the eigensystem solver, and I scaled out `alpha` at the start, so we can do a good chunk _without fixing alpha_. That means we can pay the computational cost only once at the start, and then get faster calculations from then on. If I make a totally fair test, and simply replicate the full functionality of `qutip.displace` (including creating a `Qobj` at the end), my method is ~4x faster on small matrices (`1 <= dim <= 20`) and it only goes up from there (I found it's about ~10x faster at `dim = 1000`, and beyond that `qutip.displace` is too slow to bother). If I store the calculation of the eigensystem, and output an `ndarray` instead of converting to `csr_matrix` (and so don't produce a `Qobj`), then I find speed ups in getting the operator for a new `alpha` as ~100x for small matr",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1293#issuecomment-645685030:2015,toler,tolerance,2015,https://qutip.org,https://github.com/qutip/qutip/issues/1293#issuecomment-645685030,1,['toler'],['tolerance']
Availability,st-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/utilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51222,ERROR,ERROR,51222,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"st_sesolve.py**; * [x] Why not simply compare to <code>sesolve</code> ? --> **Is easier, so we swap it.**; * [x] Naming this fidelity feels wrong with the <code>1-...</code>. Also make Qobj and array conversions more efficiently with Naming this fidelity feels wrong with the <code>1-....</code>; You don't need to work go back and forth between <code>Qobj</code> and array. Also make things more efficiently with <code>1 - np.abs(psi_exact.overlap(psi_k))**2</code>. --> **Corrected.**; * [x] More efficiently <code>psi0=qutip.rand_ket(dim)</code>. --> **Corrected.**; * [x] Why compute 3 expectation values if only one is tested?; Also please use the normal <code>assert</code> instead of numpy's <code>assert_</code>. We are slowly removing them since we migrated from unitest to pytest. --> **Now all of them are checked and using <code>asset</code>**. #### <code>krylovsolve.py</code>. * [x] <code>isinstance</code> should be tested first since if it isn't, <code>psi0.isket</code> will raise an error before reaching it. It should raise a <code>TypeError</code>.; * [x] Please raise an error instead of using <code>assert</code>, since it can be suppressed.; * [x] Testing for dims instead of shape would be better. --> **Done.**; * [x] Empty progress bars can be ignored.; * [x] Improve the print at <code>particular_tlist</code> using <code>warnings.warn</code>. Properly describe the warning.; * [x] Swap illinois algorithm with a root finder from scipy. --> **Now using <code>scipy.optimize.root_finder</code>**.; * [x] <code>n_iterations</code> become <code>delta_t</code> when <code>optimizer</code> is called. It does not seems to be an integer so isn't <code>delta_t</code> a better name here? --> **Renamed to <code>delta_t</code>.**; * [x] <code>bound_function</code> seems very generic. Same with <code>optimizer</code>. --> **Renamed to <code>_lanczos_error_equation_to_optimize_delta_t</code> and <code>_optimize_lanczos_timestep_size</code>.**; * [x] numpy's array have a <code>do",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1739#issuecomment-1041914233:1614,error,error,1614,https://qutip.org,https://github.com/qutip/qutip/pull/1739#issuecomment-1041914233,1,['error'],['error']
Availability,"stalled Qutip on the command line using Enthought python. No errors...; > ; > Then when I run I get:; > ; > Enthought Canopy Python 2.7.9 | 64-bit | (default, May 20 2015, 20:01:56) ; > [GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.6)] on darwin; > Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; > ; > from qutip import *; > Compiling with an SDK that doesn't seem to exist: /Developer/SDKs/MacOSX10.6.sdk; > Please check your Xcode installation; > In file included from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/syslimits.h:7:0,; > from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:34,; > from /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:19,; > from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:; > /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:168:61: error: no include path in which to search for limits.h; > In file included from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:0:; > /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:33:19: fatal error: stdio.h: No such file or directory; > compilation terminated.; > Traceback (most recent call last):; > File """", line 1, in ; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/init.py"", line 213, in ; > from qutip.qobj import *; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/qobj.py"", line 60, in ; > from qutip.ptrace import ptrace; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/ptrace.py"", line 38, in ; > from qutip.sparse import sp_reshape; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/sparse.py"", line 49, in ; > from qutip.cy.sparse",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/382#issuecomment-148179436:1195,error,error,1195,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-148179436,1,['error'],['error']
Availability,"started looking into QuTiP only very recently, and I'm yet to start familiarising myself with its more intricate details and get to run the full set of tests, and investigate what kind of test failures occur. In the meantime, I'll generally share some (what I _think_ is) relevant experience in the context of handling randomness in tests:; - My understanding is that we're talking about not testing the behaviour of random-number generations per se, but how the numbers they generate affect the non-deterministic functions/algorithms, which depend on the former. In such cases, I've either used a fixed seed (as you've mentioned in your [original post](https://github.com/qutip/qutip/issues/1268#issue-619006856)), which can get a bit messy, as there's Python's `random`, NumPy's `random` (which also comes in a legacy and a modern flavour, namely `numpy.random.RandomState` and `numpy.random.Generator`). Also, as you've mentioned, there's tight coupling between the implementation logic and the corresponding set of tests, and updates in the former require constant maintenance of the latter.; - As an alternative, I've sometimes resorted to [`mock`](https://docs.python.org/3/library/unittest.mock.html)ing the random-number generation process itself, and - in a way equivalent to using a fixed seed - providing a pre-defined sequence of numbers to the functions which depend on those. It comes with the same disadvantage of relatively tight coupling, but is somehow more flexible and powerful than just setting the seeds.; - I have used Hypothesis in the past (on a relatively small-scale project), and it's indeed a great framework with a lot of interesting and nice functionalities. I like it very much, but one disadvantage I ran into was the increased overall time for completion of a test run. In my case, a viable approach, for instance, was to run my Hypothesis tests (which were a subset of all tests) with a bit larger periodicity (in the CI pipeline) than the regular tests. Another con",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1268#issuecomment-1123679707:1703,mainten,maintenance,1703,https://qutip.org,https://github.com/qutip/qutip/issues/1268#issuecomment-1123679707,1,['mainten'],['maintenance']
Availability,"stutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278050 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: unitary operator with td interp H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-pa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:20503,ERROR,ERROR,20503,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['ERROR'],['ERROR']
Availability,"t changed.; [ 1/13] Cythonizing qutip/cy/brtools.pyx. Error compiling Cython file:; ------------------------------------------------------------; ... DTYPE = np.float64; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:2:10: cimported module has no attribute 'float64'. Error compiling Cython file:; ------------------------------------------------------------; ... DTYPE = np.float64; ctypedef np.float64_t DTYPE_t. ITYPE = np.int32; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:5:10: cimported module has no attribute 'int32'. Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.float64_t DTYPE_t. ITYPE = np.int32; ctypedef np.int32_t ITYPE_t. CTYPE = np.complex128; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:8:10: cimported module has no attribute 'complex128'. Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.int32_t ITYPE_t. CTYPE = np.complex128; ctypedef np.complex128_t CTYPE_t. CTYPE = np.int64; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:11:10: cimported module has no attribute 'int64'; Traceback (most recent call last):; File ""./setup.py"", line 233, in <module>; ext_modules = cythonize(EXT_MODULES),; File ""/dev/shm/qutip/lib/python2.7/site-packages/Cython/Build/Dependencies.py"", line 1016, in cythonize; cythonize_one(*args); File ""/dev/shm/qutip/lib/python2.7/site-packages/Cython/Build/Dependencies.py"", line 1138, in cythonize_one; raise CompileError(None, pyx_file); Cython.Compiler.Errors.CompileError: qutip/cy/brtools.pyx; ```. Versions:; ```; Python 2.7.5 (default, Dec 3 2013, 08:35:16) ; [GCC 4.4.6 20120305 (Red Hat 4.4.6-4)] on linux2; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import numpy; >>> numpy.version.version; '1.13.1'; >>> import Cy",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-317495769:1838,Error,Error,1838,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-317495769,1,['Error'],['Error']
Availability,"t handling, which comes at the price of some overhead, but which is negligible compared to the runtime cost for most meaningfully large systems. I'd then like to state that; - *I have never suggested to insert a mechanism to insert implicit conversion in the low-level operations.* ; - In this RFC in no way have I proposed to implement implicit conversion anywhere else then were is already done in qutip itself. All I stated was that `I played around with auto-converting input hamiltonians and jump operators in qutip.sesolve and mesolve to Qobj if they are not Qobj but support the interface. That is even nicer because we would get to use all of qutip solvers out of the box with our objects.`. ; - So implicitly I do have stated that I'd like to see implicit conversion being performed on high-level methods. I do see benefits for the whole ecosystem if we can start integrating more: qutip already has very advanced and feature-complete solvers, there are large benefits for other packages to exploit them without having to wrap them or ask users to write more complicated code. It means that all benefits and bug-fixes to qutip are instantly available to users of other packages too that rely on it. And I think that calling a conversion method at the beginning, which most of the time will do nothing will just be a tiny drop in the bucket of the overhead of those `large` functions. However, I don't want to argue that right now. All my proposal was about was having a way to play well with your `Qobj` constructor.; It seems to me you were eventually favourable to this, so I propose we focus the discussion only on this point, and leave aside implicit or explicit conversion discussions. . I'll gladly open another issue to discuss implicit conversion, if you want, or we could organise a small round table among a bunch of developers to talk about this on skype, but for now, all i'm asking, is to agree on the design of an interface to allow easy conversion of objects to qutip objects.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-913661687:2749,avail,available,2749,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-913661687,1,['avail'],['available']
Availability,"t of issue #1023, now the times are back to comparable with qutip 4.3.1 for the choice `Average States = False, Store States = True` and the storing doesn't get stuck two minutes. . With the default options, QuTiP 4.4 (both 4.4.0.dev0+e4b2415a and dev0+da029386) is slower than 4.3.1 of a factor 2 (Case 4 below). ; With `Average States = True, Store States = False`, version 4.3.1 is faster than the old patch that is faster than this one. . Here the full cases:; ### Case 1) Average states = False, Store States = True. #### QuTiP 4.3.1:; Total run time: 29.72s; **Real cell time: 30s** . #### QuTiP 4.4 before this patch:; Total run time: 17.49s; **Real cell time: 127.9s** . #### QuTiP 4.4 with this patch:; Total run time: 19.96s; **Real cell time: 28.90908122062683**. ### Case 2) Average states = False, Store States = False; #### QuTiP 4.3.1:; Total run time: 9.55s; real time 10.40579104423523. #### QuTiP 4.4 before this patch:; Total run time: 20.02s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 18.61s; **Real cell time: 18.64s**. ### Case 3) Average states = True, Store States = True. #### QuTiP 4.3.1:; Total run time: 35.35s; **Real cell time: 65s**. #### QuTiP 4.4 before this patch:; Total run time: 18.35s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 19.52s; **Real cell time: 23s** . ### Case 4) Default options; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 18s; **Real cell time: 22s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 19s** . ### Case 5) Average states = True, Store States = False; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 19s; **Real cell time: 18s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 28s** . I am merging this in any case as it removes the slowing down when storing the states flagged in #1023.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1024#issuecomment-503664663:1992,down,down,1992,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-503664663,1,['down'],['down']
Availability,"t some point we do `qeye(L.shape[0])` instead of `qeye(L.dims[0])`. There's sometimes quite a bit of that in older code - it used to slip through because we weren't super strict about dimension handling, so in certain cases (like this one), we'd accept bad dimensions. I might try and have a look tonight (UK time), if I have time - I've wanted to break up the large `propagator` monolith into smaller components for quite a while. ---. About numerical precision: if you want to try increasing the precision of the integrators, try passing `options=qutip.Options(nsteps=1_000_000, atol=1e-12, rtol=1e-10)` to `propagator`. `atol` and `rtol` are absolute and relative tolerances respectively, and `nsteps` is the number of subdivisions the integrator is _allowed_ to take (if it reaches its tolerance goals, it won't take all of them). You'll find that `atol` and `rtol` will have only a loose relation to the tolerance of your fidelity value, because there's a _lot_ of floating-point operations between those points in which the errors compound, and there's a hard limit on the tolerances the integrator can achieve, so you might not be able to get a perfect answer. The fidelity calculation involves finding the square root of a density operator, so that's another large possible source of error. About times: if you only care about the state at the last time, setting `tlist = np.linspace(0, x, 201)` is quite inefficient. Instead, set `tlist = [0, x]`, and then pass `options=qutip.Options(nsteps=<very very big integer>)`. It's more efficient because it doesn't need to achieve tolerance goals and construct/store `Qobj` instances at every intermediate timestep. Temporary workaround: this is _very_ temporary, and generally a bad idea in QuTiP, but you can ""flatten"" all your operators into a single space for now, while we implement a fix. To do that:; ```python; # initial setup; H = qutip.tensor(...); c_ops = [qutip.tensor(...)]. original_dimensions = H.dims.copy(); new_dimensions = list(H.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1585#issuecomment-865903199:962,toler,tolerance,962,https://qutip.org,https://github.com/qutip/qutip/issues/1585#issuecomment-865903199,3,"['error', 'toler']","['errors', 'tolerance', 'tolerances']"
Availability,"tal.py b/qutip/orbital.py; index bb12b71b..7432144d 100644; --- a/qutip/orbital.py; +++ b/qutip/orbital.py; @@ -59,7 +59,7 @@ def orbital(theta, phi, *args):; np.ones((np.size(phi), np.size(theta)),; dtype=complex) * SPlm[1]; for m in range(-l, 0):; - psi = psi + (fac * kf[l - m, 0]) * \; + psi += (fac * kf[l - m, 0]) * \; np.array([np.exp(1.0j * 1 * phi)]).T * \; np.ones((np.size(phi), np.size(theta)), dtype=complex) * \; SPlm[abs(m)]; diff --git a/qutip/pdpsolve.py b/qutip/pdpsolve.py; index 6e915792..77a7af1b 100644; --- a/qutip/pdpsolve.py; +++ b/qutip/pdpsolve.py; @@ -396,7 +396,7 @@ def _ssepdpsolve_generic(sso, options, progress_bar):; for n in range(len(data.times))]; ; # average; - data.expect = data.expect / nt; + data.expect /= nt; ; # standard error; if nt > 1:; @@ -525,7 +525,7 @@ def _smepdpsolve_generic(sso, options, progress_bar):; for n in range(len(data.times))]; ; # average; - data.expect = data.expect / sso.ntraj; + data.expect /= sso.ntraj; ; # standard error; if nt > 1:; diff --git a/qutip/piqs.py b/qutip/piqs.py; index 83144418..eace5620 100644; --- a/qutip/piqs.py; +++ b/qutip/piqs.py; @@ -193,7 +193,7 @@ def dicke_blocks(rho):; start_m = block_position; end_m = block_position + block_size; square_block = rho[start_m:end_m, start_m:end_m]; - block_position = block_position + block_size; + block_position += block_size; square_blocks.append(square_block); ; return square_blocks; @@ -233,12 +233,12 @@ def dicke_blocks_full(rho):; start_m = block_position; end_m = block_position + block_size; square_block = rho[start_m:end_m, start_m:end_m]; - block_position = block_position + block_size; + block_position += block_size; j = N / 2 - k; djn = state_degeneracy(N, j); for block_counter in range(0, djn):; full_blocks.append(square_block / djn) # preserve trace; - k = k + 1; + k += 1; return full_blocks; ; ; @@ -906,7 +906,7 @@ def jspin(N, op=None, basis=""dicke""):; jp_operator[s, s + 1] = ap(j, m - 1); if (s - 1) in range(0, nds):; jm_operator[s, s - 1",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872:12888,error,error,12888,https://qutip.org,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872,1,['error'],['error']
Availability,"tate ... Transform 2-level to eigenbasis and back ... ok; > Transform 10-level real-values to eigenbasis and back ... ok; > Transform 10-level to eigenbasis and back ... ok; > Transform 10-level imag to eigenbasis and back ... ok; > Consistency between transformations of kets and density matrices ... ok; > Check diagonalization via eigenbasis transformation ... ok; > brmesolve: simple qubit ... ok; > brmesolve: c_ops alone ... ok; > brmesolve: c_ops with a_ops ... ok; > brmesolve: harmonic oscillator, zero temperature ... ok; > brmesolve: harmonic oscillator, finite temperature ... ok; > brmesolve: harmonic oscillator, finite temperature, states ... ok; > brmesolve: Jaynes-Cummings model, zero temperature ... ok; > correlation: legacy me and es for oscillator in coherent initial state ... ok; > correlation: comparing me and es for oscillator in coherent initial state ... ok; > correlation: comparing me and mc for driven oscillator in ground state ... ERROR; > correlation: legacy me and es for oscillator in steady-state ... ok; > correlation: comparing me and es for oscillator in steady-state ... ok; > correlation: legacy spectrum from es and pi methods ... ok; > correlation: comparing spectrum from es and fft methods ... ok; > correlation: comparing spectrum from es and pi methods ... ok; > correlation: comparing TLS emission correlations (str-list td format) ... In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(1",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:2347,ERROR,ERROR,2347,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['ERROR'],['ERROR']
Availability,"te(); @@ -901,7 +901,7 @@ def _steadystate_power(L, ss_args):; trow = v[::rhoss.shape[0]+1]; data = v / np.sum(trow); else:; - data = data / la.norm(v); + data /= la.norm(v); ; data = dense2D_to_fastcsr_fmode(vec2mat(data),; rhoss.shape[0],; diff --git a/qutip/stochastic.py b/qutip/stochastic.py; index 49786aca..b9866527 100644; --- a/qutip/stochastic.py; +++ b/qutip/stochastic.py; @@ -1146,7 +1146,7 @@ def general_stochastic(state0, times, d1, d2, e_ops=[], m_ops=[],; if sso.dW_factors is None:; sso.dW_factors = [1.] * len(sso.m_ops); elif len(sso.dW_factors) == 1:; - sso.dW_factors = sso.dW_factors * len(sso.m_ops); + sso.dW_factors *= len(sso.m_ops); elif len(sso.dW_factors) != len(sso.m_ops):; raise ValueError(""The number of dW_factors must fit"" +; "" the number of m_ops.""); @@ -1318,7 +1318,7 @@ def _sesolve_generic(sso, options, progress_bar):; res.states = res.avg_states = avg_states_list; ; # average; - res.expect = res.expect / nt; + res.expect /= nt; ; # standard error; if nt > 1:; diff --git a/qutip/subsystem_apply.py b/qutip/subsystem_apply.py; index ebd81a1b..110f6cca 100644; --- a/qutip/subsystem_apply.py; +++ b/qutip/subsystem_apply.py; @@ -126,7 +126,7 @@ def _one_subsystem_apply(state, channel, idx):; for mul_idx in range(idx):; # print mul_idx; # print subs_dim_ar[mul_idx]; - n_blks = n_blks * subs_dim_ar[mul_idx][0]; + n_blks *= subs_dim_ar[mul_idx][0]; ; blk_sz = state.shape[0] // n_blks; # Apply channel to top subsystem of each block in matrix; @@ -258,5 +258,5 @@ def _subsystem_apply_reference(state, channel, mask):; else qeye(state.dims[0][j]); for j in range(len(state.dims[0]))]; full_oper = tensor(list(map(Qobj, op_iter_list))); - rho_out = rho_out + full_oper * state * full_oper.dag(); + rho_out += full_oper * state * full_oper.dag(); return Qobj(rho_out); diff --git a/qutip/superoperator.py b/qutip/superoperator.py; index dacc0e1e..8d099484 100644; --- a/qutip/superoperator.py; +++ b/qutip/superoperator.py; @@ -112,19 +112,19 @@ def liouvill",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872:21128,error,error,21128,https://qutip.org,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872,1,['error'],['error']
Availability,"tfuncs' extension; > compiling C sources; > C compiler: gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall; > -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2; > -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer; > -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions; > -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error; > -Wp,-D_REENTRANT -fPIC; >; > compile options:; > '-I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/include/python3.5m -c'; > extra options: '-w -ffast-math -O3 -march=native -funroll-loops'; > gcc: qutip/cy/src/zspmv.c; > qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or; > directory; > #include <complex.h>; > ^; > compilation terminated.; > qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or; > directory; > #include <complex.h>; > ^; > compilation terminated.; > error: Command ""gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall; > -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2; > -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer; > -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions; > -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error; > -Wp,-D_REENTRANT -fPIC; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/include/python3.5m -c; > qutip/cy/src/zspmv.c -o; > build/temp.linux-x86_64-3.5/qutip/cy/src/zspmv.o -w -ffast-math -O3; > -march=native -funroll-loops"" failed with exit status 1`; >; > Well, all of them seem to fail with a similar issue. Whatever is exi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639#issuecomment-275734243:5352,error,error,5352,https://qutip.org,https://github.com/qutip/qutip/issues/639#issuecomment-275734243,1,['error'],['error']
Availability,"the best, general way to do it. I think this is part of much larger discussion about how to handle tensor networks - for example, at the moment, `targets` is fine for states and operators, but it won't work for superoperators. I'm not sure that this is solvable in an ergonomic way with QuTiP's current dimensions specifiers, but it's something we're definitely going to look into after the initial release of 5.0. Also, there are already several disparate functions in QuTiP that provide sort-of similar functionality, and I think we need to have a proper go at tidying them all up into one cohesive interface. This includes `subsystem_apply` (most similar to this), but also `ptrace` and `partial_tranpose`, which can be seen as special cases of this exact same type of tensor contraction (not to mention `tensor_contract`!). The other thing from a code perspective is that this doesn't use the data-layer in the intended manner. A lot of this may be because our documentation of the data-layer isn't readily available yet (we weren't expecting interest this early!). It does individual detection on two different types, rather than creating a `Dispatcher` to handle the multiple dispatch over potentially different data types of the two inputs. I would imagine that a better form of organisation for this sort of routine, which will be able to handle arbitrary tensor-network operations, will end up being made up of two components:; 1. a `Dispatcher` version of something akin to `einsum`, with a couple of limitations; 2. a high-level wrapper function to handle the specific case of local multiplication, which examines the dimensions and target specifiers to produce the input to the `einsum`-like function, then calls the `Dispatcher` with this information. I think this form would likely be preferable for several reasons:; 1. it will allow arbitrary mixing of different data types (`CSR` complete space and `Dense` operator, or both `CSR`, or whatever), with the allowed conversions respecti",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566:2305,avail,available,2305,https://qutip.org,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566,1,['avail'],['available']
Availability,"ther libraries want to interact with QuTiP! In the interests of inciting more discussion, I've got thrown in some more discussion points below - I'm 100% sure they're all solvable, but it also seems like there isn't one way that's unambiguously correct to do them, so they're worth discussing. ---. In principle I'm happy to implement this, though I don't really agree with your assertion that `othertype.toqobj()` is bad style! It might be so in Julia, but Python doesn't have all the same multiple-dispatch niceties that Julia has, so at the end of the day, we have to add in a method with a ""magic"" name somewhere, and it all just comes down to choosing the name of the method. The downside to having a magic name is that it means we have to eschew proper namespacing; what if another library one day wants to call their interface the same thing? Then it's completely impossible for a downstream library to interoperate with both. Having conversions be a non-special method of the downstream class, and leaving our constructor unaware of them alleviates that issue. Numpy can get away with squatting the `__array__` name because they're _huge_, but I would argue that if we do it, we could actually _harm_ the quantum software ecosystem in the long-run - what happens when a package better than QuTiP comes along that wants to call its objects `Qobj` as well? Let's face it - it's a pretty straightforward name!. All that said, I am very aware that not everyone agrees with me on this, and I _am_ a big fan of interfaces. Python doesn't give us the tools to do it properly, but we can emulate it, like you suggest. I have a few more considerations to add to a discussion:. 1. we can't have _proper_ namespacing, but let's at least make the magic name `__qutip_qobj__` so we realistically prevent any chance of a clash - by nature of a centralised package manager, we can be sure that no other package will ever be called QuTiP. If it's a hidden name, it doesn't matter how ""pretty"" it is.; 2. havin",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507:1093,down,downstream,1093,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507,1,['down'],['downstream']
Availability,thon3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/cy/openmp/__init__.py 0 0 100%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/cy/pyxbuilder.py 18 11 39%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/hardware_info.py 72 32 56%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/settings.py 24 2 92%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/utilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:50767,ERROR,ERROR,50767,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"to be almost entirely unreliable in these cases, because the segfault may often occur while the garbage collector is running, and that will happen at seemingly non-deterministic times.; - Running files in a slightly different interpreter, running within a test runner with differing numbers of files, doing different work before and after will all cause the segfault to change, and may mask it.; - As annoying as they are, segfaults are actually the _good_ case of the bug - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation completes (it prints ""500""), and _then_ the fault occurs. This along with the error message should hopefully make it clear that an out-of-bounds write occurs occasionally, and it is temperamental where exactly this happens. This is typically not detected until the object is freed, when the Python allocators do a little bit of checksumming. I think that in _all_ cases we're seeing the failure come from the garbage collection, but I can't be 100% certain - note that this almost certainly means the failure is somewhere completely different, and it's only _detected_ at garbage collection. Here is the output of a Python 3.8 crash on the `Malloc.py` file with some additional debugging enabled. This is with Python 3.8.8, Numpy 1.19.2, Scipy 1.6.2 and MKL:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler Malloc.py; 500; Debug memory block at address p=0x7fa2e02de610: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:2041,fault,fault,2041,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,1,['fault'],['fault']
Availability,"to caution you in case you're trying to work towards a PR, because I'm not close to being happy to accept one, yet. If we're going to do this (and we haven't decided if we will yet), we're going to need to get a lot of wide-ranging input from many different libraries, and we'll want to write out a proper design document and get approval of it before we get deep into the implementation. > The latter would make it harder to support multiple versions of qutip in the implementers, but I would not worry too much about it. You can throw an error saying that this other package is not supported and you should either nag it's developers or downgrade qutip.; >; > I'm not particularly worried about the blame: even if the error is thrown from qutip, if the message is clear enough it will be clear that the fault is in the downstream implementors of the API. I'm concerned from a user's perspective. QuTiP has a wide user base, and we're beyond the stage where ""iterate fast and break things"" is ok for us (though of course it's fine and even good for pre-stable libraries, to avoid getting weighed down). We've got to be concerned with backwards and forwards compatibility; what if a user wants to install and use QuTiP and a different library in the same environment _without_ using them together, but can't even have them coexist because of version incompatibilities in optional conversion features? That's frustrating for users, even though it's not really anybody's fault. Bugging developers is fine when people want to use packages that are still maintained, but I'm sure we've all come up against times in research when you get to trying out a package to do one specific thing that's been abandoned for a while. Again, this certainly isn't an unsolvable problem: having versioning in the interface API is one solution to some of these problems. ---. For greater discussion, here's an alternate approach: instead of objects defining `__qutip_qobj__`, instead we expose an entry-point `qutip.Qobj.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691:4263,down,down,4263,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691,1,['down'],['down']
Availability,"to:; > author@noreply.github.com>; > Subject: Re: [qutip/qutip] More detailed information for GSoC 2020 project; > (#1184); >; > Hi Boxi,; >; > Can you please modify the projects of the Wiki page as you deem best?; > All: we can also think of changing the order of them. It may be that; > project #3 is deemed the most important.; >; > Best wishes,; >; > Nathan; >; > Dr. Nathan Shammah; > Postdoctoral Research Scientist; > Theoretical Quantum Physics Laboratory; > RIKEN, Wako, Saitama, Japan; > www.nathanshammah.com; >; >; >; > On Sun, Feb 23, 2020 at 5:42 AM Boxi Li <notifications@github.com> wrote:; >; > > I have some detail information for the GSoC 2020 project ""Error; > mitigation; > > in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > > Wiki page. I post it here so if anyone finds it nice could copy it to the; > > Wiki page.; > >; > > I add some details based on the original description:; > > ------------------------------; > > 1. Error mitigation in QuTiP; > >; > > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > > quantum circuit simulator (which was a GSoC project) providing enhanced; > > features for a pulse-level description of quantum circuits and noise; > > models. A new class Processor and several subclasses are added to; > > represent different platforms for quantum computing. They can transfer a; > > quantum circuit into the corresponding control sequence and simulate the; > > dynamics with QuTiP solvers. Different noise models can be added to; > > qutip.qip.noise to simulate noise in a quantum device.; > >; > > This module is still young and many features can be improved, including; > > new device models, new noise models and integration with the existing; > > general framework for quantum circuits (qutip.qip.circuit). There are; > > also possible applications such as error mitigation techniques [1-3].; > >; > > The tutorial notebooks can be found at; > > http://qutip.org/tutorials.html#nisq. A recent",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:4396,Error,Error,4396,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553,1,['Error'],['Error']
Availability,"torial notebook explicitly as an example how it works on the RIKEN cluster, and I refer to the mpi4py users guide. That being said, we do want to set up an automated test for this, and we do want to understand what went wrong in our initial attempts to set up those tests. The two main problems we encountered were (a) if mpi4py is installed with pip, all mpi_pmap calls hang; (b) if it is installed with conda, test_map_pass_error hangs sometimes.; The difference between pip and conda comes from the fact that mpi4py requires an MPI implementation. If we use mpi4py's GH workflow to install it with pip, it installs MPICH, and with conda, it installs OpenMPI by default. I noticed that in both cases where mpi_pmap hangs, there *are* error messages, but they are captured by pytest and then never printed because the program hangs... Regarding problem (a), in short, it looks like an MPICH bug to me. I thus decided to use OpenMPI instead, and added `conda install ""openmpi<5"" mpi4py` to just one of our test runs (the python 3.12 one). Regarding problem (b), the problem was that we requested more processes than the default number of slots available. With OpenMPI, the default number of slots available is the number of physical cpu cores (which seems to be 2 on the machine running our tests, leaving only one slot for a worker process). In the `parallel` module, if num_cpus is not provided, it defaults to `available_cpu_count()` (which is 4 on this machine, since there are 4 logical cpus). We could try to find a better default value for num_cpus for mpi_pmap, but I feel like writing that well would require deeper MPI knowledge than I have. What I did instead is, I tried to make it clear in the documentation that the default value might be unsuitable for MPI applications, and I emit a warning if the default value is used. At the same time, I set `OMPI_MCA_rmaps_base_oversubscribe=true` in the test run, which allows OpenMPI to create more processes than the number of available slots.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296#issuecomment-1923102432:1585,avail,available,1585,https://qutip.org,https://github.com/qutip/qutip/pull/2296#issuecomment-1923102432,3,['avail'],['available']
Availability,travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/hardware_info.py 72 32 56%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/settings.py 24 2 92%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/utilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:50894,ERROR,ERROR,50894,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"ts > numeric_limits<_IntT>::digits),; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:643:18: error: no template named 'numeric_limits'; int _Bits = (numeric_limits<_IntT>::digits - numeric_limits<_FloatT>::digits)>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:643:50: error: no template named 'numeric_limits'; int _Bits = (numeric_limits<_IntT>::digits - numeric_limits<_FloatT>::digits)>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:648:17: error: no template named 'numeric_limits'; static_assert(numeric_limits<_FloatT>::radix == 2, ""FloatT has incorrect radix"");; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:25: error: no template named 'numeric_limits'; return _FloatBigger ? numeric_limits<_IntT>::max() : (numeric_limits<_IntT>::max() >> _Bits << _Bits);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:58: error: no template named 'numeric_limits'; return _FloatBigger ? numeric_limits<_IntT>::max() : (numeric_limits<_IntT>::max() >> _Bits << _Bits);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:661:16: error: no template named 'numeric_limits'; using _Lim = numeric_limits<_IntT>;; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:664:12: error: use of undeclared identifier '_Lim'; return _Lim::max();; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:665:21: error: use of undeclared identifier '_Lim'; } else if (__r <= _Lim::lowest()) {; ^; /Applications/Xcode.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583:1668,error,error,1668,https://qutip.org,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583,1,['error'],['error']
Availability,"ts<_FloatT>::digits)>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:648:17: error: no template named 'numeric_limits'; static_assert(numeric_limits<_FloatT>::radix == 2, ""FloatT has incorrect radix"");; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:25: error: no template named 'numeric_limits'; return _FloatBigger ? numeric_limits<_IntT>::max() : (numeric_limits<_IntT>::max() >> _Bits << _Bits);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:58: error: no template named 'numeric_limits'; return _FloatBigger ? numeric_limits<_IntT>::max() : (numeric_limits<_IntT>::max() >> _Bits << _Bits);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:661:16: error: no template named 'numeric_limits'; using _Lim = numeric_limits<_IntT>;; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:664:12: error: use of undeclared identifier '_Lim'; return _Lim::max();; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:665:21: error: use of undeclared identifier '_Lim'; } else if (__r <= _Lim::lowest()) {; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:666:12: error: use of undeclared identifier '_Lim'; return _Lim::min();; ^; 11 errors generated.; error: command '/usr/bin/clang' failed with exit code 1; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; ERROR: Failed building wheel for qutip; Failed to build qutip; ERROR: Could not build wheels for qutip, which is required to install pyproject.toml-based projects",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583:2224,error,error,2224,https://qutip.org,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583,1,['error'],['error']
Availability,"ttps://github.com/qutip/qutip/assets/78165605/1c6f0d5b-080f-49e2-98f7-8ead19ef739b width=45% height=45%> <img src=https://github.com/qutip/qutip/assets/78165605/346835ab-5065-4180-b4dd-3a9b8b99dc45 width=45% height=45%>. <img src=https://github.com/qutip/qutip/assets/78165605/20e28bba-a720-4197-b6c8-a5bbb26814ec width=45% height=45%> <img src=https://github.com/qutip/qutip/assets/78165605/8c987724-d7b1-49bb-ab1b-e25908673425 width=45% height=45%>. For before and after changes the plots using the default colors are the same (these are styles 'l', 's' and 'm' in that order):. <img src=https://github.com/qutip/qutip/assets/78165605/3d995e25-8f7e-4240-9707-cb3d6e562cb5 width=30% height=30%> <img src=https://github.com/qutip/qutip/assets/78165605/d1ac9aed-063d-472d-99b7-b935522f308e width=30% height=30%><img src=https://github.com/qutip/qutip/assets/78165605/4dfaa6d9-3691-4e71-83d9-3418869c0103 width=30% height=30%> . Making more tests I found the error with style 'l' that I mentioned in issue #1974, which consisted in an erratic plotting after sorting the points. Here we can see some results of those tests before the changes (style 'l' using the `point_color` and `point_default_color` variables, plus 'm' with the `point_color` variable):. <img src=https://github.com/qutip/qutip/assets/78165605/f8217060-dbff-4012-bf63-98750744e93f width=30% height=30%> <img src=https://github.com/qutip/qutip/assets/78165605/e4e7be6c-6883-4cf5-a71f-1542aea1be75 width=30% height=30%><img src=https://github.com/qutip/qutip/assets/78165605/e6292945-a742-4a10-b434-86b462044049 width=30% height=30%> . And as we can see after the changes, the 'l' style plotting is as expected and the 'm' style plotting has all the colors we defined:. <img src=https://github.com/qutip/qutip/assets/78165605/67fc3442-ad19-45c2-955e-5a7df85217db width=30% height=30%> <img src=https://github.com/qutip/qutip/assets/78165605/4d87cee0-c3c8-46d6-989b-50fac85ec0cd width=30% height=30%><img src=https://github.com/qutip/qut",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2308#issuecomment-1913220617:1661,error,error,1661,https://qutip.org,https://github.com/qutip/qutip/pull/2308#issuecomment-1913220617,1,['error'],['error']
Availability,ttribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53846,ERROR,ERROR,53846,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,ttribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54830,ERROR,ERROR,54830,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,ttribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_wigner.py - AttributeError: module 'qutip' has no attribu...; !!!!!!!!!!!!!!!!!!!,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:55076,ERROR,ERROR,55076,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"tutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278048 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: unitary operator with td list str H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:11458,ERROR,ERROR,11458,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['ERROR'],['ERROR']
Availability,"uage e.g. through quantum assembly language (qasm); > ----------------------------------------------------------------; >; > Best; > Boxi; >; > From: Nathan Shammah<mailto:notifications@github.com>; > Sent: Tuesday, February 25, 2020 8:36 AM; > To: qutip/qutip<mailto:qutip@noreply.github.com>; > Cc: Boxi Li<mailto:etamin1201@gmail.com>; Author<mailto:; > author@noreply.github.com>; > Subject: Re: [qutip/qutip] More detailed information for GSoC 2020 project; > (#1184); >; > Hi Boxi,; >; > Can you please modify the projects of the Wiki page as you deem best?; > All: we can also think of changing the order of them. It may be that; > project #3 is deemed the most important.; >; > Best wishes,; >; > Nathan; >; > Dr. Nathan Shammah; > Postdoctoral Research Scientist; > Theoretical Quantum Physics Laboratory; > RIKEN, Wako, Saitama, Japan; > www.nathanshammah.com; >; >; >; > On Sun, Feb 23, 2020 at 5:42 AM Boxi Li <notifications@github.com> wrote:; >; > > I have some detail information for the GSoC 2020 project ""Error; > mitigation; > > in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > > Wiki page. I post it here so if anyone finds it nice could copy it to the; > > Wiki page.; > >; > > I add some details based on the original description:; > > ------------------------------; > > 1. Error mitigation in QuTiP; > >; > > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > > quantum circuit simulator (which was a GSoC project) providing enhanced; > > features for a pulse-level description of quantum circuits and noise; > > models. A new class Processor and several subclasses are added to; > > represent different platforms for quantum computing. They can transfer a; > > quantum circuit into the corresponding control sequence and simulate the; > > dynamics with QuTiP solvers. Different noise models can be added to; > > qutip.qip.noise to simulate noise in a quantum device.; > >; > > This module is still young and many features can",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:4094,Error,Error,4094,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553,1,['Error'],['Error']
Availability,"ucer. Ok, so now let me cut it down to a minimum `eig.py`:. ```python; import numpy as np; import scipy.linalg. x = np.random.rand(25, 25) + 1j*np.random.rand(25, 25); scipy.linalg.eig(x); ```. Note that this file does not even use `qutip`. You can run `PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py`, and it will occasionally trigger a segfault (it happens to me about 1 in 5 times). It's not always the same message as above, e.g.:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py; python(54517,0x10a5505c0) malloc: Incorrect checksum for freed object 0x7fe6cb4150e0: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(54517,0x10a5505c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ```. However if I run it within valgrind:; ```; jake@tauros$ valgrind --suppressions=valgrind-python.supp python -Xfaulthandler eig.py; ==54530== Memcheck, a memory error detector; ==54530== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==54530== Using Valgrind-3.17.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info; ==54530== Command: python -Xfaulthandler eig.py; ==54530==; ==54530== Invalid write of size 8; ==54530== at 0x10ABF7A8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54530== by 0xFFFFFFFF: ???; ==54530== by 0x103124AFF: ???; ==54530== by 0x10312376F: ???; ==54530== by 0x10550F0BF: ???; ==54530== by 0x3FEFFFFFFFFFFFFF: ???; ```; the exact same. ## Further steps. I'm now reasonably convinced that this isn't directly an issue with QuTiP. I suspect it isn't an issue with `scipy` either, but I'm not sure - it looks like a slight overwrite in MKL on macOS, though it's also possible that `scipy` passes some invalid pointers when dropping down to BLAS/LAPACK. I get the impression that the next steps involve dropping down a level of abstraction, down to Cython to directly call scipy's wrappers, or even fully down t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:7333,error,error,7333,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,1,['error'],['error']
Availability,"ude/python3.5m -c'; > extra options: '-w -ffast-math -O3 -march=native -funroll-loops'; > gcc: qutip/cy/src/zspmv.c; > qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or; > directory; > #include <complex.h>; > ^; > compilation terminated.; > qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or; > directory; > #include <complex.h>; > ^; > compilation terminated.; > error: Command ""gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall; > -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2; > -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer; > -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions; > -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error; > -Wp,-D_REENTRANT -fPIC; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/include/python3.5m -c; > qutip/cy/src/zspmv.c -o; > build/temp.linux-x86_64-3.5/qutip/cy/src/zspmv.o -w -ffast-math -O3; > -march=native -funroll-loops"" failed with exit status 1`; >; > Well, all of them seem to fail with a similar issue. Whatever is exit; > status 1. (This; > <http://stackoverflow.com/questions/35991403/python-pip-install-gives-command-python-setup-py-egg-info-failed-with-error-c> ; >; > is the SO solution I followed, it claims that error code is related to; > operation not permitted or setuptools not being installed. I upgraded; > the setuptools, pip doesn't work with sudo (I'm guessing it shouldn't)); >; > How can I install qutip?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/639>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqa8lboGo7XZN87m_drojuUNduRRVks5rWiL9gaJpZM4Lv_Q7>.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639#issuecomment-275734243:6492,error,error-c,6492,https://qutip.org,https://github.com/qutip/qutip/issues/639#issuecomment-275734243,2,['error'],"['error', 'error-c']"
Availability,"ur quick reply. I am using multiple profilers at the moment,; > but albeit large, the RAM usage may not be the main problem. I am running; > the program on a 2 TB VM as well, and it looks like the maximum of N before; > the program crashes is the same. (N=115 crashes, but there should be enough; > RAM available for this parameter. Now running for N=112.); >; > The specific error I get is the following one:; >; > *Traceback (most recent call last):*; > File ""SPI_V5.py"", line 197, in; > H_BS1=-BS_1/(2.*Dt_BS1)*(a_UPs.dag()*a_LOWs+a_UPs*a_LOWs.dag()+a_UPi.dag(); > *a_LOWi+a_UPi*a_LOWi.dag()); > File ""/usr/local/lib/python3.5/dist-packages/qutip/qobj.py"", line 414, in; > *add*; > out.data = self.data + other.data; > File ""/usr/local/lib/python3.5/dist-packages/scipy/sparse/base.py"", line; > 375, in *add*; > return self._add_sparse(other); > File ""/usr/local/lib/python3.5/dist-packages/scipy/sparse/compressed.py"",; > line 342, in _add_sparse; >; > return self._binopt(other, '*plus*'); > File ""/usr/local/lib/python3.5/dist-packages/qutip/fastsparse.py"", line; > 115, in _binopt; > A = fast_csr_matrix((data, indices, indptr), dtype=data.dtype,; > shape=self.shape); > File ""/usr/local/lib/python3.5/dist-packages/qutip/fastsparse.py"", line; > 60, in *init*; >; > *raise TypeError('fast_csr_matrix allows only int32 indices.') TypeError:; > fast_csr_matrix allows only int32 indices.*; >; > To me, it seems that it is due to a bad type of integer passed to a QuTiP; > function. Do you agree?; > I admit that it is hard to solve a problem without having the code; > available, but perhaps you know more of this specific TypeError in QuTiP.; >; > Best regards,; > Xavier; >; > —; > You are receiving this because you commented.; >; >; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/845#issuecomment-379244228>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqYXgXGvIPRMrvmz5-oYA1GaJo6nkks5tl2VhgaJpZM4TAVAw>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/845#issuecomment-379268268:1853,avail,available,1853,https://qutip.org,https://github.com/qutip/qutip/issues/845#issuecomment-379268268,1,['avail'],['available']
Availability,"useless redundant code. creates so much of a problem. @nonhermitian...merge it please, neill will add the rest",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/341#issuecomment-102252338:8,redundant,redundant,8,https://qutip.org,https://github.com/qutip/qutip/pull/341#issuecomment-102252338,1,['redundant'],['redundant']
Availability,utip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54174,ERROR,ERROR,54174,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,utip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54338,ERROR,ERROR,54338,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"utip-dev/lib/python3.8/site-packages/pluggy/callers.py"", line 187 in _multicall; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/manager.py"", line 84 in <lambda>; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/manager.py"", line 93 in _hookexec; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/hooks.py"", line 286 in __call__; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 162 in main; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 185 in console_main; File ""/Users/jake/.anaconda3/envs/qutip-dev/bin/pytest"", line 11 in <module>; Segmentation fault: 11; ```. This was done with commit 624405e7, SciPy 1.6.2 and Numpy 1.19.5. My BLAS version has chopped and changed an awful lot, but I believe that run was with MKL implementations. The ""random"" stack trace from pytest looks to me like the error came about during garbage collection, and I really don't imagine pytest is to blame. We have in the past had issues with some bad calls in SciPy linalg functions, so it's _possible_ that they are the cause again, but I doubt it; we'd expect the stack traces to reliably show scipy to be the problem in that case. I wasn't able to reproduce this segfault on Windows, but that doesn't mean a huge amount, because I also can't reliably reproduce it on Mac. I suspect that the cause is some dodgy handling of pointers in the `struct CSR_Matrix` type in `qutip/cy/sparse_routines.pxi`, but this is just a suspicion. As far as I remember, I have _never_ seen this segfault when using the `dev.major` branch, which completely removes `CSR_Matrix` and replaces it with a much more robust Cython `CSR` type, which adds to my suspicion, but again, because the reproducer is unreliable, I cannot be sure. I have tried running these failing tests through valgrind before, but unfortunately to no avail.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:6231,error,error,6231,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502,5,"['avail', 'error', 'reliab', 'robust']","['avail', 'error', 'reliably', 'robust']"
Availability,"utip.cy.spmatfuncs.array' has no attribute '__reduce_cython__'; ________________ ERROR collecting qutip/tests/test_brmesolve.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_brmesolve_td.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_brtools.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________ ERROR collecting qutip/tests/test_control_pulseoptim.py ____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:2087,ERROR,ERROR,2087,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"v/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo_factor.StrCoeff size changed, may indicate binary incompatibility. Expected 40 from C header, got 488 from PyObject; return f(*args, **kwds); /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjEvo size changed, may indicate binary incompatibility. Expected 288 from C header, got 296 from PyObject; return f(*args, **kwds); /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjCteDense size changed, may indicate binary incompatibility. Expected 496 from C header, got 504 from PyObject; return f(*args, **kwds); /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjEvoTdDense size changed, may indicate binary incompatibility. Expected 920 from C header, got 928 from PyObject; return f(*args, **kwds); ........Segmentation fault: 11; (qdev) cln-232-18:qutip nathanshammah$ nosetests; /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjCte size changed, may indicate binary incompatibility. Expected 344 from C header, got 352 from PyObject; return f(*args, **kwds); /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjEvoTd size changed, may indicate binary incompatibility. Expected 560 from C header, got 568 from PyObject; return f(*args, **kwds); /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjEvoTdMatched size changed, may indicate binary incompatibility. Expected 1344 from C header, got 1352 from PyObject; return f(*args, **kwds); /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo_factor.CoeffFunc size changed, may indicate binary incompatibility. Expected 32 from C header, got 40 from PyObject; return f(*args, **kwds); /miniconda3/envs/qdev",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:32135,fault,fault,32135,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['fault'],['fault']
Availability,v4.7.5 was released a few weeks ago.; It's available on both conda and pypi.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2251#issuecomment-1956630959:43,avail,available,43,https://qutip.org,https://github.com/qutip/qutip/pull/2251#issuecomment-1956630959,1,['avail'],['available']
Availability,"ver-new-methods. all seem consistent with previous notebook results. **Time Benchmarking**; All the stochastic solvers in those notebooks now run much faster: between a factor 2 and 30 in speedup from last time I ran them, which was consistent with times obtained by @Ericgig and saved in the folder. . I am on Python 3.7.3, I recently updated OS from High Sierra to Mojave, plus some other updates in scipy and numpy, and reinstalled conda, so I am curious to see if these speedups are machine independent, which would be great. My specs; ```; Software	Version; QuTiP	4.4.0.dev0+e1639f73; Numpy	1.16.4; SciPy	1.2.1; matplotlib	3.1.0; Cython	0.29.8; Number of CPUs	2; BLAS Info	INTEL MKL; IPython	7.5.0; Python	3.7.3 (default, Mar 27 2019, 16:54:48) [Clang 4.0.1 (tags/RELEASE_401/final)]; OS	posix [darwin]; Mon Jun 10 21:16:02 2019 JST; ```; Some details:; In cell 6 of development-ssesolver-new-methods, the running time went from over 160 seconds to 6 seconds (x25 speedup). Total run time in cell 21 is now down to 14.22s from 79.46s, cell 24/25 of is now 1.4 seconds down from 14.22s in `smesolve`. `ssesolve` in cell 4 is down from 164.50s to 11.06s. Cell 6 is down to 11.48s from 250s. The next cell checking all solver methods in `ssesolve` is down from 80s to 24s. In the notebook with new smesolve methods, cell 11 with multiple time dependence in sc_ops now runs in 69s instead of 171s. . Also, the benchmarking of the different methods now reads; ```; {'solver': 'euler-maruyama'}; Total run time: 0.21s; Total run time: 0.25s; Total run time: 0.30s; Total run time: 0.38s; Total run time: 0.45s; Total run time: 0.55s; Total run time: 0.67s; Total run time: 0.81s; {'solver': 'platen'}; Total run time: 0.70s; Total run time: 0.90s; Total run time: 1.13s; Total run time: 1.15s; Total run time: 1.41s; Total run time: 1.66s; Total run time: 2.03s; Total run time: 2.47s; {'solver': 'pc-euler'}; Total run time: 0.38s; Total run time: 0.46s; Total run time: 0.58s; Total run time: 0.70s; ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/990#issuecomment-500396003:1285,down,down,1285,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003,1,['down'],['down']
Availability,"why I was suggesting that `object.__qutip_qobj__` should not return a Qobj directly, but rather the data needed by QuTiP to construct a Qobj, and qutip should be free to re-organize it afterwards as he likes. . > 3 - we need to take care to do this in a way that still allows QuTiP to iterate and improve Qobj.__init__ between major versions. You could for example require that `__qutip_qobj__(self, version, *kwargs)` takes in a version of the API? I believe that is what numpy does in `__array_interface__`. And it's on implementers of the interface the burden of checking the api version and throwing an error if it's not supported. Or the inverse, where implementers return whatever data they return and a version of the API they are using, and qutip can throw an error if that is an older version. The latter would make it harder to support multiple versions of qutip in the implementers, but I would not worry too much about it. You can throw an error saying that this other package is not supported and you should either nag it's developers or downgrade qutip. I'm not particularly worried about the blame: even if the error is thrown from qutip, if the message is clear enough it will be clear that the fault is in the downstream implementors of the API. -- ; About keyword handling: copy-pasting the list of kwargs of `Qobj`...; ```python; inpt : array_like = Data for vector/matrix representation of the quantum object.; dims : list = Dimensions of object used for tensor products.; shape : list = Shape of underlying data structure (matrix shape).; copy : bool = Flag specifying whether Qobj should get a copy of the input data, or use the original.; fast : bool = Flag for fast qobj creation when running ode solvers.; ```. For the case of the usage that netket would have, our objects already define the Hilbert space they are acting on (so `dims` and `shape`). `copy` doesn't really make sense for us, because we would be building the representation . The way I see it, `Qobj(other_pkg_o",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825710810:1593,error,error,1593,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825710810,2,"['down', 'error']","['downgrade', 'error']"
Availability,"xception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; !!!!!!!!!!!!!!!!!!! Interrupted: 60 errors during collection !!!!!!!!!!!!!!!!!!!; =========================== 60 error in 1.85 seconds ===========================; (base) cln-232-18:qutip nathanshammah$; ```; this on the 4.4.0 release version. ; On the dev version, ; ```; (qdev) cln-232-18:qutip nathanshammah$ pytest; ============================= test session starts ==============================; platform darwin -- Python 3.7.3, pytest-5.0.1, py-1.8.0, pluggy-0.12.0; rootdir: /Users/nathanshammah/github/qutip; collected 561 items. qutip/tests/test_basis_transformation.py ........ [ 1%]; qutip/tests/test_brmesolve.py Fatal Python error: Fatal Python error: Segmentation fault: 11; (qdev) cln-232-18:qutip nathanshammah$ pytest; ============================= test session starts ==============================; platform darwin -- Python 3.7.3, pytest-5.0.1, py-1.8.0, pluggy-0.12.0; rootdir: /Users/nathanshammah/github/qutip; collected 561 items. qutip/tests/test_basis_transformation.py ........ [ 1%]; qutip/tests/test_brmesolve.py Fatal Python error: Segmentation fault: 11; ```; and with nosetests; ```; (qdev) cln-232-18:qutip nathanshammah$ nosetests; /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjCte size changed, may indicate binary incompatibility. Expected 344 from C header, got 352 from PyObject; return f(*args, **kwds); /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjEvoTd size changed, may indicate binary incompatibility. Expected 560 from C header, got 568 from PyObject; return f(*args, **kwds); /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobje",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:29669,error,error,29669,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,3,"['error', 'fault']","['error', 'fault']"
Availability,"y - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_wigner.py - AttributeError: module 'qutip' has no attribu...; !!!!!!!!!!!!!!!!!!! Interrupted: 65 errors during collection !!!!!!!!!!!!!!!!!!!; ======================== 2 warnings, 65 errors in 2.53s ========================; The command ""pytest --verbosity=1 --disable-pytest-warnings --cov=qutip --pyargs qutip"" exited with 2.; Done. Your build exited with 1.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:55404,ERROR,ERROR,55404,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,10,"['ERROR', 'error']","['ERROR', 'errors']"
Availability,"y given that developing this module is no longer my primary research focus in grad school. There are a few ways we could proceed:; 1. I could refactor the functions into a `Scatterer` class and export only the class, without adding dedicated multiprocessing support. This would make parallelizing parameter searches much more difficult - see my thoughts above.; 2. I could export both the flat functions and the `Scatterer` class (sans multiprocessing) which wraps these functions, and users could use the former for parallel searches. I don't like this option, since it clutters up the module and introduces multiple ways to do things. (""There should be one-- and preferably only one --obvious way to do it."" ~ [the Zen of Python](https://www.python.org/dev/peps/pep-0020/#the-zen-of-python)); 3. We could merge the current version of the module as-is and I can refactor into a class with properly-implemented parallelism in a later version. (I think it would be best to combine this with other similar API-breaking refactorings in v5.0.). Personally, I think option 3 is the best way to proceed. I am committed to maintaining and updating this module in the long term and I do think that refactoring much of QuTiP to be more object-oriented will be a positive change to the framework. However, consider that: (1) properly rewriting this as a class-based module without losing functionality will take some time, (2) there are many other modules (for example, most solvers) which would benefit from being refactored into classes, and (3) rewriting these modules would be a breaking API change. . These reasons make me think it would be best to merge the current module now, including it in version 4.3 of QuTiP, and to refactor this (among many other modules) in version 5.0 of QuTiP. This option would make this module available quickly, would be most consistent with semantic versioning, and would keep this module's structure consistent with QuTiP in both pre-refactor v4.X and post-refactor v5.X.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/848#issuecomment-386114501:3490,avail,available,3490,https://qutip.org,https://github.com/qutip/qutip/pull/848#issuecomment-386114501,1,['avail'],['available']
Availability,"—; Let me begin by saying that I completely understand your concerns. I am not trying to enforce a view on the QuTiP project, but rather as I see; I would like the various frameworks in the vast ‘quantum’ ecosystem to ; coexist in such a way that makes easy for users to jump from one tool to the other easily. I personally envisage an ecosystem where one can write down an hamiltonian in the tool of choice, obtain the exact time evolution with qutip, and maybe have a look at it’s semiclassical trajectory. Jump into netket and check if a variational representation can properly capture the correlations. Trotterize the hamiltonian and get a circuit, without worrying about how to convert from one framework to the other. . I want to start the discussion on this topic eagerly because I am aware that it will take a fairly long time. If there is anything I can do to make your future internal discussions easier, do let me know. > I just want to caution you in case you're trying to work towards a PR. Indeed. I was just trying to play around with this. . > If we're going to do this (and we haven't decided if we will yet), we're going to need to get a lot of wide-ranging input from many different libraries. I completely agree with your approach. I’m simply trying to push for this to be something that will come out in a reasonable timeframe and not be something forgotten. > We've got to be concerned with backwards and forwards compatibility; what if a user wants to install and use QuTiP and a different library in the same environment without using them together, but can't even have them coexist because of version incompatibilities in optional conversion features?. I do understand your point, and I see how you want to be backward and forward compatible, however I don’t think that my proposal would break different tools in the same environment. What I propose would simply prevent `qutip.Qobj(otherlibraryobject)` from working (with an explicative error message) if `otherlibrary` does ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830113742:366,down,down,366,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830113742,1,['down'],['down']
Availability,"’m not sure if it works as I; > expected.; >; > The following is the markdown source code:; >; > -----------------------------------; > ## 1. Error mitigation in QuTiP; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class `Processor` and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > `qutip.qip.noise` to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (`qutip.qip.circuit`). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; >; > ### Expected outcomes; > - More devices defined in the `qutip.qip.device` module. At the moment, we; > have two models: spin chain and cavity QED. We would like to include some; > other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in `qutip.qip.device` and; > `qutip.qip.compiler`; > - Refactoring the circuit compiler to allow simple ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:1794,error,error,1794,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553,1,['error'],['error']
Deployability," #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:4257,Release,Release,4257,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability," #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:10094,Release,Release,10094,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability," #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:16098,Release,Release,16098,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability," #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:22102,Release,Release,22102,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability," 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:6742,Release,Release,6742,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability," 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:12495,Release,Release,12495,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability," 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:18413,Release,Release,18413,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability," 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:24331,Release,Release,24331,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability," +++ qutip/qutip/__init__.py	2024-01-16 03:52:59.780085342 +0100; @@ -53,25 +53,31 @@; except ImportError:; pass; else:; - from qutip.utilities import _version2int; - _cy_require = ""0.29.20""; - _cy_unsupported = ""3.0.0""; - if _version2int(_Cython.__version__) < _version2int(_cy_require):; - warnings.warn(; - ""Old version of Cython detected: needed {}, got {}.""; - .format(_cy_require, _Cython.__version__); - ); - if _version2int(_Cython.__version__) >= _version2int(_cy_unsupported):; - warnings.warn(; - ""The new version of Cython, (>= 3.0.0) is not supported.""; - .format(_Cython.__version__); - ); + from sys import version_info as sys_pyver; + if sys_pyver.major == 3 and sys_pyver.minor >= 12:; + # cython3 not supported on python 3.12; + # see https://github.com/qutip/qutip/issues/2293; + print(f""qutip does not support Cython on Python 3.{sys_pyver.minor} (Issue#2293)""); else:; - # Setup pyximport; - import qutip.cy.pyxbuilder as _pyxbuilder; - _pyxbuilder.install(); - del _pyxbuilder, _Cython, _version2int; - qutip.settings.has_cython = True; + from qutip.utilities import _version2int; + _cy_require = ""0.29.20""; + _cy_unsupported = ""3.0.0""; + if _version2int(_Cython.__version__) < _version2int(_cy_require):; + warnings.warn(; + ""Old version of Cython detected: needed {}, got {}.""; + .format(_cy_require, _Cython.__version__); + ); + if _version2int(_Cython.__version__) >= _version2int(_cy_unsupported):; + warnings.warn(; + ""The new version of Cython, (>= 3.0.0) is not supported.""; + .format(_Cython.__version__); + ); + else:; + # Setup pyximport; + import qutip.cy.pyxbuilder as _pyxbuilder; + _pyxbuilder.install(); + del _pyxbuilder, _Cython, _version2int; + qutip.settings.has_cython = True; ; ; # -----------------------------------------------------------------------------; Index: qutip/qutip/tests/test_brmesolve_td.py; ===================================================================; --- qutip.orig/qutip/tests/test_brmesolve_td.py	2024-01-16 03:52:59.780085342 +0",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293#issuecomment-1893522543:1330,install,install,1330,https://qutip.org,https://github.com/qutip/qutip/issues/2293#issuecomment-1893522543,1,['install'],['install']
Deployability," 2020 project ""Error mitigation; > in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > Wiki page. I post it here so if anyone finds it nice could copy it to the; > Wiki page.; >; > I add some details based on the original description:; > ------------------------------; > 1. Error mitigation in QuTiP; >; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class Processor and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > qutip.qip.noise to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (qutip.qip.circuit). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; > Expected outcomes; >; > - More devices defined in the qutip.qip.device module. At the moment,; > we have two models: spin chain and cavity QED. We would like to include; > some other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:1501,integrat,integration,1501,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313,1,['integrat'],['integration']
Deployability," C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:3417,Release,Release,3417,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability," C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:9170,Release,Release,9170,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability," C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:15088,Release,Release,15088,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability," C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:21006,Release,Release,21006,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability," in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > > Wiki page. I post it here so if anyone finds it nice could copy it to the; > > Wiki page.; > >; > > I add some details based on the original description:; > > ------------------------------; > > 1. Error mitigation in QuTiP; > >; > > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > > quantum circuit simulator (which was a GSoC project) providing enhanced; > > features for a pulse-level description of quantum circuits and noise; > > models. A new class Processor and several subclasses are added to; > > represent different platforms for quantum computing. They can transfer a; > > quantum circuit into the corresponding control sequence and simulate the; > > dynamics with QuTiP solvers. Different noise models can be added to; > > qutip.qip.noise to simulate noise in a quantum device.; > >; > > This module is still young and many features can be improved, including; > > new device models, new noise models and integration with the existing; > > general framework for quantum circuits (qutip.qip.circuit). There are; > > also possible applications such as error mitigation techniques [1-3].; > >; > > The tutorial notebooks can be found at; > > http://qutip.org/tutorials.html#nisq. A recent presentation on the; > FOSDEM; > > conference may help you get an overview (; > > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > > Github Project page for a collection of related issues and ongoing Pull; > > Requests.; > > Expected outcomes; > >; > > - More devices defined in the qutip.qip.device module. At the moment,; > > we have two models: spin chain and cavity QED. We would like to include; > > some other commonly used planform such as Superconducting system, Ion; > trap; > > system or silicon system. Each model will need a new set of control; > > hamiltonian and a compiler that find the control pulse of a quantum gate.; > > This part is gonna involve some p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:5142,integrat,integration,5142,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553,1,['integrat'],['integration']
Deployability," module is small and very focussed. 2. Exactly - it's more of an internal type. Currently `Qobj` converts the underlying data object to dense `ndarray` and prints it for its `repr` method - I don't have any plans to change that, so `Qobj` will still be full and user-facing. My `CSR` repr actually just tells you the same information that `scipy.sparse.csr_matrix` does, just in a slightly more Python-looking form. 3. Yes, in some form or another. Perhaps we could talk about the best way to do that in a future meeting?. 4. `PyDataMem_NEW` isn't actually a Python routine, it's a numpy one, but that's largely irrelevant. The Python equivalent is `cpython.mem.PyMem_Malloc` and family. The reason I don't use the latter in general is because sometimes `PyMem_Malloc` allocates into Python-reserved stack-space, and if we subsequently pass the pointer to numpy, it will try to free it and cause a segfault. The reason for using `malloc` and `free` here is mostly just because there was a comment in the code I copied it from saying that raw `malloc` and `free` were slightly faster for allocating heap space to be released within the same function, so I just did what they did. I can change it - it's not important. When allocating space that _may_ be passed to numpy, I always use `PyDataMem_NEW` (or friends). 5. That's a mistake - I meant to take out that ability in `matmul_csr` because it's just asking for trouble (the user won't know how much space to allocate, and we're basically just asking for a segfault). I did `matmul_csr` first, and I hadn't decided yet exactly what I was doing. 6. Yeah, I'm going to add additional `imul`, `ineg` and `idiv` routines as dispatched operations. 7. LAPACK/BLAS as far as we can. I've no pretense to being able to write faster code than hardware-specific optimised stuff for matrices. I haven't actually written most of the numerical code in this PR either - it's just ported from current `qutip`, with the variable names changed to be more descriptive.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1296#issuecomment-648270004:1964,release,released,1964,https://qutip.org,https://github.com/qutip/qutip/pull/1296#issuecomment-648270004,1,['release'],['released']
Deployability," right now if that internally we'd keep column-stacking/unstacking the state, but in the 5.x branch it'll stop being represented internally by a sparse matrix, and instead it'll be a Fortran-ordered dense matrix, for which the stack/unstack is a free operation. In the form I've written it, this loop is thread-safe already. As it stands in the 4.x series, `mesolve` is re-entrant (I'm fairly sure), but note that it does generally mutate its arguments, especially if you pass a `QobjEvo` Liouvillian as the first argument. As long as you make sure you give each thread a distinct copy of the input Liouvillian, `mesolve` itself doesn't access global state as far as I recall. QuTiP 5 is (probably) going to formalise that (^) sort of low-level calling convention of `mesolve`, but it should work already. The new one look a bit different because instead of doing the setup very manually, there'll be a ""low-level"" function to prepare a master equation problem (and a Schrodinger equation one, etc), and then there'll be a `step` method instead of calling the ""high-level"" interface function `mesolve`, but functionally it'll do largely the same, just with a lot less data copying than the current form has to do. In the new system, it's likely that the function `mesolve` itself will keep the exact same interface it has now, just internally most of its processing will be split into modular components, each of which will be accessible (with different names) to the user to compose themselves, if they want low-level access. We're unlikely to add `yield` to `mesolve` directly because that's a very breaking change to one of QuTiP's core functions (we can't return from a generator, or at least not ergonomically), but we are splitting up the `mesolve` monolith into a much more modular architecture, and making it more user-accessible. The other advantage of this is that the integrator component will just be one element of a composable system, so we'll not be tied to scipy integrators any more.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859873615:4629,integrat,integrator,4629,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859873615,2,['integrat'],"['integrator', 'integrators']"
Deployability," since with numpy now *everything* is dense (including the Hamiltonian), whereas the best thing to do numerically would be to do sparse-matrix-dense-vector operations (which is what we do in Fortran, incidentally). > In the form I've written it, this loop is thread-safe already. As it stands in the 4.x series, `mesolve` is re-entrant (I'm fairly sure), but note that it does generally mutate its arguments, especially if you pass a `QobjEvo` Liouvillian as the first argument. As long as you make sure you give each thread a distinct copy of the input Liouvillian, `mesolve` itself doesn't access global state as far as I recall. Just to be clear: there's two interconnected issues here: One is just being ""reentrant"" in the sense that I can safely have multiple `mesolve`'s run in parallel. This doesn't seem to be a problem for `mesolve` as a whole (propagating over the entire time grid). The other issue, at a lower level is whether I can keep the internal state of the integrator (`scipy.integrate.ode` or whatever else `mesolve` might be using) when propagating a single time step (and whether I can have multiple integrators to run in parallel that each safely keep track of their own state). That comes down to the integrator itself being ""reentrant"", of course. Certainly, calling `mesolve` in a loop (`In [19]`) doesn't keep the internal state of the integrator, hence the overhead between `In [21]` compared to `In [18]`. I wouldn't expect it to, of course, but the question is whether a refactoring of `mesolves` internals into an object that keeps state in a thread-safe way and allows doing time steps would alleviate this overhead (like the `mesolve_prepare_ode(H, state, c_ops) -> OdeState` that you propose in https://github.com/qutip/qutip/issues/1571#issuecomment-859917462). On the other hand, looping over the full `mesolve` as in `In [19]` obviously has no problems with parallelization. I wasn't sure if that's what you meant by ""`mesolve` is re-entrant"" or whether recent ch",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:5991,integrat,integrate,5991,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['integrat'],['integrate']
Deployability," surprised how much better `DensityMatrixODEPropagator` performs compared to looping over `mesolve` (`In [29]` vs `In [21]`): Since the `DensityMatrixODEPropagator` also re-initializes `scipy.integrate.ode` in every time steps, it would seem like the only difference between the two is the overhead of `mesolve` deciding that it has to handle the specific case of density matrix propagation. That might be something to keep an eye on in future QuTiP development: Ideally, calling `mesolve` would have negligible overhead compared to manually doing whatever `mesolve` does internally for a particular case. > We're unlikely to add `yield` to `mesolve` directly because that's a very breaking change to one of QuTiP's core functions (we can't return from a generator, or at least not ergonomically), but we are splitting up the `mesolve` monolith into a much more modular architecture, and making it more user-accessible. The other advantage of this is that the integrator component will just be one element of a composable system, so we'll not be tied to scipy integrators any more. I would absolutely not expect you to modifying how `mesolve` works directly. In fact, I would strongly recommend leaving the `mesolve` interface unchanged. The internal refactoring is all I'm after here. @jakelishman in https://github.com/qutip/qutip/issues/1571#issuecomment-859917462:. > I also note that I'm not replying to the thread I thought I was - I thought I was in `krotov`! For my response to the discussion points:. Yeah, sorry the discussion got a little confused between what I was suggesting in https://github.com/qucontrol/krotov/issues/93 for myself to try out (adding a `yield` to `mesolve` as a dirty hack) and the discussion here about how to address the underlying use case properly in QuTiP itself. So just to be clear: Do *not* add a `yield` to the existing `mesolve` function in QuTiP! I would strongly recommend keeping the existing interface for `mesolve` and just refactor what is going on i",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:9901,integrat,integrator,9901,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,2,['integrat'],"['integrator', 'integrators']"
Deployability," this solver? It seems to be able to produce states which trace is not one, which seems strange. Thank you for your detailed comments! We are here at RIKEN working together with the authors of the paper linked above to try and add this functionality to qutip. So far, this PR is just a starting point for the collaboration, but proper documentation and examples are high on our priority list. To add some very quick explanation here: the master equation describing a general completely positive (but not necessarily CP-divisible) map can involve rate functions that become negative at some times. The usual Monte-Carlo algorithm cannot be applied in this case, but Donvil et al. describe [here](https://www.nature.com/articles/s41467-022-31533-8) and [here](https://arxiv.org/abs/2209.08958) a workaround where states are weighted with an ""influence martingale"". Including this weight, the involved states are indeed not normalized; however, the state that results from an average over sufficiently many trajectories is normalized. (Checking *how well* the average is normalized could maybe be used as an indicator of how good the convergence is, as noted at the top.). > I am not too sure about adding the time parameter to `_restore_state`. In floquet, the state produced need a basis change depending on time, but it was put in the `Result` so the state before and after the transformation can be stored. Maybe something like this would be useful, it would allow the `mu` to be saved in results. Putting this calculation into the `Result` instead does sound reasonable to me. I am unsure how to achieve that in practice though, since the result class used for a single trajectory is hard-coded in mcsolve:; ```; result = Result(e_ops, {**self.options, ""normalize_output"": False}); ```; Note that in principle, we could also get the time from the integrator in _restore_state without adding it as a function parameter. Tagging @hodgestar who suggested adding the time parameter to `_restore_state`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2070#issuecomment-1414634007:1897,integrat,integrator,1897,https://qutip.org,https://github.com/qutip/qutip/pull/2070#issuecomment-1414634007,1,['integrat'],['integrator']
Deployability," time step (and whether I can have multiple integrators to run in parallel that each safely keep track of their own state). That comes down to the integrator itself being ""reentrant"", of course. Certainly, calling `mesolve` in a loop (`In [19]`) doesn't keep the internal state of the integrator, hence the overhead between `In [21]` compared to `In [18]`. I wouldn't expect it to, of course, but the question is whether a refactoring of `mesolves` internals into an object that keeps state in a thread-safe way and allows doing time steps would alleviate this overhead (like the `mesolve_prepare_ode(H, state, c_ops) -> OdeState` that you propose in https://github.com/qutip/qutip/issues/1571#issuecomment-859917462). On the other hand, looping over the full `mesolve` as in `In [19]` obviously has no problems with parallelization. I wasn't sure if that's what you meant by ""`mesolve` is re-entrant"" or whether recent changes in QuTiP now use a re-entrant internal integrator, i.e. not `scipy.integrate.ode`. At the time I implemented the [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/propagators.py#L162) by looking at what `mesolve` was doing at a low level for the specific case of density matrices, `scipy.integrate.ode` was definitely being used, and that couldn't handle propagating in parallel (and by ""parallel"" I include alternating propagation steps from two different propagations). I'm also not sure what using `QobjEvo` does: In the benchmarking, there didn't seem to be any difference whether I wrap my nested lists into `QobjEvo` or not. Is there something specific that `QobjEvo` should enable that I can't do with nested lists?. > QuTiP 5 is (probably) going to formalise that (^) sort of low-level calling convention of `mesolve`, but it should work already. The new one look a bit different because instead of doing the setup very manually, there'll be a ""low-level"" function to prepare a master equat",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:7069,integrat,integrate,7069,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['integrat'],['integrate']
Deployability," used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:1",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:8512,Release,Release,8512,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability," using this draw, so; 389 # don't forget to call the superclass.; 390 super().draw(). File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/artist.py:95, in _finalize_rasterization.<locals>.draw_wrapper(artist, renderer, *args, **kwargs); 93 @wraps(draw); 94 def draw_wrapper(artist, renderer, *args, **kwargs):; ---> 95 result = draw(artist, renderer, *args, **kwargs); 96 if renderer._rasterizing:; 97 renderer.stop_rasterizing(). File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/artist.py:72, in allow_rasterization.<locals>.draw_wrapper(artist, renderer); 69 if artist.get_agg_filter() is not None:; 70 renderer.start_filter(); ---> 72 return draw(artist, renderer); 73 finally:; 74 if artist.get_agg_filter() is not None:. File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/figure.py:3155, in Figure.draw(self, renderer); 3152 # ValueError can occur when resizing a window.; 3154 self.patch.draw(renderer); -> 3155 mimage._draw_list_compositing_images(; 3156 renderer, self, artists, self.suppressComposite); 3158 renderer.close_group('figure'); 3159 finally:. File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/image.py:132, in _draw_list_compositing_images(renderer, parent, artists, suppress_composite); 130 if not_composite or not has_images:; 131 for a in artists:; --> 132 a.draw(renderer); 133 else:; 134 # Composite any adjacent images together; 135 image_group = []. File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/artist.py:72, in allow_rasterization.<locals>.draw_wrapper(artist, renderer); 69 if artist.get_agg_filter() is not None:; 70 renderer.start_filter(); ---> 72 return draw(artist, renderer); 73 finally:; 74 if artist.get_agg_filter() is not None:. File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/mpl_toolkits/mplot3d/axes3d.py:455, in Axes3D.draw(self, renderer);",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2400#issuecomment-2142000903:2519,patch,patch,2519,https://qutip.org,https://github.com/qutip/qutip/issues/2400#issuecomment-2142000903,1,['patch'],['patch']
Deployability,"#1471 is now merged into `master`, so that will be included in 4.next. To help debug this particular issue, could you post the output of `python setup.py install` or `pip install -v`, possibly repeating the `-v` up to 3 times (whichever you were using before). We need to see the compilation commands and compiler output that's being issued during the build process. After that, could you _temporarily_ change this block of code in `qutip/__init__.py`: https://github.com/qutip/qutip/blob/2aaae75d3ba52067f747dd928d67d66307fc5de9/qutip/__init__.py#L100-L107; to; ```python; from qutip.cy.openmp.parfuncs import spmv_csr_openmp; ```; (i.e. remove the entire `try/except` block and leave the import). This will cause QuTiP to throw an exception when you try to import it - could you also post the output of that exception? You'll want to revert that change right after, so you have a functioning version of non-OpenMP QuTiP at the very least.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1378#issuecomment-809390058:154,install,install,154,https://qutip.org,https://github.com/qutip/qutip/issues/1378#issuecomment-809390058,2,['install'],['install']
Deployability,#1621 has been merged and should be included in the 4.6.3 release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1617#issuecomment-893413782:58,release,release,58,https://qutip.org,https://github.com/qutip/qutip/issues/1617#issuecomment-893413782,1,['release'],['release']
Deployability,"* imports first except. ```from qutip.qobj import *```. then we can remove the numpy and scipy checks but numpy is still used to setup pyximport in . ```; # Setup pyximport ; import pyximport; os.environ['CFLAGS'] = '-O2 -w -ffast-math'; pyximport.install(setup_args={'include_dirs': [numpy.get_include()]}); del pyximport; ```. Then we can move the section regarding multiprocessing to some appropiate place. Currently it is used in the following files. Can we put the multiprocessing stuff in a file called `multiprocessing_config.py` and run it to get the settings in `__init__` at all the places where we need multiprocessing.; ```; /Users/shahnawaz/dev/qutip/qutip/__init__.py:; 33 from __future__ import division, print_function, absolute_import; 34 import os; 35: # Fix the multiprocessing issue with NumPy compiled against OPENBLAS; 36 if 'OPENBLAS_MAIN_FREE' not in os.environ:; 37 os.environ['OPENBLAS_MAIN_FREE'] = '1'; ..; 149 # cpu/process configuration; 150 #; 151: import multiprocessing; 152 ; 153 # Check if environ flag for qutip processes is set; ...; 164 qutip.settings.num_cpus = info['cpus']; 165 else:; 166: qutip.settings.num_cpus = multiprocessing.cpu_count(); 167 ; 168 ; ...; 270 # Clean name space; 271 #; 272: del os, sys, numpy, scipy, multiprocessing. /Users/shahnawaz/dev/qutip/qutip/fortran/mcsolve_f90.py:; 83 serial : boolean; 84 If True (default is False) the solver will not make use of the; 85: multiprocessing module, and simply run in serial.; 86 ptrace_sel: list; 87 This optional argument specifies a list of components to keep when; ..; 226 ; 227 def parallel(self):; 228: from multiprocessing import Process, Queue, JoinableQueue; 229 ; 230 if debug:. /Users/shahnawaz/dev/qutip/qutip/hardware_info.py:; 36 import os; 37 import sys; 38: import multiprocessing; 39 ; 40 def _mac_hardware_info():; ..; 91 ncpus += int(cpu.Properties_['NumberOfCores'].Value); 92 except:; 93: ncpus = int(multiprocessing.cpu_count()); 94 return {'os': 'Windows', 'cpus': ncpus",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/580#issuecomment-270871889:1003,configurat,configuration,1003,https://qutip.org,https://github.com/qutip/qutip/issues/580#issuecomment-270871889,1,['configurat'],['configuration']
Deployability,"**Benchmarking**; The results of [development notebooks](https://github.com/qutip/qutip-notebooks/tree/master/development). * development-smesolve-milstein-speed-test.ipynb; * development-smesolver-new-methods.ipynb; * development-smesolve-tests.ipynb; * development-ssesolver-new-methods. all seem consistent with previous notebook results. **Time Benchmarking**; All the stochastic solvers in those notebooks now run much faster: between a factor 2 and 30 in speedup from last time I ran them, which was consistent with times obtained by @Ericgig and saved in the folder. . I am on Python 3.7.3, I recently updated OS from High Sierra to Mojave, plus some other updates in scipy and numpy, and reinstalled conda, so I am curious to see if these speedups are machine independent, which would be great. My specs; ```; Software	Version; QuTiP	4.4.0.dev0+e1639f73; Numpy	1.16.4; SciPy	1.2.1; matplotlib	3.1.0; Cython	0.29.8; Number of CPUs	2; BLAS Info	INTEL MKL; IPython	7.5.0; Python	3.7.3 (default, Mar 27 2019, 16:54:48) [Clang 4.0.1 (tags/RELEASE_401/final)]; OS	posix [darwin]; Mon Jun 10 21:16:02 2019 JST; ```; Some details:; In cell 6 of development-ssesolver-new-methods, the running time went from over 160 seconds to 6 seconds (x25 speedup). Total run time in cell 21 is now down to 14.22s from 79.46s, cell 24/25 of is now 1.4 seconds down from 14.22s in `smesolve`. `ssesolve` in cell 4 is down from 164.50s to 11.06s. Cell 6 is down to 11.48s from 250s. The next cell checking all solver methods in `ssesolve` is down from 80s to 24s. In the notebook with new smesolve methods, cell 11 with multiple time dependence in sc_ops now runs in 69s instead of 171s. . Also, the benchmarking of the different methods now reads; ```; {'solver': 'euler-maruyama'}; Total run time: 0.21s; Total run time: 0.25s; Total run time: 0.30s; Total run time: 0.38s; Total run time: 0.45s; Total run time: 0.55s; Total run time: 0.67s; Total run time: 0.81s; {'solver': 'platen'}; Total run time: 0.70s; Tota",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/990#issuecomment-500396003:609,update,updated,609,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003,2,['update'],"['updated', 'updates']"
Deployability,"**Summary of what was done:**. - Changes in floquet_master_equation_rates to make it faster.; - Corrected transposition errors in _floquet_master_equation_tensor_ and changes to make it faster. I also removed a line so that the ME is solved in the interaction picture, this implies a different basis change in the _floquet_markov_mesolve_ function.; - Correction in _floquet_markov_mesolve_. As explained in the point above, the Floquet-Markov ME was not being solved in the interaction picture, therefore I modified _floquet_master_equation_tensor_ and modified the basis change in _floquet_markov_mesolve_. This modification requires an additional variable in the entry of _floquet_markov_mesolve_ which can not be chosen by default. For the moment, if this variable is not given and _floquet_basis=False_, then the density matrix or expectation values are returned in the interaction picture, in the computational basis, and a warning message is sent. ; - Added integration options in: _floquet_modes, floquet_modes_t, floquet_modes_table, floquet_states_t, floquet_modes_t, floquet_wavefunction_t, fsesolve, floquet_master_equation_rates, fmmesolve_; - Added test functions to verify the dissipative dynamics:; a) Compare _fmmesolve_ and _mesolve_ for the cases: (NO drive but dissipation) and (Drive but NO dissipation); b) Compare numerical and analytical matrix elements for a driven-dissipative TLS with RWA. There are some places where the code could be modified to optimize the running time, especially in the basis change in _floquet_markov_mesolve_.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1248#issuecomment-740126949:965,integrat,integration,965,https://qutip.org,https://github.com/qutip/qutip/pull/1248#issuecomment-740126949,1,['integrat'],['integration']
Deployability,"**Update - Ignore this. This problem was because I called the file ""pyqtgraph"" which conflicted with the library name.**. > As I understand it, the new Mac M1 chips have an ARM-based architecture so there shouldn't be any compatible binary releases on conda yet for macos - I'm surprised conda even claimed to have solved the system. Maybe they've not updated to take the new chips into account either.; > ; > If you can, you might want to try building from source - you'll also need the Python package Cython, but this way should build all the binary components for your architecture. We know (#1395) that there's a minor problem with some hardware detection on the M1 macs at the moment, but you can comment out lines 48 and 49 of `qutip/hardware_info.py` to work around it.; > ; > None of us have one of the new macs, and I think we'll need a new release to get conda-forge updated. It might be a little while before we get that done, sorry. I have the same error on an Intel Mac (11.2.1) having installed pyqtgraph within PyCharm. ```; Connected to pydev debugger (build 203.7148.72); Traceback (most recent call last):; File ""<frozen importlib._bootstrap>"", line 991, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 975, in _find_and_load_unlocked; File ""<frozen importlib._bootstrap>"", line 671, in _load_unlocked; File ""<frozen importlib._bootstrap_external>"", line 783, in exec_module; File ""<frozen importlib._bootstrap>"", line 219, in _call_with_frames_removed; File ""/Users/ben/Library/Application Support/JetBrains/PyCharm2020.3/scratches/pyqtgraph.py"", line 3, in <module>; pg.mkQApp(); AttributeError: partially initialized module 'pyqtgraph' has no attribute 'mkQApp' (most likely due to a circular import). ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-776702708:2,Update,Update,2,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-776702708,6,"['Update', 'install', 'release', 'update']","['Update', 'installed', 'release', 'releases', 'updated']"
Deployability,", but note that it does generally mutate its arguments, especially if you pass a `QobjEvo` Liouvillian as the first argument. As long as you make sure you give each thread a distinct copy of the input Liouvillian, `mesolve` itself doesn't access global state as far as I recall. Just to be clear: there's two interconnected issues here: One is just being ""reentrant"" in the sense that I can safely have multiple `mesolve`'s run in parallel. This doesn't seem to be a problem for `mesolve` as a whole (propagating over the entire time grid). The other issue, at a lower level is whether I can keep the internal state of the integrator (`scipy.integrate.ode` or whatever else `mesolve` might be using) when propagating a single time step (and whether I can have multiple integrators to run in parallel that each safely keep track of their own state). That comes down to the integrator itself being ""reentrant"", of course. Certainly, calling `mesolve` in a loop (`In [19]`) doesn't keep the internal state of the integrator, hence the overhead between `In [21]` compared to `In [18]`. I wouldn't expect it to, of course, but the question is whether a refactoring of `mesolves` internals into an object that keeps state in a thread-safe way and allows doing time steps would alleviate this overhead (like the `mesolve_prepare_ode(H, state, c_ops) -> OdeState` that you propose in https://github.com/qutip/qutip/issues/1571#issuecomment-859917462). On the other hand, looping over the full `mesolve` as in `In [19]` obviously has no problems with parallelization. I wasn't sure if that's what you meant by ""`mesolve` is re-entrant"" or whether recent changes in QuTiP now use a re-entrant internal integrator, i.e. not `scipy.integrate.ode`. At the time I implemented the [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/propagators.py#L162) by looking at what `mesolve` was doing at a low level for the specific case of density ma",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:6359,integrat,integrator,6359,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['integrat'],['integrator']
Deployability,", hence the overhead between `In [21]` compared to `In [18]`. I wouldn't expect it to, of course, but the question is whether a refactoring of `mesolves` internals into an object that keeps state in a thread-safe way and allows doing time steps would alleviate this overhead (like the `mesolve_prepare_ode(H, state, c_ops) -> OdeState` that you propose in https://github.com/qutip/qutip/issues/1571#issuecomment-859917462). On the other hand, looping over the full `mesolve` as in `In [19]` obviously has no problems with parallelization. I wasn't sure if that's what you meant by ""`mesolve` is re-entrant"" or whether recent changes in QuTiP now use a re-entrant internal integrator, i.e. not `scipy.integrate.ode`. At the time I implemented the [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/propagators.py#L162) by looking at what `mesolve` was doing at a low level for the specific case of density matrices, `scipy.integrate.ode` was definitely being used, and that couldn't handle propagating in parallel (and by ""parallel"" I include alternating propagation steps from two different propagations). I'm also not sure what using `QobjEvo` does: In the benchmarking, there didn't seem to be any difference whether I wrap my nested lists into `QobjEvo` or not. Is there something specific that `QobjEvo` should enable that I can't do with nested lists?. > QuTiP 5 is (probably) going to formalise that (^) sort of low-level calling convention of `mesolve`, but it should work already. The new one look a bit different because instead of doing the setup very manually, there'll be a ""low-level"" function to prepare a master equation problem (and a Schrodinger equation one, etc), and then there'll be a `step` method instead of calling the ""high-level"" interface function `mesolve`, but functionally it'll do largely the same, just with a lot less data copying than the current form has to do. In the new system, it's likely",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:7364,integrat,integrate,7364,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['integrat'],['integrate']
Deployability,"- Is there something I can do to support 64 ints? Or should QuTiP be updated?. - About the multiple copies of the density matrix in dense form: should I accept that my program requires hundreds of GB's for particular parameters, or is there a way to work around this?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/845#issuecomment-379697405:69,update,updated,69,https://qutip.org,https://github.com/qutip/qutip/issues/845#issuecomment-379697405,1,['update'],['updated']
Deployability,"-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: for",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:4516,Release,Release,4516,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\si",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:8145,Release,Release,8145,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: for",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:10353,Release,Release,10353,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:13982,Release,Release,13982,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: for",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:16357,Release,Release,16357,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:19986,Release,Release,19986,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: for",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:22361,Release,Release,22361,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > ok; > correlation: comparing TLS emission correlations (fn-list td format) ... ok; > correlation: comparing TLS emission correlations (fn td format) ... ok; > Counting statistics: current and current noise in a DQD model ... ok; > Dispersive cQED Setup: compare unitary matrix for ISWAP and propogator ... ok; > Dispersive cQED Setup: compare unitary matrix for ISWAP, SQRTISWAP, ... ok; > Diagonalization of random two-level system ... ok; > Diagonalization of composite systems ... ok; > Excitation-number-restricted state-space: full state space ..",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:25990,Release,Release,25990,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,". I will briefly summarize what I found out and changed. Setting up and using an MPI environment is surprisingly difficult, and I don't think it is in the scope of qutip to try and make that easier, or guide users to do that. The philosophy here is, if the user can get the `mpi4py.futures.MPIPoolExecutor` to work, then they can also use `mpi_pmap` in qutip. However, I did show in the tutorial notebook explicitly as an example how it works on the RIKEN cluster, and I refer to the mpi4py users guide. That being said, we do want to set up an automated test for this, and we do want to understand what went wrong in our initial attempts to set up those tests. The two main problems we encountered were (a) if mpi4py is installed with pip, all mpi_pmap calls hang; (b) if it is installed with conda, test_map_pass_error hangs sometimes.; The difference between pip and conda comes from the fact that mpi4py requires an MPI implementation. If we use mpi4py's GH workflow to install it with pip, it installs MPICH, and with conda, it installs OpenMPI by default. I noticed that in both cases where mpi_pmap hangs, there *are* error messages, but they are captured by pytest and then never printed because the program hangs... Regarding problem (a), in short, it looks like an MPICH bug to me. I thus decided to use OpenMPI instead, and added `conda install ""openmpi<5"" mpi4py` to just one of our test runs (the python 3.12 one). Regarding problem (b), the problem was that we requested more processes than the default number of slots available. With OpenMPI, the default number of slots available is the number of physical cpu cores (which seems to be 2 on the machine running our tests, leaving only one slot for a worker process). In the `parallel` module, if num_cpus is not provided, it defaults to `available_cpu_count()` (which is 4 on this machine, since there are 4 logical cpus). We could try to find a better default value for num_cpus for mpi_pmap, but I feel like writing that well would r",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296#issuecomment-1923102432:1026,install,install,1026,https://qutip.org,https://github.com/qutip/qutip/pull/2296#issuecomment-1923102432,3,['install'],"['install', 'installs']"
Deployability,".36s; Total run time: 5.51s; Total run time: 6.58s; Total run time: 9.64s; Total run time: 10.74s; Total run time: 12.29s; {'solver': 'pc-euler-2'}; Total run time: 1.54s; Total run time: 1.86s; Total run time: 2.50s; Total run time: 2.79s; Total run time: 3.36s; Total run time: 4.03s; Total run time: 4.98s; Total run time: 6.56s; {'solver': 'explicit1.5'}; Total run time: 5.28s; Total run time: 6.35s; Total run time: 7.74s; Total run time: 8.99s; Total run time: 10.34s; Total run time: 12.41s; Total run time: 15.40s; Total run time: 21.40s; {'solver': 'taylor1.5'}; Total run time: 3.30s; Total run time: 3.85s; Total run time: 4.52s; Total run time: 5.63s; Total run time: 7.22s; Total run time: 8.72s; Total run time: 9.51s; Total run time: 11.84s; {'solver': 'taylor1.5-imp'}; Total run time: 5.43s; Total run time: 6.81s; Total run time: 7.60s; Total run time: 10.05s; Total run time: 11.88s; Total run time: 12.88s; Total run time: 15.63s; Total run time: 22.31s. ```; ; **Minor issue: plots breaking notebook rendering**; Jupyter Notebooks have a broken rendering when cells with plots are run; refreshing the notebook sometimes works fine. This is sometimes fixed in the first place by adding; ```; plt.show(); plt.close(); ```; but not always. Maybe we can have a look at this minor issue in the development notebooks. . **Documentation**; It would really increase the adoption rate if the API doc and User Guide could be updated to highlight the stochastic solvers and new methods. The development notebooks are so well written that drawing from their examples should be simple. . Congratulations @Ericgig for this refurbishment, improvement, optimization and thorough benchmarking investigations of the stochastic solvers, which I hope will be widely tested by @nwlambert @ajgpitch @quantshah (and @fminga) for robustness once merged in the development master branch. I am merging this and the montecarlo split PR, hoping there are no incompatibility issues (#990 --> #991 --> #969).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/990#issuecomment-500396003:6019,update,updated,6019,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003,1,['update'],['updated']
Deployability,".7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:5818,Release,Release,5818,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,".7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:11571,Release,Release,11571,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,".7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:17489,Release,Release,17489,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,".7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:23407,Release,Release,23407,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,".pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\nu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:7705,Release,Release,7705,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,".pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Anaco",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:13458,Release,Release,13458,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,".pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Anaco",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:19376,Release,Release,19376,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,".pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; ok; correlation: comparing TLS emission correlations (fn-list td format) ... ok; correlation: comparing TLS emission correlations (fn td format) ... ok; Counting statistics: current and current noise in a DQD model ... ok; Dispersive cQED Setup: compare unitary matrix for ISWAP and propogator ... ok; Dispersive cQED Setup: compare unitary matrix for ISWAP, SQRTISWAP, ... ok; Diagonalization of random two-level system ... ok; Diagonalization of composite systems ... ok; Excitation-number-restricted state-space: full state space ... ok; Excitation-numbe",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:25294,Release,Release,25294,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,".win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Re",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:6768,Release,Release,6768,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,".win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:7347,Release,Release,7347,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,".win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Re",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:12605,Release,Release,12605,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,".win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:13184,Release,Release,13184,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,".win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Re",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:18609,Release,Release,18609,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,".win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:19188,Release,Release,19188,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,".win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Re",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:24613,Release,Release,24613,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,".win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:25192,Release,Release,25192,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"1. Don't worry, those aren't problems. A problem would just say ""FAIL"". ""XFAIL"" means ""expected to fail"", which in this case is because those tests were written for an older testing framework and haven't been updated yet.; 2. No, you don't need to worry. If it's installed, you'll get a message at the end which says something like; ```====== 1000 passed, 50 skipped, 10 xfailed in 120s ======```; where the numbers and times will be different, but there won't be any red text saying ""10 failed"" (""xfailed"" is fine). If you've installed `qutip` from `conda` following the [recommended instructions here](http://qutip.org/docs/latest/installation.html#platform-independent-installation), then you should have a valid installation without any issues, and Cython should have sorted itself out. The general principle is that installing `qutip` is as easy as running; ```conda install qutip```; if you've got the `conda-forge` channel activated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1222#issuecomment-606166596:209,update,updated,209,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-606166596,8,"['install', 'update']","['install', 'installation', 'installed', 'installing', 'updated']"
Deployability,"1. inside the ""Actions"" tab at the top of the GitHub page, you will only see workflows that are present in the code in the default git branch. `dev.major` isn't QuTiP's default branch, so the workflows won't appear immediately after this is merged, only when the `.github/workflows/build.yml` file also exists in `master`. 2. nothing prevents you from running the workflow on a fork, and there's no way and no reason to prevent this - it's also how I tested it. If you did run it on a fork, you'd be using your own GitHub Actions credits (it doesn't cost us anything because we're an open-source project). Only qutip/qutip knows the secret to publish to PyPI, so no fork can succeed on that. The branch check here serves two purposes: the first is that I needed some ""tickbox"" to let the admin decide at runtime whether they needed to publish the package or just build the wheels for personal download; the second is that we release off release branches, not master, so there needed to be an input to say _which_ branch should be built. 3. it's not 100% necessary, but it's the right thing to do. It decouples the project data from the setup code, which makes it much easier to modify both, and allows other tools to access the data. There are other PEPs in the works as well that will move all this data into `pyproject.toml`, rather than just `setup.cfg`. 4. oh, that's useful. I didn't really know or look into it, because it was only a temporary thing anyway. I might actually retire this PR and make it against `master` instead. It's functionally the same as this one, and most of the diff is the same, except that its `setup.py` is better organised, like Simon suggested.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429#issuecomment-801289045:925,release,release,925,https://qutip.org,https://github.com/qutip/qutip/pull/1429#issuecomment-801289045,2,['release'],['release']
Deployability,"12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unk",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:4371,Release,Release,4371,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unk",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:10208,Release,Release,10208,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unk",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:16212,Release,Release,16212,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unk",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:22216,Release,Release,22216,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"14798043-0.36381018j, 0.19057482+0.j ]],. [[ 0.74030166+0.j , -0.42252924+0.11715014j],; [-0.42252924-0.11715014j, 0.25969834+0.j ]],; [[ 0.76627252+0.j , 0.14479804+0.39765874j],; [ 0.14479804-0.39765874j, 0.23372748+0.j ]],; [[ 0.69965345+0.j , 0.4260361 -0.16920917j],; [ 0.4260361 +0.16920917j, 0.30034655+0.j ]],; [[ 0.80355468+0.j , 0.36706718-0.15204028j],; [ 0.36706718+0.15204028j, 0.19644532+0.j ]]]) . predictions=[mesolve(H,; Qobj(estados_val[i]),; time,list_Jump_op,options=Options(nsteps=1000000000)) for i in range(len(estados_val))]`. ```; `---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-26-ef5799d8412d> in <module>; 26 [ 0.36706718+0.15204028j, 0.19644532+0.j ]]]) ; 27 ; ---> 28 predictions=[mesolve(H,; 29 Qobj(estados_val[i]),; 30 time,list_Jump_op,options=Options(nsteps=1000000000)) for i in range(len(estados_val))]. <ipython-input-26-ef5799d8412d> in <listcomp>(.0); 26 [ 0.36706718+0.15204028j, 0.19644532+0.j ]]]) ; 27 ; ---> 28 predictions=[mesolve(H,; 29 Qobj(estados_val[i]),; 30 time,list_Jump_op,options=Options(nsteps=1000000000)) for i in range(len(estados_val))]. ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 270 func(0., v, *ode_args) + v; 271 ; --> 272 res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, options,; 273 progress_bar, dims=rho0.dims); 274 res.num_collapse = len(c_ops). ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, opt, progress_bar, dims); 515 ; 516 if not r.successful():; --> 517 raise Exception(""ODE integration error: Try to increase ""; 518 ""the allowed number of substeps by increasing ""; 519 ""the nsteps parameter in the Options class.""). Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605#issuecomment-879127553:2117,integrat,integration,2117,https://qutip.org,https://github.com/qutip/qutip/issues/1605#issuecomment-879127553,2,['integrat'],['integration']
Deployability,"2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:14968,Release,Release,14968,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:20972,Release,Release,20972,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"245663589>:; >; > > + self.floquet_basis.T,; > + c_ops,; > + c_op_rates,; > + Hargs,; > + time_sense=time_sense); > +; > + Rate_Qobj_list = [Qobj(; > + RateMat, dims=[[self.Hdim, self.Hdim], [; > + self.Hdim, self.Hdim]],; > + type=""super"",; > + superrep=""super"",; > + copy=False; > + ) for RateMat in RateDic.values()]; > + self.R0 = Rate_Qobj_list[0]; > +; > + self.Rt_timedep_pairs = []; >; > These self.Rt_timedep_pairs are never used?; > ------------------------------; >; > In qutip/solver/flimesolve.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245667295>:; >; > > + floquet : bool,optional {False}; > + Whether to return the state in the floquet basis or laboratory; > + basis.; > +; > + args : dict,optional {None}; > + Not supported; > +; > + .. note::; > + The state must be initialized first by calling ``start`` or; > + ``run``. If ``run`` is called,``step`` will continue from the last; > + time and state obtained.; > + """"""; > + if args:; > + raise ValueError(; > + ""FMESolver cannot update arguments""); > + state = super().step(t); >; > Did you test this?; > I am pretty sure it would not work when time_sense=0.; > ------------------------------; >; > In qutip/solver/flimesolve.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245668542>:; >; > > + RateMat, dims=[[self.Hdim, self.Hdim], [; > + self.Hdim, self.Hdim]],; > + type=""super"",; > + superrep=""super"",; > + copy=False; > + ) for RateMat in RateDic.values()]; > + self.R0 = Rate_Qobj_list[0]; > +; > + self.Rt_timedep_pairs = []; > + for idx, key in enumerate(RateDic.keys()):; > + if key != 0.0:; > + self.Rt_timedep_pairs.append(list([Rate_Qobj_list[idx],; > + 'exp(1j*' + str(; > + key * list(Hargs.values())[0]); > + + '*t)'])); > + self.Rt_timedep_pairs = [list([Rate_Qobj_list[idx],; >; > This is defined twice...; > ------------------------------; >; > In qutip/solver/flimesolve.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245675791>:; >; > > + time_sense=0,; > + quickso",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847:13227,update,update,13227,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847,2,['update'],['update']
Deployability,"4.0.2 is now the latest release on PyPI. ; I can't see why anyone would be installing 4.0.1 now, except from some old package they had downloaded.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/616#issuecomment-270816096:24,release,release,24,https://qutip.org,https://github.com/qutip/qutip/issues/616#issuecomment-270816096,2,"['install', 'release']","['installing', 'release']"
Deployability,4.6.3 has been released.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1766#issuecomment-1097186602:15,release,released,15,https://qutip.org,https://github.com/qutip/qutip/issues/1766#issuecomment-1097186602,1,['release'],['released']
Deployability,"61341876996443e-08]); > ```; > ; > Is it normal? You did not include any test using `time_sense`.; > ; > ​. The relaxation of the secular approximation isn't by direct time-dependence. It was originally, but this was later changed to relax the secular approximation according to the ""importance"" of each term, which is dictated by a quotient. The numerator of the quotient is the product of the FFT coefficients that make up a certain element of the rate matrix super operator, and the denominator is the difference of frequencies between the two elements multiplied by the system frequency omega. When `time_sense` is `0`, the rate matrix is constructed using only the product of FFT coefficients for which the frequency arguments completely cancel. When `timesense` isn't `0`, however, is when that quotient comes into play. In a nutshell, this ends up dividing the rate at which a certain element changes the system by the frequency at which that rate rotates in the Floquet Basis. If the result of the quotient is small, the frequency is much higher than the collapse operator elements actually affect the system, such that it averages out on longer timescales. If the result of the quotient is large, then the collapse operator elements appreciably change the system on a shorter timescale than they rotate, such that their contribution to the overall matrix can't be ignored. If I've explained this poorly, which I suspect is the case since I'm not sure how to add equations here or if that's possible, I can email you with a more thorough explanation. . I haven't included tests for the latter case yet mostly due to my only dealing with systems heavily dictated by their primary frequency, so far. I'm working on a system now that should show different behavior for different secular approximations, but my results look slightly different from the published results such that I'm not sure I'm very confident in what I've done, yet. I'll try to update with a test for this when I can, however.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-1631503788:2610,update,update,2610,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-1631503788,1,['update'],['update']
Deployability,"7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_impo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:6486,Release,Release,6486,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_impo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:12239,Release,Release,12239,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_impo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:18157,Release,Release,18157,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_impo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:24075,Release,Release,24075,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\in",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:7777,Release,Release,7777,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:13614,Release,Release,13614,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:19618,Release,Release,19618,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > ok; > correlation: comparing TLS emission correlations (fn-list td format) ... ok; > correlation: comparing TLS emission correlations (fn td format) ... ok; > Counting statistics: cur",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:25622,Release,Release,25622,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,": warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too man",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:5960,Release,Release,5960,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,": warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too man",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:11713,Release,Release,11713,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,": warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too man",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:17631,Release,Release,17631,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,": warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too man",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:23549,Release,Release,23549,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,":12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_par",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:3875,Release,Release,3875,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,":12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_par",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:9628,Release,Release,9628,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,":12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_par",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:15546,Release,Release,15546,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,":12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_par",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:21464,Release,Release,21464,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,":5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/nu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:6095,Release,Release,6095,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,":5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/nu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:23684,Release,Release,23684,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,":5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/nu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:11848,Release,Release,11848,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,":5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/nu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:17766,Release,Release,17766,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:5081,Release,Release,5081,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:4938,Release,Release,4938,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Us",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:7872,Release,Release,7872,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:10834,Release,Release,10834,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:10691,Release,Release,10691,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\nump",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:13625,Release,Release,13625,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:16752,Release,Release,16752,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:16609,Release,Release,16609,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\nump",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:19543,Release,Release,19543,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:22670,Release,Release,22670,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:22527,Release,Release,22527,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; ok; correlation: comparing TLS emission correlations (fn-list td format) ... ok; correlation: comparing TLS emission correlations (fn td format) ... ok; Counting statistics: current and current noise in a DQD model ... ok; Dispersive cQED Setup: compare unitary matrix for ISWAP and propogator ... ok; Dispersive cQED Setup: compare unitary matrix for ISWAP, SQRTISWAP, ... ok; Diagonalization of random two-level system ... ok; Diagonalization of composite systems ... ok; Excitation-number-restricted state-space: full state space ... ok; Excitation-number-restricted state space: single excitations ... ok; Excitation-number-restricted state space: two excitations ... ok; Excitation-number-restricted state space: fock s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:25461,Release,Release,25461,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"; rhoss = steadystate(L); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 290, in steadystate; return _steadystate_direct_sparse(A, ss_args); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 460, in _steadystate_direct_sparse; weighted_matching=ss_args['weighted_matching']); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 393, in mkl_spsolve; x = lu.solve(b, verbose=verbose); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 170, in solve; np_x, np_error); OSError: exception: access violation reading 0x0000000099EC80F8. ======================================================================; ERROR: MKL spsolve : Hermitian (real) solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_mkl.py"", line 230, in test_mkl_spsolve10; y = mkl_spsolve(A, b, hermitian=1); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 414, in mkl_spsolve; lu.delete(); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 208, in delete; byref(c_int(0)), np_error); OSError: exception: access violation reading 0x00000006FFFFFFEF. ======================================================================; ```; Enviroment:; ```; QuTiP Version: 4.4.0.dev0+73a27971; Numpy Version: 1.16.2; Scipy Version: 1.2.1; Cython Version: 0.29.6; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 12; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\qutip-4.4.0.dev0+73a27971-py3.7-win-amd64.egg\qutip; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975#issuecomment-483000016:2386,Install,Installed,2386,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-483000016,2,['Install'],"['Installation', 'Installed']"
Deployability,"> ; > ; > @thangleiter can you try with the dependencies (cython numpy scipy nose matplotlib)? What Python are you using and what OS?. I am building (and running) the Docker image from Windows 10 1803 Education. The image itself is based on Alpine Linux (see [https://github.com/ContinuumIO/docker-images/tree/master/miniconda3](url)) and runs Python 3.7.1 (or lower, depending on the qutip version's requirements). Explicitly installing the dependencies also results in an `Illegal Instruction`. The dockerfile for reference:; ```dockerfile; FROM continuumio/miniconda3. RUN conda config --append channels conda-forge && conda update -y --quiet conda && conda install -y --quiet qutip cython numpy scipy nose matplotlib; ```. Edit: Some further investigation revealed that the crash also happens in the WSL Ubuntu shell with miniconda manually installed and Python 3.6 and 3.7. It doesn't crash with the same setup and Python 3.5, however. Edit 2: Installing via pip or from source works with Python 3.7 and qutip 4.3.1, so the problem is definitely the conda package.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-480771908:427,install,installing,427,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-480771908,5,"['Install', 'install', 'update']","['Installing', 'install', 'installed', 'installing', 'update']"
Deployability,> ; > ; > @thangleiter try to put qutip last: conda install cython numpy scipy qutip. Also check now with 4.4.0 release. Seems like it works with qutip 4.4.0 👍. The position in the conda install command doesn't seem to have any effect.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-518625261:52,install,install,52,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-518625261,3,"['install', 'release']","['install', 'release']"
Deployability,"> ; > ; > I have been trying out pytest for the last couple of days and we can start by using it for the testing as it is now. We need to replace installation [lines](https://github.com/qutip/qutip/blob/master/.travis.yml#L23) like this in the .travis.yml file to install pytest:; > ; > ```; > conda install mkl blas=*=mkl numpy scipy pytest cython coveralls pytest-cov; > ```; > ; > and then change the runner script to use pytest instead of `nose` by changing:; > ; > ```; > nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; > ```; > ; > to; > ; > ```; > pytest --verbosity=1 --cov=qutip qutip; > ```. I have submitted a pull request with these changes. Travis build fails with error ""file not found: qutip"". I suspect it is a problem with pytest, and I am investigating.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/958#issuecomment-481026053:146,install,installation,146,https://qutip.org,https://github.com/qutip/qutip/issues/958#issuecomment-481026053,3,['install'],"['install', 'installation']"
Deployability,"> @cgranade I'm really liking the overall look of the Instrument class -- it's a much easier way to deal with measurements than calling the measurement operations all the time & of combine measurement operations with other operations on Qobjs. Thank you for the kind words!. > I'm keen to hear feedback from others too, but in the mean time I'm going to note some thoughts here for when I come back to this:; > ; > * It would be good to think about how all the operations on Qobj match up with QuTiP version 5 (since this draft is based on v4 currently).; > * We should decide whether to target QuTiP 4.7 or 4.7 and 5 for this. Target just v5 means not having to worry about making it nice in both, but will mean it'll be a bit more of a delay before release).; > . I'll admit I've not kept up as much with the 5.0 changes as I should have, but I'm happy either way; I can definitely see the benefit to targeting 5.0 and keeping code maintenance down, or to getting the feature out for folks to use sooner at the cost of more development work. > * I'd like to think about removing `Seq` and `Par` and replacing them with some simple rules for sequences, strings and numbers. Honestly, agreed; I tried a few different designs to try and get rid of those two classes, but they all felt a bit awkward and special-cased. Happy to revise, though, to lower the barrier to using the new feature. > This would match, e.g., `qutip.ket(""01"")` and `qutip.basis([2, 2], [0, 1])`. `Seq` and `Par` do however make it really clear that in one case measurements follow each other on the same subspaces and in the other they are performed simultaneously on different subspaces, so I'm not quite sure. Maybe there is some middle ground. My initial thought was to do something like use tuples instead of `Seq` and lists instead of `Par`, but that then ran into a couple issues. Namely, it wasn't as obvious what each kind of container meant, and it was harder to automatically flatten (e.g.: `Seq(1, Seq(2, 3), 4)` is id",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1687#issuecomment-951352562:751,release,release,751,https://qutip.org,https://github.com/qutip/qutip/pull/1687#issuecomment-951352562,1,['release'],['release']
Deployability,"> @hodgestar since yesterday our tests are failing for python3.9 ubuntu, but I can't reproduce the error locally... I you have time could you take a look. I haven't managed to reproduce locally either yet and the test failures are odd. There was an update to `ubuntu-latest` on `11 October 2021` so maybe that is related somehow? See https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md. I've also clicked ""rerun"" in case there was some transient error with the roll out of the Ubuntu update to GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1689#issuecomment-944354143:249,update,update,249,https://qutip.org,https://github.com/qutip/qutip/pull/1689#issuecomment-944354143,2,['update'],['update']
Deployability,"> As I understand it, the only way to avoid needing to touch `MANIFEST.in` is to not have files distributed with the test suite (or to have the temporary files by `*.py`, since `setup.py` automatically recognises them). That's not really a pytest thing, it's a `setuptools` one.; > ; > I don't think there's a problem distributing files as part of the tests. You can add a line which says; > ; > ```; > recursive-include qutip/tests/qasm_files *.qasm; > ```; > ; > to `MANIFEST.in`, and that should hopefully fix the problem. You won't have the problem locally, because you'll be running `./setup.py develop`, which ""installs"" in-place, so you don't notice the fact that you've missed files from the manifest. In the tests, it runs `./setup.py install`, which does the copy, missing files which aren't in the manifest.; > ; > Boxi: I'm not certain what more you'd like to do with fixtures here. Fixtures are good for setup and tear down, parametrisation and sharing resources (like network connections), but I'm not certain what further benefit you get for a test function which is testing whether it can open a known file, read it, and construct the expected output. I think Sidhant is already doing some nice parametrisation of his tests, from what I see.; > ; > Sidhant: I added a comment on the exception test, since pytest gives us an easier-to-read context manager you can use. It's also typically better practice to handle file paths like I did in that (using the overloaded `/` operator with `pathlib.Path`, or `os.path.join`) rather than manually putting in slashes. Windows _usually_ will do the right thing now with slashes, but it's better to let Python handle it for us. Thanks for this information, it seems to work ! I was wondering if the following statement is still needed (at all) in `PACKAGE_DATA` in setup.py? ; `'qutip/tests/qasm_files': ['*.qasm'],`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1291#issuecomment-656450639:617,install,installs,617,https://qutip.org,https://github.com/qutip/qutip/pull/1291#issuecomment-656450639,2,['install'],"['install', 'installs']"
Deployability,"> Assuming Simon's point isn't just a complete answer to your question: in the general case, this is an impossible question to answer - it touches on many parts of numerical integration, such as tolerance limits and adaptive step-size methods. When you're dealing with completely arbitrary time-dependence, there's not really any one-size-fits-all approach that'll work (despite how RK45 is often taught as a magic bullet in physics courses).; > ; > Here, you will likely find that your RK45 results depend strongly on how many intermediate timesteps you use, whereas QuTiP's results will be (marginally) more stable. This is because QuTiP will internally subdivide the timesteps more to achieve internal precision goals, but then only returns the results at the time points you ask for. You can increase the maximum number of allowed subdivisions by increasing the `nsteps` parameter in a `qutip.Options` object, and with the `options` keyword argument. I addressed Simon's question. Also, I tried different solver options in mesolve including solver type, nsteps, relative and absolute tolerence, etc ... Also for RK45 I tried to change the parameters in order to see if the solutions coincide. They didn't. I don't know if there exists an analytically solvable problem in which both Hamiltonian and dissipation operators are time dependent, but if there is such a problem, then I can use it as a benchmark in order to compare QuTiP and RK45.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733#issuecomment-986665248:174,integrat,integration,174,https://qutip.org,https://github.com/qutip/qutip/issues/1733#issuecomment-986665248,1,['integrat'],['integration']
Deployability,"> From what I understand, on intel, brmesolve seems to work correctly, but not on M1. This look like an issue with the eigensolver. Exactly. > Could you run the test suite to see if it fails the eigen and bloch redfield related tests: `pytest path_to_qutip/qutip/tests`. (Tests can take >30min). Yes it is failing these (and some others), but in particular it does fail everything in test_brmesolve.py and test_brmesolve_td.py. All failures I find seem to be related to the `Exception: ODE integration error` as mentioned in the original post.; On an emulated Intel terminal, the tests are all passing as expected.; This is strange, since I seem to find way more tests failing than reported in #1755.; Perhaps this is an issue with my installation, rather than qutip itself. I installed it in the standard way using conda (using the Apple Silicon version at 4.13). > Also could you look at the tensor directly:; > ; > ```; > R, H_eigenvector = bloch_redfield_tensor(sigmax(), a_ops=[[sigmax(), psd]]); > ```; > ; > If the tensor is wrong on M1, this would explain the error. Actually, that looks fine surprisingly enough (agrees with the Intel version). Thanks for the quick response. If I figure anything out, i'll let you know.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965#issuecomment-1203341063:490,integrat,integration,490,https://qutip.org,https://github.com/qutip/qutip/issues/1965#issuecomment-1203341063,3,"['install', 'integrat']","['installation', 'installed', 'integration']"
Deployability,"> Hi, could you please tell us how you installed QuTiP and which python are you using? Just type the following in the terminal; > ; > ```; > which python; > ```; > ; > To check how QuTiP was installed (if on Linux or Mac):; > ; > ```; > pip freeze | grep ""qutip""; > ```; > ; > If on windows, download Anaconda and install QuTiP from conda-forge with; > ; > ```; > conda install -c conda-forge qutip; > ```; I created an environment for qutip and then used the following code ; conda install -c conda-forge qutip. I'm still seeing this error ModuleNotFoundError: No module named 'qutip'",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-647267470:39,install,installed,39,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-647267470,5,['install'],"['install', 'installed']"
Deployability,"> Hi,; > ; > I installed qutip on my windows system and tried the testing codes and faced the problem (as the figure shows):; > ; > TypeError: Cannot convert _UnitedFuncCaller to qutip.cy.cqobjevo_factor.CoeffFunc; > ; > ![image](https://user-images.githubusercontent.com/13745165/60830800-9a9e5e00-a1ea-11e9-99d7-2ec24390083e.png); > ; > Here is the about() information:; > ; > QuTiP: Quantum Toolbox in Python; > Copyright (c) 2011 and later.; > A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade; > ; > QuTiP Version: 4.4.0.dev0; > Numpy Version: 1.16.4; > Scipy Version: 1.2.1; > Cython Version: 0.29.11; > Matplotlib Version: 3.1.0; > Python Version: 3.7.3; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: True; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Anaconda\envs\qutip\lib\site-packages\qutip-4.4.0.dev0-py3.7-win-amd64.egg\qutip; > ; > I would appreciate it if you can give me some advice to help me pass the testing codes!. Hi,; Has this problem been solved? I met this same error when installing qutip-4.4.0.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-519833092:15,install,installed,15,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-519833092,4,"['Install', 'install']","['Installation', 'Installed', 'installed', 'installing']"
Deployability,"> How did you install QuTiP?. In the FreeBSD, after QuTiP has been built, I run ```python -c ""import qutip.testing as qt; qt.run();""```, and it fails.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/891#issuecomment-403715589:14,install,install,14,https://qutip.org,https://github.com/qutip/qutip/issues/891#issuecomment-403715589,1,['install'],['install']
Deployability,"> I addressed all your comments in my new commit, but when I try to run the tests with pytest I get a strange error:. This is likely because qutip is not correctly installed. Could you try uninstalling qutip and reinstalling again?. > Also, to avoid the circular import problem with tensor, would it be better if I created a new py file (qutip.core.fermionic_operators.py) for these new operators? . A new file for this seems too much for me... I think `operators.py` is the best choice but it includes indeed mostly basic operators not using `tensor`. Maybe there is a better place for this @Ericgig ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2166#issuecomment-1565683451:164,install,installed,164,https://qutip.org,https://github.com/qutip/qutip/pull/2166#issuecomment-1565683451,1,['install'],['installed']
Deployability,"> I am using Anaconda on windows 10 and installed qutip from conda-forge package, I don't have VS-15 on my system, Is it possible that that I could run qutip with VS-15 runtime liberaries instead of complete installation of visual studio. If it is possible please guide me. Dear Bilal I am quite new to use python and qutip.... some how i am not able installed qutip from conda-forge package on window 10..... can you please let us know the step wise installation. (waseem)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/826#issuecomment-480478000:40,install,installed,40,https://qutip.org,https://github.com/qutip/qutip/issues/826#issuecomment-480478000,4,['install'],"['installation', 'installed']"
Deployability,"> I believe that `MultiTrajSolverImprovedSampling` and `MultiTrajResultImprovedSampling`. We only need one new class for the solver and result, not 2 each. It would even be nice if it could be inserted into `MCSolver` without making the code to messy...; >; Agreed ; > I believe that a scaling should be applied in to the `McResult.photocurrent` method. Could you check. It's an histogram of the jumps times.; > ; Yes you're right, sorry I missed that. Should be fixed now.; > The last issue is whether to make a new function or not. I feel it belong as an options in the existing mscolve, but it would be easy to overlook by users. As a new function it will get more attention. I also don't have a strong opinion on the matter.; >; I think you are right. I added it as an option to options and updated tests, docs accordingly.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2218#issuecomment-1692317449:795,update,updated,795,https://qutip.org,https://github.com/qutip/qutip/pull/2218#issuecomment-1692317449,1,['update'],['updated']
Deployability,"> I did the pycodestyle on my code, but it is highlighting errors that were there in the original code. It returned lines that have >linespace errors and more, should I edit them too?. I am going to leave this up to you. It is not required as long as the lines you modified follow PEP8. Although, fixing the output of pycodestyle in the same file would be very much welcome :smile:. > The issue was to add __repr__ function to QobjEvo class. Do I need to add a test? If so, can someone help me with it?. We will indeed need a test for repr. It does not need to be very complicated and in fact, something similar to what you show in the description of this pr should work. In this case, we would create a few different `QobjEvo` that cover most of the cases and we would check that `qobjevo.__rerp__()` returns the expected string. This test should go in `qutip/tests/core/test_qobjevo.py`. You can take a look there to see example of how the tests are written. If this is your first time writing tests you may want to take a look at [our documentation](https://qutip.readthedocs.io/en/master/development/contributing.html#testing) and also at pytests documentation. > If the behavior of the code has changed or new feature has been added, please also update the documentation in the doc folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure. This will not be necessary this time. > Include the changelog in a file named: doc/changes/<PR number>.<type> 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information). `feature` should work here.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2111#issuecomment-1455087838:1251,update,update,1251,https://qutip.org,https://github.com/qutip/qutip/pull/2111#issuecomment-1455087838,1,['update'],['update']
Deployability,"> I don’t know. It worked for me when I tried to install QuTiP from source —with-openmp. The error was a different and I am on a different MacOS (I also tried a conda install llvm, but what worked was gcc for me, with openmp). I understand that you trying to install QuTiP? If so, how? conda / source / pip? Consider doing it via conda if you are interested in the stable version release (4.3), by activating the conda-forge channel as detailed in the documentation. If QuTiP is installed and you receive this error while doing a specific task, can you copy paste the message of qutip.about() here?; > […](#); > On Sat, 9 Mar 2019 at 14:37, Xiao ***@***.***> wrote: Try conda install gcc. Does that mean I should use gcc from the Anaconda directory? — You are receiving this because you commented. Reply to this email directly, view it on GitHub <[#965 (comment)](https://github.com/qutip/qutip/issues/965#issuecomment-471148065)>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AN5ffFcanH6qaCezLIKtW4SflaVsZ63Aks5vU0iCgaJpZM4bmfhd> . I am installing QuTip from compiling the source code, because I want to use MKL. I didn't use the --with-openmp option as MKL is already openmp threaded. . After ""conda install gcc"" the compilation is passed and QuTip can be so far used without problems. Thanks for your help.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/965#issuecomment-471155651:49,install,install,49,https://qutip.org,https://github.com/qutip/qutip/issues/965#issuecomment-471155651,8,"['install', 'release']","['install', 'installed', 'installing', 'release']"
Deployability,"> I had this issue as well, and conda install gcc was insufficient.; > What appears to have worked for me is:; > ; > * Edit ~/.qutip/qutiprc to set the compiler to use gcc-8 by hand; > * running xcode-select --install; > Working so far. Hi, I also faced this problem and I can't find qutiprc file in my home directory. Do you know where it could be? Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/965#issuecomment-509237637:38,install,install,38,https://qutip.org,https://github.com/qutip/qutip/issues/965#issuecomment-509237637,2,['install'],['install']
Deployability,"> I solved this by adding C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\ to the PATH variable. I don't know why, but setting the PATH variable does not work for me :(; I was using VS2017 before installing qutip. It was recommended that qutip should work with VS2015 on windows. So I uninstalled VS2017 and reinstalled VS2015. I guess something went wrong in this process, but I haven't figured out what it is.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1026#issuecomment-506745768:207,install,installing,207,https://qutip.org,https://github.com/qutip/qutip/issues/1026#issuecomment-506745768,1,['install'],['installing']
Deployability,"> I suspect the method of using QobjEvo that was suggested above only use two time steps (initial and final time) in evolving the Hamiltonian as the seed and interpolate the Hamiltonian at the time between the initial and final time using some interpolation function. This is not the case. The answer to your question is to use `QobjEvo` as suggested. For example, here is a simple example using a fast-oscillating array function in a `QobjEvo` and a much shorter `tlist` in `mesolve`. You may need to set the solver options `nsteps`, `atol` and `rtol` to suitable values, as I have done here. ```python; import qutip; import numpy as np. fast_ts = np.linspace(0, 1, 1001); fast_xs = 2.9e3*np.pi * np.cos(2*np.pi * 2.91e2 * fast_ts); # This is the behaviour you were suggesting is happening.; bad_interpolation_xs = np.array([fast_xs[0], fast_xs[-1]]). H = qutip.QobjEvo([[qutip.sigmax(), fast_xs]], tlist=fast_ts); H_bad = [[qutip.sigmax(), bad_interpolation_xs]]; rho = qutip.basis(2, 0).proj(); times = np.array([0., 1]); e_ops = [qutip.sigmay()]; options = qutip.Options(nsteps=10_000_000, atol=1e-14, rtol=1e-12). two_times = qutip.mesolve(H, rho, times, e_ops=e_ops, options=options); many_times = qutip.mesolve(H, rho, fast_ts, e_ops=e_ops, options=options); bad_times = qutip.mesolve(H_bad, rho, times, e_ops=e_ops, options=options). assert len(two_times.expect[0]) == 2; assert len(many_times.expect[0]) == 1001. print(two_times.expect[0][-1]) # -0.59736575; print(many_times.expect[0][-1]) # -0.59736575; print(bad_times.expect[0][-1]) # -4.5466086e-08; ```. You can see that I was able to do a successful integration with only 2 times in `mesolve`, but many in a fast-oscillating Hamiltonian. Clearly the `bad_times` version (which only has the start and end points so misses all the fast oscillation behaviour) is completely different to the other two versions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1472#issuecomment-810246525:1616,integrat,integration,1616,https://qutip.org,https://github.com/qutip/qutip/issues/1472#issuecomment-810246525,1,['integrat'],['integration']
Deployability,"> I think it is better to keep this on hold, and merge it after the upcoming release, also as my comments have not been addressed. Sorry for the late reply. I think it would be better to keep it in the project tab. Code Climate Issues will be delt soon enough. I suppose it would be better if the advantage of #1090 is taken to support measurement in the qutip-circuit before moving on to Qiskit.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1140#issuecomment-590470786:77,release,release,77,https://qutip.org,https://github.com/qutip/qutip/pull/1140#issuecomment-590470786,1,['release'],['release']
Deployability,"> I think that the rendering is executed through the Visual Studio extension called ""[Jupyter Notebook Renderers](https://marketplace.visualstudio.com/items?itemName=ms-toolsai.jupyter-renderers)"".; > ; > I apparently solved this issue by simply downgrading the version of this extension, since I read in the changelog of the latest version ""Removed rendering of text/latex in favor of built-in support."". Thus the problem was in the Visual Studio part, however it still remain opened in the case one decide to install the latest version of this extension.; > ; > Thank you. Thank you so much for sharing this!. The cell outputs that included Qobj with Latex code wasn't rendering properly for me just like your issue (although Latex code in the Markdown cells was rendering correctly). I spent hours and tried countless online suggestions to fix the issue with no success, until I re-installed the the 'Jupyter Notebook 'Renderers' extension to the old version (v1.0.4) before it removed the latex support. Now I have the option to 'change presentation' of the output cells so it uses the old version of the extension, and now it finally displays the output with the Latex rendered correctly!. Thank you again for suggesting the only solution that worked for me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1809#issuecomment-1633135302:511,install,install,511,https://qutip.org,https://github.com/qutip/qutip/issues/1809#issuecomment-1633135302,2,['install'],"['install', 'installed']"
Deployability,"> I think the `.integrate(t, step=....)` interface is currently way too complex, as evidenced by the difficulty of implementing it and the hard to resolve issues.; > ; > SciPy has a much simpler ODE interface -- see https://github.com/scipy/scipy/blob/v1.7.1/scipy/integrate/_ivp/base.py#L25-L214. Essentially a single `.step()` function.; > ; > Is there a reason we could not implement something similar here, and just have one `.step()` method and then implement `.integrate()` on top of that?. The `.step()` is essentially `.integrate(self.t)`, sot there would be no need for both.; If you mean having `step()` always advance one internal integrator step, we don't always have that possibility, `dop853` cannot advance only one step. And it would require to safe `self.back` each time even when not needed.; If you want a method to just advance to the time `t`, what ever it is as `scipy` seems to do, it will crush `mcsolve` speed. `mcsolve` has a root finding step that require a some back and forth and ode schemes all have their quirks when doing this. For actual use `integrate`, `step` and `backstep` can be 3 methods. I had this in the evolver PR but was told to merge them... The complexity could be split: have `integrate` for normal evolution (`sesovle`, `mesolve`), and `step` or `mcstep` for `mcsolve`.; This would also make it easier to create new Integrator for special use, it is easier to choose not to support `mcsolve` if the logic is split.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1643#issuecomment-925988667:16,integrat,integrate,16,https://qutip.org,https://github.com/qutip/qutip/pull/1643#issuecomment-925988667,8,"['Integrat', 'integrat']","['Integrator', 'integrate', 'integrator']"
Deployability,"> I understand `[full]` as ""installing everything that might be needed so that I can run everything without any ImportError"". So this means that it includes `[qip]`. However, I do get your concern that this will probably make the option `[full]` larger and larger in the future. Perhaps installing `qutip_qip` as part of `full` is a good first step. It means that QuTiP 5 will just ""work"" as it did before and we can always remove it from `full` in QuTiP 5.1 or later.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1920#issuecomment-1147993680:28,install,installing,28,https://qutip.org,https://github.com/qutip/qutip/pull/1920#issuecomment-1147993680,2,['install'],['installing']
Deployability,"> I will update my contribution as soon as I come back from holidays. Best, Jérôme. Thanks! Enjoy your holidays.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1275#issuecomment-893453284:9,update,update,9,https://qutip.org,https://github.com/qutip/qutip/pull/1275#issuecomment-893453284,1,['update'],['update']
Deployability,"> I'm wondering about this. Having pip install qutip[qip] is nice, but what should happen with pip install qutip[full]? Should that also install qutip_qip? If not should we then leave qutip_qip out of full? And should we have qutip[full-family]?. I understand `[full]` as ""installing everything that might be needed so that I can run everything without any ImportError"". So this means that it includes `[qip]`. However, I do get your concern that this will probably make the option `[full]` larger and larger in the future. Nonetheless, since there is not yet a released `qutip-qip` that supports qutip-5. Let's leave it to a different PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1920#issuecomment-1147918698:39,install,install,39,https://qutip.org,https://github.com/qutip/qutip/pull/1920#issuecomment-1147918698,5,"['install', 'release']","['install', 'installing', 'released']"
Deployability,"> I've just spotted a bug in `isherm` on the new data layer, which is my fault for not getting the tests for that written yet. That may also be having some impact on the test fragility. Actually, I _didn't_ introduce a bug in `isherm`! It's just also present in the release version of QuTiP, but _masked_ by the `auto_tidyup`. In ""unrelated"" news: I discovered a dumb bug in `tidyup_dense`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1348#issuecomment-680059767:266,release,release,266,https://qutip.org,https://github.com/qutip/qutip/pull/1348#issuecomment-680059767,1,['release'],['release']
Deployability,"> If you run convert -version on an IM6 install, does it output a string that looks like; > `Version: ImageMagick 6.blahblahblah`; > or something similar?. Yes, it does. In the patch, I guess by ; `return ""imagemagick"" in proces.decode('utf-8').lower()`; you mean ; `return ""imagemagick"" in process.stdout.decode('utf-8').lower()`. Otherwise, I think it's all good!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194#issuecomment-605527437:40,install,install,40,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605527437,2,"['install', 'patch']","['install', 'patch']"
Deployability,> It's fixed in `master` with #1752. A patch should be released soon. Please do release that patch! 😉,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1766#issuecomment-1030351261:39,patch,patch,39,https://qutip.org,https://github.com/qutip/qutip/issues/1766#issuecomment-1030351261,4,"['patch', 'release']","['patch', 'release', 'released']"
Deployability,"> It's very clean, I really like the `set & set` and reusing the classes. Thanks!. > But in v4, while we used `f(t, args)` in most examples, we never said that it should be the exact signature up to variable name, so I don't think it an appropriate check for which version to use. Ideally, the check should be good enough we don't need to change any tests not directly related to the addition of this feature. I'm open to modifying the check for QuTiP v4 functions, but I would like to keep the check simple. To quote the Zen of Python, ""If the implementation is hard to explain, it's a bad idea."". :). > Also what should; > ; > ```; > def f(t, w, a=1):; > return a; > ; > coeff = coefficient(f, args={'w':1}); > coeff.replace_arguments(a=2)(0); > ```; > ; > give? Since `a` is not given, it's not our job to update it, or should we add it to `_f_arg_names`?. I think this works fine already in this branch. `a` is included in `_f_arg_names`, so it can be specified via `.replace_arguments(...)` but since it has a default it can also be left out.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1633#issuecomment-894670390:809,update,update,809,https://qutip.org,https://github.com/qutip/qutip/pull/1633#issuecomment-894670390,1,['update'],['update']
Deployability,"> Just another small issue, I found that if I use UnderDampedEnvironment.spectral_density() with brmesolve(), it fails in numpy 2.1.1 unless I wrap the SD function in another function. Strangely works without needing to wrap it in numpy 1.26.4. Seems to some difference in the way zero-dimensional arrays are treated, but not super sure. I noticed that as well,.I didn't fix it because we are not integrating with the solvers yet, but could check if the argument of correlation function is an array, and if it's not do the .item() bit, just so that brmesolve works smoothly",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2534#issuecomment-2372966464:397,integrat,integrating,397,https://qutip.org,https://github.com/qutip/qutip/pull/2534#issuecomment-2372966464,1,['integrat'],['integrating']
Deployability,"> Let's remove the `known_solvers` and the solver `name` from the SolverOptions and instead have the base solver pass the allowed options with defaults in to the SolverOptions constructor directly. If the allowed options list is `None`, then we can allow all options (for the convenience of users who really want to make their own SolverOptions instances). Users who makes their own SolverOptions are the base case. Using the `??solve` function with an `Options` instance and with documentation for the options items in the `Options` class, is the way in v4 and will probably stay that way for a while. ; Having a options not knowing about the solver let it accept bad options and typos. Also it hides the options documentation: solver's options could be in the `??solve` function, but not integrator options. The integrator was merged into the solver in v4 and is not made to be used directly by the average user. So the user should not need to know they exist to use qutip, nor refer to them directly to see which options are supported. > For convenience, when passing options as a dictionary, one should be able to use `{""ode.method"": ""vern9""}` or `{""ode"": {""method"": ""vern9""}`. Not sure I understand why this would be convenient, flat seems a easier to use and less confusing. Ideally the user should not need to know that there are 2 levels of options.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1947#issuecomment-1173856276:790,integrat,integrator,790,https://qutip.org,https://github.com/qutip/qutip/pull/1947#issuecomment-1173856276,2,['integrat'],['integrator']
Deployability,"> Looks good in general. Will have a closer test later today. There are some unnecessary style changes to other parts of the code. Especially `'` to `""` was quite unnecessary... It is not massive but it makes it a bit hard to identify which is the essential change. How hard is it to revert the changes of `'` to `""`? Other styling updates like removing unused importations are fine. it was done by a linter ,I can remove it but it was done to make it consistent with the other areas, I can revert it. the main part is the 2 function change and the ones inside the loop",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2442#issuecomment-2145360068:332,update,updates,332,https://qutip.org,https://github.com/qutip/qutip/pull/2442#issuecomment-2145360068,1,['update'],['updates']
Deployability,"> Not sure why, but I have trouble downloading opening HTML documentation from the artifact... I will re-run the doc build to see if it change anything. The download worked for me and the HTML and PDF docs look okay.; ; > Is it needed to fix all version up the the micro release?. This PR doesn't change that. We fix the version to micro releases to ensure that the documentation builds don't fail or do odd things without us noticing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2149#issuecomment-1495028797:271,release,release,271,https://qutip.org,https://github.com/qutip/qutip/pull/2149#issuecomment-1495028797,2,['release'],"['release', 'releases']"
Deployability,"> Overall, it look good as a way to make HEOM solvers work on v5. Woot. > But the use of data layer seems not ideal, why is the rhs fixed to `csr`. With it's size, it's probably not ideal as a Dense, but I don't think we should raise an error for other type... It doesn't actually restrict the RHS to CSR -- it only *constructs* the RHS as a CSR initially. The base solver will convert the RHS to the correct format for the integrator if needed. It might be possible one day to avoid constructing the RHS as a CSR but it might be tricky to make it not horribly slow, so I'd like to leave this as potential enhancement rather than work on it right now. > There is no `heomsolve` to go with `HEOMSolver`. I've added `heomsolve`. It has more parameters than `sesolve` or `mesolve`, which is not great, but I'm not sure how to avoid it. The bath and the max_depth are not really optional for the HEOM, and there aren't reasonably default values. > With other solvers, they accept `H` as a `Qobj` or `QobjEvo` only, list format is accepted by the __solve function. I changed HEOMSolver to only support `Qobj` or `QobjEvo`. I allowed `HSolverDL` to continue to support other objects since `HSolverDL` exists only for backwards compatibility. Perhaps we should remove it at some point, but the amount of code in it is also tiny. > `bofin_*.py` does not have a `__all__`, even if they are not supposed to be imported directly, it would be better if they had. I've added `__all__`.; ; > The test coverage does not include time-dependent Hamiltonian. Are those too slow to include in automated tests?. The tests don't include a truly time-dependent case because it's hard to solve one analytically. Previously I tested the time-dependent logic by supplying `[H]` as the system (i.e. fooling the code into using the time-dependent path) but that broke when I switched to using `QobjEvo.isconstant`. I fixed it by using `[H, lambda t: 1.0]` instead, which would be very hard to determine as constant. Thank for pi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1869#issuecomment-1165701845:424,integrat,integrator,424,https://qutip.org,https://github.com/qutip/qutip/pull/1869#issuecomment-1165701845,1,['integrat'],['integrator']
Deployability,"> Overly specific build-system.requires can also cause failures with conda-forges build system. Conda-forge does not and cannot use `build-system.requires`; those are PyPI packages and they might not even have the same name in Conda. Conda always sets PIP_NO_BUILD_ISOLATION to avoid this. This (the linked log) is tripping up on setup_requires, which is deprecated and I don't think you have it set up correctly anyway; if you ask for `Cython` but don't `install_requires` Cython, Cython will not be installed before running the setup.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1735#issuecomment-989955502:501,install,installed,501,https://qutip.org,https://github.com/qutip/qutip/pull/1735#issuecomment-989955502,1,['install'],['installed']
Deployability,"> Quick disclaimer, I can't seem to install `cvxpy` on my machine without using anaconda, so I haven't run the qutip tests personally. I assume these run automatically in the pipeline. That's fine. The CI pipeline does test with cvxpy.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2416#issuecomment-2094924396:36,install,install,36,https://qutip.org,https://github.com/qutip/qutip/pull/2416#issuecomment-2094924396,3,"['install', 'pipeline']","['install', 'pipeline']"
Deployability,"> So as a user on Windows, having installed QuTiP through Anaconda, I can't do any time propagation? . So what is certain is that if you use string type time-dependence then this needs a compiler, this is implied by the string type. Also, at present, giving an ndarray (and I think qutip CubicSpline) also means the RHS will be compiled, because it is much faster. Clearly we could make this optional, but it is not at present. @Ericgig is working on new versions of the solvers at the moment, I think he could easily include this in the design.; You should not need a compiler for using func type time-dependence, so you could make a function that encapsulates this array and spline behaviour. If I have not covered what it is that you to achieve, then please be explicit here.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932#issuecomment-466739255:34,install,installed,34,https://qutip.org,https://github.com/qutip/qutip/issues/932#issuecomment-466739255,1,['install'],['installed']
Deployability,"> Thank you for the details on the new updates. @fminga's suggestions seemed reasonable to me: personally, I would be somewhat reluctant to modify something that is so much at the heart of the library machinery (master equations, etc.) for what seems a very specific use. OK let me think about this some more. Our plan is to not modify any core parts of the code, only superoperator representation conversion functions, and in such a way that passing a square superoperator gives exactly the same behavior as before. My argument against passing a ""shape=rectangular"" flag is that the information we need is already stored in the `Qobj` `shape` and `dims` attributes. But I've removed the ""merge ready"" flag until we have thought it through some more.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1098#issuecomment-571355512:39,update,updates,39,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-571355512,1,['update'],['updates']
Deployability,"> Thank you for the fix. Could you add a towncrier entry so we don't forget your contribution during new release. I had forgotten. Thank you, it is added!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2401#issuecomment-2072875831:105,release,release,105,https://qutip.org,https://github.com/qutip/qutip/pull/2401#issuecomment-2072875831,1,['release'],['release']
Deployability,"> Thank you for your reply. However, the problem didn't solve after installing cython 0.29.36. ![image](https://github.com/qutip/qutip/assets/125566140/ed96af0d-3dc7-497c-91f9-196154d7a13f)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2245#issuecomment-1780372022:68,install,installing,68,https://qutip.org,https://github.com/qutip/qutip/issues/2245#issuecomment-1780372022,1,['install'],['installing']
Deployability,"> Thanks @cgranade. @BoxiLi what's the timeline to remove `qip` from `qutip/qutip`? Are we waiting the QuTiP 5 release?. Yes. `qutip.qip` will still be included in QuTiP 4.7, but for QuTiP 5, qutip-qip will need to be installed separately.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1781#issuecomment-1029021859:111,release,release,111,https://qutip.org,https://github.com/qutip/qutip/pull/1781#issuecomment-1029021859,2,"['install', 'release']","['installed', 'release']"
Deployability,> The [workaround](https://stackoverflow.com/questions/58897928/macos-sdk-headers-for-macos-10-14-pkg-is-incompatible-with-this-version-of-maco) for me seems to be; > ; > ```; > sudo rm -rf /Library/Developer/CommandLineTools; > xcode-select --install; > cd /Library/Developer/CommandLineTools/Packages/; > open macOS_SDK_headers_for_macOS_10.14.pkg; > ```. thank you!!!!,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1030#issuecomment-760023842:244,install,install,244,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-760023842,1,['install'],['install']
Deployability,"> The conflict is just because that trailing white space PR got merged. You can update from qutip master and resolve it locally. No worries. I don't think it is that @BoxiLi, I need to change the manifest as per @jakelishman's comments to include the qasm_files folder. Is there a different way to do this? . edit: oops, I did the rebase, I think you were right!!!! Apologies",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1291#issuecomment-656389392:80,update,update,80,https://qutip.org,https://github.com/qutip/qutip/pull/1291#issuecomment-656389392,1,['update'],['update']
Deployability,"> There is no agreement on how this should be handled yet. It's been removed from `dev.major` with the plan to restore it before the release, but the exact interface is not fixed. It certainly will not be some special keyword in args. It could be a special value, or a special parameter / method for the solver class. Actually having a method in the solver class seems better, I suppose this is why we are going towards Solvers from the simple `mesolve` function. I am going to try and rewrite my example using the Solver class. We can probably get away with having this functionality only in the new Solver class --- benefit of a major release I guess.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/947#issuecomment-1142213362:133,release,release,133,https://qutip.org,https://github.com/qutip/qutip/issues/947#issuecomment-1142213362,2,['release'],['release']
Deployability,"> This (the linked log) is tripping up on setup_requires, which is deprecated and I don't think you have it set up correctly anyway; if you ask for `Cython` but don't `install_requires` Cython, Cython will not be installed before running the setup. This is intentional -- we want to support installing from pre-built packages without a compiler or Cython installed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1735#issuecomment-990032654:213,install,installed,213,https://qutip.org,https://github.com/qutip/qutip/pull/1735#issuecomment-990032654,3,['install'],"['installed', 'installing']"
Deployability,"> This also means that adding `qutip-qip` as an optional package right now does not make much sense. Probably we can drop this.; > ; > To test it on GitHub action we need to install `qutip-qip@master` for now and test the importation. @hodgestar Is that ok? Otherwise, I can try to get out a new release of `qutip-qip` in a day or so. Just to update the change log and click the button. Completely up to you, of course! If you choose to drop the optional dependency for now, I can also just put those changes on another PR to be merged when the time is right.; I'll stand by for your decision regarding the CI tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1920#issuecomment-1147629930:174,install,install,174,https://qutip.org,https://github.com/qutip/qutip/pull/1920#issuecomment-1147629930,3,"['install', 'release', 'update']","['install', 'release', 'update']"
Deployability,"> This bug is only in 4.4.0, the patch has not been released yet.; > Don't use parallel_map in windows for mcsolve and stochastic solvers to go around it.; > Or if you can install from source, the working version is in #1040. I download the version 4.4.1 from https://github.com/Ericgig/qutip/tree/4.4.1/qutip but still met this ; problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-519951711:33,patch,patch,33,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-519951711,3,"['install', 'patch', 'release']","['install', 'patch', 'released']"
Deployability,"> This is likely because qutip is not correctly installed. Could you try uninstalling qutip and reinstalling again?. @BoxiLi I did this and it worked, thank you! The issue was that I had originally installed it with the `build` package instead of with the setuptools build. Also, the code now passes both my new tests and existing tests in `qutip.tests.core.test_operators.py`. Additionally, I ran the `pytest qutip/tests -k` command on `f_op`, `fcreate`, and `fdestroy` to run all the tests associated with the new functions, and they pass as well. Lastly, regarding the circular import problem, I did as you suggested and moved the import inside the `f_op` function.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2166#issuecomment-1565769987:48,install,installed,48,https://qutip.org,https://github.com/qutip/qutip/pull/2166#issuecomment-1565769987,2,['install'],['installed']
Deployability,"> This issue is a duplicate of #999, #1008 and #1018. It has been addressed by PR 1000.; > ; > #1000. Se discussion in #1018. Yep, I know that this is caused by the newest version of Siipy. But is there any possibilities to upgrade the qutip. It seems that it is difficult to ask the scipy team to ""downgrade"" the scipy, isn't it/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1019#issuecomment-502356360:224,upgrade,upgrade,224,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-502356360,1,['upgrade'],['upgrade']
Deployability,"> This looks like a duplicate of #2118. A fix was just released in QuTiP 4.7.2 -- would you mind trying with that and letting us know if the fix works for you?. Yup, this sure fixes it. Sorry for missing the duplicate!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2189#issuecomment-1615936547:55,release,released,55,https://qutip.org,https://github.com/qutip/qutip/issues/2189#issuecomment-1615936547,1,['release'],['released']
Deployability,"> This was reported on the help group; > https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU; > ; > (copying from there); > the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well.; > ; > If using mkl(2019.0), there will MKL read problems, like:; > ; > ```; > File ""C:\Users\ym24chen\Anaconda3\; > x = lu.solve(b, verbose=verbose); > File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve; > np_x, np_error); > OSError: exception: access violation reading 0x0000000000000008; > envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve; > ```; > ; > Env info:; > ; > ```; > QuTiP Version: 4.3.1; > Numpy Version: 1.15.4; > Scipy Version: 1.1.0; > Cython Version: 0.29.6; > Matplotlib Version: 3.0.3; > Python Version: 3.7.2; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: False; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip; > ==============================================================================; > ```. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975#issuecomment-536162505:214,rollback,rollback,214,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536162505,5,"['Install', 'install', 'rollback']","['Installation', 'Installed', 'install', 'rollback']"
Deployability,> Try conda install gcc. Does that mean I should use gcc from the Anaconda directory?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/965#issuecomment-471148065:12,install,install,12,https://qutip.org,https://github.com/qutip/qutip/issues/965#issuecomment-471148065,1,['install'],['install']
Deployability,"> Users who makes their own SolverOptions are the base case. Using the `??solve` function with an `Options` instance and with documentation for the options items in the `Options` class, is the way in v4 and will probably stay that way for a while. Having a options not knowing about the solver let it accept bad options and typos. Also it hides the options documentation: solver's options could be in the `??solve` function, but not integrator options. The integrator was merged into the solver in v4 and is not made to be used directly by the average user. So the user should not need to know they exist to use qutip, nor refer to them directly to see which options are supported. I'm not sure I am quite following, but my thought was that options would be checked by the solver class when they are passed in. The mechanism the solver class would use for doing the check, would be to pass the description of the allowed options to the SolverOptions class, along with the options themselves. > Not sure I understand why this would be convenient, flat seems a easier to use and less confusing. Ideally the user should not need to know that there are 2 levels of options. The reason for nesting the ode options a little, is to make it clear which options might change if the ODE method changes. If one hides the structure completely, there is nothing to guide the user as to which options are related to what. E.g. If ODE method ""A"" took option ""opt1"" and method ""B"" took ""opt2"" then it's much clearer what is happening if one has to pass `""ode"": {""method"": ""A"", ""opt1"": 1}` and `""ode"": {""method"": ""B""}` than `""method"": ""A"", ""opt1"": 1"" and `""method"": ""B"", ""opt2"": 2`. In the flat case, one might accidentally have `""method"": ""B"": ""opt1"": 1` and ""opt1"" would be ignored. I am not too hung up on the exact approach for this bit though -- I just want it to be clear to the user what is going wrong, and for it to be a little be hard to options for different ODE methods clash with each other or other solve",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1947#issuecomment-1174214647:433,integrat,integrator,433,https://qutip.org,https://github.com/qutip/qutip/pull/1947#issuecomment-1174214647,2,['integrat'],['integrator']
Deployability,"> Version 5 does not officially support python 3.8. Oh, I saw nothing about this in the [changelog](https://qutip.readthedocs.io/en/v5.0.1/changelog.html) nor the [requirements section of the installation instructions](https://qutip.readthedocs.io/en/v5.0.1/installation.html#general-requirements), which says Python 3.6+ is supported. I will try with the `--no-build-isolation` once I get back to my computer.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412#issuecomment-2085323516:192,install,installation,192,https://qutip.org,https://github.com/qutip/qutip/issues/2412#issuecomment-2085323516,2,['install'],['installation']
Deployability,"> We allow the user to supply the `QobjEvo` class to use as an option, and allow them to specify either the class itself or a name for the class. E.g. `qobjevo_cls=QobjEvoHerm` or `qobjevo_cls=herm`. I would prefer the user not needing to know how we do it, just that there an option that speed up the simulation by 40 % in normal cases. Knowing that we forced it in an alternative qobjevo class is not useful and I hope we won't be forced to add many kinds of qobjevo. > Perhaps we should also not allow users to switch the class later by changing options? That might simplify the logic because we wouldn't need to modify the RHS when options are updated. Since changing options does not change the physic, I would like them to be changeable. But the `rhs`, and `_rhs` is certainly not great. I will rethink the way to do it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2173#issuecomment-1664483203:648,update,updated,648,https://qutip.org,https://github.com/qutip/qutip/pull/2173#issuecomment-1664483203,1,['update'],['updated']
Deployability,> We want to essentially parse the whole project and generate the names of all the functions and classes. This could also be done directly by running a parser on the qutip folder using ideas similar to. @quantshah do we really want a graphic to show all classes and functions? Do we not think that maybe a lot of functions get created that are not necessarily intended for users of the library. Not in all cases do we name then as using the leading underscore for internal convention. I am open to persuasion on this. Clearly there are also issues with us forgetting to update `functions.rst`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1525#issuecomment-474411868:570,update,update,570,https://qutip.org,https://github.com/qutip/qutip/issues/1525#issuecomment-474411868,1,['update'],['update']
Deployability,"> What exactly is this `dev.major` branch?. Hi @eendebakpt. `dev.major` is the branch in which we are developing QuTiP version 5. We're still doing important fixes for 4.7.1, but we're not planning to release any more feature for the 4.X series (although *maybe* that could change -- we'll see how the move to 5 goes). I'll update the contributing guidelines to mention QuTiP 5. QuTiP 5 has been in the works for a long time, but we're now in the ""cleaning things up"" phase, and hope to release an alpha version in the next month or so.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1943#issuecomment-1168823150:201,release,release,201,https://qutip.org,https://github.com/qutip/qutip/pull/1943#issuecomment-1168823150,3,"['release', 'update']","['release', 'update']"
Deployability,"> What if we rethink the approach from the beginning:; > ; > ```; > QobjEvo([op, func], args={""state"": Solver.StateFeedback(default=psi0)}); > QobjEvo([op, func], args={""e1"": SESolver.ExpectFeedback(e_op)}); > QobjEvo([op, func], args={""state"": MESolver.StateFeedback(raw_data=True)}); > QobjEvo([op, func], args={""collapse"": MCSolver.CollapseFeedback()}); > QobjEvo([op, func], args={""W"": SMESolver.WeinerFeedback()}); > ```; > ; > And we remove the `add_feedback` method. This looks great. I really like that it makes it clearer where the feedback comes from and that it is solver dependent. Removing the need to specify the feedback in two places when constructing a `QobjEvo` is really nice too. Let's do it in a separate PR though (unless you strongly want to update this one). I have a slight concern that it might be a bit complicated for users to find the feedback classes (e.g. they have to know to import the right solver) but I'm sure we can make that nice the PR itself.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2210#issuecomment-1839582984:765,update,update,765,https://qutip.org,https://github.com/qutip/qutip/pull/2210#issuecomment-1839582984,1,['update'],['update']
Deployability,"> You see, the gate Gate(RY, targets=[0, 1], controls=None) is clearly wrong because RY acts only on one qubits. Yep ! That's what I thought as well..for all the single qubit gate outputs with two targets. I knew I was getting an error but was not sure why it was not the same error as both of you. It was because I was using the released version (like you predicted). . I was trying to put off installing from source for as long as I could because I would have to install conda and other dependencies manually. Now, I did get `ValuError`. Thanks !",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1330#issuecomment-810592555:330,release,released,330,https://qutip.org,https://github.com/qutip/qutip/issues/1330#issuecomment-810592555,3,"['install', 'release']","['install', 'installing', 'released']"
Deployability,"> `qip/circuit.py` will be removed in 5.0, so a similar PR should go into qutip-qip. I'll raise one there as well, thanks!. **Update:** The corresponding PR is https://github.com/qutip/qutip-qip/pull/142.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1892#issuecomment-1124955633:126,Update,Update,126,https://qutip.org,https://github.com/qutip/qutip/pull/1892#issuecomment-1124955633,1,['Update'],['Update']
Deployability,"> `result.measurement` is not the same as `result.expect`, the measurement is an expectation value, but not of the `e_ops` but `m_ops` which are usually automatically generated from the `c_ops` and noise is added to the computed expectation value of the state of the trajectory. The noise is usually larger than the signal and makes it hard to see, but it should converge to mesolve's solution eventually.; > ; > `smesolve`'s `expect` are just the expectation value of the state of each trajectories (averaged or not depending on options) and should average to the master equation solutions with enough trajectories. Plot in cell 8 show the match is quite good. Even with enough trajectories, the numerical error from `smesolve` will be visible.; > ; > The equation solved are those written in the notebook. Various stochastic integration method are provided, the default is the taylor expansion of order 1.5. Thank you very much for your reply, but I still don't quite understand `smesolve`'s `expect` are just the expectation value of the state of each trajectories”. In my understanding, solving for 'smesolve' gives the corresponding 'ρ(t)' and then 'expect'. But 'smesolve' provides **[ntraj [int] number of trajectors]**, which means that there are _ntraj_ 'ρ(t)' (`expect`). If I want to show all _ntraj_ ‘s 'expect', how can I do it?. Can I understand `result.measurement` as measuring(POVM) the `smesolve.result` (where ρ(t) was given by solving the stochastic master equation) .$\hat{\rho}_{f}=\frac{\hat{\Omega}_{m}\hat{\rho}\hat{\Omega}_{m}^{\dagger}}{\mathrm{Tr}[\hat{\Omega}_{m}\hat{\rho}\hat{\Omega}_{m}^{\dagger}]}$。If this is the case, I don't understand the point of doing the measurement again here, because the stochastic master equation itself has a continuous measurement. What I want to do is simply solve the stochastic master equation to get enough trajectories **ρ(t)** and solve the relevant expected value **Tr[ρ(t)A]**. On the one hand, I want to see the expectations of a",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2194#issuecomment-1635364206:827,integrat,integration,827,https://qutip.org,https://github.com/qutip/qutip/issues/2194#issuecomment-1635364206,1,['integrat'],['integration']
Deployability,> closes #1225. A little more detail in the opening comment is preferred. It helps whoever has to update the changelog.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1224#issuecomment-607789973:98,update,update,98,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607789973,1,['update'],['update']
Deployability,"> from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:3974,Release,Release,3974,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"> from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:9811,Release,Release,9811,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"> from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:15815,Release,Release,15815,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"> from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:21819,Release,Release,21819,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"> from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Releas",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:14484,Release,Release,14484,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"> from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Releas",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:20488,Release,Release,20488,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"> you can see that when it runs conda uninstall cython, it downgrades numpy to 1.14.2. This is really strange. > This would not be a problem in a conda-forge release build, because the numpy API dependency is pinned in the feedstock, but it is a potential problem on pip source builds. I was setting up a GitHub Action test for `qutip_qip` https://github.com/qutip/qutip-qip/pull/6. `pip installation` works well there, but it could be that I don't use any run-time compiling.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1448#issuecomment-782174452:158,release,release,158,https://qutip.org,https://github.com/qutip/qutip/pull/1448#issuecomment-782174452,2,"['install', 'release']","['installation', 'release']"
Deployability,"@AFvanloo Could you explain a little more what you are doing? The error appears to have been generated by an attempt to recompile `qutip.cy.openmp.parfuncs` without openmp installed, which is unlikely to have happened unless something is attempting to rebuild every cython or cpp file and ignoring qutip's `setup.py`. I also see `pyrex` in your path. The last stable release of `pyrex` was in 2010 and as far as I know it is still inactive. I am not sure what advice to give yet, but I am curious about what is going on. :)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1810#issuecomment-1043525004:172,install,installed,172,https://qutip.org,https://github.com/qutip/qutip/issues/1810#issuecomment-1043525004,2,"['install', 'release']","['installed', 'release']"
Deployability,"@AFvanloo My wild guess about what has happened is:. 1. You modified QuTiP's source files.; 2. When the files are modified, the `reload` functionality you are using attempts to recompile the Cython files in a strange way. There is nothing wrong with modifying QuTiP, but I would suggest first trying to compile an unmodified QuTiP in the ordinary way -- e.g. by following https://qutip.org/docs/latest/installation.html#installing-from-source. Then, once that is working, you can modify the source code and recompile in the same way. I'm going to close this issue for now since it doesn't seem like a bug, but please feel free to keep asking questions in this issue or on the mailing list. If you have an new feature you'd like to add, you can also open an issue specifically for it and we can discuss that separately (and if you like you can submit a pull request with the change you want).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1810#issuecomment-1046868194:402,install,installation,402,https://qutip.org,https://github.com/qutip/qutip/issues/1810#issuecomment-1046868194,2,['install'],"['installation', 'installing-from-source']"
Deployability,"@AGaliciaMartinez @RobHam99 I will put in a small vote that we leave sorting this out for QuTiP 5 (i.e. the dev.major) branch, where I suspect it has been sorted out already. The only QuTiP release it could go into before 5 would be 4.7 and I'd like to avoid doing too many minor clean-ups in 4.7 because I want 4.7 to just work nicely for existing users before the big just to 5. Happy to consider exceptions to that policy on a case by case basis though.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1716#issuecomment-974502454:190,release,release,190,https://qutip.org,https://github.com/qutip/qutip/issues/1716#issuecomment-974502454,1,['release'],['release']
Deployability,@AGaliciaMartinez Could you also update the changelog entry in the PR description to say something about the change?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1620#issuecomment-892631295:33,update,update,33,https://qutip.org,https://github.com/qutip/qutip/pull/1620#issuecomment-892631295,1,['update'],['update']
Deployability,"@AGaliciaMartinez I applied your suggestions, updated the docstrings and added some tests. Would you mind having a quick last review?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1690#issuecomment-1057408459:46,update,updated,46,https://qutip.org,https://github.com/qutip/qutip/pull/1690#issuecomment-1057408459,1,['update'],['updated']
Deployability,@AGaliciaMartinez I will add comment here in the for future release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2477#issuecomment-2197209540:60,release,release,60,https://qutip.org,https://github.com/qutip/qutip/pull/2477#issuecomment-2197209540,1,['release'],['release']
Deployability,"@AGaliciaMartinez,; I already made an integrator for jax in qutip/qutip-jax#14 and made and an example for auto-differentiation in `sesolve` using it.; There is still some polishing to do, but half of the deliverable are there. We should ask the student to use it to makes new tools with it and improve the interface.; Using it for quantum control is impractical since `jax.grad` only support real scalar output and our inputs are also complex.; We need to find an user friendly a way to tell which part of the result are subject to the derivation and how to expand to jacobians, etc.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2064#issuecomment-1408690839:38,integrat,integrator,38,https://qutip.org,https://github.com/qutip/qutip/pull/2064#issuecomment-1408690839,1,['integrat'],['integrator']
Deployability,"@Akhikar I know the error message is the same, but could you open a new issue for this and follow the issue template? This bug was addressed awhile ago, and if you open a new issue we'll know what versions of all the installed software you're using. Usually this issue arises when something went wrong while installing QuTiP, or because you have a script whose name conflicts with an existing package name.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-1220411689:217,install,installed,217,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-1220411689,2,['install'],"['installed', 'installing']"
Deployability,"@ArchieB151 I've now run the notebook myself using QuTiP 4.7.0 and it produces the expected plots. However, it has numerous small things that need to be fixed because it was originally written for an older version of QuTiP. We are almost ready to release a completely updated set of notebooks that updates all of these old notebooks. These notebooks are tested automatically regularly. You can find the updated version of the Jaynes-Cummings lecture at https://qutip.org/qutip-tutorials/tutorials-v4/lectures/Lecture-1-Jaynes-Cumming-model.ipynb and the full set of notebooks at https://qutip.org/qutip-tutorials/ (the page is very plain HTML, but it will be prettified soon). Could you try the updated notebook with 4.7.0 and see if it works for you?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1987#issuecomment-1229167791:247,release,release,247,https://qutip.org,https://github.com/qutip/qutip/issues/1987#issuecomment-1229167791,5,"['release', 'update']","['release', 'updated', 'updates']"
Deployability,"@ArchieB151 The output is very strange. No new version of QuTiP was released in the last month. The ODE integration error you received would only appear if the problem being solved changed somehow. The initial state in your plot doesn't match the psi0 defined in the code (i.e. both expectation values are zero). Could you try do everything from scratch again? Start with a completely fresh download of the notebook, restart the Jupyter kernel entirely run everything from the top?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1987#issuecomment-1229018060:68,release,released,68,https://qutip.org,https://github.com/qutip/qutip/issues/1987#issuecomment-1229018060,2,"['integrat', 'release']","['integration', 'released']"
Deployability,@Babalion Thank you for tyring.; Please let us know if you meet any bug. I am keeping both for version of `mcsolve` for now for benchmarks.; The new version has more features but it's slower than the previous.; The new version will replace the main one before we release in v5.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1710#issuecomment-974489887:263,release,release,263,https://qutip.org,https://github.com/qutip/qutip/pull/1710#issuecomment-974489887,1,['release'],['release']
Deployability,"@BoxiLi I have the latest version installed. . I do not get any gates after applying `resolve_gates()`. My issue is I fail to get the same error type i.e. `ValueError`. When I ran the code as it is, I do not get any gates besides an indicator that the code ran successfully. So, I used `print(A.resolve_gates())` which gave me `qutip.qip.circuit.QubitCircuit object at 0x7fb64044eaf0`. This is most definitely not the expected output of `resolve_gates()` as specified [here](https://github.com/qutip/qutip/blob/8681e995c09986a4355ba16d586dd2d2f1f49657/qutip/qip/circuit.py#L1205)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1330#issuecomment-810442694:34,install,installed,34,https://qutip.org,https://github.com/qutip/qutip/issues/1330#issuecomment-810442694,1,['install'],['installed']
Deployability,@BoxiLi Just letting you know that I added this to https://github.com/qutip/qutip/milestone/19 so that we remember to include the fix in the 4.6.3 release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1603#issuecomment-875428843:147,release,release,147,https://qutip.org,https://github.com/qutip/qutip/pull/1603#issuecomment-875428843,1,['release'],['release']
Deployability,@BoxiLi Which version are you using?; I believe the present master branch (soon to be released) does not have the problem.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1016#issuecomment-501432430:86,release,released,86,https://qutip.org,https://github.com/qutip/qutip/issues/1016#issuecomment-501432430,1,['release'],['released']
Deployability,"@BoxiLi purely a build requirement. Installation allows any numpy >= 1.12, and with wheels being distributed, very few users will need to build QuTiP themselves.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429#issuecomment-779704400:36,Install,Installation,36,https://qutip.org,https://github.com/qutip/qutip/pull/1429#issuecomment-779704400,1,['Install'],['Installation']
Deployability,"@Canoming, I'll merge this one now. If you have any new update, you are welcome to open another PR. . I also recommend to open a new branch for further changes and keep your master up to date with the qutip master.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1269#issuecomment-636370643:56,update,update,56,https://qutip.org,https://github.com/qutip/qutip/pull/1269#issuecomment-636370643,1,['update'],['update']
Deployability,"@Chasmiccoder I agree with @BoxiLi that we don't want to do a big refactor, especially of the older 4.6 and 4.7 releases. I would like to add some code style checkers like `pyflakes` , `black` (or `blue`) and `isort` to our CI system on the `dev.major` branch, initially excluding all the files and then slowly including more and more files in the checks as we fix them. I'm going to close this issue for now, but if you would like to tackle adding, e.g., `pyflakes` to `dev.major` that would be awesome.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1729#issuecomment-982600604:112,release,releases,112,https://qutip.org,https://github.com/qutip/qutip/issues/1729#issuecomment-982600604,1,['release'],['releases']
Deployability,"@ChesterCamm @jakelishman I've attempted to clean up the figure state tracking in Bloch.render() to make it more robust. As a bonus, I can no longer crash .render() in my own Python console by closing a figure and calling .render() now updates any existing figure that is already shown. @ChesterCamm Feedback on whether my change helps your case would be appreciated. The new code also works with all sort of combinations of .show() and .render() in a Jupyter notebook for me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1616#issuecomment-884790771:236,update,updates,236,https://qutip.org,https://github.com/qutip/qutip/issues/1616#issuecomment-884790771,1,['update'],['updates']
Deployability,"@DnMGalan ; Thank you for contributing. Please write a towncrier entry. It's not about how small or large the issue, but a reminder for us to thank you for your contribution when doing the release. I don't think any one opened an issue about the problem with the 'l' style, but we would be grateful if you fixed it. ; You don't need to open a issue for it. You can solve it here or in another PR at your convenience.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2308#issuecomment-1911002664:189,release,release,189,https://qutip.org,https://github.com/qutip/qutip/pull/2308#issuecomment-1911002664,1,['release'],['release']
Deployability,@ElieGouzien the new QuTiP release solves this. See the [change log](http://qutip.org/docs/latest/changelog.html) for more information on new features.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1019#issuecomment-510892254:27,release,release,27,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-510892254,1,['release'],['release']
Deployability,"@EmilianoG-byte; Not too sure... When using spline interpolation for time dependent systems, I would recommend to create them before using the solver as to not link the spline times with the solver output times. Which is probably what you are doing with v4 and what you should keep doing for v5. In the next version, the `QobjEvo` is somewhat more user facing and we will probably just document better that this is the way to do it. As for when we plan to release v5, we had to push back the planned release time a few time already so it's hard to say...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2167#issuecomment-1578707335:456,release,release,456,https://qutip.org,https://github.com/qutip/qutip/pull/2167#issuecomment-1578707335,2,['release'],['release']
Deployability,"@EricGig thank you for the extensive investigation. What do you think of; adding (even with a temporarily note) this information in the QuTiP Docs? I; feel like the fix may take long and having something written up under some; official section on the website may help for future reference. On Wed, 13 May 2020 at 23:38, Eric Giguère <notifications@github.com> wrote:. > I did some tests and; > 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian; > matrices) (c's version Ok); > 2 - It happen when installing the scipy stack with pip but not when; > installing it with conda.; > 3 - It depend on the problem size, 64 seems particularly bad, usually it; > fails on the second call.; > 4 - I only got it in zheevr which is only used in brmesolve. But Nathan; > got it in other tests which use scipy's eigh.; > 4 - It happen in scipy in the fortan version of lapack:; >; > import numpy as np; > from scipy.linalg import eigh; > H = random_hermitian(64); > eigh(H) # Work fine; > eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; >; > Possible solutions (for zheevr):; >; > - Installing scipy with conda, the easiest solution, but not in our; > control.; > - Finding a way to link clapack from cython. Linking scipy's one would; > require good knowledge of scipy internals since only one cython interface; > is provided. Linking to another installation of lapack, but it would; > require the user to install lapack or install it with qutip. Both seems; > wrong to me.; > - For mac user, call scipy's eigh from cython i zheevr, slower but; > better than risking segfault.; > - Have the code directly in qutip. We can adapt it from OpenBlas:; > https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1197#issuecomment-628259492>, or; > unsubscribe; > <",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-628441264:521,install,installing,521,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628441264,2,['install'],['installing']
Deployability,"@Ericgig @hodgestar, Eric and Simon: unless there's anything else that springs to mind, I'll pencil in the 4.6 release for later this week/weekend after this is merged to `master`?. Simon in particular: there's a couple of accessible places in `correlation` that make deprecated `ode2es` calls. That particular functionality of the solvers isn't being removed in 5.0 (though maybe it should - `mesolve` is faster and better in almost every way), so they aren't themselves deprecated. Right now they don't trigger `DeprecationWarning` popups if a user calls them (since the stacklevel is 2). Despite that, should I _also_ wrap them in a warning filter to catch it? I don't really know best practices here. I kept postponing doing the 4.6 release because I'd keep thinking of little bits and bobs that I thought should go in, but at this point Boxi's (@BoxiLi) new pulse scheduler stuff is in and ready, the packaging and distribution methods are updated, and we'll have issued deprecation warnings for the things that we know are being removed. Anything beyond this can start to form the basis of a 4.7 release in a few months' time, with the Floquet changes (they might be waiting on me at the moment) and possibly some new stuff out of GSoC. Possibly that'll also include some deprecation warnings and other bits and bobs to do with packages getting moved out of qutip/qutip, and the changes to how the data-layer is going to work.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1480#issuecomment-814937234:111,release,release,111,https://qutip.org,https://github.com/qutip/qutip/pull/1480#issuecomment-814937234,4,"['release', 'update']","['release', 'updated']"
Deployability,"@Ericgig After reading the following comment in `setup.cfg`; ```; ; This uses ConfigParser's string interpolation to include all the above; ; dependencies into one single target, convenient for testing full builds.; ```; I changed my mind a bit about the role of `full`. It seems that the intention of full is to install everything for testing and development, so it makes sense for the ipython dependency to be included there. After I changed my mind, I just cherry-picked Asier's merge commit for #1918 to master.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1970#issuecomment-1207180169:313,install,install,313,https://qutip.org,https://github.com/qutip/qutip/pull/1970#issuecomment-1207180169,1,['install'],['install']
Deployability,"@Ericgig Contributors added!. Once this is merged, I can merge the commit into the 4.6.3 preparation branch and then I think we are ready to release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1793#issuecomment-1032599050:141,release,release,141,https://qutip.org,https://github.com/qutip/qutip/pull/1793#issuecomment-1032599050,1,['release'],['release']
Deployability,"@Ericgig Do you have examples of where integrators are used?. Some of the interface choices seem inconsistent -- e.g. `system` is a `QobjEvo` instance (so it has dims) but the states are `data` (which don't have dims, type, etc). Perhaps this makes sense given how things are used, but it would be good to be consistent (especially given that accessing `.data` is very fast and would allow the integrator access to the dims and various high-level operations). Perhaps one solution is to have two levels of interface -- i.e. a low-level one (`get_state`, `set_state`, `integrate`) and a high-level one (`run`) where the signature of `run` changes to `run(initial_qobj, tlist) -> final_qobj` and `run` calls `get_state`, `set_state` and `integrate`?. I will also do a more line by line review shortly.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1643#issuecomment-925113187:39,integrat,integrators,39,https://qutip.org,https://github.com/qutip/qutip/pull/1643#issuecomment-925113187,4,['integrat'],"['integrate', 'integrator', 'integrators']"
Deployability,@Ericgig I assume this one needs to be merged before the release. If its ready should we merge it now?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2471#issuecomment-2195248966:57,release,release,57,https://qutip.org,https://github.com/qutip/qutip/pull/2471#issuecomment-2195248966,1,['release'],['release']
Deployability,@Ericgig I have pushed the requested updates,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2442#issuecomment-2151598711:37,update,updates,37,https://qutip.org,https://github.com/qutip/qutip/pull/2442#issuecomment-2151598711,1,['update'],['updates']
Deployability,@Ericgig I saw it works for other functions and thought it is ok. I deleted them and updated the docs.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2203#issuecomment-1685150552:85,update,updated,85,https://qutip.org,https://github.com/qutip/qutip/pull/2203#issuecomment-1685150552,1,['update'],['updated']
Deployability,"@Ericgig I'm going to merge this so that people with M1s can hopefully try out the `master` branch a bit before the 4.6.3 release, but please have a brief look when you get back. Happy to get a review from anyone else reading this too.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1754#issuecomment-1006747537:122,release,release,122,https://qutip.org,https://github.com/qutip/qutip/pull/1754#issuecomment-1006747537,1,['release'],['release']
Deployability,@Ericgig I'm happy to leave this open until a new numpy is released and we can update the version of numpy used in CI tests. Probably also good to have an issue open in case users encounter this in the wild.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1694#issuecomment-979433765:59,release,released,59,https://qutip.org,https://github.com/qutip/qutip/pull/1694#issuecomment-979433765,2,"['release', 'update']","['released', 'update']"
Deployability,"@Ericgig I'm off to sleep now. I'm happy for you to fix, update or merge this as needed before I wake up. Otherwise I'll make any changes after I wake up.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2076#issuecomment-1419934178:57,update,update,57,https://qutip.org,https://github.com/qutip/qutip/pull/2076#issuecomment-1419934178,1,['update'],['update']
Deployability,"@Ericgig Is the plan to update qutip.solve.bloch_redfield and remove br_codegen, etc in a follow up PR?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1651#issuecomment-980020050:24,update,update,24,https://qutip.org,https://github.com/qutip/qutip/pull/1651#issuecomment-980020050,1,['update'],['update']
Deployability,@Ericgig Just checking the status of this PR. Should we update it to the latest dev.major and then I can review it again?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1615#issuecomment-893436254:56,update,update,56,https://qutip.org,https://github.com/qutip/qutip/pull/1615#issuecomment-893436254,1,['update'],['update']
Deployability,"@Ericgig Thanks for finding this. I don't think we should add a setting for this though -- it's too obscure. The point of returning `None` when `p == 0` seems to be to avoid division by zero, not to round down small probabilities. I think we should either 1) update the test or 2) if we lots some precision in a recent change, try to get that precision back. Do you know which change caused the loss of precision?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1656#issuecomment-917036156:259,update,update,259,https://qutip.org,https://github.com/qutip/qutip/pull/1656#issuecomment-917036156,1,['update'],['update']
Deployability,@Ericgig Thanks for the changes! The only outstanding comments now are:. * Update comment on _expect_dense.; * Apply my docstring suggestion for the new tlist function (if you like the suggestion); * Resolve merge conflicts (not sure how those crept in -- maybe the license change -- hopefully nothing serious). And then I think we can merge! :D,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1481#issuecomment-890217983:75,Update,Update,75,https://qutip.org,https://github.com/qutip/qutip/pull/1481#issuecomment-890217983,1,['Update'],['Update']
Deployability,"@Ericgig any tips how to locally run `pycodestyle` linter so that it follows same settings as `codeclimate`? When I run it locally it show way more warnings than `codeclimate`, seems a lot more restrictive. I'm sure some sort of configuration is missing. I checked the [contribution guide](https://qutip.org/docs/latest/development/contributing.html) but this particular matter is not detailed. If you explain how to run linter locally I would be happy to also update the docs and document it for the future contributors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1655#issuecomment-925558661:229,configurat,configuration,229,https://qutip.org,https://github.com/qutip/qutip/pull/1655#issuecomment-925558661,2,"['configurat', 'update']","['configuration', 'update']"
Deployability,@Ericgig any updates on this? Also can you enable CI?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2303#issuecomment-1916236148:13,update,updates,13,https://qutip.org,https://github.com/qutip/qutip/pull/2303#issuecomment-1916236148,1,['update'],['updates']
Deployability,"@Ericgig at the moment, the issue can be reproduced by. ```; from qutip import settings, coherent; settings.num_cpus = 1; a = coherent(2000, 5); ```. The creation of the coherent state alone consumes all the cpus in my computer. I do not know how to check if openmp is involved. I made a standard install via pip install qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1175#issuecomment-583684535:297,install,install,297,https://qutip.org,https://github.com/qutip/qutip/issues/1175#issuecomment-583684535,2,['install'],['install']
Deployability,"@Ericgig good idea about the tests, I'll implement them in this way. now there seems to be some problem with continuous integration, it fails on. ```; ERROR: Failure: ImportError (libgfortran.so.1: cannot open shared object file: No such file or directory); ```. I attempted to fix it by installing `libgfortran` using `conda`, however it didn't fix the issue. https://github.com/travis-ci/travis-ci/issues/4816#issuecomment-148789525; https://github.com/menpo/landmarkerio-server/issues/23#issuecomment-278361601. I don't want to mess up too much with continous integration as it takes long time to rebuild it, any suggestions on that?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/917#issuecomment-427726780:109,continuous,continuous,109,https://qutip.org,https://github.com/qutip/qutip/pull/917#issuecomment-427726780,4,"['continuous', 'install', 'integrat']","['continuous', 'installing', 'integration']"
Deployability,@Ericgig not in any huge hurry. Once there is a nice subset of tests that can be run to test installation I will update the nixpkgs package for qutip. Thanks for being so responsive! For now I'll just delete some of the tests and can always update the package once the ability to test only a subset is added to a release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1147#issuecomment-569797675:93,install,installation,93,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569797675,4,"['install', 'release', 'update']","['installation', 'release', 'update']"
Deployability,"@Ericgig shall we merge it against the qutip-4.5.X branch, instead master branch? Or let me know if it is instead better to merge to master and be part of a micro (patch) release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/934#issuecomment-580108339:164,patch,patch,164,https://qutip.org,https://github.com/qutip/qutip/pull/934#issuecomment-580108339,2,"['patch', 'release']","['patch', 'release']"
Deployability,"@Ericgig: the commits are the same ones you just merged in (as in the same SHA-1 - they're completely identical git objects), so they shouldn't appear if you do a regular merge - the fact they still appear here _should_ just be that GitHub doesn't update its UI when other PRs are merged. I suggest regular merges because I've tidied up the commit history in these PRs, so it's easier to search back through the commit history.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1250#issuecomment-633709875:248,update,update,248,https://qutip.org,https://github.com/qutip/qutip/pull/1250#issuecomment-633709875,1,['update'],['update']
Deployability,"@Erotemic Thank you for documenting this. I will merge it shortly & have marked if for inclusion in QuTiP 4.6.3. Note that qutip-qip has also been split out into it's own package (https://github.com/qutip/qutip-qip) in preparation for QuTiP 5 so we should update it there too. `reverse_states` seems to reverse the order of the array of quantum and classical bits. It is a bit odd, so I'm happy to leave it undocumented. The original commit just read:. ```; commit dcf8d363718b6ee5a8a17ec9af00df4bc8aea166; Author: Robert Johansson; Date: Mon May 26 19:11:44 2014 +0900. allow reversing the circuit represenation. added support for multigate symbol; ```. @BoxiLi Just pinging you so you know I merged this and can comment if you like.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1652#issuecomment-914132388:256,update,update,256,https://qutip.org,https://github.com/qutip/qutip/pull/1652#issuecomment-914132388,1,['update'],['update']
Deployability,"@Gerb0ise The `no attribute 'blas_opt_info'` error is from a change in numpy 1.22 the broke qutip. After you found it it was also reported in #1753 and fixed in #1752. It will be released in 4.6.3 but that will likely only be next week, so for now reverting to numpy 1.20.3 might be the correct solution. BLAS is OPENBLAS now because of the `nomkl` used previously. You can switch blas implementations back to MKL with `conda install ""libblas=*=*mkl""` (see https://conda-forge.org/docs/maintainer/knowledge_base.html#switching-blas-implementation).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750#issuecomment-1006031950:179,release,released,179,https://qutip.org,https://github.com/qutip/qutip/issues/1750#issuecomment-1006031950,2,"['install', 'release']","['install', 'released']"
Deployability,"@HarshBabla99 I'm guessing based on the error message that you are running QuTiP on Windows. Do you have a C compiler installed? The compiler is needed to compile the strings. The Windows installation instructions are outlined at https://qutip.org/docs/latest/installation.html#installation-on-windows. I would recommend installing everything using conda if you can (see higher up on the install documentation page). If the compiler is installed, perhaps it is an issue with the compiler not being present in the `PATH`. Either way, this appears to be not an issue with QuTiP itself, but let's keep this issue open for a bit so that we can help you resolve things as best we can. I would also recommend upgrading your Python, QuTiP and numpy to more recent versions if possible. If you use conda, you should get the latest versions unless you explicitly request otherwise.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1914#issuecomment-1143281384:118,install,installed,118,https://qutip.org,https://github.com/qutip/qutip/issues/1914#issuecomment-1143281384,7,['install'],"['install', 'installation', 'installation-on-windows', 'installed', 'installing']"
Deployability,@Himorask can you please give details on your OS and QuTiP installation?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/965#issuecomment-473756529:59,install,installation,59,https://qutip.org,https://github.com/qutip/qutip/issues/965#issuecomment-473756529,1,['install'],['installation']
Deployability,@KosukeMizuno Thank you very much again for finding and reporting this error. We've addressed the issue in #1588. This fix will be included in the [4.6.3](https://github.com/qutip/qutip/milestone/19) release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1585#issuecomment-870513900:200,release,release,200,https://qutip.org,https://github.com/qutip/qutip/issues/1585#issuecomment-870513900,1,['release'],['release']
Deployability,"@Lala5th Thank you for reporting this. It looks like the issue is just hat `mesolve` calculates the `size` variable incorrectly for a flat array and the following diff removes the segfault for me:. ```diff; diff --git a/qutip/mesolve.py b/qutip/mesolve.py; index f6527299..25e9f3cd 100644; --- a/qutip/mesolve.py; +++ b/qutip/mesolve.py; @@ -435,6 +435,8 @@ def _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, opt,; output.solver = ""mesolve""; output.times = tlist; size = rho0.shape[0]; + if rho0.shape[1] == 1:; + size = int(np.sqrt(size)); ; initial_vector = rho0.full().ravel('F'); ```. I agree that we should not segfault. Probably the minimal patch is to raise an exception if `rho0.shape[0] != rho0.shape[1]`. If you agree, I can open a small PR (or you can if you would like to).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1782#issuecomment-1021275291:655,patch,patch,655,https://qutip.org,https://github.com/qutip/qutip/issues/1782#issuecomment-1021275291,1,['patch'],['patch']
Deployability,"@PZJuly sorry, I missed the vital word *not* from my comment above. I have updated it now.; Hopefully my reply on the Google group will be sufficient to help you for now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/946#issuecomment-461721966:75,update,updated,75,https://qutip.org,https://github.com/qutip/qutip/issues/946#issuecomment-461721966,1,['update'],['updated']
Deployability,"@Phyks Thanks for the suggestion. I made the qutip.cite() function to print and generate a bibtex file. Perhaps this is sufficient. With a message during install mentioning that you can invoke""; ```; from qutip.about import cite; cite(""path_to_generate_bibtex""); ```; to get the bibtex file and printing the output on the screen. @ajgpitch Should I add this to the setup.py file. Can we move this PR forward?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/752#issuecomment-356861565:154,install,install,154,https://qutip.org,https://github.com/qutip/qutip/pull/752#issuecomment-356861565,1,['install'],['install']
Deployability,"@Prashik123, sure you can work on it. If you are not sure where to start, install qutip from source using the version 3 of cython in pre-release. You will get a lot of warnings related to the point 1 above. Fix those warnings and make a PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2117#issuecomment-1466976688:74,install,install,74,https://qutip.org,https://github.com/qutip/qutip/issues/2117#issuecomment-1466976688,2,"['install', 'release']","['install', 'release']"
Deployability,"@SJUW the towncrier entry should be in the previous pull request.; You can update a pull request by pushing new commit on the branch on github.; To fix this, you can do something like:; ```; git checkout patch-1; git merge patch-2; git push origin patch-1; ```; Then the towncrier entry should appear in #2181.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2187#issuecomment-1611267938:75,update,update,75,https://qutip.org,https://github.com/qutip/qutip/pull/2187#issuecomment-1611267938,4,"['patch', 'update']","['patch-', 'update']"
Deployability,"@Vutshi That sounds interesting. I have not done much coding at the intrinsics level before, so I am finding out about all sorts to tricks. I saw a couple of lectures by a guy at Intel whom suggested that the best way to go is to let the compiler figure it out after hinting and adding pragma. For vectorization, he suggested OPENMP 4+ as the way to go. They have a omp for simd pragma that was suggested. However, OPENMP 4+ requires GCC 4.9+ and some corresponding LLVM version that probably makes those methods a bit too specialized for a general qutip release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/551#issuecomment-254498919:555,release,release,555,https://qutip.org,https://github.com/qutip/qutip/pull/551#issuecomment-254498919,1,['release'],['release']
Deployability,@ajgpitch @gautierronan I've updated this PR. I *think* it's ready to be merged (assuming tests pass in CI now) but a final look from you would be appreciated since this is not a part of QuTiP I know well yet.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1369#issuecomment-1058307269:29,update,updated,29,https://qutip.org,https://github.com/qutip/qutip/pull/1369#issuecomment-1058307269,1,['update'],['updated']
Deployability,@ajgpitch @nonhermitian In ProjectQ they have an install option which lets you use the library without the C++ simulator by specifying the parameter `--without-cppsimulator` during a `python setup.py install` [Link](https://github.com/ProjectQ-Framework/ProjectQ). We can try something like that if you want a version of qutip which can run even without a working compiler. [Here](https://github.com/ProjectQ-Framework/ProjectQ/blob/master/setup.py#L132) is their `setup.py` file with the conditional compilation. In any case moving the .pyx files so that user has the option to run qutip even without a working compiler setup seems like a good idea.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/580#issuecomment-271070222:49,install,install,49,https://qutip.org,https://github.com/qutip/qutip/issues/580#issuecomment-271070222,2,['install'],['install']
Deployability,"@ajgpitch I looked into the changes that Daniel mentioned. But, I would like to close this without merging with QuTiP as I feel that the QubitCircuit class needs some new features to make this addition interesting (Eg., allowing special ancillas, controlled measurement and tracking of the Pauli measurement errors etc.). This was almost 3 years back where I brute forced all of that as Gates. I am not happy to release this code as it is which can be buggy. So, I am closing this. If there is more interest later, we could open it again.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/603#issuecomment-466346440:412,release,release,412,https://qutip.org,https://github.com/qutip/qutip/pull/603#issuecomment-466346440,1,['release'],['release']
Deployability,@ajgpitch Thanks for taking a look. I updated the docstring for the tests. The fancy docstrings are tested as the API docs are also up on piqs.readthedocs.io. We can also add a complete tutorial section with all the nice notebooks that @nathanshammah has compiled. I think this makes case for the long overdue 4.3 release? Should I open another thread for adding a warning for dropping python2 in QuTiP 5?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/861#issuecomment-396890968:38,update,updated,38,https://qutip.org,https://github.com/qutip/qutip/pull/861#issuecomment-396890968,2,"['release', 'update']","['release', 'updated']"
Deployability,"@ajgpitch great, yes, those I am familiar with. If you choose to to merge this, it will be even easier to update my qutip. Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/679#issuecomment-291826672:106,update,update,106,https://qutip.org,https://github.com/qutip/qutip/pull/679#issuecomment-291826672,1,['update'],['update']
Deployability,"@ajgpitch yes, the solver does raise an error... but not always. I was able to get it to integrate a few times but it was very inconsistent. The other error it sometimes raises is ""too much accuracy was requested for the precision of the machine"". When I realized the issue, I was very surprised it even got that far and I still don't know how it could ever run the calculation with a bad `rho0`. @nonhermitian yes, I see the point in the code where `mesolve` digs down into various types of `H` input. I'll work on something for the easy Qobj cases first, and think about how to handle the function case. Should be able to test the size of what the function returns.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/479#issuecomment-221595850:89,integrat,integrate,89,https://qutip.org,https://github.com/qutip/qutip/issues/479#issuecomment-221595850,1,['integrat'],['integrate']
Deployability,"@ajgpitch, I think that instance method picking is still somewhat of an issue in python 3, (which is what I use primarily) although I could be wrong. Either way, since the current QuTiP version supports 2.7, we would need to make this backward compatible to do multiprocessing correctly, so I'm glad you agree that option 3 is best. As to dropping python2 support, I think that this would be a good idea for v5.0, since [python is dropping support for 2.7 in two years](https://legacy.python.org/dev/peps/pep-0373/), which could be close to the time that QuTiP v5 is released (depending on how long the changes take). @sahmed95, thanks for making those final changes - sorry, I had forgotten to make the docstring capitalization changes. I'm happy with the state of the module now, so go ahead and merge it. There haven't been any functional changes made to how anything works, so none of my other pull requests ([[1]](https://github.com/qutip/qutip-notebooks/pull/58), [[2]](https://github.com/qutip/qutip-doc/pull/59), [[3]](https://github.com/qutip/qutip.github.io/pull/51)) should need to be updated. In the qutip-docs PR, for the moment I've only added auto-doc documentation, but I'll add more extensive documentation before version 4.3 is released (when is the expected time frame for this?) so that people will have more to refer to when this new feature is announced. . Thanks to everyone involved in this review process for their constructive feedback!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/848#issuecomment-386413620:567,release,released,567,https://qutip.org,https://github.com/qutip/qutip/pull/848#issuecomment-386413620,3,"['release', 'update']","['released', 'updated']"
Deployability,"@ajgpitch, please try this latest update on Win. I had everything up and running at work today. The only thing I didn't have was a spmv source file that compiled under GCC, CLANG, and VS. I think the file I have up now should work, but as I don't have Win at home, I need a verification. The only thing missing from the pull is the optional fortran extension. I will add that on Monday.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/648#issuecomment-280822855:34,update,update,34,https://qutip.org,https://github.com/qutip/qutip/pull/648#issuecomment-280822855,1,['update'],['update']
Deployability,"@alexandrupaler Thank you for looking into this. You will have to download this branch and install it in order to find qutip.qip.icm. I think the following set of steps should do it. These are from this [stack overflow question](https://stackoverflow.com/questions/1911109/how-to-clone-a-specific-git-branch). 1. Clone my version of QuTiP using ; ```; git clone https://github.com/sahmed95/qutip.git; ```. 2. Checkout the icm branch in the cloned folder; ```; git checkout icm; ```; 3. Install QuTiP from that branch by going to cloned QuTiP folder; ```; python setup.py install; ```; Alternate way to do this is just copy paste the `qutip/qip/icm.py`, `qutip/qip/circuit.py` and `qutip/tests/test_qubitcircuit.py` files into your local installation of QuTiP. . There are examples in [`qutip/qip/tests/test_icm.py`](https://github.com/qutip/qutip/pull/603/files#diff-93808767f70729e7e757566e9a32b430) which may be useful to see how the code works. @ajgpitch @nonhermitian Suggestions on the recommended way of doing this ? There is this tool called [""hub""](https://hub.github.com) which allows you to directly checkout pull requests using `hub checkout https://github.com/qutip/qutip/pull/603`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/603#issuecomment-315378380:91,install,install,91,https://qutip.org,https://github.com/qutip/qutip/pull/603#issuecomment-315378380,4,"['Install', 'install']","['Install', 'install', 'installation']"
Deployability,"@alexandrupaler, any updates ? The main part of the code is in the function [`to_icm()`](https://github.com/qutip/qutip/pull/603/files#diff-9b2fa79d9553701cbcf7c56a0aa1c679R539). First, the Toffoli and H gates are decomposed and then the P, V, T gates are replaced with the representation you have in the paper using gate teleportation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/603#issuecomment-320902421:21,update,updates,21,https://qutip.org,https://github.com/qutip/qutip/pull/603#issuecomment-320902421,1,['update'],['updates']
Deployability,"@araza6 thank you. Tests in continuous integration are failing. There seem to be too many PEP8 changes (from `black`?) in this PR, unrelated to the changed files. I am not so sure about the constraints put on the use of the `fidelity` function. I had left it as this to keep as much freedom as possible and not spoon feed the user. It is basically a shortcut for Tr(x^2), not much else.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-613052212:28,continuous,continuous,28,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-613052212,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,"@asma2farhat; If you don't use `countstat`, you can safely ignore this.; Otherwise it should be fixed in the `qutip-4.7.X` branch with #2323, (not released yet, coming in 4.7.6):; `pip install git+https://github.com/qutip/qutip@qutip-4.7.X`; It should also be fixed in v5 that is in beta `pip install qutip --pre`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755#issuecomment-1994342977:147,release,released,147,https://qutip.org,https://github.com/qutip/qutip/issues/1755#issuecomment-1994342977,3,"['install', 'release']","['install', 'released']"
Deployability,@awkwardPotato812 Hi. Your error is similar to the problem on this [website ](https://iq.opengenus.org/module-compiled-against-api-version-0x10-but-this-version-of-numpy-is-0xe/). You may have to upgrade your numpy.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2098#issuecomment-1463557721:196,upgrade,upgrade,196,https://qutip.org,https://github.com/qutip/qutip/issues/2098#issuecomment-1463557721,1,['upgrade'],['upgrade']
Deployability,"@cgranade I'm really liking the overall look of the Instrument class -- it's a much easier way to deal with measurements than calling the measurement operations all the time & of combine measurement operations with other operations on Qobjs. I'm keen to hear feedback from others too, but in the mean time I'm going to note some thoughts here for when I come back to this:. * It would be good to think about how all the operations on Qobj match up with QuTiP version 5 (since this draft is based on v4 currently).; * I'd like to think about removing `Seq` and `Par` and replacing them with some simple rules for sequences, strings and numbers. This would match, e.g., `qutip.ket(""01"")` and `qutip.basis([2, 2], [0, 1])`. `Seq` and `Par` do however make it really clear that in one case measurements follow each other on the same subspaces and in the other they are performed simultaneously on different subspaces, so I'm not quite sure. Maybe there is some middle ground.; * In QuTiP it's more normal to have the helper constructors not on the class as classmethods. I do like secondary constructors as classmethods, but I think in cases like this where there are essentially an infinite number of possible constructors, it makes sense to not ""bless"" any of them by sticking them on the class.; * It would be good to have one really nice use case that we could turn into a guide entry in the documentation. The current small examples are great, but it would be good to add one slightly bigger worked example that did something more ""exciting"".; * I would not push everything into the `qutip` namespace (largely because we would likely not want that in v5, although I should actually check what v5 is doing in `qutip.__init__` these days).; * We should decide whether to target QuTiP 4.7 or 4.7 and 5 for this. Target just v5 means not having to worry about making it nice in both, but will mean it'll be a bit more of a delay before release). Hoping to hear comments from others!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1687#issuecomment-949022910:1933,release,release,1933,https://qutip.org,https://github.com/qutip/qutip/pull/1687#issuecomment-949022910,1,['release'],['release']
Deployability,@cntnly Thanks for this PR. Any updates on the unit test?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/719#issuecomment-396797556:32,update,updates,32,https://qutip.org,https://github.com/qutip/qutip/pull/719#issuecomment-396797556,1,['update'],['updates']
Deployability,"@drew-parsons If fixing this will help packaging for Debian, we will definitely fix it!. This appears to be considered an `Xvfb` bug (or at least the discussion in https://github.com/The-Compiler/pytest-xvfb/issues/11 suggests that), but having tests close their windows does seem polite anyway. Installing `xvfb` and `pytest-xvfb` reproduces the error for me and adding `plt.close(""all"")` to the end of `testPlot` removes the error again. After that the rest of the test suite passes, although there have been some reports in the pytest-xvfb of timing or test order sensitive results, so there may be more problems to be found later. For now I'll open a PR that adds the `plt.close(""all"")`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639#issuecomment-909191682:296,Install,Installing,296,https://qutip.org,https://github.com/qutip/qutip/issues/1639#issuecomment-909191682,1,['Install'],['Installing']
Deployability,"@drew-parsons Is this still an issue for the Debian package? I'm not quite sure how to reproduce my side, but I am cutting the 4.7.1 release soon, so this would be a good time to address this if we can.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1875#issuecomment-1342946354:133,release,release,133,https://qutip.org,https://github.com/qutip/qutip/issues/1875#issuecomment-1342946354,1,['release'],['release']
Deployability,@emilianomfortes Hello! I would like to include this in the QuTiP 4.7 release. Do you have time to incorporate or respond to @Ericgig's suggestions?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1739#issuecomment-1033971350:70,release,release,70,https://qutip.org,https://github.com/qutip/qutip/pull/1739#issuecomment-1033971350,1,['release'],['release']
Deployability,"@fhopfmueller Thank you for looking into these various issues! PRs would be very much appreciated. Perhaps lets do separate PRs for the tests, then `process_fidelity` and then `average_gate_fidelity`?. I would like to release 4.7 in the not too distance future, so one option is to target dev.major / 5 directly (in which case the tests are already fixed).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1703#issuecomment-957253538:218,release,release,218,https://qutip.org,https://github.com/qutip/qutip/issues/1703#issuecomment-957253538,1,['release'],['release']
Deployability,"@gaurav-iiser @AGaliciaMartinez I'm fixing a rendering issues in https://github.com/qutip/qutip/pull/1619. The `.show()` issue encountered here is slightly different, but it's all related to cleaning up when and how the bloch sphere is updated and displayed, so I added a fix for `.show()` there. Let's keep this PR for the shiny new functionality and #1619 for the bug fixing of `.render()` and `.show()`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1690#issuecomment-950308746:236,update,updated,236,https://qutip.org,https://github.com/qutip/qutip/pull/1690#issuecomment-950308746,1,['update'],['updated']
Deployability,@gautierronan Apologies for the long delay in further review of this. Could you perhaps update this branch from master and then ping me to review it again? I can them hopefully review and merge this and mark it for inclusion in QuTiP 4.7.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1369#issuecomment-893433268:88,update,update,88,https://qutip.org,https://github.com/qutip/qutip/pull/1369#issuecomment-893433268,1,['update'],['update']
Deployability,"@gautierronan Just checking up on this again. Are you keen to finish the PR? If not, I can try find someone else to get it merged, but it would be good to get it merged before 4.7, which should be released in the not too distant future.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1369#issuecomment-992981750:197,release,released,197,https://qutip.org,https://github.com/qutip/qutip/pull/1369#issuecomment-992981750,1,['release'],['released']
Deployability,"@goerz I think one of Mølmer's papers (maybe the one I have pointed out) addressed the equivalence of the two methods. Sorry, I don't have a definite paper to point out at this moment. I was actually organizing the Julia community to work on this direction (see [JuliaQuantum](http://juliaquantum.github.io)) from scratch, and hence didn't follow up the efforts in the measurement simulation within QuTiP. . When I was writing my paper on continuous measurement ([PRA, 93.023817](http://journals.aps.org/pra/abstract/10.1103/PhysRevA.93.023817)), I came up the argument that the former method may be more appropriate for measurement models. This is because measurements have to happen in evenly spaced time steps determined by the detector's integrating time, so it is intuitive to use a random number to judge if on each measurement step the quantum jump will happen. There may be a way to use the second method to implement the same measurement simulation model, but I didn't think too much on it. In reality, I developed another more efficient method without actually evolving the density operator in my paper to simulate continuous measurement using a set of stochastic equations for squeezing thousands of atoms' state which has not been included in QuTiP yet. Sorry I don't have more useful reference that explains this point in more details at this moment. Good luck!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/111#issuecomment-220744432:439,continuous,continuous,439,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-220744432,3,"['continuous', 'integrat']","['continuous', 'integrating']"
Deployability,"@goerz We've added support for loky in QuTiP 5. Is that good enough for you? It might be awhile before QuTiP 5 is released (e.g. later this year). If yes, we can close this PR (loky support was added to dev.major in #1462). If no, we can try make a plan to get it into 4.7.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1092#issuecomment-875598365:114,release,released,114,https://qutip.org,https://github.com/qutip/qutip/pull/1092#issuecomment-875598365,1,['release'],['released']
Deployability,"@haoyudoingthings It looks from your error messages that they are caused not by the import cells, but by later cells, and are the result of having modified the notebook. For example, `H = qt.qobj_list_evaluate(h_t, tau, args)` is a modified line from cell 13 of the original notebook. I would suggest starting again from the original notebook and continuing from there. Some of the notebooks are out of date. We're setting up automated tests to correct that as part of this year's Google Summer of Code, but that has only just started so it might be a few months before we have everything set up. I'm closing this for now, but please feel free to update the issue if you encounter more problems.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1930#issuecomment-1153919964:647,update,update,647,https://qutip.org,https://github.com/qutip/qutip/issues/1930#issuecomment-1153919964,1,['update'],['update']
Deployability,"@heathcliffYang This seems to be running okay. I hope you can use QuTiP now. Try running this simple code in python. ```; from qutip import *. rho = basis(2, 0); print(rho); ```. P.S. you may also want to update your Anaconda as the latest is Anaconda 5. Let me know if you have any other issues.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387667826:205,update,update,205,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387667826,1,['update'],['update']
Deployability,"@henryiii Thank you for taking the time to make this much nicer looking PR. It does look much better, I just have to try convince myself everything will work now. It looks like the build is currently failing because `--no-build-isolation` doesn't install the build depedencies so we'll need to install them manually. I wonder what the best way to support that is (since users would likely have to do it themselves regularly too).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1738#issuecomment-990015553:247,install,install,247,https://qutip.org,https://github.com/qutip/qutip/pull/1738#issuecomment-990015553,2,['install'],['install']
Deployability,"@henrykironde Eep. Thank you for wrangling all the projects. Our ideas list already lists sizes for all project ideas, so 1 & 2 are covered. I am double checking 3 now. I'll check update the numfocus issue and close this one once I'm done.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1815#issuecomment-1050747285:180,update,update,180,https://qutip.org,https://github.com/qutip/qutip/issues/1815#issuecomment-1050747285,1,['update'],['update']
Deployability,@hodgestar . I removed the `_rhs` by changing it so the rhs is built when making the integrator instead of in `__init__`. I also simplified the way options are updated so brmesolve no longer need to overwrite `_apply_options`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2173#issuecomment-1681331940:85,integrat,integrator,85,https://qutip.org,https://github.com/qutip/qutip/pull/2173#issuecomment-1681331940,2,"['integrat', 'update']","['integrator', 'updated']"
Deployability,@hodgestar : The hyperlinks should be updated on dev.major?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1526#issuecomment-1147504145:38,update,updated,38,https://qutip.org,https://github.com/qutip/qutip/issues/1526#issuecomment-1147504145,1,['update'],['updated']
Deployability,"@hodgestar ; Instead of waiting for the fix to be released in cython, I commented the missing feature: data specializations' `__module__`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2151#issuecomment-1681332508:50,release,released,50,https://qutip.org,https://github.com/qutip/qutip/pull/2151#issuecomment-1681332508,1,['release'],['released']
Deployability,@hodgestar As a proverb says: re-installing solves 99% of the problem XD.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1650#issuecomment-913469588:33,install,installing,33,https://qutip.org,https://github.com/qutip/qutip/issues/1650#issuecomment-913469588,1,['install'],['installing']
Deployability,"@hodgestar Hi, I have made sure Qutip is running at version 4.7.0 however still after trying your updated version of the jaynes cumming model I am still experiencing the same issues. I have tried starting from scratch but this still doesn't change the output. I really appreciate your help as I'm writing my dissertation and I have to give a presentation on it in 5 weeks. ; Kind regards ; Archie",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1987#issuecomment-1229173727:98,update,updated,98,https://qutip.org,https://github.com/qutip/qutip/issues/1987#issuecomment-1229173727,1,['update'],['updated']
Deployability,"@hodgestar Hi, I have managed to reproduce the error with a much smaller code which i have attached at the bottom. Quitp.about() :. QuTiP Version: 4.7.0; Numpy Version: 1.21.5; Scipy Version: 1.7.3; Cython Version: 0.29.28; Matplotlib Version: 3.5.1; Python Version: 3.9.12; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /opt/anaconda3/lib/python3.9/site-packages/qutip. <img width=""1130"" alt=""Screenshot 2022-08-27 at 12 58 25"" src=""https://user-images.githubusercontent.com/75099190/187029284-1cda7133-9ed1-4b95-82a0-d1b5eb10c36e.png"">. ￼; <img width=""1074"" alt=""Screenshot 2022-08-27 at 12 58 46"" src=""https://user-images.githubusercontent.com/75099190/187029267-49dc711b-412f-4e12-acb4-cfb195902351.png"">. ￼; import numpy as np; from qutip import *. wc = 1.0 * 2 * np.pi ; wa = 1.0 * 2 * np.pi ; g = 0.05 * 2 * np.pi ; N=15 ; rate = 0.005. tlist = np.linspace(0, 25, 101); psi0 = tensor(basis(N, 0), basis(2, 1)) ; a = tensor(destroy(N), qeye(2)); sm = tensor(qeye(N), destroy(2)); H = wc * a.dag() * a + wa * sm.dag() * sm + g * (a.dag() * sm + a * sm.dag()). output = mesolve(H, psi0, tlist)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1987#issuecomment-1229179569:322,Install,Installed,322,https://qutip.org,https://github.com/qutip/qutip/issues/1987#issuecomment-1229179569,2,['Install'],"['Installation', 'Installed']"
Deployability,@hodgestar I updated the sidebar instructions.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2399#issuecomment-2070114125:13,update,updated,13,https://qutip.org,https://github.com/qutip/qutip/pull/2399#issuecomment-2070114125,1,['update'],['updated']
Deployability,"@hodgestar I've added some tests for the spin_q_function. At the moment it tests a random density matrix for three different spin values. I'm not very familiar with qutip's style for writing tests, I would normally write a test function that would also take arguments but that doesn't seem to be the norm here. We could also do something similar to the `TestHusimiQ` class of tests. I've had a look at the `spin_wigner` function as well, and I believe that had the same issue of density matrix indexing.; I've re-implemented it (and the `_rho_kq` function) and I've added details to the docstrings including relevant references.; Should I create a separate PR for this or should I expand the scope of this PR?. NB: At the moment I can't think of an easy way to test the spin Wigner function because there is no simpler/alternative definition that I am aware of to verify the implementation against.; There are simple tests such as if the imaginary part is less than some threshold (currently true), does it integrate to 1 (currently not true, not sure why).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1632#issuecomment-893964617:1007,integrat,integrate,1007,https://qutip.org,https://github.com/qutip/qutip/pull/1632#issuecomment-893964617,1,['integrat'],['integrate']
Deployability,@hodgestar Should be now updated.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1692#issuecomment-947724957:25,update,updated,25,https://qutip.org,https://github.com/qutip/qutip/pull/1692#issuecomment-947724957,1,['update'],['updated']
Deployability,@hodgestar Yes. I could import `qutip.testing` in my terminal but fail in Jupyter notebook. But I re-installed the qutip lib and now it could be imported successfully.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1650#issuecomment-913463573:101,install,installed,101,https://qutip.org,https://github.com/qutip/qutip/issues/1650#issuecomment-913463573,1,['install'],['installed']
Deployability,"@hodgestar any updates on merging this, I'm hoping to extend some of this functionality!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1090#issuecomment-626381159:15,update,updates,15,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-626381159,1,['update'],['updates']
Deployability,@hodgestar changelog updated.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1630#issuecomment-893461777:21,update,updated,21,https://qutip.org,https://github.com/qutip/qutip/pull/1630#issuecomment-893461777,1,['update'],['updated']
Deployability,"@hodgestar okay so I figured out some code. It's VERY close to getting the max frequency, but it's not perfect. . The method I'm using is very similar to how I pull the current frequency, but it's just different enough that it gives a different output. Basically what I'm doing is executing a bunch of `add` instructions through inline assembly multiple times (which will take it's sweet time based on CPU cycles), measuring the time it takes to finish, and doing some fun maths. The problem is that the output it still variates just a little bit. On my M1 Mac mini, 85% of the time I get `2.8 GHz`, and 15% of the time I get `3.1 GHz`...Still needs some fine tuning, but it's better than using `sysctl hw.tbfrequency` or a fixed value. The function is [here](https://github.com/BitesPotatoBacks/osx-cpufreq/blob/4590c2ef6080466df4bda18771f02dd1d2c2c1fd/osx-cpufreq/main.m#L53-L85), and the assembly it uses is [here](https://github.com/BitesPotatoBacks/osx-cpufreq/blob/4590c2ef6080466df4bda18771f02dd1d2c2c1fd/osx-cpufreq/main.m#L19). If anyone else with an Apple Silicon machine wants to test this new trick out, my binary is [here](https://github.com/BitesPotatoBacks/osx-cpufreq/releases) (follow preparation and usage instructions from the projects readme, and make sure to run the binary with option `-x`).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1754#issuecomment-1010398434:1184,release,releases,1184,https://qutip.org,https://github.com/qutip/qutip/pull/1754#issuecomment-1010398434,1,['release'],['releases']
Deployability,"@hodgestar shall we attempt to sort out the caching now, or get things moved over ahead of Unitary Hack and sort it out later? I don't think it's particularly a blocking issue - the tests still all run fine, after all. There's an argument against using `pip wheel` caching for us - we've historically used our tests to try and catch errors when using new versions of packages, which we'd lose if we start pinning versions to one particular thing. I'm not sure which is more desirable for us - overall I think the time loss from installing `cvxpy` isn't _that_ high, and we'd get more improvement from redoing some of our older tests. (Not to mention the _effective_ wait time for tests to pass is now ~35 minutes, whereas it could be >2hours on Travis since you had to wait from Mac machines for a long time.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1551#issuecomment-839686694:528,install,installing,528,https://qutip.org,https://github.com/qutip/qutip/pull/1551#issuecomment-839686694,1,['install'],['installing']
Deployability,"@hodgestar, one of the tests seems to have failed at the installation step, although not idea why. Nevertheless, I think it is not related to the changes in this PR. Could you rerun the test?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1636#issuecomment-940959780:57,install,installation,57,https://qutip.org,https://github.com/qutip/qutip/pull/1636#issuecomment-940959780,1,['install'],['installation']
Deployability,"@hodgestar, to make it work with HEOM, I had to change `step` to return `rho` directly, (controlled by the `store_ados` options). Could you take a look and tell me if you are fine with this approach. Also, do you know a `Bath` configuration that would result in evolution similar to `mesolve` so we could use it in tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1999#issuecomment-1258539120:227,configurat,configuration,227,https://qutip.org,https://github.com/qutip/qutip/pull/1999#issuecomment-1258539120,1,['configurat'],['configuration']
Deployability,"@jakelishman @Ericgig Reviews would be very much appreciated since this is a somewhat complicated problem space and affects everyone. I am trying to decide whether to add some documentation explaining that one might want to do `pip install -e . --no-build-isolation` when developing locally, but our documentation still recommends `python setup.py develop` and I don't want to add a complicated explanation to the docs just yet (I'd rather see what people get stuck on in practice first) because this part of pip has only stabilized fairly recently (and maybe not even yet).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1747#issuecomment-1002526242:232,install,install,232,https://qutip.org,https://github.com/qutip/qutip/pull/1747#issuecomment-1002526242,1,['install'],['install']
Deployability,"@jakelishman @nathanshammah I'm guessing out site.css file go dropped accidentally at some point, but I don't actually know why the custom styling in it is there. I could just delete the styling that was there before and we could slowly re-add it if we need to?. **Update**:; * We don't use `alert` anywhere in the generated HTML.; * We don't use `navbar-text` anywhere.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1678#issuecomment-929083917:265,Update,Update,265,https://qutip.org,https://github.com/qutip/qutip/pull/1678#issuecomment-929083917,1,['Update'],['Update']
Deployability,@jakelishman I think a deploy of 4.6.1 on a call is an excellent idea. I'm will to drive the process in the call -- then at least someone other than you will have done it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1541#issuecomment-831239812:23,deploy,deploy,23,https://qutip.org,https://github.com/qutip/qutip/pull/1541#issuecomment-831239812,1,['deploy'],['deploy']
Deployability,"@jakelishman, thanks for the explanation! I forget the tests here belong to the circuit module. @Canoming Would you still like to add some tests to `tests\test_qubitcircuit.py` for `remove_gate` and `add_circuit`? Otherwise, I can also merge this and we will update the tests later.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1269#issuecomment-629800241:259,update,update,259,https://qutip.org,https://github.com/qutip/qutip/pull/1269#issuecomment-629800241,1,['update'],['update']
Deployability,"@jfeist @Ericgig I've added this to the 4.6.3 release milestone. The result of `enr_destroy` was not incorrect, but I'm sure users will appreciate the drastic performance improvement. Even 4s is a long time to wait at a Jupyter notebook prompt even before one starts to call `enr_destroy` often or allow more excitations.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1593#issuecomment-875447468:46,release,release,46,https://qutip.org,https://github.com/qutip/qutip/pull/1593#issuecomment-875447468,1,['release'],['release']
Deployability,@jsmarsha11 Thank you for reporting this and figuring things out. The use of `np.array2string` is indeed suboptimal and will hopefully be removed as part of the solver rework in QuTiP version 5 which we hope to release later this year.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1624#issuecomment-892692218:211,release,release,211,https://qutip.org,https://github.com/qutip/qutip/issues/1624#issuecomment-892692218,1,['release'],['release']
Deployability,"@kcgthb I suggest you stick with cython 0.25 until we have officially released qutip 4.2, which should work with cython 0.26",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-318100485:70,release,released,70,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-318100485,1,['release'],['released']
Deployability,"@ksohan Apologies for the long delay in reviewing this PR. I'd prefer not to include this in QuTiP 4.7 because we're preparing for QuTiP 5 and so not adding too many more things to QuTiP 4. I'm not against the idea of supporting other iterable types in the conversion function but to do so we need:. - this PR to be made against the dev.major branch (which is where QuTiP 5 is being developed currently); - some thinking is needed on what should happen if a tuple is passed? Or a generator function? And also about what should be returned; - the docstrings would need to be updated. I'll leave this open for a bit so we can discuss more, but for QuTiP 5 a new PR would be needed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1845#issuecomment-1134828280:574,update,updated,574,https://qutip.org,https://github.com/qutip/qutip/pull/1845#issuecomment-1134828280,1,['update'],['updated']
Deployability,"@maij The code is looking good to me. I've requested some changes and after that I'd like to do a final review, but I think we're in good shape. My thoughts on the remaining questions:. > Decide if the spin_wigner function should return only real values be default (as is currently done for the spin_q_function). I'm +1 on returning real values since the Wigner function is real valued and this is more consistent (unless you're aware of any strange cases where it might somehow not be?). > Decide whether to integrate the W function normalization in _rho_kq rather than at the top level. We divide all terms by (2*j + 1) only to end up multiplying it back out at the end which is a waste of time (_rho_kq is called d**2 times, d=2*j+1) . The benefit of leaving it as-is is that it reads like most definitions in literature. I'm +1 on sticking to the definitions in literature unless there is a measured speed penalty. `2*j + 1` likely can't be that big and the small number of arithmetic operations required is probably dwarfed by the matrix multiplications happening. . > Decide if normalization factor for Wigner and spin Q function should be included (Davis et al. suggest the normalization factor is only introduced during integration: Eq 14 https://arxiv.org/abs/2008.10167). Here I would try stick as closely as possible to the previous behaviour of these functions (i.e. cases which worked before should hopefully return the same answer now) and then document clearly what the normalization factor is and how it should be added or removed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1632#issuecomment-904598186:509,integrat,integrate,509,https://qutip.org,https://github.com/qutip/qutip/pull/1632#issuecomment-904598186,2,['integrat'],"['integrate', 'integration']"
Deployability,@matteoacrossi I use miniforge but for me the numpy installation just worked. I dont think I changed anything prior to installing numpy etc.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740#issuecomment-992405042:52,install,installation,52,https://qutip.org,https://github.com/qutip/qutip/issues/1740#issuecomment-992405042,2,['install'],"['installation', 'installing']"
Deployability,@matteoacrossi Thank you for reporting back. Progress at least. I've flagged #1606 as a requirement for the 4.6.3 release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740#issuecomment-1006415107:114,release,release,114,https://qutip.org,https://github.com/qutip/qutip/issues/1740#issuecomment-1006415107,1,['release'],['release']
Deployability,"@mba5811 Which version of QuTiP are you using and how did you install it (e.g. conda, pip, etc)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1613#issuecomment-882522316:62,install,install,62,https://qutip.org,https://github.com/qutip/qutip/issues/1613#issuecomment-882522316,1,['install'],['install']
Deployability,@mortenkjaergaard once merged there are documented procedures for you to install the latest version from this repo,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/679#issuecomment-291807222:73,install,install,73,https://qutip.org,https://github.com/qutip/qutip/pull/679#issuecomment-291807222,1,['install'],['install']
Deployability,"@nathanshammah ; I am keeping the release up to date adding merged PR to this one.; This version has most bug fix PR since 4.5.0 and some testing/travis one.; Idealy I would also like to add 2 more waiting approval:; #1219 : Bug on windows using int32; #1215: parallel_map run on mac in python 3.8.; I did not add the PR about gates, they are new feature.; The latex one (#1194 ), I am not sure, so I left it for now.; To be really happy about the release I would like the segfault to be fixed, but I don't have the error and travis test also does not. So I am blind for that one. It will have to wait.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1215#issuecomment-613039746:34,release,release,34,https://qutip.org,https://github.com/qutip/qutip/pull/1215#issuecomment-613039746,2,['release'],['release']
Deployability,"@nathanshammah ; I expect it to be easy to use as an integrator:; ` _evolve_krylov_tlist` is essentially the `run`, `time_evolution` is `integrate`.; The interface just need to be adapted.; It would work well with `sesolve` and `mcsolve`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1644#issuecomment-908484939:53,integrat,integrator,53,https://qutip.org,https://github.com/qutip/qutip/pull/1644#issuecomment-908484939,2,['integrat'],"['integrate', 'integrator']"
Deployability,"@nathanshammah ; That was a lot more than 1 commit but it's now ready.; - I added a test suite without cython. It only skip brmesolve time dependent tests. ; - Error is raised when trying to use brmesolve without cython, but not at qutip import.; - Every other features works without cython. I tested without cython with both conda and pip. It work with both when done properly but conda is not as stable: uninstalling cython can change numpy, scipy, etc.'s versions which break qutip. So I am not sure if it will work properly we downloaded as binaries from conda. But this error should already be present for conda installation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1082#issuecomment-535188336:617,install,installation,617,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-535188336,1,['install'],['installation']
Deployability,"@nathanshammah @ajgpitch . Hi Nathan and Alex, this PR is ready. Is it be possible to get it merged before 1st Feb? It would be great if this update is ready before the talk. The main change I did was in; - processor.py; - pulse.py; - noise.py. The others are just updating, renaming and moving around.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1155#issuecomment-577155245:142,update,update,142,https://qutip.org,https://github.com/qutip/qutip/pull/1155#issuecomment-577155245,1,['update'],['update']
Deployability,"@nathanshammah @quantshah I tried it, but a lot of commits appear which don't belong to me. They are updates from the master branch.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1025#issuecomment-505048276:101,update,updates,101,https://qutip.org,https://github.com/qutip/qutip/pull/1025#issuecomment-505048276,1,['update'],['updates']
Deployability,"@nathanshammah Is there any file where all the external Functions used in Qutip have been stored, I have already covered the requirements of Qutip installation and matplotlib.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1528#issuecomment-643520203:147,install,installation,147,https://qutip.org,https://github.com/qutip/qutip/issues/1528#issuecomment-643520203,1,['install'],['installation']
Deployability,@nathanshammah Is this from within an Anaconda installation?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932#issuecomment-466467740:47,install,installation,47,https://qutip.org,https://github.com/qutip/qutip/issues/932#issuecomment-466467740,1,['install'],['installation']
Deployability,"@nathanshammah Thanks a lot for the review. I'm not sure how gist works, should I upload only the example or with the definition of `expand_oper`? Maybe we can talk about this tomorrow at the meeting. I have some examples in notebook. ; Yes, you are right, I think this PR could be merged directly to master, but I also used `expand_oper` in my `circuitprocessor` a lot so I may need you to update qip_opt from master branch.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1025#issuecomment-504767203:391,update,update,391,https://qutip.org,https://github.com/qutip/qutip/pull/1025#issuecomment-504767203,1,['update'],['update']
Deployability,"@nathanshammah, @Ericgig, @ajgpitch, @nwlambert, @quantshah, @BoxiLi, @hodgestar. I've updated this PR to match what I understand we agreed on. I've also added complete copyright notices to the documentation, including linking the CC-BY-3.0 licence the documentation text is licensed under, and making it clear that it's the documentation _text_ licensed under CC, and that the code is under 3-clause BSD. I've updated the frontmatter, and added a copyright notice to the index, so it's linked from every page in the documentation releases. I have updated the short copyright notice at the bottom of the documentation pages to say ""Copyright 2011 to 2021 inclusive, QuTiP developers and contributors"" to make it consistent with the source code (for the same reasons). As I've added a `_copyright` Sphinx target, the word ""Copyright"" at the bottom of the documentation is now hyperlinked as well. I didn't explicitly split this into more than one PR, but it's split into separate logical commits, which explain their extent and intent.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1579#issuecomment-866977298:87,update,updated,87,https://qutip.org,https://github.com/qutip/qutip/pull/1579#issuecomment-866977298,4,"['release', 'update']","['releases', 'updated']"
Deployability,"@nathanshammah: by my understanding, technically we're only meant to include years in which we make a new release of the code/documention with modifications from a previous release. I went and checked, and we did it for all of 2011, 2012, ..., 2021, and I assume we'll be doing it for some time beyond that as well, so we should be good. In this new format, it's also much easier to update - there's only something like 3 places in the entire codebase with the years now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1579#issuecomment-874615277:106,release,release,106,https://qutip.org,https://github.com/qutip/qutip/pull/1579#issuecomment-874615277,3,"['release', 'update']","['release', 'update']"
Deployability,"@nonhermitian mentioned something about being able to move the pyximport bit to somewhere in the dynamic C building workflow. Now that would be a real bonus. Say we have some (probably Windows) users who have not managed to configure a working C compiler, but have installed from a conda package or some other wheel like thing, then they would be able to use everything except the string format time-dependent stuff. ; This is also discussed in #448",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/580#issuecomment-269725490:265,install,installed,265,https://qutip.org,https://github.com/qutip/qutip/issues/580#issuecomment-269725490,1,['install'],['installed']
Deployability,@nquesada just pinging you as it would be great to have your contribution in the upcoming version release in a week or so.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1148#issuecomment-574254948:98,release,release,98,https://qutip.org,https://github.com/qutip/qutip/issues/1148#issuecomment-574254948,1,['release'],['release']
Deployability,"@nwlambert I have already made the pull request. The docstring was already updated specifing the needs of the colors you give to the add_points function depending of the style you proposed. I would like to ask two more questions:. -Is it necessary to create a changelog file if the change is small? I was reviewing the documentation and it tells you to create one but reviewing the ones that are created, they are few and all seem to be related to major code updates, so I assumed that one should only be created when the change in the project is significant. Am I right or should I add one?. -The other point I'd like to ask is if there are any open issues related to a plotting problem with the 'l' style. I believe I have found a bug related to plotting with this style due to the way the script orders the points before plotting, but I have not found any issues reporting it. . Plotting in V4:; ![Figure 2024-01-25 211444](https://github.com/qutip/qutip/assets/78165605/329291ec-195c-443f-8bf4-727fde7cdd24). Plottin in V5:; ![Figure_1](https://github.com/qutip/qutip/assets/78165605/ece1143f-d367-40db-b808-f573332b8d0a). I think I know how to solve it, but I'm not sure if someone has already reported it, if I should open a new issue or just solve it as part of this issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1974#issuecomment-1910952439:75,update,updated,75,https://qutip.org,https://github.com/qutip/qutip/issues/1974#issuecomment-1910952439,2,['update'],"['updated', 'updates']"
Deployability,@pmenczel I updated the PR again to simplify the new Cython code a lot and shift parts to Python. I'm much happier with this version and hopefully it makes it easier for you to understand too.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2070#issuecomment-1498867381:12,update,updated,12,https://qutip.org,https://github.com/qutip/qutip/pull/2070#issuecomment-1498867381,1,['update'],['updated']
Deployability,"@pmenczel I've worked on this quite a bit, mostly focusing on putting initial tests in place, supporting the full set of coefficient functions supported by the other solvers for the rates, shifting the martingale calculations into the integrator and moving the rate shift calculations to Cython to avoid the overhead of Python function calls and loops. @Ericgig I ended up doing some odd things because QobjEvo doesn't seem like natural fit for these rate functions and coefficients are a bit awkward to use directly inside solvers. @pmenczel & @Ericgig Could you take a look at everything again and let me know what you think?. Some of the bigger todo items I have in mind at the moment:. - How do we tell that the negative rate case is really working correctly? I added a test but it doesn't match mesolve well and I'm unhappy with that.; - Can we strengthen any of the existing tests with more assertions?; - Now that the discrete and continuous martingale calculations are mostly handled when collapses happen, we could expose them on the result along with `col_which` and `col_time`. Should we?; - Are the new martingale and rate shift calculations correct?; - The way the shared coefficients are used inside `RateSet` and exposed to `MCSolve` required a lot of careful thinking, did I get the design of that right?; - How do we test whether this works when using `parallel_map`? Being able to run in parallel is a key strength of the Monte Carlo method, so it would be good to have tests that show that that works.; - Can we drop the number of trajectories in the docs to make the doc build faster?; - Using the SciPy integrator is a bit awkward. Is there anything we can replace it with? If not, should we expose more of its options? I exposed the `limit` option because I kept having the integration fail during testing.; - Add tests for the `nm_mcsolve` Cython classes. There is also a bunch of general cleaning up still to do, but lets try get the big picture happy first.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2070#issuecomment-1493417354:235,integrat,integrator,235,https://qutip.org,https://github.com/qutip/qutip/pull/2070#issuecomment-1493417354,4,"['continuous', 'integrat']","['continuous', 'integration', 'integrator']"
Deployability,@quantshah @Ericgig I added the milestone https://github.com/qutip/qutip/milestone/19 to this issue so that we remember to include this PR in the 4.6.3 release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1600#issuecomment-875431956:152,release,release,152,https://qutip.org,https://github.com/qutip/qutip/pull/1600#issuecomment-875431956,1,['release'],['release']
Deployability,"@quantshah Great work, this seems like exactly what we need. ; We already have a section in the release-distribution document about building the docs, so we can add a bit about rebuilding the previous version docs with `is_latest = False` and uploading. ; I don't think that it is feasible to rebuild all the old docs. Would be a lot of work, as we would have to recreate working envs for the versions. Would seem more feasible to edit the HTML - I guess we could script this, as each guide file would need to be fixed. We could also consider just removing some of the older versions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1516#issuecomment-468176031:96,release,release-distribution,96,https://qutip.org,https://github.com/qutip/qutip/issues/1516#issuecomment-468176031,1,['release'],['release-distribution']
Deployability,"@quantshah: This has always been the case, and it's part of the installation instructions in the user guide (http://qutip.org/docs/latest/installation.html#platform-independent-installation). If there's anywhere it's missing we should add it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1334#issuecomment-671444213:64,install,installation,64,https://qutip.org,https://github.com/qutip/qutip/issues/1334#issuecomment-671444213,3,['install'],['installation']
Deployability,@rgommers I believe @Ericgig is planning to release them in 5.0.3.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2457#issuecomment-2188429294:44,release,release,44,https://qutip.org,https://github.com/qutip/qutip/pull/2457#issuecomment-2188429294,1,['release'],['release']
Deployability,"@riccameng I think the first thing to check is whether QuTiP has been compiled with OpenMP and has successfully built its own OpenMP support. You can do this with:; ```python; import qutip; qutip.about() # look for ""OPENMP Installed""; qutip.settings.has_openmp # should be True; qutip.settings.openmp_thresh # this is the number of non-zero elements a problem needs to have before OpenMP is activated; ```. If the above shows that QuTiP has found OpenMP successfully, would you mind creating a pastebin or gist the actual code you ran somewhere, along with the values of the parameters? Debugging this with a later number of unknowns could potential waste a lot of time. If not, could you clarify (i.e. provide shell commands used) what ""installed QuTiP with OpenMP"" means.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1671#issuecomment-947162020:223,Install,Installed,223,https://qutip.org,https://github.com/qutip/qutip/issues/1671#issuecomment-947162020,2,"['Install', 'install']","['Installed', 'installed']"
Deployability,"@sahrak Thank you for reporting this. The parameters for `sesolve` changed slightly since the guide was written and the guide wasn't updated. I will make a PR to fix it shortly, but in the mean time you can run:. ```python; qutip.floquet.fsesolve(H, psi0=psi0, tlist=tlist, e_ops=[qutip.num(2)], args=args); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1663#issuecomment-927605654:133,update,updated,133,https://qutip.org,https://github.com/qutip/qutip/issues/1663#issuecomment-927605654,1,['update'],['updated']
Deployability,@sarsid Could you make a commit so that GitHub can update the `files changed`? Any commit will do.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1318#issuecomment-663056349:51,update,update,51,https://qutip.org,https://github.com/qutip/qutip/pull/1318#issuecomment-663056349,1,['update'],['update']
Deployability,@sbisw002 Please also follow the description template (see #1697). The changelog part is especially important because we use that to write the changelog for releases.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1699#issuecomment-951749068:157,release,releases,157,https://qutip.org,https://github.com/qutip/qutip/pull/1699#issuecomment-951749068,1,['release'],['releases']
Deployability,"@shemian29 Did this issue occur after you upgraded QuTiP or one of it's dependencies? And how did you install QuTiP? The IPython kernel crash suggests that maybe the installation is broken somehow (e.g. mismatched C libraries, etc). I can't reproduce your error on my side.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1705#issuecomment-959146334:42,upgrade,upgraded,42,https://qutip.org,https://github.com/qutip/qutip/issues/1705#issuecomment-959146334,3,"['install', 'upgrade']","['install', 'installation', 'upgraded']"
Deployability,"@shemian29 It's possible that the error is caused by using numpy 1.21.2 with MKL which triggers this bug -- https://github.com/numpy/numpy/issues/20356 -- on Intel CPUs that support AVX512. If that is the case, it should be fixed by install QuTiP 4.6.3 when it is released (hopefully early next week) and numpy 1.22. P.S. If you like, you could install QuTiP from the master branch and numpy 1.22 now and see if that solves your issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1705#issuecomment-1006413111:233,install,install,233,https://qutip.org,https://github.com/qutip/qutip/issues/1705#issuecomment-1006413111,3,"['install', 'release']","['install', 'released']"
Deployability,"@slavoutich I am assuming that `march=native` will only lead to ""segfault: illegal instruction"" when the compiled objects are used on a machine other than the one that they are compiled on, like for instance the conda-forge package. A pip or setup.py install on a local machine should be fine with `march=native`. Please correct me if you think this is incorrect",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/951#issuecomment-466653377:251,install,install,251,https://qutip.org,https://github.com/qutip/qutip/issues/951#issuecomment-466653377,1,['install'],['install']
Deployability,"@spinolino I think they should be updated in the `master` branch and then backported to `dev.major` later (probably the backport is not part of this issue, since we seem to be backporting code to dev.major in batches).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1526#issuecomment-1147543402:34,update,updated,34,https://qutip.org,https://github.com/qutip/qutip/issues/1526#issuecomment-1147543402,1,['update'],['updated']
Deployability,@stelakus It's odd that `conda install nomkl qutip` is hanging when `conda install qutip` succeeded. I don't use Windows much myself. Other options are to try downgrade numpy to 1.20.3 perhaps. Or to see what other BLAS implementations are supported in your conda environment and try explicitly install one of those. If you can get more information on why the install is hanging (maybe with `conda install -vvv ...`) I might be able to make more suggestions. Aside: You seem to be running in your `base` conda environment. That is probably not a good idea -- create a new environment for each project you work on so that the `base` environment remains pristine.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750#issuecomment-1006037619:31,install,install,31,https://qutip.org,https://github.com/qutip/qutip/issues/1750#issuecomment-1006037619,5,['install'],['install']
Deployability,@stelakus Thank you for reporting back & really glad everything is working now. I'm going to leave this bug open until 4.6.3 is released so that anyone else who is tripped up by these issues can find the workarounds here.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750#issuecomment-1006410989:128,release,released,128,https://qutip.org,https://github.com/qutip/qutip/issues/1750#issuecomment-1006410989,1,['release'],['released']
Deployability,@thangleiter try to put qutip last: conda install cython numpy scipy qutip. Also check now with 4.4.0 release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-510880677:42,install,install,42,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-510880677,2,"['install', 'release']","['install', 'release']"
Deployability,"@thangleiter: this particular error looks possibly like it's caused by build incompatibility with the recently released numpy 1.20. I see that the environment is installing numpy 1.19, but I suspect that the build_wheels action of `pip install` is pulling in numpy 1.20. QuTiP 4.5 doesn't officially support installation from `pip` (we never had enough free CI available to build wheels) - you should be able to always get a working installation using the `conda-forge` channel of `conda`. We should have wheels in the next major release. We're currently facing a couple of problems with numpy 1.20 (#1433), but we'll be able to put out a patch when someone has time, which will include pinning numpy to a lower version when building.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-777556715:111,release,released,111,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-777556715,7,"['install', 'patch', 'release']","['install', 'installation', 'installing', 'patch', 'release', 'released']"
Deployability,"@tomohiro-soejima Thank you for a very well organized bug report and for suggesting a fix. I've opened PR #1818 that applies your suggestion and adds tests. The PR is a continuation of #1690 because I didn't want to generate merge conflicts, so it can only be easily reviewed and merged once #1690 lands. I've marked the fix for inclusion in 4.7 which should be released in the next couple of weeks.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1817#issuecomment-1057931568:362,release,released,362,https://qutip.org,https://github.com/qutip/qutip/issues/1817#issuecomment-1057931568,1,['release'],['released']
Deployability,"@trentfridey Thank you for opening the PR. I will review it a bit later, and attempt to answer your first question here once I have. In answer to your second question, I think the minimal approach, and the one we should take now, is to add running `towncrier build` to the steps in creating or updating the release branch (i.e. the human doing the release would run it and push the result). Later once we have some experience using it, we can consider automating the release process a bit more somehow.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1894#issuecomment-1152285930:307,release,release,307,https://qutip.org,https://github.com/qutip/qutip/issues/1894#issuecomment-1152285930,3,['release'],['release']
Deployability,@vikas-chaudhary-2802 It looks like something went wrong with the installation. Make sure that you really installed the master branch and are testing it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2345#issuecomment-2016856321:66,install,installation,66,https://qutip.org,https://github.com/qutip/qutip/issues/2345#issuecomment-2016856321,2,['install'],"['installation', 'installed']"
Deployability,"@ziofil, I just checked that updating the colab notebook to have the line; ```; !pip install scipy==1.2.1; !pip install qutip; ```; works for me, as @quantshah mentioned. ; QuTiP will find already the SciPy 1.2.1 requirement and will avoid keeping 1.3.; It is an issue with `IndexMixin` relocation in SciPy 1.3 (released this May 17), which has been changed from `scipy.sparse.sputils` to `scipy.sparse._index`.; I tested this also in My Binder and this works too, by setting in the `environment.yml` file, ; [in line 9,](https://github.com/nathanshammah/interactive-notebooks/blob/master/environment.yml#L9); from; ```; - scipy; ```; to ; ```; - scipy==1.2.1; ```; I will open a PR with this patch for `qutip-notebooks` for the time being. Once the next official version of QuTiP is released, this problem will not arise, as this issue has been taken care of by @Ericgig in PR #999 by updating scipy `IndexMixin`, now under private use, with scipy `get_index_dtype`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1008#issuecomment-499038616:85,install,install,85,https://qutip.org,https://github.com/qutip/qutip/issues/1008#issuecomment-499038616,5,"['install', 'patch', 'release']","['install', 'patch', 'released']"
Deployability,"A `QobjEvo` contain only one `args` dictionary, thus it cannot handle overlapping names. ; There are plans to change this in the next major release (already changed in dev.major), but not in v4.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1765#issuecomment-1013528199:140,release,release,140,https://qutip.org,https://github.com/qutip/qutip/issues/1765#issuecomment-1013528199,1,['release'],['release']
Deployability,A chat app for devs that integrates nicely with github. It us how we discuss things.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/738#issuecomment-320977143:25,integrat,integrates,25,https://qutip.org,https://github.com/qutip/qutip/issues/738#issuecomment-320977143,1,['integrat'],['integrates']
Deployability,"A pull request would be most welcome. There are also two other functions in qutip.fileio that should probably be updated at the same time. Instead of using an if statement, I would write code like:; ```python; p = pathlib.Path(""filename""); ... # append suffix here; with p.open(...):; ... # load or save here; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1811#issuecomment-1044365324:113,update,updated,113,https://qutip.org,https://github.com/qutip/qutip/issues/1811#issuecomment-1044365324,1,['update'],['updated']
Deployability,"A quick patch at least for collective processes would be to change the piqs Liouvillian internal function calculating `collective_emission`, `collective_dephasing`, and `collective_pumping` properties of the `Dicke.liouvillian()` by using standard `qutip.liouvillian()` function on collective operators defined in the Dicke basis (`qutip.piqs.jspin`).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/993#issuecomment-500332637:8,patch,patch,8,https://qutip.org,https://github.com/qutip/qutip/issues/993#issuecomment-500332637,1,['patch'],['patch']
Deployability,"About only storing kets, but not averaging into a dm, we can't do that yet, but it's easy to implement so if useful, we can add the option. The error is not in the `_to_dm`, but in the addition, which is done in the sparse CSR format. No dense conversion are made. But the `proj` operator does not have a tidyup step, so any non-zero are kept, however small they are. This is also an easy fix that could help. The `MemoryError` is also not that helpful, we should improve the error message to tell what size of arrays are allocated. Thank you for reporting these and trying the alpha version. I see you don't have cython, do you have a way to compile the source yourself? ; Once fixed, I would be curious to have you try the development version without waiting for a release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2299#issuecomment-1904338523:767,release,release,767,https://qutip.org,https://github.com/qutip/qutip/issues/2299#issuecomment-1904338523,1,['release'],['release']
Deployability,"Actually it probably doesn't shake out to a single time-dependent operator like I thought it might at the start. You can still do the Taylor expansion to try (you can find a similar result for 3x3 spin matrices to the 2x2 case), but there's not going to be a cancellation I thought there might have been. Right now, QuTiP doesn't support arbitrary time-dependence in collapse operators, so if you can't find a way to write it in that form, you might have to do the integration manually yourself until we've added it - the QuTiP guide [explains how QuTiP does the integration](http://qutip.org/docs/latest/guide/dynamics/dynamics-monte.html).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1308#issuecomment-739883642:465,integrat,integration,465,https://qutip.org,https://github.com/qutip/qutip/issues/1308#issuecomment-739883642,2,['integrat'],['integration']
Deployability,"Actually let's also leave it open until I can determine if it is indeed scipy. After installing scipy with pip as the scipy folks suggested, the example I had in that issue is now working, but I get the same integration error with qutip and same tests failing. When I get time, i'll try to distill down the qutip error to a scipy error and post an update. Hopefully the main issue is just a scipy error, but would be good to confirm.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965#issuecomment-1205435786:85,install,installing,85,https://qutip.org,https://github.com/qutip/qutip/issues/1965#issuecomment-1205435786,3,"['install', 'integrat', 'update']","['installing', 'integration', 'update']"
Deployability,"Actually, it seems that now the Intel distro is built with VS15, and distutils does not know how to handle Intel compilers. However, I am sure that the earlier tech preview was all Intel, and I even had to install the Intel compilers to get anything to build. Regardless, it seems that we need to wait until mingw is supported on Py35.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/447#issuecomment-225452247:206,install,install,206,https://qutip.org,https://github.com/qutip/qutip/issues/447#issuecomment-225452247,1,['install'],['install']
Deployability,"Actually, this seems to be a platform-specific problem. I just ran this on a Linux server, and there it seems to work fine (at least it runs through). Package versions are exactly the same as above, and the platform info is this:; ~~~; compiler : GCC 7.3.0; system : Linux; release : 4.4.0-124-generic; machine : x86_64; processor : x86_64; CPU cores : 80; interpreter: 64bit; ~~~",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932#issuecomment-436841269:274,release,release,274,https://qutip.org,https://github.com/qutip/qutip/issues/932#issuecomment-436841269,1,['release'],['release']
Deployability,Added by @Ericgig during 4.4.0 release. See https://test.pypi.org/project/qutip/. Closing it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/992#issuecomment-510879704:31,release,release,31,https://qutip.org,https://github.com/qutip/qutip/issues/992#issuecomment-510879704,1,['release'],['release']
Deployability,"Added optional argument `integrator` to choose between `propagator` or `mesolve` (also a `parallel={True,False}` argument). Realized there is probably not much to gain from `mesolve` returning a sparse matrix for large systems, however. This is because in the memorycascade method there is some postprocessing of the propagator using the `tensor_contract` method (written by @cgranade) which does not support sparse matrices, so it gets converted to dense anyway. Still `mesolve` actually performs a bit faster for small systems and small times, so still useful to be able to choose the method I guess.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/502#issuecomment-230115449:25,integrat,integrator,25,https://qutip.org,https://github.com/qutip/qutip/pull/502#issuecomment-230115449,1,['integrat'],['integrator']
Deployability,"Additionally, from looking through your comments it appears that something; definitely went weird with formatting and/or merging. I'll comb back; through and make to fix any of these issues before I request a re-review. On Wed, Jun 28, 2023, 3:43 PM Eric Giguère ***@***.***> wrote:. > ***@***.**** requested changes on this pull request.; >; > Are you sure there was not a bad merge somewhere?; > Some code is duplicated, seemingly important variable are never used, a; > typo in the import of flimesolve.py stop it from being imported, etc...; >; > Please add tests covering most case and have them passing.; >; > Also the separation of task is not well used. We split the data container,; > ODE integration and the physics, but here they are mixed together...; >; > The quicksolve is the ""diag"" integrator, you don't have to re implement it; > here. You could just set it as the default method since the rhs is always; > constant (but it seems like this is not desired when time_sense != 0).; > ------------------------------; >; > In doc/guide/scripts/floquet_ex3.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245104940>:; >; > > @@ -35,7 +35,6 @@ def noise_spectrum(omega):; > # Alternatively; > psi_t = output.states[idx]; > p_ex[idx] = qutip.expect(qutip.num(2), psi_t); > -; >; > Why did you erase this line?; > ------------------------------; >; > In VERSION; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245585117>:; >; > > @@ -1 +1 @@; > -5.0.0.dev; > +5.0.0a1; >; > The version change when we do a release, not with each PR.; > ------------------------------; >; > In qutip/solver/correlation.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245591365>:; >; > > + G1 = correlation_3op(; > + solver, state0, [0], taulist, None, a_op.dag(), a_op)[0]; >; > ⬇️ Suggested change; >; > - G1 = correlation_3op(; > - solver, state0, [0], taulist, None, a_op.dag(), a_op)[0]; > + G1 = correlation_3op(; > + solver, state0, [0], taulist, None, a_op.dag(), a_op",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-1612047839:698,integrat,integration,698,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-1612047839,2,['integrat'],"['integration', 'integrator']"
Deployability,"After investigating a bit more, I think this may be related to 3a5ab42200b3f1851343081614064e67be3b02bf, in that SCS and CVXOPT are not yet compatible with MKL, and require OpenBLAS instead. If I locally use pip to install SCS and CVXOPT with an MKL-enabled conda env, then importing cvxpy fails due to undefined symbols. On the other hand, if I use the Omnia conda channel to install cvxopt and scs, then `dnorm()` works, but the conda env switches to use OpenBLAS. To resolve the build failures, then, I'd suggest temporarily marking the tests as skipped if MKL is enabled.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/484#issuecomment-222046697:215,install,install,215,https://qutip.org,https://github.com/qutip/qutip/issues/484#issuecomment-222046697,2,['install'],['install']
Deployability,"After more examination, it appears as though `qutip/cy/setup.py` breaks the fix introduced by this PR if Cython is not installed before QuTiP. I'll investigate, but I'd like to get `pip install` working even from very minimal environments.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/489#issuecomment-225084745:119,install,installed,119,https://qutip.org,https://github.com/qutip/qutip/pull/489#issuecomment-225084745,2,['install'],"['install', 'installed']"
Deployability,"After you created a fork to work on #1242, a different PR (#1226) was merged into `master`. It so happens that #1242 and #1226 don't conflict so that merge succeeded, but the new changes you're now trying to make do. This is fundamentally a true merge conflict and so unfortunately there's no fancy way around it, though it could have been avoided if you'd matched the state of our `master` before beginning work here, and it would be a bit easier for you for future PRs to branch off before starting work (GitHub has [some nice material about this workflow](https://guides.github.com/introduction/flow/)). I've rebased your PR onto our `master` and fixed the resulting merge conflict for you. You should _immediately, without doing anything else_ reset your branch state to match mine, and then force-push your changes to GitHub to update the PR. To do this, do; ```bash; git remote add jakelishman https://www.github.com/jakelishman/qutip.git; git fetch jakelishman; git checkout master; git reset --hard jakelishman/Canoming-circuit-patch; git push --force; git remote remove jakelishman; ```; This will destroy anything on `master` that you may have but haven't yet pushed. You should do it anyway, because a lot of the underlying structure has changed from underneath you, and your changes aren't consistent with the current state of `circuit.py`. Please also note that the tests are failing after your modifications in (the current) 10e457e.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1269#issuecomment-630932121:833,update,update,833,https://qutip.org,https://github.com/qutip/qutip/pull/1269#issuecomment-630932121,2,"['patch', 'update']","['patch', 'update']"
Deployability,Agreed. We’re working on a release soon.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1019#issuecomment-503356237:27,release,release,27,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-503356237,1,['release'],['release']
Deployability,"Ah ok, that makes it easier to understand what happened - the `MANIFEST.in` file got added at some point before the 4.5.2 release, but its mere presence overrides the content of `setuptools`' `package_data` option, in which we _do_ add the requisite files. If it's not desperately urgent, are you able to build from the `git` branch at 4.5.3 instead temporarily? I can merge this PR, but we're hoping to put out 4.6.0 in about two weeks' time (which I'll make sure has this patch), and our release process is still very manual - I'd rather not have to repeat it another time if I can avoid it!. Sorry this file got lost when `MANIFEST.in` turned up.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1449#issuecomment-782615652:122,release,release,122,https://qutip.org,https://github.com/qutip/qutip/pull/1449#issuecomment-782615652,3,"['patch', 'release']","['patch', 'release']"
Deployability,"Ah yes, that constraint was there to prevent accidentally using `qutip-qip` with `qutip@dev.major` because the support was only added a few weeks ago. Only the master branch of `qutip-qip` support this. So this basically prevents installing the `qutip@dev.major` and the released `qutip-qip` at the same time. One has to install `qutip-qip@master` to test them. This also means that adding `qutip-qip` as an optional package right now does not make much sense. Probably we can drop this. To test it on GitHub action we need to install `qutip-qip@master` for now and test the importation. @hodgestar Is that ok? Otherwise, I can try to get out a new release of `qutip-qip` in a day or so. Just to update the change log and click the button.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1920#issuecomment-1147618381:230,install,installing,230,https://qutip.org,https://github.com/qutip/qutip/pull/1920#issuecomment-1147618381,6,"['install', 'release', 'update']","['install', 'installing', 'release', 'released', 'update']"
Deployability,"Ah, I see now that you do have a pin:; https://github.com/qutip/qutip/blob/efd39be22db0536ef0680547a6631a4f9156b922/requirements.txt#L1. but there hasn't been a release since that change.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2198#issuecomment-1642259420:161,release,release,161,https://qutip.org,https://github.com/qutip/qutip/issues/2198#issuecomment-1642259420,1,['release'],['release']
Deployability,"Ah, are you using an Apple M1?. SciPy support for Apple M1 is still rather unreliable (this is more a function of the lack of availability of Apple M1 VMs for open source projects to run tests on than any fault of SciPy's). Perhaps you are encountering one of these two recent bugs:. - https://github.com/scipy/scipy/issues/16767; - https://github.com/scipy/scipy/issues/16875. The bugs are closed but I don't know if new versions have been released. Various work arounds have been suggested in those issue reports. Hopefully one of them will work for your case.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1987#issuecomment-1229182134:441,release,released,441,https://qutip.org,https://github.com/qutip/qutip/issues/1987#issuecomment-1229182134,1,['release'],['released']
Deployability,"Ah, nice catch thanks, and thanks for the super clear repro. We're overhauling the solvers for QuTiP 5.0, which will include a lot more rigorous input checking on entry, but also it uses far safer low-level datatypes that would catch this shape mismatch in the C layer (even though the `dims` _should_ have been checked by `mesolve`). I'll check the other solvers and patch in a sanity test - probably after these lines: https://github.com/qutip/qutip/blob/d5e305513d9186df74beee4fd8da680e89f29d15/qutip/mesolve.py#L259-L261; we can just insert a test; ```python; if rho0.dims[0] != rho0.dims[1]:; raise ValueError(; ""input state must be a pure state or square density matrix""; ); ```. There may also be other segfaults lurking if you use a Python function to generate a time-dependent `Qobj` value in the Liouvillian or the expectation operators, but right now you're unlikely to use that form (because it's slow as anything). The bug slips through because we unsafely pass off a matrix down to C code (where we currently don't have sanity checks) without first verifying that it is a valid shape in Python space - the C code is working as designed, so there shouldn't be problems with correct inputs. Removing `c_ops` causes `mesolve` to delegate to `sesolve` which presumably is better at its type-checking, and I expect that a small dimension size working is likely just `malloc` having slack in the memory it gives us for small sizes or small requests being allocated into the special pre-allocated store.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1456#issuecomment-791925169:368,patch,patch,368,https://qutip.org,https://github.com/qutip/qutip/issues/1456#issuecomment-791925169,1,['patch'],['patch']
Deployability,"Ah, that would be great!. Thanks for pointing out those other functions as well. . In the release version, would the implementation be something like the following?; ```python; np.transpose(np.reshape(my_qobj.full(), dims_to_tensor_shape(my_qobj.dims)), dims_to_tensor_perm(my_qobj.dims)); ```; Do I perhaps want the inverse permutation of dims_to_tensor_perm? Should the numpy reshape use 'F' for the order parameter?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2353#issuecomment-2004881477:90,release,release,90,https://qutip.org,https://github.com/qutip/qutip/issues/2353#issuecomment-2004881477,1,['release'],['release']
Deployability,"Ah, this is the confluence of two bugs, unfortunately. As an immediate workaround, you should be able to set the environment variable `CI_QUTIP_RELEASE=1` before running `pip` (assuming it propagates the env), and it should build without an error. The two bugs:; 1. building in ""release mode"" isn't the default; on CI to build the wheels we set a release-mode flag, but the sdist can't tell. That's what the environment variable above does. I'll have to think a little about how we'll do versioning. This bug slipped in in #1465, where the primary concern was getting wheels built, and I didn't notice that the sdist wouldn't build in release mode.; 2. `git` isn't meant to be required - in dev mode, it should just get to the string ""nogit"". That error is actually within a `try/except` block, except it only catches `subprocess.SubprocessError`, when it should catch both `subprocess.SubprocessError` and `OSError`. Thanks for the report.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1514#issuecomment-829931042:279,release,release,279,https://qutip.org,https://github.com/qutip/qutip/issues/1514#issuecomment-829931042,3,['release'],"['release', 'release-mode']"
Deployability,"Ah, this test failure reminds me I need to merge up the 4.6.0 release to `dev.major`. Documentation fix is good, merging (though ironically there's a typo in your PR name!)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1494#issuecomment-818721204:62,release,release,62,https://qutip.org,https://github.com/qutip/qutip/pull/1494#issuecomment-818721204,1,['release'],['release']
Deployability,"Ah, you are right! It seems to be all tests using the ODE solvers are failing.; Indeed mesolve and sesolve tests are also failing (with the same integration error).; There are lots of tests which fail, I think most likely every test that calls a solver... I just did some basic testing with scipy's integrate.ode and this seems to have the same kind of issues, so I think as you mention, the issue lies with the solver...meaning it probably isn't installed correctly.; Similar issues seem to have been raised for scipy previously (e.g. https://github.com/scipy/scipy/issues/15077), though I don't see any currently open. I also updated scipy today and it didn't change anything unfortunately. I guess this issue can be closed, if it's just a scipy problem?; Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965#issuecomment-1204170858:145,integrat,integration,145,https://qutip.org,https://github.com/qutip/qutip/issues/1965#issuecomment-1204170858,4,"['install', 'integrat', 'update']","['installed', 'integrate', 'integration', 'updated']"
Deployability,"Aha I understand the error now, `oldest-supported-numpy` requires numpy 1.17, but qutip requires >1.19. I tried to install manually with `pip install wheel setuptools packaging numpy cython scipy` and then `pip install --no-build-isolation qutip` but now I get some Cython compilation errors. I think I will stick with v4 for now. I suppose with the updates to the docs in #2413, this issue is resolved.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412#issuecomment-2092495162:115,install,install,115,https://qutip.org,https://github.com/qutip/qutip/issues/2412#issuecomment-2092495162,4,"['install', 'update']","['install', 'updates']"
Deployability,"All builds pass, besides the build on Python 3.7 without Cython. I would still merge this PR and focus on that issue separately. . Now we need to update places where `nose` is mentioned, I found these in `qutip-doc`; - the [changelog](https://github.com/qutip/qutip-doc), ; - the instructions on the dependencies in the documentation [installation instructions](https://github.com/qutip/qutip-doc/blob/402ec10de7a314ba9f124ddac7514621e92496df/installation.rst), ; - and [development guidelines](https://github.com/qutip/qutip-doc/blob/2ffd6d1cc581e858674d43fe97a9297e9476a278/qutip_dev_contrib.md).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131#issuecomment-560280938:146,update,update,146,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560280938,3,"['install', 'update']","['installation', 'update']"
Deployability,"Also, I agree that the code cleanup of the mcsolver is in order. But this can wait until the next release 3.2.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/264#issuecomment-65174258:98,release,release,98,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-65174258,1,['release'],['release']
Deployability,"Also, recently using `conda install qutip` seems to not locate the qutip package and one needs to add the `conda-forge` channel. Should we change the installation instructions on the website?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1334#issuecomment-671442741:28,install,install,28,https://qutip.org,https://github.com/qutip/qutip/issues/1334#issuecomment-671442741,2,['install'],"['install', 'installation']"
Deployability,"Also: maybe this PR, which seems self-contained with respect to deliverables and independent on the ""`qutip.nisq`"" module, could be made directly to the master, so that we can already include it in the next QuTiP release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1025#issuecomment-504761573:213,release,release,213,https://qutip.org,https://github.com/qutip/qutip/pull/1025#issuecomment-504761573,1,['release'],['release']
Deployability,"An alternative solution if one does not wish to use Anaconda can be to change the Python version in use to a user installed one instead of the default version supplied by macOS. I have discussed it in #348 . It is perhaps because the default Python version does not detect the local python packages (numpy/scipy). After this fix, I was able to do a `sudo -H python setup.py install` and everything worked fine for me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/382#issuecomment-263751111:114,install,installed,114,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-263751111,2,['install'],"['install', 'installed']"
Deployability,"Any update on the failing tests, @araza6?; This is the print message from CI build:; ```; ==================================== ERRORS ====================================; _____________ ERROR collecting tests/test_basis_transformation.py ______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/_pytest/python.py:513: in _importtestmodule; mod = self.fspath.pyimport(ensuresyspath=importmode); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:176: in <module>; from qutip.qobj import *; E File ""/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/qobj.py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __I",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:4,update,update,4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['update'],['update']
Deployability,"Are you running it from the installation directory?. On May 11, 2017 9:31 AM, ""Jiaqi Cai"" <notifications@github.com> wrote:. > I see that qutip announced a new version, but after my update,It breaks; > down:; > from qutip import *; > the error occurs: undefined symbol: _ZTINSt8ios_base7failureB5cxx11E; > After google the error,I find a possible solution :pip install qutip; > Then the error changes to :; > `-----------------------------------------------------------; > ----------------; > AttributeError Traceback (most recent call last); > /home/caidish1234/anaconda3/lib/python3.6/site-packages/qutip/*init*.py; > in (); > 46 *IPYTHON*; > ---> 47 qutip.settings.ipython = True; > 48 except:; >; > AttributeError: module 'qutip' has no attribute 'settings'; >; > During handling of the above exception, another exception occurred:; >; > AttributeError Traceback (most recent call last); > in (); > 3 import matplotlib.pyplot as plt; > 4 from tqdm import tnrange,tqdm_notebook; > ----> 5 from qutip import *; >; > /home/caidish1234/anaconda3/lib/python3.6/site-packages/qutip/*init*.py; > in (); > 47 qutip.settings.ipython = True; > 48 except:; > ---> 49 qutip.settings.ipython = False; > 50; > 51 # ------------------------------------------------------------; > -----------------; >; > AttributeError: module 'qutip' has no attribute 'settings'`; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/694>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqRkf4CJgtdC5dIzttfYgfScDE_Zqks5r4ym1gaJpZM4NYLKw>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/694#issuecomment-300829416:28,install,installation,28,https://qutip.org,https://github.com/qutip/qutip/issues/694#issuecomment-300829416,3,"['install', 'update']","['install', 'installation', 'update']"
Deployability,"Are you running on OSX? If so, this could be a known bug between multiprocessing and matplotlib for matplotlib 3.2. You can downgrade to 3.1 or upgrade to 3.3 (haven't personally validated 3.3 yet).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1326#issuecomment-664716642:144,upgrade,upgrade,144,https://qutip.org,https://github.com/qutip/qutip/issues/1326#issuecomment-664716642,1,['upgrade'],['upgrade']
Deployability,"Arne,. Please propose your patch in a PR on our Github. So long as it is; mathematically sound, then the context does not matter in this case. If you need any advice on how to do this, then let us know. Email me direct; if you prefer. alex.pitchford@gmail.com. Thanks. Alex. On Thu, 21 Jun 2018 at 09:31, Arne Hamann <notifications@github.com> wrote:. > I use the qutip to do some Grover simulations. having a Hilbertspace of; > Grover an an additional entangled Hilbert space. In a simpler version there; > is only one state in the entangled Space so the program automatically; > chooses dimension 1.; > And then there are allot of errors coming because of this qutip error.; > At the moment I fixed it using a patched qutip version.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/823#issuecomment-399020891>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AIxX7QOoYa2vq7kgVYNcZdxB3vxO3FJnks5t-1n4gaJpZM4SNkIK>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/823#issuecomment-399033847:27,patch,patch,27,https://qutip.org,https://github.com/qutip/qutip/issues/823#issuecomment-399033847,2,['patch'],"['patch', 'patched']"
Deployability,"As #1049 has been merged, I’m going to assume this will be fixed in the next release. Closing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1047#issuecomment-514266203:77,release,release,77,https://qutip.org,https://github.com/qutip/qutip/issues/1047#issuecomment-514266203,1,['release'],['release']
Deployability,"As I understand it, the new Mac M1 chips have an ARM-based architecture so there shouldn't be any compatible binary releases on conda yet for macos - I'm surprised conda even claimed to have solved the system. Maybe they've not updated to take the new chips into account either. If you can, you might want to try building from source - you'll also need the Python package Cython, but this way should build all the binary components for your architecture. We know (#1395) that there's a minor problem with some hardware detection on the M1 macs at the moment, but you can comment out lines 48 and 49 of `qutip/hardware_info.py` to work around it. None of us have one of the new macs, and I think we'll need a new release to get conda-forge updated. It might be a little while before we get that done, sorry.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-736516068:116,release,releases,116,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-736516068,4,"['release', 'update']","['release', 'releases', 'updated']"
Deployability,"As I understand it, the only way to avoid needing to touch `MANIFEST.in` is to not have files distributed with the test suite (or to have the temporary files by `*.py`, since `setup.py` automatically recognises them). That's not really a pytest thing, it's a `setuptools` one. I don't think there's a problem distributing files as part of the tests. You can add a line which says; ```; recursive-include qutip/tests/qasm_files *.qasm; ```; to `MANIFEST.in`, and that should hopefully fix the problem. You won't have the problem locally, because you'll be running `./setup.py develop`, which ""installs"" in-place, so you don't notice the fact that you've missed files from the manifest. In the tests, it runs `./setup.py install`, which does the copy, missing files which aren't in the manifest. Boxi: I'm not certain what more you'd like to do with fixtures here. Fixtures are good for setup and tear down, parametrisation and sharing resources (like network connections), but I'm not certain what further benefit you get for a test function which is testing whether it can open a known file, read it, and construct the expected output. I think Sidhant is already doing some nice parametrisation of his tests, from what I see. Sidhant: I added a comment on the exception test, since pytest gives us an easier-to-read context manager you can use. It's also typically better practice to handle file paths like I did in that (using the overloaded `/` operator with `pathlib.Path`, or `os.path.join`) rather than manually putting in slashes. Windows _usually_ will do the right thing now with slashes, but it's better to let Python handle it for us.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1291#issuecomment-656255156:592,install,installs,592,https://qutip.org,https://github.com/qutip/qutip/pull/1291#issuecomment-656255156,2,['install'],"['install', 'installs']"
Deployability,"As discussed earlier, we will move the mcf90 solver into its own module with a separate installer",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/80#issuecomment-76656356:88,install,installer,88,https://qutip.org,https://github.com/qutip/qutip/issues/80#issuecomment-76656356,1,['install'],['installer']
Deployability,"As discussed in #1355 , it will be fixed in future updates, so close this issue ATM.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1354#issuecomment-684765619:51,update,updates,51,https://qutip.org,https://github.com/qutip/qutip/issues/1354#issuecomment-684765619,1,['update'],['updates']
Deployability,"As far as the ""known issues"" go, these are discussed in #484.; I don't think the issues I saw recently are the same as in that one.; ```; Intel MKL FATAL ERROR: Cannot load libmkl_avx.so or libmkl_def.so.; ```; I think this is just an MKL install problem.; It's difficult to test at the moment, as I don't seem to be able to create a conda env with mkl blas",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/872#issuecomment-394304854:239,install,install,239,https://qutip.org,https://github.com/qutip/qutip/issues/872#issuecomment-394304854,1,['install'],['install']
Deployability,As mentioned in #872 the MKL builds are currently installing with openblas numpy.; This implements the suggestion from; ContinuumIO/anaconda-issues#9519; Initial local tests look fine,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/876#issuecomment-394727727:50,install,installing,50,https://qutip.org,https://github.com/qutip/qutip/pull/876#issuecomment-394727727,1,['install'],['installing']
Deployability,"As mentioned in the previous post I also played with rtol value, but it didn't help. Concerning your question, yes when the pulse is off, I have a zero Hamiltonian and the system stays in the initial state, which is fine, the weird thing however is that apparently the system stays in the initial state even when the pulse is on. Basically, I get as a result that the system stays in the initial state for all times. Did you try to run the code on your machine? Maybe it's the issue of my packages configuration?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/771#issuecomment-338260622:498,configurat,configuration,498,https://qutip.org,https://github.com/qutip/qutip/issues/771#issuecomment-338260622,1,['configurat'],['configuration']
Deployability,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/448#issuecomment-192570921:29,patch,patched,29,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921,7,"['install', 'patch']","['install', 'installed', 'installs', 'patched']"
Deployability,"As of the release of 4.5.3 the numpy 1.20 problems should have been fixed (including fixing the correct build versions when installing from `pip`), and all currently known problems with M1 Macs are solved on `master` with the merge of #1401. Closing this for now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-782889136:10,release,release,10,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-782889136,2,"['install', 'release']","['installing', 'release']"
Deployability,"As stated in the docstring in the function, the a_ops Cubic_Spline must be a tuple (f(w), g(t)). This was my mistake (possibly this could be updated in the online documentation on BRME). Closing this as there is no error. Although I will note there is a legitimate error if the array passed to `qt.Cubic_Spline` is too large. In this case, `np.array2string` uses the default `threshold` argument which means the saved array is compressed (e.g. `[0,1,2,...,8,9,10]`). The way to fix this is to explicitly set the threshold argument.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1624#issuecomment-887782852:141,update,updated,141,https://qutip.org,https://github.com/qutip/qutip/issues/1624#issuecomment-887782852,1,['update'],['updated']
Deployability,"As this is not a QuTiP issue, I will close this. However, it seems that we should not include the Home Brew installation scripts in the next release. In principle, there is nothing that prevents the user from obtaining the same packages as the script manually if they still wanted to use Home Brew.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348#issuecomment-114015405:108,install,installation,108,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-114015405,2,"['install', 'release']","['installation', 'release']"
Deployability,"Assuming Simon's point isn't just a complete answer to your question: in the general case, this is an impossible question to answer - it touches on many parts of numerical integration, such as tolerance limits and adaptive step-size methods. When you're dealing with completely arbitrary time-dependence, there's not really any one-size-fits-all approach that'll work (despite how RK45 is often taught as a magic bullet in physics courses). Here, you will likely find that your RK45 results depend strongly on how many intermediate timesteps you use, whereas QuTiP's results will be (marginally) more stable. This is because QuTiP will internally subdivide the timesteps more to achieve internal precision goals, but then only returns the results at the time points you ask for. You can increase the maximum number of allowed subdivisions by increasing the `nsteps` parameter in a `qutip.Options` object, and with the `options` keyword argument.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733#issuecomment-986661136:172,integrat,integration,172,https://qutip.org,https://github.com/qutip/qutip/issues/1733#issuecomment-986661136,1,['integrat'],['integration']
Deployability,"Assuming you have Anaconda 2.5 installed (so that you can use the Intel MKL on all platforms), the default number of threads is one. Therefore, you don't get much benefit. To change the number of threads used you can do:. ``` python; import mkl; mkl.set_num_threads(N); ```. or in QuTiP it is easy to set using:. ``` python; n_threads = hardware_info()['cpus']; mkl.set_num_threads(n_threads); ```. One can not access the spare MKL routines directly as there is no support in the scipy.sparse library. However, you can get to all of the functions using ctypes. An example of complex SpMV is here:. https://gist.github.com/nonhermitian/74c3ddbbd006b2f8d306. The only issue with the attached method, is that finding the MKL runtime library is platform dependent (maybe should file an issue with the Anaconda people?). Therefore, it is a bit cumbersome to work with. Moreover, it is not possible to access these routines via Cython as they do not have any of the development stuff available. That may not really be an issue at the end of the day though as one needs quite a large system to get any benefit, and at large Hilbert dimensions, the overhead from calling Python funcs. directly is not an issue. I will be chatting with the [Intel Python](https://software.intel.com/en-us/python-distribution) people tomorrow to give them some suggestions and talk about our project. Hopefully we can hash out some plan to make our life a bit easier, and take advantage of the MKL tools. Their parallel direct sparse solver may also be of interest.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/438#issuecomment-186864518:31,install,installed,31,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-186864518,1,['install'],['installed']
Deployability,"Attempt in Python3.5; ```; running build_ext; building 'qutip.cy.spmatfuncs' extension; creating build\temp.win-amd64-3.5; creating build\temp.win-amd64-3.5\Release; creating build\temp.win-amd64-3.5\Release\qutip; creating build\temp.win-amd64-3.5\Release\qutip\cy; creating build\temp.win-amd64-3.5\Release\qutip\cy\src; C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\BIN\x86_amd64\cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MD -IC:\Anaconda2\envs\qtpy3\lib\site-packages\numpy\core\include -IC:\Anaconda2\envs\qtpy3\lib\site-packages\numpy\core\include -IC:\Anaconda2\envs\qtpy3\include -IC:\Anaconda2\envs\qtpy3\include ""-IC:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\INCLUDE"" ""-IC:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\ATLMFC\INCLUDE"" ""-IC:\Program Files (x86)\Windows Kits\10\include\10.0.10240.0\ucrt"" ""-IC:\Program Files (x86)\Windows Kits\NETFXSDK\4.6.1\include\um"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\shared"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\um"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\winrt"" ""-IC:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\INCLUDE"" ""-IC:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\ATLMFC\INCLUDE"" ""-IC:\Program Files (x86)\Windows Kits\10\include\10.0.10240.0\ucrt"" ""-IC:\Program Files (x86)\Windows Kits\NETFXSDK\4.6.1\include\um"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\shared"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\um"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\winrt"" /EHsc /Tpqutip/cy/spmatfuncs.cpp /Fobuild\temp.win-amd64-3.5\Release\qutip/cy/spmatfuncs.obj /w /Ox; cl : Command line warning D9025 : overriding '/W3' with '/w'; spmatfuncs.cpp; c:\anaconda2\envs\qtpy3\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; c:\users\alex\documents\github\qutip\qutip\cy\src/zspmv.hpp(3): error C2146: syntax e",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/648#issuecomment-281199101:157,Release,Release,157,https://qutip.org,https://github.com/qutip/qutip/pull/648#issuecomment-281199101,4,['Release'],['Release']
Deployability,"Attempt to install qutip in python2.7; ```; running build_ext; building 'qutip.cy.spmatfuncs' extension; creating build\temp.win-amd64-2.7; creating build\temp.win-amd64-2.7\Release; creating build\temp.win-amd64-2.7\Release\qutip; creating build\temp.win-amd64-2.7\Release\qutip\cy; creating build\temp.win-amd64-2.7\Release\qutip\cy\src; C:\Users\alex\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\amd64\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Anaconda2\envs\qtpy2\lib\site-packages\numpy\core\include -IC:\Anaconda2\envs\qtpy2\lib\site-packages\numpy\core\include -IC:\Anaconda2\envs\qtpy2\include -IC:\Anaconda2\envs\qtpy2\PC /Tpqutip/cy/spmatfuncs.cpp /Fobuild\temp.win-amd64-2.7\Release\qutip/cy/spmatfuncs.obj -w -std=c++11 -O3 -march=native -funroll-loops; cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9002 : ignoring unknown option '-std=c++11'; cl : Command line warning D9002 : ignoring unknown option '-O3'; cl : Command line warning D9002 : ignoring unknown option '-march=native'; cl : Command line warning D9002 : ignoring unknown option '-funroll-loops'; spmatfuncs.cpp; c:\anaconda2\envs\qtpy2\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Include\xlocale(342) : warning C4530: C++ exception handler used, but unwind semantics are not enabled. Specify /EHsc; c:\users\alex\documents\github\qutip\qutip\cy\src/zspmv.hpp(3) : error C2146: syntax error : missing ',' before identifier 'data'; qutip/cy/spmatfuncs.cpp(2503) : error C2660: 'zspmvpy' : function does not take 7 arguments; qutip/cy/spmatfuncs.cpp(2688) : error C2660: 'zspmvpy' : function does not take 7 arguments; qutip/cy/spmatfuncs.cpp(2923) : error C2660: 'zspmvpy' : function does not take 7 arguments; qutip/cy/spmatfu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/648#issuecomment-281197524:11,install,install,11,https://qutip.org,https://github.com/qutip/qutip/pull/648#issuecomment-281197524,6,"['Release', 'install']","['Release', 'install']"
Deployability,Both scripts were tested on a fresh installation of 10.10 (no xcode or anything else). Both scripts installed fine and the new python and ipython versions are on the path and can be used immediately.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/279#issuecomment-65925409:36,install,installation,36,https://qutip.org,https://github.com/qutip/qutip/pull/279#issuecomment-65925409,2,['install'],"['installation', 'installed']"
Deployability,"Bumping an old topic with two major new considerations. Number one: Travis is [changing its pricing model for open source software](https://blog.travis-ci.com/2020-11-02-travis-ci-new-billing), and generally it seems like [it's going to become unfeasible for us](https://www.jeffgeerling.com/blog/2020/travis-cis-new-pricing-plan-threw-wrench-my-open-source-works). Over the past month or so, queue times on Linux builds have increased massively (from near-instant to up to 90 minutes), and the number of allowed concurrent builds has already limited the amount of testing we are able to do - we don't even have Windows tests because we couldn't fit them in. In around March 2021 we expect the old travis-ci.org that QuTiP is grandfathered onto to shut down completely, forcing us onto the new model on travis-ci.com. Number two: in November 2019, GitHub released their own CI, GitHub Actions. This is (as best as I can tell) completely free for open source, public repositories like QuTiP, and offers access to a large number of Linux, macOS and Windows containers. This completely free period of GitHub Actions might not last forever (you can imagine maybe they're just trying to drive adoption before increasing the cost), but especially with the new time pressure from Travis, this seems like the right choice for now. Our testing set up is fairly straightforward, so migrating to a new CI shouldn't be too difficult. I just wrote (#1429) a GitHub Actions workflow to build and distribute binary releases of QuTiP on Linux/Mac/Windows, and I'm pretty convinced by the power of their CI. It's got an awful lot of flexibility with a _lot_ of customisation so its initial learning curve is a little steep (or maybe I'm just not used to CI tools), but I'm impressed by what's available. I believe it comes with a degree of reusability as well; I think we can define a test as a single ""action"", and then reuse that in the PR-push workflow and the make-distribution workflow.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/959#issuecomment-770455542:855,release,released,855,https://qutip.org,https://github.com/qutip/qutip/issues/959#issuecomment-770455542,2,['release'],"['released', 'releases']"
Deployability,"By default, OSX does not have a fortran solver. One way to get one is to use macports and install the gcc compiler that includes gfortran. However, as of version 3.1, the standard monte carlo solver is on par with the fortran solver, so unless you are doing something where a factor of 2 or so is really important, then you do not need this feature.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/391#issuecomment-154915531:90,install,install,90,https://qutip.org,https://github.com/qutip/qutip/issues/391#issuecomment-154915531,1,['install'],['install']
Deployability,"By running the same file as in the gist of issue #1023, now the times are back to comparable with qutip 4.3.1 for the choice `Average States = False, Store States = True` and the storing doesn't get stuck two minutes. . With the default options, QuTiP 4.4 (both 4.4.0.dev0+e4b2415a and dev0+da029386) is slower than 4.3.1 of a factor 2 (Case 4 below). ; With `Average States = True, Store States = False`, version 4.3.1 is faster than the old patch that is faster than this one. . Here the full cases:; ### Case 1) Average states = False, Store States = True. #### QuTiP 4.3.1:; Total run time: 29.72s; **Real cell time: 30s** . #### QuTiP 4.4 before this patch:; Total run time: 17.49s; **Real cell time: 127.9s** . #### QuTiP 4.4 with this patch:; Total run time: 19.96s; **Real cell time: 28.90908122062683**. ### Case 2) Average states = False, Store States = False; #### QuTiP 4.3.1:; Total run time: 9.55s; real time 10.40579104423523. #### QuTiP 4.4 before this patch:; Total run time: 20.02s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 18.61s; **Real cell time: 18.64s**. ### Case 3) Average states = True, Store States = True. #### QuTiP 4.3.1:; Total run time: 35.35s; **Real cell time: 65s**. #### QuTiP 4.4 before this patch:; Total run time: 18.35s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 19.52s; **Real cell time: 23s** . ### Case 4) Default options; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 18s; **Real cell time: 22s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 19s** . ### Case 5) Average states = True, Store States = False; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 19s; **Real cell time: 18s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 28s** . I am merging this in any case as it removes the slowing down when",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1024#issuecomment-503664663:443,patch,patch,443,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-503664663,4,['patch'],['patch']
Deployability,"By the way, if you're organising your next major release right now, I wouldn't wait for us before you release it - we certainly won't define any interface until at least QuTiP 5.0, and we don't expect to even be in the first alpha until around September.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830021551:49,release,release,49,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830021551,2,['release'],['release']
Deployability,"Can confirm both the error and the workaround. As a physicist, I just did this to lines 48 and 49 of `hardware_info.py`; ```; #results.update({'cpu_freq': int(float(os.popen('sysctl -n machdep.cpu.brand_string'); #.readlines()[0].split('@')[1][:-4])*1000)}); results.update({'cpu_freq': 3000}); ```; Works fine now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1606#issuecomment-885023500:135,update,update,135,https://qutip.org,https://github.com/qutip/qutip/issues/1606#issuecomment-885023500,2,['update'],['update']
Deployability,"Can you fully show your build process, and did this work with a previous version of QuTiP? It builds fine for me from pip sdist on all major platforms with a simple; ```; pip install qutip; ```; and the sdist of 4.5.2 seems to be missing the same file. Officially we don't support building with OpenMP from pip sdist (only git), but to be fair, it should have worked. In the interests of better semantics, can you change the new line in `MANIFEST.in` to; ```; graft qutip/**/src; ```; Technically there's only the one file that doesn't get tagged in (I hope), but logically the principle is that anything in a `src` directory should be distributed in the `sdist`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1449#issuecomment-782608343:175,install,install,175,https://qutip.org,https://github.com/qutip/qutip/pull/1449#issuecomment-782608343,1,['install'],['install']
Deployability,Changelog updated and issue added to 4.6.3 milestone.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1588#issuecomment-870509718:10,update,updated,10,https://qutip.org,https://github.com/qutip/qutip/pull/1588#issuecomment-870509718,1,['update'],['updated']
Deployability,Closing this for now as the runtime optional requirement has been updated to 0.29.20 as of #1465.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1129#issuecomment-809407636:66,update,updated,66,https://qutip.org,https://github.com/qutip/qutip/issues/1129#issuecomment-809407636,1,['update'],['updated']
Deployability,"Closing this now, unless you have more problems - QuTiP has binary release candidates for 4.5.2 and 4.5.3 on `conda-forge` (I think they rebuilt 4.5.2 since this issue), and I couldn't reproduce any build failures on `pip` with 3.9.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1371#issuecomment-809302975:67,release,release,67,https://qutip.org,https://github.com/qutip/qutip/issues/1371#issuecomment-809302975,1,['release'],['release']
Deployability,"Coming soon! I did more digging and modified the sphinx_rtd_theme to add this warning message. ![screenshot 2019-02-27 17 11 28](https://user-images.githubusercontent.com/6968324/53504756-d003a400-3ab2-11e9-9578-87761dddfce2.png). @ajgpitch At this moment, do we rebuild the old docs or add this message manually to them? . Also, for the future docs, how are we going to make sure that everytime we make a new release, the old documentation gets this warning message? Maybe we make some release-documentation notes similar to the release notes, and add this as one of the steps. When you build new documentation, you also have to rebuild the older version and change the conf.py file to include the warning message. I poked around a bit and could change the sphinx_rtd_theme so that we can have something like . ```; version = 4.2; is_latest = False; ```. and the documentation inserts this message based on this value.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1516#issuecomment-468017470:410,release,release,410,https://qutip.org,https://github.com/qutip/qutip/issues/1516#issuecomment-468017470,3,['release'],"['release', 'release-documentation']"
Deployability,"Congratulations, you have rediscovered the quantum Zeno effect :-) There is nothing wrong with qutip here, I think. You don't write what your system is exactly, but I assume something like $H=\sigma_x$ and jump operator $\sigma_-$. The effect of the environment can be thought of as measuring the system continuously, with a strength proportional to the coupling rate, which you call jump rate. Jump rate is indeed a slightly misleading (but commonly used) name. Its meaning is the reciprocal of the expected time until a jump, if the system is in the excited state. However, due to the continuous measurement and the quantum Zeno effect, the system rarely makes it to the excited state in the first place. Mathematically, where it comes from is that the deterministic trajectory evolution (between the jumps) is given not by the system Hamiltonian, but by an effective (non hermitian) Hamiltonian. In the limit of large coupling rates, this effective Hamiltonian becomes approximately diagonal.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2539#issuecomment-2398136920:304,continuous,continuously,304,https://qutip.org,https://github.com/qutip/qutip/issues/2539#issuecomment-2398136920,2,['continuous'],"['continuous', 'continuously']"
Deployability,"Copying here the message of the failed build, as I cannot find the message of the successful one in the build history (since it refers to the same PR, it looks like it was not kept). . ```; QuTiP Version: 4.4.0.dev0+109c09d; Numpy Version: 1.16.2; Scipy Version: 1.2.1; Cython Version: 0.29.7; Matplotlib Version: None; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.4.0.dev0+109c09d-py3.7-macosx-10.7-x86_64.egg/qutip; ```; from https://travis-ci.org/qutip/qutip/builds/521534881",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/961#issuecomment-484740433:391,Install,Installed,391,https://qutip.org,https://github.com/qutip/qutip/pull/961#issuecomment-484740433,2,['Install'],"['Installation', 'Installed']"
Deployability,"Curious cross-reference from [mdanalysis](https://github.com/MDAnalysis/mdanalysis). Their tests trigger the same error (likely again because of pytest-xvfb),; ```; XIO: fatal IO error 0 (Success) on X server "":1029""; ```; Their error is not so simple to clear, since they use the object oriented matplotlib API (e.g. using AxesSubplot `matplotlib.axes._subplots.AxesSubplot`) rather than matplotlib.pyplot. So they don't have access to `plt.close()` and `axes.cla()` doesn't prevent the error, probably for the same reason that `plt.clf()` didn't work for qutip. One point they have which is worth noting: they recommend using the environment variable `MPLBACKEND=agg` for headless CI testing. And sure enough the XIO error does not occur with mdanalysis if `MPLBACKEND=agg` is set. For qutip the `plt.close(fig)` patch is still the best (more robust) solution though.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639#issuecomment-912159847:815,patch,patch,815,https://qutip.org,https://github.com/qutip/qutip/issues/1639#issuecomment-912159847,1,['patch'],['patch']
Deployability,"Cython 0.29 is not compatible with python 3.12.; On debian, they have the module `python3-zombie-imp` which is a copy of the removed imp module, but it does not seems available on pip or conda. Thus cython jit (pyximport) is not working on 3.12 for almost everyone. Adding cython3 to 4.7.X is not a quick fix and we already choose not to do it. The best we can do is to run as if cython was not installed at runtime on 3.12 and release 5.0.0 soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293#issuecomment-1892641379:395,install,installed,395,https://qutip.org,https://github.com/qutip/qutip/issues/2293#issuecomment-1892641379,2,"['install', 'release']","['installed', 'release']"
Deployability,"Cython 3.0.0 is not supported and probably won't for some time.; The patch is not as easy as we hoped.; Duplicate of #2198, so closing this issue. Feel free to continue the discussion there.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2206#issuecomment-1651655375:69,patch,patch,69,https://qutip.org,https://github.com/qutip/qutip/issues/2206#issuecomment-1651655375,1,['patch'],['patch']
Deployability,"Dear @HtPsi , I ran your example code and I got the results as,. ```; >>> import matplotlib.pyplot as plt; >>> import numpy as np; >>> from qutip import *; >>> delta=0.2*2*np.pi;; >>> eps0=1.0*2*np.pi;; >>> A=2.5*2*np.pi;; >>> omega=1.0*2*np.pi;; >>> H0=-delta/2.0*sigmax()-eps0/2.0*sigmaz(); >>> H1=A/2.0*sigmaz(); >>> args={'w':omega}; >>> H=[H0,[H1,'sin(w*t)']]; >>> T=2*np.pi/omega; >>> f_modes_0, f_energies = floquet_modes(H, T, args); >>> print(f_modes_0, f_energies); [Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket; Qobj data =; [[ 0.72964231+0.j ]; [-0.39993748+0.55468199j]], Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket; Qobj data =; [[0.39993748+0.55468199j]; [0.72964231+0.j ]]] [-2.83131211 2.83131211]; ```; So it is definitely not an issue of the source code. I advise that you try to install the linux box for windows from the simple instructions for Windows 10 : https://docs.microsoft.com/en-us/windows/wsl/install-win10. Then, you can just install QuTiP again like a standard Linux user and run the floquet solver directly.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/854#issuecomment-392535672:834,install,install,834,https://qutip.org,https://github.com/qutip/qutip/issues/854#issuecomment-392535672,3,['install'],"['install', 'install-']"
Deployability,"Dear @hodgestar and @AGaliciaMartinez , I have made the changes as Simon suggested -- modified the `add_arc` and `add_line` function to include `Qobj` inputs. By default, have set the arc to be solid blue and the line segment to be solid black, which the user can change as per their wish. Also, have removed the dependency of `add-arc` on `add_points`. Have also included `plot_arc` and have updated `plot_line`. ; Whenever you guys find time, please review the code. Below, I am attaching an image containing a variety of ways we can now change the appearance of arcs and lines. The code used is:. ```; b = Bloch( fig= None, figsize=[10,10]). ... b.add_line([x,y,z],[z,x,y],'m--') ; b.add_line([x,y,z],[y,z,x],'r') ; b.add_line([z,x,y],[y,z,x]). b.add_arc([0.5,0,0],[0,.5,0]); b.add_arc([1,0,0],[0,1,0],'r'); b.add_arc([0,0,1], [1,0,0],'g:'); b.add_arc([0,1,0],[0,0,1],'y--'). b.add_arc([x,y,z],[z,x,y]) ; b.add_arc([x,y,z],[y,z,x]) ; b.add_arc([z,x,y],[y,z,x]) ; ```; where `[x,y,z] = [1/np.sqrt(2), 1/np.sqrt(2), 0]`; ![qutip_bloch](https://user-images.githubusercontent.com/33507538/145733327-80f71c48-7401-4e06-a55e-9cd0378c66b4.png)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1690#issuecomment-991988829:393,update,updated,393,https://qutip.org,https://github.com/qutip/qutip/pull/1690#issuecomment-991988829,1,['update'],['updated']
Deployability,"Dear @spmvg, It could be interesting to look into implementing something along this line in QuTiP, even a small snippet. Or looking into possible integrations with [QuSpin](https://github.com/weinbe58/QuSpin) and [OpenFermion](https://github.com/quantumlib/OpenFermion), which implement fermionic commutation relations, although generally looking at other applications. If you develop on this, please feel free to get in touch. Cheers, Nathan",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/863#issuecomment-394585029:146,integrat,integrations,146,https://qutip.org,https://github.com/qutip/qutip/issues/863#issuecomment-394585029,1,['integrat'],['integrations']
Deployability,"Dear Alex, thanks for the comments. We need to do some more changes. So if; there is a QuTiP release due soon maybe PIQS can join for the next one.; Otherwise we should be fine in a couple of weeks (or less). Thank you. 2018-02-28 19:51 GMT+09:00 Shahnawaz Ahmed <notifications@github.com>:. > Hi, we need some more time to discuss and get this done. In its present; > form the main solver works and there will not be major changes to it but we; > would like to make the additional parts more consistent with qutip (make; > j_algebra similar to jmat, add the states without conflicts such as ghz; > etc) This will take some time and hence I am putting the WIP tag back. I; > will notify as soon as we are done with the changes so that this can be; > merged. @nathanshammah <https://github.com/nathanshammah>; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/753#issuecomment-369202301>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AN5ffOmZn10BolQrl0-tt1IUba6p-8c8ks5tZS-pgaJpZM4PgbIo>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/753#issuecomment-369233145:93,release,release,93,https://qutip.org,https://github.com/qutip/qutip/pull/753#issuecomment-369233145,1,['release'],['release']
Deployability,"Dear Jakelishman and BoxiLi,. Thanks a lot for your reply. I still get incorrect results from using QobjEvo for my Hamiltonian and then use only the initial and final time in the mesolve. I am still working on how to solve this problem. Will update you with the results.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1472#issuecomment-812258761:242,update,update,242,https://qutip.org,https://github.com/qutip/qutip/issues/1472#issuecomment-812258761,1,['update'],['update']
Deployability,"Dear all,. I'm trying to install the latest release of QuTip on Ubuntu system. Since; our workstation hasn't been connected to internet, I; downloaded Anaconda3-2019.03-Linux-x86_64 and qutip-4.3.1.tar, and attempt; to install from source code. Firstly I successfully installed Anaconda with the command:; bash ~/Downloads/Anaconda3-2019.03-Linux-x86_64.sh. Then in the conda environment I typed the command:; python setup.py install. I get the following error message:. gcc -pthread -B /home/pz/anaconda3/compiler_compat -Wl,--sysroot=/; -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -Iqutip/cy; -I/home/pz/anaconda3/lib/python3.7/site-packages/numpy/core/include; -I/home/pz/anaconda3/lib/python3.7/site-packages/numpy/core/include; -I/home/pz/anaconda3/include/python3.7m -c qutip/cy/spmatfuncs.cpp -o; build/temp.linux-x86_64-3.7/qutip/cy/spmatfuncs.o -w -O3 -march=native; -funroll-loops; gcc: error trying to exec 'cc1plus': execvp: No such file or directory; error: command 'gcc' failed with exit status 1. It seems the gcc compiler isn't correctly located? Or what else problem. I checked the gcc version on the workstation:; gcc --version; gcc (Ubuntu 8.3.0-6ubuntu1~18.10) 8.3.0; Copyright (C) 2018 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. whereis gcc; gcc: /usr/bin/gcc /usr/lib/gcc /usr/share/man/man1/gcc.1.gz. How can I direct the installer to find the gcc compiler?. Thanks!; Best regards, Pu Zhang; --; Faculty at School of Physics, Huazhong University of Science and Technology; Room 819 (N.), Yifu Science and Technology Building; 1037 Luoyu Road, Wuhan, China; E-mail: puzhang0702@hust.edu.cn <puzha@fotonik.dtu.dk>; Homepage: www.researchgate.net/profile/Pu_Zhang4; Phone: +86 18871860394",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/946#issuecomment-501605757:25,install,install,25,https://qutip.org,https://github.com/qutip/qutip/issues/946#issuecomment-501605757,6,"['install', 'release']","['install', 'installed', 'installer', 'release']"
Deployability,"Deleting everything that starts with 'tdname' sounds sub-optimal, but also not too risky.; I have not looked into it myself, and with this pull we are definitely better off than without.; I will merge now, as I am about to make the 4.1 release",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/655#issuecomment-285674287:236,release,release,236,https://qutip.org,https://github.com/qutip/qutip/pull/655#issuecomment-285674287,1,['release'],['release']
Deployability,"Did you install using --with-mcf90 ?. > On Nov 6, 2015, at 14:04, src10 notifications@github.com wrote:; > ; > Hello!!!; > ; > I installed python using anaconda on my mac and then installed qutip.; > ; > When I run the installation test I always get; > ; > Fortran mcsolver: False; > ; > How can I install the Fortran compiler needed.; > ; > Thanks; > ; > Regards!!; > ; > Sebastian; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/391#issuecomment-154592986:8,install,install,8,https://qutip.org,https://github.com/qutip/qutip/issues/391#issuecomment-154592986,5,['install'],"['install', 'installation', 'installed']"
Deployability,Did you try the development release? Seems to work just fine.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/501#issuecomment-229219087:28,release,release,28,https://qutip.org,https://github.com/qutip/qutip/issues/501#issuecomment-229219087,1,['release'],['release']
Deployability,"Directly in VS code. My launch.json looks like; ```json; 	""version"": ""0.2.0"",; 	""configurations"": [; 		{; 			""name"": ""Python: Current File"",; 			""type"": ""python"",; 			""request"": ""launch"",; 			""program"": ""${file}"",; 			""console"": ""integratedTerminal""; 		}; 	]; }; ```; When using the plt.show() command, the second window only appears after a b.render() command, but thats also necessary for any vectors I want to draw to appear.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1616#issuecomment-883458011:81,configurat,configurations,81,https://qutip.org,https://github.com/qutip/qutip/issues/1616#issuecomment-883458011,2,"['configurat', 'integrat']","['configurations', 'integratedTerminal']"
Deployability,"Do we need this at all? Or are we going to do CPC again in the future?; On Jul 11, 2014 3:56 PM, ""Robert Johansson"" notifications@github.com; wrote:. > - Remove the README.txt for CPC from the repository: only needed for; > CPC submission, and no need to keep it here; > ; > ---; > ; > You can merge this Pull Request by running; > ; > git pull https://github.com/jrjohansson/qutip 3.0-release-updates; > ; > Or view, comment on, or merge it at:; > ; > https://github.com/qutip/qutip/pull/186; > Commit Summary; > - Remove the README.txt for CPC from the repository: only needed for; > CPC submission, and no need to keep it here; > ; > File Changes; > - _D_ README.txt https://github.com/qutip/qutip/pull/186/files#diff-0; > (155); > ; > Patch Links:; > - https://github.com/qutip/qutip/pull/186.patch; > - https://github.com/qutip/qutip/pull/186.diff; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/pull/186.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/186#issuecomment-48713369:386,release,release-updates,386,https://qutip.org,https://github.com/qutip/qutip/pull/186#issuecomment-48713369,3,"['Patch', 'patch', 'release']","['Patch', 'patch', 'release-updates']"
Deployability,"Do you get the same behaviour with QuTiP 4.5.0 in the same environment? The offending parts of `qutip/__init__.py` have been there since then, so it shouldn't be new in 4.5.2 at least. I can't reproduce the error unless `pyximport.install()` has already been run before QuTiP is imported (e.g. if I do `import pyximport; pyximport.install(); import qutip` or `importlib.reload(qutip)`). We have `qutip/__init__.py` organised so that we don't enable `pyximport` until after we've done the test for `qutip.cy.openmp.parfuncs`: first we do. https://github.com/qutip/qutip/blob/8e181cc44ceefc14ad0e4f4bcf78e1c8fcd2b291/qutip/__init__.py#L100-L105. and only after that do we. https://github.com/qutip/qutip/blob/8e181cc44ceefc14ad0e4f4bcf78e1c8fcd2b291/qutip/__init__.py#L124-L126. In your error it's trying to build `qutip.cy.openmp.parfuncs`, and the only line that ever attempts to import that (in Python space) is line 101 above in `__init__`. It can only attempt to Cythonize files if `pyximport` is activated, but `qutip` doesn't activate that til a few lines later. It's certainly still a bug that this error appears if you've manually activated `pyximport` before (which would definitely cause it), but I'm struggling to find any other reason that the error could appear. We're looking to simplify the handling of OpenMP in a later version, and this buggy check is certainly a good reason to expedite that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1334#issuecomment-670167290:231,install,install,231,https://qutip.org,https://github.com/qutip/qutip/issues/1334#issuecomment-670167290,2,['install'],['install']
Deployability,"Do. ```; import matplotlib.pyplot as plt; ```. Do this import inside the plot_pulse function, not at the top of the file, so that the class could be used even if matplotlib is not installed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/165#issuecomment-46957824:180,install,installed,180,https://qutip.org,https://github.com/qutip/qutip/pull/165#issuecomment-46957824,1,['install'],['installed']
Deployability,Documentation updated in #2021.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2018#issuecomment-1319812997:14,update,updated,14,https://qutip.org,https://github.com/qutip/qutip/issues/2018#issuecomment-1319812997,1,['update'],['updated']
Deployability,"Does this change break when using `extra_link_args` on NumPy ≤ 0.10.1? Also, should `extra_link_args` here be allowed to override `site.cfg`? It might be good to do a `newblas.update()` to allow users to explicitly pass compile args for `qutraj_run` that differ from `site.cfg`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/392#issuecomment-154871830:176,update,update,176,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154871830,1,['update'],['update']
Deployability,"Edit: I thought that the original pull request would have been killed such that I would need to submit a new one. I don't think this is the case, as of viewing still open request on Git, so I wont be submitting another pull request unless otherwise informed. I'm going to submit another pull request, and it should be much better this; time. I made these changes:. - Fixed whitespace, blank line, and linting issues as far as I can tell; - I'm not sure that I broke lines up entirely the best way in all ; cases, but I think it looks okay enough as of now.; - Took all of my new functions out of floquet.py and placed them; properly into flimesolve.py; - The version of floquet.py that I'll be submitting was one I; directly copy-pasted from the main repository, such that there; shouldn't be any changes whatsoever to it; - replaced all scipy functions with numpy equivalents; - Fixed the issues in correlation.py, as far as I know; - Turns out the issue here was that I never updated correlation.py to; my most current version, which should only add in flimesolve as an option; for solvers (with an if statement or two to get the Hamiltonian into a; FloquetBasis object if flimesolve is the selected solver). Thanks again for your feedback!. On Mon, Jun 26, 2023 at 6:32 PM Fenton Clawson ***@***.***> wrote:. > Hey Eric,; >; > Looks like I did mess up with the floquet.py versus flimesolve.py. I think; > I forgot at some point that I was to include all my new stuff in just the; > flimesolve.py, and then forgot about that script altogether. I apologize; > for this, and I'll fix it.; >; > I'll also go back through and fix style issues. As with above, I think I; > forgot to keep the proper styling at a certain point.; >; > I tried to keep my changes to correlation.py to a minimum, and contained; > to simply adding in the new solver in the make_solver function, as well as; > adding in some inputs as options to that solver, but I'll go through and; > review to see what's wrong.; >; > Thanks ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2140#issuecomment-1610056805:978,update,updated,978,https://qutip.org,https://github.com/qutip/qutip/pull/2140#issuecomment-1610056805,1,['update'],['updated']
Deployability,"Every routine that uses multiple processes has a kwarg to change the number and if this is not set then it falls back on qutip.settings.num_cpus which is set in **init**.py. On May 2, 2014, at 1:04 PM, Robert Johansson notifications@github.com wrote:. > You can use it to select number of processes to use, right? I think it is useful if you don't want to use all processors for a calculation, although I usually use the .qutiprc configuration file for this rather than environment variables. I guess it is not really necessary but could be useful I guess.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/119#issuecomment-41985338:430,configurat,configuration,430,https://qutip.org,https://github.com/qutip/qutip/issues/119#issuecomment-41985338,1,['configurat'],['configuration']
Deployability,"Every time you open a new terminal, you will need to activate the conda environment by `conda activate qutip-env`. QuTiP is only installed in this environment. If you are interested, you could check https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html for details.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1391#issuecomment-736060302:129,install,installed,129,https://qutip.org,https://github.com/qutip/qutip/issues/1391#issuecomment-736060302,1,['install'],['installed']
Deployability,Fantastic @sahmed95! I would love to know how to pull this into my own release of QuTiP. But potentially this is not something we should discuss here in this thread?. Thanks again for the swift and beautiful resolution 👍,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/679#issuecomment-291655086:71,release,release,71,https://qutip.org,https://github.com/qutip/qutip/pull/679#issuecomment-291655086,1,['release'],['release']
Deployability,"Firstly, just to underline @jakelishman comment. We *cannot* change the public interface unless we make a new major release. I also don't like the `.N` property, but it snuck in before my time. We could look to change this in v.5, but not before. . It seems this PR does contain some enhancements that are not part of #1209. However, @mlaguna10 did seem to make quite clear that they were already working on the issue. I believe #1209 is ready to merge, but we'll wait for @BoxiLi to confirm. . So what I suggest is that we merge #1209. @MartinSandeCosta can then merge the master into this PR and see what is left that adds to enhancement request outlined #1208. Assuming (with good reason) that there are valuable additions, then we will merge this too. Thanks everyone for contributing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1212#issuecomment-605881345:116,release,release,116,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-605881345,1,['release'],['release']
Deployability,Fixed #1813 and released in QuTiP 4.7.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1811#issuecomment-1103663641:16,release,released,16,https://qutip.org,https://github.com/qutip/qutip/issues/1811#issuecomment-1103663641,1,['release'],['released']
Deployability,"Fixed by #1465, to be released in QuTiP 4.6.0.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/933#issuecomment-809451110:22,release,released,22,https://qutip.org,https://github.com/qutip/qutip/issues/933#issuecomment-809451110,1,['release'],['released']
Deployability,Fixed with v5 release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755#issuecomment-2029108115:14,release,release,14,https://qutip.org,https://github.com/qutip/qutip/issues/1755#issuecomment-2029108115,1,['release'],['release']
Deployability,"For clarity: I ran your code with 1,000 timesteps and 10,000 timesteps and found a linalg norm difference in the outputs of 4.4e-4 (compared to QuTiP's 6.5e-8), which is what I meant. I considered that difference ""not fully convergent"" in part because QuTiP's default tolerance goals have an absolute tolerance of ~1e-8 (that's per-element, not the full norm). Here's a couple more things to look at:; - if you're using QuTiP objects without our solvers like this, we tidy up sparse matrices at every operation. You probably don't want that - you might get different results if you convert your RK method to work on raw Numpy arrays.; - your RHS isn't accurate - it takes `sqrt(gamma)`, but your time-dependent function already does that. This is perhaps a mistake, and very likely the source of the discrepancy? Also, while it's irrelevant here, your Lindbladian has `c_op * c_op.dag() * rho` as the last term, but it should be `c_op.dag() * c_op * rho`.; - your RK method isn't using updated versions of the Hamiltonian or the collapse operator at the intermediate timesteps.; - you say you're using RK45, but you've only got 4 different evaluations? That looks like an RK4 method to me (not that it should matter).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733#issuecomment-986723762:986,update,updated,986,https://qutip.org,https://github.com/qutip/qutip/issues/1733#issuecomment-986723762,1,['update'],['updated']
Deployability,"For jax, the issue is with `isherm`, not the casting. We cannot call it in jitted functions since they cannot branch depending on the input data. The casting itself cause issues with tensorflow. The `isherm_jax` could be set to always return `False`, but returning `False` only inside jitted function is too hacky and could break with jax release. When applied everywhere, it will have strange side effect such as `qeye(n) *2` is hermitian but `qeye(n)+qeye(n)` is not. Don't want that. If the `Qobj` are always the inputs of the function, then we could probably compute the hermiticity in `qobj_tree_flatten`, but it would not be any help when the object is build inside the function. I am somewhat at a lost of idea other than that... I see a helper function like `qutip_jax.set_as_default()` that would set all the settings for the user for the session in one go. Not have them manually updated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2329#issuecomment-1953261235:339,release,release,339,https://qutip.org,https://github.com/qutip/qutip/pull/2329#issuecomment-1953261235,2,"['release', 'update']","['release', 'updated']"
Deployability,"For me there are three main points here:; 1. The `site.cfg` should be a global numpy configuration (or local qutip configuration); 2. I see no reason for using the `DeprecationWarning` if you change the code to read the info from the `site.cfg`, perhaps there is something I am missing? If I do `sed -i -e '/extra_/d' qutip/fortran/setup.py` it compiles fine and seems to be using the `extra_link_args`.; 3. To dynamically control the `mcf90` module you could equally do this in the `site.cfg`:. ```; [qutip]; mcf90 = False / True; ```. and just default it to `False`. I have no comments on whether this should be preferred or not, or whether you _will_ split it up.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/392#issuecomment-154987547:85,configurat,configuration,85,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154987547,2,['configurat'],['configuration']
Deployability,"For people finding this later, this is not just because of the macOS version, but also because of your _Xcode_ version. As Xcode increases, Apple are making it harder and harder to have a sensible dev environment for command-line tools when all you care about is building for your local machine. You may find that a system include like `_ctermid.h` is missing in the future - it won't always be `limits.h` - especially with Xcode 11+. Since M1 Macs (I assume - I don't have one) ship entirely with Xcode 12, they will likely need this too. I believe even `xcode-select --install` will not always reinstate `/usr/include` any more, and the `*_headers_*.pkg` seems to not work with Xcode 11. `/usr/include` is gone, but Xcode has the correct set of includes for all platforms, so you can set your compiler's `sysroot` to the relevant SDK directory to get correct lookups. By default, the one you want will be at; ```; /Applications/Xcode.app/Contents/Developer/Platforms/MaxOSX.platform/Developer/SDKs/MacOSX.sdk; ```; The system `clang` will likely find this correctly, but if not or if you're using a separate compiler, for either `gcc` or `clang` you should pass the flag; ```bash; gcc -isysroot '/path/to/sdk' ...; ```; to find the correct includes. To automate this procedure, you may want to add that flag to your `CFLAGS` and `CPPFLAGS` environment variables. For example, you could put in your `.bashrc`; ```bash; export CFLAGS=""-isysroot '/path/to/sdk' ${CFLAGS}""; ```; to have it automatically added to all C compilations (after that file has been sourced).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1030#issuecomment-760084316:571,install,install,571,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-760084316,1,['install'],['install']
Deployability,"For product between `Qobj` `@` is strongly recommended. `*` should only be used for `Qobj * scalar`. `*` still exist for historical reason (qutip predate the addition of the `@` operator) and changing it's behaviour could break codes, so we prefer to not touch it. We should update the documentation to use `@`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2547#issuecomment-2417585366:275,update,update,275,https://qutip.org,https://github.com/qutip/qutip/issues/2547#issuecomment-2417585366,1,['update'],['update']
Deployability,"For the record, the combination of conda and Python 3.7 (instead of 3.8) works:; ~~~; = 629 passed, 11 skipped, 61 deselected, 2 xfailed, 906 warnings in 590.30s (0:09:50) =; ~~~; If mcsolve uses multiprocessing internally, it's possible the hanging test is related to the changes in Python 3.8 to use ""spawn"" instead of ""fork"" for multiprocessing on macOS (see also https://github.com/qutip/qutip-notebooks/issues/100). For the pip installation, the segfault occurs with both Python 3.7 and Python 3.8",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-596676557:433,install,installation,433,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596676557,1,['install'],['installation']
Deployability,"For the time being, a fix is to downgrade Matplotlib:. conda install matplotlib==3.0.3. On Sat, 28 Sep 2019 at 13:09, XiaoTailong <notifications@github.com> wrote:. > I have the same problem in Bloch() and show() functions in Mac OS 10.14. I; > cannot plot the Bloch sphere. It seems the problem of Matplotlib. But I am; > not sure.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1027?email_source=notifications&email_token=ADPF67AG3SH3L3HWWEZIC2TQL3KHTA5CNFSM4H24W5NKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD72QMLY#issuecomment-536151599>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ADPF67EQT2K5O3K73IHOFQ3QL3KHTANCNFSM4H24W5NA>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1027#issuecomment-536154011:61,install,install,61,https://qutip.org,https://github.com/qutip/qutip/issues/1027#issuecomment-536154011,1,['install'],['install']
Deployability,Forgot to update fork,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/299#issuecomment-68424943:10,update,update,10,https://qutip.org,https://github.com/qutip/qutip/pull/299#issuecomment-68424943,1,['update'],['update']
Deployability,Generally looks like a really good idea. Are either of these libraries that Python windows users would have installed anyway? Are they in the default Anaconda for windows for instance?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/421#issuecomment-181709691:108,install,installed,108,https://qutip.org,https://github.com/qutip/qutip/pull/421#issuecomment-181709691,1,['install'],['installed']
Deployability,"Given that the number one point of pain in installation that I have seen has been getting FORTRAN up and running, I think it could make sense to split off `mcf90`. It's extremely useful, but large parts of QuTiP are also useful without it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/392#issuecomment-154915442:43,install,installation,43,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154915442,1,['install'],['installation']
Deployability,"Given that this likely prevents many mistakes, I'm okay with merging it as is and if things break too badly for many users, we can revert or fix part of it and do a new release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1783#issuecomment-1028128787:169,release,release,169,https://qutip.org,https://github.com/qutip/qutip/pull/1783#issuecomment-1028128787,1,['release'],['release']
Deployability,"Go ahead and merge if it fixes the issue. On Tue, 10 Jul 2018 09:53 Shahnawaz Ahmed, <notifications@github.com> wrote:. > This is the update which fixes the inclusion of .pyx files when qutip; > source distribution is generated by sdist in the presence of MANIFEST.in.; > More discussions in #894 <https://github.com/qutip/qutip/issues/894>; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/qutip/qutip/pull/897; > Commit Summary; >; > - recursively add .pyx files with MANIFEST; >; > File Changes; >; > - *M* MANIFEST.in; > <https://github.com/qutip/qutip/pull/897/files#diff-0> (1); >; > Patch Links:; >; > - https://github.com/qutip/qutip/pull/897.patch; > - https://github.com/qutip/qutip/pull/897.diff; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/897>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AIxX7S6i7ICkfuHGJXd9umZYqJqhm4sEks5uFGuUgaJpZM4VJAi4>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/897#issuecomment-403758861:134,update,update,134,https://qutip.org,https://github.com/qutip/qutip/pull/897#issuecomment-403758861,3,"['Patch', 'patch', 'update']","['Patch', 'patch', 'update']"
Deployability,Go for it. I am curious to see how it will go with the new distribution method. If it works well it will encourage us to make more frequent release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1480#issuecomment-814963433:140,release,release,140,https://qutip.org,https://github.com/qutip/qutip/pull/1480#issuecomment-814963433,1,['release'],['release']
Deployability,"Good point. Lets do that for the next version. On 05/01/2014 04:10 PM, Robert Johansson wrote:. > Two suggestions:; > ; > 1.; > ; > ```; > QuTiP uses an environment variable |NUM_THREADS|. We should; > probably name-space this variable, calling it |QUTIP_NUM_THREADS|; > (consistent with how other packages name their variables, like; > |MKL_NUM_THREADS| and |OPENBLAS_NUM_THREADS|. The upcoming 3.0; > release would be a good time to make this change.; > ```; > ; > 2.; > ; > ```; > Considering that QuTiP does not use thread but processes, it would; > be even better to call the variable |QUTIP_NUM_PROCESSES|.; > ```; > ; > —; > Reply to this email directly or view it on GitHub ; > https://github.com/qutip/qutip/issues/119.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/119#issuecomment-41887009:403,release,release,403,https://qutip.org,https://github.com/qutip/qutip/issues/119#issuecomment-41887009,1,['release'],['release']
Deployability,"Good points. I suggest to simply remove the comment in `test_qobj`, and change to pytest in the `setup.py`. Something like what's [here](https://doc.pytest.org/en/3.0.4/goodpractices.html#integrating-with-setuptools-python-setup-py-test-pytest-runner) should work (basically changing `nose` with `pytest`). It seems however that testing it's a thorny [issue](https://github.com/pypa/setuptools/issues/1684), but these changes for the time being make the whole package at least consistent.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1161#issuecomment-576003587:188,integrat,integrating-with-setuptools-python-setup-py-test-pytest-runner,188,https://qutip.org,https://github.com/qutip/qutip/pull/1161#issuecomment-576003587,1,['integrat'],['integrating-with-setuptools-python-setup-py-test-pytest-runner']
Deployability,"Good question. I'm not sure what the *relevant* differences between the machines are. Both are Ubuntu workstations (one 14.04, the other 16.04). The versions of `conda` a different (4.0.5 vs 4.3.11, but I may not easily be able to upgrade). They both have quite different compilers installed. I stepped through the import statement with `ipdb`. The crash happens in the following location:. __init__.py (171): from qutip.obj import *; qobj.py (60): from qutip.fastsparse import fast_csr_matrix, fast_identity; fastparse.py (406): from qutip.cy.spmath import (zcsr_transpose, zcsr_adjoint, zcsr_mult). When I continue to step into the last statement (line 406 in `fastparse.py`), I only see `importlib` internals, and the last output before it crashes is. > <frozen importlib._bootstrap>(222)_call_with_frames_removed()",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-289238978:231,upgrade,upgrade,231,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-289238978,2,"['install', 'upgrade']","['installed', 'upgrade']"
Deployability,"Good to hear that it works now. Thanks for reporting the problem. It's a bit unfortunate that the 2.2 version of qutip doesn't work smoothly with 14.04 out of the box, but we hope to have a new release out this summer which would amend this problem,",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42923339:194,release,release,194,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42923339,1,['release'],['release']
Deployability,Good. Leaving this issue open until we update (or evaluate updating) the documentation on Mac installation.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/965#issuecomment-471278530:39,update,update,39,https://qutip.org,https://github.com/qutip/qutip/issues/965#issuecomment-471278530,2,"['install', 'update']","['installation', 'update']"
Deployability,"Great! You can keep adding commits to this PR. That would make it easier to follow, and we could continue the discussions here. Yes, there is some code duplication in `sesolve` and `mesolve`, which would be good to cleanup with some helper functions, that would be most welcome. There are some related functions in `rhs_generate.py` as well as in `odecheck.py`. There is definitely some consolidation and cleanup that could be done there. Perhaps these should be combined to one module. As for the question about interpolation, I think that it would be sufficient to have the array behave as a step-function that is piece-wise constant, but the ODE solvers might play better with continuous functions that a linear interpolation would give, so it might be worth trying both cases (and maybe even have an option for which one to use in Odeoptions)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/141#issuecomment-44803811:680,continuous,continuous,680,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44803811,1,['continuous'],['continuous']
Deployability,"HI Jake than you for the response.; I'll open a separate PR with just the update for the failing test and the changes in `__init__.py` if you are ok with it.; With respect to the check in OpenBLAS with SciPy 1.4, yes I can try it on a linux and a macOS env just in case.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-819063126:74,update,update,74,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-819063126,1,['update'],['update']
Deployability,"HI, I have some errors similar to these, and I don't know how to solve it. Is there anyone will face these problems if installing on windows?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-526840351:119,install,installing,119,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-526840351,1,['install'],['installing']
Deployability,"Hahaha, thanks! One of the earlier things I did on Qiskit was to get the docs building with current Sphinx (4, at the time) too - we had found a couple of bugs in extensions that I then patched, and we needed to be on latest Sphinx to use them. You'll be ahead of us if you're up to Sphinx 6 - we still have a UI toolkit dependency that limits us (unnecessarily) to Sphinx 5 right now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2149#issuecomment-1494605382:186,patch,patched,186,https://qutip.org,https://github.com/qutip/qutip/pull/2149#issuecomment-1494605382,1,['patch'],['patched']
Deployability,"Half related to this, what do you think about having data-layer's data _mostly_ immutable? We could ignore the tracking of copies of the states, which are sometime done by the integrator or solver (normalization in `Solver._restore_state` ?). There are some gains to work in-place: stochastic evolution is 30% faster inplace. But I see ways around it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1907#issuecomment-1141474154:176,integrat,integrator,176,https://qutip.org,https://github.com/qutip/qutip/pull/1907#issuecomment-1141474154,1,['integrat'],['integrator']
Deployability,Happy to merge this soon if the conflicts are solved. cc @hodgestar @ajgpitch. We are aiming for a new qutip release this week.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1090#issuecomment-579621896:109,release,release,109,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-579621896,1,['release'],['release']
Deployability,"Hardcoded matrix will cause problem in later modification of the code. (Or if numpy update it's random number generator, etc.); Keeping the present tests, I would add something like this:; ```; O1 = rand_herm(..., seed=seed); O2 = rand_herm(..., seed=None); O3 = rand_herm(..., seed=seed); assert(O1!=O2); assert(O1==O3); ```; You check that random Qobj are reproducible using a seed and work as expected when not.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/917#issuecomment-427319374:84,update,update,84,https://qutip.org,https://github.com/qutip/qutip/pull/917#issuecomment-427319374,1,['update'],['update']
Deployability,"Having `Qobj * matrix` work at the moment is to make it easier to transition to the 5.x branch when it releases, since it's the current behaviour of 4.x. Once we've had a bit of time for people to make the transition, I think we should be completely removing this ""functionality"". To me, matrices aren't quantum objects; if you're working with a Numpy array, you should expect Numpy semantics to occur, i.e. Numpy should see `Qobj` as a scalar type, and broadcast against it like that. It's an implementation detail that the backing data is a matrix; the linear algebra theory certainly doesn't demand it. Raising-and-catching is slower than just having the `mul` functions return `NotImplemented`. The only implementations that would need a wrapper are our Cython-based ones, and they can both be wrapped in something like; ```python; class only_allow_numeric:; def __init__(self, inner):; self.inner = inner; def __call__(self, other):; if not isinstance(other, numbers.Number):; return NotImplemented; return self.inner(complex(other)); ; mul.add_specialisations([; (CSR, CSR, only_allow_numeric(mul_csr)),; (Dense, Dense, only_allow_numeric(mul_dense)),; ]); ```. I'm generally fine with `Variable * Qobj` only working sometimes; I think the general intent is that you'd configure the dispatchers to only allow TensorFlow data output, so it would always work for you.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1611#issuecomment-880850027:103,release,releases,103,https://qutip.org,https://github.com/qutip/qutip/pull/1611#issuecomment-880850027,1,['release'],['releases']
Deployability,"Hello @AGaliciaMartinez,; Thanks for the review. I will look into it and update.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2110#issuecomment-1458493695:73,update,update,73,https://qutip.org,https://github.com/qutip/qutip/pull/2110#issuecomment-1458493695,1,['update'],['update']
Deployability,"Hello! As @jakelishman described, you can help debug this issue by trying:. ```python; from qutip.cy.openmp.parfuncs import spmv_csr_openmp; ```. and reading the exception produced. I suspect that the `qutip.cy.openmp.*` packages will simply not have been compiled -- they're only built by QuTiP when ""--with-openmp"" is passed to `setup.py` and I think `conda install ... qutip` will not do that even when OpenMP is already installed. To correct this you will need to install QuTiP from source and pass `--with-openmp` yourself as described in https://qutip.org/docs/latest/installation.html?highlight=openmp#direct-setuptools-source-builds. We probably could make ""openmpi"" and ""no-openmpi"" builds for conda-forge by adapting the pattern in https://conda-forge.org/docs/maintainer/knowledge_base.html#openmp but that would require some work (and be a feature enhancement :).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1378#issuecomment-916822166:360,install,install,360,https://qutip.org,https://github.com/qutip/qutip/issues/1378#issuecomment-916822166,4,['install'],"['install', 'installation', 'installed']"
Deployability,"Hello! Thank you for reporting the bug. This looks like it is the same bug posted to the mailing list, so let's combine discussion here. Running the same conda install and Python commands works for me, so we will need to dig a bit more. If you're using MKL and numpy 1.21.X it's possible that you're encountering this numpy bug https://github.com/numpy/numpy/issues/20356. It only occurs on certain Intel CPUs (those with AVX512 CPU extensions). I believe it is fixed in numpy 1.22, but I haven't had a chance to confirm that yet. If so, a quick solution is to try ""conda install nomkl qutip"" and confirm that that installs a no-MKL Blas and that the tests pass afterwards. If not, could you post the output of `qutip.abut()` in a comment here and I can try make some more suggestions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750#issuecomment-1005689691:160,install,install,160,https://qutip.org,https://github.com/qutip/qutip/issues/1750#issuecomment-1005689691,3,['install'],"['install', 'installs']"
Deployability,"Hello,; I am having the same ValueError on Windows that @BoxiLi describes in the beginning of this thread. ; I see that this was fixed by changing the line ; noise = np.random.randint(0, 2**32, ntraj); to ; noise = np.random.randint(0, np.iinfo(np.uint32).max, ntraj, dtype=np.uint32).; I have two questions. ; 1) I just installed qutip using the installation instructions (conda install qutip). Do I expect the change described above to be present in the version that I installed (4.5.0)? Because I still have the original line with 2**32. Please let me know if there is something else I can do to get a more up-to-date version. ; 2) BoxiLi's correction actually still doesn't work for me. np.iinfo(np.uint32).max gives 2**32-1; what I need to not get the ValueError is 2**31. ; I am wondering if I should just go ahead and make this change in my local copy of stochastic.py to get the code to run, or if the simulations will be incorrect if I change the range of the random numbers in this way? Sorry if this is a dumb question. ; Thanks for your help.; Emma",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/968#issuecomment-608223338:321,install,installed,321,https://qutip.org,https://github.com/qutip/qutip/issues/968#issuecomment-608223338,4,['install'],"['install', 'installation', 'installed']"
Deployability,"Here is [sesolve](https://github.com/Ericgig/qutip/blob/solver.integrator/qutip/solver/sesolve.py) using it. And here is the [base solver](https://github.com/Ericgig/qutip/blob/solver.integrator/qutip/solver/solver_base.py).; I planned to do the dimension check in the solver. So `Sesolve.step(t)` and will call will `Integrator.integrate` and build the `Qobj`.; Likewise `SeSolver.run` call `Integrator.run`, there the `Result` object create the `Qobj`. I want the solver to copy the state only if it stores it, not if it only compute the expectation values. ; All the physics, which I consider the dims check to be part of, is done at the `Solver` level. We also don't have a no dims `QobjEvo`. . I made the `Integrator` to focus more on the ODE mathematics, but the creation of `Qobj` is quite fast so I don't mind either ways for the input types, but the dims check will still be done at the `Solver` level, not `Integrator`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1643#issuecomment-925137656:63,integrat,integrator,63,https://qutip.org,https://github.com/qutip/qutip/pull/1643#issuecomment-925137656,7,"['Integrat', 'integrat']","['Integrator', 'integrate', 'integrator']"
Deployability,"Here is the method for getting OPENMP on OSX using homebrew:. brew install gcc --without-multilib (takes a couple of hours to build). after which you can install QuTiP using:. CC=gcc-6 python setup.py install. The tests run without any ABI incompatibilities so, with this method, all platforms should be able to use OPENMP and parallel tools.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/438#issuecomment-277468035:67,install,install,67,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-277468035,3,['install'],['install']
Deployability,"Hey @lzawbrito, ; I tried to reproduce your error on a Linux (Ubuntu) machine. I installed your exact environment (all versions equal) and your provided code runs without a problem. Also the notebook you refer to does not give an error. So it seems to me that it is a problem with macOS. . Did you try to increase `nsteps`? You can do so by adding an option to the `mesolve()` function: . `output = mesolve(H, psi0, tlist, c_ops, e_ops, options=Options(nsteps=1000))`; Note that `1000` is the standard value for `nsteps`, so you should increase it furhter.; Let me know if increasing `nsteps` works!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896#issuecomment-1138780441:81,install,installed,81,https://qutip.org,https://github.com/qutip/qutip/issues/1896#issuecomment-1138780441,1,['install'],['installed']
Deployability,"Hey, I had the same problem for ages. Are you using it on Jupiter Notebook? If so you need to add Jupiter notebook support manually. As mentioned in https://docs.enthought.com/mayavi/mayavi/installation.html",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/671#issuecomment-824253247:190,install,installation,190,https://qutip.org,https://github.com/qutip/qutip/issues/671#issuecomment-824253247,1,['install'],['installation']
Deployability,"Hey, thanks for the workaround with pinning scipy. How long does it typically take for a qutip version to show up on conda-forge after it is already released by you folks and made available on pypi?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2383#issuecomment-2045143602:149,release,released,149,https://qutip.org,https://github.com/qutip/qutip/pull/2383#issuecomment-2045143602,1,['release'],['released']
Deployability,"Hey,. I faced similar issues and it's due to Scipy. I am meaning to open an issue; about this but try. !pip install Scipy==1; !pip install qutip. Worked for me a three days back in June 1. On Tue, 4 Jun 2019 at 20:29, ziofil <notifications@github.com> wrote:. > Thank you, I will look into these alternatives.; >; > —; > You are receiving this because you were mentioned.; >; >; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1008?email_source=notifications&email_token=ABVFIBGYGBBTKN6I6OXBMALPYZ7MDA5CNFSM4HS37VM2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODW43FCA#issuecomment-498709128>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ABVFIBFLVMY6K5NEKCI7YKTPYZ7MDANCNFSM4HS37VMQ>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1008#issuecomment-498721125:108,install,install,108,https://qutip.org,https://github.com/qutip/qutip/issues/1008#issuecomment-498721125,2,['install'],['install']
Deployability,"Hi - I think I might have a solution for this issue in #1927. Setting up the utility was pretty straightforward, but I am not sure on how best to shape the process around using it. There are two issues that I foresee:; - Generating a news fragment when making a PR:; In order to reference PRs in the changelog, you have to pass the PR number to ; `towncrier create <PR number>.<change type>` ; So the process would be:; 1. Make draft PR; 2. Get PR number; 3. run towncrier create with PR number and commit & push resulting news fragment to PR; 4. Mark PR as ready. A way around this extra step is to reference the issue number, but you may not want that.; - When generating changelogs for releases, towncrier needs to be passed the version number in one of three ways (from the documentation):; - For Python 2/3 compatible projects, a __version__ in the top level package. This can be either a string literal, a tuple, or an [Incremental](https://github.com/hawkowl/incremental) version.; - Manually passing --version=<myversionhere> when interacting with towncrier.; - Defining a version option in a configuration file; Since there's no __version__ string or configuration file, I guess we would use the second option when calling `towncrier build`?. I'm not sure what the intended flow is for this and I didn't feel comfortable changing the release process, so perhaps someone can advise?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1894#issuecomment-1151912565:689,release,releases,689,https://qutip.org,https://github.com/qutip/qutip/issues/1894#issuecomment-1151912565,4,"['configurat', 'release']","['configuration', 'release', 'releases']"
Deployability,"Hi @ALasek . You are right, there is a bug in the error handling.; ```; File ""C:\Users\OlekAdmin\anaconda3\lib\site-packages\qutip\qip\circuit.py"", line 2114, in initialize; raise ValueError(""dimension of state is incorrect""); ```; This check is wrong. It assumes that the state is a qubits state. Our test didn't cover the `run` method with multi-level systems. Here are the ways around:; - If you know how to hack the package, you can simply find the file and delete this error handling (lines 2113 and 2114).; - If you don't know how to do that, you can also use; ```; gate_sequence_product(qc.propagators()); ```; to compute the unitary representation of the circuit first and then apply it to the input state. I'll make a bug fix soon. But the next release may still take a while. Using `QubitCirucuit` for qutrits and qudits should be fine, it is rarely used though. So there might be bugs that are uncovered by our test. If you encounter any further questions, feel free to ask!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1803#issuecomment-1039660650:754,release,release,754,https://qutip.org,https://github.com/qutip/qutip/issues/1803#issuecomment-1039660650,1,['release'],['release']
Deployability,"Hi @Ericgig , could you be a little more specific about what reworking the kwargs treatment would entail? Also if you could emphasize more concretely what you're looking for in updates to the notebooks and docs, that would be great. I do have some other observations.; 1. I do not get the KeyError message if I run the same jupyter notebook locally with the same versions of code as specified by version_table( ). I get another error instead, which actually seems more reasonable to me (something along the lines of 'use_precond' wasn't found in the keys of the dict, which clearly indicates that there's something off with the optional args thing).; 2. Also using mech_dms = np.asarray(mech_dms) fails, I think because it sees a Qobj instead of a real number.; 3. The direct patch to the KeyError mentioned above, based on my understanding of the code, would simply be to nest the assignment to 'max_iter_refine' in the 'info' dictionary inside a condition that checks if the solver is 'scipy'?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1017#issuecomment-539805676:177,update,updates,177,https://qutip.org,https://github.com/qutip/qutip/issues/1017#issuecomment-539805676,2,"['patch', 'update']","['patch', 'updates']"
Deployability,"Hi @Ericgig ,; I just re-installed things with pip, and now the tests are passing (and my original examples work as expected)!. For what it's worth, I found that using pip to install scipy and qutip worked and resolved the issues.; The original problem seems to be related to conda installing a version of openblas which is buggy (in particular 0.3.20), see the scipy issue linked above for more info on that. Version 0.3.18 seems to work fine. Thanks for the help.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965#issuecomment-1205764071:25,install,installed,25,https://qutip.org,https://github.com/qutip/qutip/issues/1965#issuecomment-1205764071,3,['install'],"['install', 'installed', 'installing']"
Deployability,"Hi @Ericgig ; Thanks for investigating this so thoroughly. ; I guess it makes sense that unpacking a dict at each call is inefficient, so I think we should drop this idea. As you have suggested previously, users can always use module variables if they wish to avoid passing vars in `args`. So I think we should aim to keep it simple. I think adding `f(t)` as a signature option will be sufficient for what @goerz wanted and would be sufficient for using a Numba jit. So, my suggestion for the next major release (v5) would be that we have only two call sigs:; - `f(t, args)` (default); - `f(t)`. For now we will have to have the three (although I don't think the `rhs_with_state` is not widely used, if at all).; - `f(t, args)` (default); - `f(t)`; - `f(t, state, args)`; The default needs to remain as it is, because it is widely used. I think it makes sense to use introspection to decide which has been specified by the user, as the sig is clearly distinguishable by the number of args. So effectively we can ignore the `rhs_with_state` option, but I think we should give a deprecation warning that the `f(t, state, args)` signature will be removed in the next version. So, I think this means we can keep the new method of passing the state in the args dict. I would suggest we make it a bit more simple though. I notice that the processing of the option is a bit involved. So I suggest that any element of the `args` dict where the key is of the form `name:special_value_kind` be considered some kind of special value. If `special_value_kind` is not recognised then it should throw a `ValueError`. For now we will have the `special_value_kind` of:; - `state`: Qobj of the state at time `t`, with the correct dimensions; - `state_vec`: ndarray of state as a vector; - `expect`: I can't remember exactly what you did here. The `state_vec` will clearly be much more efficient, as this is what the ODE solver maintains. However, for completeness I think we should have the `state` option. The initial ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1136#issuecomment-562523162:504,release,release,504,https://qutip.org,https://github.com/qutip/qutip/issues/1136#issuecomment-562523162,1,['release'],['release']
Deployability,"Hi @Ericgig and @hodgestar. As it's the first time I've contributed, I was curious what the process is to merge. Do you wait for a new release or is it merged to `main` as soon as the PR has been approved?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2416#issuecomment-2102739118:135,release,release,135,https://qutip.org,https://github.com/qutip/qutip/pull/2416#issuecomment-2102739118,1,['release'],['release']
Deployability,"Hi @Ericgig, @jakelishman,. Thanks very much for the very helpful replies! I will try these suggestions in my application Eric!. Jake, when you say the following:; > Oh of course, I had `mcsolve` in mind as to why that couldn't be done (and in that case, my interpolation wouldn't work either because of the separation of the decay channels)... Is it that, this:; ```; def L(t, args):; H = H(t, ...); c_op = C(H, t, ...); return qutip.liouvillian(H, [c_op]). mcsolve(L, ..., c_ops=[]); ```. won't work due to `_funcrhs` treating `h_func` as a Hamiltonian always? If this is the only factor (as far as I can see), then I think I can further hack this to make callbacks work for me locally. I'm not yet sure if the numpy arrays method will work here but this is what I will strive for. Some details of my plans: I am doing dynamics simulations of quantum annealing processes. We use a certain number of qubits (between 4 and 8) biased and coupled in certain ways to produce examples of 'difficult' problems for adiabatic quantum computation, where the instantaneous energy gaps can have very small minima during evolution. The resulting ODEs appear to be 'stiff' and long evolution times are required to observe high probabilities of being in the ground state. The combination of these things appears to make solving for long evolution times very time consuming. I observed a massive speedup using `mcsolve` however. What I wish to do is include various decay channels, which in the physical systems we use, we understand to be in the 'weak coupling limit' defined by T. Albash here:; https://arxiv.org/pdf/1503.08767.pdf. Another note: A number of colleagues have found most useful the RK45 method implemented in what I understand to be 'new' ode solver scipy code `scipy.integrate.solve_ivp`. I notice that the 'dopri5' option for `scipy.integrate.ode` is likely the same thing. This is something I will play with also.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1260#issuecomment-630067552:1771,integrat,integrate,1771,https://qutip.org,https://github.com/qutip/qutip/issues/1260#issuecomment-630067552,2,['integrat'],['integrate']
Deployability,"Hi @Ericgig, thanks for the update! when I was checking the status of the project I did not take a look at the PR. Indeed, with halve the deliverables already finished in the PR this proposal does not make much sense. I am closing this for now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2064#issuecomment-1412749534:28,update,update,28,https://qutip.org,https://github.com/qutip/qutip/pull/2064#issuecomment-1412749534,1,['update'],['update']
Deployability,"Hi @Phenix00 ,. I don't know if you already managed to do the pip install, but I got the same errors as you and sahmed95 mentioned before. In my case, as I run my programs on a cluster in a Linux environment, where I don't have admin rights (e.g. I cannot use sudo commands), I had to use the --user option. ; So ""pip install --user qutip"" worked for me when the mentioned requirements have been installed met.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/739#issuecomment-337538079:66,install,install,66,https://qutip.org,https://github.com/qutip/qutip/issues/739#issuecomment-337538079,3,['install'],"['install', 'installed']"
Deployability,"Hi @Phenix00, I could reproduce the issue and this looks like an issue of pip messing up the dependencies in the requirements for QuTiP. The workaround is to install numpy, cython and scipy manually before running pip install qutip. Please let me know if this works. Also, I am assuming the complete error message that you got was something like the error message below. Thank you for bringing this to notice.; ```; (qtest) air:qtest shahnawaz$ pip install qutip; Collecting qutip; Downloading qutip-4.1.0.tar.gz (1.9MB); 100% |████████████████████████████████| 1.9MB 523kB/s; Complete output from command python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/private/var/folders/yp/zkfwkv252nl6jtzqy2_tt88m0000gn/T/pip-build-7Mg7bn/qutip/setup.py"", line 54, in <module>; from Cython.Build import cythonize; ImportError: No module named Cython.Build. ----------------------------------------; Command ""python setup.py egg_info"" failed with error code 1 in /private/var/folders/yp/zkfwkv252nl6jtzqy2_tt88m0000gn/T/pip-build-7Mg7bn/qutip/; ```; @ajgpitch ; I am looking into why this is happening and how it can be resolved. Relevant issues - https://github.com/h5py/h5py/issues/535, https://github.com/bayespy/bayespy/issues/14, https://github.com/pypa/pip/issues/988",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/739#issuecomment-321727923:158,install,install,158,https://qutip.org,https://github.com/qutip/qutip/issues/739#issuecomment-321727923,3,['install'],['install']
Deployability,Hi @SilverYar . Did you install ImageMagick? This tutorial might be helpful: https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/quantum-gates.ipynb,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/702#issuecomment-695029550:24,install,install,24,https://qutip.org,https://github.com/qutip/qutip/issues/702#issuecomment-695029550,1,['install'],['install']
Deployability,"Hi @TakumiAizawa, yes in a future QuTiP release this will be fixed. If you need to use this right now, I would recommend downloading the code from GitHub and install from source code. http://qutip.org/docs/latest/installation.html#installing-from-source",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1244#issuecomment-623071030:40,release,release,40,https://qutip.org,https://github.com/qutip/qutip/issues/1244#issuecomment-623071030,4,"['install', 'release']","['install', 'installation', 'installing-from-source', 'release']"
Deployability,"Hi @TejasAvinashShetty, I had a try at the conda install on my machine. I had no issue:; ```; conda create -n qutip-env; conda activate qutip-env; (qutip-env): conda install cython numpy scipy nose matplotlib; (qutip-env): conda install qutip; (qutip-env): python; ""Python 3.7.3 (default, Mar 27 2019, 16:54:48); [Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin""; >>> from qutip import *; >>> qutip.about(); QuTiP Version: 4.3.1; Numpy Version: 1.16.3; Scipy Version: 1.2.1; Cython Version: 0.29.7; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/nathanshammah/miniconda3/envs/qutip-env/lib/python3.7/site-packages/qutip; >>> quit(); (qutip-env): conda deactivate; conda update -n qutip-env --all; ""Collecting package metadata: done; Solving environment: done; # All requested packages already installed.""; ```; Can you please specify your machine configuration and what did you do to update the environment?. I guess I am unable to reproduce the issue unless I go back to qutip 4.2. ; Googling ""np113py36_2"", I ended up on this QuTiP Google Group thread, https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo; maybe making sure you are not in the QuTiP folder resolves the issue. . You can also activate your environment, uninstall qutip, update all the rest and then install qutip ; ```; conda activate qutip-env ; (qutip-env): conda uninstall qutip; conda update -n qutip-env --all; conda activate qutip-env ; (qutip-env): conda install qutip; ```; Another practical suggestion, not really assessing the issue, would be to create a new environment and do a fresh install.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/988#issuecomment-489419006:49,install,install,49,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-489419006,14,"['Install', 'configurat', 'install', 'update']","['Installation', 'Installed', 'configuration', 'install', 'installed', 'update']"
Deployability,"Hi @ariels1234, here is a more detailed guide on how to install those additional packages https://qutip-qip.readthedocs.io/en/stable/installation.html#additional-software-for-plotting-circuits. (It is for the separate package qutip-qip, but the circuit plotting part is the same.). Do you have a valid version of pdflatex with packages like qcircuit and pdfcrop installed?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1888#issuecomment-1112172803:56,install,install,56,https://qutip.org,https://github.com/qutip/qutip/issues/1888#issuecomment-1112172803,3,['install'],"['install', 'installation', 'installed']"
Deployability,"Hi @christian512, thanks for the help! I've increased `nsteps` for that particular simulation and the integration runs fine without any errors. One caveat is I have not checked the correctness of the result. . On the other hand, as soon as I tried `mesolve` on a simple Larmor precession problem, `mesolve` started either (1) throwing the typical ODE integration error or (2) integrating but producing a manifestly incorrect result (the final state is not on the Bloch sphere). The code I am using is ; ```; from qutip import * ; import numpy as np. sz = sigmaz(). init_ket = 2 ** (-1/2) * Qobj([[1], [1]]) # Bloch vector is unit x; init_dm = init_ket * init_ket.dag(). b_0 = 1; gam = 1; h_zeem = gam * b_0 * sz; h = [h_zeem]. larmor_freq = gam * b_0 ; period = 2 * np.pi / (larmor_freq); t = np.linspace(0, period / 2, 100). print(mesolve(h, init_dm, t, options=Options(nsteps=1e6)).states[-1]); ```. Which produces ; ```; Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True; Qobj data =; [[ 0.5 +0.j -263.5988765-267.24047092j]; [ -2.1425229 +0.49907152j 0.5 +0.j ]]; ```; Edit: I have also tried playing around with `atol` and `rtol` without any success.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896#issuecomment-1140305503:102,integrat,integration,102,https://qutip.org,https://github.com/qutip/qutip/issues/1896#issuecomment-1140305503,3,['integrat'],"['integrating', 'integration']"
Deployability,"Hi @claretgrace0801, Any updates on this?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1870#issuecomment-1123545864:25,update,updates,25,https://qutip.org,https://github.com/qutip/qutip/pull/1870#issuecomment-1123545864,1,['update'],['updates']
Deployability,"Hi @dev-aditya, did you try running the code with QuTiP 5.0.0? It is currently in a pre release which means you need to install it with `pip install --pre qutip`. This new version introduces many changes and since it is a pre release there may be some rough edges still. The main reason you will see a performance improvement for this issue is the new data layer implementation. In a nutshell, it now supports not only sparse arrays, already present in QuTiP 4, but also dense arrays (numpy-like arrays). Dense arrays are better suited for this operation and hence you should expect an improvement using them. I hope you can give a try to QuTiP 5 and feel free to let us know how it performs :smile:.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/818#issuecomment-1665893251:88,release,release,88,https://qutip.org,https://github.com/qutip/qutip/issues/818#issuecomment-1665893251,4,"['install', 'release']","['install', 'release']"
Deployability,"Hi @dweigand, this looks interesting. It would you be nice to push this forward, adding some tests for this and integrating @Ericgig suggested changes. I am wondering whether there is a more intuitive (explicit) option than `qfunc_amat `. Something like a Boolean `precompute`?. Writing some documentation for this, in https://github.com/qutip/qutip-doc, would allow users to discover this option more easily at http://qutip.org/docs/latest/guide/guide-visualization.html#husimi-q-function, it's very nice you have some performance checks.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/934#issuecomment-536368295:112,integrat,integrating,112,https://qutip.org,https://github.com/qutip/qutip/pull/934#issuecomment-536368295,1,['integrat'],['integrating']
Deployability,"Hi @hodgestar, thank you for reviewing this.; After looking at it I think I can get it done for the next release. El lun, 13 dic 2021 a las 20:11, Simon Cross ***@***.***>); escribió:. > ***@***.**** requested changes on this pull request.; >; > @MrRobot2211 <https://github.com/MrRobot2211> I reviewed the code and it; > looks mostly good now. I've left a few suggestions and questions. Let me; > know if you have some time to finish this off before QuTiP 4.7 is released; > in a month-ish.; >; > @quantshah <https://github.com/quantshah> Could you do a review of the; > mathematics and general superoperator usage here? You're probably much more; > familiar with it than me.; > ------------------------------; >; > In qutip/superop_reps.py; > <https://github.com/qutip/qutip/pull/1491#discussion_r768187678>:; >; > > # Remember the shape of the underlying space,; >; > # as we'll need this to make Kraus operators later.; >; > - dL, dR = map(int, map(sqrt, q_oper.shape)); >; > + from math import ceil; >; >; > ⬇️ Suggested change; >; > - from math import ceil; >; >; > ceil is not used anywhere and we shouldn't import inside functions unless; > necessary -- I'm guessing this was left over from debugging?; > ------------------------------; >; > In qutip/superop_reps.py; > <https://github.com/qutip/qutip/pull/1491#discussion_r768188147>:; >; > > # Remember the shape of the underlying space,; >; > # as we'll need this to make Kraus operators later.; >; > - dL, dR = map(int, map(sqrt, q_oper.shape)); >; > + from math import ceil; >; > +; >; >; > ⬇️ Suggested change; >; > -; >; >; > Leaving this blank line here makes the comments above it confusing.; > ------------------------------; >; > In qutip/superop_reps.py; > <https://github.com/qutip/qutip/pull/1491#discussion_r768189423>:; >; > > # Find the SVD.; >; > U, S, V = svd(q_oper.full()); >; >; >; > # Truncate away the zero singular values, up to a threshold.; >; > - nonzero_idxs = S > thresh; >; > - dK = nonzero_idxs.sum(); >; > - U ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-994994001:105,release,release,105,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-994994001,2,['release'],"['release', 'released']"
Deployability,"Hi @jakelishman, given your expertise, it may be very useful if you could have a look at the `floquet` module. There are a lot of [issues](https://github.com/qutip/qutip/search?q=floquet&type=Issues) connected to it, and many users are really eager to see their solutions. This would be a milestone for QuTiP future releases, later in 2020. If interesting, there could even be projects that could be proposed as part of Google Summer of Code 2020.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/772#issuecomment-576154909:316,release,releases,316,https://qutip.org,https://github.com/qutip/qutip/issues/772#issuecomment-576154909,1,['release'],['releases']
Deployability,"Hi @jakelishman,; Thanks for the update and your detailed comments! No worries about the time, I follow the project so see everyone is busy on implementing the fundamentals for v5. I see two main points to consider:; 1) the code will need to be rewritten to make a more consistent use of the data layer with the rest of the project.; 2) the license issue. For 1, indeed, I was not so familiar with the intended use of the data layer and using a `Dispatcher` as these are all new capabilities (mostly this was collecting together some old `einsum` code I had and packaging it together to work with `Qobj`). If we think this type of thing will indeed be useful (I personally still do given the potential speed ups), I am happy to try to implement things in the way you mention when I get the time to go through this exercise (most likely will require your input also). If eventually we can converge on a design we can try to merge it into a later version than 5.0. For 2, yeah I totally understand all the points you mention. I will write to you about this issue. So overall I see this progressing as follows:; I can close this PR and will start a fresh branch implementing this in the intended manner. I expect this could take a while as I figure out how the `Dispatcher` etc. works, but also I will be doing this in my free time (I don't see this as a problem since you will release V5 without this and we can see about merging it in later). Thanks, and feel free to let me know if you have any problems with the above plan or any other questions.; Otherwise I can let you know when I have updates.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1405#issuecomment-864183224:33,update,update,33,https://qutip.org,https://github.com/qutip/qutip/pull/1405#issuecomment-864183224,3,"['release', 'update']","['release', 'update', 'updates']"
Deployability,"Hi @lklivingstone `superop` is indeed not an attribute, but you should be able to get the information necessary from the attribute `superrep`. The other two, `isconstant` and `num_elements` are attributes in the latest branch. We recently update the master branch with the new pre alpha version of qutip. I hope this helps!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2099#issuecomment-1450984573:239,update,update,239,https://qutip.org,https://github.com/qutip/qutip/issues/2099#issuecomment-1450984573,1,['update'],['update']
Deployability,"Hi @lzawbrito, I guess that choosing `nsteps=1e6` is a pretty big value and that it leads to problems in the ODE integration. However, again running on my system, I get a reasonable output even with these high `nsteps`: . ``` ; Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True; Qobj data =; [[0.5 +0.00000000e+00j 0.49999938-4.02511613e-06j]; [0.49999938+4.02511613e-06j 0.5 +0.00000000e+00j]]; ``` ; I guess that this is a problem with SciPy's integrator and your system. I don't have enough experience with QuTiP to give a more detailed analysis. Maybe someone else knows about this? @BoxiLi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896#issuecomment-1140428420:113,integrat,integration,113,https://qutip.org,https://github.com/qutip/qutip/issues/1896#issuecomment-1140428420,2,['integrat'],"['integration', 'integrator']"
Deployability,"Hi @michelinesoley,. Your bug report inspired me to dig into the `qutip.control.optimize_pulse` sparse matrix support which lead to some fixes in #1621. When you increase `N` in your example from 2 to 3, it changes the internal type used by the optimizer to represent propagators. You can also make the `N = 2` case fail by changing the last line to:. ```python; result = cpo.optimize_pulse_unitary(..., dyn_params=dict(oper_dtype=Qobj, sparse_eigen_decomp=True)); ```. Your example can be made to work for `N = 3` (albeit slowly) by changing the following lines:. ```python; mapped = Qobj(mapped, dims=[[N]*4 + [2]*4] * 2); ```; (which was a bug in the example itself -- it created a Qobj with the right shape but wrong dimensions) and the last line to . ```python; result = cpo.optimize_pulse_unitary(..., dyn_params=dict(oper_dtype=Qobj, sparse_eigen_decomp=False)); ```; For me the `N = 3` case was slower with `sparse_eigen_decomp=True`, but perhaps it will be better for your full problem. If you would like to try `sparse_eigen_decomp=True` you are welcome to try the patch in PR #1621 and I would appreciate feedback on any performance issues for larger systems. We are currently working to support bigger systems in QuTiP 5 by using the new flexible Qobj data layer (which supports both sparse and dense matrices already and will hopefully support GPU and TensorFlow matrices in the near future).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1617#issuecomment-885064386:1075,patch,patch,1075,https://qutip.org,https://github.com/qutip/qutip/issues/1617#issuecomment-885064386,1,['patch'],['patch']
Deployability,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348#issuecomment-263745214:123,install,installations,123,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214,20,"['Install', 'configurat', 'install', 'update']","['Install', 'Installing', 'configuration', 'install', 'installation', 'installations', 'installed', 'installing', 'update']"
Deployability,"Hi @nonhermitian,. I don't see any 4.2 release nor v4.2 tag, which commit should I test?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-317467358:39,release,release,39,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-317467358,1,['release'],['release']
Deployability,"Hi @saiyagami , your errors seem to be centered around OpenMP and parallelization stuff. It seems from the red underlined error that you do not have OpenMP installed, which shouldn't be the case since it is bundled with the Visual C/C++ compiler by default. I'd recommend you try the following, in this order:; 1. Try running the install again using the cloned repository's `setup.py` file, but this time run it as `python setup.py install --with-openmp`. Hopefully this configures things properly, and you don't see any more OpenMP related errors.; 2. If the above doesn't work, that suggests a more pathological error, in which case you probably should try using another compiler such as MinGW. Should you do so, please find more detailed instructions here : [https://stackoverflow.com/questions/11079586/getting-started-with-openmp-install-on-windows](url).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1079#issuecomment-539862401:156,install,installed,156,https://qutip.org,https://github.com/qutip/qutip/issues/1079#issuecomment-539862401,4,['install'],"['install', 'install-on-windows', 'installed']"
Deployability,"Hi @saiyagami, thanks. Are these still occurring with the 4.4.1 release?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-532255000:64,release,release,64,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-532255000,1,['release'],['release']
Deployability,"Hi @sbisw002, any update on this PR?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1066#issuecomment-566115376:18,update,update,18,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-566115376,1,['update'],['update']
Deployability,"Hi @theodotk, the 4.7.4 release is in progress.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2283#issuecomment-1898819054:24,release,release,24,https://qutip.org,https://github.com/qutip/qutip/pull/2283#issuecomment-1898819054,1,['release'],['release']
Deployability,"Hi Alex. Nice to see your PR!. It is looking very good indeed, but deeper integration with qutip's frameworks for representing of operators and its evolution solvers would be nice. I'll test it for a few days and code review with inline comments in the code. You can make changes and push commits to your repository, and they will be automatically added to PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/246#issuecomment-61043885:74,integrat,integration,74,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-61043885,1,['integrat'],['integration']
Deployability,"Hi All; I get the same error when attempting to run the qutip tutorial ; ""Bloch sphere with colorbar"". from the qutip tutorials with a virgin install of qutip from the conda-forge on Python 3.7.6 using the latest version of Anaconda..in a new environment. Whats up?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1196#issuecomment-599356968:142,install,install,142,https://qutip.org,https://github.com/qutip/qutip/issues/1196#issuecomment-599356968,1,['install'],['install']
Deployability,"Hi Arne. Thanks for the bug report. Yes, you're right, it is the change in default value of the average_states (used to be called mc_avg) that is the course of the failing tests. And it could break backwards compatibility so perhaps it should be reverted. However, if average_states defaults to True it breaks backwards compatibility with the stochastic master equation solvers (which did not use this flag before, and had a different default behavior). However, since the stochastic ME and SE solvers has not yet been an official part of the qutip API in a release, perhaps priority should be to keep the mcsolve backward compatible (although I think it makes more sense not to take an average over the trajectories by default).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/37#issuecomment-22224680:558,release,release,558,https://qutip.org,https://github.com/qutip/qutip/issues/37#issuecomment-22224680,1,['release'],['release']
Deployability,"Hi Bilal,. The conda-forge qutip package should install without VS-15. Most of qutip; functions should still work. This was certainly the intention when we; worked on it. I can't remember now though how well we tested without VS-15,; as the main focus was getting it to work with VS-15. The string type time-dependence needs a C++ compiler, so those functions; won't work. This means a lot of tests will fail. So, give it a go and let us know how you get on. Alex. On 26 February 2018 at 04:07, Bilal Riaz <notifications@github.com> wrote:. > Thanks for suggesting Linux subsystem, but it is not good enough to run; > simulations, it is slower for even day to day file manipulations, so from; > your comment and documentation you shared I come to conclusion that there; > is no alternative of VS to run Qutip in windows 10.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/826#issuecomment-368384720>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AIxX7ZQXPfD6q0cVTq1mY17St18hseO5ks5tYi4agaJpZM4SSlE1>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/826#issuecomment-368824556:48,install,install,48,https://qutip.org,https://github.com/qutip/qutip/issues/826#issuecomment-368824556,1,['install'],['install']
Deployability,"Hi Boxi,. Can you please modify the projects of the Wiki page as you deem best?; All: we can also think of changing the order of them. It may be that; project #3 is deemed the most important. Best wishes,. Nathan. Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com. On Sun, Feb 23, 2020 at 5:42 AM Boxi Li <notifications@github.com> wrote:. > I have some detail information for the GSoC 2020 project ""Error mitigation; > in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > Wiki page. I post it here so if anyone finds it nice could copy it to the; > Wiki page.; >; > I add some details based on the original description:; > ------------------------------; > 1. Error mitigation in QuTiP; >; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class Processor and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > qutip.qip.noise to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (qutip.qip.circuit). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Request",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:830,release,release,830,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313,1,['release'],['release']
Deployability,"Hi Emi,; There are a few options:; `krylovsolver` could exist independently of Qutip and be used as:; ```; import qutip; from krylovsolver import krylovsolve; ...; result = krylovsolve(H, psi, tlist, ...); ```. If you want it to be part of qutip itself, since it solve the same problem as `sesolve`, it could be inserted as an options to `sesolve` or be it's own function. It would be better to not have too many function doing the same thing, but since we don't have many alternative method in `sesolve` it could be overlooked. Seeing the state of `krylovsolve`, both would be quite easy to do. Do you have benchmarks to compare it to `sesolve`? From what I understand, `krylovsolve` is a faster `sesolve` limited to constant Hamiltonian. So it would be interesting to see how fast it is. If we add `krylovsolve` to qutip, would you be able to maintain it? A new major version of qutip is in development and it will need to be updated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1668#issuecomment-925327795:928,update,updated,928,https://qutip.org,https://github.com/qutip/qutip/issues/1668#issuecomment-925327795,1,['update'],['updated']
Deployability,"Hi Eric,; I've created a draft PR request for the changes. I did try to generate documentation according to the steps mentioned in the wiki but am faced with the following error:; ```; make html; sphinx-build -b html -d _build/doctrees . _build/html; Running Sphinx v3.5.4. Configuration error:; There is a programmable error in your configuration file:. Traceback (most recent call last):; File ""__init__.pxd"", line 942, in numpy.import_array; RuntimeError: module compiled against API version 0x10 but this version of numpy is 0xf . Check the section C-API incompatibility at the Troubleshooting ImportError section at https://numpy.org/devdocs/user/troubleshooting-importerror.html#c-api-incompatibility for indications on how to solve this problem . During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/home/User/miniconda3/envs/qutip-doc/lib/python3.8/site-packages/sphinx/config.py"", line 327, in eval_config_file; execfile_(filename, namespace); File ""/home/User/miniconda3/envs/qutip-doc/lib/python3.8/site-packages/sphinx/util/pycompat.py"", line 88, in execfile_; exec(code, _globals); File ""/home/User/Projects/QuantumStuff/qutip/doc/conf.py"", line 95, in <module>; _check_source_folder_and_imported_qutip_match(); File ""/home/User/Projects/QuantumStuff/qutip/doc/conf.py"", line 80, in _check_source_folder_and_imported_qutip_match; import qutip; File ""/home/User/Projects/QuantumStuff/qutip/qutip/__init__.py"", line 34, in <module>; from .core import *; File ""/home/User/Projects/QuantumStuff/qutip/qutip/core/__init__.py"", line 2, in <module>; from .coefficient import *; File ""/home/User/Projects/QuantumStuff/qutip/qutip/core/coefficient.py"", line 24, in <module>; from .data import Data; File ""/home/User/Projects/QuantumStuff/qutip/qutip/core/data/__init__.py"", line 3, in <module>; from . import dense, csr; File ""qutip/core/data/dense.pyx"", line 1, in init qutip.core.data.dense; File ""qutip/core/data/csr.pyx"", line 1, in i",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2098#issuecomment-1462271488:274,Configurat,Configuration,274,https://qutip.org,https://github.com/qutip/qutip/issues/2098#issuecomment-1462271488,2,"['Configurat', 'configurat']","['Configuration', 'configuration']"
Deployability,"Hi Ericgig,. Thanks for your response!. I installed the qutip manually with master branch. And yes, I used the qutip.testing.run() to test if the installation and functions are ready. I re-run the testing and the error happened on the ""**Monte-carlo: Collapse terms constant (func format)**"". Attached file is the error output with context. [issue1039.txt](https://github.com/qutip/qutip/files/3373987/issue1039.txt). Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-509716876:42,install,installed,42,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-509716876,2,['install'],"['installation', 'installed']"
Deployability,"Hi Kevin. Thanks for your efforts on this. However, I am not in favor of merging this PR in this form. It is way too intrusive on the old API, it would break backwarks compatibility for no good reason as I see it. Personally I don't think that the _2t and _1t names are that confusing. As you point out, _1t is still a two-time correlation function (a one-time correlation function would not be a correlation function, just a simple expectation value), but the _1t and _2t is intended to refer to the number of free time variables. Perhaps this should be explained more clearly in the docstrings, but I don't think it is worth changing the API for this reason. I would prefer if you added the new mc solvers using the current API conventions, and preferably without changing the me and es based solvers. If you want to propose a new API the correct way to do it would be:; 1. First discuss the idea, so that everyone interested could weight in on the naming of the functions, the style of parameters and arguments etc.; 2. Implement the new API without disrupting the previous API; 3. Deprecate the previous API, so that using it gives a warning (but still works!). ; 4. Then finally after a few release cycles we may drop the old API. This would not happen until qutip 4.0 (see http://semver.org/), which we do not plan to release anytime soon. Therefore, we cannot accept any PRs that with backwarks breaking API changes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/218#issuecomment-53827562:1196,release,release,1196,https://qutip.org,https://github.com/qutip/qutip/pull/218#issuecomment-53827562,2,['release'],['release']
Deployability,"Hi Nathan,. I can't modify the Wiki page because I'm not a maintainer of QuTiP. And it seems that there is no way to make a PR to Wiki. I can also send you the markdown source code per email like this, but I’m not sure if it works as I expected. The following is the markdown source code:. -----------------------------------; ## 1. Error mitigation in QuTiP; From the QuTiP 4.5 release, the qutip.qip module now contains the noisy quantum circuit simulator (which was a GSoC project) providing enhanced features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940:379,release,release,379,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940,1,['release'],['release']
Deployability,"Hi Robert!. An even more Python-friendly alternative would be to allow `pip` installing it (i.e. adding to https://pypi.python.org/pypi/pip). As `homebrew` is for _everything_ on Mac,; while `pip` is for Python stuff (and is system-independent). (However, I have no experience it writing installs for any of them.). On 31 Oct 2013, at 15:15, Robert Johansson notifications@github.com wrote:. > Hi Piotr. Yes sure, sounds like a good idea, I'm looking into it.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/62#issuecomment-27490347:77,install,installing,77,https://qutip.org,https://github.com/qutip/qutip/issues/62#issuecomment-27490347,2,['install'],"['installing', 'installs']"
Deployability,"Hi Robert. Yes, I saw that, but still annoying - I could have saved an hour this morning if I had updated beforehand :)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/74#issuecomment-35886105:98,update,updated,98,https://qutip.org,https://github.com/qutip/qutip/issues/74#issuecomment-35886105,1,['update'],['updated']
Deployability,"Hi Vutshi. Thanks a lot for this contribution! It's looking very interesting indeed. I'll be looking into the details of your code, notebook and your paper in the coming days, but from a first look it's looking great! I've been working a lot on the stochastic solvers the last few months, but it is still very much under development. The milstein method has been on my todo list for a long time, but I've not gotten around to work on it yet, so your contribution is very timely and most welcome!. I have tried to design the API in the most general way I could think of while still keeping the complexity from growing too much. Defining an SME with its RHS function, D1 and D2 functions has worked for most problems I considered so far, but I'd be happy to discuss further if this could be changed to something more flexible, like a function for calculating rho_{n+1} like you suggest. We hope to have the stochastic solver API ready and mature enough to include in the next qutip release sometime this fall, so it would be good to have these things tested and thoroughly discussed before then. But until the stochastic module is officially in the QuTiP API we still have a lot of freedom to shake things up if necessary. Also, to keep complexity and code duplication down I wanted to follow the pattern. smesolve (choose solver by argument) -> smesolve_generic -> specific method and SDE by rhs, d1, d2 selection. So it would be good if smesolve_mil and smesolve_impl in your code could be combined with smesolve, and if smesolve_implicit and smesolve_milstein could be combined with smesolve_generic, etc. That would reduce a lot of code duplication I think. Of course, if smesolve_generic needs to be changed to accommodate this that would be totally fine with me. It would be great if you could do a pull request of this to the qutip master, then we could discuss details in the PR. You'd need to rebase your branch to the current master tip though, because things already changed a bit since the v",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/35#issuecomment-22011953:980,release,release,980,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22011953,1,['release'],['release']
Deployability,"Hi albertomercurio, ; Thank you for the contribution. We will need at least one automated test: a function in `qutip/tests/test_correlation.py` that call `steadystate_floquet` and would fail if something is wrong. For example, in the next major version of qutip, `Qobj.data.tocsc()` will fail. We want it to be caught when running the tests in `qutip/tests` instead of having to remember to update it. It could be simply to running your manual test and instead of plotting the result, checking it with `numpy.testing.assert_allclose`. Ideally it should be done twice, once for `sparse=True` and once for `sparse=False`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1660#issuecomment-917454056:391,update,update,391,https://qutip.org,https://github.com/qutip/qutip/pull/1660#issuecomment-917454056,1,['update'],['update']
Deployability,"Hi all, updated everything, added more tests and updated the notebooks too in the [notebook repository](https://github.com/qutip/qutip-notebooks/pull/52/commits/9fe1a6cafd5a4c8c2ac8b357db98c9483af818bd)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/753#issuecomment-370400958:8,update,updated,8,https://qutip.org,https://github.com/qutip/qutip/pull/753#issuecomment-370400958,2,['update'],['updated']
Deployability,"Hi both, `dev.major` is currently quite a few commits behind `master`, particularly with regard to dev ops tooling - as you guys are spotting here - though I did bring some of the testing and setup tools up-to-speed last week. The reason we haven't added `-Werror` to the pytest runs on `dev.major` yet is because we haven't fixed all the warnings that are emitted in various parts of the code. We had hoped to do this before starting new projects on it, but I guess that didn't work out in the end. We still want to get it done in the next couple of weeks; the plan is to get #1481 merged, then merge `master` into `dev.major`. We don't want your projects to be blocked, so we can merge this PR in, though we intend to remove this entire file (and all the logistics that go with it) before the 5.0 release. Our original plan for managing the 4.x and development 5.x branches simultaneously started to fray at the edges once we started getting a much larger uptick in contributions; when it was mostly just me and Eric working on the code, it was easy to manage, but now there's lots of us, it's a bit harder (though a good problem to have!).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1582#issuecomment-864939384:799,release,release,799,https://qutip.org,https://github.com/qutip/qutip/pull/1582#issuecomment-864939384,1,['release'],['release']
Deployability,"Hi everyone and thank you all for the helpful advices.; I started testing OpenMP on v4. Some news from my side:; - I installed Qutip with OpenMP on Marconi100 and Galileo100 ; - I chose the spin-chain.ipynb example in https://github.com/qutip/qutip-notebooks/ for testing; - I passed options to `mesolve` in this way (varying n1, n2 and also the number of spins N): ; ```; opts=Options(num_cpus=n1 openmp_threads=n2, use_openmp=True); result = mesolve(H, psi0, tlist, c_op_list, sz_list, options=opts); ```; Unfortunately I didn't get any improvement. Do you have any ideas about it? Am I using OpenMP wrong or is the example chosen not adequate? Can you point me a snippet of code that you are sure works with OpenMP? ; Thank you so much!!!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1671#issuecomment-946521985:117,install,installed,117,https://qutip.org,https://github.com/qutip/qutip/issues/1671#issuecomment-946521985,1,['install'],['installed']
Deployability,"Hi goerz,; Qobj are build on top of scipy's sparse matrix are were affected by this behaviour that appeared in scipy 1.3.0. We have some similar workarround in the code right now. ; I raised an issue in scipy for it and is was taged as a defect. (#10206) So it should be solved in the next release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1063#issuecomment-518022521:290,release,release,290,https://qutip.org,https://github.com/qutip/qutip/issues/1063#issuecomment-518022521,1,['release'],['release']
Deployability,"Hi taw181,. Thank you for reporting the bug.; The patch will probably take some time to make and publish. ; A work around for now would be to use string based coefficient. Use `(t)` instead of t in the string, there is another bug in the string shifting code. -------------------------------------------------------------------------------------------; Self notes. The function _transform_L_t_shift of correlation.py has at least 2 bugs:; - lambda have side-effect when defined in loop:; ```; H = [0,1,2]; H_shift = []; for i in range(len(H)):; fn = lambda _: H[i]; H_shift.append(fn); ; for f in H_shift:; print(f(0)); ```; Using class is safer and can be used safely in parallel. - The shift is not applied properly to string when ""t"" is the first or last character of the string coefficient. Could/should this shift capacity be made part of QobjEvo?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1048#issuecomment-515517733:50,patch,patch,50,https://qutip.org,https://github.com/qutip/qutip/issues/1048#issuecomment-515517733,1,['patch'],['patch']
Deployability,"Hi thanks for opening the issue. This seems to be related to installing on windows. Could you also please mention the conda, qutip and Visual Studio version. . Please try updating your Visual Studio and conda and reinstall qutip with conda.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/854#issuecomment-382593451:61,install,installing,61,https://qutip.org,https://github.com/qutip/qutip/issues/854#issuecomment-382593451,1,['install'],['installing']
Deployability,"Hi the `steadystate` has some problem with optional keyword and scipy/mkl solver.; To have the notebook work, if you have mkl installed, you can change the cell calling `steadystate` to:; ```; solvers = ['direct','eigen','power','iterative-gmres','iterative-bicgstab']; mech_dms = []. for ss in solvers:; if ss in ['iterative-gmres','iterative-bicgstab']:; rho_ss, info = steadystate(H, c_ops, method=ss, use_precond=True, ; use_rcm=True, tol=1e-15, return_info=True); else:; rho_ss, info = steadystate(H, c_ops, method=ss,; use_rcm=False, return_info=True); print(ss,'solution time =',info['solution_time']); rho_mech = ptrace(rho_ss, 1); mech_dms.append(rho_mech); mech_dms = np.asarray(mech_dms); ```; Without mkl installed, skip the 'direct' method. Help Wanted: Some rework of the keywords_args treatment, testing solver/method mixes ('direct' + 'scipy' should work but don't) updating notebooks and docstring, etc. would be appreciated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1017#issuecomment-501454602:126,install,installed,126,https://qutip.org,https://github.com/qutip/qutip/issues/1017#issuecomment-501454602,2,['install'],['installed']
Deployability,Hi! I tried running `conda install nomkl qutip` and then ran the test. I can confirm it solved the issue. I doubt it is a good permanent solution though. Would you recommend reverting back to MKL and upgrading numpy to 1.22?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750#issuecomment-1005729943:27,install,install,27,https://qutip.org,https://github.com/qutip/qutip/issues/1750#issuecomment-1005729943,1,['install'],['install']
Deployability,Hi! Thanks for spotting this error and sending a fix! The patch looks good so I'm merging.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/27#issuecomment-19307072:58,patch,patch,58,https://qutip.org,https://github.com/qutip/qutip/pull/27#issuecomment-19307072,1,['patch'],['patch']
Deployability,"Hi, . Here's the output I get. While I've installed the BLAS libraries on my machine, I haven't 'connected' it with numpy, so maybe this is what's leading to the issue?. ```; >>> import numpy as np; >>> config = np.__config__; >>> config.show(); openblas_lapack_info:; NOT AVAILABLE; atlas_3_10_blas_info:; NOT AVAILABLE; atlas_info:; NOT AVAILABLE; atlas_blas_info:; NOT AVAILABLE; openblas_info:; NOT AVAILABLE; atlas_3_10_threads_info:; NOT AVAILABLE; blas_opt_info:; extra_link_args = ['-Wl,-framework', '-Wl,Accelerate']; define_macros = [('NO_ATLAS_INFO', 3), ('HAVE_CBLAS', None)]; extra_compile_args = ['-msse3', '-I/System/Library/Frameworks/vecLib.framework/Headers']; lapack_opt_info:; extra_link_args = ['-Wl,-framework', '-Wl,Accelerate']; define_macros = [('NO_ATLAS_INFO', 3), ('HAVE_CBLAS', None)]; extra_compile_args = ['-msse3']; atlas_3_10_info:; NOT AVAILABLE; blas_mkl_info:; NOT AVAILABLE; atlas_blas_threads_info:; NOT AVAILABLE; atlas_threads_info:; NOT AVAILABLE; lapack_mkl_info:; NOT AVAILABLE; atlas_3_10_blas_threads_info:; NOT AVAILABLE; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/552#issuecomment-259646175:42,install,installed,42,https://qutip.org,https://github.com/qutip/qutip/issues/552#issuecomment-259646175,1,['install'],['installed']
Deployability,"Hi, I also have the problem on both windows 64 bit 7 and 10, with with miniconda 64 bits 2019.07 and qutip 4.4, after following exactly the official install reciepe from http://qutip.org/docs/latest/installation.html; And replacing the last MKL by MKL2018 does not fix the problem for me.; Any more robust solution?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975#issuecomment-534742208:149,install,install,149,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-534742208,2,['install'],"['install', 'installation']"
Deployability,"Hi, I am facing the same problem (Installion of qutip 4.2 with conda, python 3.6). What do you mean by disabeling the sse2 extensions?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-365591772:34,Install,Installion,34,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-365591772,1,['Install'],['Installion']
Deployability,"Hi, I got the same error but I could successfully install qutip after upgrading Scipy because the previous version of Scipy seems not to have a specific Cython package for building qutip. . It's on Mac but try this:. pip3 install scipy --upgrade; pip3 install qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/739#issuecomment-343758428:50,install,install,50,https://qutip.org,https://github.com/qutip/qutip/issues/739#issuecomment-343758428,4,"['install', 'upgrade']","['install', 'upgrade']"
Deployability,"Hi, I have updated my code according to your suggestion. Pleas review the new code to see if there are still other problems. :)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/282#issuecomment-67575660:11,update,updated,11,https://qutip.org,https://github.com/qutip/qutip/pull/282#issuecomment-67575660,1,['update'],['updated']
Deployability,"Hi, I have updated the interface to make it much much easier to use. And, I added the unit test and now the test will succeed. The test is the following: generate random Hamiltonians and run perturbation and see whether the energy levels match with the exact solutions. I have done all I want to do up to now. So, please review these codes again and consider merging them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/282#issuecomment-109847098:11,update,updated,11,https://qutip.org,https://github.com/qutip/qutip/pull/282#issuecomment-109847098,1,['update'],['updated']
Deployability,"Hi, I think it might either be an issue with your conda version or a conflict due to mixing things from the conda-forge and the default conda channel. . There are two options which you can try:. 1. Update all packages and conda by running. ```; conda update --all; ```; and then trying to reinstall qutip from the default conda repo (and not conda-forge) with. ```; conda install qutip; ```. 2. Add the conda-forge channel as priority with . ```; conda config --add channels conda-forge; ```; and then update all with; ```; conda update --all; ```; and finally installing qutip with. ```; conda install -c conda-forge qutip; ```. The last option would be to uninstall conda, install the latest Miniconda which does not install any package by default and then installing qutip from the conda-forge version with; ```; conda install -c conda-forge qutip; ```. All three suggestions should just take a couple of minutes. If you could tell me the Anaconda version, it would be very helpful (```conda --version```)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/860#issuecomment-387719222:198,Update,Update,198,https://qutip.org,https://github.com/qutip/qutip/issues/860#issuecomment-387719222,11,"['Update', 'install', 'update']","['Update', 'install', 'installing', 'update']"
Deployability,"Hi, I was facing the same issue but it was resolved after I installed some of the additional LaTeX packages. The issue could be that your LaTeX file is not getting compiled as you may be missing some required packages : pdflatex, pdfcrop, pdf2svg, imagemagick (convert). Also you may be missing. \usepackage{xy}; \xyoption{matrix}; \xyoption{frame}; \xyoption{arrow}; \xyoption{arc}; \usepackage{ifpdf}. Let me help you resolve this step by step. Could you try to see what is the result of the following snippet which tries to generate the LaTeX file and display the Image. ```; %matplotlib inline; from qutip import *; from qutip.qip.circuit_latex import _latex_compile; N = 3; qc = QubitCircuit(N). qc.add_gate(""CNOT"", targets=[0], controls=[2]). latex_code = qc.latex_code(); print(latex_code). compiled_latex = _latex_compile(latex_code); print(compiled_latex). from IPython.display import Image; Image(compiled_latex, embed=True); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/702#issuecomment-307548166:60,install,installed,60,https://qutip.org,https://github.com/qutip/qutip/issues/702#issuecomment-307548166,1,['install'],['installed']
Deployability,"Hi, This is not ready for review so I added a new tag `WIP`. The tests etc are not proper and I just wanted to get a basic version out. The latest commits are @nwlambert's code to construct the Liouvillian for the Heom. I will start refactoring things now and update the tag to `review in progress` when this is ready.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/962#issuecomment-472547191:260,update,update,260,https://qutip.org,https://github.com/qutip/qutip/pull/962#issuecomment-472547191,1,['update'],['update']
Deployability,"Hi, are you sure you are not in the QuTiP folder when you start your Python; interpreter? Please provide some information as to how you installed QuTiP.; Which Python version are you using?. You can just type the command. >> which python. To find out the Python you are using. I would suggest the best way to run; QuTiP is using the conda installation. On Sun, 29 Nov 2020 at 20:42, ZahraQI <notifications@github.com> wrote:. > After installing qutip, in order to test qutip installation, I type; > ""python"" in terminal and then type ""import qutip.testing as qt"", getteing; > to the following error.; >; > import qutip.testing as qt; > Traceback (most recent call last):; > File """", line 1, in; > ModuleNotFoundError: No module named 'qutip'; >; > qt.run(); > Traceback (most recent call last):; > File """", line 1, in; > NameError: name 'qt' is not defined; >; > If anyone can help to solve the problem?; > Thanks; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1391>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABVFIBB6E4CM7HU3CY2NT6LSSKP3PANCNFSM4UGXA6UA>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1391#issuecomment-735447201:136,install,installed,136,https://qutip.org,https://github.com/qutip/qutip/issues/1391#issuecomment-735447201,4,['install'],"['installation', 'installed', 'installing']"
Deployability,"Hi, could you please tell us how you installed QuTiP and which python are you using? Just type the following in the terminal. ```; which python; ```. To check how QuTiP was installed (if on Linux or Mac):. ```; pip freeze | grep ""qutip""; ```. If on windows, download Anaconda and install QuTiP from conda-forge with. ```; conda install -c conda-forge qutip; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387393174:37,install,installed,37,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387393174,4,['install'],"['install', 'installed']"
Deployability,"Hi, could you try with python 3.5+ ? It is [recommended](http://qutip.org/docs/4.1/installation.html). Also, if you have the package manager conda ([Miniconda](https://conda.io/miniconda.html)). Installing QuTiP 4.2 is as easy as `conda install -c conda-forge qutip=4.2`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-317622000:83,install,installation,83,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-317622000,3,"['Install', 'install']","['Installing', 'install', 'installation']"
Deployability,"Hi, if you look at the conda instructions for VS, you will find some alternatives ; https://conda.io/docs/user-guide/tutorials/build-windows.html. There is a VS community edition which might be smaller. . Alternatively, on Windows 10, you can install a Linux subsystem (supported officially by Windows) and then I am hoping that you don't need to deal with a complete VS installation. Please find the instructions to get a native Linux subsystem in Windows 10 below:; https://docs.microsoft.com/en-us/windows/wsl/install-win10. Let me know if you need any help or encounter issues.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/826#issuecomment-368383471:243,install,install,243,https://qutip.org,https://github.com/qutip/qutip/issues/826#issuecomment-368383471,3,['install'],"['install', 'install-', 'installation']"
Deployability,"Hi, matplotlib is an optional dependency and there is a warning on import.; You should install them separately. On Thu, Jun 7, 2018, 2:47 PM Tejas Shetty <notifications@github.com> wrote:. > Doesn't install matplotlib when installing on windows.; > And then produces errors; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/878>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGpUBD8arMQpOQc40gQMwSImZ3fq6Cm7ks5t6L57gaJpZM4Udxhh>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/878#issuecomment-395303939:87,install,install,87,https://qutip.org,https://github.com/qutip/qutip/issues/878#issuecomment-395303939,3,['install'],"['install', 'installing']"
Deployability,"Hi, thank you for opening an issue. Unfortunately, I have not being able to reproduce it. Here is my `qutip.about()` output:; ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.0.dev0+5c73300; Numpy Version: 1.21.2; Scipy Version: 1.7.1; Cython Version: 0.29.23; Matplotlib Version: 3.3.4; Python Version: 3.9.5; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/kaladin/Documents/git/qutip/qutip4/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```. Regarding to the tests being slow, I usually run only the test file related to the changes I do. For example, to run tests for qobj it suffices to use `pytest qutip/tests/test_qobj.py` from the command line. I then leave the CI do its job and run all the tests once I submit a pull request. I guess it is desirable to improve the speed of some tests, I do not think is a priority though. Also, it only took me 6 minutes in my local computer (i7-6700 and 16GB RAM)to run all the tests using your script. I wonder if there is something else going wrong. Hope this helps!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1711#issuecomment-973002325:880,Install,Installed,880,https://qutip.org,https://github.com/qutip/qutip/issues/1711#issuecomment-973002325,2,['Install'],"['Installation', 'Installed']"
Deployability,"Hi, thank you for replying!. I have downloaded everything necessary as written there and also tried to change the policy.xml file of ImageMagick, but it would not help, and I still get the same error:; FileNotFoundError: [Errno 2] No such file or directory: 'qcirc.png'. I have a valid version of pdflatex with the packages qcircuit and pdfcrop installed. I verified it through MikTex.; After running, I obtained the latex file and the pdf file, but it is not converted to png file for some reason. Thanks,; Ariel",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1888#issuecomment-1112205108:345,install,installed,345,https://qutip.org,https://github.com/qutip/qutip/issues/1888#issuecomment-1112205108,1,['install'],['installed']
Deployability,"Hi, thank you very much for the quick responses and linking the other issues. . > But your making sparse matrices dense. Yes, I agree. But I was trying to just work out a simple problem which looks like. `dp[n]/dt = spre(Q)*p[n-1] + spost(Q)*p[n+1]. where p is a list of flattened density matrices. I understand that a better version of this would be to completely flatten p and write the RHS as a large `L` as Alex points out and then use `cy_ode_rhs`. But here is the issue, in the HEOM case, building `L` runs out of memory if we consider a large size for the set of auxiliary density matrices `p`. As such, I cannot completely build the `L` for the cases I am looking into. The approach that I was trying to take was to keep building the p's as we integrate. In this case, each RHS computation is a small dense matrix-vector computation and I can choose to keep or discard it depending on the max value of its elements. This gives the flexibility to truncate how many auxiliary density matrices I keep. The motivation is that in some papers on the Heom method, there is a dynamic filtering of the auxiliary matrices and it has been shown that with just a few 100s of auxiliary matrices, you can get a reasonable result. But the way we have the code in QuTiP now pre-computes the `L` and gets stuck due to memory limitations. @agpitch Thanks for the suggestions. I am trying to make the HEOM work without building the `L`. Perhaps I will still run into memory issues if I try to initialize the full set of `p` but if the dynamic filtering approach works out, then I can escape the memory problem by only building a few of the `p`'s and deciding to append them or not based on some conditions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/831#issuecomment-368980965:752,integrat,integrate,752,https://qutip.org,https://github.com/qutip/qutip/issues/831#issuecomment-368980965,1,['integrat'],['integrate']
Deployability,"Hi, thanks for fixing this issue. ; However, its release seems to be stalled because of other incomplete features in v4.7.3.; Is there something I can to fix this issue for myself locally, while we wait for v4.7.3 to be released publicly?. Thanks,; Harsh.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2251#issuecomment-1955525255:49,release,release,49,https://qutip.org,https://github.com/qutip/qutip/pull/2251#issuecomment-1955525255,2,['release'],"['release', 'released']"
Deployability,"Hi, thanks for the feedback. I will try to update it taking these comments into account. The names of the gates in the table are the same that appear in https://github.com/qutip/qutip/blob/master/qutip/core/gates.py, I can put them in lowercase to exactly match the functions in the code. I also see that the module ""qutip.core.gates"" is missing in [ https://qutip.readthedocs.io/en/master/_modules/index.html](url) so I will also added there.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2441#issuecomment-2142731183:43,update,update,43,https://qutip.org,https://github.com/qutip/qutip/pull/2441#issuecomment-2142731183,1,['update'],['update']
Deployability,"Hi, thanks for the reply! My solution is never use spyder again, just use jupyter... and it works fine for me. :-); The following is what I get after running qutip.about():; QuTiP: Quantum Toolbox in Python. Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, and Boxi Li; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.2; Numpy Version: 1.19.1; Scipy Version: 1.2.0; Cython Version: 0.29.12; Matplotlib Version: 3.1.0; Python Version: 3.7.3; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: True; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: D:\python1\lib\site-packages\qutip. Please cite QuTiP in your publication. For your convenience a bibtex reference can be easily generated using `qutip.cite()`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1343#issuecomment-688294599:802,Install,Installed,802,https://qutip.org,https://github.com/qutip/qutip/issues/1343#issuecomment-688294599,2,['Install'],"['Installation', 'Installed']"
Deployability,"Hi, the failure is gone, though the error is still there. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. ---. Ran 221 tests in 269.779s. FAILED (SKIP=1, errors=1). I removed my installation with apt-get remove python-qutip before installing the development version.; Cheers; Clemens",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42922665:482,install,installation,482,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42922665,2,['install'],"['installation', 'installing']"
Deployability,"Hi, the first part for this is ready for review. A typical use case would be to generate the matrix M.; @nathanshammah I made some small changes in the names of functions.; @ajgpitch Please suggest any changes if necessary for pep8, function naming, testing or the API in general. We have the examples and ipynb notebooks that @nathanshammah wrote. Where do they go ? . Once, this is merged, there are additional helper functions to calculate operator expectations, thermal states etc which can be added. However, this forms the core of the module.; ```; from qutip.pim.dicke import *; import numpy as np; from scipy.integrate import odeint. # system parameters. N = 10; gS, gL, gD, gP, gCP = .1, .1, .1, .1, .1. # define the model; model = Pim(N, emission=gS, loss=gL, dephasing=gD, pumping=gP, collective_pumping=gCP). M = model.generate_M(). # Evolve the system according to dp/dt = M.p. rho0 = initial_dicke_state(N, (5, 5)); t = np.linspace(0, 10, 100). def generate_rhs(rho, M):; return M.dot(rho). p = odeint(generate_rhs, rho0, t, args=(M,)); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/753#issuecomment-332110217:617,integrat,integrate,617,https://qutip.org,https://github.com/qutip/qutip/pull/753#issuecomment-332110217,1,['integrat'],['integrate']
Deployability,"Hi, you are absolutely correct that this is not a good place ""intro to pytest"". Comments on what is tested would be most helpful. I see your point. If some files need to be updated all the time then you are probably right. I'm also no maintainer of QuTiP so merging is beyond my ability :) But I'm sure there is no hurry in this. I'm also using my spare time browsing around here.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-591687380:173,update,updated,173,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591687380,1,['update'],['updated']
Deployability,"Hi,. Yes, I know, that's why I added the md file. I updated it now, thanks,; adding more info on general resources to learn about QuTiP and more; references to the #3 project, i.e. your blog and the talk.; https://github.com/qutip/qutip/wiki/Google-Summer-of-Code-2020. Neill, Alex, if you have a lead, please add a HEOM project. Bests,. Nathan. Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com. On Tue, Feb 25, 2020 at 5:10 PM Boxi Li <notifications@github.com> wrote:. > Hi Nathan,; >; > I can't modify the Wiki page because I'm not a maintainer of QuTiP. And it; > seems that there is no way to make a PR to Wiki. I can also send you the; > markdown source code per email like this, but I’m not sure if it works as I; > expected.; >; > The following is the markdown source code:; >; > -----------------------------------; > ## 1. Error mitigation in QuTiP; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class `Processor` and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > `qutip.qip.noise` to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (`qutip.qip.circuit`). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > ht",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:52,update,updated,52,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553,2,"['release', 'update']","['release', 'updated']"
Deployability,"Hi,; I had a similar issue recently. See; https://stackoverflow.com/questions/11912878/gcc-error-gcc-error-trying-to-exec-cc1-execvp-no-such-file-or-directory. The second suggestion. sudo apt-get update; sudo apt-get install --reinstall build-essential. worked for me. Best of luck with it. Alex. On Thu, 13 Jun 2019 at 09:32, PZJuly <notifications@github.com> wrote:. > Dear all,; >; > I'm trying to install the latest release of QuTip on Ubuntu system. Since; > our workstation hasn't been connected to internet, I; > downloaded Anaconda3-2019.03-Linux-x86_64 and qutip-4.3.1.tar, and attempt; > to install from source code.; >; > Firstly I successfully installed Anaconda with the command:; > bash ~/Downloads/Anaconda3-2019.03-Linux-x86_64.sh; >; > Then in the conda environment I typed the command:; > python setup.py install; >; > I get the following error message:; >; > gcc -pthread -B /home/pz/anaconda3/compiler_compat -Wl,--sysroot=/; > -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -Iqutip/cy; > -I/home/pz/anaconda3/lib/python3.7/site-packages/numpy/core/include; > -I/home/pz/anaconda3/lib/python3.7/site-packages/numpy/core/include; > -I/home/pz/anaconda3/include/python3.7m -c qutip/cy/spmatfuncs.cpp -o; > build/temp.linux-x86_64-3.7/qutip/cy/spmatfuncs.o -w -O3 -march=native; > -funroll-loops; > gcc: error trying to exec 'cc1plus': execvp: No such file or directory; > error: command 'gcc' failed with exit status 1; >; > It seems the gcc compiler isn't correctly located? Or what else problem.; >; > I checked the gcc version on the workstation:; > gcc --version; > gcc (Ubuntu 8.3.0-6ubuntu1~18.10) 8.3.0; > Copyright (C) 2018 Free Software Foundation, Inc.; > This is free software; see the source for copying conditions. There is NO; > warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; >; > whereis gcc; > gcc: /usr/bin/gcc /usr/lib/gcc /usr/share/man/man1/gcc.1.gz; >; > How can I direct the installer to find the gcc compiler?; >; > Thanks!; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/946#issuecomment-501609220:196,update,update,196,https://qutip.org,https://github.com/qutip/qutip/issues/946#issuecomment-501609220,7,"['install', 'release', 'update']","['install', 'installed', 'release', 'update']"
Deployability,"Hi,; The print should show all the important information without being overwhelming...; I am not sure what would be the best way to do it and am hopping that someone with a good idea comes along.; But the `compile` entry is too long and not important enough to be placed first... `qutip.settings` is defined in `qutip/settings.py`.; If you think it would be useful to change the `compile` entry representation, it can be updated by changing `qutip/core/options.py:QutipOptions`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2100#issuecomment-1443775819:421,update,updated,421,https://qutip.org,https://github.com/qutip/qutip/issues/2100#issuecomment-1443775819,1,['update'],['updated']
Deployability,"Hi,; This a manual installation of the master branch?; Are you using the qutip tests in qutip.testing.run(), if so could you tell us which test is failing? (And which similar only are not.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-509709052:19,install,installation,19,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-509709052,1,['install'],['installation']
Deployability,"Hi. I am having the same issue when installing through anaconda3 on Ubuntu20.04. The steps which I am following are:. $ conda create -n qutip python=3; $ conda activate qutip; $ conda install -c conda-forge openmp; $ conda install -c conda-forge qutip. However, when I execute qutip.about(), I get the following:. QuTiP Version: 4.6.2; Numpy Version: 1.20.3; Scipy Version: 1.6.3; Cython Version: None; Matplotlib Version: None; Python Version: 3.9.6; Number of CPUs: 6; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/sourav/anaconda3/envs/qutip/lib/python3.9/site-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`. As you can see, OPENMP does not seem to be enabled. Please let me know if I am doing things incorrectly.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1378#issuecomment-916773016:36,install,installing,36,https://qutip.org,https://github.com/qutip/qutip/issues/1378#issuecomment-916773016,5,"['Install', 'install']","['Installation', 'Installed', 'install', 'installing']"
Deployability,Hi. Thanks for reporting this problem. I'm not sure what the reason for this behavior might be. Do you see the same thing when you install with and without the f90 solver? Are you running the tests in the python interpreter or from IPython?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/46#issuecomment-23545094:131,install,install,131,https://qutip.org,https://github.com/qutip/qutip/issues/46#issuecomment-23545094,1,['install'],['install']
Deployability,"Hmm, it still seems to use the old travis ci configuration, where I tried to install numpy/scipy with pip without wheels. But took too long to install the dependencies that way, and the tests will probably timeout and get cancelled. In the current travis ci configuration uses pip with wheels to install numpy/scipy much faster.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/76#issuecomment-36083480:45,configurat,configuration,45,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36083480,5,"['configurat', 'install']","['configuration', 'install']"
Deployability,"Hmm, yes, that only works if you set the qutip.settings.debug to True via the configuration file.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/261#issuecomment-63601247:78,configurat,configuration,78,https://qutip.org,https://github.com/qutip/qutip/pull/261#issuecomment-63601247,1,['configurat'],['configuration']
Deployability,"Hmm. I think let's leave it out. We can reply to the issue with ""it's implemented in v5 and here is how you do it in v4"". That avoids adding a new feature in a point release (and potentially confusing users) while still solving everyone's immediate problems and making the future better.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1992#issuecomment-1248109205:166,release,release,166,https://qutip.org,https://github.com/qutip/qutip/pull/1992#issuecomment-1248109205,1,['release'],['release']
Deployability,"Hmmm. Now the documentation build works, and the macos test run works as well (except for unrelated test failures). The python 3.9 test runs fails to build mpi4py. Here, the problem solution would be [this](https://stackoverflow.com/a/73399242) (I've had the same problem before installing mpi4py on the RIKEN HPC). Should I add that?. All other test runs fail, seemingly because the first call to `mpi_pmap` hangs indefinitely. That's... hard to debug. Why would it work only on macos?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296#issuecomment-1905456136:279,install,installing,279,https://qutip.org,https://github.com/qutip/qutip/pull/2296#issuecomment-1905456136,1,['install'],['installing']
Deployability,"How did you install QuTiP? I installed a fresh copy with conda and I do have spmatfuncs.; Are you building from source?. ```; shahnawaz@torch:~/dev$ conda install qutip; Solving environment: done. ## Package Plan ##. environment location: /home/shahnawaz/miniconda3. added / updated specs:; - qutip. The following NEW packages will be INSTALLED:. qutip: 4.2.0-np113py36_2 conda-forge. Proceed ([y]/n)? y. Preparing transaction: done; Verifying transaction: done; Executing transaction: done; shahnawaz@torch:~/dev$ python; Python 3.6.3 |Anaconda, Inc.| (default, Nov 9 2017, 00:19:18); [GCC 7.2.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from qutip.cy.spmatfuncs import *; >>>; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/891#issuecomment-403675010:12,install,install,12,https://qutip.org,https://github.com/qutip/qutip/issues/891#issuecomment-403675010,5,"['INSTALL', 'install', 'update']","['INSTALLED', 'install', 'installed', 'updated']"
Deployability,How to update to the latest version: qutip-4.3.0.dev0+489fd41 ?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/829#issuecomment-377741043:7,update,update,7,https://qutip.org,https://github.com/qutip/qutip/issues/829#issuecomment-377741043,1,['update'],['update']
Deployability,"Huh, your right, it seems like there is some issue with my install, cleared it all out and it works.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/526#issuecomment-242815199:59,install,install,59,https://qutip.org,https://github.com/qutip/qutip/issues/526#issuecomment-242815199,1,['install'],['install']
Deployability,"I added a section to the test suite that will skip the tests if pyopencl is not installed in the last commit. To get them working, installing pyopencl via pip will not be sufficient. There are nice guides for setting up OpenCL in [Gentoo](https://wiki.gentoo.org/wiki/OpenCL) and [Arch](https://wiki.archlinux.org/index.php/GPGPU#OpenCL). But most OpenCL implementations are proprietary. I found an example of installing AMDAPP in a travis vm [here](https://github.com/JuliaGPU/OpenCL.jl/blob/master/.travis.yml). This is the OpenCL implementation I would recommend in absence of a GPU. But this script circumvents the license agreement and I am not sure whether this is legal. If you still intent to set this up, you can push changes to this branch as well. As for documentation I feel there is not much to document. There are already notebooks showing how to use `mcsolve` [here](http://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/example-photon_birth_death.ipynb) and [here](http://nbviewer.jupyter.org/github/jrjohansson/qutip-lectures/blob/master/Lecture-6-Quantum-Monte-Carlo-Trajectories.ipynb). If everything is set up just exchanging `mcsolve` with `mcsolve_cl` should do the trick. The nuances are documented in the docstring.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/554#issuecomment-258609202:80,install,installed,80,https://qutip.org,https://github.com/qutip/qutip/pull/554#issuecomment-258609202,3,['install'],"['installed', 'installing']"
Deployability,I agree that 4.3 is long overdue. If you are happy to manage it that would be great. PIQS is a great headline for the release,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/861#issuecomment-396895478:118,release,release,118,https://qutip.org,https://github.com/qutip/qutip/pull/861#issuecomment-396895478,1,['release'],['release']
Deployability,I agree that the vectorization like in the links above is not what we need for sparse operations. The links are mostly only for reference on how to work with avx2.; For us the FMA is important since it should be faster and more precise. Maybe the compiler code is not optimal in usage of the fused operation. ; In principle there should be 4 FMA operations for one line:; `dot += data[jj]*vec[ind[jj]]`; and the compiler produces them with -ffast-math and -mfma options on (as godbolt shows). Maybe some over operations around are not optimal.; UPDATE:; Correction: compiler produces only 2 FMA for the line above. The other two are from `out[row] += a*dot`,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/551#issuecomment-254817120:545,UPDATE,UPDATE,545,https://qutip.org,https://github.com/qutip/qutip/pull/551#issuecomment-254817120,1,['UPDATE'],['UPDATE']
Deployability,"I agree we need to prioritise this. Not sure we should remove Python 2.7 support without plenty of warning. I think we should definitely remove it in v5. I am assuming we will be making a v4.3 release before that. (I have not examined this in any detail, so excuse me if I have missed some crucial point); One option could be to only support the latest scipy in py3?. Has anyone checked the scipy github to see if others are suffering / offered solutions?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/865#issuecomment-393467208:193,release,release,193,https://qutip.org,https://github.com/qutip/qutip/pull/865#issuecomment-393467208,1,['release'],['release']
Deployability,I agree with @Ericgig on the possibility of having no template and adding the suggestions for tests in the template. . I understand now that the changelog in qutip/qutip was a bad idea for the reasons you mention.; I still think it would be nice to somehow automate the way the changelog is compiled (right now by whoever is in charge of the release). Is there a simple and smart way to do this? Otherwise we could just look up the changelog section in each PR as per this template.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1198#issuecomment-602676649:342,release,release,342,https://qutip.org,https://github.com/qutip/qutip/pull/1198#issuecomment-602676649,1,['release'],['release']
Deployability,"I agree with having a test pre 1.5.; These changes should be released quickly, but probably just to 4.5.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1301#issuecomment-649631995:61,release,released,61,https://qutip.org,https://github.com/qutip/qutip/pull/1301#issuecomment-649631995,1,['release'],['released']
Deployability,I agree. Problems installing with the mcf90 option do cause quite a lot of confusion with new users,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/439#issuecomment-281725581:18,install,installing,18,https://qutip.org,https://github.com/qutip/qutip/issues/439#issuecomment-281725581,1,['install'],['installing']
Deployability,I also deactivated towncrier in this that we need to remember to add back for the full release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2048#issuecomment-1351593301:87,release,release,87,https://qutip.org,https://github.com/qutip/qutip/pull/2048#issuecomment-1351593301,1,['release'],['release']
Deployability,"I also got some wrong result with mesolve, which uses ZVODE integration method. The mesolve raises no warning. But I was able to get the right result with ISODA method. . The situation was applying a Pi pulse(~50 ns) to the qubit and wait about 1000 ns and then apply another Pi pulse. The second Pi pulse had no effect for the final state.; I was using [qobj, func] pairs for the time dependent Hamiltonian, where func is the self-defined gate envelope.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1038#issuecomment-607315509:60,integrat,integration,60,https://qutip.org,https://github.com/qutip/qutip/issues/1038#issuecomment-607315509,1,['integrat'],['integration']
Deployability,I also got this problem with Python 3.7.3 and qutip 4.4.0. The exception arises from a syntactically-broken install of apptools on Windows (namely problems in `state_pickler.py`). Reinstalling apptools seems to fix it easily enough:. ```; pip uninstall apptools; pip install -U apptools; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/671#issuecomment-519945546:108,install,install,108,https://qutip.org,https://github.com/qutip/qutip/issues/671#issuecomment-519945546,2,['install'],['install']
Deployability,"I also have this same issue, even after re-installing Anaconda3 and qutip from scratch.; Rolling back to mkl=2018.0.3 did not help. Here is my setup (I'm using Windows 7):; QuTiP Version: 4.4.1; Numpy Version: 1.16.5; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.1; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975#issuecomment-541575790:43,install,installing,43,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-541575790,3,"['Install', 'Rolling', 'install']","['Installed', 'Rolling', 'installing']"
Deployability,"I also note that I'm not replying to the thread I thought I was - I thought I was in `krotov`! For my response to the discussion points:; - I think the function `qutip.mesolve` shouldn't change interface at all for 5.0 - we can change its backend, but I think it'll be a huge hindrance to adoption of 5.0 if we make major breaking changes to effectively our premier function, and I don't see a need to do that. We can add, rather than change, and keep `mesolve` as the ""quick-and-dirty"" method that just works.; - I'm in favour of exposing the different parts of the `mesolve` process as user-accessible, composable chunks. So something like exposing a `mesolve_prepare_ode(H, state, c_ops) -> OdeState` function, where `OdeState` has properties `rhs: QobjEvo`, `state: Qobj`, `time: float` (`sesolve_prepare_ode` and `mcsolve_prepare_ode` would presumably return the same object, or a derived object). Then we'd have an `Integrator` class, which encapsulates an integration step using whatever integrator of choice, so there's one that encapsulates the scipy integrator, one which is a Cython-ised RK4 implementation, etc. Then the low-level user would simply write the `for time in times` loop themselves; at this level, there's nothing fancy that QuTiP adds, so we may as well just expose it directly. I think this architecture is approximately what Eric had in mind too, though I presumably haven't used the same names.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859917462:922,Integrat,Integrator,922,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859917462,4,"['Integrat', 'integrat']","['Integrator', 'integration', 'integrator']"
Deployability,"I also ran into segfaults on MacOS, using `qutip.simdiag` and `Qobj.eigenstates`, it seems like the same issue. This was using scipy installed via conda, from the `conda-forge` channel. Installing scipy from the `defaults` channel instead resolved the issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-636995874:133,install,installed,133,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-636995874,2,"['Install', 'install']","['Installing', 'installed']"
Deployability,"I am afraid it was last week, and I can't remember the details. The error was always related to OSX version mavericks or later not being compatible with gcc48.; Again these steps may not be exact, but this is what I think we did:; 1. Install HomeBrew; ruby -e ""$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)""; 2. Install scipy and cython; brew install scipy; brew install cython",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/265#issuecomment-64205641:234,Install,Install,234,https://qutip.org,https://github.com/qutip/qutip/issues/265#issuecomment-64205641,6,"['Install', 'install']","['Install', 'install']"
Deployability,"I am checking out Azure pipelines, which seems to have some (preferential?) integration with GitHub https://azure.microsoft.com/en-us/services/devops/pipelines/. Cc @tehruhn also for the previous comments.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/959#issuecomment-540523107:24,pipeline,pipelines,24,https://qutip.org,https://github.com/qutip/qutip/issues/959#issuecomment-540523107,3,"['integrat', 'pipeline']","['integration', 'pipelines']"
Deployability,"I am not so sure about it not being a QuTIP issues, this doesn't seem to happen with other modules (also installed with homebrew) requiring numpy/arrayobject.h....",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348#issuecomment-156227069:105,install,installed,105,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-156227069,1,['install'],['installed']
Deployability,"I am not sure. Bug release should not add new features, but this feels too small for a minor release. Waiting for it in v5 could take some time, so I think it's fine.; But if we choose to wait for v5 for this, I am fine with it. It will be one less merge conflict when merging master to dev.major.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1992#issuecomment-1248091570:19,release,release,19,https://qutip.org,https://github.com/qutip/qutip/pull/1992#issuecomment-1248091570,2,['release'],['release']
Deployability,"I am not too familiar with poetry, but it seems to try to install Qutip from source. To build, you need cython with a working c++ compiler. Usually the c++ compiler is managed by the OS, not python, so you need to install is manually. My guess it that if you can tell poetry to use Qutip's wheels available on pypi instead of building from source, it should work. But if you need to build it from source, you will need to install Microsoft Visual C++ and do some setup. See https://cython.readthedocs.io/en/latest/src/quickstart/install.html. I am not sure if there is anything we can do on our side, but if we are missing something, feel free to tell us or make a PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2322#issuecomment-1936053208:58,install,install,58,https://qutip.org,https://github.com/qutip/qutip/issues/2322#issuecomment-1936053208,4,['install'],['install']
Deployability,"I am not using mpiexec when running the tests. I have done some more experimenting on my local machine. 1. If I install `mpi4py` with pip, I get the same problem on my machine (the test hangs, I can't even CTRL+C). The steps I have taken in detail are:; ```bash; conda create -n qutip-test-tmp python numpy scipy pytest; conda activate qutip-test-tmp; sudo apt install mpich libmpich-dev; pip install 'qutip[full] @ git+https://github.com/qutip/qutip.git@refs/pull/2296/head'; cd ~/miniconda3/envs/qutip-test-tmp/lib/python3.12/site-packages/qutip/tests/; pytest --verbose --pyargs qutip.tests.solver.test_parallel; ```; (The `apt install` call is taken from the `mpi4py/setup-mpi` and without it, the installation fails. I `apt remove`d the packages again afterwards.). 2. Then I tried installing with conda as follows.; ```bash; conda create -n qutip-test2-tmp python numpy scipy pytest mpi4py; conda activate qutip-test2-tmp; pip install 'qutip[full] @ git+https://github.com/qutip/qutip.git@refs/pull/2296/head'; cd ~/miniconda3/envs/qutip-test2-tmp/lib/python3.12/site-packages/qutip/tests/; pytest --verbose --pyargs qutip.tests.solver.test_parallel; ```; Now things get even weirder. Here, `test_map` and `test_map_accumulator` pass, but `test_map_pass_error` hangs (I can get out with CTRL+C). 3. In my regular development environment, all tests pass without problem. I have no idea what the difference is between my regular environment and the one created in number 2. I will continue trying things out when I have time. In the end, I imagine the solution might be not to include `mpi4py` in the `extras` section, and only add it with conda in one or two test runs?. I recently had a good experience asking for help on the mpi4py discussion board, might do that again.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296#issuecomment-1907636803:112,install,install,112,https://qutip.org,https://github.com/qutip/qutip/pull/2296#issuecomment-1907636803,7,['install'],"['install', 'installation', 'installing']"
Deployability,I am now also encountering this issue when installing qutip 4.3.1 on a docker image (built from Windows). qutip 4.3.0 works without problems. Minimal docker file where qutip fails to import:. ```dockerfile; FROM continuumio/miniconda3. RUN conda config --append channels conda-forge && conda update -y --quiet conda && conda install -y --quiet qutip=4.3.1; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-480764079:43,install,installing,43,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-480764079,3,"['install', 'update']","['install', 'installing', 'update']"
Deployability,"I am now trying to setup a developement environment using ```python setup.py develop``` and ```python setup.py build_ext --inplace``` but getting the error . ```; cy/stochastic.pyx: cannot find cimported module 'qutip.cy.spmatfuncs'; Appending qutip.cy configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.cy'); Appending qutip.control configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.control'); Traceback (most recent call last):; File ""setup.py"", line 18, in <module>; setup(**configuration(top_path='').todict()); File ""setup.py"", line 10, in configuration; if os.environ['FORTRAN_LIBS'] == 'TRUE':; File ""/usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/UserDict.py"", line 40, in __getitem__; raise KeyError(key); KeyError: 'FORTRAN_LIBS'; ```; I have gcc and gfortran installed and I suspect this might also be due to some issue with the file paths. I will try to get a workaround and post soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348#issuecomment-263750245:253,configurat,configuration,253,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263750245,5,"['configurat', 'install']","['configuration', 'installed']"
Deployability,"I am on it. Does this mean we do a 4.3.2 micro release?. On Mon, Jul 23, 2018, 5:45 PM Alexander Pitchford <notifications@github.com>; wrote:. > The version requirements need increasing.; >; > This was posted on the help group.; > Please update the requirements, for the new features (PIQS and photon; > scattering) to work Numpy = 1.12.0+ is required as numpy.flip() and; > numpy.geomspace are used.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/905>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGpUBIZ8R-c669Ab6lVFxAEJdzLKit52ks5uJY0rgaJpZM4VamDr>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/905#issuecomment-407002214:47,release,release,47,https://qutip.org,https://github.com/qutip/qutip/issues/905#issuecomment-407002214,2,"['release', 'update']","['release', 'update']"
Deployability,"I am ultimately interested both in open system and closed system dynamics interchangeably. > [...] In the 5.x series, almost all the intermediary operations should get a speed up as well (`Qobj.__init__` is getting its time slashed, and the line `current_liouvillian += control * operator` may be able to be replaced with one that applies the same in-place calculation optimisations that `mesolve` does internally). One thing you pay a nasty penalty for right now if that internally we'd keep column-stacking/unstacking the state, but in the 5.x branch it'll stop being represented internally by a sparse matrix, and instead it'll be a Fortran-ordered dense matrix, for which the stack/unstack is a free operation. That's an extremely exciting prospect! I'd love to be able to have internal sparse data for Qobj's that represent Hamiltonians/Liouvillians, but dense data for Qobj's that represent Hilbert space states or Density matrices. In fact, it looks like a significant part of the overhead in the [calculation of the Krotov's pulse update](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/optimize.py#L466) is due to the stacking/unstacking, see [`profile.svg`](https://gist.githubusercontent.com/goerz/34af142b78d7e344417d838bbea78aaf/raw/f3f49104083d59b9612f153d2f0ff652ea6a9f01/profile.svg) in the [gist](https://gist.github.com/goerz/34af142b78d7e344417d838bbea78aaf#file-profile-svg). In the benchmarking notebook, for the optimization in `In [34]`, that's the extra 6 seconds per iteration (iterations 1-3 should ideally take exactly twice as long as iteration 0, as iteration 0 is a simple forward propagation and all later iterations are one forward and one backward propagations). That's what we have in our Fortran implementation, too: the runtime of the optimization is basically just the runtime of all the internal propagations; calculating the updates should be completely negligible. There's also [shape conversions](https://github.co",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:3461,update,update,3461,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['update'],['update']
Deployability,"I am with the same problem. Note that the QuTiP version and the python version is different. I have installed the python via macports, but I have also tested in anaconda system. The problem is the same in the anaconda. ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+3421bc5c; Numpy Version: 1.17.4; Scipy Version: 1.3.2; Cython Version: 0.29.14; Matplotlib Version: 3.1.1; Python Version: 3.8.0; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /opt/local/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/qutip-4.5.0.dev0+3421bc5c-py3.8-macosx-10.15-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.loggin",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:100,install,installed,100,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482,3,"['Install', 'install']","['Installation', 'Installed', 'installed']"
Deployability,I believe I did something similar. I installed GCC-8 through homebrew using:. `brew install gcc`. I then gave the path to that gcc install which is stored in the `/usr/local/bin` by default I believe. `CC=/usr/local/bin/gcc-8 python setup.py develop --with-openmp`. I did not have any problems.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/965#issuecomment-476410952:37,install,installed,37,https://qutip.org,https://github.com/qutip/qutip/issues/965#issuecomment-476410952,3,['install'],"['install', 'installed']"
Deployability,I believe a bad call to the integrate command was responsible.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/264#issuecomment-64521594:28,integrat,integrate,28,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64521594,1,['integrat'],['integrate']
Deployability,"I believe the issue is on lines 833-835:. ``` python. if ODE.t > tlist[k]:; ODE.set_initial_value(y_prev, t_prev); ODE.integrate(tlist[k], step=0); ```. removing these lines gives similar performance.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/264#issuecomment-64523119:119,integrat,integrate,119,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64523119,1,['integrat'],['integrate']
Deployability,I can confirm that the failure in the CI occurs only on the `coverage` test environment and it disappears if we update scipy to 1.6,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-817211736:112,update,update,112,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-817211736,1,['update'],['update']
Deployability,"I can not reproduce it either. Here is _my_ output from `qutip.about()`. I seem to have a different BLAS installation but I am not sure if it is related. ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.2; Numpy Version: 1.21.3; Scipy Version: 1.7.1; Cython Version: None; Matplotlib Version: None; Python Version: 3.9.5; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/kaladin/.virtualenvs/fresh-qutip/lib/python3.9/site-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1705#issuecomment-959451146:105,install,installation,105,https://qutip.org,https://github.com/qutip/qutip/issues/1705#issuecomment-959451146,3,"['Install', 'install']","['Installation', 'Installed', 'installation']"
Deployability,"I can probably do it with [`unittest.mock.assert_called_once_with`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.assert_called_once_with), although I'm not sure what the etiquette is on using multiple different unittesting frameworks is, as I see this repo is `pytest`ed mostly. I guess `unittest` is part of the standard library so it should be okay?. I will add a commit with the unittest updated when I get the chance, though feel free to merge this 1-line fix as it might as well be in master now that it's been noticed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1322#issuecomment-659111222:418,update,updated,418,https://qutip.org,https://github.com/qutip/qutip/pull/1322#issuecomment-659111222,1,['update'],['updated']
Deployability,"I cannot reproduce this on either Ubuntu or Windows... `nstep` only sets the maximally allowed number of time steps. That exception is a quite general one. It only says that the ODE integrator fails. But the Larmor example is really a trivial one and if it fails then something very important must have been contaminated. If resinstalling in a fresh environment does not work, I can only suggest to debug at the scipy level.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896#issuecomment-1140440000:182,integrat,integrator,182,https://qutip.org,https://github.com/qutip/qutip/issues/1896#issuecomment-1140440000,1,['integrat'],['integrator']
Deployability,"I can’t tell now, will investigate. What’s strange to me in the first place is that on conda-forge, it says that for Mac’s Os, QuTiP is now at 4.3.1, https://anaconda.org/conda-forge/qutip. . Also, it would be useful to update the windows version from 4.2 on conda forge. Cc @quantshah.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/988#issuecomment-489403726:220,update,update,220,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-489403726,1,['update'],['update']
Deployability,"I carefully followed the instruction and installed qutip on an ubuntu system in windows. It seems the the only package I did not explicitly install is Python Headers.; After installing qutip and running the test, I got the following:; 634 passed, 6 skipped, 61 deselected, 2 xfailed, 959 warnings in 236.31s (0:03:56); qutip/tests/test_metrics.py::test_unitarity_known XFAIL [ 35%]; qutip/tests/test_metrics.py::test_unitarity_bounded XFAIL [ 35%]; qutip/tests/test_metrics.py::test_dnorm_bounded SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_known_cases SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_scalar SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_qubit_triangle SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_force_solve SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_cptp SKIPPED [ 36%]. 1. I am wondering how to solve these problems. 2. Do I need to worry about deselected and warnings? What should the normal output be if qutip is installed successfully?; As a beginner, I feel it is really challenging to install the package and be free of errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1222#issuecomment-605556711:41,install,installed,41,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-605556711,5,['install'],"['install', 'installed', 'installing']"
Deployability,"I changed back the default integration method to `taylor1.5` for `smesolve` and `platen` for `ssesolve`.; The property that the state stay physical of `rouchon` is actually problematic since even when the `dt` is too large, the state still look fine but is totally wrong. Whereas other methods will get negative eigenvalues or Nan.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2131#issuecomment-1481913534:27,integrat,integration,27,https://qutip.org,https://github.com/qutip/qutip/pull/2131#issuecomment-1481913534,1,['integrat'],['integration']
Deployability,"I changed the merge target from `qutip-5.0.X` to `master`. The `qutip-...` branches are for released version.; Could you merge the current master branch, we added fixes for the new numpy, scipy version and it should help tests to passes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2140#issuecomment-1610223257:92,release,released,92,https://qutip.org,https://github.com/qutip/qutip/pull/2140#issuecomment-1610223257,1,['release'],['released']
Deployability,"I completely understand it @nwlambert, the issue was open in 2016! I had doubts that you were still working on it until I saw the latest updates in the new versions of qutip. Please if you can, I would appreciate if you could share the notebooks with me. They sound really interesting to work on. Regarding point 3, I will try to read some information about it before next week. Do you have any papers or documents in mind that you would recommend?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/442#issuecomment-2008309442:137,update,updates,137,https://qutip.org,https://github.com/qutip/qutip/issues/442#issuecomment-2008309442,1,['update'],['updates']
Deployability,"I couldn't reproduce this with an install into a fresh `conda` environment, _but_ I did once see that same error when I tried to make an OpenMP and a non-OpenMP `qutip` coexist in the same environment. When that previously happened, the package actually worked, it just reported that error. My guess is that this happens if `pyximport.install()` has already been activated when `qutip` is imported, and consequently the test in `__init__.py` as to whether `qutip.cy.openmp.parfuncs` is importable causes this error. It should not be able to even attempt to import it _unless_ `pyximport` has been turned on, and if it's been turned on by something other than QuTiP, then it should fail with a `numpy` header file error instead (this is something we should probably fix too, but I've not noticed it before). Is there any chance you're importing or reimporting `qutip` in a Python session in which some other version of `qutip` is already imported (like in an IPython profile file)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1334#issuecomment-670003770:34,install,install,34,https://qutip.org,https://github.com/qutip/qutip/issues/1334#issuecomment-670003770,2,['install'],['install']
Deployability,"I couldn't work out how to attach a patch to a GitHub comment, so I've made PR (CamilleLCal/qutip#1) against your fork to show the sort of changes I think `floquet_markov_mesolve` could benefit from.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1248#issuecomment-779453398:36,patch,patch,36,https://qutip.org,https://github.com/qutip/qutip/pull/1248#issuecomment-779453398,1,['patch'],['patch']
Deployability,"I created a CentOS VM - which I think may have been unnecessary and a bit time consuming; I installed Miniconda and the qutip required libraries. Initially this was cython 0.25.2; I installed qutip 4.2 (the version we created for the release) from source with no error.; I upgraded to cython 0.26, for which I had to use the conda-forge channel.; I tried to install qutip 4.2 (the version we created for the release) from source and found the errors reported by @kcgthb ; I installed qutip 4.2 (the version from #731 ) from source with no error.; I would say therefore that this issue is fixed by #731",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-318100070:92,install,installed,92,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-318100070,7,"['install', 'release', 'upgrade']","['install', 'installed', 'release', 'upgraded']"
Deployability,"I did come across this before. You might find an old qutip issue on the; same.; But if it works for numpy, then good enough for us. On Tue, 10 Jul 2018 04:16 Shahnawaz Ahmed, <notifications@github.com> wrote:. > Numpy seems to add it this way -; > https://github.com/numpy/numpy/blob/master/MANIFEST.in; >; > If it is okay then I can change the MANIFEST files and continue the 4.3; > release.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/894#issuecomment-403686597>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AIxX7VZ2paG34IzNxc5Y38HwIJZGbXCJks5uFByUgaJpZM4VIsN3>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/894#issuecomment-403718641:384,release,release,384,https://qutip.org,https://github.com/qutip/qutip/issues/894#issuecomment-403718641,1,['release'],['release']
Deployability,"I did some tests and ; 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian matrices) (c's version Ok); 2 - It happen when installing the scipy stack with pip but not when installing it with conda.; 3 - It depend on the problem size, 64 seems particularly bad, usually it fails on the second call.; 4 - I only got it in zheevr which is only used in `brmesolve`. But Nathan got it in other tests which use scipy's `eigh`.; 4 - It happen in scipy in the fortan version of lapack:. ```; import numpy as np; from scipy.linalg import eigh; H = random_hermitian(64); eigh(H) # Work fine; eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; ```. Possible solutions (for zheevr):. - Installing scipy with conda, the easiest solution, but not in our control.; - Finding a way to link clapack from cython. Linking scipy's one would require good knowledge of scipy internals since only one cython interface is provided. Linking to another installation of lapack, but it would require the user to install lapack or install it with qutip. Both seems wrong to me.; - For mac user, call scipy's eigh from cython i zheevr, slower but better than risking segfault.; - Have the code directly in qutip. We can adapt it from OpenBlas: https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-628259492:145,install,installing,145,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628259492,6,"['Install', 'install']","['Installing', 'install', 'installation', 'installing']"
Deployability,"I disabled cython support on python 3.12 with [this patch](https://salsa.debian.org/science-team/qutip/-/blob/master/debian/patches/python3.12_no_cython_support.patch?ref_type=heads):; ```; Index: qutip/qutip/__init__.py; ===================================================================; --- qutip.orig/qutip/__init__.py	2024-01-16 03:52:59.780085342 +0100; +++ qutip/qutip/__init__.py	2024-01-16 03:52:59.780085342 +0100; @@ -53,25 +53,31 @@; except ImportError:; pass; else:; - from qutip.utilities import _version2int; - _cy_require = ""0.29.20""; - _cy_unsupported = ""3.0.0""; - if _version2int(_Cython.__version__) < _version2int(_cy_require):; - warnings.warn(; - ""Old version of Cython detected: needed {}, got {}.""; - .format(_cy_require, _Cython.__version__); - ); - if _version2int(_Cython.__version__) >= _version2int(_cy_unsupported):; - warnings.warn(; - ""The new version of Cython, (>= 3.0.0) is not supported.""; - .format(_Cython.__version__); - ); + from sys import version_info as sys_pyver; + if sys_pyver.major == 3 and sys_pyver.minor >= 12:; + # cython3 not supported on python 3.12; + # see https://github.com/qutip/qutip/issues/2293; + print(f""qutip does not support Cython on Python 3.{sys_pyver.minor} (Issue#2293)""); else:; - # Setup pyximport; - import qutip.cy.pyxbuilder as _pyxbuilder; - _pyxbuilder.install(); - del _pyxbuilder, _Cython, _version2int; - qutip.settings.has_cython = True; + from qutip.utilities import _version2int; + _cy_require = ""0.29.20""; + _cy_unsupported = ""3.0.0""; + if _version2int(_Cython.__version__) < _version2int(_cy_require):; + warnings.warn(; + ""Old version of Cython detected: needed {}, got {}.""; + .format(_cy_require, _Cython.__version__); + ); + if _version2int(_Cython.__version__) >= _version2int(_cy_unsupported):; + warnings.warn(; + ""The new version of Cython, (>= 3.0.0) is not supported.""; + .format(_Cython.__version__); + ); + else:; + # Setup pyximport; + import qutip.cy.pyxbuilder as _pyxbuilder; + _pyxbuilder.install();",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293#issuecomment-1893522543:52,patch,patch,52,https://qutip.org,https://github.com/qutip/qutip/issues/2293#issuecomment-1893522543,3,['patch'],"['patch', 'patches']"
Deployability,"I discovered that we were missing a small bit of towncrier configuration, so I added this test that does a trial run of generating the changelog. In addition to checking that the changelog can be generated, it also outputs the draft so that reviewers can look at it if they like.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1946#issuecomment-1170110480:59,configurat,configuration,59,https://qutip.org,https://github.com/qutip/qutip/pull/1946#issuecomment-1170110480,1,['configurat'],['configuration']
Deployability,"I discovered the issue originated from this commit da642a3539cbf1d3d8c391576eedd3a3f6bdc50e. This prevented the Husimi Q function being correctly calculated for non-integer spin systems. There is a remaining factor of 1/pi to be included as well, which I might treat as an option when I update the code.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1128#issuecomment-590317281:287,update,update,287,https://qutip.org,https://github.com/qutip/qutip/issues/1128#issuecomment-590317281,1,['update'],['update']
Deployability,"I do not think it's a _good first issue_...; There are multiple possible solutions and it is not clear which is the best one:. 1. Ensure all eigen values and eigen vectors are computed.; 1.1 This could be done by finding an alternative to scipy to solve for sparse matrix decomposition, but it would add extra requirement and it must be easy to install with pip.; 1.2 Use a third call to `scipy.sparse.linalg.eigs`/ `scipy.sparse.linalg.eigsh` using `sigma` to find all the pseudo degenerate values. It need to be done while being careful about special cases. This would make the sparse eigen solver even slower than it already is.; 2. Allow to sort by other orders, such as the complex value or magnitude. This would not solve the issue, but give some options to go around it. However the dense eigen solver would be expected to behave the same and the dense eigen solver does not have this options, so we need to implement it ourselves. This sorting option would also be required for any other data type we want to support. To go around that, the `Qobj` methods could be responsible for the sorting, the `sort` argument would only be passed to the dispatched function when `sparse=True`.; 3. Refuse to use the sparse solver for the full decomposition as scipy does. The sparse eigensolver is both slow and hard to use in this case. Also the eigen vectors computed by the sparse solver are stored in a dense array, so it is not that useful to save memory...; 4. Implement our own sparse eigen decomposition...; 5. Only document the issue without fixing. The default is the dense solver, which is both faster and safer in almost all cases.; 6. Something else...; ; I would personally go for either 1.2 of 3. ; Adding different sorting options in `Qobj` methods (2) and removing them from the dispatched functions, could be nice, but it's not a fix. The place to start would be to debate on the solution. If you have some opinion on the matter, please let us know.; Once we've made up our mind, you can",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1998#issuecomment-1472150161:345,install,install,345,https://qutip.org,https://github.com/qutip/qutip/issues/1998#issuecomment-1472150161,1,['install'],['install']
Deployability,"I do not think that much can be done for the mesolver. The update here ; just addresses the resetting of the ODE solver, which is not done in the ; mesolver. I still think that spawning ntraj processes is not a very ; efficient thing to do. So I am working on cleaning that up. However, ; you are correct, moving the ODE creation outside of the mc_alg routine ; does have little effect. > Robert Johansson mailto:notifications@github.com; > December 1, 2014 at 13:48; > ; > Nice speed up! Is there anything here that we could also benefit from ; > in mesolve? Or is it specific to mcsolve in that it mostly affect the ; > ODE restart?; > ; > I doubt that the initial setup of an ODE instance before spawning ; > processes would have any significant impact on the performance (note ; > that multiprocessing does not use threads, it uses processes, so there ; > is no sharing of ODE instances between processes). Creating the ODE ; > instance once in the parent processor, or N times in N processes in ; > parallel therefore should not make much difference, if any.; > ; > —; > Reply to this email directly or view it on GitHub ; > https://github.com/qutip/qutip/pull/264#issuecomment-65020496.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/264#issuecomment-65020643:59,update,update,59,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-65020643,1,['update'],['update']
Deployability,"I doc [http://qutip.org/docs/3.1.0/apidoc/functions.html](url) ; Under the section of master equation solver . > Time-dependent operators; > ; > For time-dependent problems, H and c_ops can be callback functions that takes two arguments, time and args, and returns the Hamiltonian or Liouvillian for the system at that point in time (callback format).; > ; > Alternatively, H and c_ops can be a specified in a nested-list format where each element in the list is a list of length 2, containing an operator (qutip.qobj) at the first element and where the second element is either a string (list string format), a callback function (list callback format) that evaluates to the time-dependent coefficient for the corresponding operator, or a NumPy array (list array format) which specifies the value of the coefficient to the corresponding operator for each value of t in twist. It seems that **in the version 3.1.0**, c_ops can be implemented as a callback functions in `mesolve`. Is this true? . Q.2; As mentioned in [https://groups.google.com/forum/#!topic/qutip/aIxxnbQ56W4](url), the callback function has not been developed for `mesolve` at the time of that post. But . > you have a callback function that is called for each time step and which constructs the system Liouvillian Here you are free to construct the collapse operators or Liouvillian in whichever way you want. From this, I think I can use the callback function to define the c_ops and integrate them in **Liouvillian** for `mesolve`. If I am interpreting it right, this can be done for c_ops with some complicated time dependence. Is that right? . _(However it is mentioned in [https://groups.google.com/forum/#!searchin/qutip/time$20dependent/qutip/S0IskSRy2M0/_2L6BzqAKTEJ](url) that I can use a callback function for `mesolve`?)_. Q.3; I know that I cannot use callback functions to define the c_ops directly in `mcsolve`. Can I use the callback functions to define the c_ops and integrate them in **Liouvillian** for `mcsolve` ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/223#issuecomment-223873117:1514,integrat,integrate,1514,https://qutip.org,https://github.com/qutip/qutip/issues/223#issuecomment-223873117,2,['integrat'],['integrate']
Deployability,"I don't get any error in both cases. ; What is your `qutip.about()` message? ; By the way, QuTiP does not support anymore Python 2.7, see #882. ; My specifications are; ```; QuTiP Version: 4.3.1; Numpy Version: 1.16.2; Scipy Version: 1.2.1; Cython Version: 0.28.5; Matplotlib Version: 2.2.3; Python Version: 3.6.7; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/796#issuecomment-497299113:363,Install,Installed,363,https://qutip.org,https://github.com/qutip/qutip/issues/796#issuecomment-497299113,1,['Install'],['Installed']
Deployability,"I don't have xvfb (pytest-xvfb) installed specifically for qutip, but it is used by other packages (The general use of pytest-xvfb is to facilitate testing of GUI, graphical or windowing functionality without having an normal Xserver active. That is, it can be useful for automated CI testing of gui packages, for instance in chroots or cloud CI infrastructure). Since qutip doesn't use xvfb directly this bug won't be a problem for general CI testing, where only qutip is loaded on a cloud instance (for instance Debian testing done at https://ci.debian.net/packages/q/qutip/). But before I upload a package to the Debian infrastructure, I like to run the tests on my own system to be confident they're likely to pass. So this is where the problem happens, running tests on my own system, where I have pytest-xvfb installed for testing other packages. (pytest has this bad habit of loading all available plugins whether or not they're actually used by the tests being run. It's quite annoying actually. It would be better if it only loaded plugins specified in conftest.py). So the use case is running the qutip tests on my own system, where pytest-xvfb simply happens to be installed for other purposes not related to qutip. There are ways of working around the problem, for instance the `--no-xvfb` option could be explicitly added to the `pytest` command line. But it can be useful if the test code itself can be made robust with respect to the problem (e.g. in this case just replacing `plt.clf()` with `plt.close('all')`)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639#issuecomment-909115791:32,install,installed,32,https://qutip.org,https://github.com/qutip/qutip/issues/1639#issuecomment-909115791,3,['install'],['installed']
Deployability,"I don't know if it is relevant, but I copy-pasted the block in the first [post](https://github.com/qutip/qutip/issues/932#issue-378533309) of the thread and I do not get an error message by running it on OS High Sierra 10.13.6 in a Jupyter notebook. There is a clang warning ; ```; libstdc++ is deprecated; move to libc++ with a minimum deployment target of OS X 10.9 [-Wdeprecated]; ```; Other details. ```; QuTiP Version: 4.3.1; Numpy Version: 1.14.2; Scipy Version: 1.1.0; Cython Version: 0.28.5; Matplotlib Version: 2.2.3; Python Version: 3.6.7; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932#issuecomment-466251384:337,deploy,deployment,337,https://qutip.org,https://github.com/qutip/qutip/issues/932#issuecomment-466251384,2,"['Install', 'deploy']","['Installed', 'deployment']"
Deployability,"I don't know if there was a macOS update or something, but my configuration has gone funny as well. I find now that using `gcc --sysroot=...` rather than `gcc -isysroot=...` (note the missing `i` and the doubled `--`) works. I'm not 100% sure why this is the case - as far as I'm aware, the only difference between `--sysroot` and `-isysroot` is just that the latter only applies to includes and the former is both libraries and includes - but it works for me right now. I must be wrong in some way about the difference. Hopefully that works for you on a temporary basis. I'm sure Apple will be along shortly to change everything else up for us again.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1030#issuecomment-769204657:34,update,update,34,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-769204657,2,"['configurat', 'update']","['configuration', 'update']"
Deployability,I don't know what the `continuous-integration/travis-ci/push` failing means...,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1188#issuecomment-593098940:23,continuous,continuous-integration,23,https://qutip.org,https://github.com/qutip/qutip/pull/1188#issuecomment-593098940,1,['continuous'],['continuous-integration']
Deployability,"I don't know who maintains a QuTiP package in the ubuntu repos, but wow, that's exciting that we have one!. These warnings should already be fixed in QuTiP 4.5.2 (see #1264). Whenever the maintainer of that package releases the 4.5.2 version, all of those warnings should disappear on install. At any rate, you likely won't see any actual problems because of this. It's a quirk of CPython that the string comparisons it's complaining about actually will do the intended thing in this case (due to a small-immutable-object caching optimisation). The code is still a typo despite this, but it's fixed in later releases.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1389#issuecomment-735296084:215,release,releases,215,https://qutip.org,https://github.com/qutip/qutip/issues/1389#issuecomment-735296084,3,"['install', 'release']","['install', 'releases']"
Deployability,"I don't know, since jax is developed by google I expect it to work well with gpus it provide through collab... We don't use schur decomposition for mesolve directly. I think it's the integrator from diffrax that does, if not it could be the norm (it's using trace norm which call sqrtm instead of trace, fixed in #2408). Maybe trying other ODE solver or not normalizing would work. Neill seems to have run most of his test using dopri:. ```; from diffrax import Dopri5, PIDController. options = {; ""method"": ""diffrax"",; ""normalize_output"": False,; ""stepsize_controller"" : PIDController(rtol=1e-8, atol=1e-6), # This is now the default.; ""solver"": Dopri5(),; }; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2320#issuecomment-2090722078:183,integrat,integrator,183,https://qutip.org,https://github.com/qutip/qutip/issues/2320#issuecomment-2090722078,1,['integrat'],['integrator']
Deployability,"I don't know, that's my first `qutip` installation. :). But I just tried, and it indeed works with Cython 0.25, thanks for the pointer.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-316779819:38,install,installation,38,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-316779819,1,['install'],['installation']
Deployability,"I don't think either ""missing"" or ""full"" should be used much with pure qutip. Only with plugins like qutip-jax it makes any sense to me. With ""missing"", you could set it so it will end up all in jax format and not have too much issues. . ""full"" will probably break HEOM, some steadystate feature, slow down scipy integrators, etc. ""missing? should be safe. Ok for `default_dtype_scope`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2519#issuecomment-2407529422:313,integrat,integrators,313,https://qutip.org,https://github.com/qutip/qutip/pull/2519#issuecomment-2407529422,1,['integrat'],['integrators']
Deployability,"I don't think it's your code, but I haven't looked in to it in sufficient detail yet. As it stands installing qutip is fine but importing it fails, as it is unable to find the C headers, and is spitting out multiple errors of the form ""distutils.errors.CompileError: command '/usr/bin/clang' failed with exit status 1"". I can provide the full error messages sometime tomorrow if I'm still unable to solve the problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/552#issuecomment-260194878:99,install,installing,99,https://qutip.org,https://github.com/qutip/qutip/issues/552#issuecomment-260194878,1,['install'],['installing']
Deployability,"I don't want to approve or block it.; I can't understand the template so I don't know if the generated changelog will be useful for release.; And the tests don't pass... Personally the issue number as the tag looks good to me. Yes we have many PRs without issues, but it may be a good idea to open them just to tell other what we are working on and it's easier for first time contributor who take a `good first issue`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1927#issuecomment-1159098604:132,release,release,132,https://qutip.org,https://github.com/qutip/qutip/pull/1927#issuecomment-1159098604,1,['release'],['release']
Deployability,"I don’t know. It worked for me when I tried to install QuTiP from source; —with-openmp. The error was a different and I am on a different MacOS (I; also tried a conda install llvm, but what worked was gcc for me, with; openmp). I understand that you trying to install QuTiP? If so, how? conda / source /; pip? Consider doing it via conda if you are interested in the stable; version release (4.3), by activating the conda-forge channel as detailed in; the documentation. If QuTiP is installed and you receive this error while doing a specific; task, can you copy paste the message of qutip.about() here?. On Sat, 9 Mar 2019 at 14:37, Xiao <notifications@github.com> wrote:. > Try conda install gcc.; >; > Does that mean I should use gcc from the Anaconda directory?; >; > —; > You are receiving this because you commented.; >; >; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/965#issuecomment-471148065>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AN5ffFcanH6qaCezLIKtW4SflaVsZ63Aks5vU0iCgaJpZM4bmfhd>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/965#issuecomment-471153754:47,install,install,47,https://qutip.org,https://github.com/qutip/qutip/issues/965#issuecomment-471153754,6,"['install', 'release']","['install', 'installed', 'release']"
Deployability,"I ended up here while searching for how to apply the Choi matrix to an input state and get the output density matrix. The old code has several TODOs (https://qutip.org/docs/latest/apidoc/functions.html#module-qutip.superop_reps) and we do not have a method to act on a Qobj with a Choi matrix. If you have the Choi representation of a quantum channel and want to apply it to an input state, it is done in the following way (Aamir Anis and A I Lvovsky 2012 New J. Phys. 14 105021):. <img width=""1021"" alt=""Screen Shot 2021-05-25 at 12 14 49 PM"" src=""https://user-images.githubusercontent.com/6968324/119481285-d09f4980-bd52-11eb-8ff5-4a4d25757d0c.png"">. I guess we can open a new issue to discuss these additions. @MrRobot2211 Good work on this. Could you please update according to the changes requested by @jakelishman?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-847744740:762,update,update,762,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-847744740,1,['update'],['update']
Deployability,"I fixed this and added the feature for the 2op 2t function that uses the me solver. It should be fine, but I'm going to need to think for a bit to come up with a good test/check, but it appears to behave like I would expect (from 2D plots). I'll add the notebook at some point next week/update the docs?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/206#issuecomment-52936076:287,update,update,287,https://qutip.org,https://github.com/qutip/qutip/pull/206#issuecomment-52936076,1,['update'],['update']
Deployability,"I found this thread,. https://solus-project.com/forums/viewtopic.php?t=2938. which tells one to try:. sudo eopkg install -c system.devel. -P. jakeargent wrote:; >; > I'm using solus <https://solus-project.com> 64-bit, and anaconda for; > my python.; >; > anaconda cannot find any qutip package, so I tried to install with; > pip. It gives the following error:; >; > |Command ""/home/jakeargent/anaconda3/bin/python -u -c ""import; > setuptools,; > tokenize;__file__='/tmp/pip-build-n7ekqm4y/qutip/setup.py';f=getattr(tokenize, ; >; > 'open', open)(__file__);code=f.read().replace('\r\n',; > '\n');f.close();exec(compile(code, __file__, 'exec'))"" install; > --record /tmp/pip-lnsaamvm-record/install-record.txt; > --single-version-externally-managed --compile"" failed with error code; > 1 in /tmp/pip-build-n7ekqm4y/qutip/|; >; > Then I tried easy_install, which gave me:; >; > |Processing qutip Writing /home/jakeargent/qutip/setup.cfg Running; > setup.py -q bdist_egg --dist-dir; > /home/jakeargent/qutip/egg-dist-tmp-9_egnp34 Installing without the; > fortran mcsolver. In file included from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; > from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; > from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11, from; > qutip/cy/spmatfuncs.c:27:; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61:; > fatal error: limits.h: No such file or directory #include_next; > <limits.h> /* recurse down to the real one */ ^ compilation; > terminated. In file included from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; > from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; > from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11, from; > qutip/cy/spmatfuncs.c:27:; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61:; > fatal error: limits.h: No such file or directory #include_next; > <limits.h> /* recurs",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639#issuecomment-275734243:113,install,install,113,https://qutip.org,https://github.com/qutip/qutip/issues/639#issuecomment-275734243,4,['install'],"['install', 'install-record']"
Deployability,I get an error `error: command 'gcc' failed with exit status 1` if I try `python setup.py install` or `develop`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1065#issuecomment-527430941:90,install,install,90,https://qutip.org,https://github.com/qutip/qutip/pull/1065#issuecomment-527430941,1,['install'],['install']
Deployability,"I get the same issue on a [Travis CI build](https://travis-ci.org/github/qutech/filter_functions/jobs/757061484) with; ```; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.6 LTS; Release:	16.04; Codename:	xenial; ```; running on `amd64` with `qutip-4.5.2` installed via `pip`. The same test config runs fine on Python 3.6 and 3.7, though.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-777523352:181,Release,Release,181,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-777523352,2,"['Release', 'install']","['Release', 'installed']"
Deployability,"I got it from here: https://qutip.org/docs/pre-release/guide/guide-heom.html. This is the link that ""online html documentation"" links to in the qutip webpage. Is this not keept up to date, as https://qutip.readthedocs.io/en/master/guide/guide-heom.html is?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2104#issuecomment-1454064987:47,release,release,47,https://qutip.org,https://github.com/qutip/qutip/issues/2104#issuecomment-1454064987,1,['release'],['release']
Deployability,"I guess it is my turn then :) ; I looked at the `orbital` function and compared it to the scipy implementation of `sph_harm` and the results don't seem to agree. There is one detail I need for clarification: The `orbital` function uses `ket`states as input. Which component of the `ket` state should refer to which configuration of `m`? . For example, if I pass `basis(3,0)` as argument is the corresponding setting `l = 1, m = -1` or `l = 1, m = 0` or `l = 1, m = 1`? ; I am not sure what the desired assignment is. For me it makes sense to start with the smallest `m` (in the example `m=-1`).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1839#issuecomment-1082393700:315,configurat,configuration,315,https://qutip.org,https://github.com/qutip/qutip/issues/1839#issuecomment-1082393700,1,['configurat'],['configuration']
Deployability,"I had a bit more success by switching as much as possible in the setup of the testing environment to pip:; ~~~; conda create -q -n qutip_testing_env -y python=3.7; conda install -n qutip_testing_env -y numpy scipy cython; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install -e .; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install nose ipython; ~~~; I also added a `unittest.skipIf` decorator to `qutip/tests/test_stochastic_se.py:test_smesolve_homodyne_methods`, which is the only test that consistently fails on `master`. With this, the test suite runs through about 50% of the time. The other 50% it crashes with the following:; ~~~; ...; PIQS: Test the warning for diagonal Hamiltonians to use internal solver. ... ok; Propagator: HO ('single mode') ... ok; Propagator: HO ('batch mode') ... ok; Propagator: HO parallel ... ok; Propagator: str td format ... ok; Propagator: func td format ... ok; Propagator: steady state ... python(52709,0x10fc1f5c0) malloc: Incorrect checksum for freed object 0x7fcbf338af10: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(52709,0x10fc1f5c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ~~~",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093#issuecomment-540141378:170,install,install,170,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540141378,3,['install'],['install']
Deployability,"I had a glance at the [https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo](url) ,. i don't think so my issue is as serious as stated in the above link. I am not in the folder of qutip.On trying to update this is what I get. `(qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update conda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: conda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update --prefix /anaconda3/envs/qutip-env anaconda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: anaconda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update anaconda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: anaconda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update -n base -c defaults conda; Collecting package metadata: done; Solving environment: - ; The environment is inconsistent, please check the package plan carefully; The following packages are causing the inconsistency:; \ ; - defaults/osx-64::anaconda==5.1.0=py36_2; | ; done. # All requested packages already installed. (qutip-env) Tejass-MacBook-Pro:~ shetty$ `",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/988#issuecomment-490112935:204,update,update,204,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-490112935,9,"['install', 'update']","['installed', 'update']"
Deployability,"I had actually tried that before, following the user guide for conda, but it didn't work. Seems that it was fixed in a conda update, though, as it works fine now. Thanks! Will use that to test installation instructions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-150990762:125,update,update,125,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-150990762,2,"['install', 'update']","['installation', 'update']"
Deployability,"I had this issue as well, and conda install gcc was insufficient.; What appears to have worked for me is:; * Edit ~/.qutip/qutiprc to set the compiler to use gcc-8 by hand; * running xcode-select --install; Working so far.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/965#issuecomment-473048037:36,install,install,36,https://qutip.org,https://github.com/qutip/qutip/issues/965#issuecomment-473048037,2,['install'],['install']
Deployability,"I have added this to 3.3, but it can likely be squeezed into the 3.2 branch, depending on the release timeframe.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/470#issuecomment-216433792:94,release,release,94,https://qutip.org,https://github.com/qutip/qutip/pull/470#issuecomment-216433792,1,['release'],['release']
Deployability,"I have an updated version of this using our new spmv code. Should be coming in the next couple of days. Lots of underlying stuff needs to be done for this to be integrated, and turned on automatically. Checked on Win using mingwpy and it works as well. Since the clang with OSX does not have openmp support, that is the only platform where some work needs to be done.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/438#issuecomment-277362135:10,update,updated,10,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-277362135,2,"['integrat', 'update']","['integrated', 'updated']"
Deployability,I have been trying out pytest for the last couple of days and we can start by using it for the testing as it is now. We need to replace installation [lines](https://github.com/qutip/qutip/blob/master/.travis.yml#L23) like this in the .travis.yml file to install pytest:; ```; conda install mkl blas=*=mkl numpy scipy pytest cython coveralls pytest-cov; ```. and then change the runner script to use pytest instead of `nose` by changing:; ```; nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; ```; to; ```; pytest --verbosity=1 --cov=qutip qutip; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/958#issuecomment-480825870:136,install,installation,136,https://qutip.org,https://github.com/qutip/qutip/issues/958#issuecomment-480825870,3,['install'],"['install', 'installation']"
Deployability,"I have done this, giving:. QuTiP Version: 4.5.2; Numpy Version: 1.20.3; Scipy Version: 1.6.2; Cython Version: 0.29.24; Matplotlib Version: 3.3.4; Python Version: 3.7.10; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/Nathan/opt/anaconda3/lib/python3.7/site-packages/qutip. This explains the issue you have mentioned. However, I've been unable to update qutip via conda using Terminal to a newer version, would there be any reason for this?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1634#issuecomment-895496158:218,Install,Installed,218,https://qutip.org,https://github.com/qutip/qutip/issues/1634#issuecomment-895496158,3,"['Install', 'update']","['Installation', 'Installed', 'update']"
Deployability,I have found the issue. The wrapper to zvode provided by scipy does not allow for setting itask=5 in the single step mode. This mode does not overshoot the endpoint of the interval like mode 2 which is the fixed mode in scipy. One must also bypass much of the scipy code to efficently reset the integrator. I will begin working on both and work on sending a pull to the scipy people. In the mean time we could probably overload the builtin class to get what we want before scipy gets around to it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/264#issuecomment-64601865:295,integrat,integrator,295,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64601865,1,['integrat'],['integrator']
Deployability,"I have just finished testing with Vs 2015 as well (win10, Python 3.5). All passed.; I feel this is a momentous occasion. Great work!; I think this is worthy of a 4.1 release. Very keen to get working conda package for Windows out there",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/648#issuecomment-281725155:166,release,release,166,https://qutip.org,https://github.com/qutip/qutip/pull/648#issuecomment-281725155,1,['release'],['release']
Deployability,"I have just had the same problem, (I installed additional stuff with home-brew and it broke qutip). As a complete hack workaround I noticed that DistUtil was passing to the qutip cython builder only (in my case) ; `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`; whereas numpy was returning ; `np.get_include() -> /usr/local/lib/python2.7/site-packages/numpy/core/include`. For some reason this is not being passed in properly by qutip's setup.py. Rather than dig any further I just did.. `ln -s /usr/local/lib/python2.7/site-packages/numpy/core/include/numpy /usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7/numpy`. So I could get on with things.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348#issuecomment-172684673:37,install,installed,37,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-172684673,1,['install'],['installed']
Deployability,"I have just installed qutip using the master branch. When running the tests script test_steadystate.py, I receive a similar violation as above. . ```python; packages\qutip\qutip\steadystate.py:275: in steadystate; return _steadystate_direct_sparse(A, ss_args); packages\qutip\qutip\steadystate.py:442: in _steadystate_direct_sparse; v = mkl_spsolve(L, b, perm=in_perm, verbose=ss_args['verbose'],; packages\qutip\qutip\_mkl\spsolve.py:393: in mkl_spsolve; x = lu.solve(b, verbose=verbose); OSError: exception: access violation reading 0x00000000000000C4; packages\qutip\qutip\_mkl\spsolve.py:167: OSError; ```; Is this a known bug with windows, or is there a fix?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1077#issuecomment-653144199:12,install,installed,12,https://qutip.org,https://github.com/qutip/qutip/issues/1077#issuecomment-653144199,1,['install'],['installed']
Deployability,I have just successfully installed qutip using pip into a fresh conda env (python=3.6) on Linux Mint. I believe this Mint is pretty much identical to Ubuntu.; All dependencies were installed automatically. qutip tests run fine.; So I don't think that there is anything wrong with our setup configuration.; Note we do not recommend installing qutip into a system python env - especially on Linux.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/739#issuecomment-323319515:25,install,installed,25,https://qutip.org,https://github.com/qutip/qutip/issues/739#issuecomment-323319515,4,"['configurat', 'install']","['configuration', 'installed', 'installing']"
Deployability,"I have managed to reproduce.; It would that conda is currently installing an openblas version of numpy even when `mkl` version is set. I guess this is a mistake by Anaconda that they will fix soon. Probably because they rushed the fix for #871 ; This means that the 'metrics' tests with ""known issues"" are not skipped.; What does not make sense is why the 'NOMKL' tests are failing. Some questions:; - why do we install a specific version cvxopt in our test build?; - These ""known issues"" must be quite old, so perhaps may have been fixed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/872#issuecomment-394194142:63,install,installing,63,https://qutip.org,https://github.com/qutip/qutip/issues/872#issuecomment-394194142,2,['install'],"['install', 'installing']"
Deployability,I have released the 4.1 branch and uploaded new docs with the needed updates.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/649#issuecomment-285922542:7,release,released,7,https://qutip.org,https://github.com/qutip/qutip/issues/649#issuecomment-285922542,2,"['release', 'update']","['released', 'updates']"
Deployability,"I have seen this quite a bit in the tests. Calling the code outside of the test always works. So it could be the test suite, which is based on the out of date nose, needs to be updated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/944#issuecomment-458154837:177,update,updated,177,https://qutip.org,https://github.com/qutip/qutip/issues/944#issuecomment-458154837,1,['update'],['updated']
Deployability,"I have tried on Win7x64 using anaconda. ; under Python2.7:; I found qutip would install, and most things would work. However there were many warnings when running tests and occurrences of python.exe crashing; under Python 3.5; I found qutip would install. However nothing much would run, e.g. issues importing spmatfuncs when creating a Qobj",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148701161:80,install,install,80,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148701161,2,['install'],['install']
Deployability,"I have two possible solutions for this, one is legit, and the other's a little hacky. 1. (legit) You might want to try installing Visual Studio Build Tools for C/C++, which you can do by going to Control Panel and modifying your VS install.; 2. (hacky) Try pip installing the right WHL package from here for your Python version (basically Wisows binaries for certain Python libs): [https://www.lfd.uci.edu/~gohlke/pythonlibs/#cython](url). Navigate to the specific download path and run `pip -m install <path-to-whl-file>`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1026#issuecomment-539875200:119,install,installing,119,https://qutip.org,https://github.com/qutip/qutip/issues/1026#issuecomment-539875200,4,['install'],"['install', 'installing']"
Deployability,I have updated the issue description with a code snippet.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2400#issuecomment-2115958189:7,update,updated,7,https://qutip.org,https://github.com/qutip/qutip/issues/2400#issuecomment-2115958189,1,['update'],['updated']
Deployability,"I haven't run into that failure before, but I've only tried on Windows 8.1; and 10 so far. Do you have a console log for a python.exe crash?. On Fri, Oct 16, 2015 at 11:14 PM Alexander Pitchford <; notifications@github.com> wrote:. > I have tried on Win7x64 using anaconda.; > under Python2.7:; > I found qutip would install, and most things would work. However there; > were many warnings when running tests and occurrences of python.exe crashing; > under Python 3.5; > I found qutip would install. However nothing much would run, e.g. issues; > importing spmatfuncs when creating a Qobj; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/377#issuecomment-148701161.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148703467:317,install,install,317,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148703467,2,['install'],['install']
Deployability,"I installed the ""full"" version of texlive (sudo apt-get install texlive-full on Ubuntu), and now it is working wonderfully. Thanks.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/702#issuecomment-307843585:2,install,installed,2,https://qutip.org,https://github.com/qutip/qutip/issues/702#issuecomment-307843585,2,['install'],"['install', 'installed']"
Deployability,"I installed using conda-forge channel and installation worked without any problems, but when i run following jupyter notebook from example code on documentation: (http://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/control-grape-cnot.ipynb) ; it gives following error; ![grape](https://user-images.githubusercontent.com/34689025/36730450-652e8d18-1c02-11e8-83a8-8741d69f24d6.JPG). ![gr](https://user-images.githubusercontent.com/34689025/36730803-a21e9bcc-1c03-11e8-9a77-d333108df231.JPG)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/826#issuecomment-368867793:2,install,installed,2,https://qutip.org,https://github.com/qutip/qutip/issues/826#issuecomment-368867793,2,['install'],"['installation', 'installed']"
Deployability,"I installed visual studio 2015 from https://visualstudio.microsoft.com/vs/older-downloads/ , after that I simply followed instructions of qutip documentation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/826#issuecomment-480488981:2,install,installed,2,https://qutip.org,https://github.com/qutip/qutip/issues/826#issuecomment-480488981,1,['install'],['installed']
Deployability,"I just ran locally:; `make latexpdf SPHINXOPTS=""-W --keep-going -T""`; And got `build succeeded` message.; The error on the project pipeline shows:; `Unknown interpreted text role ""cls"".` for the `me_solver`. Do you have an idea of why could this be happening?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2167#issuecomment-1567334034:131,pipeline,pipeline,131,https://qutip.org,https://github.com/qutip/qutip/pull/2167#issuecomment-1567334034,1,['pipeline'],['pipeline']
Deployability,"I just realize that test in qutip-qip won't work because this has to be merged and released first. The code looks fine to me. Will test it locally later. @hodgestar Just to get a second opinion, what do you think about this? As it could also be used by further family packages like control.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1870#issuecomment-1104475998:83,release,released,83,https://qutip.org,https://github.com/qutip/qutip/pull/1870#issuecomment-1104475998,1,['release'],['released']
Deployability,"I made some progress. Following instructions from:; https://github.com/cython/cython/wiki/CythonExtensionsOnWindows; I installed MS SDK v7. Running build_ext from within the SDK v7 cmd shell created a build that did not issue the warnings on import. It was able to link to msvcr90d.dll, which is why I think the warnings went. However, the rhs files compiled through pyximport still produced the warnings.; This post here suggests that adding a pyxbld file we can set the same flags as we use in cy/setup.py; http://stackoverflow.com/questions/16709591/get-hold-of-warnings-from-cython-pyximport-compile-distutils-build-output; This would include possibility to set a --verbose flag so I can see what actual gcc is being called.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/597#issuecomment-270358830:119,install,installed,119,https://qutip.org,https://github.com/qutip/qutip/issues/597#issuecomment-270358830,1,['install'],['installed']
Deployability,"I managed to get all the tests working on Win7 x64 using Anaconda and mingw in the manner that Chris suggested. However, one caveat is that the user name for the installation can not have any spaces in it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-150083795:162,install,installation,162,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-150083795,1,['install'],['installation']
Deployability,"I managed to install it on my M1, using Miniforge.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740#issuecomment-992382799:13,install,install,13,https://qutip.org,https://github.com/qutip/qutip/issues/1740#issuecomment-992382799,1,['install'],['install']
Deployability,"I mean, it's still a problem we can try and figure out. Unfortunately I generally don't actually use the compilers bundled with XCode, and I don't use macOS 10.15 because of the screwy updates they made to dev tools...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1348#issuecomment-680009340:185,update,updates,185,https://qutip.org,https://github.com/qutip/qutip/pull/1348#issuecomment-680009340,1,['update'],['updates']
Deployability,"I might oppose to the fact that it should be default. The reason is that majority of people don't read the documentation and don't know what ""segfault: illegal instruction"" means. It might better to note somewhere that `CFLAGS=""-march=native"" pip install qutip` will lead to 30% increased performance in certain scenarios.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/951#issuecomment-463772270:247,install,install,247,https://qutip.org,https://github.com/qutip/qutip/issues/951#issuecomment-463772270,1,['install'],['install']
Deployability,"I need to deploy a new version of the 4.6 docs before I can merge this, otherwise there'll be a dead link on the main repository page. I'm just doing that now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1511#issuecomment-828516404:10,deploy,deploy,10,https://qutip.org,https://github.com/qutip/qutip/pull/1511#issuecomment-828516404,1,['deploy'],['deploy']
Deployability,I need to fix (or hide) some warning given out by the integrator during the test. I will do that before I merge,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/455#issuecomment-194686130:54,integrat,integrator,54,https://qutip.org,https://github.com/qutip/qutip/pull/455#issuecomment-194686130,1,['integrat'],['integrator']
Deployability,"I notice that our mkl tests are not running with the mkl version of numpy.; This has been reported by others; https://github.com/ContinuumIO/anaconda-issues/issues/9519. Solution copied here for convenience:; ""please install blas=*=mkl to remedy this. Sorry for the confusion. We're working on better ways to select package variants, and we're having some growing pains.""",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/875#issuecomment-394669389:217,install,install,217,https://qutip.org,https://github.com/qutip/qutip/pull/875#issuecomment-394669389,1,['install'],['install']
Deployability,"I observed something strange after your update. On windows, with Jupyter Notebook, the kernel crashes every time when I try to plot the circuit. No error message. Does it run normally on your OS?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194#issuecomment-605285010:40,update,update,40,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605285010,1,['update'],['update']
Deployability,"I often get these kind of error when installing manually. If you install Qutip with openmp once, the next time you install it without, you need to clean the old version or you get similar error. I never got this from a clean install. . Setting the `has_openmp` flag at installation is better, but I would let the precompiler set it instead of setup.py.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1334#issuecomment-670227091:37,install,installing,37,https://qutip.org,https://github.com/qutip/qutip/issues/1334#issuecomment-670227091,5,['install'],"['install', 'installation', 'installing']"
Deployability,"I only had `comtypes` installed for something else, but at least it's in conda and pip. Sadly, `win32com` is not in either repository.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/421#issuecomment-181716813:22,install,installed,22,https://qutip.org,https://github.com/qutip/qutip/pull/421#issuecomment-181716813,1,['install'],['installed']
Deployability,"I only have doubt about the 'other' form. Does that mean that issues cannot be open without using a template? Having the changelog in the PR is the best I believe. The file in qutip-doc can be undated at each release. A file in qutip could create a lot of conflict since each PR would have to add something at the end of 1 file and a lot of PR would be waiting on it. The same way we have good PR that are only waiting for a test to be added before merging. In the pull request template, I would mention the need for tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1198#issuecomment-602628987:209,release,release,209,https://qutip.org,https://github.com/qutip/qutip/pull/1198#issuecomment-602628987,1,['release'],['release']
Deployability,"I opened an issue https://github.com/scipy/scipy/issues/3424 for this, but it will probably not happen unless a PR mysteriously appears at the doorstep. Also consider that combinations of {linux, pc, mac} x {32 bit OS, 64 bit} x {small matrices (< 2^31 rows, cols, nnz), big matrices} will probably have to be tested somehow. Getting sparse matrix algorithms to work on all these combinations seems to have been a sticking point in the recent scipy release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/76#issuecomment-36465061:449,release,release,449,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36465061,1,['release'],['release']
Deployability,"I prefer 2 in for openmp, it is fixed at install. It could be in `setup.py` or in a cython file with conditional compilation. The mkl flag depends on numpy's blas python interface. Cython use of blas/lapack is independent of it. . (Yes, since this week, I did not know this existed before)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1282#issuecomment-638966604:41,install,install,41,https://qutip.org,https://github.com/qutip/qutip/pull/1282#issuecomment-638966604,1,['install'],['install']
Deployability,"I re-launched the Travis tests on all platforms. They pass for all besides Mac OS (similar error as for other PR). With `python setup.py install`, with `install` instead of `develop`, things seem to work. What it is unclear to me is why it reads that the QuTiP Version is `4.4.0.dev0+1a639d7a`, when I could not find this hash in here (or maybe I am confused). Now, after some tries with install and develop, I am on that version of qutip-dev. . To begin with, I am running the contents of the [development notebooks](https://github.com/qutip/qutip-notebooks/tree/master/development). Some comments below are relevant to the PR of the notebooks, https://github.com/qutip/qutip-notebooks/pull/71. * `development-qobjevo.ipynb`: Runs fine. ; * `development-qobjevo-adv.ipynb`: Runs fine. ; * `development-qobjevo-timing.ipynb`: Runs fine. * The notebook [development-qobjevo.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo.ipynb) could be re-adapted to be among other tutorials, with some title like ""Time-dependent `Qobj` with `QobjEvo`"". There could be much more commentary of the basics of `QobjEvo`. Some could be copy-pasted from the introductory comment in `qobjevo.py`. You are the best person to explain, with basic examples, of increasing complexity, what QobjEvo can do. Possibly taking a known physics problem, e.g., the damped harmonic oscillator with `mesolve`, could help the user. . * In [development-qobjevo.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo.ipynb), block 22 has the first check set to False, but this is both in the notebook I run locally and in the one online. So probably that's the expected behaviour. . In [development-qobjevo-adv.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo-adv.ipynb), block 20 has a comment that is an unfinished sentence. In general, I think that examples could be much more descriptive, with comments, about the",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/969#issuecomment-489565751:137,install,install,137,https://qutip.org,https://github.com/qutip/qutip/pull/969#issuecomment-489565751,3,['install'],['install']
Deployability,"I reactivated MKL, updated numpy to 1.22.0 and when running `import qutip.testing` I get the following error:. `Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\ProgramData\Miniconda3\lib\site-packages\qutip\__init__.py"", line 73, in <module>; (_blas_info() == ""OPENBLAS"" and platform.system() == 'Darwin'); File ""C:\ProgramData\Miniconda3\lib\site-packages\qutip\utilities.py"", line 430, in _blas_info; blas_info = config.blas_opt_info; AttributeError: module 'numpy.__config__' has no attribute 'blas_opt_info'`. Then as I wanted to provide my config I typed `import qutip` but it yielded the exact same error so I reverted it back to 1.20.3. QuTiP Version: 4.6.2; Numpy Version: 1.20.3; Scipy Version: 1.7.1; Cython Version: 0.29.25; Matplotlib Version: 3.5.0; Python Version: 3.9.5; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\ProgramData\Miniconda3\lib\site-packages\qutip. Why is it on OPENBLAS now?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750#issuecomment-1005876725:19,update,updated,19,https://qutip.org,https://github.com/qutip/qutip/issues/1750#issuecomment-1005876725,3,"['Install', 'update']","['Installation', 'Installed', 'updated']"
Deployability,"I realised I never replied to this. I suggested `2*rtol` in this case because the error propagation in this case would guarantee that this is always sufficient. For other tests, we can always design the test so that it's calculable what the error term should be. I'd say it's generally a good idea to have the tests be as tight as we can possibly make them without risking false-negatives on the results, because otherwise we're not properly testing that the parameters do what they say. Regardless, that test failure isn't due to any of my PRs - it's a pre-existing problem that we happened to get unlucky on this time round. It'll get fixed when I modify `test_mesolve.py`. Can we review this PR to get the ball rolling on getting all of the test refactoring considered?. Possible reviewers: @Ericgig, @BoxiLi, @nathanshammah",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249#issuecomment-628265133:714,rolling,rolling,714,https://qutip.org,https://github.com/qutip/qutip/pull/1249#issuecomment-628265133,1,['rolling'],['rolling']
Deployability,"I realised it was not necessary for me to include setuptools and wheel in the installation. I wonder if this is because setuptools is being taken from the system installation instead of the virtualenv? . Also, I noticed that requirements.txt does not include stuptools nor wheel. Should I include them?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1715#issuecomment-972959530:78,install,installation,78,https://qutip.org,https://github.com/qutip/qutip/pull/1715#issuecomment-972959530,2,['install'],['installation']
Deployability,"I rechecked the equations:; The stochastic integration has the general form:; ![image](https://user-images.githubusercontent.com/17770236/140782543-9d8ff092-b9cb-4b17-98e8-85ab0254b425.png); For `ssesolve`:; ![image](https://user-images.githubusercontent.com/17770236/140783379-72e48698-4f2d-4ebc-bfac-95630e8724b1.png). And for `smesolve`:; ![image](https://user-images.githubusercontent.com/17770236/140784174-e9fdb33b-2fee-4795-a93d-e7d1abe32ddd.png). The liouvillian use both the `sc_ops` and `c_ops` for collapse, but the `d_2` part only use `sc_ops`. In heterodyne detection, each `sc_ops` is split into 2 parts computed individually: ; ![image](https://user-images.githubusercontent.com/17770236/140784227-39e67d38-33bf-47c8-ab57-afd41c23afa6.png). `m_ops` for homodyne:; ![image](https://user-images.githubusercontent.com/17770236/140784715-a7861965-6b30-4a47-a7a6-e19d4dd8b430.png). `m_ops` for heterodyne:; ![image](https://user-images.githubusercontent.com/17770236/140784760-5adb2535-ff63-4b2d-bba8-b10b6422b5db.png). In both case the `dW`'s default is `1`. In the heterodyne case, the `sqrt(2)` is expected to be included inside `dW_factor` when it's length is the same as `m_ops`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1706#issuecomment-963395778:43,integrat,integration,43,https://qutip.org,https://github.com/qutip/qutip/issues/1706#issuecomment-963395778,1,['integrat'],['integration']
Deployability,"I report local tests failing on my MacOS 10.13.6 by running qutip.testing.run(). Tests fail for python 3.7 and 3.6 environments, if QuTiP 4.4. is installed in develop mode (openmp = True). ; Tests fail also for QuTiP 4.3.1 installed with conda. . ### py36; Broken test for python 3.6 with: (1) QuTiP 4.4-dev, with openmp =True and (2) conda install qutip, QuTiP 4.3.1: ; Error Message below: ; ``` ; Metrics: Trace dist. & Fidelity mixed/pure inequality ... ok ; Metrics: Check avg gate fidelities for random ... ; python(35852,0x7fff9757f380) malloc: *** error for object 0x7fe189168a10: incorrect checksum for freed object - object was probably modified after being freed. *** ; set a breakpoint in malloc_error_break to debug ; Abort trap: 6 ---------------------------------------------- ; ``` . Building the dev environment: ; ``` conda create --name qutip-dev-44-py36 ; source activate qutip-dev-44-py36 ; conda install python=3.6 cython numpy scipy nose jupyter matplotlib; python setup.py develop --with-openmp; ``` . ### py37; Broken test for python 3.7 with: (1) QuTiP 4.4-dev, with openmp =True and (2) conda install qutip, QuTiP 4.3.1. Error Message below: ; ``` ; qutip.tests.test_qobj.test_expect_exception ... ok Qobj data ... ok Qobj type ... ok Qobj Hermicity ... ok ; Qobj unitarity ... ok ; Qobj shape ... ok ; Qobj: multiplication w/ non-square qobj.dims ... ok ; Qobj addition ... ok ; Qobj subtraction ... ok ; Qobj multiplication ... ok ; Qobj division ... ok ; Qobj power ... ; python(35379,0x7fff9757f380) malloc: *** error for object 0x7fbf1089fa90: incorrect checksum for freed object - object was probably modified after being freed. *** ; set a breakpoint in malloc_error_break to debug ; Abort trap: 6 ; ``` . Building the dev environment: ; ``` conda create --name qutip-dev-44-py37 ; source activate qutip-dev-44-py37 ; conda install python=3.7 cython numpy scipy nose jupyter matplotlib; python setup.py develop --with-openmp```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-473772867:146,install,installed,146,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-473772867,6,['install'],"['install', 'installed']"
Deployability,I resolved the issue with setting the alpha for multiple sets of vectors and added tests for that (and for setting the alpha of points). I'm not going to add tests for Bloch3d now since that uses mayavi which looks like it might be a whole other testing rabbit hole. I will simply run some checks in a notebook manually tomorrow. I still need to update the docstring and look at what the docstring format changes are about. @xspronken @AGaliciaMartinez Reviews of my most recent commits welcomed.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1837#issuecomment-1093447511:346,update,update,346,https://qutip.org,https://github.com/qutip/qutip/pull/1837#issuecomment-1093447511,1,['update'],['update']
Deployability,I saw you merged #1219 to master but merged this one also. Should I also push it to 4.5.1 (another PR) or are we not including #1219 and #1215 in 4.5.1?; My process was to cherry-pick commits merged to master to this PR to then when this was ready to be 4.5.1 merge it to the branch 4.5.1 and release it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1215#issuecomment-613054510:293,release,release,293,https://qutip.org,https://github.com/qutip/qutip/pull/1215#issuecomment-613054510,1,['release'],['release']
Deployability,"I see @christian512, so maybe we can skip that. . With regards to the documentation, Sphinx can be a mess. I wrote some guidelines [here](https://github.com/nathanshammah/scikit-project/blob/master/5-docs.md). I think you could skip installing it properly and just fork the repo and modify; the [guide-qip.rst](https://github.com/qutip/qutip-doc/blob/master/guide/guide-qip.rst) file, adding some information on the visualization of quantum circuits using this LaTeX-based tool. It could be a standalone subsection for simplicity. `.rst` files are restructured text file very similar to markdown.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1187#issuecomment-602749277:233,install,installing,233,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-602749277,1,['install'],['installing']
Deployability,"I see the issue. I did not upload all my fixes for that issue. Just the change supporting jupyter. Will upload tonight. Sorry, too many repos to keep track of. . > On Feb 9, 2016, at 19:58, Alexander Pitchford notifications@github.com wrote:; > ; > Well, yesterday when helping said user, I installed a fresh Anaconda 32bit for winodws + mingw + libpython. Then I installed the latest github release of qutip. And still I got these issues.; > I could try to reproduce on a clean win7 virtual machine I have here?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/423#issuecomment-182179608:291,install,installed,291,https://qutip.org,https://github.com/qutip/qutip/issues/423#issuecomment-182179608,3,"['install', 'release']","['installed', 'release']"
Deployability,"I see the issue. The mcsolver has the correct output format. It is done that way so that if you change ntraj, the return values from the states does not change shape. If ntraj > 1 then the results are the same when grabbing states from a given trajectory. In the ntraj=1 case they are different. It is a straightforward fix. Thank you for pointing this out. As it turns out, the mcsolve_f90 function will be a separate installation starting from QuTiP 3.2, so it is best to use the normal mcsolve function.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/330#issuecomment-90332734:419,install,installation,419,https://qutip.org,https://github.com/qutip/qutip/issues/330#issuecomment-90332734,1,['install'],['installation']
Deployability,"I see this issue as well but with a different test (error came up with ptrace test). I think this is a larger py3.7 issue, some comments have come up in the mailing list too. In a py3.7 env I see malloc errors occasionally with the es solver in correlation_2op_1t calls as used here: https://github.com/gsteele13/gary-exploring-qutip/blob/master/Correlations.ipynb. QuTiP Version: 4.4.1; Numpy Version: 1.17.2; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.1; Python Version: 3.7.4; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1120#issuecomment-551924373:556,Install,Installed,556,https://qutip.org,https://github.com/qutip/qutip/issues/1120#issuecomment-551924373,1,['Install'],['Installed']
Deployability,I see. `propagator` performed better with a system of d=2^5 in a simple test. I better do some testing of even larger systems then before merging this. Any thoughts on why `propagator` might be slower also for small systems and short integration times? Some overhead related to parallelization? Thanks for the info.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/502#issuecomment-230108497:234,integrat,integration,234,https://qutip.org,https://github.com/qutip/qutip/pull/502#issuecomment-230108497,1,['integrat'],['integration']
Deployability,I should have opened a PR to update the qip_opt branch instead of the master.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1043#issuecomment-511327483:29,update,update,29,https://qutip.org,https://github.com/qutip/qutip/pull/1043#issuecomment-511327483,1,['update'],['update']
Deployability,"I spent some time looking into patching this last night, but it seems like it would require a complete overhaul of many parts of the code so not an easy fix unfortunately. Perhaps this is something to put on the todo/request list, because without this, most ML QIP research that I've been looking at would not be implementable (need around 10-20 qubits, just a 2 qubit QRAM already requires 11 working qubits).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/828#issuecomment-369116676:31,patch,patching,31,https://qutip.org,https://github.com/qutip/qutip/issues/828#issuecomment-369116676,1,['patch'],['patching']
Deployability,"I started patching documentation:; - Updated import from moved files (`from qutip.states` --> `from qutip.core.states`).; - Changes `Options` to `SolverOptions`.; - Commented some calls to function and method that do not exist anymore (`QobjEvo.to_list`). There are a lots of warning when building documentattion, but actual error seems to be limited to qip and HEOM changes that where not properly merged.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1850#issuecomment-1095498766:10,patch,patching,10,https://qutip.org,https://github.com/qutip/qutip/pull/1850#issuecomment-1095498766,2,"['Update', 'patch']","['Updated', 'patching']"
Deployability,"I started to look into pypi a while ago and plan to add qutip there before the next release. However qutip depends on a C compiler and optionally fortran compiler, and some changes in our setup.py file is required to get it to work with pip, so it hasn't been done yet. It's on the todo list though. As for homebrew, it doesn't seem to have many of the requirements that qutip needs, such as numpy and scipy etc. For some reason they are in a separate homebrew repository.. Without these it wouldn't make much sense to submit a qutip formula to the official homebrew repository.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/62#issuecomment-27491906:84,release,release,84,https://qutip.org,https://github.com/qutip/qutip/issues/62#issuecomment-27491906,1,['release'],['release']
Deployability,I suggest we merge it after the tests and the codeclimate issues are (partially) fixed. We can make an update PR for doc if necessary.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-651781870:103,update,update,103,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-651781870,1,['update'],['update']
Deployability,"I suspect it may already be getting fixed upstream as a recent merge on my fork completed testing in just about 10 minutes, quite on par with where it was. If it becomes important, we can use the new container infrastructure to start caching things like the Anaconda installer, but looking at the detailed breakdown, it didn't seem important enough to justify adding the extra complication. Anyway, I'm glad to be of service!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/360#issuecomment-130549152:267,install,installer,267,https://qutip.org,https://github.com/qutip/qutip/pull/360#issuecomment-130549152,1,['install'],['installer']
Deployability,"I suspect that because of pip's isolated builds, we have to specify `oldest-supported-numpy` in our `[build-system]` requirements (otherwise the isolated pip will do the wrong thing and build against the latest numpy, which might be newer than the installed numpy) but this prevents building with a different version of numpy installed. :/. **Update**: I'm not sure if the above is correct, but documentation builds are failing with `ValueError: numpy.ndarray size changed`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1735#issuecomment-989766192:248,install,installed,248,https://qutip.org,https://github.com/qutip/qutip/pull/1735#issuecomment-989766192,3,"['Update', 'install']","['Update', 'installed']"
Deployability,"I tested the PR #1747 patch against 4.6.2. It's working fine. Building against numpy 1.21.5, and building and passing tests with python3.10.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1720#issuecomment-1006101738:22,patch,patch,22,https://qutip.org,https://github.com/qutip/qutip/issues/1720#issuecomment-1006101738,1,['patch'],['patch']
Deployability,"I think I have found the problem and will submit a bugfix. The problem was a bug in sp_eigs: when selecting large eigenvalues the eigenvalue vectors is flip (left <-> right) but then later on still the highest (which has become the lowest) eigenvalues was extracted from the total list of eivenvalues... We should probably restructure the function sp_eigs a bit... right now it is trying to do a little bit too many things. At least it should be split into sp_eigs and dense_eigs. Thanks for finding and reporting the problem. If seen this in other problems, in addition to your bug report problem. please check if the following patch fixes it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/16#issuecomment-16150979:629,patch,patch,629,https://qutip.org,https://github.com/qutip/qutip/issues/16#issuecomment-16150979,1,['patch'],['patch']
Deployability,"I think I have tracked down the problem to this issue https://github.com/cvxgrp/cvxpy/issues/1159, we could patch it using dense matrices instead of sparse ones.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1422#issuecomment-794422644:108,patch,patch,108,https://qutip.org,https://github.com/qutip/qutip/issues/1422#issuecomment-794422644,1,['patch'],['patch']
Deployability,I think a micro release would be the right thing to do.; We could wait a week and see if anything else get reported though,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/905#issuecomment-407017611:16,release,release,16,https://qutip.org,https://github.com/qutip/qutip/issues/905#issuecomment-407017611,1,['release'],['release']
Deployability,"I think is is one of the errors that occurs when running qutip from within; the installation director.; Just cd to your home directory and all should be fine. Alex. On 8 May 2018 at 13:57, Shahnawaz Ahmed <notifications@github.com> wrote:. > Hi, could you please tell us how you installed QuTiP and which python are; > you using? Just type the following in the terminal; >; > which python; >; > To check how QuTiP was installed (if on Linux or Mac):; >; > pip freeze | grep ""qutip""; >; > If on windows, download Anaconda and install QuTiP from conda-forge with; >; > conda install -c conda-forge qutip; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/858#issuecomment-387393174>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AIxX7clOzLboC5wUH12kiohPXZ6DnmDgks5twZY7gaJpZM4T2T0k>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387490007:80,install,installation,80,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387490007,5,['install'],"['install', 'installation', 'installed']"
Deployability,"I think it is better to keep this on hold, and merge it after the upcoming release, also as my comments have not been addressed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1140#issuecomment-579635784:75,release,release,75,https://qutip.org,https://github.com/qutip/qutip/pull/1140#issuecomment-579635784,1,['release'],['release']
Deployability,"I think it might be a good idea to obsolete this pull request, and merge in #1465 instead, so we can use in for the next 4.6.0 release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429#issuecomment-801459634:127,release,release,127,https://qutip.org,https://github.com/qutip/qutip/pull/1429#issuecomment-801459634,1,['release'],['release']
Deployability,"I think it should be possible to do this within the pytest framework without touching the package `setup.py` or `MANIFEST`. [`pytest.fixture`](https://docs.pytest.org/en/stable/fixture.html#sharing-test-data) seems a natural choice for loading data. For file accessibility, [this](https://stackoverflow.com/questions/46019170/how-do-you-properly-integrate-unit-tests-for-file-parsing-with-pytest) might help. Porbably @jakelishman knows more about the natural way of doing this with pytest?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1291#issuecomment-655970508:346,integrat,integrate-unit-tests-for-file-parsing-with-pytest,346,https://qutip.org,https://github.com/qutip/qutip/pull/1291#issuecomment-655970508,1,['integrat'],['integrate-unit-tests-for-file-parsing-with-pytest']
Deployability,"I think it should work if lines 398 - 405 are replaced with this:. ```; if not args_new:; args_new = args; elif isinstance(args, dict):; args_new.update(args); else:; raise ValueError(""Time-dependent array format requires args to "" +; ""be a dictionary""); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/199#issuecomment-49743536:146,update,update,146,https://qutip.org,https://github.com/qutip/qutip/issues/199#issuecomment-49743536,1,['update'],['update']
Deployability,"I think it was indeed a version problem, but I can't tell exactly why it happened. Re-installing dependencies from scratch seems to have solved the issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2468#issuecomment-2186847059:86,install,installing,86,https://qutip.org,https://github.com/qutip/qutip/issues/2468#issuecomment-2186847059,1,['install'],['installing']
Deployability,"I think it would be great to have a fast implementation of tensor contraction. However, QuTiP has moved on since this PR and I think the right way to implement this now would be to add a new specialization to the data layer for tensor contraction (maybe something like einsum) and to implement that instead (or even just to re-implement methods for the new CSR representation). @IIAOPSW If you're up for giving that a try, that would be awesome. If not, I might close this PR and we can revisit it after QuTiP v5 alpha has been released. @IIAOPSW Separately, I've read through the code the PR, but I'd still like to get a high-level summary of the algorithm you're implementing (or a reference). Quite a lot of work has been done in optimizing these contractions in recent years, and it would be nice to implement a good algorithm in QuTiP.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/883#issuecomment-983852684:528,release,released,528,https://qutip.org,https://github.com/qutip/qutip/pull/883#issuecomment-983852684,1,['release'],['released']
Deployability,"I think it's okay for the integrator options to be described in the documentation for the integration -- it can't really go anywhere else. The solver documentation can then point to the documentation for the built-in integrators, and mention that it is possible for third-party packages to provide additional integrators.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1947#issuecomment-1174444894:26,integrat,integrator,26,https://qutip.org,https://github.com/qutip/qutip/pull/1947#issuecomment-1174444894,4,['integrat'],"['integration', 'integrator', 'integrators']"
Deployability,"I think that @Ericgig makes a good point though. I think we should make the default install from source compile with `-march=native`. I think in the majority of cases this will be the best option for users. However, we need someway to turn it off, so that the conda-forge build will be more portable, and for the use-case illustrated in #920. Ok, I am going to merge this now, while we think of a more complete solution.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/949#issuecomment-463692072:84,install,install,84,https://qutip.org,https://github.com/qutip/qutip/pull/949#issuecomment-463692072,1,['install'],['install']
Deployability,"I think that `qutip.testing` and the tests in CI are different. The former are in that file, the latter look at the instructions from [`.travis.yml`](https://github.com/qutip/qutip/blob/master/.travis.yml), which basically call `python setup.py install` (or `test`). Also looking at the Travis CI reports, it seems that they work fine. Locally, I'm getting tests to fail on my machine, with malloc or abort trap 6 errors every other time, although some time they pass (hence I opened #1160). It may be that they fail on my machine due to some mess with the gcc compiler.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1158#issuecomment-576002319:245,install,install,245,https://qutip.org,https://github.com/qutip/qutip/issues/1158#issuecomment-576002319,1,['install'],['install']
